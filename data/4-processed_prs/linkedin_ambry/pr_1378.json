{"pr_number": 1378, "pr_title": "Improve FailOnNotFound by accounting for disk down and cross-colo NotFound", "pr_createdAt": "2020-02-10T06:59:17Z", "pr_url": "https://github.com/linkedin/ambry/pull/1378", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0NTE2Ng==", "url": "https://github.com/linkedin/ambry/pull/1378#discussion_r379045166", "bodyText": "what if 2 Disk_Unavailable and 1 Deleted?", "author": "zzmao", "createdAt": "2020-02-13T18:37:22Z", "path": "ambry-router/src/test/java/com.github.ambry.router/GetBlobOperationTest.java", "diffHunk": "@@ -715,6 +716,34 @@ public void testErrorPrecedenceWithSpecialCase() throws Exception {\n     }\n   }\n \n+  /**\n+   * Test the case where originating dc returns 2 Disk_Unavailable and 1 Not_Found and rest replicas return Not_Found.", "originalCommit": "87949d10b95094e6470559b95b99ddd155ff4062", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIxMzkzOA==", "url": "https://github.com/linkedin/ambry/pull/1378#discussion_r379213938", "bodyText": "As long as (# of Disk_Unavailable + # of Not_Found) > (total replica count - success target), we consider it Not_Found", "author": "jsjtzyy", "createdAt": "2020-02-14T01:45:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0NTE2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzOTMxOA==", "url": "https://github.com/linkedin/ambry/pull/1378#discussion_r379139318", "bodyText": "I don't think we need this statement here. in processServerError method, it already returns AmbryUnavailable for Disk_Unavailable. All we need is to change TrackedRequestFinalState.fromRouterErrorCodeToFinalState method.", "author": "justinlin-linkedin", "createdAt": "2020-02-13T21:52:00Z", "path": "ambry-router/src/main/java/com.github.ambry.router/DeleteOperation.java", "diffHunk": "@@ -195,25 +195,33 @@ void handleResponse(ResponseInfo responseInfo, DeleteResponse deleteResponse) {\n               new RouterException(\"Received wrong response that is not for the corresponding request.\",\n                   RouterErrorCode.UnexpectedInternalError));\n         } else {\n-          ServerErrorCode getError = deleteResponse.getError();\n-          if (getError == ServerErrorCode.No_Error || getError == ServerErrorCode.Blob_Deleted) {\n+          ServerErrorCode serverError = deleteResponse.getError();\n+          if (serverError == ServerErrorCode.No_Error || serverError == ServerErrorCode.Blob_Deleted) {\n             operationTracker.onResponse(replica, TrackedRequestFinalState.SUCCESS);\n             if (RouterUtils.isRemoteReplica(routerConfig, replica)) {\n               logger.trace(\"Cross colo request successful for remote replica {} in {} \", replica.getDataNodeId(),\n                   replica.getDataNodeId().getDatacenterName());\n               routerMetrics.crossColoSuccessCount.inc();\n             }\n+          } else if (serverError == ServerErrorCode.Disk_Unavailable) {\n+            logger.trace(\"Replica {} returned Disk_Unavailable for a delete request with correlationId : {} \", replica,\n+                deleteRequest.getCorrelationId());\n+            operationTracker.onResponse(replica, TrackedRequestFinalState.DISK_DOWN);\n+            setOperationException(\n+                new RouterException(\"Server returned: \" + serverError, RouterErrorCode.AmbryUnavailable));\n+            routerMetrics.routerRequestErrorCount.inc();\n+            routerMetrics.getDataNodeBasedMetrics(replica.getDataNodeId()).deleteRequestErrorCount.inc();", "originalCommit": "87949d10b95094e6470559b95b99ddd155ff4062", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyMDQxOQ==", "url": "https://github.com/linkedin/ambry/pull/1378#discussion_r379220419", "bodyText": "processServerError indeed returns AmbryUnavailable. The reason I put these statements in else-if block is I need to skip onErrorResponse in which it sets TrackedRequestFinalState. Also, I cannot change fromRouterErrorCodeToFinalState directly because it cannot tell AmbryUnavailable is Disk_Unavailable or Replica_Unavailable. For latter one, the replica could be temporarily stopped and restarting it will bring intact data (blob still exists in that replica). Hence, I copied statements to this else-if block without changing logic in fromRouterErrorCodeToFinalState.", "author": "jsjtzyy", "createdAt": "2020-02-14T02:14:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzOTMxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyMjI0MQ==", "url": "https://github.com/linkedin/ambry/pull/1378#discussion_r379222241", "bodyText": "we are not restarting the replica in frontend. Since processServerError returns the same RouterErrorCode from ReplicaUnavailable and DiskUnavailable, then we treat them as the same error in the router code. I didn't see in any operation code that we treat these two errors differently.", "author": "justinlin-linkedin", "createdAt": "2020-02-14T02:23:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzOTMxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0MDA4MA==", "url": "https://github.com/linkedin/ambry/pull/1378#discussion_r379140080", "bodyText": "same as above.", "author": "justinlin-linkedin", "createdAt": "2020-02-13T21:53:35Z", "path": "ambry-router/src/main/java/com.github.ambry.router/GetBlobInfoOperation.java", "diffHunk": "@@ -296,16 +296,24 @@ private void processGetBlobInfoResponse(GetRequestInfo getRequestInfo, GetRespon\n           logger.trace(\"Replica  {} returned error {} with response correlationId {} \",\n               getRequestInfo.replicaId.getDataNodeId(), getError, getResponse.getCorrelationId());\n           RouterErrorCode routerErrorCode = processServerError(getError);\n-          if (getError == ServerErrorCode.Blob_Deleted || getError == ServerErrorCode.Blob_Expired\n-              || getError == ServerErrorCode.Blob_Authorization_Failure) {\n-            // this is a successful response and one that completes the operation regardless of whether the\n-            // success target has been reached or not.\n-            operationCompleted = true;\n+          if (getError == ServerErrorCode.Disk_Unavailable) {\n+            operationTracker.onResponse(getRequestInfo.replicaId, TrackedRequestFinalState.DISK_DOWN);\n+            setOperationException(new RouterException(\"Server returned: \" + getError, routerErrorCode));\n+            routerMetrics.routerRequestErrorCount.inc();\n+            routerMetrics.getDataNodeBasedMetrics(getRequestInfo.replicaId.getDataNodeId()).getBlobInfoRequestErrorCount\n+                .inc();", "originalCommit": "87949d10b95094e6470559b95b99ddd155ff4062", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0MDUzOQ==", "url": "https://github.com/linkedin/ambry/pull/1378#discussion_r379140539", "bodyText": "same as above", "author": "justinlin-linkedin", "createdAt": "2020-02-13T21:54:34Z", "path": "ambry-router/src/main/java/com.github.ambry.router/GetBlobOperation.java", "diffHunk": "@@ -939,17 +938,25 @@ private void processGetBlobResponse(GetRequestInfo getRequestInfo, GetResponse g\n           } else {\n             // process and set the most relevant exception.\n             RouterErrorCode routerErrorCode = processServerError(getError);\n-            if (getError == ServerErrorCode.Blob_Deleted || getError == ServerErrorCode.Blob_Expired\n-                || getError == ServerErrorCode.Blob_Authorization_Failure) {\n-              // this is a successful response and one that completes the operation regardless of whether the\n-              // success target has been reached or not.\n-              chunkCompleted = true;\n-              chunkException = buildChunkException(\"Server returned: \" + getError, routerErrorCode);\n+            if (getError == ServerErrorCode.Disk_Unavailable) {\n+              chunkOperationTracker.onResponse(getRequestInfo.replicaId, TrackedRequestFinalState.DISK_DOWN);\n+              setChunkException(buildChunkException(\"Server returned: \" + getError, routerErrorCode));\n+              routerMetrics.routerRequestErrorCount.inc();\n+              routerMetrics.getDataNodeBasedMetrics(\n+                  getRequestInfo.replicaId.getDataNodeId()).getRequestErrorCount.inc();", "originalCommit": "87949d10b95094e6470559b95b99ddd155ff4062", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0MTI4Mg==", "url": "https://github.com/linkedin/ambry/pull/1378#discussion_r379141282", "bodyText": "same as above", "author": "justinlin-linkedin", "createdAt": "2020-02-13T21:56:12Z", "path": "ambry-router/src/main/java/com.github.ambry.router/TtlUpdateOperation.java", "diffHunk": "@@ -188,26 +188,34 @@ void handleResponse(ResponseInfo responseInfo, TtlUpdateResponse ttlUpdateRespon\n               new RouterException(\"Received wrong response that is not for the corresponding request.\",\n                   RouterErrorCode.UnexpectedInternalError));\n         } else {\n-          ServerErrorCode getError = ttlUpdateResponse.getError();\n-          if (getError == ServerErrorCode.No_Error || getError == ServerErrorCode.Blob_Already_Updated) {\n+          ServerErrorCode serverError = ttlUpdateResponse.getError();\n+          if (serverError == ServerErrorCode.No_Error || serverError == ServerErrorCode.Blob_Already_Updated) {\n             operationTracker.onResponse(replica, TrackedRequestFinalState.SUCCESS);\n             if (RouterUtils.isRemoteReplica(routerConfig, replica)) {\n               LOGGER.trace(\"Cross colo request successful for remote replica {} in {} \", replica.getDataNodeId(),\n                   replica.getDataNodeId().getDatacenterName());\n               routerMetrics.crossColoSuccessCount.inc();\n             }\n+          } else if (serverError == ServerErrorCode.Disk_Unavailable) {\n+            LOGGER.debug(\n+                \"Replica {} returned Disk_Unavailable for a Ttl update request with response correlationId : {} \",\n+                replica.getDataNodeId(), ttlUpdateResponse.getCorrelationId());\n+            operationTracker.onResponse(replica, TrackedRequestFinalState.DISK_DOWN);\n+            setOperationException(\n+                new RouterException(\"Server returned: \" + serverError, RouterErrorCode.AmbryUnavailable));\n+            routerMetrics.getDataNodeBasedMetrics(replica.getDataNodeId()).ttlUpdateRequestErrorCount.inc();", "originalCommit": "87949d10b95094e6470559b95b99ddd155ff4062", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a21147bc8d59a1077874ff70224d4d96f16c16b9", "url": "https://github.com/linkedin/ambry/commit/a21147bc8d59a1077874ff70224d4d96f16c16b9", "message": "Improve FailOnNotFound by accounting for disk down and cross-colo NotFound\n\nCurrent operation tracker supports terminating when at least two\nNotFound occur in originating DC. Such strategy is not able to\nhandle edge case where originating DC replicas return Disk_Unavailable,\nDeleted and NotFound separately. Even though rest remote replicas\nall return NotFound, the operation still returns AmbryUnavailable\nwhich makes client keep retrying. This PR improve FailOnNotFound logic\nby accounting for number of Disk_Unavailable and NotFound across all\ndcs. It adds additional check in hasFailedOnNotFound to correctly return\n404 reminding client the blob is no longer present. This is helpful when\nclient attempts to delete some blobs which have expired and been compacted\nbut encounters Disk_Unavailable during delete operation.", "committedDate": "2020-02-18T21:45:05Z", "type": "commit"}, {"oid": "bf3f03a26969eceeaf1b8776d534c5361a5cbd49", "url": "https://github.com/linkedin/ambry/commit/bf3f03a26969eceeaf1b8776d534c5361a5cbd49", "message": "fix test failure", "committedDate": "2020-02-18T21:45:05Z", "type": "commit"}, {"oid": "717144ab908ec85a367f02568347771726f6dc8b", "url": "https://github.com/linkedin/ambry/commit/717144ab908ec85a367f02568347771726f6dc8b", "message": "make get operation adopt similar strategy", "committedDate": "2020-02-18T21:45:05Z", "type": "commit"}, {"oid": "5885cc7dc9e035b1e43f05ac1b691926b14dc325", "url": "https://github.com/linkedin/ambry/commit/5885cc7dc9e035b1e43f05ac1b691926b14dc325", "message": "improve test coverage", "committedDate": "2020-02-18T21:51:37Z", "type": "commit"}, {"oid": "5885cc7dc9e035b1e43f05ac1b691926b14dc325", "url": "https://github.com/linkedin/ambry/commit/5885cc7dc9e035b1e43f05ac1b691926b14dc325", "message": "improve test coverage", "committedDate": "2020-02-18T21:51:37Z", "type": "forcePushed"}]}