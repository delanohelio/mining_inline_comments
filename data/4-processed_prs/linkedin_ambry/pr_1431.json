{"pr_number": 1431, "pr_title": "Change query size to AzureCloudConfig.cosmosQueryBatchSize", "pr_createdAt": "2020-03-18T00:26:04Z", "pr_url": "https://github.com/linkedin/ambry/pull/1431", "timeline": [{"oid": "03dcf9fda51451f71caa30dbd1b29b7f3903d8c6", "url": "https://github.com/linkedin/ambry/commit/03dcf9fda51451f71caa30dbd1b29b7f3903d8c6", "message": "Change replication feed query size to AzureCloudConfig.cosmosQueryBatchSize from the hardcoded value.", "committedDate": "2020-03-18T00:22:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4NzQ1NA==", "url": "https://github.com/linkedin/ambry/pull/1431#discussion_r394087454", "bodyText": "Why is this called default CacheSize?  Can it be overridden?", "author": "lightningrob", "createdAt": "2020-03-18T03:27:30Z", "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/azure/CosmosChangeFeedBasedReplicationFeed.java", "diffHunk": "@@ -140,9 +140,11 @@ boolean isExpired() {\n    * Constructor to create a {@link CosmosChangeFeedBasedReplicationFeed} object.\n    * @param cosmosDataAccessor {@link CosmosDataAccessor} object.\n    * @param azureMetrics{@link {@link AzureMetrics} object.\n+   * @param changeFeedBatchSize batch size for each change feed request.\n    */\n-  public CosmosChangeFeedBasedReplicationFeed(CosmosDataAccessor cosmosDataAccessor, AzureMetrics azureMetrics) {\n-    this.defaultCacheSize = AzureCloudDestination.getFindSinceQueryLimit();\n+  public CosmosChangeFeedBasedReplicationFeed(CosmosDataAccessor cosmosDataAccessor, AzureMetrics azureMetrics,\n+      int changeFeedBatchSize) {\n+    this.defaultCacheSize = changeFeedBatchSize;", "originalCommit": "03dcf9fda51451f71caa30dbd1b29b7f3903d8c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4OTQ3NA==", "url": "https://github.com/linkedin/ambry/pull/1431#discussion_r394589474", "bodyText": "Its true that it cannot be overridden in the current state of the code.\nI named this variable \"default\" because in future we might want a feature to tune change feed to fetch more aggressively based on if we are just catching up on the replica tokens, and the blobs are already present.", "author": "ankagrawal", "createdAt": "2020-03-18T19:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4NzQ1NA=="}], "type": "inlineReview"}]}