{"pr_number": 1465, "pr_title": "Bugfixes and noisy error suppression", "pr_createdAt": "2020-04-09T05:36:14Z", "pr_url": "https://github.com/linkedin/ambry/pull/1465", "timeline": [{"oid": "cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2", "url": "https://github.com/linkedin/ambry/commit/cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2", "message": "Bugfixes and noisy error suppression", "committedDate": "2020-04-09T05:34:44Z", "type": "commit"}, {"oid": "f39db99fd55cdd84af90f694a6f9aac84cbfb396", "url": "https://github.com/linkedin/ambry/commit/f39db99fd55cdd84af90f694a6f9aac84cbfb396", "message": "Minor: lower verbose log message to debug", "committedDate": "2020-04-09T17:09:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMyMjUxMQ==", "url": "https://github.com/linkedin/ambry/pull/1465#discussion_r406322511", "bodyText": "nit: better say Local store not started for remote replica", "author": "jsjtzyy", "createdAt": "2020-04-09T16:21:17Z", "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -457,14 +461,19 @@ public void replicate() {\n               replicationMetrics.updateLagMetricForRemoteReplica(remoteReplicaInfo,\n                   exchangeMetadataResponse.localLagFromRemoteInBytes);\n             } catch (Exception e) {\n-              logger.error(\n-                  \"Remote node: \" + remoteNode + \" Thread name: \" + threadName + \" Remote replica: \" + remoteReplicaInfo\n-                      .getReplicaId(), e);\n-              replicationMetrics.updateLocalStoreError(remoteReplicaInfo.getReplicaId());\n-              responseHandler.onEvent(remoteReplicaInfo.getReplicaId(), e);\n-              ExchangeMetadataResponse exchangeMetadataResponse =\n-                  new ExchangeMetadataResponse(ServerErrorCode.Unknown_Error);\n-              exchangeMetadataResponseList.add(exchangeMetadataResponse);\n+              if (e instanceof StoreException\n+                  && ((StoreException) e).getErrorCode() == StoreErrorCodes.Store_Not_Started) {\n+                // Must have just been stopped, just skip it and move on.\n+                logger.info(\"Store not started for remote replica: {}\", remoteReplicaInfo.getReplicaId());", "originalCommit": "cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNDk1Ng==", "url": "https://github.com/linkedin/ambry/pull/1465#discussion_r406334956", "bodyText": "eplicationMetrics.updateLocalStoreError(remoteReplicaInfo.getReplicaId());\nExchangeMetadataResponse exchangeMetadataResponse =\n                    new ExchangeMetadataResponse(ServerErrorCode.Unknown_Error);\nexchangeMetadataResponseList.add(exchangeMetadataResponse);\n\nThese lines are supposed to be in the if block as well. Otherwise,  exchangeMetadataResponse has less elements than replicasToReplicatePerNode and IllegalArgumentException will be thrown at the beginning of fixMissingStoreKeys.", "author": "jsjtzyy", "createdAt": "2020-04-09T16:41:29Z", "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -457,14 +461,19 @@ public void replicate() {\n               replicationMetrics.updateLagMetricForRemoteReplica(remoteReplicaInfo,\n                   exchangeMetadataResponse.localLagFromRemoteInBytes);\n             } catch (Exception e) {\n-              logger.error(\n-                  \"Remote node: \" + remoteNode + \" Thread name: \" + threadName + \" Remote replica: \" + remoteReplicaInfo\n-                      .getReplicaId(), e);\n-              replicationMetrics.updateLocalStoreError(remoteReplicaInfo.getReplicaId());\n-              responseHandler.onEvent(remoteReplicaInfo.getReplicaId(), e);\n-              ExchangeMetadataResponse exchangeMetadataResponse =\n-                  new ExchangeMetadataResponse(ServerErrorCode.Unknown_Error);\n-              exchangeMetadataResponseList.add(exchangeMetadataResponse);\n+              if (e instanceof StoreException\n+                  && ((StoreException) e).getErrorCode() == StoreErrorCodes.Store_Not_Started) {\n+                // Must have just been stopped, just skip it and move on.\n+                logger.info(\"Store not started for remote replica: {}\", remoteReplicaInfo.getReplicaId());\n+              } else {\n+                logger.error(\"Remote node: {} Thread name: {} Remote replica: {}\", remoteNode, threadName,\n+                    remoteReplicaInfo.getReplicaId(), e);\n+                replicationMetrics.updateLocalStoreError(remoteReplicaInfo.getReplicaId());\n+                responseHandler.onEvent(remoteReplicaInfo.getReplicaId(), e);\n+                ExchangeMetadataResponse exchangeMetadataResponse =\n+                    new ExchangeMetadataResponse(ServerErrorCode.Unknown_Error);\n+                exchangeMetadataResponseList.add(exchangeMetadataResponse);", "originalCommit": "cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3MTM1Mw==", "url": "https://github.com/linkedin/ambry/pull/1465#discussion_r406371353", "bodyText": "Good catch.  I will add the ExchangeMetadataResponse both here and in the previous line where I skip if store is not started.  But do I need to call updateLocalStoreError() in this case?\nAlso, should we use Unknown_Error or add a new one like Store_Stopped?  Or perhaps use an existing one like Temporarily_Disabled?", "author": "lightningrob", "createdAt": "2020-04-09T17:45:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNDk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3NDg0OQ==", "url": "https://github.com/linkedin/ambry/pull/1465#discussion_r406374849", "bodyText": "Yeah, I think updateLocalStoreError() is optional in this case.  For server error, we can reuse the existing one Temporarily_Disabled.", "author": "jsjtzyy", "createdAt": "2020-04-09T17:51:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNDk1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM0NDY4OQ==", "url": "https://github.com/linkedin/ambry/pull/1465#discussion_r406344689", "bodyText": "I wonder in which case PUT is not found when updating Ttl for certain key. And it might be worth a warn here.", "author": "jsjtzyy", "createdAt": "2020-04-09T16:58:07Z", "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreStats.java", "diffHunk": "@@ -550,10 +550,15 @@ private void addPutEntriesForDelete(long indexSegmentStartOffset, List<IndexEntr\n    */\n   private void updateExpiryTimeForAllPuts(List<IndexEntry> indexEntries) throws StoreException {\n     for (IndexEntry entry : indexEntries) {\n-      if (!entry.getValue().isFlagSet(IndexValue.Flags.Ttl_Update_Index) && !entry.getValue()\n-          .isFlagSet(IndexValue.Flags.Delete_Index)) {\n-        long expiryTimeMs = index.findKey(entry.getKey()).getExpiresAtMs();\n-        entry.getValue().setExpiresAtMs(expiryTimeMs);\n+      IndexValue entryValue = entry.getValue();\n+      if (!entryValue.isFlagSet(IndexValue.Flags.Ttl_Update_Index) && !entryValue.isFlagSet(\n+          IndexValue.Flags.Delete_Index)) {\n+        IndexValue indexValue = index.findKey(entry.getKey());\n+        if (indexValue != null) {\n+          entryValue.setExpiresAtMs(indexValue.getExpiresAtMs());\n+        } else {\n+          logger.info(\"No index value found for {}\", entry.getKey().getID());", "originalCommit": "cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5c31b45812742c3b079f5eca05af925ecace1026", "url": "https://github.com/linkedin/ambry/commit/5c31b45812742c3b079f5eca05af925ecace1026", "message": "Address Yingyi's review comments.", "committedDate": "2020-04-09T17:53:26Z", "type": "commit"}]}