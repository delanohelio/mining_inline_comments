{"pr_number": 1545, "pr_title": "Refactor CloudStorageCompactor ", "pr_createdAt": "2020-06-01T20:57:30Z", "pr_url": "https://github.com/linkedin/ambry/pull/1545", "timeline": [{"oid": "396662cdd5b3df1094a5bbf68d08669a275f164c", "url": "https://github.com/linkedin/ambry/commit/396662cdd5b3df1094a5bbf68d08669a275f164c", "message": "Refactor CloudStorageCompactor, move code from there and AzureCloudDestination to AzureStorageCompactor", "committedDate": "2020-06-01T20:47:34Z", "type": "commit"}, {"oid": "0993c871aabdcad42a4c171b0359da05bf6a50a0", "url": "https://github.com/linkedin/ambry/commit/0993c871aabdcad42a4c171b0359da05bf6a50a0", "message": "Fix compile error in compaction tool.", "committedDate": "2020-06-01T22:20:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyMjM2Nw==", "url": "https://github.com/linkedin/ambry/pull/1545#discussion_r433522367", "bodyText": "Test cases here moved from AzureCloudDestinationTest.", "author": "lightningrob", "createdAt": "2020-06-01T22:25:55Z", "path": "ambry-cloud/src/test/java/com/github/ambry/cloud/azure/AzureStorageCompactorTest.java", "diffHunk": "@@ -0,0 +1,216 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.cloud.azure;\n+\n+import com.azure.core.http.rest.Response;\n+import com.azure.storage.blob.BlobServiceClient;\n+import com.azure.storage.blob.batch.BlobBatch;\n+import com.azure.storage.blob.batch.BlobBatchClient;\n+import com.azure.storage.blob.models.BlobErrorCode;\n+import com.azure.storage.blob.models.BlobStorageException;\n+import com.codahale.metrics.MetricRegistry;\n+import com.github.ambry.cloud.CloudBlobMetadata;\n+import com.github.ambry.cloud.CloudStorageException;\n+import com.github.ambry.cloud.VcrMetrics;\n+import com.github.ambry.clustermap.MockClusterMap;\n+import com.github.ambry.clustermap.MockPartitionId;\n+import com.github.ambry.clustermap.PartitionId;\n+import com.github.ambry.commons.BlobId;\n+import com.github.ambry.config.CloudConfig;\n+import com.github.ambry.config.VerifiableProperties;\n+import com.github.ambry.utils.Utils;\n+import com.microsoft.azure.cosmosdb.Document;\n+import com.microsoft.azure.cosmosdb.FeedOptions;\n+import com.microsoft.azure.cosmosdb.FeedResponse;\n+import com.microsoft.azure.cosmosdb.RequestOptions;\n+import com.microsoft.azure.cosmosdb.ResourceResponse;\n+import com.microsoft.azure.cosmosdb.SqlQuerySpec;\n+import com.microsoft.azure.cosmosdb.StoredProcedureResponse;\n+import com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Properties;\n+import org.apache.commons.codec.binary.Base64;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import rx.Observable;\n+\n+import static com.github.ambry.cloud.azure.AzureTestUtils.*;\n+import static com.github.ambry.commons.BlobId.*;\n+import static org.junit.Assert.*;\n+import static org.mockito.ArgumentMatchers.*;\n+import static org.mockito.BDDMockito.*;\n+\n+\n+/** Test cases for {@link AzureStorageCompactor} */\n+@RunWith(MockitoJUnitRunner.class)\n+public class AzureStorageCompactorTest {", "originalCommit": "0993c871aabdcad42a4c171b0359da05bf6a50a0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyMjg5Mg==", "url": "https://github.com/linkedin/ambry/pull/1545#discussion_r433522892", "bodyText": "Code in this class was moved from CloudStorageCompactor and AzureCloudDestination.", "author": "lightningrob", "createdAt": "2020-06-01T22:27:30Z", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureStorageCompactor.java", "diffHunk": "@@ -0,0 +1,273 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.cloud.azure;\n+\n+import com.github.ambry.cloud.CloudBlobMetadata;\n+import com.github.ambry.cloud.CloudRequestAgent;\n+import com.github.ambry.cloud.CloudStorageException;\n+import com.github.ambry.cloud.VcrMetrics;\n+import com.github.ambry.config.CloudConfig;\n+import com.microsoft.azure.cosmosdb.DocumentClientException;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+public class AzureStorageCompactor {\n+  private static final Logger logger = LoggerFactory.getLogger(AzureStorageCompactor.class);\n+  private final AzureBlobDataAccessor azureBlobDataAccessor;\n+  private final CosmosDataAccessor cosmosDataAccessor;\n+  private final int queryLimit;\n+  private final int queryBucketDays;\n+  private final int lookbackDays;\n+  private final long retentionPeriodMs;\n+  private final long compactionTimeLimitMs;\n+  private final VcrMetrics vcrMetrics;\n+  private final AzureMetrics azureMetrics;\n+  private final CloudRequestAgent requestAgent;\n+  private final AtomicBoolean shuttingDown = new AtomicBoolean(false);\n+\n+  /**\n+   * Public constructor.\n+   * @param azureBlobDataAccessor\n+   * @param cosmosDataAccessor\n+   * @param cloudConfig\n+   * @param vcrMetrics the metrics to update.\n+   */\n+  public AzureStorageCompactor(AzureBlobDataAccessor azureBlobDataAccessor, CosmosDataAccessor cosmosDataAccessor,", "originalCommit": "0993c871aabdcad42a4c171b0359da05bf6a50a0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "59874f9b838c128cedd1efeddb024a9f89418e09", "url": "https://github.com/linkedin/ambry/commit/59874f9b838c128cedd1efeddb024a9f89418e09", "message": "Fix mockito warning", "committedDate": "2020-06-01T22:32:35Z", "type": "commit"}, {"oid": "968cd25a84db3d6b68c1d80e74378857e9dd31b9", "url": "https://github.com/linkedin/ambry/commit/968cd25a84db3d6b68c1d80e74378857e9dd31b9", "message": "Merge branch 'master' of github.com:linkedin/ambry into cloud-compaction-refactor", "committedDate": "2020-06-02T01:49:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA1OTc1NQ==", "url": "https://github.com/linkedin/ambry/pull/1545#discussion_r434059755", "bodyText": "Unused imports?", "author": "ankagrawal", "createdAt": "2020-06-02T17:46:18Z", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureCloudDestination.java", "diffHunk": "@@ -36,13 +39,14 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n-import java.net.HttpURLConnection;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.Properties;\n+import java.util.Set;\n import java.util.concurrent.TimeUnit;", "originalCommit": "59874f9b838c128cedd1efeddb024a9f89418e09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0bf3e340df5d0fac5cb5e5488c38c3fdecac55d8", "url": "https://github.com/linkedin/ambry/commit/0bf3e340df5d0fac5cb5e5488c38c3fdecac55d8", "message": "Remove unused imports.\nIncrease compaction startup delay and make configurable.", "committedDate": "2020-06-02T22:03:58Z", "type": "commit"}]}