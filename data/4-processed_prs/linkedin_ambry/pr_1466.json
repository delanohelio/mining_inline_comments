{"pr_number": 1466, "pr_title": "Treat 'SSLEngine closed already' as a client termination exception.", "pr_createdAt": "2020-04-09T16:12:42Z", "pr_url": "https://github.com/linkedin/ambry/pull/1466", "timeline": [{"oid": "4e1610ceb3597fd398cd6fdbd6db38cd1a212c80", "url": "https://github.com/linkedin/ambry/commit/4e1610ceb3597fd398cd6fdbd6db38cd1a212c80", "message": "Treat 'SSLEngine closed already' as a client termination exception.\n\nWhen clients close the connection from their side, the router may\nstill be delivering data. When using SSL, the write call in\nNettyResponseChannel may encounter an exception indicating the SSLEngine\nhas already been closed, which can happen when the connection is in the\nprocess of being closed.\n\nThis change treats such exceptions as client-side connection\nterminations so they will not be logged so verbosely. See\nNettyResponseChannel::log for how Utils::isPossibleClientTermination\nis used.", "committedDate": "2020-04-09T16:12:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1OTE2NA==", "url": "https://github.com/linkedin/ambry/pull/1466#discussion_r406359164", "bodyText": "Actually SSLException is an IOException, so we don't have to do this if-else statement.", "author": "justinlin-linkedin", "createdAt": "2020-04-09T17:23:40Z", "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "diffHunk": "@@ -1026,8 +1030,14 @@ public static void shutDownExecutorService(ExecutorService executorService, long\n    * @return {@code true} this cause indicates a possible early termination from the client. {@code false} otherwise.\n    */\n   public static boolean isPossibleClientTermination(Throwable cause) {\n-    return cause instanceof IOException && (CLIENT_RESET_EXCEPTION_MSG.equals(cause.getMessage())\n-        || CLIENT_BROKEN_PIPE_EXCEPTION_MSG.equals(cause.getMessage()));\n+    if (cause instanceof SSLException) {\n+      return SSL_ENGINE_CLOSED_EXCEPTION_MSG.equals(cause.getMessage());", "originalCommit": "4e1610ceb3597fd398cd6fdbd6db38cd1a212c80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2MTIxMw==", "url": "https://github.com/linkedin/ambry/pull/1466#discussion_r406361213", "bodyText": "That is true, it is an IOException. I will simplify this code block by just checking the message. The one thing we lose out on by doing that is if there is a rogue IOException that is not an SSLException with the same message, but that is not likely (and we may want to catch it anyways).", "author": "cgtz", "createdAt": "2020-04-09T17:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1OTE2NA=="}], "type": "inlineReview"}, {"oid": "c0103810e6bb535ae45f269e8df1ff37b2a62e1e", "url": "https://github.com/linkedin/ambry/commit/c0103810e6bb535ae45f269e8df1ff37b2a62e1e", "message": "Simplify method", "committedDate": "2020-04-09T17:32:34Z", "type": "commit"}]}