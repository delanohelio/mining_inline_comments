{"pr_number": 1574, "pr_title": "Mute ERROR message caused by replication of deprecated container and change log level", "pr_createdAt": "2020-06-23T05:25:24Z", "pr_url": "https://github.com/linkedin/ambry/pull/1574", "timeline": [{"oid": "59abb40efad1c3d85e251aca3b757b78730d25d9", "url": "https://github.com/linkedin/ambry/commit/59abb40efad1c3d85e251aca3b757b78730d25d9", "message": "Mute exception caused by replication of deprecated container", "committedDate": "2020-06-23T05:22:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzNDQ4Nw==", "url": "https://github.com/linkedin/ambry/pull/1574#discussion_r444334487", "bodyText": "Is there a unit test for this?", "author": "jsjtzyy", "createdAt": "2020-06-23T15:59:08Z", "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -741,6 +741,10 @@ private void processReplicaMetadataResponse(Set<MessageInfo> missingRemoteStoreM\n       } else {\n         // the key is present in the local store. Mark it for deletion if it is deleted in the remote store and not\n         // deleted yet locally\n+        // if the blob is from deprecated container, then nothing needs to be done.\n+        if (skipPredicate != null && skipPredicate.test(messageInfo)) {\n+          continue;\n+        }", "originalCommit": "59abb40efad1c3d85e251aca3b757b78730d25d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzMjM2MQ==", "url": "https://github.com/linkedin/ambry/pull/1574#discussion_r444632361", "bodyText": "Added more test cases to cover this.", "author": "SophieGuo410", "createdAt": "2020-06-24T04:04:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzNDQ4Nw=="}], "type": "inlineReview"}, {"oid": "3832b94286df7ed5d9538c280b788a162f5a21e6", "url": "https://github.com/linkedin/ambry/commit/3832b94286df7ed5d9538c280b788a162f5a21e6", "message": "increase test coverage", "committedDate": "2020-06-23T23:37:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODAwMw==", "url": "https://github.com/linkedin/ambry/pull/1574#discussion_r444638003", "bodyText": "I still can't wrap my head around the exception findKey throws. How does it happen?\nIf we are here at line 745, then the local key is not missing from the local store. But if we move on to findKey, it throws an exception about not able to find it? Does this mean the key is compacted between?", "author": "justinlin-linkedin", "createdAt": "2020-06-24T04:30:20Z", "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -741,6 +741,10 @@ private void processReplicaMetadataResponse(Set<MessageInfo> missingRemoteStoreM\n       } else {\n         // the key is present in the local store. Mark it for deletion if it is deleted in the remote store and not\n         // deleted yet locally\n+        // if the blob is from deprecated container, then nothing needs to be done.\n+        if (skipPredicate != null && skipPredicate.test(messageInfo)) {", "originalCommit": "3832b94286df7ed5d9538c280b788a162f5a21e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NzE3NA==", "url": "https://github.com/linkedin/ambry/pull/1574#discussion_r444647174", "bodyText": "I think the messageInfo is coming from replicaMetadataResponseInfo which stands for \"the replica metadata response from the remote store\". And during replication the deprecated containers won't be added in the missingRemoteStoreMessages list, so it will jump into line 741 no matter the local store has the key or not. And let's say the local store key has been compacted already, and for it's peer replica still have this key, then it will move on to findKey and throw exception. so in this situation, I use the skipPredicate to bypass the below procedure.", "author": "SophieGuo410", "createdAt": "2020-06-24T05:09:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODAwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MDcxMA==", "url": "https://github.com/linkedin/ambry/pull/1574#discussion_r445060710", "bodyText": "that makes sense.", "author": "justinlin-linkedin", "createdAt": "2020-06-24T17:37:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODAwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNzM2NQ==", "url": "https://github.com/linkedin/ambry/pull/1574#discussion_r444637365", "bodyText": "can be removed", "author": "jsjtzyy", "createdAt": "2020-06-24T04:27:29Z", "path": "ambry-replication/src/test/java/com/github/ambry/replication/ReplicationTest.java", "diffHunk": "@@ -108,6 +108,7 @@\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.junit.runners.Parameterized;\n+import org.mockito.Mock;", "originalCommit": "3832b94286df7ed5d9538c280b788a162f5a21e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzODI0Nw==", "url": "https://github.com/linkedin/ambry/pull/1574#discussion_r444638247", "bodyText": "minor:  checkSet is never used, consider removing it?  (Also, format this file please)", "author": "jsjtzyy", "createdAt": "2020-06-24T04:31:30Z", "path": "ambry-replication/src/test/java/com/github/ambry/replication/ReplicationTest.java", "diffHunk": "@@ -1417,6 +1418,9 @@ public void blockDeprecatedContainerReplicationTest() throws Exception {\n       }\n       Set<MessageInfo> remoteMissingStoreKeys = replicaThread.getMissingStoreMessages(replicaMetadataResponseInfo, remoteNode, remoteReplicaInfo);\n       assertEquals(\"All DELETE_IN_PROGRESS blobs qualified with retention time should be skipped during replication\", 0, remoteMissingStoreKeys.size());\n+      Map<StoreKey, StoreKey> remoteKeyToLocalKeyMap = replicaThread.batchConvertReplicaMetadataResponseKeys(response);\n+      replicaThread.processReplicaMetadataResponse(remoteMissingStoreKeys, replicaMetadataResponseInfo, remoteReplicaInfo,\n+          remoteNode, remoteKeyToLocalKeyMap);", "originalCommit": "3832b94286df7ed5d9538c280b788a162f5a21e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}