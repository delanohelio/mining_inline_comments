{"pr_number": 1719, "pr_title": "[Content Encoding] Support serialize for new version of blobProperty", "pr_createdAt": "2020-12-08T17:11:52Z", "pr_url": "https://github.com/linkedin/ambry/pull/1719", "timeline": [{"oid": "d5c293d96e50114e95e02bd120e67695a07eee3c", "url": "https://github.com/linkedin/ambry/commit/d5c293d96e50114e95e02bd120e67695a07eee3c", "message": "[Content Encoding] Support serialize for new version of blobProperty", "committedDate": "2020-12-08T17:54:10Z", "type": "forcePushed"}, {"oid": "1f916b2ad457f7c08df827f47f821259382fba63", "url": "https://github.com/linkedin/ambry/commit/1f916b2ad457f7c08df827f47f821259382fba63", "message": "[Content Encoding] Support serialize for new version of blobProperty", "committedDate": "2020-12-08T17:54:54Z", "type": "forcePushed"}, {"oid": "849812bbf5865dee433d22fd75258df62422d2f4", "url": "https://github.com/linkedin/ambry/commit/849812bbf5865dee433d22fd75258df62422d2f4", "message": "[Content Encoding] Support serialize for new version of blobProperty", "committedDate": "2020-12-08T18:48:05Z", "type": "forcePushed"}, {"oid": "fc0e92595f96542d4d06098a01e284f300a5aadf", "url": "https://github.com/linkedin/ambry/commit/fc0e92595f96542d4d06098a01e284f300a5aadf", "message": "[Content Encoding] Support serialize for new version of blobProperty", "committedDate": "2020-12-10T04:55:16Z", "type": "forcePushed"}, {"oid": "cfcaefda601834d9c9f7fcc4a5465c3427c40407", "url": "https://github.com/linkedin/ambry/commit/cfcaefda601834d9c9f7fcc4a5465c3427c40407", "message": "[Content Encoding] Support serialize for new version of blobProperty", "committedDate": "2020-12-10T05:46:31Z", "type": "commit"}, {"oid": "cfcaefda601834d9c9f7fcc4a5465c3427c40407", "url": "https://github.com/linkedin/ambry/commit/cfcaefda601834d9c9f7fcc4a5465c3427c40407", "message": "[Content Encoding] Support serialize for new version of blobProperty", "committedDate": "2020-12-10T05:46:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NDI4Mw==", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539874283", "bodyText": "minor: looks like we don't have unit test that version = 4 but either contentEncoding or filename is null.", "author": "jsjtzyy", "createdAt": "2020-12-10T06:09:48Z", "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/BlobPropertiesSerDe.java", "diffHunk": "@@ -60,22 +62,22 @@ public static BlobProperties getBlobPropertiesFromStream(DataInputStream stream)\n     short accountId = version > VERSION_1 ? stream.readShort() : Account.UNKNOWN_ACCOUNT_ID;\n     short containerId = version > VERSION_1 ? stream.readShort() : Container.UNKNOWN_CONTAINER_ID;\n     boolean isEncrypted = version > VERSION_2 && stream.readByte() == (byte) 1;\n-    String contentEncoding = version > VERSION_3 ? Utils.readIntString(stream) : null;\n-    String filename = version > VERSION_3 ? Utils.readIntString(stream) : null;\n+    String contentEncoding = version > VERSION_3 ? Utils.readNullableIntString(stream) : null;\n+    String filename = version > VERSION_3 ? Utils.readNullableIntString(stream) : null;", "originalCommit": "cfcaefda601834d9c9f7fcc4a5465c3427c40407", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkzMjg2Ng==", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539932866", "bodyText": "I've added an unit test in BlobPropertyTest which set contentEncoding and filename is null.", "author": "SophieGuo410", "createdAt": "2020-12-10T07:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NDI4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NTgxOA==", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539875818", "bodyText": "nit: java doc", "author": "jsjtzyy", "createdAt": "2020-12-10T06:11:45Z", "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "diffHunk": "@@ -149,6 +149,15 @@ public static String readIntString(DataInputStream input) throws IOException {\n     return readIntString(input, StandardCharsets.UTF_8);\n   }\n \n+  public static String readNullableIntString(DataInputStream input) throws IOException {", "originalCommit": "cfcaefda601834d9c9f7fcc4a5465c3427c40407", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkzMjk0Mw==", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539932943", "bodyText": "Updated.", "author": "SophieGuo410", "createdAt": "2020-12-10T07:21:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NTgxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NzE0OA==", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539877148", "bodyText": "return tmp.isEmpty() ? null : tmp;", "author": "jsjtzyy", "createdAt": "2020-12-10T06:13:27Z", "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "diffHunk": "@@ -149,6 +149,15 @@ public static String readIntString(DataInputStream input) throws IOException {\n     return readIntString(input, StandardCharsets.UTF_8);\n   }\n \n+  public static String readNullableIntString(DataInputStream input) throws IOException {\n+    String tmp = readIntString(input, StandardCharsets.UTF_8);\n+    if (tmp.length() == 0) {\n+      return null;\n+    } else {\n+      return tmp;\n+    }", "originalCommit": "cfcaefda601834d9c9f7fcc4a5465c3427c40407", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkzMzAyNA==", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539933024", "bodyText": "Thx, Updated.", "author": "SophieGuo410", "createdAt": "2020-12-10T07:22:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NzE0OA=="}], "type": "inlineReview"}, {"oid": "9469f2e5c8bedc9e39c646cb61874c2abcc6136b", "url": "https://github.com/linkedin/ambry/commit/9469f2e5c8bedc9e39c646cb61874c2abcc6136b", "message": "Address Yingyi's comments", "committedDate": "2020-12-10T07:19:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1NDcyMg==", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r540354722", "bodyText": "is this println intended?", "author": "cgtz", "createdAt": "2020-12-10T17:23:00Z", "path": "ambry-messageformat/src/test/java/com/github/ambry/messageformat/BlobPropertiesTest.java", "diffHunk": "@@ -84,10 +84,19 @@ public void basicTest() throws IOException {\n     String filenameToExpect = filename;\n \n     BlobProperties blobProperties = new BlobProperties(blobSize, serviceId, null, null, false, Utils.Infinite_Time,\n+        SystemTime.getInstance().milliseconds(), accountId, containerId, isEncrypted, externalAssetTag, null, null);\n+    System.out.println(blobProperties.toString()); // Provide example of BlobProperties.toString()", "originalCommit": "9469f2e5c8bedc9e39c646cb61874c2abcc6136b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM4NDk5OQ==", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r540384999", "bodyText": "ah, i see that other tests do it to cover the toString method.", "author": "cgtz", "createdAt": "2020-12-10T18:05:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1NDcyMg=="}], "type": "inlineReview"}]}