{"pr_number": 1707, "pr_title": "[named_blobs] Integrate NamedBlobDb and support deletes", "pr_createdAt": "2020-11-30T21:58:39Z", "pr_url": "https://github.com/linkedin/ambry/pull/1707", "timeline": [{"oid": "74be4ac5ce1db08fda35e630d822b47507a4e72a", "url": "https://github.com/linkedin/ambry/commit/74be4ac5ce1db08fda35e630d822b47507a4e72a", "message": "[named_blobs] Integrate NamedBlobDb and support deletes\n\n- Use NamedBlobDb in AmbryIdConverter\n- Add support for getting the blob ID deleted after a delete call\n- Call delete from inside of AmbryIdConverter.", "committedDate": "2020-12-01T16:15:46Z", "type": "forcePushed"}, {"oid": "9312cd263b3a04b8494ba18d75510f2abff52911", "url": "https://github.com/linkedin/ambry/commit/9312cd263b3a04b8494ba18d75510f2abff52911", "message": "[named_blobs] Integrate NamedBlobDb and support deletes\n\n- Use NamedBlobDb in AmbryIdConverter\n- Add support for getting the blob ID deleted after a delete call\n- Call delete from inside of AmbryIdConverter.", "committedDate": "2020-12-01T16:55:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxNTcyNw==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r533815727", "bodyText": "The blobInfo is null? I guess you want to parse in it from NamedBlobPutHandler right?", "author": "SophieGuo410", "createdAt": "2020-12-02T00:35:22Z", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbryIdConverterFactory.java", "diffHunk": "@@ -65,6 +73,11 @@ public void close() {\n       isOpen = false;\n     }\n \n+    @Override\n+    public Future<String> convert(RestRequest restRequest, String input, Callback<String> callback) {\n+      return convert(restRequest, input, null, callback);", "originalCommit": "9312cd263b3a04b8494ba18d75510f2abff52911", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcxMzE3OQ==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r535713179", "bodyText": "This method is used for get/put/delete/ttlUpdate operations where there is no BlobInfo to provide. The NamedBlobPutHandler uses the second convert method that takes in BlobInfo.", "author": "cgtz", "createdAt": "2020-12-03T23:08:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxNTcyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxNjY2NA==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r533816664", "bodyText": "a quick question. Do we really need to update the idConverterProcessingTimeInMs twice since eventually the finally logic will do it.", "author": "SophieGuo410", "createdAt": "2020-12-02T00:38:09Z", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbryIdConverterFactory.java", "diffHunk": "@@ -73,29 +86,30 @@ public void close() {\n      * {@link com.github.ambry.router.Router} will understand.\n      * @param restRequest {@link RestRequest} representing the request.\n      * @param input the ID that needs to be converted.\n+     * @param blobInfo the {@link BlobInfo} for an uploaded blob. This will be used for named blob PUT requests.\n      * @param callback the {@link Callback} to invoke once the converted ID is available. Can be null.\n      * @return a {@link Future} that will eventually contain the converted ID.\n      */\n     @Override\n-    public Future<String> convert(RestRequest restRequest, String input, Callback<String> callback) {\n+    public Future<String> convert(RestRequest restRequest, String input, BlobInfo blobInfo, Callback<String> callback) {\n       final CompletableFuture<String> future = new CompletableFuture<>();\n       String convertedId = null;\n       Exception exception = null;\n       frontendMetrics.idConverterRequestRate.mark();\n       long startTimeInMs = System.currentTimeMillis();\n       try {\n         if (!isOpen) {\n-        frontendMetrics.idConverterProcessingTimeInMs.update(System.currentTimeMillis() - startTimeInMs);\n-        exception = new RestServiceException(\"IdConverter is closed\", RestServiceErrorCode.ServiceUnavailable);\n+          frontendMetrics.idConverterProcessingTimeInMs.update(System.currentTimeMillis() - startTimeInMs);", "originalCommit": "9312cd263b3a04b8494ba18d75510f2abff52911", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcxMzUwNA==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r535713504", "bodyText": "Good catch, this was redundant", "author": "cgtz", "createdAt": "2020-12-03T23:09:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxNjY2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyMTU4Mw==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r533821583", "bodyText": "Thanks for providing the better way to identify the requestPath.", "author": "SophieGuo410", "createdAt": "2020-12-02T00:52:17Z", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "diffHunk": "@@ -221,7 +219,7 @@ public void processResponse(RestRequest restRequest, RestResponseChannel respons\n             break;\n           case OPTIONS:\n           case PUT:\n-            if (requestPath.getOperationOrBlobId(false).startsWith(NAMED_BLOB_PREFIX)) {\n+            if (requestPath.matchesOperation(Operations.NAMED_BLOB)) {", "originalCommit": "9312cd263b3a04b8494ba18d75510f2abff52911", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyNTcyOA==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r533825728", "bodyText": "minor: Although it's the original code, but I guess maybe we can remove the RestUtils for getRequestPath as well for consistency right?", "author": "SophieGuo410", "createdAt": "2020-12-02T01:03:39Z", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AccountAndContainerInjector.java", "diffHunk": "@@ -240,7 +239,7 @@ private void injectAccountAndContainerUsingAccountAndContainerHeaders(RestReques\n    */\n   private void injectAccountAndContainerUsingAccountAndContainerUri(RestRequest restRequest,\n       RestRequestMetricsGroup metricsGroup) throws RestServiceException {\n-    NamedBlobPath namedBlobPath = RestUtils.parseInput(RestUtils.getRequestPath(restRequest).getOperationOrBlobId(false));\n+    NamedBlobPath namedBlobPath = parseNamedBlobPath(RestUtils.getRequestPath(restRequest).getOperationOrBlobId(false));", "originalCommit": "9312cd263b3a04b8494ba18d75510f2abff52911", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgzMzEyNg==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r533833126", "bodyText": "Can you give me a brief introduction about what's the connection.commit() and connection.rollback() are doing? a little bit confuse about it. Thank you!", "author": "SophieGuo410", "createdAt": "2020-12-02T01:22:18Z", "path": "ambry-named-mysql/src/main/java/com/github/ambry/named/MySqlNamedBlobDb.java", "diffHunk": "@@ -274,7 +289,22 @@\n     executorService.submit(() -> {\n       // TODO introduce failover handling (retry on remote datacenters, handle SQL exceptions)\n       try (Connection connection = dcToDataSource.get(localDatacenter).getConnection()) {\n-        future.complete(transaction.run(account.getId(), container.getId(), connection));\n+        T result;\n+        if (autoCommit) {\n+          result = transaction.run(account.getId(), container.getId(), connection);\n+        } else {\n+          connection.setAutoCommit(false);\n+          try {\n+            result = transaction.run(account.getId(), container.getId(), connection);\n+            connection.commit();", "originalCommit": "9312cd263b3a04b8494ba18d75510f2abff52911", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3MjgxNQ==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r534372815", "bodyText": "I will update this. The way I am using variables is a little wonky and soon to be deprecated behavior in mysql. I think I will update the delete query to do a 2 step transaction:\n\nselect the current row to give us the blob ID (with \"for update\" to lock access until the end of the transaction)\nif the current row is present and not already deleted, update (set deletion time)\nSince this is two operations that we want to be an atomic unit we have to manually commit the transaction like so. If there is any error, we can use the rollback method to cancel the transaction and release any resources/locks that may have been acquired.", "author": "cgtz", "createdAt": "2020-12-02T18:02:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgzMzEyNg=="}], "type": "inlineReview"}, {"oid": "c283a4c7b51678ab405473ff71d3608f0b8a485a", "url": "https://github.com/linkedin/ambry/commit/c283a4c7b51678ab405473ff71d3608f0b8a485a", "message": "[named_blobs] Integrate NamedBlobDb and support deletes\n\n- Use NamedBlobDb in AmbryIdConverter\n- Add support for getting the blob ID deleted after a delete call\n- Call delete from inside of AmbryIdConverter.", "committedDate": "2020-12-03T23:32:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ0NDM0MA==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r536444340", "bodyText": "Incomplete java doc", "author": "zzmao", "createdAt": "2020-12-04T23:31:55Z", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/NamedBlobPutHandler.java", "diffHunk": "@@ -245,26 +245,29 @@ private PutBlobOptions getPutBlobOptionsFromRequest() throws RestServiceExceptio\n     }\n \n     /**\n-     * After reading the body of the stitch request\n-     * @param channel\n-     * @param blobInfo\n-     * @return\n+     * After reading the body of the stitch request, parse the request body,\n+     * and make a call to {@link Router#stitchBlob}.\n+     * @param channel the", "originalCommit": "c283a4c7b51678ab405473ff71d3608f0b8a485a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0MTAzOQ==", "url": "https://github.com/linkedin/ambry/pull/1707#discussion_r537841039", "bodyText": "Fixed", "author": "cgtz", "createdAt": "2020-12-07T21:20:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ0NDM0MA=="}], "type": "inlineReview"}, {"oid": "fcee11d5516be46f115329455d97871332cd6b4a", "url": "https://github.com/linkedin/ambry/commit/fcee11d5516be46f115329455d97871332cd6b4a", "message": "[named_blobs] Integrate NamedBlobDb and support deletes\n\n- Use NamedBlobDb in AmbryIdConverter\n- Add support for getting the blob ID deleted after a delete call\n- Call delete from inside of AmbryIdConverter.", "committedDate": "2020-12-07T21:19:43Z", "type": "forcePushed"}, {"oid": "38c4ffd1a1b9e56b99b70650d13746bec1318039", "url": "https://github.com/linkedin/ambry/commit/38c4ffd1a1b9e56b99b70650d13746bec1318039", "message": "[named_blobs] Integrate NamedBlobDb and support deletes\n\n- Use NamedBlobDb in AmbryIdConverter\n- Add support for getting the blob ID deleted after a delete call\n- Call delete from inside of AmbryIdConverter.", "committedDate": "2020-12-07T21:50:31Z", "type": "forcePushed"}, {"oid": "30ad3cfeb426df78aa297c3b9b995ab12557b250", "url": "https://github.com/linkedin/ambry/commit/30ad3cfeb426df78aa297c3b9b995ab12557b250", "message": "[named_blobs] Integrate NamedBlobDb and support deletes\n\n- Use NamedBlobDb in AmbryIdConverter\n- Add support for getting the blob ID deleted after a delete call\n- Call delete from inside of AmbryIdConverter.", "committedDate": "2020-12-07T21:59:18Z", "type": "commit"}, {"oid": "30ad3cfeb426df78aa297c3b9b995ab12557b250", "url": "https://github.com/linkedin/ambry/commit/30ad3cfeb426df78aa297c3b9b995ab12557b250", "message": "[named_blobs] Integrate NamedBlobDb and support deletes\n\n- Use NamedBlobDb in AmbryIdConverter\n- Add support for getting the blob ID deleted after a delete call\n- Call delete from inside of AmbryIdConverter.", "committedDate": "2020-12-07T21:59:18Z", "type": "forcePushed"}]}