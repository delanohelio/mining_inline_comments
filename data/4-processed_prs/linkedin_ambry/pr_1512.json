{"pr_number": 1512, "pr_title": "Adding config to specify the type of replication model to be used for inter colo replication", "pr_createdAt": "2020-05-07T22:23:14Z", "pr_url": "https://github.com/linkedin/ambry/pull/1512", "timeline": [{"oid": "f370291c40937d3d586ebb7820cf0a4e252b304b", "url": "https://github.com/linkedin/ambry/commit/f370291c40937d3d586ebb7820cf0a4e252b304b", "message": "Leader based replication changes - Adding config to determine the type of replication to be used (all-to-all vs leader-based)", "committedDate": "2020-05-07T22:12:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1MTIwMg==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r421951202", "bodyText": "Can we call this either \"replication.model.across.datacenters\"? (Also, please double check if this config is needed on source node. I feel it is not required by source node)", "author": "jsjtzyy", "createdAt": "2020-05-08T05:46:35Z", "path": "ambry-api/src/main/java/com/github/ambry/config/ReplicationConfig.java", "diffHunk": "@@ -181,6 +181,17 @@\n   @Default(\"\")\n   public final Set<String> replicationVcrRecoveryPartitions;\n \n+  /**\n+   * To specify the type of replication to be used for inter colo replication.\n+   * It has two values - \"all-to-all\" or \"leader-based\". Default value is \"all-to-all\".\n+   * If set to \"leader-based\", inter colo replication between will be limited to the leaders(as elected by Helix) of the partition of each datacenter.\n+   * If set to \"all-to-all\", inter colo replication will be in an all-to-all fashion, i.e. each replica talks to all other replicas irrespective of their state.\n+   * Intra colo replication will continue as all-to-all fashion in both the models.\n+   */\n+  @Config(\"replication.inter.colo.datacenter.model\")", "originalCommit": "f370291c40937d3d586ebb7820cf0a4e252b304b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1MTkyMg==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r421951922", "bodyText": "Usually this variable name should be exact same with the config string.", "author": "jsjtzyy", "createdAt": "2020-05-08T05:49:05Z", "path": "ambry-api/src/main/java/com/github/ambry/config/ReplicationConfig.java", "diffHunk": "@@ -181,6 +181,17 @@\n   @Default(\"\")\n   public final Set<String> replicationVcrRecoveryPartitions;\n \n+  /**\n+   * To specify the type of replication to be used for inter colo replication.\n+   * It has two values - \"all-to-all\" or \"leader-based\". Default value is \"all-to-all\".\n+   * If set to \"leader-based\", inter colo replication between will be limited to the leaders(as elected by Helix) of the partition of each datacenter.\n+   * If set to \"all-to-all\", inter colo replication will be in an all-to-all fashion, i.e. each replica talks to all other replicas irrespective of their state.\n+   * Intra colo replication will continue as all-to-all fashion in both the models.\n+   */\n+  @Config(\"replication.inter.colo.datacenter.model\")\n+  @Default(\"all-to-all\")\n+  public final String replicationModelForInterColoDatacenters;", "originalCommit": "f370291c40937d3d586ebb7820cf0a4e252b304b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NTk1Nw==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r421955957", "bodyText": "minor: let's use equalsIgnoreCase here", "author": "jsjtzyy", "createdAt": "2020-05-08T06:02:25Z", "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicationEngine.java", "diffHunk": "@@ -121,6 +122,8 @@ public ReplicationEngine(ReplicationConfig replicationConfig, ClusterMapConfig c\n     this.storeManager = storeManager;\n     replicaSyncUpManager = clusterParticipant == null ? null : clusterParticipant.getReplicaSyncUpManager();\n     peerLeaderReplicasByPartition = new ConcurrentHashMap<>();\n+    replicationModelType = replicationConfig.replicationModelForInterColoDatacenters.equals(\"leader-based\")", "originalCommit": "f370291c40937d3d586ebb7820cf0a4e252b304b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI0MTA1Ng==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r422241056", "bodyText": "nit: The model used for cross-colo replication", "author": "jsjtzyy", "createdAt": "2020-05-08T16:29:49Z", "path": "ambry-api/src/main/java/com/github/ambry/replication/ReplicationModelType.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/**\n+ * Copyright 2019 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+\n+package com.github.ambry.replication;\n+\n+/**\n+ * The type of replication used for inter-data centers", "originalCommit": "f370291c40937d3d586ebb7820cf0a4e252b304b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI0MjE4NA==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r422242184", "bodyText": "nit: format this file", "author": "jsjtzyy", "createdAt": "2020-05-08T16:32:11Z", "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicationManager.java", "diffHunk": "@@ -254,6 +254,14 @@ private void updatePartitionInfoMaps(List<RemoteReplicaInfo> remoteReplicaInfos,\n     return Collections.unmodifiableMap(peerLeaderReplicasByPartition);\n   }\n \n+  /**\n+   * Get a replication model type being used for inter colo replication\n+   * @return replication model type {@link ReplicationEngine#replicationModelType}\n+   */\n+  ReplicationModelType  getReplicationModelType(){", "originalCommit": "f370291c40937d3d586ebb7820cf0a4e252b304b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI0NDM5Mw==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r422244393", "bodyText": "minor: to make the naming consistent, how about renaming this test to replicationTypeFromConfigTest?", "author": "jsjtzyy", "createdAt": "2020-05-08T16:36:31Z", "path": "ambry-replication/src/test/java/com/github/ambry/replication/ReplicationTest.java", "diffHunk": "@@ -171,6 +171,38 @@ public ReplicationTest(short requestVersion, short responseVersion) throws Excep\n     replicationConfig = new ReplicationConfig(verifiableProperties);\n   }\n \n+  /**\n+   * Tests replication model is correct obtained from properties\n+   * @throws Exception\n+   */\n+  @Test\n+  public void verifyReplicationTypeFromConfig() throws Exception {", "originalCommit": "f370291c40937d3d586ebb7820cf0a4e252b304b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI0Nzg2Nw==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r422247867", "bodyText": "nit:  is correctly obtained", "author": "jsjtzyy", "createdAt": "2020-05-08T16:43:21Z", "path": "ambry-replication/src/test/java/com/github/ambry/replication/ReplicationTest.java", "diffHunk": "@@ -171,6 +171,38 @@ public ReplicationTest(short requestVersion, short responseVersion) throws Excep\n     replicationConfig = new ReplicationConfig(verifiableProperties);\n   }\n \n+  /**\n+   * Tests replication model is correct obtained from properties", "originalCommit": "f370291c40937d3d586ebb7820cf0a4e252b304b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d2a9d148f849f444eb8505828607374d64add82c", "url": "https://github.com/linkedin/ambry/commit/d2a9d148f849f444eb8505828607374d64add82c", "message": "Addressing review comments for having naming conventions consistent", "committedDate": "2020-05-11T05:00:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3Mjk3Nw==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r423372977", "bodyText": "nit: I suggest create a static string variable for this one\npublic static final String DEFAULT_REPLICATION_MODEL_ACROSS_DATACENTRS = ReplicationModelType.ALL_TO_ALL.toString().toLowerCase();\n\n@Config(\"replication.model.across.datacenters\")\n@Default(DEFAULT_REPLICATION_MODEL_ACROSS_DATACENTERS)\npublic final String replicationModelAcrossDatacenters;", "author": "justinlin-linkedin", "createdAt": "2020-05-11T23:17:33Z", "path": "ambry-api/src/main/java/com/github/ambry/config/ReplicationConfig.java", "diffHunk": "@@ -181,6 +181,17 @@\n   @Default(\"\")\n   public final Set<String> replicationVcrRecoveryPartitions;\n \n+  /**\n+   * To specify the type of replication to be used for inter colo replication.\n+   * It has two values - \"all-to-all\" or \"leader-based\". Default value is \"all-to-all\".\n+   * If set to \"leader-based\", inter colo replication between will be limited to the leaders(as elected by Helix) of the partition of each datacenter.\n+   * If set to \"all-to-all\", inter colo replication will be in an all-to-all fashion, i.e. each replica talks to all other replicas irrespective of their state.\n+   * Intra colo replication will continue as all-to-all fashion in both the models.\n+   */\n+  @Config(\"replication.model.across.datacenters\")\n+  @Default(\"all-to-all\")", "originalCommit": "d2a9d148f849f444eb8505828607374d64add82c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2MjI0NA==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r423462244", "bodyText": "Sure, added a static string constant variable. I directly defined the variable name as - public static final String DEFAULT_REPLICATION_MODEL_ACROSS_DATACENTRS = \"all-to-all\". It wasn't accepting enum name as a constant variable in the @default annotation.", "author": "Arun-LinkedIn", "createdAt": "2020-05-12T04:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3Mjk3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0ODUyNw==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r424048527", "bodyText": "You don't have to pass enum name to the @default annotation. My idea is to make sure we have consistent string representation here. If we assign DEFAULT_REPLICATION_MODEL_ACROSS_DATACENTERS with the enum's lowercase string, then in ReplicationEngine you can just do\nreplicationModelType = ReplicationModelType.valueof(replicationConfig.replicationModelAcrossDatacenters.toUpperCase());", "author": "justinlin-linkedin", "createdAt": "2020-05-12T21:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3Mjk3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3MzE2MQ==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r423373161", "bodyText": "the year should be 2020.", "author": "justinlin-linkedin", "createdAt": "2020-05-11T23:18:01Z", "path": "ambry-api/src/main/java/com/github/ambry/replication/ReplicationModelType.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/**\n+ * Copyright 2019 LinkedIn Corp. All rights reserved.", "originalCommit": "d2a9d148f849f444eb8505828607374d64add82c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eaf9a3e136da53e068d364548dbd9ffa3326a3b7", "url": "https://github.com/linkedin/ambry/commit/eaf9a3e136da53e068d364548dbd9ffa3326a3b7", "message": "Define static string constants for config name", "committedDate": "2020-05-12T04:39:58Z", "type": "commit"}, {"oid": "b2e0611800354feae8dc2b5f1e34459a945eeae5", "url": "https://github.com/linkedin/ambry/commit/b2e0611800354feae8dc2b5f1e34459a945eeae5", "message": "Update the config values of \"replication.model.across.datacenters\" to \"ALL_TO_ALL\" and \"LEADER_BASED\" to map to ReplicationModelType enum names", "committedDate": "2020-05-14T00:37:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwODg2Mw==", "url": "https://github.com/linkedin/ambry/pull/1512#discussion_r424808863", "bodyText": "nit: please update comment to reflect latest change. It should be \"ALL_TO_ALL\" and \"LEADER_BASED\".", "author": "justinlin-linkedin", "createdAt": "2020-05-14T00:42:48Z", "path": "ambry-api/src/main/java/com/github/ambry/config/ReplicationConfig.java", "diffHunk": "@@ -181,6 +182,17 @@\n   @Default(\"\")\n   public final Set<String> replicationVcrRecoveryPartitions;\n \n+  /**\n+   * To specify the type of replication to be used for inter colo replication.\n+   * It has two values - \"all-to-all\" or \"leader-based\". Default value is \"all-to-all\".", "originalCommit": "b2e0611800354feae8dc2b5f1e34459a945eeae5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "763901b00fc6e21cc597296aa29cab43b4650905", "url": "https://github.com/linkedin/ambry/commit/763901b00fc6e21cc597296aa29cab43b4650905", "message": "Updating the comment section to reflect the correct values", "committedDate": "2020-05-14T00:47:18Z", "type": "commit"}]}