{"pr_number": 847, "pr_title": "[PARQUET-1951] Allow different strategies to combine key values when \u2026", "pr_createdAt": "2020-12-14T02:44:11Z", "pr_url": "https://github.com/apache/parquet-mr/pull/847", "timeline": [{"oid": "4d2201a9d0bb768ac0f2e1a9f68eb40efb9de439", "url": "https://github.com/apache/parquet-mr/commit/4d2201a9d0bb768ac0f2e1a9f68eb40efb9de439", "message": "[PARQUET-1951] Allow different strategies to combine key values when merging parquet files", "committedDate": "2020-12-14T02:56:56Z", "type": "forcePushed"}, {"oid": "25f7fb30eef0aaeb0be97e5c474f8586a9e7ae79", "url": "https://github.com/apache/parquet-mr/commit/25f7fb30eef0aaeb0be97e5c474f8586a9e7ae79", "message": "[PARQUET-1951] Allow different strategies to combine key values when merging parquet files", "committedDate": "2020-12-14T03:13:49Z", "type": "commit"}, {"oid": "25f7fb30eef0aaeb0be97e5c474f8586a9e7ae79", "url": "https://github.com/apache/parquet-mr/commit/25f7fb30eef0aaeb0be97e5c474f8586a9e7ae79", "message": "[PARQUET-1951] Allow different strategies to combine key values when merging parquet files", "committedDate": "2020-12-14T03:13:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIzODAyNw==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551238027", "bodyText": "I think, this interface does not support all types of the potential merge strategy implementations. For example if you would like to use the value which is common in the most files you cannot do it because you only have the distinct values. What do you think about using a List<String> instead of a Set<String>?", "author": "gszadovszky", "createdAt": "2021-01-04T10:39:06Z", "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/KeyValueMetadataMergeStrategy.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.parquet.hadoop.metadata;\n+\n+import org.apache.parquet.schema.MessageType;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import static java.util.Collections.unmodifiableMap;\n+\n+/**\n+ * Strategy to merge metadata. Possible implementations:\n+ * 1) Expect metadata to be exactly identical. Otherwise throw error (this is the default strategy implementation)\n+ * 2) Custom strategy to merge metadata if the values are not identical. Example: concatenate values.\n+ */\n+public interface KeyValueMetadataMergeStrategy extends Serializable {\n+  /**\n+   * @param keyValueMetaData the merged app specific metadata\n+   *\n+   * @throws NullPointerException if keyValueMetaData is {@code null}\n+   */\n+  Map<String, String> merge(Map<String, Set<String>> keyValueMetaData);", "originalCommit": "25f7fb30eef0aaeb0be97e5c474f8586a9e7ae79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU5ODU5Mg==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551598592", "bodyText": "GlobalMetadata uses Map<String, Set <String>> https://github.com/apache/parquet-mr/blob/master/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/GlobalMetaData.java#L41. So merge method takes in same argument.\nDo you think it makes sense to change GlobalMetadata to track items in List? I'm not sure if it would be backward compatible and if there are use cases expecting this to be Set.\nWithout changing GlobalMetadata#keyValueMetaData, it may not be useful to change this interface. Let me know what you think.", "author": "satishkotha", "createdAt": "2021-01-04T22:08:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIzODAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYyMTM1Nw==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551621357", "bodyText": "People may already rely on the 'set' to do the dedup.", "author": "shangxinli", "createdAt": "2021-01-04T23:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIzODAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg0MzA0Mg==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551843042", "bodyText": "Sorry, I've missed this type is already in our API. Agreed to keep the interface as is.", "author": "gszadovszky", "createdAt": "2021-01-05T10:25:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIzODAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0MDAyNw==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551240027", "bodyText": "You do not need to instantiate an object to get its class. Simply use DefaultKeyValueMetadataMergeStrategy.class", "author": "gszadovszky", "createdAt": "2021-01-04T10:43:08Z", "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/MergeCommand.java", "diffHunk": "@@ -41,6 +46,21 @@\n           \"   <output> is the destination parquet file\"\n   };\n \n+  private static final String DEFAULT_KEY_VALUE_MERGE_STRATEGY = new DefaultKeyValueMetadataMergeStrategy().getClass().getName();", "originalCommit": "25f7fb30eef0aaeb0be97e5c474f8586a9e7ae79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU5ODcyNQ==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551598725", "bodyText": "My bad. Fixed. Thanks", "author": "satishkotha", "createdAt": "2021-01-04T22:08:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0MDAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0MjA0Mg==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551242042", "bodyText": "I do not really like the naming of this class. This is the default implementation, it's fine but the name should suggest what it does. I'm quite sure there is a better naming but what about StrictKeyValueMetadataMergeStrategy?", "author": "gszadovszky", "createdAt": "2021-01-04T10:46:31Z", "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/DefaultKeyValueMetadataMergeStrategy.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.parquet.hadoop.metadata;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ *  Default strategy to throw errors in metadata if there are multiple values for a given key in metadata.\n+ */\n+public class DefaultKeyValueMetadataMergeStrategy implements KeyValueMetadataMergeStrategy {", "originalCommit": "25f7fb30eef0aaeb0be97e5c474f8586a9e7ae79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU5NTc5NA==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551595794", "bodyText": "Good suggestion. Fixed it. Thanks!", "author": "satishkotha", "createdAt": "2021-01-04T22:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0MjA0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYxNzM0Mg==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551617342", "bodyText": "The signature doesn't have NullPointerException.", "author": "shangxinli", "createdAt": "2021-01-04T22:56:05Z", "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/KeyValueMetadataMergeStrategy.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.parquet.hadoop.metadata;\n+\n+import org.apache.parquet.schema.MessageType;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import static java.util.Collections.unmodifiableMap;\n+\n+/**\n+ * Strategy to merge metadata. Possible implementations:\n+ * 1) Expect metadata to be exactly identical. Otherwise throw error (this is the default strategy implementation)\n+ * 2) Custom strategy to merge metadata if the values are not identical. Example: concatenate values.\n+ */\n+public interface KeyValueMetadataMergeStrategy extends Serializable {\n+  /**\n+   * @param keyValueMetaData the merged app specific metadata\n+   *\n+   * @throws NullPointerException if keyValueMetaData is {@code null}", "originalCommit": "25f7fb30eef0aaeb0be97e5c474f8586a9e7ae79", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYxNzcyOA==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551617728", "bodyText": "Remove one space in the beginning", "author": "shangxinli", "createdAt": "2021-01-04T22:57:03Z", "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/GlobalMetaData.java", "diffHunk": "@@ -87,19 +87,25 @@ public String toString() {\n    * Will merge the metadata as if it was coming from a single file.\n    * (for all part files written together this will always work)\n    * If there are conflicting values an exception will be thrown\n+   * \n+   * Provided for backward compatibility\n    * @return the merged version of this\n    */\n-  public FileMetaData merge() {\n+   public FileMetaData merge() {", "originalCommit": "25f7fb30eef0aaeb0be97e5c474f8586a9e7ae79", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYyMzM1Mg==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r551623352", "bodyText": "The delimiter needs to be parameterized in other non-hudi cases.", "author": "shangxinli", "createdAt": "2021-01-04T23:12:37Z", "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ConcatenatingKeyValueMetadataMergeStrategy.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.parquet.hadoop.metadata;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ *  Strategy to concatenate if there are multiple values for a given key in metadata.\n+ *  Note: use this with caution. This is expected to work only for certain use cases.\n+ */\n+public class ConcatenatingKeyValueMetadataMergeStrategy implements KeyValueMetadataMergeStrategy {\n+  /**\n+   * @param keyValueMetaData the merged app specific metadata\n+   *\n+   * @throws NullPointerException if keyValueMetaData is {@code null}\n+   */\n+  public Map<String, String> merge(Map<String, Set<String>> keyValueMetaData) {\n+    Map<String, String> mergedKeyValues = new HashMap<String, String>();\n+    for (Map.Entry<String, Set<String>> entry : keyValueMetaData.entrySet()) {\n+      mergedKeyValues.put(entry.getKey(), entry.getValue().stream().collect(Collectors.joining(\",\")));", "originalCommit": "48102d94f3ea59e77fa6c003c9ca4e6ffff8af36", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bf180c06afc7552726e17f40bb10d1665aca7253", "url": "https://github.com/apache/parquet-mr/commit/bf180c06afc7552726e17f40bb10d1665aca7253", "message": "Address code review comments:\n1) Rename DefaultKeyValueMetadataMergeStrategy.java to StrictKeyValueMetadataMergeStrategy.java\n2) Add one more strategy to concatenate values for same key\n3) parameterize delimiter", "committedDate": "2021-01-05T00:02:42Z", "type": "commit"}, {"oid": "bf180c06afc7552726e17f40bb10d1665aca7253", "url": "https://github.com/apache/parquet-mr/commit/bf180c06afc7552726e17f40bb10d1665aca7253", "message": "Address code review comments:\n1) Rename DefaultKeyValueMetadataMergeStrategy.java to StrictKeyValueMetadataMergeStrategy.java\n2) Add one more strategy to concatenate values for same key\n3) parameterize delimiter", "committedDate": "2021-01-05T00:02:42Z", "type": "forcePushed"}, {"oid": "e37bc551250760859f710e5271cdde2ac1514aa2", "url": "https://github.com/apache/parquet-mr/commit/e37bc551250760859f710e5271cdde2ac1514aa2", "message": "Add additional option to CLI to load custom strategy", "committedDate": "2021-01-06T01:30:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ5ODAyNw==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r552498027", "bodyText": "We should list the available options here. (The best way would be do it by iterating over the enum so a potential extension later would not forget about this part.)\nnit: in command line we rarely use upper case arguments. Maybe it would be nicer to convert the enum names to lower case.", "author": "gszadovszky", "createdAt": "2021-01-06T10:39:18Z", "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/MergeCommand.java", "diffHunk": "@@ -46,19 +47,34 @@\n           \"   <output> is the destination parquet file\"\n   };\n \n-  private static final String DEFAULT_KEY_VALUE_MERGE_STRATEGY = StrictKeyValueMetadataMergeStrategy.class.getName();\n+  private static enum MergeStrategy {\n+    STRICT,\n+    CONCAT,\n+    CUSTOM,\n+  }\n+  \n   public static final Options OPTIONS;\n \n   static {\n     OPTIONS = new Options();\n     Option mergeStrategy = Option.builder(\"s\")\n       .longOpt(\"mergeStrategy\")\n       .desc(\"Strategy to merge (key, value) pairs in metadata if there are multiple values for same key \" +\n-        \"(default: \" + DEFAULT_KEY_VALUE_MERGE_STRATEGY + \")\")\n+        \"(default: \" + MergeStrategy.STRICT + \"). You can provide your custom implementation by specifying \" +", "originalCommit": "e37bc551250760859f710e5271cdde2ac1514aa2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk4MDE1MA==", "url": "https://github.com/apache/parquet-mr/pull/847#discussion_r552980150", "bodyText": "Ok. Done.", "author": "satishkotha", "createdAt": "2021-01-06T21:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ5ODAyNw=="}], "type": "inlineReview"}, {"oid": "e8e4db8687de5b12cf66f29c88f9469de6fd92ad", "url": "https://github.com/apache/parquet-mr/commit/e8e4db8687de5b12cf66f29c88f9469de6fd92ad", "message": "Update description for strategy option", "committedDate": "2021-01-06T20:40:11Z", "type": "commit"}]}