{"pr_number": 3485, "pr_title": "Enhance AssertNumRowsNode", "pr_createdAt": "2020-05-06T10:46:12Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3485", "timeline": [{"oid": "4d9b04bef50df9596e76fabddef8129c10db6b19", "url": "https://github.com/apache/incubator-doris/commit/4d9b04bef50df9596e76fabddef8129c10db6b19", "message": "enhance assert_num_rows_node support specify assert condition", "committedDate": "2020-05-06T09:42:46Z", "type": "commit"}, {"oid": "c373e5af56a672ae1713ab67263d6b8b15925621", "url": "https://github.com/apache/incubator-doris/commit/c373e5af56a672ae1713ab67263d6b8b15925621", "message": "enhance assert_num_rows_node support specify assert condition", "committedDate": "2020-05-06T09:57:47Z", "type": "commit"}, {"oid": "adf1b78eda6b2d90374763dec31a8b530652f91e", "url": "https://github.com/apache/incubator-doris/commit/adf1b78eda6b2d90374763dec31a8b530652f91e", "message": "enhance assert_num_rows_node support specify assert condition", "committedDate": "2020-05-06T10:00:08Z", "type": "commit"}, {"oid": "112dc0f1042225c578267b62a13b0ad03ec56ae6", "url": "https://github.com/apache/incubator-doris/commit/112dc0f1042225c578267b62a13b0ad03ec56ae6", "message": "enhance assert_num_rows_node support specify assert condition", "committedDate": "2020-05-06T10:02:41Z", "type": "commit"}, {"oid": "b26349ab56037a1bc8e33496677e56a57fac8bf0", "url": "https://github.com/apache/incubator-doris/commit/b26349ab56037a1bc8e33496677e56a57fac8bf0", "message": "enhance assert_num_rows_node support specify assert condition", "committedDate": "2020-05-06T10:11:43Z", "type": "commit"}, {"oid": "5a78710f96c8a41a71acf80c9692b66325ebb715", "url": "https://github.com/apache/incubator-doris/commit/5a78710f96c8a41a71acf80c9692b66325ebb715", "message": "enhance assert_num_rows_node support specify assert condition", "committedDate": "2020-05-06T10:24:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkwMDcxNQ==", "url": "https://github.com/apache/incubator-doris/pull/3485#discussion_r420900715", "bodyText": "Where is _TAssertion_VALUES_TO_NAMES  ?", "author": "kangkaisen", "createdAt": "2020-05-06T15:52:16Z", "path": "be/src/exec/assert_num_rows_node.cpp", "diffHunk": "@@ -56,12 +62,46 @@ Status AssertNumRowsNode::get_next(RuntimeState* state, RowBatch* output_batch,\n     output_batch->reset();\n     child(0)->get_next(state, output_batch, eos);\n     _num_rows_returned += output_batch->num_rows();\n-    if (_num_rows_returned > _desired_num_rows) {\n-        LOG(INFO) << \"Expected no more than \" << _desired_num_rows << \" to be returned by expression \"\n-                  << _subquery_string;\n-        return Status::Cancelled(strings::Substitute(\n-                                \"Expected no more than $0 to be returned by expression $1\",\n-                                _desired_num_rows, _subquery_string));\n+    bool assert_res = false;\n+    switch (_assertion) {\n+    case TAssertion::EQ:\n+        assert_res = _num_rows_returned == _desired_num_rows;\n+        break;\n+    case TAssertion::NE:\n+        assert_res = _num_rows_returned != _desired_num_rows;\n+        break;\n+    case TAssertion::LT:\n+        assert_res = _num_rows_returned < _desired_num_rows;\n+        break;\n+    case TAssertion::LE:\n+        assert_res = _num_rows_returned <= _desired_num_rows;\n+        break;\n+    case TAssertion::GT:\n+        assert_res = _num_rows_returned > _desired_num_rows;\n+        break;\n+    case TAssertion::GE:\n+        assert_res = _num_rows_returned >= _desired_num_rows;\n+        break;\n+    default:\n+        break;\n+    }\n+\n+    if (!assert_res) {\n+        auto to_string_lamba = [](TAssertion::type assertion) {\n+            std::map<int, const char*>::const_iterator it =\n+                    _TAssertion_VALUES_TO_NAMES.find(assertion);", "originalCommit": "5a78710f96c8a41a71acf80c9692b66325ebb715", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwMjk0Ng==", "url": "https://github.com/apache/incubator-doris/pull/3485#discussion_r421202946", "bodyText": "_TAssertion_VALUES_TO_NAMES is generated by thrift, every enum has a variable like  _xxxx_VALUES_TO_NAMES", "author": "yangzhg", "createdAt": "2020-05-07T02:30:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkwMDcxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkwMDg3Nw==", "url": "https://github.com/apache/incubator-doris/pull/3485#discussion_r420900877", "bodyText": "Code format.", "author": "kangkaisen", "createdAt": "2020-05-06T15:52:29Z", "path": "be/src/exec/assert_num_rows_node.cpp", "diffHunk": "@@ -17,19 +17,25 @@\n \n #include \"exec/assert_num_rows_node.h\"\n \n+#include \"gen_cpp/PlanNodes_types.h\"\n+#include \"gutil/strings/substitute.h\"\n #include \"runtime/row_batch.h\"\n #include \"runtime/runtime_state.h\"\n #include \"util/runtime_profile.h\"\n-#include \"gen_cpp/PlanNodes_types.h\"\n-#include \"gutil/strings/substitute.h\"\n \n namespace doris {\n \n-AssertNumRowsNode::AssertNumRowsNode(\n-    ObjectPool* pool, const TPlanNode& tnode, const DescriptorTbl& descs) :\n-        ExecNode(pool, tnode, descs),\n-        _desired_num_rows(tnode.assert_num_rows_node.desired_num_rows),\n-        _subquery_string(tnode.assert_num_rows_node.subquery_string) {\n+AssertNumRowsNode::AssertNumRowsNode(ObjectPool* pool, const TPlanNode& tnode,\n+                                     const DescriptorTbl& descs)\n+        : ExecNode(pool, tnode, descs),\n+          _desired_num_rows(tnode.assert_num_rows_node.desired_num_rows),\n+          _subquery_string(tnode.assert_num_rows_node.subquery_string) {\n+    if (tnode.assert_num_rows_node.__isset.assertion) {", "originalCommit": "5a78710f96c8a41a71acf80c9692b66325ebb715", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b417cdec40e698acdd5e1654c256fcbc61f7b91c", "url": "https://github.com/apache/incubator-doris/commit/b417cdec40e698acdd5e1654c256fcbc61f7b91c", "message": "format", "committedDate": "2020-05-07T02:33:13Z", "type": "commit"}, {"oid": "db28059309e06898be844c3a4b6f720db3d7c563", "url": "https://github.com/apache/incubator-doris/commit/db28059309e06898be844c3a4b6f720db3d7c563", "message": "format", "committedDate": "2020-05-07T02:35:17Z", "type": "commit"}, {"oid": "d2880c07bdbfe418dd8c75b11c21ab757703238b", "url": "https://github.com/apache/incubator-doris/commit/d2880c07bdbfe418dd8c75b11c21ab757703238b", "message": "format", "committedDate": "2020-05-07T04:57:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxMzI0NQ==", "url": "https://github.com/apache/incubator-doris/pull/3485#discussion_r421213245", "bodyText": "Pay attention to code alignment", "author": "EmmyMiao87", "createdAt": "2020-05-07T03:10:36Z", "path": "be/src/exec/assert_num_rows_node.cpp", "diffHunk": "@@ -17,19 +17,25 @@\n \n #include \"exec/assert_num_rows_node.h\"\n \n+#include \"gen_cpp/PlanNodes_types.h\"\n+#include \"gutil/strings/substitute.h\"\n #include \"runtime/row_batch.h\"\n #include \"runtime/runtime_state.h\"\n #include \"util/runtime_profile.h\"\n-#include \"gen_cpp/PlanNodes_types.h\"\n-#include \"gutil/strings/substitute.h\"\n \n namespace doris {\n \n-AssertNumRowsNode::AssertNumRowsNode(\n-    ObjectPool* pool, const TPlanNode& tnode, const DescriptorTbl& descs) :\n-        ExecNode(pool, tnode, descs),\n-        _desired_num_rows(tnode.assert_num_rows_node.desired_num_rows),\n-        _subquery_string(tnode.assert_num_rows_node.subquery_string) {\n+AssertNumRowsNode::AssertNumRowsNode(ObjectPool* pool, const TPlanNode& tnode,\n+                                     const DescriptorTbl& descs)\n+        : ExecNode(pool, tnode, descs),\n+          _desired_num_rows(tnode.assert_num_rows_node.desired_num_rows),\n+          _subquery_string(tnode.assert_num_rows_node.subquery_string) {\n+    if (tnode.assert_num_rows_node.__isset.assertion) {\n+                _assertion = tnode.assert_num_rows_node.assertion;\n+            }", "originalCommit": "5a78710f96c8a41a71acf80c9692b66325ebb715", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxMzY5OA==", "url": "https://github.com/apache/incubator-doris/pull/3485#discussion_r421213698", "bodyText": "Pay attention to code alignment", "author": "EmmyMiao87", "createdAt": "2020-05-07T03:12:20Z", "path": "be/src/exec/assert_num_rows_node.cpp", "diffHunk": "@@ -56,12 +62,46 @@ Status AssertNumRowsNode::get_next(RuntimeState* state, RowBatch* output_batch,\n     output_batch->reset();\n     child(0)->get_next(state, output_batch, eos);\n     _num_rows_returned += output_batch->num_rows();\n-    if (_num_rows_returned > _desired_num_rows) {\n-        LOG(INFO) << \"Expected no more than \" << _desired_num_rows << \" to be returned by expression \"\n-                  << _subquery_string;\n-        return Status::Cancelled(strings::Substitute(\n-                                \"Expected no more than $0 to be returned by expression $1\",\n-                                _desired_num_rows, _subquery_string));\n+    bool assert_res = false;\n+    switch (_assertion) {", "originalCommit": "5a78710f96c8a41a71acf80c9692b66325ebb715", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db28059309e06898be844c3a4b6f720db3d7c563", "url": "https://github.com/apache/incubator-doris/commit/db28059309e06898be844c3a4b6f720db3d7c563", "message": "format", "committedDate": "2020-05-07T02:35:17Z", "type": "forcePushed"}]}