{"pr_number": 2933, "pr_title": "Fix the flush_status bug in flush-executor", "pr_createdAt": "2020-02-18T11:42:30Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2933", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2Njg1OA==", "url": "https://github.com/apache/incubator-doris/pull/2933#discussion_r380666858", "bodyText": "why not use const std::shared_ptr<MemTable>& to avoid a copy assignment?", "author": "imay", "createdAt": "2020-02-18T13:21:48Z", "path": "be/src/olap/memtable_flush_executor.cpp", "diffHunk": "@@ -35,15 +31,15 @@ std::ostream& operator<<(std::ostream& os, const FlushStatistic& stat) {\n }\n \n OLAPStatus FlushToken::submit(std::shared_ptr<MemTable> memtable) {", "originalCommit": "7d869da287690e18ae57e666cae221296fe689b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1MzY1OQ==", "url": "https://github.com/apache/incubator-doris/pull/2933#discussion_r380753659", "bodyText": "After the submit() returns, the upper layer will immediately reset the memtable (let it be nullptr), and the lower thread pool may not yet start processing it. If a reference is used, when the thread pool starts to process this memtable, the corresponding object may have become invalid.", "author": "lingbin", "createdAt": "2020-02-18T15:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2Njg1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAyNjE5OQ==", "url": "https://github.com/apache/incubator-doris/pull/2933#discussion_r381026199", "bodyText": "std::bind below copies memtable, which will keep it valid in your mentioned situation. So I think it is OK to make the function's argument reference.", "author": "imay", "createdAt": "2020-02-19T01:11:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2Njg1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2NDIzMw==", "url": "https://github.com/apache/incubator-doris/pull/2933#discussion_r381164233", "bodyText": "Oh, I get you. I will change the param to a reference.", "author": "lingbin", "createdAt": "2020-02-19T09:19:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2Njg1OA=="}], "type": "inlineReview"}, {"oid": "e4792a7d831b5d769c687ecbc7b6337d754dcb81", "url": "https://github.com/apache/incubator-doris/commit/e4792a7d831b5d769c687ecbc7b6337d754dcb81", "message": "Fix the flush_status bug in flush-executor\n\nFor a tablet, there may be multiple memtables, which will be\nflushed to disk one by one in the order of generation.\n\nIf a memtable flush fails, then the load job will definitely\nfail, but the previous implementation will overwrite `_flush_status`,\nwhich may make the error can not be detected, leads to an error\nload job to be success.\n\nThis patch also have two other changes:\n1. Use `std::bind` to replace `boost::bind`;\n2. Removes some unneeded headers.", "committedDate": "2020-02-18T15:23:39Z", "type": "commit"}, {"oid": "e4792a7d831b5d769c687ecbc7b6337d754dcb81", "url": "https://github.com/apache/incubator-doris/commit/e4792a7d831b5d769c687ecbc7b6337d754dcb81", "message": "Fix the flush_status bug in flush-executor\n\nFor a tablet, there may be multiple memtables, which will be\nflushed to disk one by one in the order of generation.\n\nIf a memtable flush fails, then the load job will definitely\nfail, but the previous implementation will overwrite `_flush_status`,\nwhich may make the error can not be detected, leads to an error\nload job to be success.\n\nThis patch also have two other changes:\n1. Use `std::bind` to replace `boost::bind`;\n2. Removes some unneeded headers.", "committedDate": "2020-02-18T15:23:39Z", "type": "forcePushed"}, {"oid": "e03105ef0734bd82f2fbf166f0a52f022ec8707c", "url": "https://github.com/apache/incubator-doris/commit/e03105ef0734bd82f2fbf166f0a52f022ec8707c", "message": "Change the param of  to be a reference", "committedDate": "2020-02-19T09:25:25Z", "type": "commit"}]}