{"pr_number": 4366, "pr_title": "Optimise coding bit operation in BE", "pr_createdAt": "2020-08-17T01:37:57Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4366", "timeline": [{"oid": "82dd790c74dfdc7139659c34f659b287da128c09", "url": "https://github.com/apache/incubator-doris/commit/82dd790c74dfdc7139659c34f659b287da128c09", "message": "Optimise coding bit operation", "committedDate": "2020-08-14T02:06:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5MzkxMA==", "url": "https://github.com/apache/incubator-doris/pull/4366#discussion_r471193910", "bodyText": "v is a uint64_t.\nif v > 128, (v & (B -1)) | B not equal v | B", "author": "chaoyli", "createdAt": "2020-08-17T01:50:48Z", "path": "be/src/util/coding.h", "diffHunk": "@@ -143,7 +143,7 @@ extern uint8_t* encode_varint64(uint8_t* dst, uint64_t value);\n inline uint8_t* encode_varint64(uint8_t* dst, uint64_t v) {\n     static const unsigned int B = 128;\n     while (v >= B) {\n-        *(dst++) = (v & (B - 1)) | B;\n+        *(dst++) = v | B;", "originalCommit": "82dd790c74dfdc7139659c34f659b287da128c09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NTc0Mg==", "url": "https://github.com/apache/incubator-doris/pull/4366#discussion_r471195742", "bodyText": "(v & (B-1)) | B = (v | B) & ((B-1) | B ) = (v | B) & (11111111) = v | B\neg:\n129 & \uff08128 - 1\uff09  \uff5c 128 = 129\n129 \uff5c 128 =  129", "author": "ZhangYu0123", "createdAt": "2020-08-17T01:59:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5MzkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM2ODM4OQ==", "url": "https://github.com/apache/incubator-doris/pull/4366#discussion_r471368389", "bodyText": "(v | B) & (11111111) != v | B\nIf v = 1011111111\n(v | B) = 1011111111\n(v | B) &  (11111111) =  11111111", "author": "imay", "createdAt": "2020-08-17T09:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5MzkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg2NzI3OQ==", "url": "https://github.com/apache/incubator-doris/pull/4366#discussion_r471867279", "bodyText": "v >>= 7;\n\nIn the loop, low seven bits of v shift right dst every time  and the eight bit is used to mark whether the number is continue to compression.   The low eight bits is assgined to *dst whitch is uint_8.\nIn low eight bits,  (v | B) & (11111111) = 11111111.", "author": "ZhangYu0123", "createdAt": "2020-08-18T01:49:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5MzkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg2NzYzMA==", "url": "https://github.com/apache/incubator-doris/pull/4366#discussion_r471867630", "bodyText": "This is the implementation in leveldb.", "author": "ZhangYu0123", "createdAt": "2020-08-18T01:51:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5MzkxMA=="}], "type": "inlineReview"}, {"oid": "77444f137b0bc9c4f2976f1089d4222bcaa871d5", "url": "https://github.com/apache/incubator-doris/commit/77444f137b0bc9c4f2976f1089d4222bcaa871d5", "message": "add comment", "committedDate": "2020-08-18T03:15:16Z", "type": "commit"}]}