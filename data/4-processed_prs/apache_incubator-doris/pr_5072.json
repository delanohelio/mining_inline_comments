{"pr_number": 5072, "pr_title": "[Bug] Fix the bug of where condition a in ('A', 'B', 'V') and a in ('A') return error result", "pr_createdAt": "2020-12-11T17:48:11Z", "pr_url": "https://github.com/apache/incubator-doris/pull/5072", "timeline": [{"oid": "fe04f339ed5ceafbae730007bfc1f5ca322d42f0", "url": "https://github.com/apache/incubator-doris/commit/fe04f339ed5ceafbae730007bfc1f5ca322d42f0", "message": "[Bug] Fix the bug of where condition a in ('A', 'B', 'V') and a in ('A') return error result\n[Refactor] Refactor ColumnRangeValue and OlapScanNode\n\nThis patch mainly do the following:\n- Fix issue #5071\n- Change type_min in ColumnRangeValue as static\n- Add Class of type_limit make code clear\n- Refactor the function of normalize_in_and_eq_predicate", "committedDate": "2020-12-14T08:05:06Z", "type": "commit"}, {"oid": "fe04f339ed5ceafbae730007bfc1f5ca322d42f0", "url": "https://github.com/apache/incubator-doris/commit/fe04f339ed5ceafbae730007bfc1f5ca322d42f0", "message": "[Bug] Fix the bug of where condition a in ('A', 'B', 'V') and a in ('A') return error result\n[Refactor] Refactor ColumnRangeValue and OlapScanNode\n\nThis patch mainly do the following:\n- Fix issue #5071\n- Change type_min in ColumnRangeValue as static\n- Add Class of type_limit make code clear\n- Refactor the function of normalize_in_and_eq_predicate", "committedDate": "2020-12-14T08:05:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwODEwMg==", "url": "https://github.com/apache/incubator-doris/pull/5072#discussion_r542208102", "bodyText": "calculate is_fixed_value_range and range.is_fixed_value_range once.", "author": "morningman", "createdAt": "2020-12-14T08:49:59Z", "path": "be/src/exec/olap_common.h", "diffHunk": "@@ -495,6 +517,55 @@ bool ColumnValueRange<T>::is_in_range(const T& value) {\n     return false;\n }\n \n+template <class T>\n+void ColumnValueRange<T>::intersection(ColumnValueRange<T>& range) {\n+    // 1. clear if column type not match\n+    if (_column_type != range._column_type) {\n+        set_empty_value_range();\n+    }\n+\n+    // 2. clear if any range is empty\n+    if (is_empty_value_range() || range.is_empty_value_range()) {\n+        set_empty_value_range();\n+    }\n+\n+    std::set<T> result_values;\n+    // 3. fixed_value intersection\n+    if (is_fixed_value_range() || range.is_fixed_value_range()) {", "originalCommit": "fe04f339ed5ceafbae730007bfc1f5ca322d42f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1fe76084ebefb557cec5fede2eb6c41382e6bf50", "url": "https://github.com/apache/incubator-doris/commit/1fe76084ebefb557cec5fede2eb6c41382e6bf50", "message": "change copy to reference", "committedDate": "2020-12-14T11:12:17Z", "type": "commit"}, {"oid": "1fe76084ebefb557cec5fede2eb6c41382e6bf50", "url": "https://github.com/apache/incubator-doris/commit/1fe76084ebefb557cec5fede2eb6c41382e6bf50", "message": "change copy to reference", "committedDate": "2020-12-14T11:12:17Z", "type": "forcePushed"}]}