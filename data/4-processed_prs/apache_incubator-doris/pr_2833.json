{"pr_number": 2833, "pr_title": "Improve initialization flow of Schema", "pr_createdAt": "2020-02-04T08:51:00Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2833", "timeline": [{"oid": "6352373c39615da2315d4167285865080b10701a", "url": "https://github.com/apache/incubator-doris/commit/6352373c39615da2315d4167285865080b10701a", "message": "Improve initialization flow of Schema\n\nWhen constructing `Schema` objects, two similar `init` functions\nneed to be called, and the call order is implicitly required, which\nis easy to be misused. At the same time, some of the existing comments\nare missing or out of date, which will cause some misleading.\n\nThis patch unifies the initialization logic of `Schema`.\n\nNo functional changes in this patch.", "committedDate": "2020-02-04T08:47:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU4ODY2MQ==", "url": "https://github.com/apache/incubator-doris/pull/2833#discussion_r374588661", "bodyText": "if _col_ids is what you mean in comment, why not just using int32 instead of ColumnId ?", "author": "morningman", "createdAt": "2020-02-04T10:27:16Z", "path": "be/src/olap/schema.h", "diffHunk": "@@ -120,39 +119,36 @@ class Schema {\n     bool is_null(const char* row, int index) const {\n         return *reinterpret_cast<const bool*>(row + _col_offsets[index]);\n     }\n-\n     void set_is_null(void* row, uint32_t cid, bool is_null) const {\n         *reinterpret_cast<bool*>((char*)row + _col_offsets[cid]) = is_null;\n     }\n \n-    size_t schema_size() const {\n-        return _schema_size;\n-    }\n-\n     size_t num_columns() const { return _cols.size(); }\n     size_t num_column_ids() const { return _col_ids.size(); }\n     const std::vector<ColumnId>& column_ids() const { return _col_ids; }\n+\n private:\n-    // all valid ColumnIds in this schema\n+    void _init(const std::vector<TabletColumn>& cols,\n+               const std::vector<ColumnId>& col_ids,\n+               size_t num_key_columns);\n+    void _init(const std::vector<const Field*>& cols,\n+               const std::vector<ColumnId>& col_ids,\n+               size_t num_key_columns);\n+\n+    void _copy_from(const Schema& other);\n+\n+    // NOTE: The ColumnId here represents the sequential index number (starting from 0) of\n+    // a column in current row, not the unique id-identifier of each column", "originalCommit": "6352373c39615da2315d4167285865080b10701a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyOTA4NA==", "url": "https://github.com/apache/incubator-doris/pull/2833#discussion_r374629084", "bodyText": "It seems that the type alias ColumnId really means ColumnIdx in our code\uff0cso It was left there unmodified.", "author": "lingbin", "createdAt": "2020-02-04T11:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU4ODY2MQ=="}], "type": "inlineReview"}]}