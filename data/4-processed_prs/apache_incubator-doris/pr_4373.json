{"pr_number": 4373, "pr_title": "[Optimize]Optimize the disk selection strategy on BE for tablet creation", "pr_createdAt": "2020-08-17T05:58:42Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4373", "timeline": [{"oid": "c8f5b3aa90c0cb7dc2979eb0cac3dec209a6eb18", "url": "https://github.com/apache/incubator-doris/commit/c8f5b3aa90c0cb7dc2979eb0cac3dec209a6eb18", "message": "Optimize the disk selection strategy on BE for tablet creation", "committedDate": "2020-08-13T13:20:17Z", "type": "commit"}, {"oid": "d253542537bb00cd3cb23efdda2f3d7557ab4575", "url": "https://github.com/apache/incubator-doris/commit/d253542537bb00cd3cb23efdda2f3d7557ab4575", "message": "Optimize the disk selection strategy on BE for tablet creation", "committedDate": "2020-08-13T14:24:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUzNDEyMg==", "url": "https://github.com/apache/incubator-doris/pull/4373#discussion_r473534122", "bodyText": "What's the purpose of the this random_shuffle?", "author": "chaoyli", "createdAt": "2020-08-20T02:04:28Z", "path": "be/src/olap/storage_engine.cpp", "diffHunk": "@@ -428,6 +428,18 @@ std::vector<DataDir*> StorageEngine::get_stores_for_create_tablet(\n     std::random_device rd;\n     srand(rd());\n     std::random_shuffle(stores.begin(), stores.end());\n+    // Two random choices\n+    for (int i = 0; i < stores.size(); i++) {\n+        int j = i + 1;\n+        if (j < stores.size()) {\n+            if (stores[i]->tablet_set().size() > stores[j]->tablet_set().size()) {\n+                std::swap(stores[i], stores[j]);\n+            }\n+            std::random_shuffle(stores.begin() + j, stores.end());", "originalCommit": "d253542537bb00cd3cb23efdda2f3d7557ab4575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU1ODA1Mg==", "url": "https://github.com/apache/incubator-doris/pull/4373#discussion_r475558052", "bodyText": "@chaoyli\nThe purpose of the this random_shuffle is that:\nIf it failed to create tablet on the first disk selected using \"two random choices\", it is necessary to select another disk from the remaining disks to create the tablet by using \"two random choices\" again. This random_shuffle is the beginning of the next \"two random choices\".", "author": "weizuo93", "createdAt": "2020-08-24T12:19:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUzNDEyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1NjQwMw==", "url": "https://github.com/apache/incubator-doris/pull/4373#discussion_r473556403", "bodyText": "@weizuo93 you can use std::sort directly, and std::random_shuffle in line 430 is not needed?", "author": "acelyc111", "createdAt": "2020-08-20T02:50:29Z", "path": "be/src/olap/storage_engine.cpp", "diffHunk": "@@ -428,6 +428,18 @@ std::vector<DataDir*> StorageEngine::get_stores_for_create_tablet(\n     std::random_device rd;\n     srand(rd());\n     std::random_shuffle(stores.begin(), stores.end());\n+    // Two random choices\n+    for (int i = 0; i < stores.size(); i++) {\n+        int j = i + 1;\n+        if (j < stores.size()) {\n+            if (stores[i]->tablet_set().size() > stores[j]->tablet_set().size()) {\n+                std::swap(stores[i], stores[j]);\n+            }", "originalCommit": "d253542537bb00cd3cb23efdda2f3d7557ab4575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY0MDU0NQ==", "url": "https://github.com/apache/incubator-doris/pull/4373#discussion_r475640545", "bodyText": "@acelyc111\nIf we use std::sort directly, all tablets will be created on the same disk which has the least amount of tablets. I think it would be better to take into account both the number of tablets on the disk and the randomness of disk selection.", "author": "weizuo93", "createdAt": "2020-08-24T14:09:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1NjQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjA2MzI2Mg==", "url": "https://github.com/apache/incubator-doris/pull/4373#discussion_r476063262", "bodyText": "@weizuo93 I got it.", "author": "acelyc111", "createdAt": "2020-08-25T02:05:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1NjQwMw=="}], "type": "inlineReview"}]}