{"pr_number": 2641, "pr_title": "CreateViewStmt/AlterViewStmt support cte and fix bug", "pr_createdAt": "2020-01-02T15:04:22Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2641", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc4MzkyOQ==", "url": "https://github.com/apache/incubator-doris/pull/2641#discussion_r362783929", "bodyText": "should use a new Analyzer", "author": "imay", "createdAt": "2020-01-03T11:48:50Z", "path": "fe/src/main/java/org/apache/doris/analysis/CreateViewStmt.java", "diffHunk": "@@ -55,21 +55,17 @@ public String getComment() {\n \n     @Override\n     public void analyze(Analyzer analyzer) throws AnalysisException, UserException {\n-        if (cols != null) {\n-            cloneStmt = viewDefStmt.clone();\n-        }\n         tableName.analyze(analyzer);\n         viewDefStmt.setNeedToSql(true);\n-        // Analyze view define statement\n-        Analyzer viewAnalyzer = new Analyzer(analyzer);\n-        viewDefStmt.analyze(viewAnalyzer);\n \n         // check privilege\n         if (!Catalog.getCurrentCatalog().getAuth().checkTblPriv(ConnectContext.get(), tableName.getDb(),\n                                                                 tableName.getTbl(), PrivPredicate.CREATE)) {\n             ErrorReport.reportAnalysisException(ErrorCode.ERR_SPECIFIC_ACCESS_DENIED_ERROR, \"CREATE\");\n         }\n \n+        // Analyze view define statement\n+        viewDefStmt.analyze(analyzer);", "originalCommit": "93f4f10e64c676095abdee8ca7d3d63d5e0999cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU1OTExNA==", "url": "https://github.com/apache/incubator-doris/pull/2641#discussion_r363559114", "bodyText": "fixed", "author": "xy720", "createdAt": "2020-01-07T01:37:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc4MzkyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc4NDc1MA==", "url": "https://github.com/apache/incubator-doris/pull/2641#discussion_r362784750", "bodyText": "I'm not sure that the following will be right for every case.", "author": "imay", "createdAt": "2020-01-03T11:52:49Z", "path": "fe/src/main/java/org/apache/doris/analysis/BaseViewStmt.java", "diffHunk": "@@ -113,27 +113,21 @@ protected void createColumnAndViewDefs(Analyzer analyzer) throws AnalysisExcepti\n             return;\n         }\n \n-        Analyzer tmpAnalyzer = new Analyzer(analyzer);", "originalCommit": "93f4f10e64c676095abdee8ca7d3d63d5e0999cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc4NTA5MQ==", "url": "https://github.com/apache/incubator-doris/pull/2641#discussion_r362785091", "bodyText": "Is this work for a function call in select list?", "author": "imay", "createdAt": "2020-01-03T11:54:24Z", "path": "fe/src/main/java/org/apache/doris/analysis/BaseViewStmt.java", "diffHunk": "@@ -113,27 +113,21 @@ protected void createColumnAndViewDefs(Analyzer analyzer) throws AnalysisExcepti\n             return;\n         }\n \n-        Analyzer tmpAnalyzer = new Analyzer(analyzer);\n-        List<String> colNames = cols.stream().map(c -> c.getColName()).collect(Collectors.toList());\n-        cloneStmt.substituteSelectList(tmpAnalyzer, colNames);\n-        inlineViewDef = cloneStmt.toSql();\n-\n-        // StringBuilder sb = new StringBuilder();\n-        // sb.append(\"SELECT \");\n-        // for (int i = 0; i < columnNames.size(); ++i) {\n-        //     if (i != 0) {\n-        //         sb.append(\", \");\n-        //     }\n-        //     String colRef = viewDefStmt.getColLabels().get(i);\n-        //     if (!colRef.startsWith(\"`\")) {\n-        //         colRef = \"`\" + colRef + \"`\";\n-        //     }\n-        //     String colAlias = finalCols.get(i).getName();\n-\n-        //     sb.append(String.format(\"`%s`.%s AS `%s`\", tableName.getTbl(), colRef, colAlias));\n-        // }\n-        // sb.append(String.format(\" FROM (%s) %s\", originalViewDef, tableName.getTbl()));\n-        // inlineViewDef = sb.toString();\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"SELECT \");\n+        for (int i = 0; i < finalCols.size(); ++i) {\n+            if (i != 0) {\n+                sb.append(\", \");\n+            }\n+            String colRef = viewDefStmt.getColLabels().get(i);\n+            if (!colRef.startsWith(\"`\")) {\n+                colRef = \"`\" + colRef + \"`\";\n+            }\n+            String colAlias = finalCols.get(i).getName();\n+            sb.append(String.format(\"`%s`.%s AS `%s`\", tableName.getTbl(), colRef, colAlias));", "originalCommit": "93f4f10e64c676095abdee8ca7d3d63d5e0999cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4MTE5Mw==", "url": "https://github.com/apache/incubator-doris/pull/2641#discussion_r363181193", "bodyText": "It is work. Because the analyze is happen at before. What is doing here is just to wrap another sql outside the previous analyzed sql.", "author": "xy720", "createdAt": "2020-01-06T07:17:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc4NTA5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc4NTE4Ng==", "url": "https://github.com/apache/incubator-doris/pull/2641#discussion_r362785186", "bodyText": "must analyze view with a new analyzer.", "author": "imay", "createdAt": "2020-01-03T11:55:00Z", "path": "fe/src/main/java/org/apache/doris/analysis/AlterViewStmt.java", "diffHunk": "@@ -54,20 +62,17 @@ public void analyze(Analyzer analyzer) throws AnalysisException, UserException {\n                     tableName.getTbl());\n         }\n \n-        if (cols != null) {\n-            cloneStmt = viewDefStmt.clone();\n-        }\n         viewDefStmt.setNeedToSql(true);\n-        Analyzer viewAnalyzer = new Analyzer(analyzer);\n+        viewDefStmt.analyze(analyzer);", "originalCommit": "93f4f10e64c676095abdee8ca7d3d63d5e0999cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU2MDEwNA==", "url": "https://github.com/apache/incubator-doris/pull/2641#discussion_r363560104", "bodyText": "fixed", "author": "xy720", "createdAt": "2020-01-07T01:42:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc4NTE4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAyNDQ1OQ==", "url": "https://github.com/apache/incubator-doris/pull/2641#discussion_r363024459", "bodyText": "You can also add @SerializedName to newFullSchema", "author": "morningman", "createdAt": "2020-01-04T08:55:09Z", "path": "fe/src/main/java/org/apache/doris/persist/AlterViewInfo.java", "diffHunk": "@@ -35,15 +38,18 @@\n     private String inlineViewDef;\n     @SerializedName(value = \"sqlMode\")\n     private long sqlMode;\n+    private List<Column> newFullSchema;", "originalCommit": "93f4f10e64c676095abdee8ca7d3d63d5e0999cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU1OTY1OQ==", "url": "https://github.com/apache/incubator-doris/pull/2641#discussion_r363559659", "bodyText": "done", "author": "xy720", "createdAt": "2020-01-07T01:40:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAyNDQ1OQ=="}], "type": "inlineReview"}, {"oid": "c9221d0507d7431de6dfddf1597c0aa125833f3a", "url": "https://github.com/apache/incubator-doris/commit/c9221d0507d7431de6dfddf1597c0aa125833f3a", "message": "commit 9", "committedDate": "2020-01-07T14:40:42Z", "type": "forcePushed"}, {"oid": "9941b94301194f069a2e15ec224334c0faf263cb", "url": "https://github.com/apache/incubator-doris/commit/9941b94301194f069a2e15ec224334c0faf263cb", "message": "commit 1: support cte in view definition", "committedDate": "2020-01-08T12:49:06Z", "type": "commit"}, {"oid": "5d04a758da6c3c149923f27c7bc32edc508bf823", "url": "https://github.com/apache/incubator-doris/commit/5d04a758da6c3c149923f27c7bc32edc508bf823", "message": "commit 2: fix replay alter-view bug", "committedDate": "2020-01-08T12:49:06Z", "type": "commit"}, {"oid": "8f1d74609c9ab181f4f997d9aaaeb6bef5f3b78e", "url": "https://github.com/apache/incubator-doris/commit/8f1d74609c9ab181f4f997d9aaaeb6bef5f3b78e", "message": "commit 3 : fix persist", "committedDate": "2020-01-08T12:49:06Z", "type": "commit"}, {"oid": "aec799c84b63497a64b21df3498bb6885563741f", "url": "https://github.com/apache/incubator-doris/commit/aec799c84b63497a64b21df3498bb6885563741f", "message": "commit 4 : fix persist alterViewInfo", "committedDate": "2020-01-08T12:49:06Z", "type": "commit"}, {"oid": "9525d39a3989bf2670698ec3d669b50d712ded10", "url": "https://github.com/apache/incubator-doris/commit/9525d39a3989bf2670698ec3d669b50d712ded10", "message": "commit 5: fix-persist", "committedDate": "2020-01-08T12:52:58Z", "type": "commit"}, {"oid": "5d193ce20cf32fafafbb15dea9df456ed88d7372", "url": "https://github.com/apache/incubator-doris/commit/5d193ce20cf32fafafbb15dea9df456ed88d7372", "message": "commit 6: fix persist", "committedDate": "2020-01-08T12:54:28Z", "type": "commit"}, {"oid": "5b1fcd6a7d2d3d4ef1a4a10c75d29392afccea56", "url": "https://github.com/apache/incubator-doris/commit/5b1fcd6a7d2d3d4ef1a4a10c75d29392afccea56", "message": "commit 7: fix persist", "committedDate": "2020-01-08T12:54:28Z", "type": "commit"}, {"oid": "bb023b6175f0a20761100b2c6359b6b48179b345", "url": "https://github.com/apache/incubator-doris/commit/bb023b6175f0a20761100b2c6359b6b48179b345", "message": "commit 8: fix some typo", "committedDate": "2020-01-08T12:54:28Z", "type": "commit"}, {"oid": "6e820d80bf053131930ffdadbb45286ded393f89", "url": "https://github.com/apache/incubator-doris/commit/6e820d80bf053131930ffdadbb45286ded393f89", "message": "commit 8: add unit test", "committedDate": "2020-01-08T12:54:28Z", "type": "commit"}, {"oid": "3c2655dc580aed0940c6e2e0dd8658af1916dd47", "url": "https://github.com/apache/incubator-doris/commit/3c2655dc580aed0940c6e2e0dd8658af1916dd47", "message": "commit 9", "committedDate": "2020-01-08T12:54:28Z", "type": "commit"}, {"oid": "5cf7b26975f6bd72d9f36e73fd1d5186ce068794", "url": "https://github.com/apache/incubator-doris/commit/5cf7b26975f6bd72d9f36e73fd1d5186ce068794", "message": "commit 10", "committedDate": "2020-01-08T12:54:29Z", "type": "commit"}, {"oid": "690a5f6e2ae14e0f363bb2b514fe082c3ce6616e", "url": "https://github.com/apache/incubator-doris/commit/690a5f6e2ae14e0f363bb2b514fe082c3ce6616e", "message": "commit 11: add some comments", "committedDate": "2020-01-08T12:55:13Z", "type": "commit"}, {"oid": "3d045f0cd8f9b407eee2fc62e4a64586c99344a7", "url": "https://github.com/apache/incubator-doris/commit/3d045f0cd8f9b407eee2fc62e4a64586c99344a7", "message": "commit 12: Support GSON serialization for class Type", "committedDate": "2020-01-08T12:57:34Z", "type": "commit"}, {"oid": "3d045f0cd8f9b407eee2fc62e4a64586c99344a7", "url": "https://github.com/apache/incubator-doris/commit/3d045f0cd8f9b407eee2fc62e4a64586c99344a7", "message": "commit 12: Support GSON serialization for class Type", "committedDate": "2020-01-08T12:57:34Z", "type": "forcePushed"}, {"oid": "22288acf6f66cd833367d6637a5d3b7fbf3ad33e", "url": "https://github.com/apache/incubator-doris/commit/22288acf6f66cd833367d6637a5d3b7fbf3ad33e", "message": "Update GsonUtils.java", "committedDate": "2020-01-08T14:17:32Z", "type": "commit"}, {"oid": "7936fbeacf6a17c7bb5e3ea85f334a57234a8e20", "url": "https://github.com/apache/incubator-doris/commit/7936fbeacf6a17c7bb5e3ea85f334a57234a8e20", "message": "Update Column.java", "committedDate": "2020-01-08T14:19:42Z", "type": "commit"}]}