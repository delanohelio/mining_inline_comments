{"pr_number": 3051, "pr_title": "Support sharding tablet_map_lock into more small map locks to make good performance for tablet manage task", "pr_createdAt": "2020-03-07T06:39:04Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3051", "timeline": [{"oid": "db846ee07f53ee5310f57cbfca7d17cfbb650e55", "url": "https://github.com/apache/incubator-doris/commit/db846ee07f53ee5310f57cbfca7d17cfbb650e55", "message": "Support sharding tablet_map_lock into more small map locks to make good performance for tablet manage task", "committedDate": "2020-03-07T06:31:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzODUxMw==", "url": "https://github.com/apache/incubator-doris/pull/3051#discussion_r389238513", "bodyText": "This method name is _add_tablet_to_map_unlocked(), why you add a rlock here?", "author": "morningman", "createdAt": "2020-03-07T08:35:10Z", "path": "be/src/olap/tablet_manager.cpp", "diffHunk": "@@ -172,24 +183,29 @@ OLAPStatus TabletManager::_add_tablet_to_map_unlocked(TTabletId tablet_id, Schem\n     RETURN_NOT_OK_LOG(tablet->register_tablet_into_dir(), Substitute(\n             \"fail to register tablet into StorageEngine. data_dir=$0\",\n             tablet->data_dir()->path()));\n-\n-    _tablet_map[tablet_id].table_arr.push_back(tablet);\n-    _tablet_map[tablet_id].table_arr.sort(_cmp_tablet_by_create_time);\n-    _partition_tablet_map[tablet->partition_id()].insert(tablet->get_tablet_info());\n+    tablet_map_t& tablet_map = _get_tablet_map(tablet_id);\n+    tablet_map[tablet_id].table_arr.push_back(tablet);\n+    tablet_map[tablet_id].table_arr.sort(_cmp_tablet_by_create_time);\n+    {\n+        ReadLock rlock(&_partition_tablet_map_lock);\n+        _partition_tablet_map[tablet->partition_id()].insert(tablet->get_tablet_info());", "originalCommit": "db846ee07f53ee5310f57cbfca7d17cfbb650e55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MzI0NA==", "url": "https://github.com/apache/incubator-doris/pull/3051#discussion_r389253244", "bodyText": "here should be wlock of _partition_tablet_map_lock\uff0c to protect _partition_tablet_map\uff0c_add_tablet_to_map_unlocked is that thread not obtained _tablet_map_lock", "author": "caiconghui", "createdAt": "2020-03-07T13:01:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzODUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzODg0OQ==", "url": "https://github.com/apache/incubator-doris/pull/3051#discussion_r389238849", "bodyText": "When there are lots of tablet in tablet_info_vec, there will be many lock/unlock operation. Does  it matter?", "author": "morningman", "createdAt": "2020-03-07T08:40:58Z", "path": "be/src/olap/tablet_manager.cpp", "diffHunk": "@@ -533,11 +551,12 @@ OLAPStatus TabletManager::_drop_tablet_unlocked(\n OLAPStatus TabletManager::drop_tablets_on_error_root_path(\n         const vector<TabletInfo>& tablet_info_vec) {\n     OLAPStatus res = OLAP_SUCCESS;\n-    WriteLock wlock(&_tablet_map_lock);\n \n     for (const TabletInfo& tablet_info : tablet_info_vec) {\n         TTabletId tablet_id = tablet_info.tablet_id;\n         TSchemaHash schema_hash = tablet_info.schema_hash;\n+        RWMutex& tablet_map_lock = _get_tablet_map_lock(tablet_id);\n+        WriteLock wlock(&tablet_map_lock);", "originalCommit": "db846ee07f53ee5310f57cbfca7d17cfbb650e55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MzMwMw==", "url": "https://github.com/apache/incubator-doris/pull/3051#discussion_r389253303", "bodyText": "ok, I will refactor the code", "author": "caiconghui", "createdAt": "2020-03-07T13:02:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzODg0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1Mzc2MA==", "url": "https://github.com/apache/incubator-doris/pull/3051#discussion_r389253760", "bodyText": "I think it may slow the clear task, but it is for the clear task, which is not so important for the performance, but there still something to do to reduce times of the  lock and unlock operation", "author": "caiconghui", "createdAt": "2020-03-07T13:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzODg0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzOTUwMA==", "url": "https://github.com/apache/incubator-doris/pull/3051#discussion_r389239500", "bodyText": "And comment of these 2 locks: _partition_tablet_map_lock and _shutdown_tablets_lock.\nEspecially notice the lock order of these locks, to avoid dead lock.", "author": "morningman", "createdAt": "2020-03-07T08:53:15Z", "path": "be/src/olap/tablet_manager.h", "diffHunk": "@@ -190,8 +192,12 @@ class TabletManager {\n     typedef std::unordered_map<int64_t, TableInstances> tablet_map_t;\n \n     // Protect _tablet_map, _partition_tablet_map, _shutdown_tablets\n-    RWMutex _tablet_map_lock;\n-    tablet_map_t _tablet_map;\n+    int32_t _tablet_map_lock_shard_size;\n+    RWMutex *_tablet_map_lock_array;\n+    tablet_map_t *_tablet_map_array;\n+\n+    RWMutex _partition_tablet_map_lock;\n+    RWMutex _shutdown_tablets_lock;", "originalCommit": "db846ee07f53ee5310f57cbfca7d17cfbb650e55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MzM5NQ==", "url": "https://github.com/apache/incubator-doris/pull/3051#discussion_r389253395", "bodyText": "ok", "author": "caiconghui", "createdAt": "2020-03-07T13:03:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzOTUwMA=="}], "type": "inlineReview"}, {"oid": "65434e9669a62f210fc987e776503baebf421c86", "url": "https://github.com/apache/incubator-doris/commit/65434e9669a62f210fc987e776503baebf421c86", "message": "fix", "committedDate": "2020-03-07T13:04:47Z", "type": "commit"}, {"oid": "ac7a1914f253bb70bfbfbc9c7b8c1f5a76392940", "url": "https://github.com/apache/incubator-doris/commit/ac7a1914f253bb70bfbfbc9c7b8c1f5a76392940", "message": "fix ut", "committedDate": "2020-03-08T12:52:11Z", "type": "commit"}]}