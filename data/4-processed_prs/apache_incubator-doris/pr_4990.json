{"pr_number": 4990, "pr_title": "[Doris On ES][Bug-fix] fix boolean predicate pushdown manner", "pr_createdAt": "2020-12-01T04:47:27Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4990", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA3MzQwMg==", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533073402", "bodyText": "_match_none Is preferred.\n_match_none is not initialized before use.", "author": "imay", "createdAt": "2020-12-01T04:57:46Z", "path": "be/src/exec/es/es_query_builder.h", "diffHunk": "@@ -53,6 +53,7 @@ class TermQueryBuilder : public QueryBuilder {\n private:\n     std::string _field;\n     std::string _term;\n+    bool _match_none_;", "originalCommit": "081b5c3a408d278c820fbdb1ade8af561c1e1a1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA3MzYwMA==", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533073600", "bodyText": "std::move is useless", "author": "imay", "createdAt": "2020-12-01T04:58:36Z", "path": "be/src/exec/es/es_query_builder.cpp", "diffHunk": "@@ -53,16 +53,37 @@ TermQueryBuilder::TermQueryBuilder(const std::string& field, const std::string&\n         : _field(field), _term(term) {}\n \n TermQueryBuilder::TermQueryBuilder(const ExtBinaryPredicate& binary_predicate)\n-        : _field(binary_predicate.col.name), _term(binary_predicate.value.to_string()) {}\n+        : _field(binary_predicate.col.name) {\n+        _match_none_ = false;\n+        if (binary_predicate.col.type.type == PrimitiveType::TYPE_BOOLEAN) {\n+            int val = atoi(binary_predicate.value.to_string().c_str());\n+            if (val == 1) {\n+                _term = std::string(\"true\");\n+            } else if (val == 0){\n+                _term = std::string(\"false\");\n+            } else {\n+                // keep semantic consistent with mysql\n+                _match_none_ = true;\n+            }\n+        } else {\n+            _term = std::move(binary_predicate.value.to_string());", "originalCommit": "081b5c3a408d278c820fbdb1ade8af561c1e1a1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1fc0a1441193ee450e55f28b6ec0595311453f8f", "url": "https://github.com/apache/incubator-doris/commit/1fc0a1441193ee450e55f28b6ec0595311453f8f", "message": "[Doris On ES][Bug-fix] fix boolean predicate pushdown manner", "committedDate": "2020-12-01T05:11:56Z", "type": "commit"}, {"oid": "1fc0a1441193ee450e55f28b6ec0595311453f8f", "url": "https://github.com/apache/incubator-doris/commit/1fc0a1441193ee450e55f28b6ec0595311453f8f", "message": "[Doris On ES][Bug-fix] fix boolean predicate pushdown manner", "committedDate": "2020-12-01T05:11:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE1MzI2Mg==", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533153262", "bodyText": "use StringParse::string_to_int instead", "author": "chaoyli", "createdAt": "2020-12-01T08:30:58Z", "path": "be/src/exec/es/es_query_builder.cpp", "diffHunk": "@@ -50,19 +50,39 @@ void ESQueryBuilder::to_json(rapidjson::Document* document, rapidjson::Value* qu\n }\n \n TermQueryBuilder::TermQueryBuilder(const std::string& field, const std::string& term)\n-        : _field(field), _term(term) {}\n+        : _field(field), _term(term), _match_none(false) {}\n \n TermQueryBuilder::TermQueryBuilder(const ExtBinaryPredicate& binary_predicate)\n-        : _field(binary_predicate.col.name), _term(binary_predicate.value.to_string()) {}\n+        : _field(binary_predicate.col.name), _match_none(false) {\n+        if (binary_predicate.col.type.type == PrimitiveType::TYPE_BOOLEAN) {\n+            int val = atoi(binary_predicate.value.to_string().c_str());", "originalCommit": "1fc0a1441193ee450e55f28b6ec0595311453f8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxMjQ5Nw==", "url": "https://github.com/apache/incubator-doris/pull/4990#discussion_r533312497", "bodyText": "I think this is ok", "author": "wuyunfeng", "createdAt": "2020-12-01T10:45:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE1MzI2Mg=="}], "type": "inlineReview"}]}