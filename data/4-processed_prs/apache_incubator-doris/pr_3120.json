{"pr_number": 3120, "pr_title": "[Temp Partition] Support loading data into temp partitions", "pr_createdAt": "2020-03-16T02:30:31Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3120", "timeline": [{"oid": "105f37e110e20a1156f5189f529c7fe0fcfe7ae1", "url": "https://github.com/apache/incubator-doris/commit/105f37e110e20a1156f5189f529c7fe0fcfe7ae1", "message": "first", "committedDate": "2020-03-14T15:53:24Z", "type": "commit"}, {"oid": "7f34a21e2ba98fe981cb51345e9a9e8c3cfe78f1", "url": "https://github.com/apache/incubator-doris/commit/7f34a21e2ba98fe981cb51345e9a9e8c3cfe78f1", "message": "change meta version to 77", "committedDate": "2020-03-14T15:53:24Z", "type": "commit"}, {"oid": "3abb1666d17aa374899e6f78dba9f69f52fc590d", "url": "https://github.com/apache/incubator-doris/commit/3abb1666d17aa374899e6f78dba9f69f52fc590d", "message": "2", "committedDate": "2020-03-15T09:52:22Z", "type": "commit"}, {"oid": "afcd633d29f915042a27e050ccd0f7f9e3c33ab0", "url": "https://github.com/apache/incubator-doris/commit/afcd633d29f915042a27e050ccd0f7f9e3c33ab0", "message": "3", "committedDate": "2020-03-15T15:20:48Z", "type": "commit"}, {"oid": "f40597440ca29fb2ecaf7adc411d9309d7075a91", "url": "https://github.com/apache/incubator-doris/commit/f40597440ca29fb2ecaf7adc411d9309d7075a91", "message": "4", "committedDate": "2020-03-15T15:49:19Z", "type": "commit"}, {"oid": "8c9d450c3111ead6b460df01930a57554ea03cf9", "url": "https://github.com/apache/incubator-doris/commit/8c9d450c3111ead6b460df01930a57554ea03cf9", "message": "5", "committedDate": "2020-03-15T16:18:07Z", "type": "commit"}, {"oid": "7944542561cf022e28b01b4719e5eb612f750352", "url": "https://github.com/apache/incubator-doris/commit/7944542561cf022e28b01b4719e5eb612f750352", "message": "6", "committedDate": "2020-03-16T02:11:25Z", "type": "commit"}, {"oid": "08fbf5b3d18fb7eb6b58492270518457d9768feb", "url": "https://github.com/apache/incubator-doris/commit/08fbf5b3d18fb7eb6b58492270518457d9768feb", "message": "add doc", "committedDate": "2020-03-16T08:55:49Z", "type": "commit"}, {"oid": "ec4f9b31ebee01b03a0fe213c53c0012341130b8", "url": "https://github.com/apache/incubator-doris/commit/ec4f9b31ebee01b03a0fe213c53c0012341130b8", "message": "fix ut", "committedDate": "2020-03-16T13:46:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MzUyMw==", "url": "https://github.com/apache/incubator-doris/pull/3120#discussion_r393043523", "bodyText": "Could we encapsulate the following logic?\n PartitionNames partitionNames = tblRef.getPartitionNames();\n if (partitionNames != null) {\n            if (partitionNames.isTemp()) {\n                throw new AnalysisException(\"xxxx\");\n            }", "author": "kangkaisen", "createdAt": "2020-03-16T14:02:05Z", "path": "fe/src/main/java/org/apache/doris/analysis/AdminRepairTableStmt.java", "diffHunk": "@@ -62,8 +63,12 @@ public void analyze(Analyzer analyzer) throws UserException {\n \n         tblRef.getName().setDb(dbName);\n \n-        if (tblRef.getPartitions() != null && !tblRef.getPartitions().isEmpty()) {\n-            partitions.addAll(tblRef.getPartitions());\n+        PartitionNames partitionNames = tblRef.getPartitionNames();", "originalCommit": "ec4f9b31ebee01b03a0fe213c53c0012341130b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyMzIwMA==", "url": "https://github.com/apache/incubator-doris/pull/3120#discussion_r393723200", "bodyText": "I can just change it to:\nif (tblRef.isTempPartitionSpecified()) {\n        throw new AnalysisException(\"Do not support (cancel)repair temporary partitions\");\n}\nif (tblRef.getPartitionNames() != null) {\n        partitions.addAll(tblRef.getPartitionNames().getPartitionNames());\n}\n\nDoes it better?", "author": "morningman", "createdAt": "2020-03-17T14:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MzUyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NjkxOQ==", "url": "https://github.com/apache/incubator-doris/pull/3120#discussion_r394076919", "bodyText": "I don't think which is better.  Let's keep it unchanged.", "author": "kangkaisen", "createdAt": "2020-03-18T02:43:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MzUyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MjU3OA==", "url": "https://github.com/apache/incubator-doris/pull/3120#discussion_r393052578", "bodyText": "Don't need to check again, we have checked in init method.", "author": "kangkaisen", "createdAt": "2020-03-16T14:14:45Z", "path": "fe/src/main/java/org/apache/doris/planner/OlapTableSink.java", "diffHunk": "@@ -293,7 +293,11 @@ private TOlapTableLocationParam createLocation(OlapTable table) throws UserExcep\n         TOlapTableLocationParam locationParam = new TOlapTableLocationParam();\n         // BE id -> path hash\n         Multimap<Long, Long> allBePathsMap = HashMultimap.create();\n-        for (Partition partition : table.getPartitions()) {\n+        for (Partition partition : table.getAllPartitions()) {\n+            if (!partitionIds.isEmpty() && !partitionIds.contains(partition.getId())) {", "originalCommit": "ec4f9b31ebee01b03a0fe213c53c0012341130b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyMTg5NA==", "url": "https://github.com/apache/incubator-doris/pull/3120#discussion_r393721894", "bodyText": "I didn't get you point? no need to check what ?", "author": "morningman", "createdAt": "2020-03-17T14:30:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MjU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NTg1Ng==", "url": "https://github.com/apache/incubator-doris/pull/3120#discussion_r394075856", "bodyText": "if (!partitionIds.isEmpty() && !partitionIds.contains(partition.getId())) {", "author": "kangkaisen", "createdAt": "2020-03-18T02:39:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MjU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxNTI2Mg==", "url": "https://github.com/apache/incubator-doris/pull/3120#discussion_r394315262", "bodyText": "Here I use this if (!partitionIds.isEmpty() && !partitionIds.contains(partition.getId())) to filter all unrelated partitions. I didn't see any such check logic in init method?", "author": "morningman", "createdAt": "2020-03-18T12:39:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MjU3OA=="}], "type": "inlineReview"}]}