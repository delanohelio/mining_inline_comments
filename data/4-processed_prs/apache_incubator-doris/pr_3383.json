{"pr_number": 3383, "pr_title": "Make running profile clearer and more intuitive to improve usability (#3365)", "pr_createdAt": "2020-04-23T04:06:42Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3383", "timeline": [{"oid": "ac9e3893538fca148723287d6fdfdc3dda501e89", "url": "https://github.com/apache/incubator-doris/commit/ac9e3893538fca148723287d6fdfdc3dda501e89", "message": "Make running profile clearer and more intuitive to improve usability (#3365)\n\nThis CL mainly made the following modifications:\n1. Delete Invalid method in Running Profile Class.\n2. Move Memlimit Counter from blockmgr to frgment and add PeakMemUsage Counter\n3. Fix the bug of buffer pool memlimit counter\n4. Call compute_time_in_profile() before pretty_print() to show the _local_time_percent without child running profile\n5. Add TransferThread ThreadToken count in AveThreadToken Counter", "committedDate": "2020-04-23T04:03:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkyNjY3Ng==", "url": "https://github.com/apache/incubator-doris/pull/3383#discussion_r413926676", "bodyText": "Can you tell the side effect of this operation? Will this thread hang if there is not enough thread resource?", "author": "imay", "createdAt": "2020-04-23T16:06:01Z", "path": "be/src/exec/olap_scan_node.cpp", "diffHunk": "@@ -1038,6 +1038,7 @@ Status OlapScanNode::normalize_binary_predicate(SlotDescriptor* slot, ColumnValu\n \n void OlapScanNode::transfer_thread(RuntimeState* state) {\n     // scanner open pushdown to scanThread\n+    state->resource_pool()->acquire_thread_token();", "originalCommit": "ac9e3893538fca148723287d6fdfdc3dda501e89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NzYwOQ==", "url": "https://github.com/apache/incubator-doris/pull/3383#discussion_r414257609", "bodyText": "Add this operation just to Make AverageThreadTokens more accurate\n\nAverageThreadTokens: 1.00\n\nDo not warry thread hang on this operation\u3002\nacquire_thread_token() just do a lightweight add operation without doing the really thread assignment\ninline void ThreadResourceMgr::ResourcePool::acquire_thread_token() {\n__sync_fetch_and_add(&_num_threads, 1);\n}\n@imay", "author": "HappenLee", "createdAt": "2020-04-24T03:03:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkyNjY3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkyODA4Mw==", "url": "https://github.com/apache/incubator-doris/pull/3383#discussion_r413928083", "bodyText": "If you add profile for this memory tracker, why not _instance_mem_tracker?", "author": "imay", "createdAt": "2020-04-23T16:07:45Z", "path": "be/src/runtime/runtime_state.cpp", "diffHunk": "@@ -226,8 +226,12 @@ Status RuntimeState::init_mem_trackers(const TUniqueId& query_id) {\n \n     // _query_mem_tracker = MemTracker::get_query_mem_tracker(\n     //         query_id, bytes_limit, _exec_env->process_mem_tracker());\n+\n+    auto mem_tracker_counter = ADD_COUNTER(&_profile, \"MemoryLimit\", TUnit::BYTES);\n+    mem_tracker_counter->set(bytes_limit);\n+\n     _query_mem_tracker.reset(\n-            new MemTracker(bytes_limit, runtime_profile()->name(), _exec_env->process_mem_tracker()));\n+            new MemTracker(&_profile, bytes_limit, runtime_profile()->name(), _exec_env->process_mem_tracker()));", "originalCommit": "ac9e3893538fca148723287d6fdfdc3dda501e89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1ODYwMQ==", "url": "https://github.com/apache/incubator-doris/pull/3383#discussion_r414258601", "bodyText": "yes\uff0cI check code\u3002the _instance_mem_tracker is more appropriate", "author": "HappenLee", "createdAt": "2020-04-24T03:07:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkyODA4Mw=="}], "type": "inlineReview"}, {"oid": "718ff99091f43a33c2026a1c5da8fd95397b6f18", "url": "https://github.com/apache/incubator-doris/commit/718ff99091f43a33c2026a1c5da8fd95397b6f18", "message": "add some code annotation for compute_time_in_profile()\nchange profile counter to _instance_mem_tracker", "committedDate": "2020-04-24T03:37:48Z", "type": "commit"}]}