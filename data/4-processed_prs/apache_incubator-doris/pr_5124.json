{"pr_number": 5124, "pr_title": "[Compaction] Fix bug and add graceful exit for compaction producer", "pr_createdAt": "2020-12-22T13:49:31Z", "pr_url": "https://github.com/apache/incubator-doris/pull/5124", "timeline": [{"oid": "efbd29a48c3f9d1d917d5ced986b92fc44f18227", "url": "https://github.com/apache/incubator-doris/commit/efbd29a48c3f9d1d917d5ced986b92fc44f18227", "message": "refactor compaction producer code", "committedDate": "2021-01-05T03:33:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyNzMxNQ==", "url": "https://github.com/apache/incubator-doris/pull/5124#discussion_r551827315", "bodyText": "You defined it as a mutable config, you should reassign interval  in while loop.", "author": "acelyc111", "createdAt": "2021-01-05T09:55:19Z", "path": "be/src/olap/olap_server.cpp", "diffHunk": "@@ -314,6 +314,7 @@ void StorageEngine::_compaction_tasks_producer_callback() {\n     ProfilerRegisterThread();\n #endif\n     LOG(INFO) << \"try to start compaction producer process!\";\n+    int64_t interval = config::generate_compaction_tasks_min_interval_ms;", "originalCommit": "ff2ab4f2a9cd5fc65e66072f393a19227bbb73b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwNTg0Nw==", "url": "https://github.com/apache/incubator-doris/pull/5124#discussion_r552405847", "bodyText": "It sounds reasonable.", "author": "weizuo93", "createdAt": "2021-01-06T07:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyNzMxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI5NDM0MQ==", "url": "https://github.com/apache/incubator-doris/pull/5124#discussion_r554294341", "bodyText": "Need to call THREAD_JOIN(_compaction_tasks_producer_thread); in StorageEngine::stop(), otherwise it's still unsafe as described in #5213", "author": "acelyc111", "createdAt": "2021-01-09T05:27:33Z", "path": "be/src/olap/olap_server.cpp", "diffHunk": "@@ -390,7 +379,7 @@ void StorageEngine::_compaction_tasks_producer_callback() {\n         } else {\n             sleep(config::check_auto_compaction_interval_seconds);\n         }\n-    }\n+    } while (!_stop_background_threads_latch.wait_for(MonoDelta::FromMilliseconds(interval)));", "originalCommit": "4744306d2072640eed7b2a3ad73a500f9e1f3fd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDMwNjc4Mg==", "url": "https://github.com/apache/incubator-doris/pull/5124#discussion_r554306782", "bodyText": "OK.", "author": "weizuo93", "createdAt": "2021-01-09T07:53:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI5NDM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg4MTY5Mw==", "url": "https://github.com/apache/incubator-doris/pull/5124#discussion_r554881693", "bodyText": "@weizuo93 @acelyc111\nIs _compaction_thread_pool also need call shutdown?\nIt seems _compaction_thread_pool still depend on 'this->_permit_limiter'", "author": "stdpain", "createdAt": "2021-01-11T08:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI5NDM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDkwOTY1Mg==", "url": "https://github.com/apache/incubator-doris/pull/5124#discussion_r554909652", "bodyText": "@stdpain\n_compaction_thread_pool has been shutdown in ~StorageEngine().", "author": "weizuo93", "createdAt": "2021-01-11T09:19:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI5NDM0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI5NDU3Mg==", "url": "https://github.com/apache/incubator-doris/pull/5124#discussion_r554294572", "bodyText": "What's the reason not use std::set?", "author": "acelyc111", "createdAt": "2021-01-09T05:31:11Z", "path": "be/src/olap/olap_server.cpp", "diffHunk": "@@ -412,4 +401,26 @@ std::vector<TabletSharedPtr> StorageEngine::_compaction_tasks_generator(\n     }\n     return tablets_compaction;\n }\n+\n+void StorageEngine::_push_tablet_into_submitted_compaction(TabletSharedPtr tablet) {\n+    std::unique_lock<std::mutex> lock(_tablet_submitted_compaction_mutex);\n+    _tablet_submitted_compaction[tablet->data_dir()].emplace_back(\n+            tablet->tablet_id());\n+}\n+\n+void StorageEngine::_pop_tablet_from_submitted_compaction(TabletSharedPtr tablet) {\n+    std::unique_lock<std::mutex> lock(_tablet_submitted_compaction_mutex);\n+    std::vector<TTabletId>::iterator it_tablet =\n+            find(_tablet_submitted_compaction[tablet->data_dir()].begin(),\n+                 _tablet_submitted_compaction[tablet->data_dir()].end(),\n+                 tablet->tablet_id());", "originalCommit": "4744306d2072640eed7b2a3ad73a500f9e1f3fd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjMyMzgyNg==", "url": "https://github.com/apache/incubator-doris/pull/5124#discussion_r556323826", "bodyText": "You can do this refactor in another PR.", "author": "acelyc111", "createdAt": "2021-01-13T07:55:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI5NDU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAwNzM2MQ==", "url": "https://github.com/apache/incubator-doris/pull/5124#discussion_r557007361", "bodyText": "OK.", "author": "weizuo93", "createdAt": "2021-01-14T02:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI5NDU3Mg=="}], "type": "inlineReview"}, {"oid": "b700506aaec40c5bc3f3363a53f79ba7dabd6752", "url": "https://github.com/apache/incubator-doris/commit/b700506aaec40c5bc3f3363a53f79ba7dabd6752", "message": "Fix bug and add graceful exit for compaction producer", "committedDate": "2021-01-19T04:25:36Z", "type": "commit"}, {"oid": "b700506aaec40c5bc3f3363a53f79ba7dabd6752", "url": "https://github.com/apache/incubator-doris/commit/b700506aaec40c5bc3f3363a53f79ba7dabd6752", "message": "Fix bug and add graceful exit for compaction producer", "committedDate": "2021-01-19T04:25:36Z", "type": "forcePushed"}]}