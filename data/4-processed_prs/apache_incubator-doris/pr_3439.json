{"pr_number": 3439, "pr_title": "Support append_trailing_char_if_absent  function", "pr_createdAt": "2020-04-29T16:41:48Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3439", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjA5MA==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417732090", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fn.getFunctionName().getFunction().equals(\"append_trailing_char_if_absent\")) {\n          \n          \n            \n                    if (fnName.getFunction().equalsIgnoreCase(\"append_trailing_char_if_absent\")) {", "author": "kangkaisen", "createdAt": "2020-04-30T03:23:04Z", "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -604,6 +604,23 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n             return;\n         }\n \n+        if (fn.getFunctionName().getFunction().equals(\"append_trailing_char_if_absent\")) {", "originalCommit": "c4c1adee5c49ca304903f792b5fa40055648c47c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417732926", "bodyText": "Why new result could null?", "author": "kangkaisen", "createdAt": "2020-04-30T03:26:50Z", "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);\n+    if (UNLIKELY(result.is_null)) {", "originalCommit": "c4c1adee5c49ca304903f792b5fa40055648c47c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc3ODc0Ng==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417778746", "bodyText": "StringVal will alloc memory by context's FreePool, that may be null. I use this check according to other string_functions. But this check is_null may be useless, It can be removed", "author": "Youngwb", "createdAt": "2020-04-30T06:18:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ5Mjc4Ng==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r418492786", "bodyText": "In fact, FreePool allocate never return null.\nSo result.is_null check is unnecessary.", "author": "kangkaisen", "createdAt": "2020-05-01T10:29:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNDU4Ng==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420614586", "bodyText": "I agree with kangkaisen, this check can be removed", "author": "imay", "createdAt": "2020-05-06T08:10:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1MzA4Ng==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420653086", "bodyText": "ok,Done", "author": "Youngwb", "createdAt": "2020-05-06T09:19:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczMjkyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MDY0Mg==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417860642", "bodyText": "Should change this documents according to the new document framework.", "author": "imay", "createdAt": "2020-04-30T08:59:00Z", "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--", "originalCommit": "3fac55ef8d5e269286fb5984cea639bceaeac533", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjIyOQ==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417922229", "bodyText": "Done", "author": "Youngwb", "createdAt": "2020-04-30T10:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MDY0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MTc0NQ==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417861745", "bodyText": "Should explain when input trailing_char has multiple chars, how will this function act.", "author": "imay", "createdAt": "2020-04-30T09:00:50Z", "path": "docs/documentation/cn/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,46 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+  http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+\u5982\u679c's'\u5b57\u7b26\u4e32\u975e\u7a7a\u5e76\u4e14\u672b\u5c3e\u4e0d\u5305\u542b'c'\u5b57\u7b26\uff0c\u5219\u5c06'c'\u5b57\u7b26\u9644\u52a0\u5230\u672b\u5c3e", "originalCommit": "3fac55ef8d5e269286fb5984cea639bceaeac533", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjE3MQ==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417922171", "bodyText": "Done", "author": "Youngwb", "createdAt": "2020-04-30T10:48:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MTc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MjQ5Nw==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417862497", "bodyText": "Could you tell me in what scenario this function is used?", "author": "imay", "createdAt": "2020-04-30T09:02:07Z", "path": "gensrc/script/doris_builtins_functions.py", "diffHunk": "@@ -531,6 +531,8 @@\n     [['rpad'], 'VARCHAR', ['VARCHAR', 'INT', 'VARCHAR'],\n             '_ZN5doris15StringFunctions4rpadEPN9doris_udf'\n             '15FunctionContextERKNS1_9StringValERKNS1_6IntValES6_'],\n+    [['append_trailing_char_if_absent'], 'VARCHAR', ['VARCHAR', 'VARCHAR'],", "originalCommit": "3fac55ef8d5e269286fb5984cea639bceaeac533", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMzcyOQ==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r417923729", "bodyText": "may be such like this :\nMySQL [test]> select append_trailing_char_if_absent('http://google.com','/');\n+----------------------------------------------------------+\n| append_trailing_char_if_absent('http://google.com', '/') |\n+----------------------------------------------------------+\n| http://google.com/                                       |\n+----------------------------------------------------------+\n1 row in set (0.01 sec)\n\nMySQL [test]> select append_trailing_char_if_absent('http://google.com/','/');\n+-----------------------------------------------------------+\n| append_trailing_char_if_absent('http://google.com/', '/') |\n+-----------------------------------------------------------+\n| http://google.com/                                        |\n+-----------------------------------------------------------+", "author": "Youngwb", "createdAt": "2020-04-30T10:51:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MjQ5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg0NDAyNg==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r419844026", "bodyText": "Why not return null when the second parameter length is not 1.\nYou can't check its length if it is not const, such as a table column.", "author": "imay", "createdAt": "2020-05-05T03:24:26Z", "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+{\n+    \"title\": \"append_trailing_char_if_absent\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax\n+\n+`VARCHAR append_trailing_char_if_absent(VARCHAR str, VARCHAR trailing_char)`\n+\n+If the s string is non-empty and does not contain the c character at the end, it appends the c character to the end.\n+Trailing_char contains only one character, and it will report an error if contains more than one character", "originalCommit": "546e6e87f0947c1b82f2aef32940880e1a83c349", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5NTI1Mw==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420095253", "bodyText": "Because it's function name contains trailing_char, and this is also consistent with the clickhose function. I did a cast in fe if (((StringLiteral) arg1).getValue().length() != 1) , It will throw ClassCastException when SlotRef cast to StringLiteral. I can also add type checking if necessary", "author": "Youngwb", "createdAt": "2020-05-05T13:09:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg0NDAyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE0NTA5OQ==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420145099", "bodyText": "In the case append_trailing_char_if_absent(str, col1) in which col1 is a column of a table. You can not know if the length of col1 is 1 or not.\nAlso there is no need to keep the same with CK.\nIt is convention to return null when the argument is invalid in Doris.\nSo what I suggest is to return null when the input argument is not valid. And there is no need to check its input in FE.", "author": "imay", "createdAt": "2020-05-05T14:17:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg0NDAyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MjU1Ng==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420562556", "bodyText": "OK, Done", "author": "Youngwb", "createdAt": "2020-05-06T06:05:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg0NDAyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTU3OQ==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420615579", "bodyText": "I think this check is unnecessary, can be removed.\nIf you keep it, this will make this function more complicate.", "author": "imay", "createdAt": "2020-05-06T08:12:20Z", "path": "fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java", "diffHunk": "@@ -605,6 +605,19 @@ public void analyzeImpl(Analyzer analyzer) throws AnalysisException {\n             return;\n         }\n \n+        if (fnName.getFunction().equalsIgnoreCase(\"append_trailing_char_if_absent\")) {", "originalCommit": "531f1d41ce099fed6e3139043bcca41a4eb9164d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYyNTg2MA==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420625860", "bodyText": "Yes\uff0cI understand there will make this function more complicate, but  I need to avoid two parameters be Non-String type\uff0csuch as append_trailing_char_if_absent(1,2), and I don't known how to handle this case if i don't check here. Maybe there is a better way to handle this case if you known.", "author": "Youngwb", "createdAt": "2020-05-06T08:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYyODE0Mw==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420628143", "bodyText": "For this case you mentioned, Doris can cast input argument to function's definition type. So you don't handle this in this place.", "author": "imay", "createdAt": "2020-05-06T08:35:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzODI0OA==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420638248", "bodyText": "ok\uff0cDone", "author": "Youngwb", "createdAt": "2020-05-06T08:53:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTU3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjA0OQ==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420616049", "bodyText": "Should add test that second argument has multiple characters.", "author": "imay", "createdAt": "2020-05-06T08:13:19Z", "path": "be/test/exprs/string_functions_test.cpp", "diffHunk": "@@ -252,6 +264,26 @@ TEST_F(StringFunctionsTest, null_or_empty) {\n     delete context;\n }\n \n+TEST_F(StringFunctionsTest, append_trailing_char_if_absent) {\n+    ASSERT_EQ(StringVal(\"ac\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"a\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"c\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"123c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"123c\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal(\"c\"), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"\"), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal::null(), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal::null(), StringVal(\"c\")));\n+\n+    ASSERT_EQ(StringVal::null(), StringFunctions::append_trailing_char_if_absent(ctx,\n+            StringVal(\"a\"), StringVal::null()));", "originalCommit": "531f1d41ce099fed6e3139043bcca41a4eb9164d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzODMzNA==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420638334", "bodyText": "ok\uff0cDone", "author": "Youngwb", "createdAt": "2020-05-06T08:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjA0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjQ3Ng==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420616476", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n          \n          \n            \n                if (str.ptr[str.len - 1] == trailing_char.ptr[0]) {", "author": "imay", "createdAt": "2020-05-06T08:14:05Z", "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null || trailing_char.len != 1) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {", "originalCommit": "531f1d41ce099fed6e3139043bcca41a4eb9164d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNzIyOQ==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r420617229", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                StringVal result(context, str.len + trailing_char.len);\n          \n          \n            \n                StringVal result(context, str.len + 1);", "author": "imay", "createdAt": "2020-05-06T08:15:27Z", "path": "be/src/exprs/string_functions.cpp", "diffHunk": "@@ -212,6 +212,28 @@ StringVal StringFunctions::rpad(\n     }\n     return result;\n }\n+\n+StringVal StringFunctions::append_trailing_char_if_absent(doris_udf::FunctionContext* context,\n+        const doris_udf::StringVal& str, const doris_udf::StringVal& trailing_char) {\n+    if (str.is_null || trailing_char.is_null || trailing_char.len != 1) {\n+        return StringVal::null();\n+    }\n+    if (str.len == 0) {\n+        return trailing_char;\n+    }\n+    if (str.ptr[str.len-1] == trailing_char.ptr[0]) {\n+        return str;\n+    }\n+\n+    StringVal result(context, str.len + trailing_char.len);", "originalCommit": "531f1d41ce099fed6e3139043bcca41a4eb9164d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0MDk2MA==", "url": "https://github.com/apache/incubator-doris/pull/3439#discussion_r421940960", "bodyText": "split these lines with empty line", "author": "imay", "createdAt": "2020-05-08T05:09:08Z", "path": "docs/en/sql-reference/sql-functions/string-functions/append_trailing_char_if_absent.md", "diffHunk": "@@ -0,0 +1,58 @@\n+---\n+{\n+    \"title\": \"append_trailing_char_if_absent\",\n+    \"language\": \"en\"\n+}\n+---\n+\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# append_trailing_char_if_absent\n+## description\n+### Syntax", "originalCommit": "e5ea1e98bc2f598d0d90692fc2dc99be72559317", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db7a98349b1b1f280318916a1b5dd69edd1cd17d", "url": "https://github.com/apache/incubator-doris/commit/db7a98349b1b1f280318916a1b5dd69edd1cd17d", "message": "init", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "0c43ba09af1ce557e16f753cb4ef19e4546bc9bf", "url": "https://github.com/apache/incubator-doris/commit/0c43ba09af1ce557e16f753cb4ef19e4546bc9bf", "message": "fix", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "0ef4312de6980d9830c448980eaa80757300269a", "url": "https://github.com/apache/incubator-doris/commit/0ef4312de6980d9830c448980eaa80757300269a", "message": "Update fe/src/main/java/org/apache/doris/analysis/FunctionCallExpr.java\n\nCo-Authored-By: kangkaisen  <593110254@qq.com>", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "eb18374b82baae94058afff8e7f2d02b987191c8", "url": "https://github.com/apache/incubator-doris/commit/eb18374b82baae94058afff8e7f2d02b987191c8", "message": "fix document", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "ef7aa7502ce6bf63a9c2d9e8b940fca85bf791e7", "url": "https://github.com/apache/incubator-doris/commit/ef7aa7502ce6bf63a9c2d9e8b940fca85bf791e7", "message": "fix document", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "f045dc0b55684c29d1734ec3139c7a055e209b26", "url": "https://github.com/apache/incubator-doris/commit/f045dc0b55684c29d1734ec3139c7a055e209b26", "message": "invalid return NULL", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "83ac07a6b30f697706d94b871eff219836d46c3c", "url": "https://github.com/apache/incubator-doris/commit/83ac07a6b30f697706d94b871eff219836d46c3c", "message": "Update be/src/exprs/string_functions.cpp\n\nCo-authored-by: Zhao Chun <buaa.zhaoc@gmail.com>", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "3fdd5a7143367957c485fa9019b58a0b4704c5e8", "url": "https://github.com/apache/incubator-doris/commit/3fdd5a7143367957c485fa9019b58a0b4704c5e8", "message": "Update be/src/exprs/string_functions.cpp\n\nCo-authored-by: Zhao Chun <buaa.zhaoc@gmail.com>", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "3dfc57c1fe63f81935f39ac6a25bd27f62f2241f", "url": "https://github.com/apache/incubator-doris/commit/3dfc57c1fe63f81935f39ac6a25bd27f62f2241f", "message": "fix", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "5978575eec676d28bc317c81127b68c70bfbecda", "url": "https://github.com/apache/incubator-doris/commit/5978575eec676d28bc317c81127b68c70bfbecda", "message": "remove check in fe", "committedDate": "2020-05-08T07:03:11Z", "type": "commit"}, {"oid": "b74fb081af333d4d1d9413a7564af0bd6c54c406", "url": "https://github.com/apache/incubator-doris/commit/b74fb081af333d4d1d9413a7564af0bd6c54c406", "message": "add empty line", "committedDate": "2020-05-08T07:07:18Z", "type": "commit"}, {"oid": "b74fb081af333d4d1d9413a7564af0bd6c54c406", "url": "https://github.com/apache/incubator-doris/commit/b74fb081af333d4d1d9413a7564af0bd6c54c406", "message": "add empty line", "committedDate": "2020-05-08T07:07:18Z", "type": "forcePushed"}, {"oid": "de80eb6f1349034adca70a82f0f8cc5b0e5fb7f4", "url": "https://github.com/apache/incubator-doris/commit/de80eb6f1349034adca70a82f0f8cc5b0e5fb7f4", "message": "fix test", "committedDate": "2020-05-08T09:40:34Z", "type": "commit"}]}