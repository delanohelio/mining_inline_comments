{"pr_number": 3277, "pr_title": "[Doris On ES] Support compound_and predicate push down to Elasticsearch", "pr_createdAt": "2020-04-08T02:58:12Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3277", "timeline": [{"oid": "0e94c2c428b844235b9ce58a56713ea1efe55e25", "url": "https://github.com/apache/incubator-doris/commit/0e94c2c428b844235b9ce58a56713ea1efe55e25", "message": "[Doris On ES] Support compound_and push down", "committedDate": "2020-04-08T03:18:54Z", "type": "commit"}, {"oid": "0e94c2c428b844235b9ce58a56713ea1efe55e25", "url": "https://github.com/apache/incubator-doris/commit/0e94c2c428b844235b9ce58a56713ea1efe55e25", "message": "[Doris On ES] Support compound_and push down", "committedDate": "2020-04-08T03:18:54Z", "type": "forcePushed"}, {"oid": "267bc41bd21636fb15845f5288730fe01ec8f46f", "url": "https://github.com/apache/incubator-doris/commit/267bc41bd21636fb15845f5288730fe01ec8f46f", "message": "format some code", "committedDate": "2020-04-08T03:26:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI0NTkxNQ==", "url": "https://github.com/apache/incubator-doris/pull/3277#discussion_r405245915", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ExtCompAndPredicates(std::vector<EsPredicate*> conjuncts) : ExtPredicate(TExprNodeType::COMPOUND_PRED), op(TExprOpcode::COMPOUND_AND), conjuncts(conjuncts) {\n          \n          \n            \n                ExtCompAndPredicates(const std::vector<EsPredicate*>& conjuncts) : ExtPredicate(TExprNodeType::COMPOUND_PRED), op(TExprOpcode::COMPOUND_AND), conjuncts(conjuncts) {", "author": "imay", "createdAt": "2020-04-08T04:04:58Z", "path": "be/src/exec/es/es_predicate.h", "diffHunk": "@@ -85,6 +86,15 @@ struct ExtPredicate {\n     TExprNodeType::type node_type;\n };\n \n+// this used for placeholder for compound_and\n+struct ExtCompAndPredicates : public ExtPredicate {\n+    ExtCompAndPredicates(std::vector<EsPredicate*> conjuncts) : ExtPredicate(TExprNodeType::COMPOUND_PRED), op(TExprOpcode::COMPOUND_AND), conjuncts(conjuncts) {", "originalCommit": "267bc41bd21636fb15845f5288730fe01ec8f46f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI0NjgxNA==", "url": "https://github.com/apache/incubator-doris/pull/3277#discussion_r405246814", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (TExprOpcode::COMPOUND_AND == conjunct->op()) {\n          \n          \n            \n                        if (conjunct->op() == TExprOpcode::COMPOUND_AND) {", "author": "imay", "createdAt": "2020-04-08T04:09:01Z", "path": "be/src/exec/es/es_predicate.cpp", "diffHunk": "@@ -384,10 +390,27 @@ Status EsPredicate::build_disjuncts_list(const Expr* conjunct) {\n         _disjuncts.push_back(predicate);\n \n         return Status::OK();\n-    } \n-    \n+    }\n     if (TExprNodeType::COMPOUND_PRED == conjunct->node_type()) {\n         if (TExprOpcode::COMPOUND_OR != conjunct->op()) {\n+            // processe COMPOUND_AND, such as:\n+            // k = 1 or (k1 = 7 and (k2 in (6,7) or k3 = 12))\n+            // k1 = 7 and (k2 in (6,7) or k3 = 12) is compound pred, we should rebuild this sub tree\n+            if (TExprOpcode::COMPOUND_AND == conjunct->op()) {", "originalCommit": "267bc41bd21636fb15845f5288730fe01ec8f46f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI0OTcyMg==", "url": "https://github.com/apache/incubator-doris/pull/3277#discussion_r405249722", "bodyText": "better to add a break clause here.", "author": "imay", "createdAt": "2020-04-08T04:21:54Z", "path": "be/src/exec/es/es_query_builder.cpp", "diffHunk": "@@ -359,6 +370,17 @@ void BooleanQueryBuilder::validate(const std::vector<EsPredicate*>& espredicates\n                     }\n                     break;\n                 }\n+                case TExprNodeType::COMPOUND_PRED: {\n+                    ExtCompAndPredicates* compound_predicates = (ExtCompAndPredicates *)predicate;\n+                    std::vector<bool> list;\n+                    validate(compound_predicates->conjuncts, &list);\n+                    for(int i = list.size() - 1; i >= 0; i--) {\n+                        if(!list[i]) {\n+                            flag = false;\n+                            break;\n+                        }\n+                    }", "originalCommit": "267bc41bd21636fb15845f5288730fe01ec8f46f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI1MDkwMg==", "url": "https://github.com/apache/incubator-doris/pull/3277#discussion_r405250902", "bodyText": "There are three possibilities here. AND, OR, NOT, For me, NOT can be supported too.\nAnd you can do as follow\nif (conjunct->op() == AND)\nelse if (conjunct->op() == NOT)\n\nDCHECK(op() == OR)\n// handle OR", "author": "imay", "createdAt": "2020-04-08T04:26:50Z", "path": "be/src/exec/es/es_predicate.cpp", "diffHunk": "@@ -384,10 +390,27 @@ Status EsPredicate::build_disjuncts_list(const Expr* conjunct) {\n         _disjuncts.push_back(predicate);\n \n         return Status::OK();\n-    } \n-    \n+    }\n     if (TExprNodeType::COMPOUND_PRED == conjunct->node_type()) {\n         if (TExprOpcode::COMPOUND_OR != conjunct->op()) {\n+            // processe COMPOUND_AND, such as:\n+            // k = 1 or (k1 = 7 and (k2 in (6,7) or k3 = 12))\n+            // k1 = 7 and (k2 in (6,7) or k3 = 12) is compound pred, we should rebuild this sub tree\n+            if (TExprOpcode::COMPOUND_AND == conjunct->op()) {", "originalCommit": "267bc41bd21636fb15845f5288730fe01ec8f46f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "466e2679193474b7585bca42eb48602561c2530c", "url": "https://github.com/apache/incubator-doris/commit/466e2679193474b7585bca42eb48602561c2530c", "message": "modify some code and reformat", "committedDate": "2020-04-08T05:21:06Z", "type": "commit"}, {"oid": "50c288205177e4331c79c3442af0325d54b3ab1b", "url": "https://github.com/apache/incubator-doris/commit/50c288205177e4331c79c3442af0325d54b3ab1b", "message": "Add UT for compound and query", "committedDate": "2020-04-08T11:17:42Z", "type": "commit"}]}