{"pr_number": 2691, "pr_title": "add rowset state", "pr_createdAt": "2020-01-07T11:51:37Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2691", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2MjE4Nw==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364262187", "bodyText": "give comment for the usage of these two lock", "author": "imay", "createdAt": "2020-01-08T14:37:50Z", "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -152,8 +268,13 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     bool _is_pending;    // rowset is pending iff it's not in visible state\n     bool _is_cumulative; // rowset is cumulative iff it's visible and start version < end version\n \n-    DorisCallOnce<OLAPStatus> _load_once;\n+    SpinLock _lock;\n+    Mutex _load_lock;", "originalCommit": "3661b6f129bf86b750b1248bafec944c9608f935", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0MzcyMQ==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364543721", "bodyText": "done", "author": "kangpinghuang", "createdAt": "2020-01-09T03:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2MjE4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2MjQ4Nw==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364262487", "bodyText": "should be given a default value", "author": "imay", "createdAt": "2020-01-08T14:38:27Z", "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -152,8 +268,13 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     bool _is_pending;    // rowset is pending iff it's not in visible state\n     bool _is_cumulative; // rowset is cumulative iff it's visible and start version < end version\n \n-    DorisCallOnce<OLAPStatus> _load_once;\n+    SpinLock _lock;\n+    Mutex _load_lock;\n     bool _need_delete_file = false;\n+    // variable to indicate how many rowset readers owned this rowset\n+    std::atomic<uint64_t> _refs_by_reader;\n+    // rowset state machine\n+    RowsetStateMachine _rowset_state_machine;", "originalCommit": "3661b6f129bf86b750b1248bafec944c9608f935", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NDE5NA==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364264194", "bodyText": "better to call this out of lock block", "author": "imay", "createdAt": "2020-01-08T14:41:43Z", "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -95,6 +151,37 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     // TODO should we rename the method to remove_files() to be more specific?\n     virtual OLAPStatus remove() = 0;\n \n+    // close to clear the resource owned by rowset\n+    // including: open files, indexes and so on\n+    // NOTICE: can not call this function in multithreads\n+    void close() {\n+        RowsetState old_state = _rowset_state_machine.rowset_state();\n+        if (old_state == ROWSET_UNLOADED) {\n+            return;\n+        }\n+        OLAPStatus st = OLAP_SUCCESS;\n+        {\n+            std::lock_guard<SpinLock> l(_lock);\n+            old_state = _rowset_state_machine.rowset_state();\n+            if (old_state == ROWSET_UNLOADED) {\n+                return;\n+            }\n+            uint64_t current_refs = _refs_by_reader;\n+            st = _rowset_state_machine.on_close(current_refs);\n+            if (current_refs == 0) {\n+                do_close();", "originalCommit": "3661b6f129bf86b750b1248bafec944c9608f935", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NDkyOQ==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364264929", "bodyText": "seems no usage, just leave a DCHECK(state == UNLOADED)", "author": "imay", "createdAt": "2020-01-08T14:43:03Z", "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -127,6 +214,30 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n         return left->end_version() < right->end_version();\n     }\n \n+    // this function is called by reader to increase reference of rowset\n+    void aquire() {\n+        ++_refs_by_reader;\n+    }\n+\n+    void release() {\n+        // if the refs by reader is 0 and the rowset is closed, should release the resouce\n+        uint64_t current_refs = --_refs_by_reader;\n+        if (current_refs == 0 && _rowset_state_machine.rowset_state() == ROWSET_UNLOADING) {\n+            auto st = _rowset_state_machine.on_close(current_refs);\n+            if (st != OLAP_SUCCESS) {", "originalCommit": "3661b6f129bf86b750b1248bafec944c9608f935", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NTg3Nw==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364265877", "bodyText": "When the state is unloading, seems OK to return", "author": "imay", "createdAt": "2020-01-08T14:44:48Z", "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -95,6 +151,37 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     // TODO should we rename the method to remove_files() to be more specific?\n     virtual OLAPStatus remove() = 0;\n \n+    // close to clear the resource owned by rowset\n+    // including: open files, indexes and so on\n+    // NOTICE: can not call this function in multithreads\n+    void close() {\n+        RowsetState old_state = _rowset_state_machine.rowset_state();\n+        if (old_state == ROWSET_UNLOADED) {", "originalCommit": "3661b6f129bf86b750b1248bafec944c9608f935", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0NTQ2NQ==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364545465", "bodyText": "yes, u are right.", "author": "kangpinghuang", "createdAt": "2020-01-09T03:28:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NTg3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NjI1NQ==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364266255", "bodyText": "UNLOADING", "author": "imay", "createdAt": "2020-01-08T14:45:29Z", "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -95,6 +151,37 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     // TODO should we rename the method to remove_files() to be more specific?\n     virtual OLAPStatus remove() = 0;\n \n+    // close to clear the resource owned by rowset\n+    // including: open files, indexes and so on\n+    // NOTICE: can not call this function in multithreads\n+    void close() {\n+        RowsetState old_state = _rowset_state_machine.rowset_state();\n+        if (old_state == ROWSET_UNLOADED) {\n+            return;\n+        }\n+        OLAPStatus st = OLAP_SUCCESS;\n+        {\n+            std::lock_guard<SpinLock> l(_lock);\n+            old_state = _rowset_state_machine.rowset_state();\n+            if (old_state == ROWSET_UNLOADED) {", "originalCommit": "3661b6f129bf86b750b1248bafec944c9608f935", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NzUwMw==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364267503", "bodyText": "Is this lock needed?", "author": "imay", "createdAt": "2020-01-08T14:47:44Z", "path": "be/src/olap/rowset/rowset.cpp", "diffHunk": "@@ -36,7 +37,34 @@ Rowset::Rowset(const TabletSchema *schema,\n }\n \n OLAPStatus Rowset::load(bool use_cache) {\n-    return _load_once.call([this, use_cache] { return do_load_once(use_cache); });\n+    // if the state is ROWSET_UNLOADING it means close() is called\n+    // and the rowset is already loaded, and the resource is not closed yet.\n+    if (_rowset_state_machine.rowset_state() != ROWSET_UNLOADED) {\n+        return OLAP_SUCCESS;\n+    }\n+    std::string load_log = \"\";\n+    {\n+        MutexLock load_lock(&_load_lock);\n+        if (_rowset_state_machine.rowset_state() != ROWSET_UNLOADED) {\n+            return OLAP_SUCCESS;\n+        }\n+        RETURN_NOT_OK(_rowset_state_machine.on_load());\n+        RETURN_NOT_OK(do_load(use_cache));\n+        std::stringstream ss;\n+        ss << \"rowset is loaded. rowset version:\" << start_version() << \"-\" << end_version()\n+            << \", state from ROWSET_UNLOADED to ROWSET_LOADED. tabletid:\"\n+            << _rowset_meta->tablet_id();\n+        load_log = ss.str();\n+    }\n+    if (load_log != \"\") {\n+        LOG(INFO) << load_log;\n+    }\n+    return OLAP_SUCCESS;\n+}\n+\n+OLAPStatus Rowset::create_reader(std::shared_ptr<RowsetReader>* result) {\n+    std::lock_guard<SpinLock> l(_lock);", "originalCommit": "3661b6f129bf86b750b1248bafec944c9608f935", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0NTUwNw==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364545507", "bodyText": "useless", "author": "kangpinghuang", "createdAt": "2020-01-09T03:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NzUwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY3NTYyOA==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364675628", "bodyText": "why lock? I think you should call load to make sure rowset is loaded?", "author": "imay", "createdAt": "2020-01-09T10:54:01Z", "path": "be/src/olap/rowset/alpha_rowset.cpp", "diffHunk": "@@ -51,7 +51,8 @@ OLAPStatus AlphaRowset::do_load(bool use_cache) {\n     return OLAP_SUCCESS;\n }\n \n-OLAPStatus AlphaRowset::do_create_reader(std::shared_ptr<RowsetReader>* result) {\n+OLAPStatus AlphaRowset::create_reader(std::shared_ptr<RowsetReader>* result) {\n+    MutexLock release_lock(&_lock);", "originalCommit": "8e7cd47c84e72ae2bdbbe6f4a5137af65c2b86fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4MDYxMg==", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364680612", "bodyText": "yes, there should be no lock here, I will remove it.\nload is called in init()", "author": "kangpinghuang", "createdAt": "2020-01-09T11:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY3NTYyOA=="}], "type": "inlineReview"}, {"oid": "8fa054ffe5480b0688933eab634bce86d08b3d4b", "url": "https://github.com/apache/incubator-doris/commit/8fa054ffe5480b0688933eab634bce86d08b3d4b", "message": "add rowset state", "committedDate": "2020-01-10T02:29:07Z", "type": "commit"}, {"oid": "38c8816b3065d668cab2f6fb07429844ac9b1c99", "url": "https://github.com/apache/incubator-doris/commit/38c8816b3065d668cab2f6fb07429844ac9b1c99", "message": "add state machine", "committedDate": "2020-01-10T02:29:07Z", "type": "commit"}, {"oid": "8b7de3e2bb411a0f57f856a25df8d2c615eb3b40", "url": "https://github.com/apache/incubator-doris/commit/8b7de3e2bb411a0f57f856a25df8d2c615eb3b40", "message": "fix ut", "committedDate": "2020-01-10T02:29:07Z", "type": "commit"}, {"oid": "3c9934d908d0f73a0b7482f60b18a493769b52c9", "url": "https://github.com/apache/incubator-doris/commit/3c9934d908d0f73a0b7482f60b18a493769b52c9", "message": "remove lock", "committedDate": "2020-01-10T02:29:07Z", "type": "commit"}, {"oid": "a7c228125d438aadc6a14b8480e2fa5f5fb5a59b", "url": "https://github.com/apache/incubator-doris/commit/a7c228125d438aadc6a14b8480e2fa5f5fb5a59b", "message": "fix format", "committedDate": "2020-01-10T02:29:07Z", "type": "commit"}, {"oid": "461f2d2c14c86e479390eb501e14aeac7f3f0116", "url": "https://github.com/apache/incubator-doris/commit/461f2d2c14c86e479390eb501e14aeac7f3f0116", "message": "optimize lock", "committedDate": "2020-01-10T02:29:07Z", "type": "commit"}, {"oid": "54cb603f49c63265fc43d6dee370b9399fab7f3d", "url": "https://github.com/apache/incubator-doris/commit/54cb603f49c63265fc43d6dee370b9399fab7f3d", "message": "fix pr problems", "committedDate": "2020-01-10T02:29:07Z", "type": "commit"}, {"oid": "8e4cd13ad2468e57e0e01db16ebc79e14835ce7d", "url": "https://github.com/apache/incubator-doris/commit/8e4cd13ad2468e57e0e01db16ebc79e14835ce7d", "message": "fix pr", "committedDate": "2020-01-10T02:29:07Z", "type": "commit"}, {"oid": "358b5be1ee9f1f73d23f65176741fc5f513f6bba", "url": "https://github.com/apache/incubator-doris/commit/358b5be1ee9f1f73d23f65176741fc5f513f6bba", "message": "modify Mutex to std::mutex", "committedDate": "2020-01-10T02:29:07Z", "type": "commit"}, {"oid": "effd4b872e72d03b012c78e714e20fe60aa032de", "url": "https://github.com/apache/incubator-doris/commit/effd4b872e72d03b012c78e714e20fe60aa032de", "message": "remove lock in create reader", "committedDate": "2020-01-10T02:29:08Z", "type": "commit"}, {"oid": "effd4b872e72d03b012c78e714e20fe60aa032de", "url": "https://github.com/apache/incubator-doris/commit/effd4b872e72d03b012c78e714e20fe60aa032de", "message": "remove lock in create reader", "committedDate": "2020-01-10T02:29:08Z", "type": "forcePushed"}]}