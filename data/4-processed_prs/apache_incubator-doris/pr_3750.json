{"pr_number": 3750, "pr_title": "[Bug] Fix a bug that tablet may be modified to BETA_ROWSET after cloned", "pr_createdAt": "2020-06-02T10:03:52Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3750", "timeline": [{"oid": "c35c835f795c8fe26d5d8c8179ac13a8b5eb8f76", "url": "https://github.com/apache/incubator-doris/commit/c35c835f795c8fe26d5d8c8179ac13a8b5eb8f76", "message": "[Bug] Fix a bug that tablet's _preferred_rowset_type may be modified to BETA_ROWSET after cloned\n\nTabletMeta's _preferred_rowset_type is not initialized after object constructing and\nmay be a random value, and this field is not updated when create ALPHA_ROWSET tablet,\nand it will not be serialized into pb in this case. So if cloning an ALPHA_ROWSET\ntablet from another BE, this new created local tablet's _preferred_rowset_type field\nmay be random as BETA_ROWSET and can not be overwrote after cloned, then new input\nrows will be wrote as BETA_ROWSET format which is not we expect.\nThis patch fix this bug by giving _preferred_rowset_type a default value and updating\nthis field when create any type of tablet, and add an unit test and related overwrite\nequal operator functions.", "committedDate": "2020-06-02T09:44:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NjAzNg==", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r433856036", "bodyText": "I am not sure, but did you miss the _num_short_key_columns here?", "author": "morningman", "createdAt": "2020-06-02T13:01:00Z", "path": "be/src/olap/tablet_schema.cpp", "diffHunk": "@@ -337,14 +337,12 @@ void TabletColumn::to_schema_pb(ColumnPB* column) {\n     }\n }\n \n-TabletSchema::TabletSchema()\n-    : _num_columns(0),\n-      _num_key_columns(0),\n-      _num_null_columns(0),\n-      _num_short_key_columns(0) { }\n-\n void TabletSchema::init_from_pb(const TabletSchemaPB& schema) {\n     _keys_type = schema.keys_type();\n+    _num_columns = 0;\n+    _num_key_columns = 0;\n+    _num_null_columns = 0;", "originalCommit": "c35c835f795c8fe26d5d8c8179ac13a8b5eb8f76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxMjgzOA==", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r433912838", "bodyText": "@morningman _num_short_key_columns will be assigned in line 358 directly, not like the above variables which will be increased in the following loop, so I didn't reset it here.", "author": "acelyc111", "createdAt": "2020-06-02T14:17:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NjAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MjYxOA==", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r434942618", "bodyText": "ok", "author": "morningman", "createdAt": "2020-06-04T01:31:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NjAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0MDY0Nw==", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r435340647", "bodyText": "Is this function used?", "author": "imay", "createdAt": "2020-06-04T15:18:59Z", "path": "be/src/olap/tablet_schema.h", "diffHunk": "@@ -107,22 +113,30 @@ class TabletSchema {\n     inline void set_is_in_memory (bool is_in_memory) {\n         _is_in_memory = is_in_memory;\n     }\n+\n private:\n-    KeysType _keys_type;\n+    friend bool operator==(const TabletSchema& a, const TabletSchema& b);\n+    friend bool operator!=(const TabletSchema& a, const TabletSchema& b);\n+\n+private:\n+    KeysType _keys_type = DUP_KEYS;\n     std::vector<TabletColumn> _cols;\n-    size_t _num_columns;\n-    size_t _num_key_columns;\n-    size_t _num_null_columns;\n-    size_t _num_short_key_columns;\n-    size_t _num_rows_per_row_block;\n-    CompressKind _compress_kind;\n-    size_t _next_column_unique_id;\n+    size_t _num_columns = 0;\n+    size_t _num_key_columns = 0;\n+    size_t _num_null_columns = 0;\n+    size_t _num_short_key_columns = 0;\n+    size_t _num_rows_per_row_block = 0;\n+    CompressKind _compress_kind = COMPRESS_NONE;\n+    size_t _next_column_unique_id = 0;\n \n     bool _has_bf_fpp = false;\n     double _bf_fpp = 0;\n     bool _is_in_memory = false;\n };\n \n+bool operator==(const TabletSchema& a, const TabletSchema& b);", "originalCommit": "c35c835f795c8fe26d5d8c8179ac13a8b5eb8f76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM5NzAyOA==", "url": "https://github.com/apache/incubator-doris/pull/3750#discussion_r435397028", "bodyText": "TabletMeta has a TabletSchema member, overload TabletSchema's == operator is aim to overload TabletMeta's == operator.\nNow TabletMeta's == operator is used for convenient unit test.", "author": "acelyc111", "createdAt": "2020-06-04T16:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0MDY0Nw=="}], "type": "inlineReview"}]}