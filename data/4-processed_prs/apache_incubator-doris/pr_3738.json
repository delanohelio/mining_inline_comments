{"pr_number": 3738, "pr_title": "[Bug]fix the crash of checksum task #3735", "pr_createdAt": "2020-06-01T07:48:34Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3738", "timeline": [{"oid": "9402e1134559f5e59e6d84fa1e0f9adaa4e8717e", "url": "https://github.com/apache/incubator-doris/commit/9402e1134559f5e59e6d84fa1e0f9adaa4e8717e", "message": "fix the crash of checksum task\n1. the table include key colum of double/float type\n2. when run checksum task, will use all of key columns to compare\n3. schema.column(idx) of double/float type is NULL", "committedDate": "2020-06-01T07:16:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MzE2MQ==", "url": "https://github.com/apache/incubator-doris/pull/3738#discussion_r433283161", "bodyText": "This function is used in many senarios. And changing here to fix the problem is not a good idea.\nWhy not to make column in the schema is not NULL.", "author": "imay", "createdAt": "2020-06-01T14:54:35Z", "path": "be/src/olap/row.h", "diffHunk": "@@ -59,6 +59,10 @@ bool equal_row(const std::vector<uint32_t>& ids,\n template<typename LhsRowType, typename RhsRowType>\n int compare_row(const LhsRowType& lhs, const RhsRowType& rhs) {\n     for (uint32_t cid = 0; cid < lhs.schema()->num_key_columns(); ++cid) {\n+        //because the num_column_ids include the column of double/float type", "originalCommit": "9402e1134559f5e59e6d84fa1e0f9adaa4e8717e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMwMjQ1MA==", "url": "https://github.com/apache/incubator-doris/pull/3738#discussion_r433302450", "bodyText": "Ignore the column of double/float type in engine_checksum_task.cpp,  but num_key_columns  include the double/float column index.\nIn other ways, I can only add related functions such as reader.init, compare function for sort and aggregation function for checksum. The code volume is a little large.\n// ignore float and double type considering to precision lose\n    for (size_t i = 0; i < tablet->tablet_schema().num_columns(); ++i) {\n        FieldType type = tablet->tablet_schema().column(i).type();\n        if (type == OLAP_FIELD_TYPE_FLOAT || type == OLAP_FIELD_TYPE_DOUBLE) {\n            continue;\n        }\n\n        reader_params.return_columns.push_back(i);\n    }", "author": "marising", "createdAt": "2020-06-01T15:26:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MzE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1Njg0MA==", "url": "https://github.com/apache/incubator-doris/pull/3738#discussion_r433856840", "bodyText": "remove the code of ignore the column of float/double type's in engine_checksum.cpp\nignore the cell of float/double type when compute row's hash code\nthe value of checksum is independent of the sorting of data rows", "author": "marising", "createdAt": "2020-06-02T13:02:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI4MzE2MQ=="}], "type": "inlineReview"}, {"oid": "9bb5f4bc9846675073aebd1b73e271b8d1b77988", "url": "https://github.com/apache/incubator-doris/commit/9bb5f4bc9846675073aebd1b73e271b8d1b77988", "message": "Solve the bug of float/double type column when checksum", "committedDate": "2020-06-02T12:55:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk3MzEwNA==", "url": "https://github.com/apache/incubator-doris/pull/3738#discussion_r434973104", "bodyText": "Should add comment for this if logical to let others know why.", "author": "imay", "createdAt": "2020-06-04T03:34:25Z", "path": "be/src/olap/row.h", "diffHunk": "@@ -186,7 +186,12 @@ void agg_finalize_row(const std::vector<uint32_t>& ids, RowType* row, MemPool* m\n \n template<typename RowType>\n uint32_t hash_row(const RowType& row, uint32_t seed) {\n+    FieldType type;\n     for (uint32_t cid : row.schema()->column_ids()) {\n+        type = row.schema()->column(cid)->type();", "originalCommit": "9bb5f4bc9846675073aebd1b73e271b8d1b77988", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "75e85de72ae186d3229303bd2b636dbc1d2bec69", "url": "https://github.com/apache/incubator-doris/commit/75e85de72ae186d3229303bd2b636dbc1d2bec69", "message": "add comment for ignore float/double when compute hash code", "committedDate": "2020-06-04T08:32:05Z", "type": "commit"}, {"oid": "75e85de72ae186d3229303bd2b636dbc1d2bec69", "url": "https://github.com/apache/incubator-doris/commit/75e85de72ae186d3229303bd2b636dbc1d2bec69", "message": "add comment for ignore float/double when compute hash code", "committedDate": "2020-06-04T08:32:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5MTUwMA==", "url": "https://github.com/apache/incubator-doris/pull/3738#discussion_r435191500", "bodyText": "one_checksum = 0; this line is meaningless.", "author": "morningman", "createdAt": "2020-06-04T11:44:55Z", "path": "be/src/olap/task/engine_checksum_task.cpp", "diffHunk": "@@ -118,8 +113,10 @@ OLAPStatus EngineChecksumTask::_compute_checksum() {\n             OLAP_LOG_WARNING(\"fail to read in reader. [res=%d]\", res);\n             return res;\n         }\n-\n-        row_checksum = hash_row(row, row_checksum);\n+        one_checksum = 0;", "originalCommit": "75e85de72ae186d3229303bd2b636dbc1d2bec69", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ebbe4b32198f4f749311b735e13ed2fd978fe4a", "url": "https://github.com/apache/incubator-doris/commit/3ebbe4b32198f4f749311b735e13ed2fd978fe4a", "message": "Simplified some code", "committedDate": "2020-06-05T05:54:50Z", "type": "commit"}]}