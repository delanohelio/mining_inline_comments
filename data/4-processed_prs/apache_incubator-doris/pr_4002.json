{"pr_number": 4002, "pr_title": "[Bug] Cancel the query if OlapScanner prepare failed", "pr_createdAt": "2020-07-02T05:02:03Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4002", "timeline": [{"oid": "f999cd5729bf8a5cbaf8c57253498f1728a30ec7", "url": "https://github.com/apache/incubator-doris/commit/f999cd5729bf8a5cbaf8c57253498f1728a30ec7", "message": "[Bug] Cancel the query is OlapScanner prepare failed", "committedDate": "2020-07-02T04:57:04Z", "type": "commit"}, {"oid": "a49d2352f93b9b2f3971504bb3e87e8bc581c9f8", "url": "https://github.com/apache/incubator-doris/commit/a49d2352f93b9b2f3971504bb3e87e8bc581c9f8", "message": "remove code", "committedDate": "2020-07-02T05:04:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc1NTYwNQ==", "url": "https://github.com/apache/incubator-doris/pull/4002#discussion_r448755605", "bodyText": "It doesn't matter whether you add the scanner to the pool before or after doing prepare.\nif you put scanner preparing before add the scanner_pool\uff0cthe scanner will be decontruced.", "author": "wutiangan", "createdAt": "2020-07-02T05:24:06Z", "path": "be/src/exec/olap_scan_node.cpp", "diffHunk": "@@ -681,7 +681,11 @@ Status OlapScanNode::start_scan_thread(RuntimeState* state) {\n             }\n             OlapScanner* scanner = new OlapScanner(\n                 state, this, _olap_scan_node.is_preaggregation, _need_agg_finalize, *scan_range, scanner_ranges);\n+            // add scanner to pool before doing prepare.\n+            // so that scanner can be automatically deconstructed if prepare failed.\n             _scanner_pool->add(scanner);", "originalCommit": "a49d2352f93b9b2f3971504bb3e87e8bc581c9f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA5OTg0NA==", "url": "https://github.com/apache/incubator-doris/pull/4002#discussion_r449099844", "bodyText": "Why? the scanner here is created by new operator. How can it be deconstructed automatically?", "author": "morningman", "createdAt": "2020-07-02T15:40:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc1NTYwNQ=="}], "type": "inlineReview"}]}