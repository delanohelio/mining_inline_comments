{"pr_number": 3405, "pr_title": " [Profile] Make running profile clearer and more intuitive to improve usability", "pr_createdAt": "2020-04-27T13:13:20Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3405", "timeline": [{"oid": "e90e0cf00e2ebf7e79263f167b381d14ed3994e0", "url": "https://github.com/apache/incubator-doris/commit/e90e0cf00e2ebf7e79263f167b381d14ed3994e0", "message": " [Profile] Make running profile clearer and more intuitive to improve usability\n\nThis CL mainly made the following modifications:\n    1. Delete Invalid MemoryUsed Counter and Add PeakMemUsage in each exec node and datastreamsender\n    2. Add intent in child execnode profile\uff0cmake it is easily to know the relationship between execnode\n    3. Del _is_result_order we not support any more in olap_scan_node.h and olap_scan_node.cpp\n    4. Add scan_disk method to olap_scanner to fix the counter _num_disks_accessed_counter\n    5. Now we do not use buffer pool to read and write disk, so annotation eadio counter and writeio counter code\n#ISSUE 3365", "committedDate": "2020-04-27T13:02:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3NDY0Mg==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r415874642", "bodyText": "It seem that the false here is to distinguish child[0] and other children.\nAre you sure this is more readable? You can put the result screenshots here to explain.", "author": "morningman", "createdAt": "2020-04-27T14:44:47Z", "path": "be/src/exec/exec_node.cpp", "diffHunk": "@@ -339,7 +337,7 @@ Status ExecNode::create_tree_helper(\n     }\n \n     if (!node->_children.empty()) {\n-        node->runtime_profile()->add_child(node->_children[0]->runtime_profile(), false, NULL);", "originalCommit": "e90e0cf00e2ebf7e79263f167b381d14ed3994e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5NzUxNg==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r416297516", "bodyText": "after change the true, we can eaily know olap_scan_node is child of aggregation_node.", "author": "HappenLee", "createdAt": "2020-04-28T03:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3NDY0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3NzAxNA==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r415877014", "bodyText": "disk_set is a set, so no need to find and insert, just insert is OK.", "author": "morningman", "createdAt": "2020-04-27T14:47:29Z", "path": "be/src/exec/olap_scan_node.cpp", "diffHunk": "@@ -702,8 +694,13 @@ Status OlapScanNode::start_scan_thread(RuntimeState* state) {\n                 state, this, _olap_scan_node.is_preaggregation, _need_agg_finalize, *scan_range, scanner_ranges);\n             _scanner_pool->add(scanner);\n             _olap_scanners.push_back(scanner);\n+\n+            if (disk_set.find(scanner->scan_disk()) == disk_set.end()) {\n+                disk_set.insert(scanner->scan_disk());", "originalCommit": "e90e0cf00e2ebf7e79263f167b381d14ed3994e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5NzY4OQ==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r416297689", "bodyText": "yes\uff0ci will change the code\u3002", "author": "HappenLee", "createdAt": "2020-04-28T03:22:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3NzAxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI1ODQ1OA==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r416258458", "bodyText": "What is this metric used for? If this metric is not useful, just remove it", "author": "imay", "createdAt": "2020-04-28T01:21:03Z", "path": "be/src/exec/olap_scan_node.cpp", "diffHunk": "@@ -702,8 +694,13 @@ Status OlapScanNode::start_scan_thread(RuntimeState* state) {\n                 state, this, _olap_scan_node.is_preaggregation, _need_agg_finalize, *scan_range, scanner_ranges);\n             _scanner_pool->add(scanner);\n             _olap_scanners.push_back(scanner);\n+\n+            if (disk_set.find(scanner->scan_disk()) == disk_set.end()) {\n+                disk_set.insert(scanner->scan_disk());\n+            }\n         }\n     }\n+    COUNTER_SET(_num_disks_accessed_counter, static_cast<int64_t>(disk_set.size()));", "originalCommit": "e90e0cf00e2ebf7e79263f167b381d14ed3994e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5ODA5Mw==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r416298093", "bodyText": "The metric help we now how many disk accessed in olap scan node scan data", "author": "HappenLee", "createdAt": "2020-04-28T03:23:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI1ODQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMwMDcyOQ==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r416300729", "bodyText": "What can it be used for when you know how many disks accessed?", "author": "imay", "createdAt": "2020-04-28T03:32:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI1ODQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMxNjc2OQ==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r416316769", "bodyText": "We can know whether the tablet of a query is allocated on different disks to know whether is IO bottleneck in disk", "author": "HappenLee", "createdAt": "2020-04-28T04:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI1ODQ1OA=="}], "type": "inlineReview"}, {"oid": "1c5be321ce04ee39dc182614320bd32247c7cf94", "url": "https://github.com/apache/incubator-doris/commit/1c5be321ce04ee39dc182614320bd32247c7cf94", "message": "change find and insert to insert operation", "committedDate": "2020-04-28T03:32:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ2NDA2Mw==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r416464063", "bodyText": "You'd better remove this field if it's not used. Btw, _memory_used_counter seems to be used by HashJoinNode::close, is it really ok to remove it?", "author": "gaodayue", "createdAt": "2020-04-28T09:23:03Z", "path": "be/src/exec/exec_node.cpp", "diffHunk": "@@ -172,15 +172,13 @@ Status ExecNode::prepare(RuntimeState* state) {\n     DCHECK(_runtime_profile.get() != NULL);\n     _rows_returned_counter =\n         ADD_COUNTER(_runtime_profile, \"RowsReturned\", TUnit::UNIT);\n-    _memory_used_counter =\n-        ADD_COUNTER(_runtime_profile, \"MemoryUsed\", TUnit::BYTES);", "originalCommit": "1c5be321ce04ee39dc182614320bd32247c7cf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3NjE5OA==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r417076198", "bodyText": "Hi, as we can see. this counter _memory_used_counter is only used for count mem used for _tuple_pool and _hash_tbl.\nBut the _tuple_pool and _hash_tbl was already track the mem used by MemTracker and counted mem used in PeakMemoryUsage counter.  We do really need this counter _memory_used_counter?\n\nSo, I think keep the _memory_used_counter   named MemoryUsed is confusing.\nI have two different suggestions\n\nDelete all code use _memory_used_counter in the future, all mem used is tracked by MemTracker, we show peakmemusage it by the counter in MemTracker.\nKeep the counter _memory_used_counter, but change the name MemoryUsed to MemoryUsedByHashBTAndTuplePool.\n\nWhich suggestion do you think is more suitable\uff1f@gaodayue", "author": "HappenLee", "createdAt": "2020-04-29T05:35:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ2NDA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4MjYyOQ==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r417382629", "bodyText": "Delete all code use _memory_used_counter in the future, all mem used is tracked by MemTracker, we show peakmemusage it by the counter in MemTracker.\n\nI prefer this.", "author": "kangkaisen", "createdAt": "2020-04-29T14:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ2NDA2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2Njg4OA==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r417066888", "bodyText": "not used profile can be removed", "author": "chaoyli", "createdAt": "2020-04-29T04:57:21Z", "path": "be/src/runtime/bufferpool/buffer_pool_counters.h", "diffHunk": "@@ -35,19 +35,19 @@ struct BufferPoolClientCounters {\n   RuntimeProfile::Counter* cumulative_bytes_alloced;\n \n   /// Amount of time spent waiting for reads from disk to complete.\n-  RuntimeProfile::Counter* read_wait_time;\n+  //RuntimeProfile::Counter* read_wait_time;\n \n   /// Total number of read I/O operations issued.\n-  RuntimeProfile::Counter* read_io_ops;\n+  //RuntimeProfile::Counter* read_io_ops;\n \n   /// Total bytes read from disk.\n   RuntimeProfile::Counter* bytes_read;\n \n   /// Amount of time spent waiting for writes to disk to complete.\n-  RuntimeProfile::Counter* write_wait_time;\n+  //RuntimeProfile::Counter* write_wait_time;\n \n   /// Total number of write I/O operations issued.\n-  RuntimeProfile::Counter* write_io_ops;\n+  //RuntimeProfile::Counter* write_io_ops;", "originalCommit": "1c5be321ce04ee39dc182614320bd32247c7cf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3NjIzOA==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r417076238", "bodyText": "ok", "author": "HappenLee", "createdAt": "2020-04-29T05:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2Njg4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2Njk1NA==", "url": "https://github.com/apache/incubator-doris/pull/3405#discussion_r417066954", "bodyText": "not used profile can be removed.", "author": "chaoyli", "createdAt": "2020-04-29T04:57:36Z", "path": "be/src/runtime/bufferpool/buffer_pool.cc", "diffHunk": "@@ -392,11 +392,11 @@ BufferPool::Client::Client(BufferPool* pool, //TmpFileMgr::FileGroup* file_group\n       ADD_COUNTER(child_profile, \"CumulativeAllocations\", TUnit::UNIT);\n   counters_.cumulative_bytes_alloced =\n       ADD_COUNTER(child_profile, \"CumulativeAllocationBytes\", TUnit::BYTES);\n-  counters_.read_wait_time = ADD_TIMER(child_profile, \"ReadIoWaitTime\");\n-  counters_.read_io_ops = ADD_COUNTER(child_profile, \"ReadIoOps\", TUnit::UNIT);\n+//  counters_.read_wait_time = ADD_TIMER(child_profile, \"ReadIoWaitTime\");\n+//  counters_.read_io_ops = ADD_COUNTER(child_profile, \"ReadIoOps\", TUnit::UNIT);\n   counters_.bytes_read = ADD_COUNTER(child_profile, \"ReadIoBytes\", TUnit::BYTES);", "originalCommit": "1c5be321ce04ee39dc182614320bd32247c7cf94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1da4ffae68f0229fe2187b504a23304bac2e372a", "url": "https://github.com/apache/incubator-doris/commit/1da4ffae68f0229fe2187b504a23304bac2e372a", "message": "1.delete the idle counter in buffer pool\n2.delete the MemUsed counter in exec node", "committedDate": "2020-04-29T17:29:20Z", "type": "commit"}]}