{"pr_number": 4984, "pr_title": "[Optimize]Take all scan nodes of one sql into consideration when select host for a tablet", "pr_createdAt": "2020-11-30T05:18:04Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4984", "timeline": [{"oid": "1a15f533098eec6708121004ef835d111dc374f3", "url": "https://github.com/apache/incubator-doris/commit/1a15f533098eec6708121004ef835d111dc374f3", "message": "udf: replace function", "committedDate": "2020-08-13T14:09:31Z", "type": "commit"}, {"oid": "7d072b9a65d555e7e710cb5140435e00a8ff7bdc", "url": "https://github.com/apache/incubator-doris/commit/7d072b9a65d555e7e710cb5140435e00a8ff7bdc", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-08-14T01:37:05Z", "type": "commit"}, {"oid": "391158f52190755b5fc621c31bf703835c0a7b3b", "url": "https://github.com/apache/incubator-doris/commit/391158f52190755b5fc621c31bf703835c0a7b3b", "message": "udf: replace function", "committedDate": "2020-08-14T02:11:25Z", "type": "commit"}, {"oid": "5eb52e1e5742d2e9f7aae5ac8da81545ae5f3df2", "url": "https://github.com/apache/incubator-doris/commit/5eb52e1e5742d2e9f7aae5ac8da81545ae5f3df2", "message": "udf: replace function", "committedDate": "2020-08-14T03:58:30Z", "type": "commit"}, {"oid": "a79ea91cf36eec54a4ca54018b92a6fa4baa98cc", "url": "https://github.com/apache/incubator-doris/commit/a79ea91cf36eec54a4ca54018b92a6fa4baa98cc", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-08-18T02:31:52Z", "type": "commit"}, {"oid": "86f841f29fa4ee19773d6c5922465194a2887cf6", "url": "https://github.com/apache/incubator-doris/commit/86f841f29fa4ee19773d6c5922465194a2887cf6", "message": "udf: replace function", "committedDate": "2020-08-18T03:56:14Z", "type": "commit"}, {"oid": "ade1afa75c94a178a6801ba1324acf25ad8b16fe", "url": "https://github.com/apache/incubator-doris/commit/ade1afa75c94a178a6801ba1324acf25ad8b16fe", "message": "udf: replace function", "committedDate": "2020-08-18T03:59:59Z", "type": "commit"}, {"oid": "1d95a491115064c9753694ad4d45c2f72b8d2645", "url": "https://github.com/apache/incubator-doris/commit/1d95a491115064c9753694ad4d45c2f72b8d2645", "message": "udf: replace function", "committedDate": "2020-08-18T08:01:45Z", "type": "commit"}, {"oid": "433eb87f02cfa6740e80b0e4157d916ab5aca400", "url": "https://github.com/apache/incubator-doris/commit/433eb87f02cfa6740e80b0e4157d916ab5aca400", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-08-24T02:03:34Z", "type": "commit"}, {"oid": "c62d239792b174fbc56ab311f0bc5337de971d96", "url": "https://github.com/apache/incubator-doris/commit/c62d239792b174fbc56ab311f0bc5337de971d96", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-08-25T03:17:32Z", "type": "commit"}, {"oid": "0a8db8cc4e7e72ebad4491a2cd48c758a435ba5c", "url": "https://github.com/apache/incubator-doris/commit/0a8db8cc4e7e72ebad4491a2cd48c758a435ba5c", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-08-25T08:21:34Z", "type": "commit"}, {"oid": "02d3f863c8556463c8dea903abdc4d21bf1eb19b", "url": "https://github.com/apache/incubator-doris/commit/02d3f863c8556463c8dea903abdc4d21bf1eb19b", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-09-01T01:25:42Z", "type": "commit"}, {"oid": "41da0ba0109414c47239f3fb926da48540059018", "url": "https://github.com/apache/incubator-doris/commit/41da0ba0109414c47239f3fb926da48540059018", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-09-08T08:25:12Z", "type": "commit"}, {"oid": "de4e523b505f0d628a16199b88d4bb5a0419fef6", "url": "https://github.com/apache/incubator-doris/commit/de4e523b505f0d628a16199b88d4bb5a0419fef6", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-09-11T02:42:20Z", "type": "commit"}, {"oid": "a863b0dfc7f909bf1ca8ad176ef8f82b1346924f", "url": "https://github.com/apache/incubator-doris/commit/a863b0dfc7f909bf1ca8ad176ef8f82b1346924f", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-09-17T09:37:21Z", "type": "commit"}, {"oid": "024c422b74829efe4c4b715a014517c7eee1a80a", "url": "https://github.com/apache/incubator-doris/commit/024c422b74829efe4c4b715a014517c7eee1a80a", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-09-22T09:15:31Z", "type": "commit"}, {"oid": "e1656c7a8bdc137261505d8b384dddb1c9bf5a72", "url": "https://github.com/apache/incubator-doris/commit/e1656c7a8bdc137261505d8b384dddb1c9bf5a72", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-09-23T11:48:49Z", "type": "commit"}, {"oid": "837e037057936e933fd79cbbdb432047be2bba5e", "url": "https://github.com/apache/incubator-doris/commit/837e037057936e933fd79cbbdb432047be2bba5e", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-09-27T06:37:32Z", "type": "commit"}, {"oid": "a36d3e78136a3fefb62f2513d20773479904cb6b", "url": "https://github.com/apache/incubator-doris/commit/a36d3e78136a3fefb62f2513d20773479904cb6b", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-10-17T10:32:25Z", "type": "commit"}, {"oid": "43cfa2b2ca752118c43a0212cf074f09cb311a7a", "url": "https://github.com/apache/incubator-doris/commit/43cfa2b2ca752118c43a0212cf074f09cb311a7a", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-10-23T14:34:47Z", "type": "commit"}, {"oid": "641efb587d2e9ac9a9e9771e7648a299a66f3992", "url": "https://github.com/apache/incubator-doris/commit/641efb587d2e9ac9a9e9771e7648a299a66f3992", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-10-24T12:49:28Z", "type": "commit"}, {"oid": "5066131b9017910473554dfa298b16224c1977da", "url": "https://github.com/apache/incubator-doris/commit/5066131b9017910473554dfa298b16224c1977da", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-10-26T11:49:19Z", "type": "commit"}, {"oid": "dde044ba251c85b7f0a8a388af71331553208a05", "url": "https://github.com/apache/incubator-doris/commit/dde044ba251c85b7f0a8a388af71331553208a05", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-10-27T08:38:35Z", "type": "commit"}, {"oid": "8f8c8234c052720bc65e316a305a3297318bd481", "url": "https://github.com/apache/incubator-doris/commit/8f8c8234c052720bc65e316a305a3297318bd481", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-10-28T07:25:25Z", "type": "commit"}, {"oid": "f7704ba989ab5b903e407f7b02c5a9b6c03b4588", "url": "https://github.com/apache/incubator-doris/commit/f7704ba989ab5b903e407f7b02c5a9b6c03b4588", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-01T13:04:30Z", "type": "commit"}, {"oid": "8726e7aefed64e62b1bbf6f56278274f11c8b0fa", "url": "https://github.com/apache/incubator-doris/commit/8726e7aefed64e62b1bbf6f56278274f11c8b0fa", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-04T09:31:42Z", "type": "commit"}, {"oid": "4dfc785c8a97549fb9c38b6dd8ea938d1bb50db4", "url": "https://github.com/apache/incubator-doris/commit/4dfc785c8a97549fb9c38b6dd8ea938d1bb50db4", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-06T07:45:49Z", "type": "commit"}, {"oid": "d4bd91c17af4b4954b2715c5fd93cf86b7351085", "url": "https://github.com/apache/incubator-doris/commit/d4bd91c17af4b4954b2715c5fd93cf86b7351085", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-11T02:13:02Z", "type": "commit"}, {"oid": "2eb8ddf66fb0ffbeaab0e882a5d33483180da351", "url": "https://github.com/apache/incubator-doris/commit/2eb8ddf66fb0ffbeaab0e882a5d33483180da351", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-12T02:49:53Z", "type": "commit"}, {"oid": "5aa7afc57d6cbeb2013a6e8957f214f7abc93e7f", "url": "https://github.com/apache/incubator-doris/commit/5aa7afc57d6cbeb2013a6e8957f214f7abc93e7f", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-14T11:19:03Z", "type": "commit"}, {"oid": "ce251b26af3feb6aa49e5e31bee887b0441e8584", "url": "https://github.com/apache/incubator-doris/commit/ce251b26af3feb6aa49e5e31bee887b0441e8584", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-17T03:43:59Z", "type": "commit"}, {"oid": "04c58994a066d51dcaf84657d04a2d6281bf8371", "url": "https://github.com/apache/incubator-doris/commit/04c58994a066d51dcaf84657d04a2d6281bf8371", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-18T10:41:11Z", "type": "commit"}, {"oid": "2e614cf89862a62ccadf96bcc9f94034ebc3a214", "url": "https://github.com/apache/incubator-doris/commit/2e614cf89862a62ccadf96bcc9f94034ebc3a214", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-24T08:52:28Z", "type": "commit"}, {"oid": "ede2e000c0fe30022d1dd417f08deb2a4e1c95da", "url": "https://github.com/apache/incubator-doris/commit/ede2e000c0fe30022d1dd417f08deb2a4e1c95da", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-25T03:23:03Z", "type": "commit"}, {"oid": "0aed91fed8b786d2e9860fc5ca0fad95b6810d75", "url": "https://github.com/apache/incubator-doris/commit/0aed91fed8b786d2e9860fc5ca0fad95b6810d75", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-26T09:50:24Z", "type": "commit"}, {"oid": "bd28b736375ece74d76527fa8319c4264356427c", "url": "https://github.com/apache/incubator-doris/commit/bd28b736375ece74d76527fa8319c4264356427c", "message": "Merge remote-tracking branch 'upstream/master' into str_replace", "committedDate": "2020-11-30T02:30:06Z", "type": "commit"}, {"oid": "dca862dbb2126a8fbebc49215510896da3556613", "url": "https://github.com/apache/incubator-doris/commit/dca862dbb2126a8fbebc49215510896da3556613", "message": "global optimize of scan node selecting hosts", "committedDate": "2020-11-30T04:59:28Z", "type": "commit"}, {"oid": "8c5af321a9b512717d57b992d24c33e628a00012", "url": "https://github.com/apache/incubator-doris/commit/8c5af321a9b512717d57b992d24c33e628a00012", "message": "global load balance", "committedDate": "2021-01-11T03:57:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAxMDExOQ==", "url": "https://github.com/apache/incubator-doris/pull/4984#discussion_r557010119", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Map.Entry<TNetworkAddress, Map<Integer, List<TScanRangeParams>>> entry:assignment.entrySet()) {\n          \n          \n            \n                    for (Map.Entry<TNetworkAddress, Map<Integer, List<TScanRangeParams>>> entry : assignment.entrySet()) {", "author": "caiconghui", "createdAt": "2021-01-14T02:49:27Z", "path": "fe/fe-core/src/test/java/org/apache/doris/qe/CoordinatorTest.java", "diffHunk": "@@ -595,5 +597,137 @@ public void testBucketShuffleWithUnaliveBackend()  {\n         Assert.assertTrue(backendIds.get(1) == 1);\n         Assert.assertTrue(counts.get(1) == 1);\n     }\n+\n+    @Test\n+    public void testComputeScanRangeAssignment()  {\n+        Coordinator coordinator = new Coordinator(context, analyzer, planner);\n+\n+        //TScanRangeLocations\n+        TScanRangeLocations tScanRangeLocations = new TScanRangeLocations();\n+        TScanRangeLocation tScanRangeLocation0 = new TScanRangeLocation();\n+        tScanRangeLocation0.backend_id = 0;\n+        tScanRangeLocation0.server = new TNetworkAddress(\"0.0.0.0\", 9050);\n+        TScanRangeLocation tScanRangeLocation1 = new TScanRangeLocation();\n+        tScanRangeLocation1.backend_id = 1;\n+        tScanRangeLocation1.server = new TNetworkAddress(\"0.0.0.1\", 9050);\n+        TScanRangeLocation tScanRangeLocation2 = new TScanRangeLocation();\n+        tScanRangeLocation2.backend_id = 2;\n+        tScanRangeLocation2.server = new TNetworkAddress(\"0.0.0.2\", 9050);\n+        tScanRangeLocations.locations = new ArrayList<>();\n+        tScanRangeLocations.locations.add(tScanRangeLocation0);\n+        tScanRangeLocations.locations.add(tScanRangeLocation1);\n+        tScanRangeLocations.locations.add(tScanRangeLocation2);\n+\n+        //scanNode1\n+        PlanFragmentId planFragmentId = new PlanFragmentId(1);\n+        TupleDescriptor tupleDescriptor = new TupleDescriptor(new TupleId(-1));\n+        OlapTable olapTable = new OlapTable();\n+        HashDistributionInfo hashDistributionInfo = new HashDistributionInfo(66, new ArrayList<>());\n+        Deencapsulation.setField(olapTable, \"defaultDistributionInfo\", hashDistributionInfo);\n+        tupleDescriptor.setTable(olapTable);\n+        OlapScanNode olapScanNode = new OlapScanNode(new PlanNodeId(1), tupleDescriptor, \"test\");\n+        PlanFragment fragment = new PlanFragment(planFragmentId, olapScanNode,\n+                new DataPartition(TPartitionType.UNPARTITIONED));\n+        olapScanNode.setFragment(fragment);\n+        List<TScanRangeLocations> locations = new ArrayList<>();\n+        locations.add(tScanRangeLocations);\n+        Deencapsulation.setField(olapScanNode, \"result\", locations);\n+\n+        //scanNode2\n+        PlanFragmentId planFragmentId2 = new PlanFragmentId(2);\n+        TupleDescriptor tupleDescriptor2 = new TupleDescriptor(new TupleId(-1));\n+        OlapTable olapTable2 = new OlapTable();\n+        HashDistributionInfo hashDistributionInfo2 = new HashDistributionInfo(66, new ArrayList<>());\n+        Deencapsulation.setField(olapTable2, \"defaultDistributionInfo\", hashDistributionInfo2);\n+        tupleDescriptor2.setTable(olapTable2);\n+        OlapScanNode olapScanNode2 = new OlapScanNode(new PlanNodeId(2), tupleDescriptor2, \"test2\");\n+        PlanFragment fragment2 = new PlanFragment(planFragmentId2, olapScanNode2,\n+                new DataPartition(TPartitionType.UNPARTITIONED));\n+        olapScanNode2.setFragment(fragment2);\n+        List<TScanRangeLocations> locations2 = new ArrayList<>();\n+        locations2.add(tScanRangeLocations);\n+        Deencapsulation.setField(olapScanNode2, \"result\", locations2);\n+\n+        //scanNode3\n+        PlanFragmentId planFragmentId3 = new PlanFragmentId(3);\n+        TupleDescriptor tupleDescriptor3 = new TupleDescriptor(new TupleId(-1));\n+        OlapTable olapTable3 = new OlapTable();\n+        HashDistributionInfo hashDistributionInfo3 = new HashDistributionInfo(66, new ArrayList<>());\n+        Deencapsulation.setField(olapTable3, \"defaultDistributionInfo\", hashDistributionInfo3);\n+        tupleDescriptor3.setTable(olapTable3);\n+        OlapScanNode olapScanNode3 = new OlapScanNode(new PlanNodeId(3), tupleDescriptor3, \"test3\");\n+        PlanFragment fragment3 = new PlanFragment(planFragmentId3, olapScanNode3,\n+                new DataPartition(TPartitionType.UNPARTITIONED));\n+        olapScanNode3.setFragment(fragment3);\n+        List<TScanRangeLocations> locations3 = new ArrayList<>();\n+        locations3.add(tScanRangeLocations);\n+        Deencapsulation.setField(olapScanNode3, \"result\", locations3);\n+\n+        //scan nodes\n+        List<ScanNode> scanNodes = new ArrayList<>();\n+        scanNodes.add(olapScanNode);\n+        scanNodes.add(olapScanNode2);\n+        scanNodes.add(olapScanNode3);\n+        Deencapsulation.setField(coordinator, \"scanNodes\", scanNodes);\n+\n+        //fragmentIdToScanNodeIds\n+        Map<PlanFragmentId, Set<Integer>> fragmentIdToScanNodeIds = Maps.newHashMap();\n+        Set<Integer> ids1 = new HashSet<>();\n+        ids1.add(1);\n+        fragmentIdToScanNodeIds.put(planFragmentId, ids1);\n+        Set<Integer> ids2 = new HashSet<>();\n+        ids1.add(2);\n+        fragmentIdToScanNodeIds.put(planFragmentId, ids2);\n+        Set<Integer> ids3 = new HashSet<>();\n+        ids1.add(3);\n+        fragmentIdToScanNodeIds.put(planFragmentId, ids3);\n+        Deencapsulation.setField(coordinator,\"fragmentIdToScanNodeIds\", fragmentIdToScanNodeIds);\n+\n+        //fragmentExecParamsMap\n+        Map<PlanFragmentId, FragmentExecParams> fragmentExecParamsMap = Maps.newHashMap();\n+        fragmentExecParamsMap.put(planFragmentId, new FragmentExecParams(fragment));\n+        fragmentExecParamsMap.put(planFragmentId2, new FragmentExecParams(fragment2));\n+        fragmentExecParamsMap.put(planFragmentId3, new FragmentExecParams(fragment3));\n+        Deencapsulation.setField(coordinator,\"fragmentExecParamsMap\", fragmentExecParamsMap);\n+\n+        //bucketShuffleJoinController\n+        BucketShuffleJoinController bucketShuffleJoinController = new BucketShuffleJoinController(fragmentIdToScanNodeIds);\n+        // init all backend\n+        Backend backend0 = new Backend(0, \"0.0.0.0\", 9060);\n+        backend0.setAlive(true);\n+        backend0.setBePort(9050);\n+        Backend backend1 = new Backend(1, \"0.0.0.1\", 9060);\n+        backend1.setAlive(true);\n+        backend1.setBePort(9050);\n+        Backend backend2 = new Backend(2, \"0.0.0.2\", 9060);\n+        backend2.setAlive(true);\n+        backend2.setBePort(9050);\n+\n+        ImmutableMap<Long, Backend> idToBackend =\n+                new ImmutableMap.Builder<Long, Backend>().\n+                        put(0l, backend0).\n+                        put(1l, backend1).\n+                        put(2l, backend2).build();\n+        Deencapsulation.setField(coordinator, \"idToBackend\", idToBackend);\n+\n+        Deencapsulation.invoke(coordinator, \"computeScanRangeAssignment\");\n+        FragmentScanRangeAssignment assignment = fragmentExecParamsMap.get(fragment.getFragmentId()).scanRangeAssignment;\n+        for (Map.Entry<TNetworkAddress, Map<Integer, List<TScanRangeParams>>> entry:assignment.entrySet()) {", "originalCommit": "8c5af321a9b512717d57b992d24c33e628a00012", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAxMDE5NA==", "url": "https://github.com/apache/incubator-doris/pull/4984#discussion_r557010194", "bodyText": "and the same as following", "author": "caiconghui", "createdAt": "2021-01-14T02:49:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAxMDExOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzIzNjczNg==", "url": "https://github.com/apache/incubator-doris/pull/4984#discussion_r557236736", "bodyText": "done", "author": "xinghuayu007", "createdAt": "2021-01-14T09:02:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAxMDExOQ=="}], "type": "inlineReview"}, {"oid": "01b05d0058290cfa12cd1945ba8979cca090e9fa", "url": "https://github.com/apache/incubator-doris/commit/01b05d0058290cfa12cd1945ba8979cca090e9fa", "message": "format code", "committedDate": "2021-01-14T09:01:18Z", "type": "commit"}]}