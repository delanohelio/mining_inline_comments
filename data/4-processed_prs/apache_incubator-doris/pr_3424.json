{"pr_number": 3424, "pr_title": "allow delete duplicated non-key column using delete from ", "pr_createdAt": "2020-04-29T07:02:45Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3424", "timeline": [{"oid": "adacf8007b8b9345bea2210e50e1c482618e2035", "url": "https://github.com/apache/incubator-doris/commit/adacf8007b8b9345bea2210e50e1c482618e2035", "message": "add unit test", "committedDate": "2020-04-29T11:28:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2OTA4NA==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r417369084", "bodyText": "cond_it.second->is_key() || _schema->keys_type() == KeysType::DUP_KEYS\nThis condition shows many times. How about extract it to a method?", "author": "morningman", "createdAt": "2020-04-29T14:40:31Z", "path": "be/src/olap/olap_cond.cpp", "diffHunk": "@@ -681,17 +681,17 @@ int Conditions::delete_pruning_filter(const std::vector<KeyRange>& zone_maps) co\n     for (auto& cond_it : _columns) {\n         /*\n          * this is base on the assumption that the delete condition\n-         * is only about key field, not about value field.\n+         * is only about key field, not about value field except the storage model is duplicate.\n         */\n-        if (cond_it.second->is_key() && cond_it.first > zone_maps.size()) {\n+        if ((cond_it.second->is_key() || _schema->keys_type() == KeysType::DUP_KEYS) && cond_it.first > zone_maps.size()) {", "originalCommit": "adacf8007b8b9345bea2210e50e1c482618e2035", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM3NzE5Mw==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r417377193", "bodyText": "English", "author": "morningman", "createdAt": "2020-04-29T14:50:42Z", "path": "be/test/olap/delete_handler_test.cpp", "diffHunk": "@@ -265,6 +358,17 @@ TEST_F(TestDeleteConditionHandler, StoreCondNonexistentColumn) {\n \n     failed_res = _delete_condition_handler.generate_delete_predicate(tablet->tablet_schema(), conditions, &del_pred);;\n     ASSERT_EQ(OLAP_ERR_DELETE_INVALID_CONDITION, failed_res);\n+\n+    // 'v'\u662fvalue\u5217 \u4f46\u662f\u5728duplicate \u6a21\u578b\u6c47\u603b", "originalCommit": "adacf8007b8b9345bea2210e50e1c482618e2035", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "06896596fa4389ab53cb67841b30ac78f57c4811", "url": "https://github.com/apache/incubator-doris/commit/06896596fa4389ab53cb67841b30ac78f57c4811", "message": "fix typo", "committedDate": "2020-04-30T03:38:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkzNjIzMA==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r417936230", "bodyText": "ZoneMap is not used for un-sorted column.\nMost of the time, you will have to filter the delete predicate row by row.", "author": "chaoyli", "createdAt": "2020-04-30T11:17:34Z", "path": "be/src/olap/rowset/segment_group.cpp", "diffHunk": "@@ -697,6 +697,13 @@ const TabletSchema& SegmentGroup::get_tablet_schema() {\n     return *_schema;\n }\n \n+int SegmentGroup::get_num_zone_map_columns() {", "originalCommit": "e34b15825294263a9415fa31173fa2c98f834710", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU5Mjc4MA==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r420592780", "bodyText": "this function only get the column num of maybe has ZoneMap, in agg, uniq, replace table  itt returns the key columns count, it certainly sorted and had ZoneMap, in duplicate table it return the all column count, the key columns has sorted and has  ZoneMap, the value column in new code also has ZoneMap, but not sorted, so it is not  Most of the time, you will have to filter the delete predicate row by row.,  only  when delete by duplicted values, in otherwise if we sorted the duplicate table's value column, it will be the same with key column essentially, so that the value column is unmeaningful", "author": "yangzhg", "createdAt": "2020-05-06T07:26:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkzNjIzMA=="}], "type": "inlineReview"}, {"oid": "ba2168ed9036bfe6d700b2a431ab6a284c1c98f4", "url": "https://github.com/apache/incubator-doris/commit/ba2168ed9036bfe6d700b2a431ab6a284c1c98f4", "message": "fix bug", "committedDate": "2020-05-06T07:59:15Z", "type": "forcePushed"}, {"oid": "2cbfd62af8df1ba740326259b6708b876ba2fece", "url": "https://github.com/apache/incubator-doris/commit/2cbfd62af8df1ba740326259b6708b876ba2fece", "message": "allow delete duplicated non-key column", "committedDate": "2020-05-07T05:05:52Z", "type": "forcePushed"}, {"oid": "ba2168ed9036bfe6d700b2a431ab6a284c1c98f4", "url": "https://github.com/apache/incubator-doris/commit/ba2168ed9036bfe6d700b2a431ab6a284c1c98f4", "message": "fix bug", "committedDate": "2020-05-06T07:59:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxMDYzMg==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r421610632", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG(WARNING) << \"field is not key column, or storage model is not duplicted, or its type is float or double.\";\n          \n          \n            \n                    LOG(WARNING) << \"field is not key column, or storage model is not duplicated, or its type is float or double.\";", "author": "morningman", "createdAt": "2020-05-07T15:50:59Z", "path": "be/src/olap/delete_handler.cpp", "diffHunk": "@@ -105,10 +105,10 @@ OLAPStatus DeleteConditionHandler::check_condition_valid(\n     // \u68c0\u67e5\u6307\u5b9a\u7684\u5217\u662f\u4e0d\u662fkey\uff0c\u662f\u4e0d\u662ffloat\u6216doulbe\u7c7b\u578b\n     const TabletColumn& column = schema.column(field_index);\n \n-    if (!column.is_key()\n+    if ((!column.is_key() && schema.keys_type() != KeysType::DUP_KEYS)\n             || column.type() == OLAP_FIELD_TYPE_DOUBLE\n             || column.type() == OLAP_FIELD_TYPE_FLOAT) {\n-        LOG(WARNING) << \"field is not key column, or its type is float or double.\";\n+        LOG(WARNING) << \"field is not key column, or storage model is not duplicted, or its type is float or double.\";", "originalCommit": "2081aba768f1dc3944b3c083aece8b4ca96ef991", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxMzA5Ng==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r421613096", "bodyText": "Does float or double column have ZoneMap?", "author": "morningman", "createdAt": "2020-05-07T15:54:26Z", "path": "be/src/olap/rowset/column_data.cpp", "diffHunk": "@@ -509,7 +510,10 @@ int ColumnData::delete_pruning_filter() {\n         return DEL_NOT_SATISFIED;\n     }\n \n-    if (!_segment_group->has_zone_maps()) {\n+    int num_zone_maps = _schema.keys_type() == KeysType::DUP_KEYS ? _schema.num_columns() : _schema.num_key_columns();", "originalCommit": "2081aba768f1dc3944b3c083aece8b4ca96ef991", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0MjUzOQ==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r422442539", "bodyText": "float and double is disabled in fe", "author": "yangzhg", "createdAt": "2020-05-09T02:22:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxMzA5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxNjQ4Mw==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r421616483", "bodyText": "Do not change this in this PR, better to submit another new PR to change it.", "author": "morningman", "createdAt": "2020-05-07T15:59:07Z", "path": "fe/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -1053,7 +1053,7 @@\n      * control materialized view\n      */\n     @ConfField(mutable = true, masterOnly = true)\n-    public static boolean enable_materialized_view = false;\n+    public static boolean enable_materialized_view = true;", "originalCommit": "2081aba768f1dc3944b3c083aece8b4ca96ef991", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxOTAyOQ==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r421619029", "bodyText": "if index is DUPLICATED, but column type is float or double, we should also forbid the delete operation.", "author": "morningman", "createdAt": "2020-05-07T16:02:51Z", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -509,8 +510,8 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n                 if (column == null) {\n                     ErrorReport.reportDdlException(ErrorCode.ERR_BAD_FIELD_ERROR, columnName, indexName);\n                 }\n-\n-                if (table.getKeysType() == KeysType.DUP_KEYS && !column.isKey()) {\n+                MaterializedIndexMeta indexMeta = table.getIndexIdToMeta().get(index.getId());\n+                if (indexMeta.getKeysType() != KeysType.DUP_KEYS && !column.isKey()) {", "originalCommit": "2081aba768f1dc3944b3c083aece8b4ca96ef991", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxOTQwNg==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r421619406", "bodyText": "No need to modify here, this method is deprecated.", "author": "morningman", "createdAt": "2020-05-07T16:03:26Z", "path": "fe/src/main/java/org/apache/doris/load/Load.java", "diffHunk": "@@ -3123,7 +3123,7 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n             }\n \n             Column column = nameToColumn.get(columnName);\n-            if (!column.isKey()) {\n+            if (!column.isKey() && table.getKeysType() != KeysType.DUP_KEYS) {", "originalCommit": "2081aba768f1dc3944b3c083aece8b4ca96ef991", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4b2287abbb2efc9ce6dbee4aed7f3ef8d37a5eba", "url": "https://github.com/apache/incubator-doris/commit/4b2287abbb2efc9ce6dbee4aed7f3ef8d37a5eba", "message": "allow delete duplicated non-key column\n\nadd some comment\n\nadd unit test\n\nfix double unregister\n\nfix typo\n\nfix typo\n\nfix schema\n\nfix typo\n\nfix bug\n\nUpdate be/src/olap/delete_handler.cpp\n\nCo-authored-by: Mingyu Chen <morningman.cmy@gmail.com>", "committedDate": "2020-05-08T11:25:38Z", "type": "commit"}, {"oid": "4b2287abbb2efc9ce6dbee4aed7f3ef8d37a5eba", "url": "https://github.com/apache/incubator-doris/commit/4b2287abbb2efc9ce6dbee4aed7f3ef8d37a5eba", "message": "allow delete duplicated non-key column\n\nadd some comment\n\nadd unit test\n\nfix double unregister\n\nfix typo\n\nfix typo\n\nfix schema\n\nfix typo\n\nfix bug\n\nUpdate be/src/olap/delete_handler.cpp\n\nCo-authored-by: Mingyu Chen <morningman.cmy@gmail.com>", "committedDate": "2020-05-08T11:25:38Z", "type": "forcePushed"}, {"oid": "ca39f68ed72666123e688c0594127e212895bbfa", "url": "https://github.com/apache/incubator-doris/commit/ca39f68ed72666123e688c0594127e212895bbfa", "message": "revert config", "committedDate": "2020-05-08T11:41:11Z", "type": "commit"}, {"oid": "6e23d744573845c7300c1311467c659206f0b31b", "url": "https://github.com/apache/incubator-doris/commit/6e23d744573845c7300c1311467c659206f0b31b", "message": "revert config", "committedDate": "2020-05-08T12:06:59Z", "type": "commit"}, {"oid": "060be5c4363048c37b4dd6be733d81f7700a14e8", "url": "https://github.com/apache/incubator-doris/commit/060be5c4363048c37b4dd6be733d81f7700a14e8", "message": "disable float", "committedDate": "2020-05-09T02:27:39Z", "type": "commit"}, {"oid": "b5de3b9f34af5749656205267a449bcf422df7f2", "url": "https://github.com/apache/incubator-doris/commit/b5de3b9f34af5749656205267a449bcf422df7f2", "message": "disable float", "committedDate": "2020-05-09T03:46:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MDc2NA==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r422450764", "bodyText": "just check column.agg_type = AGG_NONE\uff1f", "author": "kangpinghuang", "createdAt": "2020-05-09T04:13:42Z", "path": "be/src/olap/delete_handler.cpp", "diffHunk": "@@ -105,10 +105,10 @@ OLAPStatus DeleteConditionHandler::check_condition_valid(\n     // \u68c0\u67e5\u6307\u5b9a\u7684\u5217\u662f\u4e0d\u662fkey\uff0c\u662f\u4e0d\u662ffloat\u6216doulbe\u7c7b\u578b\n     const TabletColumn& column = schema.column(field_index);\n \n-    if (!column.is_key()\n+    if ((!column.is_key() && schema.keys_type() != KeysType::DUP_KEYS)", "originalCommit": "b5de3b9f34af5749656205267a449bcf422df7f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MDc4NQ==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r422450785", "bodyText": "I think check agg type is more clear?", "author": "kangpinghuang", "createdAt": "2020-05-09T04:14:10Z", "path": "be/src/olap/olap_cond.cpp", "diffHunk": "@@ -637,7 +637,7 @@ bool Conditions::delete_conditions_eval(const RowCursor& row) const {\n     }\n     \n     for (auto& each_cond : _columns) {\n-        if (each_cond.second->is_key() && !each_cond.second->eval(row)) {\n+        if (_cond_column_is_key_or_duplicate(each_cond.second) && !each_cond.second->eval(row)) {", "originalCommit": "b5de3b9f34af5749656205267a449bcf422df7f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc0NTYxMw==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r422745613", "bodyText": "agg type has two may be null or AGG_NONE, it maybe  more complicated", "author": "yangzhg", "createdAt": "2020-05-11T02:18:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MDc4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MDk2Nw==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r422450967", "bodyText": "I think we should change the num_key_columns name.\nnum_key_columns  will be ambiguous.", "author": "kangpinghuang", "createdAt": "2020-05-09T04:17:15Z", "path": "be/src/olap/rowset/alpha_rowset.cpp", "diffHunk": "@@ -300,7 +300,7 @@ OLAPStatus AlphaRowset::init() {\n \n         if (segment_group_meta.zone_maps_size() != 0) {\n             size_t zone_maps_size = segment_group_meta.zone_maps_size();\n-            size_t num_key_columns = _schema->num_key_columns();\n+            size_t num_key_columns = _schema->keys_type() == KeysType::DUP_KEYS ? _schema->num_columns() : _schema->num_key_columns();", "originalCommit": "b5de3b9f34af5749656205267a449bcf422df7f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NjA1NA==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r422476054", "bodyText": "it better to submit anthor pr to fix this", "author": "yangzhg", "createdAt": "2020-05-09T09:42:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MDk2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MTY4OQ==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r422451689", "bodyText": "why to add this condition?", "author": "kangpinghuang", "createdAt": "2020-05-09T04:29:46Z", "path": "be/src/olap/wrapper_field.h", "diffHunk": "@@ -81,7 +81,7 @@ class WrapperField {\n     char* ptr() const { return _field_buf + 1; }\n     size_t size() const { return _rep->size(); }\n     size_t field_size() const { return _rep->field_size(); }\n-    bool is_null() const { return *reinterpret_cast<bool*>(_field_buf); }\n+    bool is_null() const { return _field_buf == nullptr || *reinterpret_cast<bool*>(_field_buf); }", "originalCommit": "b5de3b9f34af5749656205267a449bcf422df7f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MTg5Ng==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r422451896", "bodyText": "should add some comment to explain why float and double type delete predicate can not be supported.", "author": "kangpinghuang", "createdAt": "2020-05-09T04:33:28Z", "path": "fe/src/main/java/org/apache/doris/load/DeleteHandler.java", "diffHunk": "@@ -478,9 +479,11 @@ private void checkDeleteV2(OlapTable table, Partition partition, List<Predicate>\n             }\n \n             Column column = nameToColumn.get(columnName);\n-            if (!column.isKey()) {\n+            if (!column.isKey() && table.getKeysType() != KeysType.DUP_KEYS", "originalCommit": "b5de3b9f34af5749656205267a449bcf422df7f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fe46dde9008f56703bd1567b4101b6fbe48c0863", "url": "https://github.com/apache/incubator-doris/commit/fe46dde9008f56703bd1567b4101b6fbe48c0863", "message": "revert change", "committedDate": "2020-05-11T02:13:33Z", "type": "commit"}, {"oid": "fe46dde9008f56703bd1567b4101b6fbe48c0863", "url": "https://github.com/apache/incubator-doris/commit/fe46dde9008f56703bd1567b4101b6fbe48c0863", "message": "revert change", "committedDate": "2020-05-11T02:13:33Z", "type": "forcePushed"}, {"oid": "f8ed40cea68590890f80fe3cdc106e28b4c76d23", "url": "https://github.com/apache/incubator-doris/commit/f8ed40cea68590890f80fe3cdc106e28b4c76d23", "message": "revert change", "committedDate": "2020-05-11T02:15:15Z", "type": "commit"}, {"oid": "aa0034f7fb199a2e42942127a3bfad188d4e73d8", "url": "https://github.com/apache/incubator-doris/commit/aa0034f7fb199a2e42942127a3bfad188d4e73d8", "message": "Merge branch 'master' into delete_value_column", "committedDate": "2020-05-11T03:24:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyOTIxMQ==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r424429211", "bodyText": "What is about?", "author": "morningman", "createdAt": "2020-05-13T13:18:01Z", "path": "fe/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java", "diffHunk": "@@ -549,7 +548,10 @@ private RollupJobV2 createMaterializedViewJob(String mvName, String baseIndexNam\n                     }\n                     keyStorageLayoutBytes += baseColumn.getType().getStorageLayoutBytes();\n                     Column rollupColumn = new Column(baseColumn);\n-                    if ((i + 1) <= FeConstants.shortkey_max_column_count\n+                    if(changeStorageFormat) {\n+                        rollupColumn.setIsKey(baseColumn.isKey());\n+                        rollupColumn.setAggregationType(baseColumn.getAggregationType(), true);", "originalCommit": "aa0034f7fb199a2e42942127a3bfad188d4e73d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzMzUyOA==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r424833528", "bodyText": "when create a segmentv2 rollup on duplicate table, the previous code did not handle this specific sutiation, it will create a all key rollup, all value columns will convert to key column", "author": "yangzhg", "createdAt": "2020-05-14T02:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyOTIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQzMDAzNA==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r424430034", "bodyText": "All types of column has zone map now?", "author": "morningman", "createdAt": "2020-05-13T13:19:04Z", "path": "be/src/olap/rowset/segment_group.cpp", "diffHunk": "@@ -249,13 +249,13 @@ OLAPStatus SegmentGroup::add_zone_maps_for_linked_schema_change(\n         return OLAP_SUCCESS;\n     }\n \n-    // 1. rollup tablet num_key_columns() will less than base tablet zone_map_fields.size().\n+    // 1. rollup tablet get_num_zone_map_columns() will less than base tablet zone_map_fields.size().\n     //    For LinkedSchemaChange, the rollup tablet keys order is the same as base tablet\n-    // 2. adding column to existed table, num_key_columns() will larger than\n+    // 2. adding column to existed table, get_num_zone_map_columns() will larger than\n     //    zone_map_fields.size()\n \n     int num_new_keys = 0;\n-    for (size_t i = 0; i < _schema->num_key_columns(); ++i) {\n+    for (size_t i = 0; i < get_num_zone_map_columns(); ++i) {", "originalCommit": "aa0034f7fb199a2e42942127a3bfad188d4e73d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1MDI1Mg==", "url": "https://github.com/apache/incubator-doris/pull/3424#discussion_r424850252", "bodyText": "float and double can generate zone map\uff0c bitmap cannot used in duplicate table, so it OK", "author": "yangzhg", "createdAt": "2020-05-14T03:28:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQzMDAzNA=="}], "type": "inlineReview"}]}