{"pr_number": 4454, "pr_title": "Persistence stale rowsets meta", "pr_createdAt": "2020-08-26T02:54:01Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4454", "timeline": [{"oid": "b87bc4a7a371bdd26656b652465cced2076f76ca", "url": "https://github.com/apache/incubator-doris/commit/b87bc4a7a371bdd26656b652465cced2076f76ca", "message": "tmp commit", "committedDate": "2020-08-26T06:07:43Z", "type": "commit"}, {"oid": "fd34caf7b61b1b857ef8e37096d4eae46601251c", "url": "https://github.com/apache/incubator-doris/commit/fd34caf7b61b1b857ef8e37096d4eae46601251c", "message": "stale rowsets persistence", "committedDate": "2020-08-26T06:07:43Z", "type": "commit"}, {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f", "url": "https://github.com/apache/incubator-doris/commit/ae440416d05761c8c832430061936a8aa0b7b22f", "message": "fix", "committedDate": "2020-08-26T06:09:05Z", "type": "commit"}, {"oid": "ae440416d05761c8c832430061936a8aa0b7b22f", "url": "https://github.com/apache/incubator-doris/commit/ae440416d05761c8c832430061936a8aa0b7b22f", "message": "fix", "committedDate": "2020-08-26T06:09:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2MDgwNA==", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477260804", "bodyText": "This function seems not use?", "author": "morningman", "createdAt": "2020-08-26T12:28:03Z", "path": "be/src/olap/tablet_meta.h", "diffHunk": "@@ -171,8 +171,9 @@ class TabletMeta {\n                          const std::vector<RowsetMetaSharedPtr>& to_delete);\n     void revise_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);\n \n-\n     void revise_inc_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);\n+    void revise_stale_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);", "originalCommit": "ae440416d05761c8c832430061936a8aa0b7b22f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2MDgyMA==", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477260820", "bodyText": "This function seems not use?", "author": "morningman", "createdAt": "2020-08-26T12:28:04Z", "path": "be/src/olap/tablet_meta.h", "diffHunk": "@@ -171,8 +171,9 @@ class TabletMeta {\n                          const std::vector<RowsetMetaSharedPtr>& to_delete);\n     void revise_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);\n \n-\n     void revise_inc_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);\n+    void revise_stale_rs_metas(std::vector<RowsetMetaSharedPtr>&& rs_metas);", "originalCommit": "ae440416d05761c8c832430061936a8aa0b7b22f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2MzQ1MQ==", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477263451", "bodyText": "Under what circumstances will it not be found?", "author": "morningman", "createdAt": "2020-08-26T12:32:24Z", "path": "be/src/olap/tablet.cpp", "diffHunk": "@@ -108,6 +109,22 @@ OLAPStatus Tablet::_init_once_action() {\n         _inc_rs_version_map[version] = std::move(rowset);\n     }\n \n+    // init stale rowset\n+    for (auto& stale_rs_meta : _tablet_meta->all_stale_rs_metas()) {\n+        Version version = stale_rs_meta->version();\n+        RowsetSharedPtr rowset = get_stale_rowset_by_version(version);\n+        if (rowset == nullptr) {", "originalCommit": "ae440416d05761c8c832430061936a8aa0b7b22f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2MzQ2MA==", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477263460", "bodyText": "Under what circumstances will it not be found?", "author": "morningman", "createdAt": "2020-08-26T12:32:26Z", "path": "be/src/olap/tablet.cpp", "diffHunk": "@@ -108,6 +109,22 @@ OLAPStatus Tablet::_init_once_action() {\n         _inc_rs_version_map[version] = std::move(rowset);\n     }\n \n+    // init stale rowset\n+    for (auto& stale_rs_meta : _tablet_meta->all_stale_rs_metas()) {\n+        Version version = stale_rs_meta->version();\n+        RowsetSharedPtr rowset = get_stale_rowset_by_version(version);\n+        if (rowset == nullptr) {", "originalCommit": "ae440416d05761c8c832430061936a8aa0b7b22f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2NTI2MQ==", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477265261", "bodyText": "I didn't get this logic...", "author": "morningman", "createdAt": "2020-08-26T12:35:38Z", "path": "be/src/olap/version_graph.cpp", "diffHunk": "@@ -43,6 +43,167 @@ void TimestampedVersionTracker::construct_versioned_tracker(const std::vector<Ro\n     _construct_versioned_tracker(rs_metas);\n }\n \n+void TimestampedVersionTracker::construct_versioned_tracker(\n+        const std::vector<RowsetMetaSharedPtr>& rs_metas,\n+        const std::vector<RowsetMetaSharedPtr>& stale_metas) {\n+\n+    if (rs_metas.empty()) {\n+        VLOG(3) << \"there is no version in the header.\";\n+        return;\n+    }\n+    _stale_version_path_map.clear();\n+    _next_path_id = 1;\n+    _construct_versioned_tracker(rs_metas);\n+\n+    // init _stale_version_path_map\n+    _init_stale_version_path_map(rs_metas, stale_metas);\n+}\n+\n+void TimestampedVersionTracker::_init_stale_version_path_map(\n+        const std::vector<RowsetMetaSharedPtr>& rs_metas,\n+        const std::vector<RowsetMetaSharedPtr>& stale_metas) {\n+\n+    if (stale_metas.empty()) {\n+        return;\n+    }\n+\n+    // sort stale meta by version diff (second version - first version)\n+    std::list<RowsetMetaSharedPtr> sorted_stale_metas;\n+    for (auto& rs : stale_metas) {\n+        sorted_stale_metas.emplace_back(rs);\n+    }\n+\n+    // 1. Sort the existing rowsets by version in ascending order\n+    sorted_stale_metas.sort([](const RowsetMetaSharedPtr& a, const RowsetMetaSharedPtr& b) {\n+        // compare by version diff between version.first and version.second\n+        int64_t a_diff = a->version().second - a->version().first;\n+        int64_t b_diff = b->version().second - b->version().first;\n+\n+        int diff = a_diff - b_diff;\n+        if (diff < 0) {\n+            return true;\n+        }\n+        else if (diff > 0) {\n+            return false;\n+        }\n+        // when the version diff is equal, compare rowset createtime\n+        return a->creation_time() < b->creation_time();\n+    });\n+\n+    // first_version -> (second_version -> rowset_meta)\n+    std::unordered_map<int64_t, std::unordered_map<int64_t, RowsetMetaSharedPtr>> stale_map;\n+\n+    // 2. generate stale path from stale_metas. traverse sorted_stale_metas and each time add stale_meta to stale_map.\n+    // when a stale path in stale_map can replace stale_meta in sorted_stale_metas, stale_map remove rowset_metas of a stale path\n+    // and add the path to _stale_version_path_map.\n+    for(auto& stale_meta:sorted_stale_metas) {\n+        std::vector<RowsetMetaSharedPtr> stale_path;\n+        // 2.1 find a path in stale_map can replace current stale_meta version\n+        bool r = _find_path_from_stale_map(stale_map, stale_meta->start_version(), stale_meta->end_version(), &stale_path);\n+\n+        // 2.2 add stale_meta to stale_map\n+        auto start_iter = stale_map.find(stale_meta->start_version());\n+        if (start_iter != stale_map.end()) {\n+            start_iter->second[stale_meta->end_version()] = stale_meta;\n+        } else {\n+            std::unordered_map<int64_t, RowsetMetaSharedPtr> item;\n+            item[stale_meta->end_version()] = stale_meta;\n+            stale_map[stale_meta->start_version()] = std::move(item);\n+        }\n+        // 2.3 add version to version_graph\n+        Version stale_meta_version = stale_meta->version();\n+        add_version(stale_meta_version);\n+        // 2.4 find the path\n+        if (r) {", "originalCommit": "ae440416d05761c8c832430061936a8aa0b7b22f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2NTI3MA==", "url": "https://github.com/apache/incubator-doris/pull/4454#discussion_r477265270", "bodyText": "I didn't get this logic...", "author": "morningman", "createdAt": "2020-08-26T12:35:40Z", "path": "be/src/olap/version_graph.cpp", "diffHunk": "@@ -43,6 +43,167 @@ void TimestampedVersionTracker::construct_versioned_tracker(const std::vector<Ro\n     _construct_versioned_tracker(rs_metas);\n }\n \n+void TimestampedVersionTracker::construct_versioned_tracker(\n+        const std::vector<RowsetMetaSharedPtr>& rs_metas,\n+        const std::vector<RowsetMetaSharedPtr>& stale_metas) {\n+\n+    if (rs_metas.empty()) {\n+        VLOG(3) << \"there is no version in the header.\";\n+        return;\n+    }\n+    _stale_version_path_map.clear();\n+    _next_path_id = 1;\n+    _construct_versioned_tracker(rs_metas);\n+\n+    // init _stale_version_path_map\n+    _init_stale_version_path_map(rs_metas, stale_metas);\n+}\n+\n+void TimestampedVersionTracker::_init_stale_version_path_map(\n+        const std::vector<RowsetMetaSharedPtr>& rs_metas,\n+        const std::vector<RowsetMetaSharedPtr>& stale_metas) {\n+\n+    if (stale_metas.empty()) {\n+        return;\n+    }\n+\n+    // sort stale meta by version diff (second version - first version)\n+    std::list<RowsetMetaSharedPtr> sorted_stale_metas;\n+    for (auto& rs : stale_metas) {\n+        sorted_stale_metas.emplace_back(rs);\n+    }\n+\n+    // 1. Sort the existing rowsets by version in ascending order\n+    sorted_stale_metas.sort([](const RowsetMetaSharedPtr& a, const RowsetMetaSharedPtr& b) {\n+        // compare by version diff between version.first and version.second\n+        int64_t a_diff = a->version().second - a->version().first;\n+        int64_t b_diff = b->version().second - b->version().first;\n+\n+        int diff = a_diff - b_diff;\n+        if (diff < 0) {\n+            return true;\n+        }\n+        else if (diff > 0) {\n+            return false;\n+        }\n+        // when the version diff is equal, compare rowset createtime\n+        return a->creation_time() < b->creation_time();\n+    });\n+\n+    // first_version -> (second_version -> rowset_meta)\n+    std::unordered_map<int64_t, std::unordered_map<int64_t, RowsetMetaSharedPtr>> stale_map;\n+\n+    // 2. generate stale path from stale_metas. traverse sorted_stale_metas and each time add stale_meta to stale_map.\n+    // when a stale path in stale_map can replace stale_meta in sorted_stale_metas, stale_map remove rowset_metas of a stale path\n+    // and add the path to _stale_version_path_map.\n+    for(auto& stale_meta:sorted_stale_metas) {\n+        std::vector<RowsetMetaSharedPtr> stale_path;\n+        // 2.1 find a path in stale_map can replace current stale_meta version\n+        bool r = _find_path_from_stale_map(stale_map, stale_meta->start_version(), stale_meta->end_version(), &stale_path);\n+\n+        // 2.2 add stale_meta to stale_map\n+        auto start_iter = stale_map.find(stale_meta->start_version());\n+        if (start_iter != stale_map.end()) {\n+            start_iter->second[stale_meta->end_version()] = stale_meta;\n+        } else {\n+            std::unordered_map<int64_t, RowsetMetaSharedPtr> item;\n+            item[stale_meta->end_version()] = stale_meta;\n+            stale_map[stale_meta->start_version()] = std::move(item);\n+        }\n+        // 2.3 add version to version_graph\n+        Version stale_meta_version = stale_meta->version();\n+        add_version(stale_meta_version);\n+        // 2.4 find the path\n+        if (r) {", "originalCommit": "ae440416d05761c8c832430061936a8aa0b7b22f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5bf6a83f123e5b4a7546fd848edb6eff0b274696", "url": "https://github.com/apache/incubator-doris/commit/5bf6a83f123e5b4a7546fd848edb6eff0b274696", "message": "fix", "committedDate": "2020-08-26T15:28:06Z", "type": "commit"}, {"oid": "08c07ce53af19c72d9d4dfd998fca76746029fb9", "url": "https://github.com/apache/incubator-doris/commit/08c07ce53af19c72d9d4dfd998fca76746029fb9", "message": "fix", "committedDate": "2020-08-28T08:48:19Z", "type": "commit"}]}