{"pr_number": 4136, "pr_title": "Fixbug: json load", "pr_createdAt": "2020-07-21T10:40:30Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4136", "timeline": [{"oid": "f82c8ab6d4bcd3ffc6962781c0cb5f8858cfcc37", "url": "https://github.com/apache/incubator-doris/commit/f82c8ab6d4bcd3ffc6962781c0cb5f8858cfcc37", "message": "1) FixBug: load json is failed in routine load\n2) add `json_root` for nest json data", "committedDate": "2020-07-21T10:44:20Z", "type": "forcePushed"}, {"oid": "30ee9d45c70195b0e1210a3510fda0a07827cbd4", "url": "https://github.com/apache/incubator-doris/commit/30ee9d45c70195b0e1210a3510fda0a07827cbd4", "message": "1) FixBug: load json is failed in routine load\n2) add `json_root` for nest json data", "committedDate": "2020-07-21T10:45:37Z", "type": "forcePushed"}, {"oid": "1f65538bfdf6380036ae888630f4058de88dc3e8", "url": "https://github.com/apache/incubator-doris/commit/1f65538bfdf6380036ae888630f4058de88dc3e8", "message": "1) FixBug: load json is failed in routine load\n2) add `json_root` for nest json data", "committedDate": "2020-07-21T10:47:05Z", "type": "forcePushed"}, {"oid": "b3e8409a8423e9d0a86c9aa5023fbaf91ccb1057", "url": "https://github.com/apache/incubator-doris/commit/b3e8409a8423e9d0a86c9aa5023fbaf91ccb1057", "message": "1) FixBug: load json is failed in routine load\n2) Add `json_root` for nest json data\n3) Refactor code", "committedDate": "2020-07-22T02:13:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0MjI5Mg==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r458542292", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Status st = _generater_json_paths(jsonpath, _parsed_jsonpaths);\n          \n          \n            \n                    Status st = _generate_json_paths(jsonpath, _parsed_jsonpaths);", "author": "morningman", "createdAt": "2020-07-22T05:26:24Z", "path": "be/src/exec/json_scanner.cpp", "diffHunk": "@@ -197,30 +201,52 @@ JsonReader::~JsonReader() {\n     _close();\n }\n \n-Status JsonReader::init() {\n+Status JsonReader::init(std::string& jsonpath, std::string& json_root) {\n     // parse jsonpath\n+    if (!jsonpath.empty()) {\n+        Status st = _generater_json_paths(jsonpath, _parsed_jsonpaths);", "originalCommit": "b3e8409a8423e9d0a86c9aa5023fbaf91ccb1057", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0MjY4Ng==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r458542686", "bodyText": "Why _parsed_json_root is a vector?", "author": "morningman", "createdAt": "2020-07-22T05:27:50Z", "path": "be/src/exec/json_scanner.cpp", "diffHunk": "@@ -257,26 +283,38 @@ Status JsonReader::_parse_json_doc(bool* eof) {\n         delete[] json_str;\n         return Status::DataQualityError(str_error.str());\n     }\n+    delete[] json_str;\n \n-    if (_json_doc.IsArray() && !_strip_outer_array) {\n-        delete[] json_str;\n+    // set json root\n+    if (_parsed_json_root.size() != 0) {", "originalCommit": "b3e8409a8423e9d0a86c9aa5023fbaf91ccb1057", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0MzczMQ==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r458543731", "bodyText": "We only support one json root, so we can check it here, and return error if json root more than one.", "author": "morningman", "createdAt": "2020-07-22T05:31:23Z", "path": "be/src/exec/json_scanner.cpp", "diffHunk": "@@ -197,30 +201,52 @@ JsonReader::~JsonReader() {\n     _close();\n }\n \n-Status JsonReader::init() {\n+Status JsonReader::init(std::string& jsonpath, std::string& json_root) {\n     // parse jsonpath\n+    if (!jsonpath.empty()) {\n+        Status st = _generater_json_paths(jsonpath, _parsed_jsonpaths);\n+        RETURN_IF_ERROR(st);\n+    }\n+    if (!json_root.empty()) {\n+        std::vector<JsonPath> parsed_paths;\n+        JsonFunctions::parse_json_paths(json_root, &parsed_paths);\n+        _parsed_json_root.push_back(parsed_paths);", "originalCommit": "b3e8409a8423e9d0a86c9aa5023fbaf91ccb1057", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1ODg5Ng==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r458558896", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-07-22T06:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0MzczMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NjM1OQ==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r458546359", "bodyText": "Can these parameters be changed to const &?", "author": "morningman", "createdAt": "2020-07-22T05:39:32Z", "path": "be/src/exec/json_scanner.h", "diffHunk": "@@ -106,33 +105,31 @@ struct JsonPath;\n class JsonReader {\n public:\n     JsonReader(RuntimeState* state, ScannerCounter* counter, RuntimeProfile* profile, FileReader* file_reader,\n-            std::string& jsonpath, bool strip_outer_array);\n+            bool strip_outer_array);\n     ~JsonReader();\n \n-    Status init(); // must call before use\n+    Status init(std::string& jsonpath, std::string& json_root); // must call before use", "originalCommit": "b3e8409a8423e9d0a86c9aa5023fbaf91ccb1057", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1ODk2OQ==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r458558969", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-07-22T06:17:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NjM1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0Njk1MA==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r458546950", "bodyText": "Remove this method", "author": "morningman", "createdAt": "2020-07-22T05:41:18Z", "path": "be/src/exec/json_scanner.h", "diffHunk": "@@ -106,33 +105,31 @@ struct JsonPath;\n class JsonReader {\n public:\n     JsonReader(RuntimeState* state, ScannerCounter* counter, RuntimeProfile* profile, FileReader* file_reader,\n-            std::string& jsonpath, bool strip_outer_array);\n+            bool strip_outer_array);\n     ~JsonReader();\n \n-    Status init(); // must call before use\n+    Status init(std::string& jsonpath, std::string& json_root); // must call before use\n \n     Status read(Tuple* tuple, const std::vector<SlotDescriptor*>& slot_descs, MemPool* tuple_pool, bool* eof);\n \n private:\n+    Status (JsonReader::*_handle_json_callback)(Tuple* tuple, const std::vector<SlotDescriptor*>& slot_descs, MemPool* tuple_pool, bool* eof);\n     Status _handle_simple_json(Tuple* tuple, const std::vector<SlotDescriptor*>& slot_descs, MemPool* tuple_pool, bool* eof);\n-    Status _handle_complex_json(Tuple* tuple, const std::vector<SlotDescriptor*>& slot_descs, MemPool* tuple_pool, bool* eof);\n     Status _handle_flat_array_complex_json(Tuple* tuple, const std::vector<SlotDescriptor*>& slot_descs, MemPool* tuple_pool, bool* eof);\n     Status _handle_nested_complex_json(Tuple* tuple, const std::vector<SlotDescriptor*>& slot_descs, MemPool* tuple_pool, bool* eof);\n \n     void _fill_slot(Tuple* tuple, SlotDescriptor* slot_desc, MemPool* mem_pool, const uint8_t* value, int32_t len);\n-    void _assemble_jmap(const std::vector<SlotDescriptor*>& slot_descs);\n+    int _assemble_jmap(const std::vector<SlotDescriptor*>& slot_descs);", "originalCommit": "b3e8409a8423e9d0a86c9aa5023fbaf91ccb1057", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0OTI3MQ==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r458549271", "bodyText": "change the name of _json_root. This name is easily confused with _parsed_json_root.\nMy suggestion: _final_json_doc. And add comment to explain that this is generated from _json_doc", "author": "morningman", "createdAt": "2020-07-22T05:49:04Z", "path": "be/src/exec/json_scanner.h", "diffHunk": "@@ -144,9 +141,9 @@ class JsonReader {\n     RuntimeProfile::Counter* _bytes_read_counter;\n     RuntimeProfile::Counter* _read_timer;\n     std::vector<std::vector<JsonPath>> _parsed_jsonpaths;\n+    std::vector<std::vector<JsonPath>> _parsed_json_root;\n     rapidjson::Document _json_doc;\n-    //key: column name\n-    std::unordered_map<std::string, JsonDataInternal> _jmap;\n+    rapidjson::Value *_json_root;", "originalCommit": "b3e8409a8423e9d0a86c9aa5023fbaf91ccb1057", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1OTI1Mg==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r458559252", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-07-22T06:18:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0OTI3MQ=="}], "type": "inlineReview"}, {"oid": "2456e8c5cf56c0d091f116f826fd0b66690d7c10", "url": "https://github.com/apache/incubator-doris/commit/2456e8c5cf56c0d091f116f826fd0b66690d7c10", "message": "1) FixBug: load json is failed in routine load\n2) Add `json_root` for nest json data\n3) Refactor code", "committedDate": "2020-07-29T05:53:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxMTg4OA==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r462211888", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                rapidjson::Document _orinal_json_doc; // orinal json document object from parsed json string\n          \n          \n            \n                rapidjson::Document _origin_json_doc; // orinal json document object from parsed json string", "author": "morningman", "createdAt": "2020-07-29T10:53:21Z", "path": "be/src/exec/json_scanner.h", "diffHunk": "@@ -143,10 +140,12 @@ class JsonReader {\n     bool _strip_outer_array;\n     RuntimeProfile::Counter* _bytes_read_counter;\n     RuntimeProfile::Counter* _read_timer;\n+\n     std::vector<std::vector<JsonPath>> _parsed_jsonpaths;\n-    rapidjson::Document _json_doc;\n-    //key: column name\n-    std::unordered_map<std::string, JsonDataInternal> _jmap;\n+    std::vector<JsonPath> _parsed_json_root;\n+\n+    rapidjson::Document _orinal_json_doc; // orinal json document object from parsed json string", "originalCommit": "2456e8c5cf56c0d091f116f826fd0b66690d7c10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI1NTc0Mw==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r462255743", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-07-29T12:20:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxMTg4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MjYzNw==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r462242637", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            static const std::string HTTP_EXEC_JSONROOT  = \"json_root\";\n          \n          \n            \n            static const std::string HTTP_JSONROOT  = \"json_root\";\n          \n      \n    \n    \n  \n\nEXEC is not some kind of prfix, it is with EXEC_MEM_LIMIT.\nAlso modify HTTP_EXEC_JSONPATHS to HTTP_JSONPATHS", "author": "morningman", "createdAt": "2020-07-29T11:56:17Z", "path": "be/src/http/http_common.h", "diffHunk": "@@ -37,6 +37,7 @@ static const std::string HTTP_STRICT_MODE = \"strict_mode\";\n static const std::string HTTP_TIMEZONE = \"timezone\";\n static const std::string HTTP_EXEC_MEM_LIMIT = \"exec_mem_limit\";\n static const std::string HTTP_EXEC_JSONPATHS  = \"jsonpaths\";\n+static const std::string HTTP_EXEC_JSONROOT  = \"json_root\";", "originalCommit": "2456e8c5cf56c0d091f116f826fd0b66690d7c10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI1NTc3NQ==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r462255775", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-07-29T12:20:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MjYzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MzM3OA==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r462243378", "bodyText": "Import order", "author": "morningman", "createdAt": "2020-07-29T11:57:39Z", "path": "fe/fe-core/src/main/java/org/apache/doris/load/routineload/RoutineLoadJob.java", "diffHunk": "@@ -17,6 +17,14 @@\n \n package org.apache.doris.load.routineload;\n \n+import com.google.common.base.Joiner;", "originalCommit": "2456e8c5cf56c0d091f116f826fd0b66690d7c10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI1NTgxNg==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r462255816", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-07-29T12:20:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MzM3OA=="}], "type": "inlineReview"}, {"oid": "93437d5353059476781eb72fda581f3bdf7a467a", "url": "https://github.com/apache/incubator-doris/commit/93437d5353059476781eb72fda581f3bdf7a467a", "message": "1) FixBug: load json is failed in routine load\n2) Add `json_root` for nest json data\n3) Refactor code", "committedDate": "2020-07-29T12:19:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2MDgxNA==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r462260814", "bodyText": "What is the json_root default value? Please let others know", "author": "imay", "createdAt": "2020-07-29T12:29:57Z", "path": "docs/en/sql-reference/sql-statements/Data Manipulation/ROUTINE LOAD.md", "diffHunk": "@@ -178,6 +178,9 @@ FROM data_source\n     8. `strip_outer_array`\n         Boolean type, true to indicate that json data starts with an array object and flattens objects in the array object, default value is false.\n \n+    9. `json_root`\n+        User specifies the JSON root node as the valid JSONPath string.", "originalCommit": "93437d5353059476781eb72fda581f3bdf7a467a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2MTQ5MA==", "url": "https://github.com/apache/incubator-doris/pull/4136#discussion_r462261490", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Status JsonReader::_generate_json_paths(const std::string& jsonpath, std::vector<std::vector<JsonPath>>& vect) {\n          \n          \n            \n            Status JsonReader::_generate_json_paths(const std::string& jsonpath, std::vector<std::vector<JsonPath>>* vect) {", "author": "imay", "createdAt": "2020-07-29T12:31:06Z", "path": "be/src/exec/json_scanner.cpp", "diffHunk": "@@ -197,30 +201,50 @@ JsonReader::~JsonReader() {\n     _close();\n }\n \n-Status JsonReader::init() {\n+Status JsonReader::init(const std::string& jsonpath, const std::string& json_root) {\n     // parse jsonpath\n+    if (!jsonpath.empty()) {\n+        Status st = _generate_json_paths(jsonpath, _parsed_jsonpaths);\n+        RETURN_IF_ERROR(st);\n+    }\n+    if (!json_root.empty()) {\n+        JsonFunctions::parse_json_paths(json_root, &_parsed_json_root);\n+    }\n+\n+    //improve performance\n+    if (_parsed_jsonpaths.empty()) { // input is a simple json-string\n+        _handle_json_callback = &JsonReader::_handle_simple_json;\n+    } else { // input is a complex json-string and a json-path\n+        if (_strip_outer_array) {\n+            _handle_json_callback = &JsonReader::_handle_flat_array_complex_json;\n+        } else {\n+            _handle_json_callback = &JsonReader::_handle_nested_complex_json;\n+        }\n+    }\n+    return Status::OK();\n+}\n+\n+Status JsonReader::_generate_json_paths(const std::string& jsonpath, std::vector<std::vector<JsonPath>>& vect) {", "originalCommit": "93437d5353059476781eb72fda581f3bdf7a467a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "94600d06bb636c9449a2eecd60c0e91c8d48ab0b", "url": "https://github.com/apache/incubator-doris/commit/94600d06bb636c9449a2eecd60c0e91c8d48ab0b", "message": "1) FixBug: load json is failed in routine load\n2) Add `json_root` for nest json data\n3) Refactor code", "committedDate": "2020-07-30T01:47:58Z", "type": "forcePushed"}, {"oid": "846be0eb45bd91c760ee0274750591139795ee91", "url": "https://github.com/apache/incubator-doris/commit/846be0eb45bd91c760ee0274750591139795ee91", "message": "1) FixBug: load json is failed in routine load\n2) Add `json_root` for nest json data\n3) Refactor code", "committedDate": "2020-07-30T01:54:32Z", "type": "commit"}, {"oid": "846be0eb45bd91c760ee0274750591139795ee91", "url": "https://github.com/apache/incubator-doris/commit/846be0eb45bd91c760ee0274750591139795ee91", "message": "1) FixBug: load json is failed in routine load\n2) Add `json_root` for nest json data\n3) Refactor code", "committedDate": "2020-07-30T01:54:32Z", "type": "forcePushed"}]}