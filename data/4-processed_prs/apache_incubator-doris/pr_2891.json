{"pr_number": 2891, "pr_title": "Some tiny refactor on streaming-load related code", "pr_createdAt": "2020-02-12T11:44:22Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2891", "timeline": [{"oid": "f36797b94c3d986cf98c54bf18aa6adf5bbf91cf", "url": "https://github.com/apache/incubator-doris/commit/f36797b94c3d986cf98c54bf18aa6adf5bbf91cf", "message": "Some tiny refactor on streaming-load related code\n\nMainly contains the following modifications:\n1. Use `std::unique_ptr` to replace some naked pointers\n2. Modify some methods from member-method to local-static-function\n3. Modify some methods do not need to be public to private\n4. Some formatting changes: such as wrapping lines that are too long\n5. Remove some useless variables\n6. Add or modify some comments for easier understanding\n\nNo functional changes in this patch.", "committedDate": "2020-02-12T12:21:47Z", "type": "commit"}, {"oid": "f36797b94c3d986cf98c54bf18aa6adf5bbf91cf", "url": "https://github.com/apache/incubator-doris/commit/f36797b94c3d986cf98c54bf18aa6adf5bbf91cf", "message": "Some tiny refactor on streaming-load related code\n\nMainly contains the following modifications:\n1. Use `std::unique_ptr` to replace some naked pointers\n2. Modify some methods from member-method to local-static-function\n3. Modify some methods do not need to be public to private\n4. Some formatting changes: such as wrapping lines that are too long\n5. Remove some useless variables\n6. Add or modify some comments for easier understanding\n\nNo functional changes in this patch.", "committedDate": "2020-02-12T12:21:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3MDM2Ng==", "url": "https://github.com/apache/incubator-doris/pull/2891#discussion_r378270366", "bodyText": "Those on_xxx methods of FlushHandler should be public. FlushHandler is independent of MemTableFlushExecutor. Just because FlushHandler is a friend class of MemTableFlushExecutor, so that you can change it to private.", "author": "morningman", "createdAt": "2020-02-12T14:06:18Z", "path": "be/src/olap/memtable_flush_executor.cpp", "diffHunk": "@@ -42,7 +44,7 @@ OLAPStatus FlushHandler::wait() {\n     return _last_flush_status.load();\n }\n \n-void FlushHandler::on_flush_finished(const FlushResult& res) {\n+void FlushHandler::_on_flush_finished(const FlushResult& res) {", "originalCommit": "f36797b94c3d986cf98c54bf18aa6adf5bbf91cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4NTAyMA==", "url": "https://github.com/apache/incubator-doris/pull/2891#discussion_r378285020", "bodyText": "It is precisely because these on_xxx() methods can only be called by MemTableFlushExecutor, so we should set them to be private, that is, they should not be exposed to users.", "author": "lingbin", "createdAt": "2020-02-12T14:29:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3MDM2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMxNjU3MQ==", "url": "https://github.com/apache/incubator-doris/pull/2891#discussion_r378316571", "bodyText": "Anyway, because this code will be refactored soon, and future FlushHandler (may be FlushToken) will only expose the submit() and wait() interfaces, so now I won't change it here.", "author": "lingbin", "createdAt": "2020-02-12T15:17:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3MDM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3NTAyMg==", "url": "https://github.com/apache/incubator-doris/pull/2891#discussion_r378275022", "bodyText": "Do not change this error msg, leave it as \"too many filtered rows\". It is long history, and some user may depends on this certain msg.", "author": "morningman", "createdAt": "2020-02-12T14:13:48Z", "path": "be/src/runtime/stream_load/stream_load_executor.cpp", "diffHunk": "@@ -61,12 +61,10 @@ Status StreamLoadExecutor::execute_plan_fragment(StreamLoadContext* ctx) {\n                 ctx->number_filtered_rows = executor->runtime_state()->num_rows_load_filtered();\n                 ctx->number_unselected_rows = executor->runtime_state()->num_rows_load_unselected();\n \n-                int64_t num_selected_rows =\n-                    ctx->number_total_rows - ctx->number_unselected_rows;\n-                if ((0.0 + ctx->number_filtered_rows) / num_selected_rows > ctx->max_filter_ratio) {\n-                    status = Status::InternalError(\"too many filtered rows\");\n-                }\n-                else if(ctx->number_loaded_rows == 0){\n+                int64_t num_selected_rows = ctx->number_total_rows - ctx->number_unselected_rows;\n+                if ((double)ctx->number_filtered_rows / num_selected_rows > ctx->max_filter_ratio) {\n+                    status = Status::InternalError(\"too many rows are filtered out\");", "originalCommit": "f36797b94c3d986cf98c54bf18aa6adf5bbf91cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3ODA4NQ==", "url": "https://github.com/apache/incubator-doris/pull/2891#discussion_r378278085", "bodyText": "Ok", "author": "lingbin", "createdAt": "2020-02-12T14:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3NTAyMg=="}], "type": "inlineReview"}, {"oid": "b4f5a19136915116b048e6d42b114dd91dc9e3ac", "url": "https://github.com/apache/incubator-doris/commit/b4f5a19136915116b048e6d42b114dd91dc9e3ac", "message": "Modify according by comment", "committedDate": "2020-02-12T15:11:14Z", "type": "commit"}]}