{"pr_number": 3513, "pr_title": " [Doris On ES]fix bug of query failed in doc_value_mode when fields have none value", "pr_createdAt": "2020-05-07T15:21:07Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3513", "timeline": [{"oid": "4ffb70c5d97690809bf77bf50cab49a5081a8d15", "url": "https://github.com/apache/incubator-doris/commit/4ffb70c5d97690809bf77bf50cab49a5081a8d15", "message": "fix bug of query failed when column not exist", "committedDate": "2020-05-07T15:16:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNDIyMw==", "url": "https://github.com/apache/incubator-doris/pull/3513#discussion_r421914223", "bodyText": "maybe _size should be total ? currently, the _size = inner_hits.size()", "author": "wuyunfeng", "createdAt": "2020-05-08T03:19:49Z", "path": "be/src/exec/es/es_scroll_parser.cpp", "diffHunk": "@@ -275,7 +286,32 @@ int ScrollParser::get_total() {\n Status ScrollParser::fill_tuple(const TupleDescriptor* tuple_desc, \n             Tuple* tuple, MemPool* tuple_pool, bool* line_eof, const std::map<std::string, std::string>& docvalue_context) {\n     *line_eof = true;\n+\n     if (_size <= 0 || _line_index >= _size) {", "originalCommit": "4ffb70c5d97690809bf77bf50cab49a5081a8d15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNzc0Mg==", "url": "https://github.com/apache/incubator-doris/pull/3513#discussion_r421917742", "bodyText": "maybe _size should be total ? currently, the _size = inner_hits.size()\n\ni don't think so.\nThis problem is mainly triggered when _size = 0 and _total > 0\u3002if use _total\uff0cparser() will return OK() and _size remain 0, the problem would not exist.", "author": "blackfox1983", "createdAt": "2020-05-08T03:34:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNDIyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMjMyNA==", "url": "https://github.com/apache/incubator-doris/pull/3513#discussion_r421932324", "bodyText": "Maybe the concept size should keep consistent with before", "author": "wuyunfeng", "createdAt": "2020-05-08T04:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNDIyMw=="}], "type": "inlineReview"}, {"oid": "89b5f93fc62287a7eefccc64062bf58f5199de75", "url": "https://github.com/apache/incubator-doris/commit/89b5f93fc62287a7eefccc64062bf58f5199de75", "message": "fix complier failed of ut", "committedDate": "2020-05-08T14:56:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MTUyNA==", "url": "https://github.com/apache/incubator-doris/pull/3513#discussion_r422451524", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // _fields(doc_value) is fetched from E.S.\n          \n          \n            \n                    // _fields(doc_value) is fetched from ES", "author": "wuyunfeng", "createdAt": "2020-05-09T04:26:58Z", "path": "be/src/exec/es/es_scroll_parser.cpp", "diffHunk": "@@ -275,7 +286,32 @@ int ScrollParser::get_total() {\n Status ScrollParser::fill_tuple(const TupleDescriptor* tuple_desc, \n             Tuple* tuple, MemPool* tuple_pool, bool* line_eof, const std::map<std::string, std::string>& docvalue_context) {\n     *line_eof = true;\n+\n     if (_size <= 0 || _line_index >= _size) {\n+        // _source is fetched from E.S.\n+        if (!_use_doc_value) {\n+            return Status::OK();\n+        }\n+        \n+        // _fields(doc_value) is fetched from E.S.", "originalCommit": "89b5f93fc62287a7eefccc64062bf58f5199de75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MTU1Mg==", "url": "https://github.com/apache/incubator-doris/pull/3513#discussion_r422451552", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // here is operations for `enable_doc_value_scan`.\n          \n          \n            \n                    // here is operations for `use_doc_value`.", "author": "wuyunfeng", "createdAt": "2020-05-09T04:27:35Z", "path": "be/src/exec/es/es_scroll_parser.cpp", "diffHunk": "@@ -275,7 +286,32 @@ int ScrollParser::get_total() {\n Status ScrollParser::fill_tuple(const TupleDescriptor* tuple_desc, \n             Tuple* tuple, MemPool* tuple_pool, bool* line_eof, const std::map<std::string, std::string>& docvalue_context) {\n     *line_eof = true;\n+\n     if (_size <= 0 || _line_index >= _size) {\n+        // _source is fetched from E.S.\n+        if (!_use_doc_value) {\n+            return Status::OK();\n+        }\n+        \n+        // _fields(doc_value) is fetched from E.S.\n+        if (_total <= 0 || _line_index >= _total) {\n+            return Status::OK();\n+        }\n+       \n+       \n+        // here is operations for `enable_doc_value_scan`.", "originalCommit": "89b5f93fc62287a7eefccc64062bf58f5199de75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MTY4NA==", "url": "https://github.com/apache/incubator-doris/pull/3513#discussion_r422451684", "bodyText": "maybe use doc_value_mode is more suitable\uff1f\nin future, we can use different parser for _source or doc_value mode", "author": "wuyunfeng", "createdAt": "2020-05-09T04:29:38Z", "path": "be/src/exec/es/es_scroll_parser.h", "diffHunk": "@@ -50,5 +50,7 @@ class ScrollParser {\n \n     rapidjson::Document _document_node;\n     rapidjson::Value _inner_hits_node;\n+\n+    bool _use_doc_value;", "originalCommit": "89b5f93fc62287a7eefccc64062bf58f5199de75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ad34153beb641e3dc3d299bfde3da6d31d3c9a37", "url": "https://github.com/apache/incubator-doris/commit/ad34153beb641e3dc3d299bfde3da6d31d3c9a37", "message": "fixed style", "committedDate": "2020-05-09T06:45:11Z", "type": "commit"}, {"oid": "f3fa2fb1f53f44f5583449b9031f88630afd03ec", "url": "https://github.com/apache/incubator-doris/commit/f3fa2fb1f53f44f5583449b9031f88630afd03ec", "message": "add a todo comment", "committedDate": "2020-05-09T06:55:36Z", "type": "commit"}]}