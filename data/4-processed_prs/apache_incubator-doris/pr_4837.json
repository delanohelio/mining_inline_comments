{"pr_number": 4837, "pr_title": "[Optimize] Take 'tablet scan frequency' into consideration when selecting a tablet for compaction", "pr_createdAt": "2020-11-03T07:45:33Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4837", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYyOTc0OA==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r516629748", "bodyText": "Add comment for the new fields", "author": "morningman", "createdAt": "2020-11-03T12:27:46Z", "path": "be/src/olap/tablet.h", "diffHunk": "@@ -301,6 +303,10 @@ class Tablet : public BaseTablet {\n     // cumulative compaction policy\n     std::unique_ptr<CumulativeCompactionPolicy> _cumulative_compaction_policy;\n     std::string _cumulative_compaction_type;\n+\n+    int64_t _last_update_scan_count;", "originalCommit": "372fc1df0e9dcf25ffe29cfee31c4241c28ef0aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNjk4OQ==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r517306989", "bodyText": "done.", "author": "weizuo93", "createdAt": "2020-11-04T12:25:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYyOTc0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0NzU1Ng==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r517147556", "bodyText": "Do they need to be normalized? If needed, you should define them as double.", "author": "acelyc111", "createdAt": "2020-11-04T07:43:00Z", "path": "be/src/common/config.h", "diffHunk": "@@ -329,6 +329,13 @@ namespace config {\n     CONF_mInt32(base_compaction_trace_threshold, \"10\");\n     CONF_mInt32(cumulative_compaction_trace_threshold, \"2\");\n \n+    // update tablet scan count in second\n+    CONF_mInt64(update_tablet_scan_count_interval_second, \"300\");\n+    // coefficient for tablet scan frequency and compaction score when finding a tablet for compaction\n+    CONF_mInt32(compaction_tablet_scan_frequency_factor, \"0\");\n+    CONF_mInt32(compaction_tablet_compaction_score_factor, \"1\");", "originalCommit": "372fc1df0e9dcf25ffe29cfee31c4241c28ef0aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE5MzI2OA==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r517193268", "bodyText": "Do they need to be normalized? If needed, you should define them as double.\n\nNormalization is not required.", "author": "weizuo93", "createdAt": "2020-11-04T09:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE0NzU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NDMxNA==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519184314", "bodyText": "Why no document for these 2 configs?\nBetter give best practice for them.", "author": "morningman", "createdAt": "2020-11-07T14:44:33Z", "path": "docs/zh-CN/administrator-guide/config/be_config.md", "diffHunk": "@@ -180,6 +180,10 @@ Metrics: {\"filtered_rows\":0,\"input_row_num\":3346807,\"input_rowsets_count\":42,\"in\n \n ### `column_dictionary_key_size_threshold`\n \n+### `compaction_tablet_compaction_score_factor`", "originalCommit": "3221d91d1d1a208f48f5e2419bb7a570219fd79b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3NjE5NA==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519576194", "bodyText": "Why no document for these 2 configs?\nBetter give best practice for them.\n\ndone.", "author": "weizuo93", "createdAt": "2020-11-09T06:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NDMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NDkyMg==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519184922", "bodyText": "if compaction_tablet_scan_frequency_factor is zero, we can skip calling calculate_scan_frequency() to save some CPU.", "author": "morningman", "createdAt": "2020-11-07T14:50:03Z", "path": "be/src/olap/tablet_manager.cpp", "diffHunk": "@@ -745,17 +747,22 @@ TabletSharedPtr TabletManager::find_best_tablet_to_compaction(\n                     }\n                 }\n \n-                uint32_t table_score = 0;\n+                double tablet_score = 0;\n+                uint32_t current_compaction_score = 0;\n                 {\n                     ReadLock rdlock(tablet_ptr->get_header_lock_ptr());\n                     if (compaction_type == CompactionType::BASE_COMPACTION) {\n-                        table_score = tablet_ptr->calc_base_compaction_score();\n+                        current_compaction_score = tablet_ptr->calc_base_compaction_score();\n                     } else if (compaction_type == CompactionType::CUMULATIVE_COMPACTION) {\n-                        table_score = tablet_ptr->calc_cumulative_compaction_score();\n+                        current_compaction_score = tablet_ptr->calc_cumulative_compaction_score();\n                     }\n                 }\n-                if (table_score > highest_score) {\n-                    highest_score = table_score;\n+                double scan_frequency = tablet_ptr->calculate_scan_frequency();", "originalCommit": "3221d91d1d1a208f48f5e2419bb7a570219fd79b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3NTk0Ng==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519575946", "bodyText": "if compaction_tablet_scan_frequency_factor is zero, we can skip calling calculate_scan_frequency() to save some CPU.\n\nIt's reasonable.", "author": "weizuo93", "createdAt": "2020-11-09T06:28:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NDkyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NTE5Mw==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519185193", "bodyText": "Why multi 60?", "author": "morningman", "createdAt": "2020-11-07T14:52:56Z", "path": "be/src/olap/tablet.cpp", "diffHunk": "@@ -1309,4 +1311,16 @@ void Tablet::generate_tablet_meta_copy_unlocked(TabletMetaSharedPtr new_tablet_m\n     new_tablet_meta->init_from_pb(tablet_meta_pb);\n }\n \n+double Tablet::calculate_scan_frequency() {\n+    time_t now = time(nullptr);\n+    int64_t current_count = query_scan_count->value();\n+    double interval = difftime(now, _last_record_scan_count_timestamp);\n+    double scan_frequency = (current_count - _last_record_scan_count) * 60 / interval;", "originalCommit": "3221d91d1d1a208f48f5e2419bb7a570219fd79b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3NTY2Ng==", "url": "https://github.com/apache/incubator-doris/pull/4837#discussion_r519575666", "bodyText": "Why multi 60?\n\nIt means the average count of tablet scans for each minute, Otherwise it will be the average count of tablet scans for each second .", "author": "weizuo93", "createdAt": "2020-11-09T06:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4NTE5Mw=="}], "type": "inlineReview"}, {"oid": "64ed98dff0559241933373cd5d4cea166aa910c7", "url": "https://github.com/apache/incubator-doris/commit/64ed98dff0559241933373cd5d4cea166aa910c7", "message": "take tablet scan frequency into consider when selecting tablet for compaction", "committedDate": "2020-11-16T06:09:13Z", "type": "commit"}, {"oid": "64ed98dff0559241933373cd5d4cea166aa910c7", "url": "https://github.com/apache/incubator-doris/commit/64ed98dff0559241933373cd5d4cea166aa910c7", "message": "take tablet scan frequency into consider when selecting tablet for compaction", "committedDate": "2020-11-16T06:09:13Z", "type": "forcePushed"}]}