{"pr_number": 3943, "pr_title": "[Bug] Fix bug that delete stmt with filter condition delete all data from table on segment v2", "pr_createdAt": "2020-06-24T13:08:23Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3943", "timeline": [{"oid": "e56dabb1a1ceb0c1120f9cd3d260f58c741562fb", "url": "https://github.com/apache/incubator-doris/commit/e56dabb1a1ceb0c1120f9cd3d260f58c741562fb", "message": "fix", "committedDate": "2020-06-23T13:17:36Z", "type": "commit"}, {"oid": "b3dd48f59ffb5f89a0dea023768c17f7bfc3f52b", "url": "https://github.com/apache/incubator-doris/commit/b3dd48f59ffb5f89a0dea023768c17f7bfc3f52b", "message": "Fix bug that delete stmt with filter condition delete all data from table on segment v2\n   When we get different columns's row ranges by column_delete_conditions, we should use union operation instead of intersection operation to get final get final row ranges.", "committedDate": "2020-06-25T01:58:46Z", "type": "commit"}, {"oid": "b3dd48f59ffb5f89a0dea023768c17f7bfc3f52b", "url": "https://github.com/apache/incubator-doris/commit/b3dd48f59ffb5f89a0dea023768c17f7bfc3f52b", "message": "Fix bug that delete stmt with filter condition delete all data from table on segment v2\n   When we get different columns's row ranges by column_delete_conditions, we should use union operation instead of intersection operation to get final get final row ranges.", "committedDate": "2020-06-25T01:58:46Z", "type": "forcePushed"}, {"oid": "6986860c61895fd14c80070eeb7147754f96e9b8", "url": "https://github.com/apache/incubator-doris/commit/6986860c61895fd14c80070eeb7147754f96e9b8", "message": "Merge branch 'bug_delete' of https://github.com/caiconghui/incubator-doris into bug_delete", "committedDate": "2020-06-26T02:22:54Z", "type": "commit"}, {"oid": "3c1f11a3d994d656ee238b0b74344883619c8d7a", "url": "https://github.com/apache/incubator-doris/commit/3c1f11a3d994d656ee238b0b74344883619c8d7a", "message": "[Bug] Fix bug that delete stmt with filter condition delete all data from table on segment v2\n\nThe root cause is that we lost the relationship of the two delete conditions in same delete stmt.\nBase data:\n    k1, k2\n    1,  2\n    1,  3\ncase 1:\n   delete from tbl where k1=1 and k2=2;\ncase 2:\n   delete from tbl where k1=1;\n   delete from tbl where k2=2;\n\nWe treat the above 2 cases as same, which is incorrect.\nSo we need to process every rowset of delete conditions separately.", "committedDate": "2020-06-26T14:11:40Z", "type": "commit"}, {"oid": "06c0ae0971a08d226ed9bc3809c4e45c02c6c3ff", "url": "https://github.com/apache/incubator-doris/commit/06c0ae0971a08d226ed9bc3809c4e45c02c6c3ff", "message": "Revert commit for log to remove unused log\n\nThis reverts commit e56dabb1a1ceb0c1120f9cd3d260f58c741562fb.", "committedDate": "2020-06-26T14:11:40Z", "type": "commit"}, {"oid": "b3b585a16288148620c3d54058892d2e2c6b1ac3", "url": "https://github.com/apache/incubator-doris/commit/b3b585a16288148620c3d54058892d2e2c6b1ac3", "message": "Add docs/contents and be/build_Release to .gitignore file", "committedDate": "2020-06-26T14:11:40Z", "type": "commit"}, {"oid": "b3b585a16288148620c3d54058892d2e2c6b1ac3", "url": "https://github.com/apache/incubator-doris/commit/b3b585a16288148620c3d54058892d2e2c6b1ac3", "message": "Add docs/contents and be/build_Release to .gitignore file", "committedDate": "2020-06-26T14:11:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ3NDE0NA==", "url": "https://github.com/apache/incubator-doris/pull/3943#discussion_r446474144", "bodyText": "Should the column_cond be null here?\nWe already filter the data by column conditions before.", "author": "morningman", "createdAt": "2020-06-27T02:36:49Z", "path": "be/src/olap/rowset/segment_v2/segment_iterator.cpp", "diffHunk": "@@ -253,30 +253,37 @@ Status SegmentIterator::_get_row_ranges_from_conditions(RowRanges* condition_row\n     _opts.stats->rows_bf_filtered += (pre_size - condition_row_ranges->count());\n \n     RowRanges zone_map_row_ranges = RowRanges::create_single(num_rows());\n-    std::map<int, std::vector<CondColumn*>> column_delete_conditions;\n-    // zone map will use delete conditions\n-    for (auto& delete_condition : _opts.delete_conditions) {\n-        for (auto& column_condition : delete_condition->columns()) {\n-            cids.insert(column_condition.first);\n-            std::vector<CondColumn*>& conditions = column_delete_conditions[column_condition.first];\n-            conditions.emplace_back(column_condition.second);\n-        }\n-    }\n+    // second filter data by zone map\n     for (auto& cid : cids) {\n         // get row ranges by zone map of this column,\n         RowRanges column_row_ranges = RowRanges::create_single(num_rows());\n-        CondColumn* column_cond = nullptr;\n-        if (_opts.conditions != nullptr) {\n-            column_cond = _opts.conditions->get_column(cid);\n-        }\n+        CondColumn* column_cond = _opts.conditions->get_column(cid);\n         RETURN_IF_ERROR(\n-            _column_iterators[cid]->get_row_ranges_by_zone_map(\n-                column_cond,\n-                column_delete_conditions[cid],\n-                &column_row_ranges));\n-        // intersection different columns's row ranges to get final row ranges by zone map\n+                _column_iterators[cid]->get_row_ranges_by_zone_map(\n+                        column_cond,\n+                        nullptr,\n+                        &column_row_ranges));\n+        // intersect different columns's row ranges to get final row ranges by zone map\n         RowRanges::ranges_intersection(zone_map_row_ranges, column_row_ranges, &zone_map_row_ranges);\n     }\n+\n+    // final filter data with delete conditions\n+    for (auto& delete_condition : _opts.delete_conditions) {\n+        RowRanges delete_condition_row_ranges = RowRanges::create_single(0);\n+        for (auto& delete_column_condition : delete_condition->columns()) {\n+            const int32_t cid = delete_column_condition.first;\n+            CondColumn* column_cond = _opts.conditions->get_column(cid);\n+            RowRanges single_delete_condition_row_ranges = RowRanges::create_single(num_rows());\n+            RETURN_IF_ERROR(\n+                    _column_iterators[cid]->get_row_ranges_by_zone_map(\n+                            column_cond,", "originalCommit": "b3b585a16288148620c3d54058892d2e2c6b1ac3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyNjExNg==", "url": "https://github.com/apache/incubator-doris/pull/3943#discussion_r446526116", "bodyText": "@morningman here we use column_cond to skip zone that not need read, so we don't need to process skipped zone with delete conditions", "author": "caiconghui", "createdAt": "2020-06-27T13:19:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ3NDE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4ODc4OA==", "url": "https://github.com/apache/incubator-doris/pull/3943#discussion_r446588788", "bodyText": "OK", "author": "morningman", "createdAt": "2020-06-28T01:57:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ3NDE0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4OTUwMw==", "url": "https://github.com/apache/incubator-doris/pull/3943#discussion_r446589503", "bodyText": "_opts.conditions may be nullptr here.\nYou need to check it before use, like the old way.", "author": "morningman", "createdAt": "2020-06-28T02:07:46Z", "path": "be/src/olap/rowset/segment_v2/segment_iterator.cpp", "diffHunk": "@@ -253,30 +253,37 @@ Status SegmentIterator::_get_row_ranges_from_conditions(RowRanges* condition_row\n     _opts.stats->rows_bf_filtered += (pre_size - condition_row_ranges->count());\n \n     RowRanges zone_map_row_ranges = RowRanges::create_single(num_rows());\n-    std::map<int, std::vector<CondColumn*>> column_delete_conditions;\n-    // zone map will use delete conditions\n-    for (auto& delete_condition : _opts.delete_conditions) {\n-        for (auto& column_condition : delete_condition->columns()) {\n-            cids.insert(column_condition.first);\n-            std::vector<CondColumn*>& conditions = column_delete_conditions[column_condition.first];\n-            conditions.emplace_back(column_condition.second);\n-        }\n-    }\n+    // second filter data by zone map\n     for (auto& cid : cids) {\n         // get row ranges by zone map of this column,\n         RowRanges column_row_ranges = RowRanges::create_single(num_rows());\n-        CondColumn* column_cond = nullptr;\n-        if (_opts.conditions != nullptr) {\n-            column_cond = _opts.conditions->get_column(cid);\n-        }\n+        CondColumn* column_cond = _opts.conditions->get_column(cid);", "originalCommit": "b3b585a16288148620c3d54058892d2e2c6b1ac3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5MDU1OA==", "url": "https://github.com/apache/incubator-doris/pull/3943#discussion_r446590558", "bodyText": "done", "author": "caiconghui", "createdAt": "2020-06-28T02:24:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4OTUwMw=="}], "type": "inlineReview"}, {"oid": "71ef5a3fea9234b59633b19ff6fbffbd8a208a40", "url": "https://github.com/apache/incubator-doris/commit/71ef5a3fea9234b59633b19ff6fbffbd8a208a40", "message": "fix core caused by null conditions of opts", "committedDate": "2020-06-28T02:21:32Z", "type": "commit"}]}