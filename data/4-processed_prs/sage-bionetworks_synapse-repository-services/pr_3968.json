{"pr_number": 3968, "pr_title": "switch to stored procedures for transaction managment, consitency and\u2026", "pr_createdAt": "2020-03-06T20:56:00Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3968", "timeline": [{"oid": "9dff8dad3c908188f55cfc6ecd5ede1e7197145a", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/9dff8dad3c908188f55cfc6ecd5ede1e7197145a", "message": "switch to stored procedures for transaction managment, consitency and performance", "committedDate": "2020-03-06T20:53:58Z", "type": "commit"}, {"oid": "526daaefa24cf91d7e8fcdeeda064c6d78c60bed", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/526daaefa24cf91d7e8fcdeeda064c6d78c60bed", "message": "updated tests to junit 5", "committedDate": "2020-03-06T21:11:38Z", "type": "commit"}, {"oid": "e32b5a920b3ab2e53875b4359be5ae4997ff6207", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/e32b5a920b3ab2e53875b4359be5ae4997ff6207", "message": "all tests are integeration tests in the package", "committedDate": "2020-03-06T21:16:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5NzAyMw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3968#discussion_r389197023", "bodyText": "we can remove the properties block", "author": "marcomarasca", "createdAt": "2020-03-06T23:50:33Z", "path": "lib/id-generator/pom.xml", "diffHunk": "@@ -98,7 +98,7 @@\n \t</dependencies>\n \n \t<properties>", "originalCommit": "e32b5a920b3ab2e53875b4359be5ae4997ff6207", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5OTMzOQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3968#discussion_r389199339", "bodyText": "Double check for unused dependencies (since we removed the transactional context)", "author": "marcomarasca", "createdAt": "2020-03-07T00:01:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5NzAyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5ODM2Ng==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3968#discussion_r389198366", "bodyText": "We could check for a specific error code", "author": "marcomarasca", "createdAt": "2020-03-06T23:57:02Z", "path": "lib/id-generator/src/main/java/org/sagebionetworks/ids/IdGeneratorImpl.java", "diffHunk": "@@ -139,40 +119,34 @@ public void afterPropertiesSet() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n-\n-\t@NewWriteTransaction\n-\t@Override\n-\tpublic BatchOfIds generateBatchNewIds(IdType type, int count) {\n-\t\tif(type == null){\n-\t\t\tthrow new IllegalArgumentException(\"Type cannot be null\");\n-\t\t}\n-\t\tif(count < 1){\n-\t\t\tthrow new IllegalArgumentException(\"Count must be greater than or equal to 1.\");\n-\t\t}\n-\t\t// Get the first ID and acquire the lock on this type.\n-\t\tLong firstId = generateNewId(type);\n-\t\tLong lastId = firstId+(count-1);\n-\t\tif(count > 1){\n-\t\t\tlong now = System.currentTimeMillis();\n-\t\t\tidGeneratorJdbcTemplate.update(String.format(INSERT_SQL_INCREMENT, type.name()), lastId, now);\n+\t\n+\tpublic void createStoredProcedure(String name) {\n+\t\tString ddl = loadDDLString(name);\n+\t\ttry {\n+\t\t\tidGeneratorJdbcTemplate.execute(ddl);\n+\t\t} catch (DataAccessException e) {\n+\t\t\tif(!e.getMessage().contains(\"already exists\")) {", "originalCommit": "e32b5a920b3ab2e53875b4359be5ae4997ff6207", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwNjgyMA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3968#discussion_r389206820", "bodyText": "We might not need a transaction nor the lock table", "author": "marcomarasca", "createdAt": "2020-03-07T00:41:55Z", "path": "lib/id-generator/src/main/resources/generateNewId.ddl.sql", "diffHunk": "@@ -0,0 +1,23 @@\n+CREATE PROCEDURE generateNewId(IN typeName VARCHAR(256))\n+    MODIFIES SQL DATA\n+    SQL SECURITY INVOKER\n+BEGIN\n+\tDECLARE newId BIGINT;\n+    DECLARE typeLock VARCHAR(256);\n+\t\n+\tSET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;", "originalCommit": "e32b5a920b3ab2e53875b4359be5ae4997ff6207", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4b57875122e79cb04dd1fdb505a19c17bdd743fc", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/4b57875122e79cb04dd1fdb505a19c17bdd743fc", "message": "JdbcTemplate only guarentees the same connection for the same transaction, but we do not need a transaction but we do need to reuse the same connection.  Adding both the INSERT and LAST_INSERT_ID() calls esures the same connection is used without using a transaction or a semaphore lock", "committedDate": "2020-03-07T01:25:40Z", "type": "commit"}, {"oid": "6b7492fb708e8cac66e07ec62bcc66edb479c55a", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/6b7492fb708e8cac66e07ec62bcc66edb479c55a", "message": "code coverage reduced", "committedDate": "2020-03-07T01:28:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxODQyOA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3968#discussion_r389218428", "bodyText": "Can be removed", "author": "marcomarasca", "createdAt": "2020-03-07T02:15:30Z", "path": "lib/id-generator/src/main/resources/generateNewId.ddl.sql", "diffHunk": "@@ -0,0 +1,25 @@\n+CREATE PROCEDURE generateNewId(IN typeName VARCHAR(256))\n+    MODIFIES SQL DATA\n+    SQL SECURITY INVOKER\n+BEGIN\n+\tDECLARE newId BIGINT;\n+    DECLARE typeLock VARCHAR(256);", "originalCommit": "6b7492fb708e8cac66e07ec62bcc66edb479c55a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxODUwMg==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3968#discussion_r389218502", "bodyText": "Can be removed", "author": "marcomarasca", "createdAt": "2020-03-07T02:16:10Z", "path": "lib/id-generator/src/main/resources/reserveId.ddl.sql", "diffHunk": "@@ -0,0 +1,16 @@\n+CREATE PROCEDURE reserveId(IN idToReserve BIGINT, IN typeName VARCHAR(256))\n+    MODIFIES SQL DATA\n+    SQL SECURITY INVOKER\n+BEGIN\n+    DECLARE typeLock VARCHAR(256);", "originalCommit": "6b7492fb708e8cac66e07ec62bcc66edb479c55a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}