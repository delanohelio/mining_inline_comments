{"pr_number": 4080, "pr_title": "PLFM-5753 - Code review changes and additional DAO methods for token limits", "pr_createdAt": "2020-06-04T17:15:30Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4080", "timeline": [{"oid": "0cc223c7d2c06b867ebca0cb5d558e48a3e47622", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/0cc223c7d2c06b867ebca0cb5d558e48a3e47622", "message": "Add DAO methods for handling token limits", "committedDate": "2020-06-04T17:11:08Z", "type": "commit"}, {"oid": "b3e2fc77b1975a9a239acdce7b623a7729eba307", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/b3e2fc77b1975a9a239acdce7b623a7729eba307", "message": "Code review changes + DAO method should delete LRU token", "committedDate": "2020-06-04T17:11:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MzM0Ng==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4080#discussion_r435573346", "bodyText": "instead of\n\" AND lastUsed > threshold ORDER BY  lastUsed ASC LIMIT 1\"\nwhat do you think of\n\"ORDER BY lastUsed DESC OFFSET 100\"\n(where 100 is just an example of the number of tokens you want to retain).\nI.e. this deletes all but the most recent 100 tokens.  It has three advantages:\n(1) You don't need to know the count before executing the query;\n(2) There is no 'race condition' in which you check the count and then it changes (a token expires) just before you run the delete query;\n(3) It cleans up old, expired tokens.\nEssentially the operation is idempotent.  It just cleans up all but the most recent 100 tokens.", "author": "brucehoff", "createdAt": "2020-06-04T21:51:44Z", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/auth/OAuthRefreshTokenDaoImpl.java", "diffHunk": "@@ -85,6 +86,21 @@\n \t\t\t+ \" WHERE \" + COL_OAUTH_REFRESH_TOKEN_PRINCIPAL_ID + \" = :\" + PARAM_PRINCIPAL_ID\n \t\t\t+ \" AND \" + COL_OAUTH_REFRESH_TOKEN_CLIENT_ID + \" = :\" + PARAM_CLIENT_ID;\n \n+\tprivate static final String SELECT_ACTIVE_TOKEN_COUNT = \"SELECT COUNT(*) FROM \" + TABLE_OAUTH_REFRESH_TOKEN\n+\t\t\t+ \" WHERE \" + COL_OAUTH_REFRESH_TOKEN_PRINCIPAL_ID + \" = :\" + PARAM_PRINCIPAL_ID\n+\t\t\t+ \" AND \" + COL_OAUTH_REFRESH_TOKEN_CLIENT_ID + \" = :\" + PARAM_CLIENT_ID\n+\t\t\t+ \" AND \" + COL_OAUTH_REFRESH_TOKEN_LAST_USED + \" > (NOW() - INTERVAL  :\" + PARAM_DAYS + \" DAY)\";\n+\n+\tprivate static final String DELETE_LEAST_RECENTLY_USED_ACTIVE_TOKEN = \n+\t\t\t\"DELETE FROM \" + TABLE_OAUTH_REFRESH_TOKEN\n+\t\t\t\t+ \" WHERE \" + COL_OAUTH_REFRESH_TOKEN_PRINCIPAL_ID + \" = :\" + PARAM_PRINCIPAL_ID\n+\t\t\t\t+ \" AND \" + COL_OAUTH_REFRESH_TOKEN_CLIENT_ID + \" = :\" + PARAM_CLIENT_ID\n+\t\t\t\t+ \" AND \" + COL_OAUTH_REFRESH_TOKEN_LAST_USED\n+\t\t\t\t+ \" > (NOW() - INTERVAL  :\" + PARAM_DAYS + \" DAY)\"\n+\t\t\t\t+ \" ORDER BY \" + COL_OAUTH_REFRESH_TOKEN_LAST_USED + \" ASC\"", "originalCommit": "b3e2fc77b1975a9a239acdce7b623a7729eba307", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4MjI3NQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4080#discussion_r435582275", "bodyText": "I think this is a great idea. I will make that change.", "author": "nickgros", "createdAt": "2020-06-04T22:14:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MzM0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4Mjk3NA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4080#discussion_r435582974", "bodyText": "I think that the COUNT query introduced in this PR is also obsoleted by this change (there is no need to get a count if we have a \"safe\" DELETE query), so I will remove that as well.", "author": "nickgros", "createdAt": "2020-06-04T22:16:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MzM0Ng=="}], "type": "inlineReview"}, {"oid": "79381ee70d7df4c8c1688bb61fe0f17962c7920a", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/79381ee70d7df4c8c1688bb61fe0f17962c7920a", "message": "Delete all tokens outside of limit instead of an individual oldest token", "committedDate": "2020-06-04T23:03:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyOTkwMw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4080#discussion_r436829903", "bodyText": "DELETE_LEAST_RECENTLY_USED_ACTIVE_TOKENS (i.e. plural)", "author": "brucehoff", "createdAt": "2020-06-08T16:17:22Z", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/auth/OAuthRefreshTokenDaoImpl.java", "diffHunk": "@@ -85,6 +87,25 @@\n \t\t\t+ \" WHERE \" + COL_OAUTH_REFRESH_TOKEN_PRINCIPAL_ID + \" = :\" + PARAM_PRINCIPAL_ID\n \t\t\t+ \" AND \" + COL_OAUTH_REFRESH_TOKEN_CLIENT_ID + \" = :\" + PARAM_CLIENT_ID;\n \n+\t/*\n+\t * We use a JOIN because\n+\t *   - MySQL doesn't support OFFSET when using DELETE\n+\t *   - MySQL doesn't support LIMIT & IN/ALL/ANY/SOME subquery (so we can't do DELETE WHERE id IN (SELECT ... LIMIT x OFFSET y))\n+\t *\n+\t * https://stackoverflow.com/a/42030157\n+\t */\n+\tprivate static final String DELETE_LEAST_RECENTLY_USED_ACTIVE_TOKEN = \"DELETE t FROM \" + TABLE_OAUTH_REFRESH_TOKEN + \" t \"", "originalCommit": "79381ee70d7df4c8c1688bb61fe0f17962c7920a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzNzA0Nw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4080#discussion_r436837047", "bodyText": "I don't think you need AND COL_OAUTH_REFRESH_TOKEN_LAST_USED > (NOW() - INTERVAL : PARAM_DAYS DAY).  If you omit it then this SQL guarantees that it never leaves more than PARAM_MAX_NUM_TOKENS for a user+client.  If you include it then while you clean up excessive, unexpired tokens, any expired ones will just linger forever.", "author": "brucehoff", "createdAt": "2020-06-08T16:28:34Z", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/auth/OAuthRefreshTokenDaoImpl.java", "diffHunk": "@@ -85,6 +87,25 @@\n \t\t\t+ \" WHERE \" + COL_OAUTH_REFRESH_TOKEN_PRINCIPAL_ID + \" = :\" + PARAM_PRINCIPAL_ID\n \t\t\t+ \" AND \" + COL_OAUTH_REFRESH_TOKEN_CLIENT_ID + \" = :\" + PARAM_CLIENT_ID;\n \n+\t/*\n+\t * We use a JOIN because\n+\t *   - MySQL doesn't support OFFSET when using DELETE\n+\t *   - MySQL doesn't support LIMIT & IN/ALL/ANY/SOME subquery (so we can't do DELETE WHERE id IN (SELECT ... LIMIT x OFFSET y))\n+\t *\n+\t * https://stackoverflow.com/a/42030157\n+\t */\n+\tprivate static final String DELETE_LEAST_RECENTLY_USED_ACTIVE_TOKEN = \"DELETE t FROM \" + TABLE_OAUTH_REFRESH_TOKEN + \" t \"\n+\t\t\t+ \" JOIN (\"\n+\t\t\t\t+ \"SELECT tt.\" + COL_OAUTH_REFRESH_TOKEN_ID\n+\t\t\t\t+ \" FROM \" + TABLE_OAUTH_REFRESH_TOKEN + \" tt \"\n+\t\t\t\t+ \" WHERE \" + COL_OAUTH_REFRESH_TOKEN_PRINCIPAL_ID + \" = :\" + PARAM_PRINCIPAL_ID\n+\t\t\t\t+ \" AND \" + COL_OAUTH_REFRESH_TOKEN_CLIENT_ID + \" = :\" + PARAM_CLIENT_ID\n+\t\t\t\t+ \" AND \" + COL_OAUTH_REFRESH_TOKEN_LAST_USED", "originalCommit": "79381ee70d7df4c8c1688bb61fe0f17962c7920a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzOTUyOA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4080#discussion_r436839528", "bodyText": "As stated above, I think you can omit maxLeaseLengthInDays and just delete based on maxNumberOfTokens", "author": "brucehoff", "createdAt": "2020-06-08T16:32:26Z", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/auth/OAuthRefreshTokenDaoImpl.java", "diffHunk": "@@ -252,4 +269,18 @@ public void deleteAllTokensForUserClientPair(String userId, String clientId) {\n \t\tparams.addValue(PARAM_CLIENT_ID, clientId);\n \t\tnamedParameterJdbcTemplate.update(DELETE_TOKEN_BY_CLIENT_USER_PAIR, params);\n \t}\n+\n+\t@Override\n+\tpublic void deleteLeastRecentlyUsedTokensIfOverLimit(String userId, String clientId, Long maxLeaseLengthInDays, Long maxNumberOfTokens) {", "originalCommit": "79381ee70d7df4c8c1688bb61fe0f17962c7920a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d213c97651efc15613f9f3c4e438dd5cea404cf9", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/d213c97651efc15613f9f3c4e438dd5cea404cf9", "message": "Code review change: freely delete expired tokens when a user is over token limit", "committedDate": "2020-06-08T16:51:38Z", "type": "commit"}, {"oid": "8307385c709f4d5555cf9c7cd653379992b3c489", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/8307385c709f4d5555cf9c7cd653379992b3c489", "message": "Pluralize variable name for SQL statement", "committedDate": "2020-06-08T17:57:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5NzE3Mg==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4080#discussion_r436897172", "bodyText": "rename to avoid confusion", "author": "brucehoff", "createdAt": "2020-06-08T18:07:43Z", "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/auth/OAuthRefreshTokenDaoAutowiredTest.java", "diffHunk": "@@ -392,4 +403,24 @@ void deleteTokensForUserClientPair() {\n \t\tassertTrue(oauthRefreshTokenDao.getRefreshTokenMetadata(tokenToNotRevoke2.getTokenId()).isPresent());\n \t}\n \n+\t@Test\n+\tvoid deleteLeastRecentlyUsedActiveTokens() {\n+\t\t// Note: this date is still in the \"active\" window (in this case, 180 days)\n+\t\tDate leastRecentlyUsedDate = new Date(System.currentTimeMillis() - ONE_DAY_MILLIS * 30);\n+\n+\t\t// Create a bunch of tokens, one of which will be the \"expected\" retrieval based on date\n+\t\tOAuthRefreshTokenInformation toRemove = createRefreshToken(\"abcd\", leastRecentlyUsedDate);\n+\t\tOAuthRefreshTokenInformation doNotRemove1 = createRefreshToken(\"abcd\", new Date());\n+\t\tOAuthRefreshTokenInformation doNotRemove2 = createRefreshToken(\"abcd\", new Date(System.currentTimeMillis() - 1000 * 5));\n+\n+\t\t// We will create an expired token -- it will be deleted, but this is an implementation detail, rather than a requirement\n+\t\tOAuthRefreshTokenInformation expired = createRefreshToken(\"abcd\", new Date(System.currentTimeMillis() - ONE_YEAR_MILLIS));", "originalCommit": "8307385c709f4d5555cf9c7cd653379992b3c489", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dee0d37f9320e7ca04f9616385ab0fba3b9cc677", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/dee0d37f9320e7ca04f9616385ab0fba3b9cc677", "message": "Rewrite test for clarity", "committedDate": "2020-06-08T18:23:06Z", "type": "commit"}]}