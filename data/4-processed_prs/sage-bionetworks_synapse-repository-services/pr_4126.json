{"pr_number": 4126, "pr_title": "PLFM-6296: Allows overriding the notification settings of message recipients", "pr_createdAt": "2020-07-08T00:43:36Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4126", "timeline": [{"oid": "d104c6131b499f0229e08d196034180e3a86e0c5", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/d104c6131b499f0229e08d196034180e3a86e0c5", "message": "PLFM-6296: Remove dead code", "committedDate": "2020-07-07T22:32:19Z", "type": "commit"}, {"oid": "338167cd8c84ef7f18916c396e8c74952b783113", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/338167cd8c84ef7f18916c396e8c74952b783113", "message": "PLFM-6296: Added message to user column to override notification settings", "committedDate": "2020-07-08T00:42:07Z", "type": "commit"}, {"oid": "4f99973baa659ed7e6686f8f6665eb50cb4c6094", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/4f99973baa659ed7e6686f8f6665eb50cb4c6094", "message": "PLFM-6296: Allows to override the notification settings of the user", "committedDate": "2020-07-08T00:42:08Z", "type": "commit"}, {"oid": "0d6040f44b6f942e768cbcaadde3969704970378", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/0d6040f44b6f942e768cbcaadde3969704970378", "message": "PLFM-6296: Fix broken tests", "committedDate": "2020-07-08T00:59:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg5NjAzNQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4126#discussion_r451896035", "bodyText": "add new field to hash/equals", "author": "john-hill", "createdAt": "2020-07-09T00:24:53Z", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/persistence/DBOMessageToUser.java", "diffHunk": "@@ -309,67 +268,52 @@ public DBOMessageToUserBackup createBackupFromDatabaseObject(DBOMessageToUser db\n \t}\n \n \t@Override\n-\tpublic boolean equals(Object o) {\n-\t\tif (this == o) return true;\n-\t\tif (o == null || getClass() != o.getClass()) return false;\n-\n-\t\tDBOMessageToUser that = (DBOMessageToUser) o;\n-\n-\t\tif (messageId != null ? !messageId.equals(that.messageId) : that.messageId != null) return false;\n-\t\tif (rootMessageId != null ? !rootMessageId.equals(that.rootMessageId) : that.rootMessageId != null)\n-\t\t\treturn false;\n-\t\tif (inReplyTo != null ? !inReplyTo.equals(that.inReplyTo) : that.inReplyTo != null) return false;\n-\t\tif (!Arrays.equals(subjectBytes, that.subjectBytes)) return false;\n-\t\tif (!Arrays.equals(bytesTo, that.bytesTo)) return false;\n-\t\tif (!Arrays.equals(bytesCc, that.bytesCc)) return false;\n-\t\tif (!Arrays.equals(bytesBcc, that.bytesBcc)) return false;\n-\t\tif (sent != null ? !sent.equals(that.sent) : that.sent != null) return false;\n-\t\tif (notificationsEndpoint != null ? !notificationsEndpoint.equals(that.notificationsEndpoint) : that.notificationsEndpoint != null)\n-\t\t\treturn false;\n-\t\tif (profileSettingEndpoint != null ? !profileSettingEndpoint.equals(that.profileSettingEndpoint) : that.profileSettingEndpoint != null)\n-\t\t\treturn false;\n-\t\tif (withUnsubscribeLink != null ? !withUnsubscribeLink.equals(that.withUnsubscribeLink) : that.withUnsubscribeLink != null)\n-\t\t\treturn false;\n-\t\tif (withProfileSettingLink != null ? !withProfileSettingLink.equals(that.withProfileSettingLink) : that.withProfileSettingLink != null)\n-\t\t\treturn false;\n-\t\treturn isNotificationMessage != null ? isNotificationMessage.equals(that.isNotificationMessage) : that.isNotificationMessage == null;\n+\tpublic int hashCode() {\n+\t\tfinal int prime = 31;\n+\t\tint result = 1;\n+\t\tresult = prime * result + Arrays.hashCode(bytesBcc);\n+\t\tresult = prime * result + Arrays.hashCode(bytesCc);\n+\t\tresult = prime * result + Arrays.hashCode(bytesTo);\n+\t\tresult = prime * result + Arrays.hashCode(subjectBytes);\n+\t\tresult = prime * result + Objects.hash(inReplyTo, isNotificationMessage, messageId, notificationsEndpoint,\n+\t\t\t\tprofileSettingEndpoint, rootMessageId, sent, withProfileSettingLink, withUnsubscribeLink);\n+\t\treturn result;\n \t}\n \n \t@Override\n-\tpublic int hashCode() {\n-\t\tint result = messageId != null ? messageId.hashCode() : 0;\n-\t\tresult = 31 * result + (rootMessageId != null ? rootMessageId.hashCode() : 0);\n-\t\tresult = 31 * result + (inReplyTo != null ? inReplyTo.hashCode() : 0);\n-\t\tresult = 31 * result + Arrays.hashCode(subjectBytes);\n-\t\tresult = 31 * result + Arrays.hashCode(bytesTo);\n-\t\tresult = 31 * result + Arrays.hashCode(bytesCc);\n-\t\tresult = 31 * result + Arrays.hashCode(bytesBcc);\n-\t\tresult = 31 * result + (sent != null ? sent.hashCode() : 0);\n-\t\tresult = 31 * result + (notificationsEndpoint != null ? notificationsEndpoint.hashCode() : 0);\n-\t\tresult = 31 * result + (profileSettingEndpoint != null ? profileSettingEndpoint.hashCode() : 0);\n-\t\tresult = 31 * result + (withUnsubscribeLink != null ? withUnsubscribeLink.hashCode() : 0);\n-\t\tresult = 31 * result + (withProfileSettingLink != null ? withProfileSettingLink.hashCode() : 0);\n-\t\tresult = 31 * result + (isNotificationMessage != null ? isNotificationMessage.hashCode() : 0);\n-\t\treturn result;\n+\tpublic boolean equals(Object obj) {\n+\t\tif (this == obj) {", "originalCommit": "0d6040f44b6f942e768cbcaadde3969704970378", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg5ODYwOA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4126#discussion_r451898608", "bodyText": "push the pattern down one more level to the dao, so it is not in the api.", "author": "john-hill", "createdAt": "2020-07-09T00:34:50Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/MessageManagerImpl.java", "diffHunk": "@@ -205,12 +206,19 @@ public MessageToUser createMessageWithThrottle(UserInfo userInfo, MessageToUser\n \t\t\t\t\t\t\t+ MAX_NUMBER_OF_NEW_MESSAGES + \" message(s) every \"\n \t\t\t\t\t\t\t+ (MESSAGE_CREATION_INTERVAL_MILLISECONDS / 1000) + \" second(s)\");\n \t\t}\n+\t\t\n \t\treturn createMessage(userInfo, dto);\n \t}\n \n \t@Override\n \t@WriteTransaction\n \tpublic MessageToUser createMessage(UserInfo userInfo, MessageToUser dto) throws NotFoundException {\n+\t\treturn createMessage(userInfo, dto, false);\n+\t}\n+\t\n+\t@Override\n+\t@WriteTransaction\n+\tpublic MessageToUser createMessage(UserInfo userInfo, MessageToUser dto, boolean overrideNotificationSettings) throws NotFoundException {", "originalCommit": "0d6040f44b6f942e768cbcaadde3969704970378", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg5OTUzNw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4126#discussion_r451899537", "bodyText": "Marco is not happy with this test.", "author": "john-hill", "createdAt": "2020-07-09T00:38:25Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/MessageManagerImplTest.java", "diffHunk": "@@ -760,6 +760,29 @@ public void testSendMessageSettings() throws Exception {\n \t\tassertEquals(message3, inbox.get(0).getMessage());\n \t}\n \t\n+\t@Test", "originalCommit": "0d6040f44b6f942e768cbcaadde3969704970378", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e352b4fd2e664d695d4814f5999e4c2d0d417d7e", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/e352b4fd2e664d695d4814f5999e4c2d0d417d7e", "message": "PLFM-6296: Fix DBOMessageToUser hashCode and equals implementation", "committedDate": "2020-07-09T04:43:59Z", "type": "commit"}, {"oid": "87b9413a5c08bb509d9d23058bc34be153afac0e", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/87b9413a5c08bb509d9d23058bc34be153afac0e", "message": "PLFM-6296: Avoid exposing the notification override to the API", "committedDate": "2020-07-09T05:52:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyMTQ4NA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4126#discussion_r453121484", "bodyText": "never()", "author": "john-hill", "createdAt": "2020-07-10T23:35:23Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/MessageManagerImplUnitTest.java", "diffHunk": "@@ -658,4 +720,39 @@ public void testProcessMessage() throws Exception {\n \t\tassertFalse(mtu.getIsNotificationMessage());\n \t\tassertFalse(mtu.getWithUnsubscribeLink());\n \t}\n+\t\n+\t@Test\n+\tpublic void testProcessMessageWithOverrideNotificationSettings() throws Exception {\t\t\n+\t\tsetupCreatorRecipientMocks(true);\n+\t\t\n+\t\tfileHandle.setContentType(\"application/json\");\n+\t\t\n+\t\twhen(fileHandleManager.downloadFileToString(FILE_HANDLE_ID)).thenReturn(\"message body\");\n+\t\twhen(fileHandleDAO.get(FILE_HANDLE_ID)).thenReturn(fileHandle);\n+\t\t\n+\t\t// Call under test\n+\t\tmessageManager.processMessage(MESSAGE_ID, null);\n+\t\t\n+\t\t// Verify that no call to the recipient user profile is performed\n+\t\tverify(userProfileManager, times(0)).getUserProfile(RECIPIENT_ID.toString());", "originalCommit": "87b9413a5c08bb509d9d23058bc34be153afac0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}