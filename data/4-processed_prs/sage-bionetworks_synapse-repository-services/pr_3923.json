{"pr_number": 3923, "pr_title": "invalid tokens should trigger retry and not set table/view to failed", "pr_createdAt": "2020-01-30T20:36:27Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3923", "timeline": [{"oid": "52a4bde77c0de112e0cb75013dd6bf2ab7fee263", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/52a4bde77c0de112e0cb75013dd6bf2ab7fee263", "message": "invalid tokens should trigger retry and not set table/view to failed", "committedDate": "2020-01-30T20:34:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3OTM5Nw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3923#discussion_r373679397", "bodyText": "no need for the spy", "author": "marcomarasca", "createdAt": "2020-01-31T20:50:36Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/table/TableIndexManagerImplTest.java", "diffHunk": "@@ -1027,6 +1028,38 @@ public void testBuildTableIndexWithLock() throws Exception {\n \t\t\t\tany(Exception.class));\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * An InvalidStatusTokenException should not cause the table's state to be set to failed.  Instead\r\n+\t * the rebuild should be restarted by pushing the message back on the queue.  \r\n+\t * @throws Exception\r\n+\t */\r\n+\t@Test\r\n+\tpublic void testBuildTableIndexWithLockInvalidStatusTokenException() throws Exception {\r\n+\t\twhen(mockManagerSupport.isIndexWorkRequired(tableId)).thenReturn(true);\r\n+\t\tString resetToken = \"resetToken\";\r\n+\t\twhen(mockManagerSupport.startTableProcessing(tableId)).thenReturn(resetToken);\r\n+\t\tString lastEtag = \"etag-1\";\r\n+\t\tList<TableChangeMetaData> list = setupMockChanges();\r\n+\t\tIterator<TableChangeMetaData> iterator = list.iterator();\r\n+\t\tlong targetChangeNumber = 1;\r\n+\t\twhen(mockManagerSupport.getLastTableChangeNumber(tableId)).thenReturn(Optional.of(targetChangeNumber));\r\n+\t\t\r\n+\t\tInvalidStatusTokenException exception = new InvalidStatusTokenException(\"wrong token\");\r\n+\t\tdoThrow(exception).when(mockManagerSupport).attemptToSetTableStatusToAvailable(tableId, resetToken, lastEtag);\r\n+\t\t\r\n+\t\tRecoverableMessageException result = assertThrows(RecoverableMessageException.class, ()->{\r\n+\t\t\t// call under test\r\n+\t\t\tmanagerSpy.buildTableIndexWithLock(mockCallback, tableId, iterator);\r", "originalCommit": "52a4bde77c0de112e0cb75013dd6bf2ab7fee263", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}