{"pr_number": 6203, "pr_title": "Add tooltips for all entry types for #6074", "pr_createdAt": "2020-03-29T15:04:17Z", "pr_url": "https://github.com/JabRef/jabref/pull/6203", "timeline": [{"oid": "4172fcdbcb83b0aedb836598463cc405b56e28c7", "url": "https://github.com/JabRef/jabref/commit/4172fcdbcb83b0aedb836598463cc405b56e28c7", "message": "Add tooltips for all entry types for #6074\n\nChange: Add tooltips in the \"Select entry type\" dialog. You can see the tooltip when hovering a button of an entry type.", "committedDate": "2020-03-29T14:41:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMjg4NQ==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r399822885", "bodyText": "some encoding problem", "author": "systemoperator", "createdAt": "2020-03-29T16:45:29Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +178,82 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    public String getDescription(BibEntryType selectedType) {\n+        EntryType entryType = selectedType.getType();\n+        try {\n+            StandardEntryType entry = (StandardEntryType) entryType;\n+            switch (entry) {\n+                case Article:\n+                    return Localization.lang(\"An article from a journal or magazine.\");\n+                case Book:\n+                    return Localization.lang(\"A book with an explicit publisher.\");\n+                case Booklet:\n+                    return Localization.lang(\"A work that is printed and bound, but without a named publisher orsponsoring institution.\");\n+                case Collection:\n+                    return Localization.lang(\"A single-volume collection with multiple, self-contained contributions by distinct authors which have their own title. The work as a whole has no overall author but it will usually have an editor.\");\n+                case Conference:\n+                    return Localization.lang(\"The same as Inproceedings, included for Scribe compatibility.\");\n+                case InBook:\n+                    return Localization.lang(\"A part of a book, which may be a chapter(or section or whatever) and/or a range of pages.\");\n+                case InCollection:\n+                    return Localization.lang(\"A part of a book having its own title.\");\n+                case InProceedings:\n+                    return Localization.lang(\"An article in a conference proceedings.\");\n+                case Manual:\n+                    return Localization.lang(\"Technical documentation.\");\n+                case MastersThesis:\n+                    return Localization.lang(\"A Master\u03b2\u20ac\u2122s thesis.\");", "originalCommit": "4172fcdbcb83b0aedb836598463cc405b56e28c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMzQzNA==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r399823434", "bodyText": "I think it might be reasonable to favor the biblatex documentation over bibtex's, since bibtex is a subset of biblatex and biblatex is better documented. (Or choose the documentation depending on the active mode of the currently opened library - bibtex or biblatex.)", "author": "systemoperator", "createdAt": "2020-03-29T16:50:00Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +178,82 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    public String getDescription(BibEntryType selectedType) {\n+        EntryType entryType = selectedType.getType();\n+        try {\n+            StandardEntryType entry = (StandardEntryType) entryType;\n+            switch (entry) {\n+                case Article:\n+                    return Localization.lang(\"An article from a journal or magazine.\");", "originalCommit": "4172fcdbcb83b0aedb836598463cc405b56e28c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyNzUwOQ==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r399827509", "bodyText": "And please also add a comment that the description is coming from the biblatex manual, e.g. biblatex manual chapter 2", "author": "Siedlerchr", "createdAt": "2020-03-29T17:25:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMzQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg1MDg0Ng==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r399850846", "bodyText": "Thank you for your feedback, i will change the description wherever I used the bibtex documentation.", "author": "dimitra-karadima", "createdAt": "2020-03-29T20:40:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMzQzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMzc1Ng==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r399823756", "bodyText": "After you have finished the descriptions, you will need to add them to the English localization file: src/main/resources/l10n/JabRef_en.properties, which will later be used to translate it into various other languages.", "author": "systemoperator", "createdAt": "2020-03-29T16:52:51Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +178,82 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    public String getDescription(BibEntryType selectedType) {\n+        EntryType entryType = selectedType.getType();\n+        try {\n+            StandardEntryType entry = (StandardEntryType) entryType;\n+            switch (entry) {\n+                case Article:\n+                    return Localization.lang(\"An article from a journal or magazine.\");\n+                case Book:\n+                    return Localization.lang(\"A book with an explicit publisher.\");\n+                case Booklet:\n+                    return Localization.lang(\"A work that is printed and bound, but without a named publisher orsponsoring institution.\");\n+                case Collection:\n+                    return Localization.lang(\"A single-volume collection with multiple, self-contained contributions by distinct authors which have their own title. The work as a whole has no overall author but it will usually have an editor.\");\n+                case Conference:\n+                    return Localization.lang(\"The same as Inproceedings, included for Scribe compatibility.\");\n+                case InBook:\n+                    return Localization.lang(\"A part of a book, which may be a chapter(or section or whatever) and/or a range of pages.\");\n+                case InCollection:\n+                    return Localization.lang(\"A part of a book having its own title.\");\n+                case InProceedings:\n+                    return Localization.lang(\"An article in a conference proceedings.\");\n+                case Manual:\n+                    return Localization.lang(\"Technical documentation.\");\n+                case MastersThesis:\n+                    return Localization.lang(\"A Master\u03b2\u20ac\u2122s thesis.\");\n+                case Misc:\n+                    return Localization.lang(\"Use this type when nothing else fits\");\n+                case PhdThesis:\n+                    return Localization.lang(\"A PhD thesis.\");\n+                case Proceedings:\n+                    return Localization.lang(\"The proceedings of a conference.\");\n+                case TechReport:\n+                    return Localization.lang(\"A report published by a school or other institution, usually numbered within a series.\");\n+                case Unpublished:\n+                    return Localization.lang(\"A document having an author and title, but not formally published.\");\n+                case BookInBook:\n+                    return Localization.lang(\"This type is similar to inbook but intended for works originally published as astand-alone book.\");\n+                case InReference:\n+                    return Localization.lang(\"An article in a work of reference.\");\n+                case MvBook:\n+                    return Localization.lang(\"A multi-volume book.\");\n+                case MvCollection:\n+                    return Localization.lang(\"A multi-volume collection.\");\n+                case MvProceedings:\n+                    return Localization.lang(\"A multi-volume proceedings entry.\");\n+                case MvReference:\n+                    return Localization.lang(\"A multi-volume reference entry. The standard styles will treat this entry typeas an alias for mvcollection.\");\n+                case Online:\n+                    return Localization.lang(\"This entry type is intended for sources such as web sites which are intrinsically online resources.\");\n+                case Reference:\n+                    return Localization.lang(\"A single-volume work of reference such as an encyclopedia or a dictionary.\");\n+                case Report:\n+                    return Localization.lang(\"A technical report, research report, or white paper published by a university or someother institution.\");\n+                case Set:\n+                    return Localization.lang(\"An entry set is a group of entries which are cited as a single reference and listed as a single item in the bibliography.\");\n+                case SuppBook:\n+                    return Localization.lang(\"Supplemental material in a book. This type is provided for elements such as prefaces, introductions, forewords, afterwords, etc. which often have a generic title only.\");\n+                case SuppCollection:\n+                    return Localization.lang(\"Supplemental material in a collection.\");\n+                case SuppPeriodical:\n+                    return Localization.lang(\"Supplemental material in a periodical. This type may be useful when referring to items such as regular columns, obituaries, letters to the editor, etc. which only have a generic title.\");\n+                case Thesis:\n+                    return Localization.lang(\"A thesis written for an educational institution to satisfy the requirements for a degree.\");\n+                case WWW:\n+                    return Localization.lang(\"An alias for online, provided for jurabib compatibility.\");\n+                case Software:\n+                    return Localization.lang(\"Computer software. The standard styles will treat this entry type as an alias for misc.\");\n+                case DATESET:\n+                    return Localization.lang(\"A data set or a similar collection of (mostly) raw data.\");", "originalCommit": "4172fcdbcb83b0aedb836598463cc405b56e28c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg1MTQzNA==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r399851434", "bodyText": "@dimitra-karadima Right clicking an entry in the main table calls\n\n  \n    \n      jabref/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java\n    \n    \n         Line 50\n      in\n      bbf3ab4\n    \n    \n    \n    \n\n        \n          \n           public Menu getChangeEntryTypeMenu(BibEntry entry, BibDatabaseContext bibDatabaseContext, CountingUndoManager undoManager) { \n        \n    \n  \n\n\nwhich further calls\n\n  \n    \n      jabref/src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java\n    \n    \n        Lines 57 to 58\n      in\n      bbf3ab4\n    \n    \n    \n    \n\n        \n          \n           private void populateComplete(ObservableList<MenuItem> items, BibEntry entry, BibDatabaseContext bibDatabaseContext, CountingUndoManager undoManager) { \n        \n\n        \n          \n               if (bibDatabaseContext.isBiblatexMode()) { \n        \n    \n  \n\n\n\n@systemoperator I have found the populateComplete method but when I entered the getDescpription() and setTooltip(), no tooltip was shown. I will look into this more and try to figure it out.", "author": "dimitra-karadima", "createdAt": "2020-03-29T20:45:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMzc1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcyNDA0NA==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r403724044", "bodyText": "@systemoperator check my latest commit! And if you have any new thoughts on how to add those tooltips in the entry editor on in the main table it would be really helpful! I am new to the project and open source, in general, so I am a little bit lost!", "author": "dimitra-karadima", "createdAt": "2020-04-05T16:23:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyMzc1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyNDk1MA==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r399824950", "bodyText": "The finalizing dot is missing. \ud83d\ude09", "author": "systemoperator", "createdAt": "2020-03-29T17:03:30Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +178,82 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    public String getDescription(BibEntryType selectedType) {\n+        EntryType entryType = selectedType.getType();\n+        try {\n+            StandardEntryType entry = (StandardEntryType) entryType;\n+            switch (entry) {\n+                case Article:\n+                    return Localization.lang(\"An article from a journal or magazine.\");\n+                case Book:\n+                    return Localization.lang(\"A book with an explicit publisher.\");\n+                case Booklet:\n+                    return Localization.lang(\"A work that is printed and bound, but without a named publisher orsponsoring institution.\");\n+                case Collection:\n+                    return Localization.lang(\"A single-volume collection with multiple, self-contained contributions by distinct authors which have their own title. The work as a whole has no overall author but it will usually have an editor.\");\n+                case Conference:\n+                    return Localization.lang(\"The same as Inproceedings, included for Scribe compatibility.\");\n+                case InBook:\n+                    return Localization.lang(\"A part of a book, which may be a chapter(or section or whatever) and/or a range of pages.\");\n+                case InCollection:\n+                    return Localization.lang(\"A part of a book having its own title.\");\n+                case InProceedings:\n+                    return Localization.lang(\"An article in a conference proceedings.\");\n+                case Manual:\n+                    return Localization.lang(\"Technical documentation.\");\n+                case MastersThesis:\n+                    return Localization.lang(\"A Master\u03b2\u20ac\u2122s thesis.\");\n+                case Misc:\n+                    return Localization.lang(\"Use this type when nothing else fits\");", "originalCommit": "4172fcdbcb83b0aedb836598463cc405b56e28c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgyNjkyNw==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r399826927", "bodyText": "You can refactor this to use the new switch expresssions.\nhttps://blog.codefx.org/java/switch-expressions/", "author": "Siedlerchr", "createdAt": "2020-03-29T17:20:40Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +178,82 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    public String getDescription(BibEntryType selectedType) {\n+        EntryType entryType = selectedType.getType();\n+        try {\n+            StandardEntryType entry = (StandardEntryType) entryType;\n+            switch (entry) {", "originalCommit": "4172fcdbcb83b0aedb836598463cc405b56e28c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "830903c43630a8dd3bb1e3d22bce98f073ff5418", "url": "https://github.com/JabRef/jabref/commit/830903c43630a8dd3bb1e3d22bce98f073ff5418", "message": "Fix merge conflict\nFix merge conflict between branch fix-for-issue-6074 and master", "committedDate": "2020-03-29T18:42:28Z", "type": "commit"}, {"oid": "014ef0cb5a2152e820c99bfd2acb2f056de46031", "url": "https://github.com/JabRef/jabref/commit/014ef0cb5a2152e820c99bfd2acb2f056de46031", "message": "Merge upstream branch into fix-for-issue-6074", "committedDate": "2020-03-30T17:27:03Z", "type": "commit"}, {"oid": "073a60cd8d8b83d2bad236f53c5d082ed4e891be", "url": "https://github.com/JabRef/jabref/commit/073a60cd8d8b83d2bad236f53c5d082ed4e891be", "message": "Change the tooltips' description for #6074\n\nAdd the following changes:\n-tooltips' description comes from biblatex documentation\n-comment about the biblatex manual\n-description to the english localization file", "committedDate": "2020-03-30T17:31:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNzUyOQ==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r402117529", "bodyText": "Why do you use a try catch block? With the switch case default you have dealt with all cases and I don't see anything tha throws an exception? (Although it's not needed here, just as a tip for the future: Never catch the generic \"Exception\" type, always catch the most specific exceptions, see \"  (see Item 58 of Joshua Bloch's Effective Java)\n\"", "author": "Siedlerchr", "createdAt": "2020-04-02T07:51:30Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +178,119 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    //The description is coming from biblatex manual chapter 2\n+    //Biblatex documentation is favored over the bibtex,\n+    //since bibtex is a subset of biblatex and biblatex is better documented.\n+    public String getDescription(BibEntryType selectedType) {\n+        EntryType entryType = selectedType.getType();\n+        try {\n+            StandardEntryType entry = (StandardEntryType) entryType;\n+            switch (entry) {\n+                case Article -> {\n+                    return Localization.lang(\"An article in a journal, magazine, newspaper, or other periodical which forms a self-contained unit with its own title.\");\n+                }\n+                case Book -> {\n+                    return Localization.lang(\"A single-volume book with one or more authors where the authors share credit for the work as a whole.\");\n+                }\n+                case Booklet -> {\n+                    return Localization.lang(\"A book-like work without a formal publisher or sponsoring institution.\");\n+                }\n+                case Collection -> {\n+                    return Localization.lang(\"A single-volume collection with multiple, self-contained contributions by distinct authors which have their own title. The work as a whole has no overall author but it will usually have an editor.\");\n+                }\n+                case Conference -> {\n+                    return Localization.lang(\"A legacy alias for inproceedings.\");\n+                }\n+                case InBook -> {\n+                    return Localization.lang(\"A part of a book which forms a self-contained unit with its own title.\");\n+                }\n+                case InCollection -> {\n+                    return Localization.lang(\"A contribution to a collection which forms a self-contained unit with a distinct author and title.\");\n+                }\n+                case InProceedings -> {\n+                    return Localization.lang(\"An article in a conference proceedings.\");\n+                }\n+                case Manual -> {\n+                    return Localization.lang(\"Technical or other documentation, not necessarily in printed form.\");\n+                }\n+                case MastersThesis -> {\n+                    return Localization.lang(\"Similar to thesis except that the type field is optional and defaults to the localised term  Master's thesis.\");\n+                }\n+                case Misc -> {\n+                    return Localization.lang(\"A fallback type for entries which do not fit into any other category.\");\n+                }\n+                case PhdThesis -> {\n+                    return Localization.lang(\"Similar to thesis except that the type field is optional and defaults to the localised term PhD thesis.\");\n+                }\n+                case Proceedings -> {\n+                    return Localization.lang(\"A single-volume conference proceedings. This type is very similar to collection.\");\n+                }\n+                case TechReport -> {\n+                    return Localization.lang(\"Similar to report except that the type field is optional and defaults to the localised term technical report.\");\n+                }\n+                case Unpublished -> {\n+                    return Localization.lang(\"A work with an author and a title which has not been formally published, such as a manuscript or the script of a talk.\");\n+                }\n+                case BookInBook -> {\n+                    return Localization.lang(\"This type is similar to inbook but intended for works originally published as a stand-alone book.\");\n+                }\n+                case InReference -> {\n+                    return Localization.lang(\"An article in a work of reference. This is a more specific variant of the generic incollection entry type.\");\n+                }\n+                case MvBook -> {\n+                    return Localization.lang(\"A multi-volume book.\");\n+                }\n+                case MvCollection -> {\n+                    return Localization.lang(\"A multi-volume collection.\");\n+                }\n+                case MvProceedings -> {\n+                    return Localization.lang(\"A multi-volume proceedings entry.\");\n+                }\n+                case MvReference -> {\n+                    return Localization.lang(\"A multi-volume reference entry. The standard styles will treat this entry type as an alias for mvcollection.\");\n+                }\n+                case Online -> {\n+                    return Localization.lang(\"This entry type is intended for sources such as web sites which are intrinsically online resources.\");\n+                }\n+                case Reference -> {\n+                    return Localization.lang(\"A single-volume work of reference such as an encyclopedia or a dictionary.\");\n+                }\n+                case Report -> {\n+                    return Localization.lang(\"A technical report, research report, or white paper published by a university or some other institution.\");\n+                }\n+                case Set -> {\n+                    return Localization.lang(\"An entry set is a group of entries which are cited as a single reference and listed as a single item in the bibliography.\");\n+                }\n+                case SuppBook -> {\n+                    return Localization.lang(\"Supplemental material in a book. This type is provided for elements such as prefaces, introductions, forewords, afterwords, etc. which often have a generic title only.\");\n+                }\n+                case SuppCollection -> {\n+                    return Localization.lang(\"Supplemental material in a collection.\");\n+                }\n+                case SuppPeriodical -> {\n+                    return Localization.lang(\"Supplemental material in a periodical. This type may be useful when referring to items such as regular columns, obituaries, letters to the editor, etc. which only have a generic title.\");\n+                }\n+                case Thesis -> {\n+                    return Localization.lang(\"A thesis written for an educational institution to satisfy the requirements for a degree.\");\n+                }\n+                case WWW -> {\n+                    return Localization.lang(\"An alias for online, provided for jurabib compatibility.\");\n+                }\n+                case Software -> {\n+                    return Localization.lang(\"Computer software. The standard styles will treat this entry type as an alias for misc.\");\n+                }\n+                case DATESET -> {\n+                    return Localization.lang(\"A data set or a similar collection of (mostly) raw data.\");\n+                }\n+                default -> {\n+                    return \"\";\n+                }\n+            }\n+        } catch (Exception e) {\n+            return \"\";", "originalCommit": "073a60cd8d8b83d2bad236f53c5d082ed4e891be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE1Mjk3Ng==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r402152976", "bodyText": "@Siedlerchr When i cast entryType into StandardEntryType and it does not belong in the Standard Entry Types it throws an exception, e.g. it belongs to IEEETran. So I use a try catch block in order to avoid that.", "author": "dimitra-karadima", "createdAt": "2020-04-02T08:51:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNzUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE1ODUwNg==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r402158506", "bodyText": "Ah I see, well, then do a check  before with instanceof StandardEntryType\nAnd as of jdk 14 you can use the new pattern matching syntax\nhttps://www.baeldung.com/java-pattern-matching-instanceof", "author": "Siedlerchr", "createdAt": "2020-04-02T09:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNzUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2ODIzMA==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r402168230", "bodyText": "@Siedlerchr ok I will do and thanks for your review!", "author": "dimitra-karadima", "createdAt": "2020-04-02T09:15:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNzUyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTMzNw==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r402889337", "bodyText": "@dimitra-karadima Minor suggestion: e.g. inproceedings could be renamed to InProceedings. Reasoning: For consistency reasons, entry types which are documented with a preceding @ (like @proceedings) in the descriptional text for an entry type could be written in the same way, as they are selectable in the UI of JabRef (e.g. Conference: @inproceedings -> InProceedings; MvBook: @book -> Book; MasterThesis: @thesis -> Thesis; ...)", "author": "systemoperator", "createdAt": "2020-04-03T09:49:38Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +178,119 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    //The description is coming from biblatex manual chapter 2\n+    //Biblatex documentation is favored over the bibtex,\n+    //since bibtex is a subset of biblatex and biblatex is better documented.\n+    public String getDescription(BibEntryType selectedType) {\n+        EntryType entryType = selectedType.getType();\n+        try {\n+            StandardEntryType entry = (StandardEntryType) entryType;\n+            switch (entry) {\n+                case Article -> {\n+                    return Localization.lang(\"An article in a journal, magazine, newspaper, or other periodical which forms a self-contained unit with its own title.\");\n+                }\n+                case Book -> {\n+                    return Localization.lang(\"A single-volume book with one or more authors where the authors share credit for the work as a whole.\");\n+                }\n+                case Booklet -> {\n+                    return Localization.lang(\"A book-like work without a formal publisher or sponsoring institution.\");\n+                }\n+                case Collection -> {\n+                    return Localization.lang(\"A single-volume collection with multiple, self-contained contributions by distinct authors which have their own title. The work as a whole has no overall author but it will usually have an editor.\");\n+                }\n+                case Conference -> {\n+                    return Localization.lang(\"A legacy alias for inproceedings.\");", "originalCommit": "073a60cd8d8b83d2bad236f53c5d082ed4e891be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5NzYyMg==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r402897622", "bodyText": "@dimitra-karadima For even better distinction between common text, you could also encapsulate those entry type phrases in ticks (e.g. 'InProceedings') or quotes (e.g. \"InProceedings\"), which makes it even more understandable. In the biblatex documentation this is done on the one hand with the @ symbol and formatting it as some code, but encapsulation would be really nice in this case. Then it is easy to distinguish e.g. the common text term theses from an the entry type 'Thesis' (which should reference to @thesis).", "author": "systemoperator", "createdAt": "2020-04-03T10:04:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTMzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxNTczNg==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r402915736", "bodyText": "mvBook stand for multi volume book", "author": "Siedlerchr", "createdAt": "2020-04-03T10:39:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTMzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNjAxMQ==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r403006011", "bodyText": "@systemoperator So what do you suggest better? Ticks or quotes over the preceding @ ?", "author": "dimitra-karadima", "createdAt": "2020-04-03T13:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTMzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyNTg3Nw==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r403025877", "bodyText": "@dimitra-karadima Please use quotes, as they are used for describing the entry fields of an entry type as well (see: #6239).", "author": "systemoperator", "createdAt": "2020-04-03T13:59:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTMzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwNTA2Mw==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r402905063", "bodyText": "I would recommend refactoring the tooltip creation to the following, which prevents display issues, if some text exceeds the screen width \ud83d\ude03:\nScreen currentScreen = Screen.getPrimary();\ndouble maxWidth = currentScreen.getBounds().getWidth();\nTooltip tooltip = new Tooltip(description);\ntooltip.setMaxWidth(maxWidth * 2 / 3);\ntooltip.setWrapText(true);\nentryButton.setTooltip(tooltip);", "author": "systemoperator", "createdAt": "2020-04-03T10:18:23Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -92,6 +95,13 @@ private void addEntriesToPane(FlowPane pane, Collection<? extends BibEntryType>\n             entryButton.setUserData(entryType);\n             entryButton.setOnAction(event -> setEntryTypeForReturnAndClose(Optional.of(entryType)));\n             pane.getChildren().add(entryButton);\n+\n+            String description = getDescription(entryType);\n+            if (StringUtil.isNotBlank(description)) {\n+                Tooltip tooltip = new Tooltip();", "originalCommit": "073a60cd8d8b83d2bad236f53c5d082ed4e891be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a546c32c8acb9a7ae6237e971c4bb777c7c910c3", "url": "https://github.com/JabRef/jabref/commit/a546c32c8acb9a7ae6237e971c4bb777c7c910c3", "message": "Refactor tooltip for #6074\n\nAdd the following changes:\n-refactor the tooltip to prevent display issues\n-check if the entry type is StandardEntryType with instance of\n-use quotes to describe another entry type in the tooltip's description", "committedDate": "2020-04-04T11:46:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQyNTQxNA==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r404425414", "bodyText": "@Siedlerchr There is a typo in DATESET, it should be called DATASET or even more preferrably Dataset, right?", "author": "systemoperator", "createdAt": "2020-04-06T22:25:23Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +182,117 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    //The description is coming from biblatex manual chapter 2\n+    //Biblatex documentation is favored over the bibtex,\n+    //since bibtex is a subset of biblatex and biblatex is better documented.\n+    public String getDescription(BibEntryType selectedType) {\n+        EntryType entryType = selectedType.getType();\n+        if (entryType instanceof StandardEntryType entry) {\n+            switch (entry) {\n+                case Article -> {\n+                    return Localization.lang(\"An article in a journal, magazine, newspaper, or other periodical which forms a self-contained unit with its own title.\");\n+                }\n+                case Book -> {\n+                    return Localization.lang(\"A single-volume book with one or more authors where the authors share credit for the work as a whole.\");\n+                }\n+                case Booklet -> {\n+                    return Localization.lang(\"A book-like work without a formal publisher or sponsoring institution.\");\n+                }\n+                case Collection -> {\n+                    return Localization.lang(\"A single-volume collection with multiple, self-contained contributions by distinct authors which have their own title. The work as a whole has no overall author but it will usually have an editor.\");\n+                }\n+                case Conference -> {\n+                    return Localization.lang(\"A legacy alias for \\\"InProceedings\\\".\");\n+                }\n+                case InBook -> {\n+                    return Localization.lang(\"A part of a book which forms a self-contained unit with its own title.\");\n+                }\n+                case InCollection -> {\n+                    return Localization.lang(\"A contribution to a collection which forms a self-contained unit with a distinct author and title.\");\n+                }\n+                case InProceedings -> {\n+                    return Localization.lang(\"An article in a conference proceedings.\");\n+                }\n+                case Manual -> {\n+                    return Localization.lang(\"Technical or other documentation, not necessarily in printed form.\");\n+                }\n+                case MastersThesis -> {\n+                    return Localization.lang(\"Similar to \\\"Thesis\\\" except that the type field is optional and defaults to the localised term  Master's thesis.\");\n+                }\n+                case Misc -> {\n+                    return Localization.lang(\"A fallback type for entries which do not fit into any other category.\");\n+                }\n+                case PhdThesis -> {\n+                    return Localization.lang(\"Similar to \\\"Thesis\\\" except that the type field is optional and defaults to the localised term PhD thesis.\");\n+                }\n+                case Proceedings -> {\n+                    return Localization.lang(\"A single-volume conference proceedings. This type is very similar to \\\"Collection\\\".\");\n+                }\n+                case TechReport -> {\n+                    return Localization.lang(\"Similar to \\\"Report\\\" except that the type field is optional and defaults to the localised term technical report.\");\n+                }\n+                case Unpublished -> {\n+                    return Localization.lang(\"A work with an author and a title which has not been formally published, such as a manuscript or the script of a talk.\");\n+                }\n+                case BookInBook -> {\n+                    return Localization.lang(\"This type is similar to \\\"InBook\\\" but intended for works originally published as a stand-alone book.\");\n+                }\n+                case InReference -> {\n+                    return Localization.lang(\"An article in a work of reference. This is a more specific variant of the generic \\\"InCollection\\\" entry type.\");\n+                }\n+                case MvBook -> {\n+                    return Localization.lang(\"A multi-volume \\\"Book\\\".\");\n+                }\n+                case MvCollection -> {\n+                    return Localization.lang(\"A multi-volume \\\"Collection\\\".\");\n+                }\n+                case MvProceedings -> {\n+                    return Localization.lang(\"A multi-volume \\\"Proceedings\\\" entry.\");\n+                }\n+                case MvReference -> {\n+                    return Localization.lang(\"A multi-volume \\\"Reference\\\" entry. The standard styles will treat this entry type as an alias for \\\"MvCollection\\\".\");\n+                }\n+                case Online -> {\n+                    return Localization.lang(\"This entry type is intended for sources such as web sites which are intrinsically online resources.\");\n+                }\n+                case Reference -> {\n+                    return Localization.lang(\"A single-volume work of reference such as an encyclopedia or a dictionary.\");\n+                }\n+                case Report -> {\n+                    return Localization.lang(\"A technical report, research report, or white paper published by a university or some other institution.\");\n+                }\n+                case Set -> {\n+                    return Localization.lang(\"An entry set is a group of entries which are cited as a single reference and listed as a single item in the bibliography.\");\n+                }\n+                case SuppBook -> {\n+                    return Localization.lang(\"Supplemental material in a \\\"Book\\\". This type is provided for elements such as prefaces, introductions, forewords, afterwords, etc. which often have a generic title only.\");\n+                }\n+                case SuppCollection -> {\n+                    return Localization.lang(\"Supplemental material in a \\\"Collection\\\".\");\n+                }\n+                case SuppPeriodical -> {\n+                    return Localization.lang(\"Supplemental material in a \\\"Periodical\\\". This type may be useful when referring to items such as regular columns, obituaries, letters to the editor, etc. which only have a generic title.\");\n+                }\n+                case Thesis -> {\n+                    return Localization.lang(\"A thesis written for an educational institution to satisfy the requirements for a degree.\");\n+                }\n+                case WWW -> {\n+                    return Localization.lang(\"An alias for \\\"Online\\\", provided for jurabib compatibility.\");\n+                }\n+                case Software -> {\n+                    return Localization.lang(\"Computer software. The standard styles will treat this entry type as an alias for \\\"Misc\\\".\");\n+                }\n+                case DATESET -> {", "originalCommit": "a546c32c8acb9a7ae6237e971c4bb777c7c910c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNTM1MQ==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r405005351", "bodyText": "@systemoperator  Yes, that should be Dataset.", "author": "Siedlerchr", "createdAt": "2020-04-07T17:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQyNTQxNA=="}], "type": "inlineReview"}, {"oid": "dff1c164ce94000d6e7cce3692b3f1fc1bcec2a0", "url": "https://github.com/JabRef/jabref/commit/dff1c164ce94000d6e7cce3692b3f1fc1bcec2a0", "message": "Add tooltips when changing the entry type\n\nAdd the following changes:\n-Add tooltips in the left side of the entry editor when you click the entry type you have already selected or the Change entry type button.\n-Add tooltips in the main table when you right click and choose \"Change entry type\"", "committedDate": "2020-04-07T17:48:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNTk1MA==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r405005950", "bodyText": "It would be cool if could do a global renaming (refactor/rename) to change the type to Dataset", "author": "Siedlerchr", "createdAt": "2020-04-07T17:59:50Z", "path": "src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java", "diffHunk": "@@ -92,4 +102,116 @@ private void populate(ObservableList<MenuItem> items, Collection<BibEntryType> t\n     private void populate(Menu menu, Collection<BibEntryType> types, BibEntry entry, UndoManager undoManager) {\n         populate(menu.getItems(), types, entry, undoManager);\n     }\n+\n+    //The description is coming from biblatex manual chapter 2\n+    //Biblatex documentation is favored over the bibtex,\n+    //since bibtex is a subset of biblatex and biblatex is better documented.\n+    public static String getDescription(EntryType entryType) {\n+        if (entryType instanceof StandardEntryType entry) {\n+            switch (entry) {\n+                case Article -> {\n+                    return Localization.lang(\"An article in a journal, magazine, newspaper, or other periodical which forms a self-contained unit with its own title.\");\n+                }\n+                case Book -> {\n+                    return Localization.lang(\"A single-volume book with one or more authors where the authors share credit for the work as a whole.\");\n+                }\n+                case Booklet -> {\n+                    return Localization.lang(\"A book-like work without a formal publisher or sponsoring institution.\");\n+                }\n+                case Collection -> {\n+                    return Localization.lang(\"A single-volume collection with multiple, self-contained contributions by distinct authors which have their own title. The work as a whole has no overall author but it will usually have an editor.\");\n+                }\n+                case Conference -> {\n+                    return Localization.lang(\"A legacy alias for \\\"InProceedings\\\".\");\n+                }\n+                case InBook -> {\n+                    return Localization.lang(\"A part of a book which forms a self-contained unit with its own title.\");\n+                }\n+                case InCollection -> {\n+                    return Localization.lang(\"A contribution to a collection which forms a self-contained unit with a distinct author and title.\");\n+                }\n+                case InProceedings -> {\n+                    return Localization.lang(\"An article in a conference proceedings.\");\n+                }\n+                case Manual -> {\n+                    return Localization.lang(\"Technical or other documentation, not necessarily in printed form.\");\n+                }\n+                case MastersThesis -> {\n+                    return Localization.lang(\"Similar to \\\"Thesis\\\" except that the type field is optional and defaults to the localised term  Master's thesis.\");\n+                }\n+                case Misc -> {\n+                    return Localization.lang(\"A fallback type for entries which do not fit into any other category.\");\n+                }\n+                case PhdThesis -> {\n+                    return Localization.lang(\"Similar to \\\"Thesis\\\" except that the type field is optional and defaults to the localised term PhD thesis.\");\n+                }\n+                case Proceedings -> {\n+                    return Localization.lang(\"A single-volume conference proceedings. This type is very similar to \\\"Collection\\\".\");\n+                }\n+                case TechReport -> {\n+                    return Localization.lang(\"Similar to \\\"Report\\\" except that the type field is optional and defaults to the localised term technical report.\");\n+                }\n+                case Unpublished -> {\n+                    return Localization.lang(\"A work with an author and a title which has not been formally published, such as a manuscript or the script of a talk.\");\n+                }\n+                case BookInBook -> {\n+                    return Localization.lang(\"This type is similar to \\\"InBook\\\" but intended for works originally published as a stand-alone book.\");\n+                }\n+                case InReference -> {\n+                    return Localization.lang(\"An article in a work of reference. This is a more specific variant of the generic \\\"InCollection\\\" entry type.\");\n+                }\n+                case MvBook -> {\n+                    return Localization.lang(\"A multi-volume \\\"Book\\\".\");\n+                }\n+                case MvCollection -> {\n+                    return Localization.lang(\"A multi-volume \\\"Collection\\\".\");\n+                }\n+                case MvProceedings -> {\n+                    return Localization.lang(\"A multi-volume \\\"Proceedings\\\" entry.\");\n+                }\n+                case MvReference -> {\n+                    return Localization.lang(\"A multi-volume \\\"Reference\\\" entry. The standard styles will treat this entry type as an alias for \\\"MvCollection\\\".\");\n+                }\n+                case Online -> {\n+                    return Localization.lang(\"This entry type is intended for sources such as web sites which are intrinsically online resources.\");\n+                }\n+                case Reference -> {\n+                    return Localization.lang(\"A single-volume work of reference such as an encyclopedia or a dictionary.\");\n+                }\n+                case Report -> {\n+                    return Localization.lang(\"A technical report, research report, or white paper published by a university or some other institution.\");\n+                }\n+                case Set -> {\n+                    return Localization.lang(\"An entry set is a group of entries which are cited as a single reference and listed as a single item in the bibliography.\");\n+                }\n+                case SuppBook -> {\n+                    return Localization.lang(\"Supplemental material in a \\\"Book\\\". This type is provided for elements such as prefaces, introductions, forewords, afterwords, etc. which often have a generic title only.\");\n+                }\n+                case SuppCollection -> {\n+                    return Localization.lang(\"Supplemental material in a \\\"Collection\\\".\");\n+                }\n+                case SuppPeriodical -> {\n+                    return Localization.lang(\"Supplemental material in a \\\"Periodical\\\". This type may be useful when referring to items such as regular columns, obituaries, letters to the editor, etc. which only have a generic title.\");\n+                }\n+                case Thesis -> {\n+                    return Localization.lang(\"A thesis written for an educational institution to satisfy the requirements for a degree.\");\n+                }\n+                case WWW -> {\n+                    return Localization.lang(\"An alias for \\\"Online\\\", provided for jurabib compatibility.\");\n+                }\n+                case Software -> {\n+                    return Localization.lang(\"Computer software. The standard styles will treat this entry type as an alias for \\\"Misc\\\".\");\n+                }\n+                case DATESET -> {", "originalCommit": "dff1c164ce94000d6e7cce3692b3f1fc1bcec2a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0MjM4OQ==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r405342389", "bodyText": "@Siedlerchr do you want it to be Dataset or DataSet?", "author": "dimitra-karadima", "createdAt": "2020-04-08T08:19:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNTk1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0OTg2OQ==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r405349869", "bodyText": "Dataset", "author": "Siedlerchr", "createdAt": "2020-04-08T08:31:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNTk1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk2ODcyNg==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r407968726", "bodyText": "@Siedlerchr what do you think about my latest commit?", "author": "dimitra-karadima", "createdAt": "2020-04-14T08:47:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNTk1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk3MDYxOQ==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r407970619", "bodyText": "LGTM now! I just merged in master and resolved the conflicts. When all relevant tests pass we can merge.", "author": "Siedlerchr", "createdAt": "2020-04-14T08:49:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNTk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3MjIzMA==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r405072230", "bodyText": "Please avoid duplicating the method getDescription(), because this makes maintenance hard.", "author": "systemoperator", "createdAt": "2020-04-07T19:53:20Z", "path": "src/main/java/org/jabref/gui/menus/ChangeEntryTypeMenu.java", "diffHunk": "@@ -92,4 +102,116 @@ private void populate(ObservableList<MenuItem> items, Collection<BibEntryType> t\n     private void populate(Menu menu, Collection<BibEntryType> types, BibEntry entry, UndoManager undoManager) {\n         populate(menu.getItems(), types, entry, undoManager);\n     }\n+\n+    //The description is coming from biblatex manual chapter 2\n+    //Biblatex documentation is favored over the bibtex,\n+    //since bibtex is a subset of biblatex and biblatex is better documented.\n+    public static String getDescription(EntryType entryType) {", "originalCommit": "dff1c164ce94000d6e7cce3692b3f1fc1bcec2a0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3NDUzMw==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r405074533", "bodyText": "You could e.g. declare this method static, then you can access it in the other class as well. (Or you could create some helper class with this static method, or probably find some different location for it.)", "author": "systemoperator", "createdAt": "2020-04-07T19:57:19Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +182,117 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    //The description is coming from biblatex manual chapter 2\n+    //Biblatex documentation is favored over the bibtex,\n+    //since bibtex is a subset of biblatex and biblatex is better documented.\n+    public String getDescription(BibEntryType selectedType) {", "originalCommit": "dff1c164ce94000d6e7cce3692b3f1fc1bcec2a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM5NTUxNw==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r405395517", "bodyText": "@systemoperator I have implemented your first suggestion! Please let me know what you think!", "author": "dimitra-karadima", "createdAt": "2020-04-08T09:42:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3NDUzMw=="}], "type": "inlineReview"}, {"oid": "fe14e5490c7f9d7b687052f6492a88dd0f609f7a", "url": "https://github.com/JabRef/jabref/commit/fe14e5490c7f9d7b687052f6492a88dd0f609f7a", "message": "Fix some issues\n\nChange DATESET standard entry type to Dataset\nRemove getDescription() from ChangeEntryTypeMenu.java", "committedDate": "2020-04-08T09:38:23Z", "type": "commit"}, {"oid": "64f6a548616d0f819acc4aab993b971569c40455", "url": "https://github.com/JabRef/jabref/commit/64f6a548616d0f819acc4aab993b971569c40455", "message": "Merge branch 'master' into fix-for-issue-6074", "committedDate": "2020-04-14T08:49:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk5MDM4Ng==", "url": "https://github.com/JabRef/jabref/pull/6203#discussion_r407990386", "bodyText": "Unfortunately you have to change this feature to the old school format, as the new pattern matching is still only available as preview in the compiler\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (selectedType instanceof StandardEntryType entry) {\n          \n          \n            \n                    if (selectedType instanceof StandardEntryType ) {\n          \n          \n            \n                    {\n          \n          \n            \n                    var entry = (StandardEntryType) selectedType;", "author": "Siedlerchr", "createdAt": "2020-04-14T09:20:29Z", "path": "src/main/java/org/jabref/gui/EntryTypeView.java", "diffHunk": "@@ -168,4 +183,116 @@ private void setEntryTypeForReturnAndClose(Optional<BibEntryType> entryType) {\n         viewModel.stopFetching();\n         this.close();\n     }\n+\n+    //The description is coming from biblatex manual chapter 2\n+    //Biblatex documentation is favored over the bibtex,\n+    //since bibtex is a subset of biblatex and biblatex is better documented.\n+    public static String getDescription(EntryType selectedType) {\n+        if (selectedType instanceof StandardEntryType entry) {", "originalCommit": "64f6a548616d0f819acc4aab993b971569c40455", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a441d9768b7ca3e0df83449297bb2e1b5bf75ea", "url": "https://github.com/JabRef/jabref/commit/4a441d9768b7ca3e0df83449297bb2e1b5bf75ea", "message": "Change to the old school format\r\n\r\nNecessary change because the new pattern is only available preview in the compiler\n\nCo-Authored-By: Christoph <cschwentker@gmail.com>", "committedDate": "2020-04-14T15:32:22Z", "type": "commit"}, {"oid": "a3050cde7cbfd03a9b180c33bc357624d64e8d0d", "url": "https://github.com/JabRef/jabref/commit/a3050cde7cbfd03a9b180c33bc357624d64e8d0d", "message": "Update EntryTypeView.java", "committedDate": "2020-04-14T16:19:50Z", "type": "commit"}, {"oid": "760cc0555743ccfd318703d0e3560f1b75376d5a", "url": "https://github.com/JabRef/jabref/commit/760cc0555743ccfd318703d0e3560f1b75376d5a", "message": "Fix errors\n\nAdd the following change because some tests were failing.", "committedDate": "2020-04-14T20:46:12Z", "type": "commit"}, {"oid": "d2df6f7227f886a784993bfc02a2b121f946406c", "url": "https://github.com/JabRef/jabref/commit/d2df6f7227f886a784993bfc02a2b121f946406c", "message": "Add one more change\n\nFailing unit tests should stop.", "committedDate": "2020-04-14T21:25:17Z", "type": "commit"}, {"oid": "2ea22fba0e77a4af426704b7625f322729f40804", "url": "https://github.com/JabRef/jabref/commit/2ea22fba0e77a4af426704b7625f322729f40804", "message": "Resolve unit test from failing", "committedDate": "2020-04-14T22:44:04Z", "type": "commit"}, {"oid": "02d4022627fb26b6f1e04b69149c76688e46c4be", "url": "https://github.com/JabRef/jabref/commit/02d4022627fb26b6f1e04b69149c76688e46c4be", "message": "Change one more line\n\nTrying to stop failing unit tests", "committedDate": "2020-04-15T06:38:07Z", "type": "commit"}, {"oid": "60d7697be0ec3fcea7775e6bcedc026b4edf0b9b", "url": "https://github.com/JabRef/jabref/commit/60d7697be0ec3fcea7775e6bcedc026b4edf0b9b", "message": "Merge from upstream/master", "committedDate": "2020-04-15T11:13:05Z", "type": "commit"}, {"oid": "224471e89a7dd27eedc4a463de8c361f0d0aac84", "url": "https://github.com/JabRef/jabref/commit/224471e89a7dd27eedc4a463de8c361f0d0aac84", "message": "Fix merge conflict", "committedDate": "2020-04-15T11:14:24Z", "type": "commit"}, {"oid": "7b21c7dbff5bc84159b022d4c3feabffd1e5df8d", "url": "https://github.com/JabRef/jabref/commit/7b21c7dbff5bc84159b022d4c3feabffd1e5df8d", "message": "Merge upstream/master", "committedDate": "2020-04-15T12:27:24Z", "type": "commit"}]}