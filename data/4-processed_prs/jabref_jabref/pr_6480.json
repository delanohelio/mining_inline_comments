{"pr_number": 6480, "pr_title": "Change EasyBind dependency", "pr_createdAt": "2020-05-14T14:39:00Z", "pr_url": "https://github.com/JabRef/jabref/pull/6480", "timeline": [{"oid": "fbdfb897c27ac7c129bfad5fc414bfc77d342ec9", "url": "https://github.com/JabRef/jabref/commit/fbdfb897c27ac7c129bfad5fc414bfc77d342ec9", "message": "Change EasyBind dependency", "committedDate": "2020-05-14T13:54:14Z", "type": "commit"}, {"oid": "8e82d10cc5ce44252c26a61ccc1dabd95a911163", "url": "https://github.com/JabRef/jabref/commit/8e82d10cc5ce44252c26a61ccc1dabd95a911163", "message": "Fix tests", "committedDate": "2020-05-14T17:24:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MzM3MA==", "url": "https://github.com/JabRef/jabref/pull/6480#discussion_r425563370", "bodyText": "Optionals should not be passed as parameter.\nI agree that the code is more easy to call if the setter can be used in streams. Here, I see that the viewModdel is (nearly) always wrapped in Optional.of which makes it harder to read.", "author": "koppor", "createdAt": "2020-05-15T04:45:26Z", "path": "src/test/java/org/jabref/gui/keyboard/KeyBindingsDialogViewModelTest.java", "diffHunk": "@@ -138,9 +140,9 @@ public void testSetAllKeyBindingsToDefault() {\n     }\n \n     @Test\n-    public void testCloseEntryEditorCloseEntryKeybinding() {\n+    void testCloseEntryEditorCloseEntryKeybinding() {\n         KeyBindingViewModel viewModel = setKeyBindingViewModel(KeyBinding.CLOSE);\n-        model.selectedKeyBindingProperty().set(viewModel);\n+        model.selectedKeyBindingProperty().set(Optional.of(viewModel));", "originalCommit": "8e82d10cc5ce44252c26a61ccc1dabd95a911163", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYxNTkwNQ==", "url": "https://github.com/JabRef/jabref/pull/6480#discussion_r425615905", "bodyText": "Good point. That's a limitation of the current OptionalProperty. I've created a new issue tobiasdiez/EasyBind#13 and will look at it in the coming days.", "author": "tobiasdiez", "createdAt": "2020-05-15T07:27:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU2MzM3MA=="}], "type": "inlineReview"}]}