{"pr_number": 3571, "pr_title": "Local lock improvements", "pr_createdAt": "2020-09-10T07:18:53Z", "pr_url": "https://github.com/eclipse-vertx/vert.x/pull/3571", "timeline": [{"oid": "2bdec393355814a5831329a04b12fe1bfefbd3a0", "url": "https://github.com/eclipse-vertx/vert.x/commit/2bdec393355814a5831329a04b12fe1bfefbd3a0", "message": "Use ContextInternal#setTimer to have a timer firing on the context thread", "committedDate": "2020-09-10T07:31:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMDU4Mw==", "url": "https://github.com/eclipse-vertx/vert.x/pull/3571#discussion_r486200583", "bodyText": "Shouldn't the list be returned instead?", "author": "tsegismont", "createdAt": "2020-09-10T09:33:50Z", "path": "src/main/java/io/vertx/core/shareddata/impl/LocalAsyncLocks.java", "diffHunk": "@@ -49,12 +47,30 @@\n       timerId = timeout != Long.MAX_VALUE ? context.owner().setTimer(timeout, tid -> timeout()) : null;\n     }\n \n-    boolean isWaiting() {\n-      return status.get() == Status.WAITING;\n-    }\n-\n     void timeout() {\n       if (status.compareAndSet(Status.WAITING, Status.TIMED_OUT)) {\n+        // Cleanup\n+        waitersMap.compute(lockName, (s, list) -> {\n+          if (list == null) {\n+            // Already removed by nextWaiter\n+            return null;\n+          } else {\n+            int idx = list.indexOf(LockWaiter.this);\n+            if (idx == -1) {\n+              // Already removed by nextWaiter\n+              return null;", "originalCommit": "e9c7361867e9e0b61b169c01aa7393faf0a647a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMyMjUwOQ==", "url": "https://github.com/eclipse-vertx/vert.x/pull/3571#discussion_r486322509", "bodyText": "right, good catch, I'll try adding a test for this", "author": "vietj", "createdAt": "2020-09-10T13:10:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMDU4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMjE0Mw==", "url": "https://github.com/eclipse-vertx/vert.x/pull/3571#discussion_r486202143", "bodyText": "Could we be more aggressive and check if we can return null when there's no other waiter or a SingletonList when there's just one?", "author": "tsegismont", "createdAt": "2020-09-10T09:36:20Z", "path": "src/main/java/io/vertx/core/shareddata/impl/LocalAsyncLocks.java", "diffHunk": "@@ -49,12 +47,30 @@\n       timerId = timeout != Long.MAX_VALUE ? context.owner().setTimer(timeout, tid -> timeout()) : null;\n     }\n \n-    boolean isWaiting() {\n-      return status.get() == Status.WAITING;\n-    }\n-\n     void timeout() {\n       if (status.compareAndSet(Status.WAITING, Status.TIMED_OUT)) {\n+        // Cleanup\n+        waitersMap.compute(lockName, (s, list) -> {\n+          if (list == null) {\n+            // Already removed by nextWaiter\n+            return null;\n+          } else {\n+            int idx = list.indexOf(LockWaiter.this);\n+            if (idx == -1) {\n+              // Already removed by nextWaiter\n+              return null;\n+            }\n+            int size = list.size();\n+            ArrayList<LockWaiter> n = new ArrayList<>(size - 1);", "originalCommit": "e9c7361867e9e0b61b169c01aa7393faf0a647a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMyMzQyMg==", "url": "https://github.com/eclipse-vertx/vert.x/pull/3571#discussion_r486323422", "bodyText": "yes we need to consider this case as it could be an actual one and leave an empty list in the map, I'll try to address this with a test", "author": "vietj", "createdAt": "2020-09-10T13:11:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMjE0Mw=="}], "type": "inlineReview"}, {"oid": "0af7ed61a2524de1aa54b549d2629fc960c947be", "url": "https://github.com/eclipse-vertx/vert.x/commit/0af7ed61a2524de1aa54b549d2629fc960c947be", "message": "Use ContextInternal#setTimer to have a timer firing on the context thread", "committedDate": "2020-09-10T14:01:43Z", "type": "forcePushed"}, {"oid": "b17901c037360435e70164bca1f5d4240fd2212d", "url": "https://github.com/eclipse-vertx/vert.x/commit/b17901c037360435e70164bca1f5d4240fd2212d", "message": "Use ContextInternal#setTimer to have a timer firing on the context thread", "committedDate": "2020-09-10T14:35:27Z", "type": "forcePushed"}, {"oid": "d7ee4074ff7fbbda5d49b5434f5830e50686e5f1", "url": "https://github.com/eclipse-vertx/vert.x/commit/d7ee4074ff7fbbda5d49b5434f5830e50686e5f1", "message": "Local lock timeout now tries to remove the lock from the waiters list instead of relying on the lazy removal performed by the lock release operations - see #3570", "committedDate": "2020-09-11T07:31:36Z", "type": "commit"}, {"oid": "cba85b1c28348367821af054544b1795cb838691", "url": "https://github.com/eclipse-vertx/vert.x/commit/cba85b1c28348367821af054544b1795cb838691", "message": "Simplify a bit LockWaiter that is using an atomic value to handle concurrent acquire/timeout of a waiter. Instead we can use the timer information to achieve the same, on acquire if the timer can be cancelled then we can grant the owner the lock, on timeout we can try to evict the timeout from the list.", "committedDate": "2020-09-11T07:31:36Z", "type": "commit"}, {"oid": "6bb37902da50c9f5fdf41a754aea7f91369445f4", "url": "https://github.com/eclipse-vertx/vert.x/commit/6bb37902da50c9f5fdf41a754aea7f91369445f4", "message": "Use ContextInternal#setTimer to have a timer firing on the context thread", "committedDate": "2020-09-11T07:31:36Z", "type": "commit"}, {"oid": "6bb37902da50c9f5fdf41a754aea7f91369445f4", "url": "https://github.com/eclipse-vertx/vert.x/commit/6bb37902da50c9f5fdf41a754aea7f91369445f4", "message": "Use ContextInternal#setTimer to have a timer firing on the context thread", "committedDate": "2020-09-11T07:31:36Z", "type": "forcePushed"}]}