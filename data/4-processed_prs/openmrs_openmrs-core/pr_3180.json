{"pr_number": 3180, "pr_title": "TRUNK-5146: Use Java streams in UserServiceImpl#checkPrivileges(User)", "pr_createdAt": "2020-04-10T09:48:22Z", "pr_url": "https://github.com/openmrs/openmrs-core/pull/3180", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1NTM5OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406755398", "bodyText": "This is the cause of the error. This line should be User.you.must.have.privileges (note the \"s\" on the end).", "author": "ibacher", "createdAt": "2020-04-10T13:23:58Z", "path": "api/src/main/resources/messages.properties", "diffHunk": "@@ -2177,6 +2177,7 @@ User.creating.already.exists=The user {0} already exists, it could therefore not\n User.setPersonId=You need to call setPerson(Person)\n User.you.must.have.privilege=You must have privilege '{0}' in order to assign it.\n User.you.must.have.role=You must have the role '{0}' in order to assign it.\n+User.you.must.have.privilege=User you must have the following privileges in order to assign them: {0}", "originalCommit": "0decca00bffe2f508b9b79415a95f50d613edca0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MTQ5Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406781492", "bodyText": "Could you un-indent these lines here by one tab?", "author": "ibacher", "createdAt": "2020-04-10T14:26:16Z", "path": "api/src/test/java/org/openmrs/api/UserServiceTest.java", "diffHunk": "@@ -280,7 +282,43 @@ public void createUser_shouldNotAllowSystemIdEqualsUsernameWithLuhnCheckDigit()\n \t\t\t\t\t\tnewUser.getSystemId()));\n \t\tuserService.createUser(newUser, SOME_VALID_PASSWORD);\n \t}\n-\n+\t@Test\n+\tpublic void createUser_shouldNotAllowCreatingUserWithPrivilegeCurrentUserDoesNotHave() throws IllegalAccessException {\n+\t\t//setup the currently logged in user\n+\t\t\t\tUser currentUser = new User();\n+\t\t\t\tRole userRole = new Role(\"User Adder\");\n+\t\t\t\tuserRole.setRole(RoleConstants.AUTHENTICATED);\n+\t\t\t\tuserRole.addPrivilege(new Privilege(\"Add Users\"));\n+\t\t\t\tcurrentUser.addRole(userRole);\n+\t\t\t\t// setup our expected exception\n+\t\t\t\t// we expect this to fail because the currently logged-in user lacks a privilege to be\n+\t\t\t\t// assigned to the new user\n+\t\t\t\texpectedException.expect(APIException.class);\n+\t\t\t\texpectedException.expectMessage(\"You must have privilege {0} in order to assign it\");\n+\t\t\t\t// set current user to the user defined above\n+\t\t\t\twithCurrentUserAs(currentUser, () -> {\n+\t\t\t\t\t// create a role to assign to the new user\n+\t\t\t\t\tRole role = new Role();\n+\t\t\t\t\trole.setRole(RoleConstants.AUTHENTICATED);\n+\t\t\t\t\trole.addPrivilege(new Privilege(\"Custom Privilege\"));// add a privilege to the role\n+\n+\t\t\t\t\t// create our new user object with the required fields\n+\t\t\t\t\tUser u = new User();\n+\t\t\t\t\tu.setPerson(new Person());\n+\t\t\t\t\t// assign the specified role to the user\n+\t\t\t\t\tu.addName(new PersonName(\"Benjamin\", \"A\", \"Wolfe\"));\n+\t\t\t\t\tu.setUsername(\"bwolfe\");\n+\t\t\t\t\tu.getPerson().setGender(\"M\");\n+\t\t\t\t\tu.addRole(role);\n+\t\t\t\t\t// here we expect the exception to be thrown\n+\t\t\t\t\tuserService.createUser(u, \"Openmr5xy\");\n+\t\t\t\t});", "originalCommit": "bfcef4fff7229abd704ed694afc5047167b51fcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4Mzg5Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406783892", "bodyText": "ok thanks @ibacher  its coming to normalise but i still have a problem with the first test", "author": "sherrif10", "createdAt": "2020-04-10T14:31:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MTQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4NDQ1Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406784453", "bodyText": "What sort of problem? It seems to pass in Travis, so if there's an issue, I'd like to get to the bottom of it quickly.", "author": "ibacher", "createdAt": "2020-04-10T14:33:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MTQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc5MTE4Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406791183", "bodyText": "Travis passed this time around, so am remaining with writing tests any hint.", "author": "sherrif10", "createdAt": "2020-04-10T14:48:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MTQ5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MTgzMg==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406781832", "bodyText": "The comment here should be above the line it comments on", "author": "ibacher", "createdAt": "2020-04-10T14:27:04Z", "path": "api/src/test/java/org/openmrs/api/UserServiceTest.java", "diffHunk": "@@ -280,7 +282,43 @@ public void createUser_shouldNotAllowSystemIdEqualsUsernameWithLuhnCheckDigit()\n \t\t\t\t\t\tnewUser.getSystemId()));\n \t\tuserService.createUser(newUser, SOME_VALID_PASSWORD);\n \t}\n-\n+\t@Test\n+\tpublic void createUser_shouldNotAllowCreatingUserWithPrivilegeCurrentUserDoesNotHave() throws IllegalAccessException {\n+\t\t//setup the currently logged in user\n+\t\t\t\tUser currentUser = new User();\n+\t\t\t\tRole userRole = new Role(\"User Adder\");\n+\t\t\t\tuserRole.setRole(RoleConstants.AUTHENTICATED);\n+\t\t\t\tuserRole.addPrivilege(new Privilege(\"Add Users\"));\n+\t\t\t\tcurrentUser.addRole(userRole);\n+\t\t\t\t// setup our expected exception\n+\t\t\t\t// we expect this to fail because the currently logged-in user lacks a privilege to be\n+\t\t\t\t// assigned to the new user\n+\t\t\t\texpectedException.expect(APIException.class);\n+\t\t\t\texpectedException.expectMessage(\"You must have privilege {0} in order to assign it\");\n+\t\t\t\t// set current user to the user defined above\n+\t\t\t\twithCurrentUserAs(currentUser, () -> {\n+\t\t\t\t\t// create a role to assign to the new user\n+\t\t\t\t\tRole role = new Role();\n+\t\t\t\t\trole.setRole(RoleConstants.AUTHENTICATED);\n+\t\t\t\t\trole.addPrivilege(new Privilege(\"Custom Privilege\"));// add a privilege to the role", "originalCommit": "bfcef4fff7229abd704ed694afc5047167b51fcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQxOTc0OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r407419749", "bodyText": "have fixed it thanks", "author": "sherrif10", "createdAt": "2020-04-13T10:33:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MTgzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MjI1NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406782254", "bodyText": "The body here should look identical to the above test except that we should assign two privileges to role and we should expect the User you must have the following privileges in order to assign them: {0} message.", "author": "ibacher", "createdAt": "2020-04-10T14:27:58Z", "path": "api/src/test/java/org/openmrs/api/UserServiceTest.java", "diffHunk": "@@ -280,7 +282,43 @@ public void createUser_shouldNotAllowSystemIdEqualsUsernameWithLuhnCheckDigit()\n \t\t\t\t\t\tnewUser.getSystemId()));\n \t\tuserService.createUser(newUser, SOME_VALID_PASSWORD);\n \t}\n-\n+\t@Test\n+\tpublic void createUser_shouldNotAllowCreatingUserWithPrivilegeCurrentUserDoesNotHave() throws IllegalAccessException {\n+\t\t//setup the currently logged in user\n+\t\t\t\tUser currentUser = new User();\n+\t\t\t\tRole userRole = new Role(\"User Adder\");\n+\t\t\t\tuserRole.setRole(RoleConstants.AUTHENTICATED);\n+\t\t\t\tuserRole.addPrivilege(new Privilege(\"Add Users\"));\n+\t\t\t\tcurrentUser.addRole(userRole);\n+\t\t\t\t// setup our expected exception\n+\t\t\t\t// we expect this to fail because the currently logged-in user lacks a privilege to be\n+\t\t\t\t// assigned to the new user\n+\t\t\t\texpectedException.expect(APIException.class);\n+\t\t\t\texpectedException.expectMessage(\"You must have privilege {0} in order to assign it\");\n+\t\t\t\t// set current user to the user defined above\n+\t\t\t\twithCurrentUserAs(currentUser, () -> {\n+\t\t\t\t\t// create a role to assign to the new user\n+\t\t\t\t\tRole role = new Role();\n+\t\t\t\t\trole.setRole(RoleConstants.AUTHENTICATED);\n+\t\t\t\t\trole.addPrivilege(new Privilege(\"Custom Privilege\"));// add a privilege to the role\n+\n+\t\t\t\t\t// create our new user object with the required fields\n+\t\t\t\t\tUser u = new User();\n+\t\t\t\t\tu.setPerson(new Person());\n+\t\t\t\t\t// assign the specified role to the user\n+\t\t\t\t\tu.addName(new PersonName(\"Benjamin\", \"A\", \"Wolfe\"));\n+\t\t\t\t\tu.setUsername(\"bwolfe\");\n+\t\t\t\t\tu.getPerson().setGender(\"M\");\n+\t\t\t\t\tu.addRole(role);\n+\t\t\t\t\t// here we expect the exception to be thrown\n+\t\t\t\t\tuserService.createUser(u, \"Openmr5xy\");\n+\t\t\t\t});\n+\t}\n+\t\t\t\t\n+\t@Test\n+\tpublic void createUser_shouldNotAllowAssigningSuperUserRoleIfCurrentUserDoesnotHaveAssignSystemDeveloperPrivileges() throws IllegalAccessException {\n+\t\t\t\t", "originalCommit": "bfcef4fff7229abd704ed694afc5047167b51fcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4NDYwNQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406784605", "bodyText": "Am trying to do as you suggested but there is problem with defining method", "author": "sherrif10", "createdAt": "2020-04-10T14:33:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MjI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc5MTY2MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406791661", "bodyText": "What kind of problem?", "author": "ibacher", "createdAt": "2020-04-10T14:49:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MjI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgwMjQxMQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r406802411", "bodyText": "Everything is okey now, i hope to finish tests on sunday", "author": "sherrif10", "createdAt": "2020-04-10T15:13:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MjI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE3ODYzNQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r407178635", "bodyText": "cc.@ibacher, kindly review  this code at this point we can merge it and we tackle everything that may come up along the way, thanks", "author": "sherrif10", "createdAt": "2020-04-12T10:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4MjI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1NjcwOA==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r409656708", "bodyText": "This commit does way too much, which is why the test fails.\n\nThe point of wrapping things in the withCurrentUserAs() function is that this enables us to set the current executing user to a particular user. By default, the executing user for these tests is \"admin\", so this test won't fail as expected.\nThe call to role.hasPrivilege(PrivilegeConstants.ASSIGN_SYSTEM_DEVELOPER_ROLE); doesn't do anything at all. Or rather, it checks to see if the role has that privilege but by itself, that won't throw the error we're expecting, which happens in the checkSuperUserPrivilege() code.\n\nMy advice would be to undo this last commit and make a much simpler commit that simply changes this line:\nexpectedException.expectMessage(\"User you must have the following privileges in order to assign them: {0}\"); \nTo this:\nexpectedException.expectMessage(\"You must have the role {0} in order to assign it\"); \nYou can undo the last commit by running: git reset --hard HEAD~1.", "author": "ibacher", "createdAt": "2020-04-16T15:40:06Z", "path": "api/src/test/java/org/openmrs/api/UserServiceTest.java", "diffHunk": "@@ -353,7 +350,7 @@ public void createUser_shouldNotAllowAssigningSuperUserRoleIfCurrentUserDoesnotH\n \t\t\tu.addRole(role);\n \t\t\t// here we expect the exception to be thrown\n \t\t\tuserService.createUser(u, \"Openmr5xy\");\n-\t\t});", "originalCommit": "1be3b614424dcb341dfb7b1b101fa8980dedbbd1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyOTA5Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3180#discussion_r409729092", "bodyText": "ok then let me do that", "author": "sherrif10", "createdAt": "2020-04-16T17:30:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1NjcwOA=="}], "type": "inlineReview"}, {"oid": "3e75477a980f444b50731564e8dbe4e94dfad8c4", "url": "https://github.com/openmrs/openmrs-core/commit/3e75477a980f444b50731564e8dbe4e94dfad8c4", "message": "User java Streams for userServiceImpl", "committedDate": "2020-04-16T18:57:42Z", "type": "commit"}]}