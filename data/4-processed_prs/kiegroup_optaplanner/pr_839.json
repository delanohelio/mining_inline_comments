{"pr_number": 839, "pr_title": "PLANNER-1997 Spring Boot starter doesn't detect @Planning annotations when they are in abstract classes or interfaces", "pr_createdAt": "2020-07-16T14:27:24Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/839", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MjgwMA==", "url": "https://github.com/kiegroup/optaplanner/pull/839#discussion_r456242800", "bodyText": "Naming: is it really a Spring-specific test domain or is it a domain with annotation on an interface?", "author": "rsynek", "createdAt": "2020-07-17T06:24:43Z", "path": "optaplanner-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/chained/domain/TestdataChainedSpringSolution.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.spring.boot.autoconfigure.chained.domain;\n+\n+import java.util.List;\n+\n+import org.optaplanner.core.api.domain.solution.PlanningEntityCollectionProperty;\n+import org.optaplanner.core.api.domain.solution.PlanningScore;\n+import org.optaplanner.core.api.domain.solution.PlanningSolution;\n+import org.optaplanner.core.api.domain.solution.ProblemFactCollectionProperty;\n+import org.optaplanner.core.api.domain.valuerange.ValueRangeProvider;\n+import org.optaplanner.core.api.score.buildin.simple.SimpleScore;\n+\n+@PlanningSolution\n+public class TestdataChainedSpringSolution {", "originalCommit": "6ac69cb56628aabee3dab2a8fb4a69a542a5f9e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2MjIxNA==", "url": "https://github.com/kiegroup/optaplanner/pull/839#discussion_r456262214", "bodyText": "It's a testdata (= test domain) specifically for Spring. We can't reuse the normal TestdataSolution etc because it needs to be located in the package that spring scans.", "author": "ge0ffrey", "createdAt": "2020-07-17T07:16:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MjgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NzIxMg==", "url": "https://github.com/kiegroup/optaplanner/pull/839#discussion_r456267212", "bodyText": "What name do you think would be better?", "author": "ge0ffrey", "createdAt": "2020-07-17T07:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MjgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MjI5Nw==", "url": "https://github.com/kiegroup/optaplanner/pull/839#discussion_r456272297", "bodyText": "We test a specific situation - annotations on an interface. How about TestdataChainedAnnotatedInterface*?", "author": "rsynek", "createdAt": "2020-07-17T07:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MjgwMA=="}], "type": "inlineReview"}, {"oid": "48b19a52045b643d7e2a05ea8f26bc99cbd525ba", "url": "https://github.com/kiegroup/optaplanner/commit/48b19a52045b643d7e2a05ea8f26bc99cbd525ba", "message": "PLANNER-1997 Spring Boot starter doesn't detect @Planning annotations when they are in abstract classes or interfaces", "committedDate": "2020-07-22T08:36:40Z", "type": "commit"}, {"oid": "48b19a52045b643d7e2a05ea8f26bc99cbd525ba", "url": "https://github.com/kiegroup/optaplanner/commit/48b19a52045b643d7e2a05ea8f26bc99cbd525ba", "message": "PLANNER-1997 Spring Boot starter doesn't detect @Planning annotations when they are in abstract classes or interfaces", "committedDate": "2020-07-22T08:36:40Z", "type": "forcePushed"}]}