{"pr_number": 1010, "pr_title": "KOGITO-3716 Allow automatic close of staging repo", "pr_createdAt": "2020-11-05T08:15:16Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/1010", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NzEyMg==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517887122", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \"--projects ${parentProjectName ?: directory}\"\n          \n          \n            \n                    cmd += \" --projects ${parentProjectName ?: directory}\"", "author": "radtriste", "createdAt": "2020-11-05T08:57:02Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -239,9 +250,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \"--projects ${parentProjectName ?: directory}\"", "originalCommit": "84279b0b9eb42887ee52dea1fc6191e09e03ac51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwMTA1NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517901055", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \" --projects ${parentProjectName ?: directory}\"\n          \n          \n            \n                    cmd += \" --projects :${parentProjectName ?: directory}\"", "author": "radtriste", "createdAt": "2020-11-05T09:19:12Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -239,9 +250,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \" --projects ${parentProjectName ?: directory}\"", "originalCommit": "c835ed0cb55b66ba5b9a0ce94d3e098cf3c05381", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkyMDcyMA==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517920720", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \"--projects ${directory}\"\n          \n          \n            \n                    cmd += \" --projects :${parentProjectName ?: directory}\"", "author": "radtriste", "createdAt": "2020-11-05T09:50:01Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -239,9 +250,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \" --projects :${parentProjectName ?: directory}\"\n+        cmd += \" -DnexusUrl=${env.NEXUS_RELEASE_URL}\"\n+        cmd += \" -DserverId=${env.NEXUS_RELEASE_REPOSITORY_ID}\" \n+        cmd += \" -DrepositoryDirectory=${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        cmd += \" -DstagingProfileId=${env.NEXUS_STAGING_REPOSITORY_ID}\" \n+        cmd += \" -DstagingDescription=\\\"Kogito Runtimes ${getProjectVersion()}\\\"\"\n+        echo \"Run maven cmd $cmd\"\n+        runMaven(cmd, directory)\n+\n+        // Promote to build profile\n+        cmd = \"org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:promote -DbuildPromotionProfileId=${env.NEXUS_BUILD_PROMOTION_PROFILE_ID}\"\n+        cmd += \"--projects ${directory}\"", "originalCommit": "5cb59a092216c8cfc51e813293ad3ebcf68db2b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjU5MQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r517956591", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                mavenCleanInstall('optaplanner', params.SKIP_TESTS, [], extraArgs)\n          \n          \n            \n                                mavenCleanInstall('optaplanner', params.SKIP_TESTS)", "author": "radtriste", "createdAt": "2020-11-05T10:46:24Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -135,10 +150,6 @@ pipeline {\n         stage('Build optaplanner') {\n             steps {\n                 script {\n-                    String extraArgs = ''\n-                    if (params.MAVEN_DEPENDENCIES_REPOSITORY != '') {\n-                        extraArgs = \"-s ${env.GLOBAL_MAVEN_SETTINGS} -Denforcer.skip\"\n-                    }\n                     mavenCleanInstall('optaplanner', params.SKIP_TESTS, [], extraArgs)", "originalCommit": "51943a64bc8a5e8acebc53991e8c0971aa86fc80", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9051124b99f2ec3c733d78f813c9debf6e14d7ea", "url": "https://github.com/kiegroup/optaplanner/commit/9051124b99f2ec3c733d78f813c9debf6e14d7ea", "message": "update", "committedDate": "2020-11-13T07:29:47Z", "type": "forcePushed"}, {"oid": "cec51426352cefb71b570f0e32f8240235d85e02", "url": "https://github.com/kiegroup/optaplanner/commit/cec51426352cefb71b570f0e32f8240235d85e02", "message": "update", "committedDate": "2020-11-13T08:25:37Z", "type": "forcePushed"}, {"oid": "6fe7671158dcd376f09a40b1cfd1d2d6a2544bb8", "url": "https://github.com/kiegroup/optaplanner/commit/6fe7671158dcd376f09a40b1cfd1d2d6a2544bb8", "message": "Use next gen libraries", "committedDate": "2020-11-16T16:06:35Z", "type": "forcePushed"}, {"oid": "8f482353038d266471df08f4b8586e3967d3d558", "url": "https://github.com/kiegroup/optaplanner/commit/8f482353038d266471df08f4b8586e3967d3d558", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-11-23T16:10:23Z", "type": "forcePushed"}, {"oid": "93f3f4f5f24e1ff4badfd7d31744c652f12ed31b", "url": "https://github.com/kiegroup/optaplanner/commit/93f3f4f5f24e1ff4badfd7d31744c652f12ed31b", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-11-26T14:02:47Z", "type": "forcePushed"}, {"oid": "51055ff9058a0c48dff46cd14216156ec493c1ee", "url": "https://github.com/kiegroup/optaplanner/commit/51055ff9058a0c48dff46cd14216156ec493c1ee", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-11-26T14:20:46Z", "type": "forcePushed"}, {"oid": "1f30d7cef1ec3b88bda562e8081e257c06ba740e", "url": "https://github.com/kiegroup/optaplanner/commit/1f30d7cef1ec3b88bda562e8081e257c06ba740e", "message": "small update", "committedDate": "2020-11-30T10:06:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk4MTU2OQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r533981569", "bodyText": "Will be commented out once testing is finished", "author": "radtriste", "createdAt": "2020-12-02T08:33:37Z", "path": "Jenkinsfile.promote", "diffHunk": "@@ -181,44 +160,42 @@ pipeline {\n             }\n             steps {\n                 script {\n-                    dir(employeeRosteringRepository) {\n-                        mavenCleanInstall(true)\n-                        uploadDistribution()\n-                    }\n+                    getMavenConfig().inDirectory(employeeRosteringRepository).skipTests(true).run('clean install')\n+                    uploadDistribution(employeeRosteringRepository)\n                 }\n             }\n         }\n \n-        stage('Update OptaPlanner website') {\n-            when {\n-                expression { return isRelease() }\n-            }\n-            steps {\n-                script {\n-                    final String websiteRepository = 'optaplanner-website'\n-                    String prLink = null\n-                    dir(\"$websiteRepository-bot\") {\n-                        String prBranchName = createWebsitePrBranch(websiteRepository)\n-\n-                        // Update versions in links on the website.\n-                        sh \"./build/update-versions.sh ${getProjectVersion()} ${getNextMinorSnapshotVersion(getProjectVersion())}\"\n-\n-                        // Update the XSDs. OptaPlanner must be cloned and build with the full profile before.\n-                        String optaplannerRoot = \"$WORKSPACE/optaplanner\"\n-                        sh \"cp $optaplannerRoot/optaplanner-core/target/classes/solver.xsd xsd/solver/solver-8.xsd\"\n-                        sh \"cp $optaplannerRoot/optaplanner-benchmark/target/classes/benchmark.xsd xsd/benchmark/benchmark-8.xsd\"\n-\n-                        // Add changed files, commit, open and merge PR\n-                        sh 'git add xsd/\\\\*.xsd _config/pom.yml'\n-                        prLink = commitAndCreatePR(\"Release OptaPlanner ${getProjectVersion()}\", prBranchName, 'master')\n-                    }\n-                    dir(websiteRepository) {\n-                        checkoutRepo(websiteRepository, 'master')\n-                        mergeAndPush(prLink, 'master')\n-                    }\n-                }\n-            }\n-        }\n+        // TODO set back before merging", "originalCommit": "df750b271678df4ba4e01d18ef9da5bed35ccd21", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk4MTc0NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r533981745", "bodyText": "Will be commented out once testing is finished", "author": "radtriste", "createdAt": "2020-12-02T08:33:52Z", "path": "Jenkinsfile.promote", "diffHunk": "@@ -478,50 +444,32 @@ void installGithubCLI() {\n     \"\"\"\n }\n \n-void updateKogitoVersion(String newVersion) {\n-    maven.mvnSetVersionProperty('version.org.kie.kogito', newVersion)\n-}\n-\n-boolean isSpecificMavenConfig() {\n-    return params.MAVEN_DEPENDENCIES_REPOSITORY != ''\n-}\n-\n-void deployArtifacts() {\n-    def mvnCmd = 'clean deploy'\n-    if (params.MAVEN_DEPLOY_REPOSITORY) {\n-        mvnCmd += \" -DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n-    }\n-\n-    if (isSpecificMavenConfig()) {\n-        runMaven(mvnCmd, true)\n-    } else {\n-        maven.runMavenWithSubmarineSettings(mvnCmd, true)\n+void uploadDistribution(String directory) {\n+    dir(directory) {\n+        echo \"uploadDistribution for ${directory}\"", "originalCommit": "df750b271678df4ba4e01d18ef9da5bed35ccd21", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8e3d20ea690dad7823b6abe705da2b11407a42fb", "url": "https://github.com/kiegroup/optaplanner/commit/8e3d20ea690dad7823b6abe705da2b11407a42fb", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-12-02T08:38:37Z", "type": "forcePushed"}, {"oid": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "url": "https://github.com/kiegroup/optaplanner/commit/8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-12-02T08:44:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NDU1Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534074556", "bodyText": "I am slightly in favor of the getMavenConfig (or getDefaultMavenConfig in this case?) as pointed here kiegroup/kogito-examples#435 (comment)", "author": "rsynek", "createdAt": "2020-12-02T10:53:36Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -61,6 +85,20 @@ pipeline {\n                         assert getProjectVersion() != ''\n                         assert getKogitoVersion() != ''\n                     }\n+\n+                    // Setup Maven config\n+                    // Create a default command with default config and which will be cloned for projects\n+                    MavenCommand defaultMvnCmd = new MavenCommand(this, ['-fae'])\n+                                                    .withSettingsXmlId(params.MAVEN_SETTINGS_CONFIG_FILE_ID)\n+                    if (params.MAVEN_DEPENDENCIES_REPOSITORY) {\n+                        defaultMvnCmd.withDependencyRepositoryInSettings('deps-repo', params.MAVEN_DEPENDENCIES_REPOSITORY)\n+                    }\n+\n+                    // Setup maven default commands\n+                    defaultOptaplannerMvnCmd = defaultMvnCmd.clone().inDirectory(optaplannerRepository).withProperty('full')", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NTczNw==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534075737", "bodyText": "Thanks, I wanted to do some refactoring, including this change, after your PRs.", "author": "rsynek", "createdAt": "2020-12-02T10:55:23Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -79,10 +117,10 @@ pipeline {\n \n         stage('Clone repositories') {\n             steps {\n-                checkoutRepo('optaplanner', getBuildBranch())\n-                checkoutRepo('optaplanner-quickstarts', getQuickStartsBranch())\n-                checkoutRepo('optaweb-vehicle-routing', getBuildBranch())\n-                checkoutRepo('optaweb-employee-rostering', getBuildBranch())\n+                checkoutRepo(optaplannerRepository, getBuildBranch())", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NDEwMA==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534084100", "bodyText": "The mavenCleanInstallOptaPlannerParents ran only specific modules (a parent pom.xml and BOM) the other projects depend upon to save time (a couple of seconds vs. ~5 minutes).\nI don't expect these two modules to be renamed; especially the BOM is a part of our API.", "author": "rsynek", "createdAt": "2020-12-02T11:09:13Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -122,30 +141,20 @@ pipeline {\n             }\n             steps {\n                 script {\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaplanner') {\n-                        maven.mvnVersionsSet(getProjectVersion())\n-                        updateKogitoVersion(getKogitoVersion())\n-                    }\n-                    mavenCleanInstallOptaPlannerParents('optaplanner')\n-                    dir('optaweb-vehicle-routing') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n-                    dir('optaweb-employee-rostering') {\n-                        maven.mvnVersionsUpdateParentAndChildModules(getProjectVersion())\n-                    }\n+                    maven.mvnVersionsSet(defaultOptaplannerMvnCmd, getProjectVersion())\n+                    maven.mvnSetVersionProperty(defaultOptaplannerMvnCmd, 'version.org.kie.kogito', getKogitoVersion())\n+                    defaultOptaplannerMvnCmd.clone().skipTests(true).withOptions(['-U']).run('clean install')", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4MzMyNA==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534183324", "bodyText": "woops. gonna correct that", "author": "radtriste", "createdAt": "2020-12-02T13:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NDEwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4NjI1NA==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534186254", "bodyText": "updated", "author": "radtriste", "createdAt": "2020-12-02T13:58:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NDEwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NjM1MA==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534086350", "bodyText": "The if-else can be replaced by a method, e.g. deployMavenArtifacts() that would take care of a single repository.", "author": "rsynek", "createdAt": "2020-12-02T11:13:00Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -196,9 +209,23 @@ pipeline {\n \n         stage('Deploy artifacts') {\n             steps {\n-                mavenDeploy('optaplanner', '-Dfull')\n-                mavenDeploy('optaweb-vehicle-routing', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n-                mavenDeploy('optaweb-employee-rostering', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n+                script {\n+                    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+                        // Normal deploy\n+                        runMavenDeploy(defaultOptaplannerMvnCmd)\n+                        runMavenDeploy(defaultOptawebVehicleRoutingMvnCmd)\n+                        runMavenDeploy(defaultOptawebEmployeeRosteringMvnCmd)\n+                    } else {\n+                        // Deploy locally and then to staging\n+                        runMavenDeployLocally(defaultOptaplannerMvnCmd, optaplannerRepository)\n+                        runMavenDeployLocally(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\n+                        runMavenDeployLocally(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)\n+\n+                        runMavenStage(defaultOptaplannerMvnCmd, optaplannerRepository)\n+                        runMavenStage(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\n+                        runMavenStage(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4MzA1Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534183056", "bodyText": "something like:\ndeployMavenArtifacts(defaultOptaplannerMvnCmd, optaplannerRepository)\ndeployMavenArtifacts(defaultOptawebVehicleRoutingMvnCmd, vehicleRoutingRepository)\ndeployMavenArtifacts(defaultOptawebEmployeeRosteringMvnCmd, employeeRosteringRepository)\n\nand then\nvoid deployMavenArtifacts(mvnCmd, directory){\n    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n         runMavenDeploy(mvnCmd)\n    } else {\n        runMavenDeployLocally(mvnCmd, directory)\n        runMavenStage(mvnCmd, directory)\n    }\n}\n\n?", "author": "radtriste", "createdAt": "2020-12-02T13:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NjM1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4Njc2Mg==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534086762", "bodyText": "Thank you!", "author": "rsynek", "createdAt": "2020-12-02T11:13:47Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NzYzNw==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534087637", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd){\n          \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd) {", "author": "rsynek", "createdAt": "2020-12-02T11:15:15Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}\n+void runMavenDeploy(MavenCommand mvnCmd){", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NzczMQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534087731", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(params.MAVEN_DEPLOY_REPOSITORY){\n          \n          \n            \n                if(params.MAVEN_DEPLOY_REPOSITORY) {", "author": "rsynek", "createdAt": "2020-12-02T11:15:24Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}\n+void runMavenDeploy(MavenCommand mvnCmd){\n+    mvnCmd= mvnCmd.clone()\n+    \n+    if(params.MAVEN_DEPLOY_REPOSITORY){", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4Nzk5MA==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534087990", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            String getLocalDeploymentFolder(String localDeployId){\n          \n          \n            \n            String getLocalDeploymentFolder(String localDeployId) {", "author": "rsynek", "createdAt": "2020-12-02T11:15:51Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -285,55 +310,37 @@ void commitAndCreatePRIgnoringNpmRegistry(String repo) {\n     commitAndCreatePR(repo)\n }\n \n-// TODO: move to a shared library\n-void addNotIgnoredPoms() {\n-    // based on https://stackoverflow.com/a/59888964/8811872\n-    sh '''\n-    find . -type f -name 'pom.xml' > found_poms.txt\n-    poms_to_add=\"\"\n-    while IFS= read -r pom; do\n-        if ! git check-ignore -q \"\\$pom\"; then\n-            poms_to_add=\"\\$poms_to_add \\$pom\"\n-        fi\n-    done < found_poms.txt\n-    rm found_poms.txt\n-    git add \\$poms_to_add\n-    git status\n-    '''\n-}\n+void runMavenDeploy(MavenCommand mvnCmd){\n+    mvnCmd= mvnCmd.clone()\n+    \n+    if(params.MAVEN_DEPLOY_REPOSITORY){\n+        mvnCmd.withDeployRepository(params.MAVEN_DEPLOY_REPOSITORY)\n+    }\n \n-void mavenCleanInstall(String directory, boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    runMaven('clean install', directory, skipTests, profiles, extraArgs)\n+    mvnCmd.skipTests(true).run('clean deploy')\n }\n \n-/**\n- * Builds the parent modules and the BOM so that project depending on these artifacts can resolve.\n- */\n-void mavenCleanInstallOptaPlannerParents(String directory) {\n-    mavenCleanInstall(directory, true, [], '-pl org.optaplanner:optaplanner-build-parent,org.optaplanner:optaplanner-bom -am')\n+void runMavenDeployLocally(MavenCommand mvnCmd, String localDeployId) {\n+    mvnCmd.clone()\n+        .skipTests(true)\n+        .withLocalDeployFolder(getLocalDeploymentFolder(localDeployId))\n+        .run('clean deploy')\n }\n \n-void mavenDeploy(String directory, extraArgs = '') {\n-    String deployRepoArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    String resolvedArgs = \"$extraArgs $deployRepoArgs\".trim()\n-    runMaven('clean deploy', directory, true, [], resolvedArgs)\n+void runMavenStage(MavenCommand mvnCmd, String localDeployId) {\n+    MavenStagingHelper stagingHelper = getStagingHelper(mvnCmd)\n+    deployProperties.putAll(stagingHelper.stageLocalArtifacts(params.NEXUS_STAGING_PROFILE_ID, getLocalDeploymentFolder(localDeployId)))\n+    stagingHelper.promoteStagingRepository(params.NEXUS_BUILD_PROMOTION_PROFILE_ID)\n }\n \n-void runMaven(String goals, String directory, boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    mvnCmd = goals\n-    if(!profiles.isEmpty()){\n-        mvnCmd += \" -P${profiles.join(',')}\"\n-    }\n-    if(extraArgs != ''){\n-        mvnCmd += \" ${extraArgs}\"\n-    }\n-    dir(directory) {\n-        maven.runMaven(mvnCmd, skipTests, ['-fae'])\n-    }\n+MavenStagingHelper getStagingHelper(MavenCommand mvnCmd) {\n+    return new MavenStagingHelper(this, mvnCmd)\n+                .withNexusReleaseUrl(params.NEXUS_RELEASE_URL)\n+                .withNexusReleaseRepositoryId(params.NEXUS_RELEASE_REPOSITORY_ID)\n }\n \n-void updateKogitoVersion(String newVersion) {\n-    maven.mvnSetVersionProperty('version.org.kie.kogito', newVersion)\n+String getLocalDeploymentFolder(String localDeployId){", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4ODIxMw==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534088213", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n          \n          \n            \n                                if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY) {", "author": "rsynek", "createdAt": "2020-12-02T11:16:16Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -196,9 +209,23 @@ pipeline {\n \n         stage('Deploy artifacts') {\n             steps {\n-                mavenDeploy('optaplanner', '-Dfull')\n-                mavenDeploy('optaweb-vehicle-routing', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n-                mavenDeploy('optaweb-employee-rostering', \"-s ${env.GLOBAL_MAVEN_SETTINGS}\")\n+                script {\n+                    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA5MDI2Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534090266", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd){\n          \n          \n            \n            void runMavenDeploy(MavenCommand mvnCmd) {", "author": "rsynek", "createdAt": "2020-12-02T11:19:45Z", "path": "Jenkinsfile.promote", "diffHunk": "@@ -478,50 +443,32 @@ void installGithubCLI() {\n     \"\"\"\n }\n \n-void updateKogitoVersion(String newVersion) {\n-    maven.mvnSetVersionProperty('version.org.kie.kogito', newVersion)\n-}\n-\n-boolean isSpecificMavenConfig() {\n-    return params.MAVEN_DEPENDENCIES_REPOSITORY != ''\n-}\n-\n-void deployArtifacts() {\n-    def mvnCmd = 'clean deploy'\n-    if (params.MAVEN_DEPLOY_REPOSITORY) {\n-        mvnCmd += \" -DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n-    }\n-\n-    if (isSpecificMavenConfig()) {\n-        runMaven(mvnCmd, true)\n-    } else {\n-        maven.runMavenWithSubmarineSettings(mvnCmd, true)\n+void uploadDistribution(String directory) {\n+    dir(directory) {\n+        echo \"uploadDistribution for ${directory}\"\n+        // TODO set back after testing\n+        // withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n+        //         keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n+        //     // For testing, simulate connection via SSH:\n+        //     // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n+        //     sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+        // }\n     }\n }\n \n-void mavenCleanInstall(boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    runMaven('clean install', skipTests, profiles, extraArgs)\n-}\n-\n-void runMaven(String goals, boolean skipTests = false, List profiles = [], String extraArgs = '') {\n-    mvnCmd = goals\n-    if(!profiles.isEmpty()){\n-        mvnCmd += \" -P${profiles.join(',')}\"\n-    }\n-    if (env.GLOBAL_MAVEN_ARGS != '') {\n-        mvnCmd += \" ${env.GLOBAL_MAVEN_ARGS}\"\n-    }\n-    if(extraArgs != ''){\n-        mvnCmd += \" ${extraArgs}\"\n+MavenCommand getMavenConfig() {\n+    mvnCmd = new MavenCommand(this, ['-fae'])\n+                    .withSettingsXmlId(params.MAVEN_SETTINGS_CONFIG_FILE_ID)\n+    if (params.MAVEN_DEPENDENCIES_REPOSITORY) {\n+        mvnCmd.withDependencyRepositoryInSettings('deps-repo', params.MAVEN_DEPENDENCIES_REPOSITORY)\n     }\n-    maven.runMaven(mvnCmd, skipTests, ['-fae'])\n+    return mvnCmd\n }\n \n-void uploadDistribution() {\n-    withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'optaplanner-filemgmt',\n-            keyFileVariable: 'SSH_KEY_JBOSS_FILEMGMT')]) {\n-        // For testing, simulate connection via SSH:\n-        // sh \"ssh -i $SSH_KEY_JBOSS_FILEMGMT -oKexAlgorithms=+diffie-hellman-group1-sha1 optaplanner@filemgmt.jboss.org\"\n-        sh \"./build/release/upload_distribution.sh ${getProjectVersion()} $SSH_KEY_JBOSS_FILEMGMT\"\n+void runMavenDeploy(MavenCommand mvnCmd){", "originalCommit": "8c35b9d4e6f3db98ca32ada82f12764d4b6c6765", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4215b1951fdb8a15177cdff46e32624c84b01312", "url": "https://github.com/kiegroup/optaplanner/commit/4215b1951fdb8a15177cdff46e32624c84b01312", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-12-02T16:02:05Z", "type": "commit"}, {"oid": "4215b1951fdb8a15177cdff46e32624c84b01312", "url": "https://github.com/kiegroup/optaplanner/commit/4215b1951fdb8a15177cdff46e32624c84b01312", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-12-02T16:02:05Z", "type": "forcePushed"}, {"oid": "d08e2a524e906a123adce866e247ea168cf64a0d", "url": "https://github.com/kiegroup/optaplanner/commit/d08e2a524e906a123adce866e247ea168cf64a0d", "message": "small correction", "committedDate": "2020-12-03T07:21:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4NzY2Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r534987666", "bodyText": "These are eclipse files? They should be already covered by /.* on the line 5.", "author": "rsynek", "createdAt": "2020-12-03T09:18:12Z", "path": ".gitignore", "diffHunk": "@@ -11,6 +11,14 @@\n /*.ipr\n /*.iws\n /*.iml\n+.classpath\n+.project\n+.settings\n+.factorypath", "originalCommit": "d08e2a524e906a123adce866e247ea168cf64a0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA2NTc3Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535065776", "bodyText": "/.* is only matching at the root path", "author": "radtriste", "createdAt": "2020-12-03T10:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4NzY2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNTAxNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535015015", "bodyText": "While I like the idea of having a PR check for jenkinsfiles, I have concerns about maintainability of this solution:\n1/ it brings a lot of dependencies to the project (although it's a separate maven build)\n2/ it duplicates the same (or very similar) setup in kogito-runtimes, kogito-examples and kogito-pipeline (in form of build.gradle) and maybe other repositories.\nWe should think about reducing the maintainability cost before merging the PRs.\nFirst proposal: creating a parent pom.xml (in kogito-pipelines or jenkins-pipeline-shared-libraries ?) the other repositories would inherit from.", "author": "rsynek", "createdAt": "2020-12-03T09:40:21Z", "path": ".jenkins/tests/pom.xml", "diffHunk": "@@ -0,0 +1,287 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "originalCommit": "d08e2a524e906a123adce866e247ea168cf64a0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA2ODA0NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535068045", "bodyText": "I see your concerns. I will remove the tests and gonna implement it as part of another issue (I need those PRs to be merged asap)\nand I note your proposal for later implementation :)", "author": "radtriste", "createdAt": "2020-12-03T10:27:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNTAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA5MDg4OQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535090889", "bodyText": "https://issues.redhat.com/browse/BXMSPROD-1125", "author": "radtriste", "createdAt": "2020-12-03T10:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNTAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEwMjcyNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1010#discussion_r535102725", "bodyText": "Perfect, thank you!", "author": "rsynek", "createdAt": "2020-12-03T11:00:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNTAxNQ=="}], "type": "inlineReview"}, {"oid": "a56803128bc325c1499b1ffbc8a8019da2f816da", "url": "https://github.com/kiegroup/optaplanner/commit/a56803128bc325c1499b1ffbc8a8019da2f816da", "message": "removed jenkins tests", "committedDate": "2020-12-03T10:48:11Z", "type": "commit"}, {"oid": "16e32e429a674e93dce228c0f799e9839f3a9136", "url": "https://github.com/kiegroup/optaplanner/commit/16e32e429a674e93dce228c0f799e9839f3a9136", "message": "correction", "committedDate": "2020-12-03T10:49:04Z", "type": "commit"}, {"oid": "12dc95fa3ce98a56fb04fc5043c230fe6a1a69be", "url": "https://github.com/kiegroup/optaplanner/commit/12dc95fa3ce98a56fb04fc5043c230fe6a1a69be", "message": "set back after testing", "committedDate": "2020-12-03T17:44:15Z", "type": "commit"}]}