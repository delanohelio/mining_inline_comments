{"pr_number": 869, "pr_title": "BXMSPROD-912 openjdk11 build execution added to pull_request.yml", "pr_createdAt": "2020-08-05T10:21:14Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/869", "timeline": [{"oid": "89e4417d39db1ebd5caf3243d569b8620aec1a45", "url": "https://github.com/kiegroup/optaplanner/commit/89e4417d39db1ebd5caf3243d569b8620aec1a45", "message": "BXMSPROD-912 openjdk11 build execution added to pull_request.yml\n\nhttps://issues.redhat.com/browse/BXMSPROD-912", "committedDate": "2020-08-05T10:14:15Z", "type": "commit"}, {"oid": "ef5589c45c97d90fe42e790df7ef11e78bcb6afd", "url": "https://github.com/kiegroup/optaplanner/commit/ef5589c45c97d90fe42e790df7ef11e78bcb6afd", "message": "BXMSPROD-912 workflow-file-name input added to pull_request.yml", "committedDate": "2020-08-05T12:58:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3NzgzMg==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466177832", "bodyText": "It is unfortunate that you need to specify JDK like this. If you could use the standard way (see https://github.com/kiegroup/optaplanner/blob/master/.github/workflows/os_java_ci.yml#L29), you'd be able to use a standard matrix build, avoiding this large config duplication.", "author": "triceo", "createdAt": "2020-08-06T06:39:46Z", "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -1,18 +1,39 @@\n+name: Build Chain\n+\n on: [ workflow_dispatch ]\n \n jobs:\n-  build-chain:\n+  build-chain-openjdk8:\n+    runs-on: ubuntu-latest\n+    name: Pull Request openjdk8\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Build Chain\n+      id: build-chain\n+      uses: kiegroup/github-action-build-chain@openjdk8\n+      with:\n+        parent-dependencies: 'drools@7.x:master'\n+        child-dependencies: 'jbpm@7.x:master'\n+        build-command: 'mvn -e clean install -nsu -Prun-code-coverage,wildfly -Dfull  -Dintegration-tests=true -Dmaven.test.failure.ignore=true -DjvmArgs=\"-Xms1g -Xmx4g\" | mvn -nsu generate-resources -Psonarcloud-analysis -DjvmArgs=\"-Xms1g -Xmx4g\"'\n+        build-command-upstream: \"mvn -e clean install -DskipTests -Dgwt.compiler.skip=true -Dgwt.skipCompilation=true -Denforcer.skip=true -Dcheckstyle.skip=true -Dspotbugs.skip=true -Drevapi.skip=true\"\n+        workflow-file-name: \"pull_request.yml\"\n+      env:\n+          GITHUB_TOKEN: \"${{ secrets.GITHUB_TOKEN }}\"\n+  build-chain-openjdk11:\n     runs-on: ubuntu-latest\n-    name: Build Pull Request\n+    name: Pull Request openjdk11\n     steps:\n     - uses: actions/checkout@v2\n     - name: Build Chain\n       id: build-chain\n-      uses: kiegroup/github-action-build-chain@master\n+      uses: kiegroup/github-action-build-chain@openjdk11", "originalCommit": "ef5589c45c97d90fe42e790df7ef11e78bcb6afd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4MTc4MQ==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466181781", "bodyText": "I think @Ginxo wrote about some limitation on GA side there is some bug which blocks this easier way of config\nfrom @Ginxo`s msg:\n\njust to let you know I tried to use matrix in order not to duplicate commands for openjdk8 and 11, but it's not possible to use it in usues like uses: kiegroup/github-action-build-chain@{{ matrix.build-chain-version}}\nthe limitation is already reported and there's no way of work around it (apart from duplicate it again)\nThe other thing you should pay attention to is workflow-file-name since the name of the flow is defined there's no way about how to get file-name information (I already reported it to github) (edited)", "author": "mareknovotny", "createdAt": "2020-08-06T06:49:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3NzgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4ODU5MA==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466188590", "bodyText": "@triceo that's it, the thing is build-chain tool runs over a docker image (java8+maven3.6.6, java11+maven3.6.3, gradle, whatever) but there's not way to dynamically select the build-chain version you want to use. So for now the only way is to duplicate it.", "author": "Ginxo", "createdAt": "2020-08-06T07:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3NzgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE5MTM4MQ==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466191381", "bodyText": "there's a proposal with if condition\nhttps://github.community/t/using-strategy-matrix-values-in-the-specification-of-actions-to-be-used-in-a-workflow/16706", "author": "Ginxo", "createdAt": "2020-08-06T07:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3NzgzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3ODE5NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466178195", "bodyText": "Is there any doc I could read on how this particular config works? I'm confused by both \"7.x\" and \"master\" being there.", "author": "triceo", "createdAt": "2020-08-06T06:40:35Z", "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -1,18 +1,39 @@\n+name: Build Chain\n+\n on: [ workflow_dispatch ]\n \n jobs:\n-  build-chain:\n+  build-chain-openjdk8:\n+    runs-on: ubuntu-latest\n+    name: Pull Request openjdk8\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Build Chain\n+      id: build-chain\n+      uses: kiegroup/github-action-build-chain@openjdk8\n+      with:\n+        parent-dependencies: 'drools@7.x:master'\n+        child-dependencies: 'jbpm@7.x:master'", "originalCommit": "ef5589c45c97d90fe42e790df7ef11e78bcb6afd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4MTA2NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466181065", "bodyText": "look into the GA extension https://github.com/kiegroup/github-action-build-chain I think @Ginxo will add documentation as it goes. Right now fast speed implementation :)", "author": "mareknovotny", "createdAt": "2020-08-06T06:47:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3ODE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4NDI0NA==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466184244", "bodyText": "If I understand it correctly, according to [1], it says our 7.x depends on the other repo's master branch.\n[1] https://github.com/kiegroup/github-action-build-chain/blob/master/src/lib/common.js#L65", "author": "rsynek", "createdAt": "2020-08-06T06:54:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3ODE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE5MDA4MA==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466190080", "bodyText": "yes, the documentation still missing https://issues.redhat.com/browse/BXMSPROD-913 sorry for that\nbut basically whatever comes after @ means branch mapping, so it will map the current 7.x branch to jbpm/drools master\nThe same here but opposite way https://github.com/kiegroup/jbpm/blob/5e3cb75e2111668d4e093605f5c82df2b9c53183/.github/workflows/pull_request.yml#L15", "author": "Ginxo", "createdAt": "2020-08-06T07:07:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3ODE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwMDU5MQ==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466200591", "bodyText": "If I understand it correctly, according to [1], it says our 7.x depends on the other repo's master branch.\n[1] https://github.com/kiegroup/github-action-build-chain/blob/master/src/lib/common.js#L65\n\nthis is what Optaplanner team with having 8.x version on its master made up ;) @rsynek", "author": "mareknovotny", "createdAt": "2020-08-06T07:28:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3ODE5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4Njg5OA==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466186898", "bodyText": "The profiles run-code-coverage and sonarcloud-analysis should be never in the same maven execution:\nmvn -e clean install -nsu -Prun-code-coverage runs tests with measuring the coverage\nmvn validate -Psonarcloud-analysis merges the coverage information into a single XML coverage file and triggers the sonarcloud", "author": "rsynek", "createdAt": "2020-08-06T07:00:27Z", "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -1,18 +1,39 @@\n+name: Build Chain\n+\n on: [ workflow_dispatch ]\n \n jobs:\n-  build-chain:\n+  build-chain-openjdk8:\n+    runs-on: ubuntu-latest\n+    name: Pull Request openjdk8\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Build Chain\n+      id: build-chain\n+      uses: kiegroup/github-action-build-chain@openjdk8\n+      with:\n+        parent-dependencies: 'drools@7.x:master'\n+        child-dependencies: 'jbpm@7.x:master'\n+        build-command: 'mvn -e clean install -nsu -Prun-code-coverage,wildfly -Dfull  -Dintegration-tests=true -Dmaven.test.failure.ignore=true -DjvmArgs=\"-Xms1g -Xmx4g\" | mvn -nsu generate-resources -Psonarcloud-analysis -DjvmArgs=\"-Xms1g -Xmx4g\"'", "originalCommit": "ef5589c45c97d90fe42e790df7ef11e78bcb6afd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4ODI3Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466188276", "bodyText": "Also, as I see the same command in the build-chain-openjdk11, SonarCloud should be triggered only once per any change on the PR. There is no point in running it inside multiple checks.", "author": "rsynek", "createdAt": "2020-08-06T07:03:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4Njg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE5MTA4Mw==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466191083", "bodyText": "Question: do the GitHub Actions inject SonarCloud auth token into the build? Last time I experimented with GA and SonarCloud, it didn't work because GA deliberately avoid injecting secrets into builds of PRs opened from a forked repo. The motivation was to protect the secret from being read by a malicious PR.", "author": "rsynek", "createdAt": "2020-08-06T07:09:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4Njg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE5NjUxOA==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466196518", "bodyText": "thanks @rsynek build-command specifies multiple commands (maybe build-commands is a better name \ud83e\udd14 ) in this case there are two commands split by | so two different maven executions. I already removed sonar execution from the rest of the projects but due to sonar execution is in build-command (only executed when the PR is for the current project) and the optaplanner event is workflow_dispatch this will never be triggered by a PR.\nAbout sonarcloud credentials I already open a JIRA for it https://issues.redhat.com/browse/BXMSPROD-895\nI'm going to remove sonarcloud execution anyway until BXMSPROD-895 is fixed.", "author": "Ginxo", "createdAt": "2020-08-06T07:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4Njg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE5NzY2OQ==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466197669", "bodyText": "just one thing with variables don't allow arrays, that's why it's defined as a string split by |", "author": "Ginxo", "createdAt": "2020-08-06T07:22:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4Njg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwOTkxMQ==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466209911", "bodyText": "Thanks, I missed the | in the command string.", "author": "rsynek", "createdAt": "2020-08-06T07:46:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4Njg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMTA1MQ==", "url": "https://github.com/kiegroup/optaplanner/pull/869#discussion_r466221051", "bodyText": "sonar analysis command removed", "author": "Ginxo", "createdAt": "2020-08-06T08:04:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4Njg5OA=="}], "type": "inlineReview"}, {"oid": "88787dbd8d95c8dc3e0fee8e557eb6a60678c568", "url": "https://github.com/kiegroup/optaplanner/commit/88787dbd8d95c8dc3e0fee8e557eb6a60678c568", "message": "BXMSPROD-912 sonar execution removed from pull_request.yml", "committedDate": "2020-08-06T08:03:56Z", "type": "commit"}]}