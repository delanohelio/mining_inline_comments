{"pr_number": 709, "pr_title": "PLANNER-1875 Adjust docs and Javadocs following feedback", "pr_createdAt": "2020-02-26T15:17:09Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/709", "timeline": [{"oid": "ed6849e3ddd13248a9df57bddb897a1adb6ea5b1", "url": "https://github.com/kiegroup/optaplanner/commit/ed6849e3ddd13248a9df57bddb897a1adb6ea5b1", "message": "PLANNER-1875 Adjustment docs and Javadocs following feedback", "committedDate": "2020-02-26T15:15:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4NDEzNg==", "url": "https://github.com/kiegroup/optaplanner/pull/709#discussion_r384584136", "bodyText": "soft suggestions:\n\nI'd remove the braces: \"(See\" -> \"See\"\n\"for a selection of ready-made collectors.\": I'd avoid the use of the word \"selection\" when it's not \"move selection\" or \"entity selection\" or something like that. \"ready-made\" is a tautology. Also, I 'd mention \"count()\" and \"sum()\" as that's much more tangible as to what I can find there (and what a collector actually is).\nSo suggestion => \"See ConstraintCollectors for common operations, such as count(), sum() and others\".", "author": "ge0ffrey", "createdAt": "2020-02-26T15:52:05Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/bi/BiConstraintStream.java", "diffHunk": "@@ -368,6 +369,7 @@\n      * Runs all tuples of the stream through a given @{@link BiConstraintCollector} and converts them into a new\n      * {@link UniConstraintStream} which only has a single tuple, the result of applying {@link BiConstraintCollector}.\n      * @param collector never null, the collector to perform the grouping operation with\n+     * (See {@link ConstraintCollectors} for a selection of ready-made collectors.)", "originalCommit": "ed6849e3ddd13248a9df57bddb897a1adb6ea5b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4OTg2NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/709#discussion_r384589865", "bodyText": "\"a particlar fact\": is that the first or the second fact?\n\"you don't need to\" etc can be more concise I think.\nAlso we need to mention the \"one or more\" difference. For me, that is the key, defining difference.\nHow about something like:\n\"If the other stream might match multiple times, but it must only impact the score once (for each element of the original stream), use <<constraintStreamsConditionalPropagation,ifExists>> instead. \"", "author": "ge0ffrey", "createdAt": "2020-02-26T15:59:47Z", "path": "optaplanner-docs/src/main/asciidoc/ConstraintStreams/ConstraintStreams-chapter.adoc", "diffHunk": "@@ -338,6 +338,13 @@ the prescribed ordering.\n For a full list of all supported `Joiner` implementations and their various overloads, refer to the\n `org.optaplanner.core.api.score.stream.Joiners` class.\n \n+[NOTE]\n+====\n+In case you only need to act when a particular fact exists, and you don't need to access the fact itself, use", "originalCommit": "ed6849e3ddd13248a9df57bddb897a1adb6ea5b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae56d39bf6743d0bfc812e1372ac1095fb3c64e5", "url": "https://github.com/kiegroup/optaplanner/commit/ae56d39bf6743d0bfc812e1372ac1095fb3c64e5", "message": "Address code review comments", "committedDate": "2020-02-26T16:05:56Z", "type": "commit"}]}