{"pr_number": 681, "pr_title": "[PLANNER-1851] Add MOXy for JAXB JSON binding in optaplanner-persistence-jaxb", "pr_createdAt": "2020-02-11T18:09:32Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/681", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxMjkzOQ==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r377812939", "bodyText": "I do not understand the need for this. We're a JEE company, we have our own JSON/JAXB stuff. :-)\nSee RESTEasy Jackson 2 Provider, which should also come with Quarkus by default.", "author": "triceo", "createdAt": "2020-02-11T18:20:37Z", "path": "optaplanner-persistence/optaplanner-persistence-jaxb/pom.xml", "diffHunk": "@@ -63,8 +63,21 @@\n       <artifactId>jaxb-impl</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>javax.activation</groupId>\n-      <artifactId>activation</artifactId>\n+      <groupId>jakarta.activation</groupId>\n+      <artifactId>jakarta.activation-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>jakarta.json</groupId>\n+      <artifactId>jakarta.json-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.glassfish</groupId>\n+      <artifactId>jakarta.json</artifactId>\n+    </dependency>\n+    <!-- MOXy needed for JSON -->\n+    <dependency>\n+      <groupId>org.eclipse.persistence</groupId>\n+      <artifactId>org.eclipse.persistence.moxy</artifactId>", "originalCommit": "8fd328372ef0b798919c41877546a4548e3fd20b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0Nzc5Mw==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r377847793", "bodyText": "The purpose of this PR is to add JSON marshalling support for JAXB. Jackson already gives us XML and JSON support, but we're trying to give users the choice of using JAXB as well.", "author": "cuijulian", "createdAt": "2020-02-11T19:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxMjkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1MTEwNg==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r377851106", "bodyText": "RESTEasy can be used for that as well, see the docs. I know, because I use it for the exact same purpose in my own projects.\nEither that, or I don't understand how your use case differs. I've been wrong before.", "author": "triceo", "createdAt": "2020-02-11T19:30:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxMjkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MTYyNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r377861625", "bodyText": "From my understanding, this optaplanner-persistence-jaxb module is responsible for implementing JSON marshalling using the JAXB standard, so I'm looking for a JAXB provider (not Jackson, a module for that already exists in optaplanner-persistence-jackson) that supports JSON marshalling (MOXy is the provider used in this PR).\nRESTEasy is a JAX-RS implementation. It does support JSON marshalling, but it does so by using its own JAXB provider. Since this module is for JAXB only, I don't think we should introduce RESTEasy dependencies into it. We just need a JAXB provider.\nAfter some thought, I think I approached this the wrong way. @triceo I see what you're saying now, I could just use Quarkus' RESTEasy module to do this in the OptaPlanner extension, rather than adding MOXy to handle JAXB JSON.", "author": "cuijulian", "createdAt": "2020-02-11T19:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxMjkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2Nzc0NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r377867745", "bodyText": "Yes, for the extension, I definitely think that reusing what is already there in Quarkus is the way to go.\nFYI, plain Jackson can be used with JAXB as well, without the use of RESTEasy:\nhttps://github.com/FasterXML/jackson-modules-base/tree/master/jaxb", "author": "triceo", "createdAt": "2020-02-11T20:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxMjkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5NzQyNA==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r377897424", "bodyText": "Yup, that does it for Quarkus.\nHmm, this JAXB Jackson dependency looks interesting, it seems like an alternative to adding JAXB annotated JSON support in optaplanner-spring-boot-autoconfigure. Not sure if it belongs in optaplanner-persistence-jaxb, since we already have a module for Jackson. @ge0ffrey thoughts on these alternatives?", "author": "cuijulian", "createdAt": "2020-02-11T21:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxMjkzOQ=="}], "type": "inlineReview"}, {"oid": "d2db6930d778a336dce0931fab3f6ae9db21ce30", "url": "https://github.com/kiegroup/optaplanner/commit/d2db6930d778a336dce0931fab3f6ae9db21ce30", "message": "Add JAXB JSON marshalling tests", "committedDate": "2020-02-11T19:36:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2Mzk0OA==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r378963948", "bodyText": "Can we make these new dependencies test dependencies?\nIn fact, some of the old dependencies should probably be test dependencies.\nWe want to provide XmlAdaptors for score, implemented against the JAXB API.\nWe don't want to choose a JAXB implementation for the users, only for our testing.", "author": "ge0ffrey", "createdAt": "2020-02-13T16:15:06Z", "path": "optaplanner-persistence/optaplanner-persistence-jaxb/pom.xml", "diffHunk": "@@ -63,8 +63,17 @@\n       <artifactId>jaxb-impl</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>javax.activation</groupId>\n-      <artifactId>activation</artifactId>\n+      <groupId>jakarta.activation</groupId>\n+      <artifactId>jakarta.activation-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.glassfish</groupId>\n+      <artifactId>jakarta.json</artifactId>", "originalCommit": "d2db6930d778a336dce0931fab3f6ae9db21ce30", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2NTIxNA==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r378965214", "bodyText": "And we certainly don't want to bloat the classpath.\nHaving both com.sun.xml.bind and org.glassfish and org.eclipse.persistence dependencies, is suspicious.\nA lot of com.sun things became org.glassfish things at some point. Nowadays everything should be in jakarta.\nTo settle these questions, look at the master of the resteasy project. Or the quarkus-resteasy-jaxb project. What is in their classpath?", "author": "ge0ffrey", "createdAt": "2020-02-13T16:17:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2Mzk0OA=="}], "type": "inlineReview"}, {"oid": "3342458f435b17df1596a5598865a7d3c4e3e236", "url": "https://github.com/kiegroup/optaplanner/commit/3342458f435b17df1596a5598865a7d3c4e3e236", "message": "Add JAXB JSON marshalling tests", "committedDate": "2020-02-13T17:18:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NDg5MA==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r379394890", "bodyText": "This is dangerous, especially because it doesn't unset it.\nThe order in which the unit tests are run can break other unit tests that do XML checking.", "author": "ge0ffrey", "createdAt": "2020-02-14T12:00:23Z", "path": "optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/json/AbstractScoreJaxbJsonAdapterTest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jaxb.api.score.json;\n+\n+import java.io.Serializable;\n+import java.io.StringReader;\n+import java.io.StringWriter;\n+\n+import javax.xml.bind.JAXBContext;\n+import javax.xml.bind.JAXBException;\n+import javax.xml.bind.Marshaller;\n+import javax.xml.bind.Unmarshaller;\n+\n+import org.eclipse.persistence.jaxb.MarshallerProperties;\n+import org.eclipse.persistence.jaxb.UnmarshallerProperties;\n+import org.optaplanner.core.api.score.Score;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+public abstract class AbstractScoreJaxbJsonAdapterTest {\n+\n+    // ************************************************************************\n+    // Helper methods\n+    // ************************************************************************\n+\n+    protected <S extends Score, W extends TestScoreWrapper<S>> void assertSerializeAndDeserialize(S expectedScore, W input) {\n+        System.setProperty(\"javax.xml.bind.context.factory\", \"org.eclipse.persistence.jaxb.JAXBContextFactory\");", "originalCommit": "3342458f435b17df1596a5598865a7d3c4e3e236", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTA4NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r379395085", "bodyText": "Later it sets\njaxbMarshaller.setProperty(MarshallerProperties.MEDIA_TYPE, \"application/json\");\nSo is that system property still needed?", "author": "ge0ffrey", "createdAt": "2020-02-14T12:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NDg5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1MDAzNw==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r379450037", "bodyText": "Yes, unfortunately the system property is still needed to use MOXy as the JAXB provider according to the MOXy docs. The second line is to specify the Marshaller mediatype to JSON, which is also required for JSON marshalling. But I see what you're saying about affecting other unit tests when a specific order is chosen.\nA quick fix would be to set the system property in the @Before method of the MOXy test classes. Maybe there's a better alternative.", "author": "cuijulian", "createdAt": "2020-02-14T14:12:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NDg5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTk4MQ==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r379395981", "bodyText": "The other test, SimpleScoreXMLJsonAdapterTest is called like that because it is SimpleScoreXMLJsonAdapter + Test.\nThis json stuff, is also a test for the SimpleScoreXMLJsonAdapter, so it too, can go into the SimpleScoreXMLJsonAdapterTest... (yes, sounds weird). And it can reuse the wrapper.", "author": "ge0ffrey", "createdAt": "2020-02-14T12:03:27Z", "path": "optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/json/buildin/bendablebigdecimal/BendableBigDecimalScoreJaxbJsonAdapterTest.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.persistence.jaxb.api.score.json.buildin.bendablebigdecimal;\n+\n+import java.math.BigDecimal;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+\n+import org.junit.Test;\n+import org.optaplanner.core.api.score.buildin.bendablebigdecimal.BendableBigDecimalScore;\n+import org.optaplanner.persistence.jaxb.api.score.buildin.bendablebigdecimal.BendableBigDecimalScoreJaxbXmlAdapter;\n+import org.optaplanner.persistence.jaxb.api.score.json.AbstractScoreJaxbJsonAdapterTest;\n+\n+public class BendableBigDecimalScoreJaxbJsonAdapterTest extends AbstractScoreJaxbJsonAdapterTest {", "originalCommit": "3342458f435b17df1596a5598865a7d3c4e3e236", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5Nzc1Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r379397756", "bodyText": "Doing that, will heavily reduce the number of code lines, making the code easier to maintain.\n\"Good programmers add code to add features. Great programmers remove code (without removing features).\" (there's a better version of this quoth somewhere).\nI wouldn't even mind that the we just adjust the superclass's serializeAndDeserialize() to call serializeAndDeserializeXML() and serializeAndDeserializeJson(), avoiding any changes to specific score tests", "author": "ge0ffrey", "createdAt": "2020-02-14T12:07:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ2MjA0NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r379462045", "bodyText": "Point noted; good quote! My thought process about the SimpleScoreJaxbXMLAdapterTest was that it tests the SimpleScoreJaxbXMLAdapter, so the test is specific to JAXB standard XML. I would argue that the JSON tests I added is a test for the SimpleScoreJaxbJsonAdapter, so the SimpleScoreJaxbJsonAdapterTest is responsible for JAXB standard JSON (not XML). That's why I put them in separate classes.\nBut I absolutely agree with you that there's a lot of code duplication here. The problem is that the Marshaller created for XML serialization is different from the Marshaller created for JSON serialization (because of the MEDIATYPE property that JSON needs). I like your serializeAndDeserializeXML() and serializeAndDeserializeJson() separation idea, I should be able to use this to avoid duplicating all the test classes.", "author": "cuijulian", "createdAt": "2020-02-14T14:35:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTk4MQ=="}], "type": "inlineReview"}, {"oid": "7f374bccae63233247c3ff81853b007be03df11f", "url": "https://github.com/kiegroup/optaplanner/commit/7f374bccae63233247c3ff81853b007be03df11f", "message": "Add JAXB JSON marshalling tests", "committedDate": "2020-02-14T16:39:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEyMjMzNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r381122335", "bodyText": "By default, a test's name should be  + \"Test\". By keeping this predictable it's easier to:\n\nFind the test for FooBar (it will be called FooBarTest)\nAvoid that there are 2 test classes for FooBar, which helps to avoid that there are duplicate tests (maintenance issues, less is more, if the coverage is the same)\nThis test tests BendableScoreJaxbXmlAdapter, so it's name must remain BendableScoreJaxbXmlAdapterTest", "author": "ge0ffrey", "createdAt": "2020-02-19T07:46:26Z", "path": "optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/buildin/bendable/BendableScoreJaxbXmlJsonAdapterTest.java", "diffHunk": "@@ -21,17 +21,30 @@\n \n import org.junit.Test;\n import org.optaplanner.core.api.score.buildin.bendable.BendableScore;\n-import org.optaplanner.persistence.jaxb.api.score.AbstractScoreJaxbXmlAdapterTest;\n+import org.optaplanner.persistence.jaxb.api.score.AbstractScoreJaxbXmlJsonAdapterTest;\n \n-public class BendableScoreJaxbXmlAdapterTest extends AbstractScoreJaxbXmlAdapterTest {\n+public class BendableScoreJaxbXmlJsonAdapterTest extends AbstractScoreJaxbXmlJsonAdapterTest {", "originalCommit": "7f374bccae63233247c3ff81853b007be03df11f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM1MzQxOQ==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r381353419", "bodyText": "With the addition of assertSerializeAndDeserializeJson() in AbstractScoreJaxbXmlJsonAdapterTest the test subclasses now include JSON coverage.", "author": "cuijulian", "createdAt": "2020-02-19T15:08:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEyMjMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI2NzcxMA==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r386267710", "bodyText": "I still think the class name shouldn't change because it's a unit test and the unit test class hasn't changed. Let's discuss, I 'll send an invite.", "author": "ge0ffrey", "createdAt": "2020-03-02T09:06:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEyMjMzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEyMzY0NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/681#discussion_r381123645", "bodyText": "By splitting up serializeAndDeserialize() into serializeAndDeserializeXML() and serializeAndDeserializeJson() for every Test class, we're create a lot of duplication, for all of the 10+ score classes. Note how both methods are indentical except for the assertSerializeAndDeserialize*() call.\nLet's be practical. Let's keep it as 1 method and keep using only assertSerializeAndDeserialize(), but let's have that - in the superclass - call assertSerializeAndDeserializeXML() and assertSerializeAndDeserializeJson().\nThat will heavily reduce maintenance once we mess with scores again (like the time I added initScore, all these tests had to be refactored).", "author": "ge0ffrey", "createdAt": "2020-02-19T07:50:07Z", "path": "optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/buildin/bendable/BendableScoreJaxbXmlJsonAdapterTest.java", "diffHunk": "@@ -21,17 +21,30 @@\n \n import org.junit.Test;\n import org.optaplanner.core.api.score.buildin.bendable.BendableScore;\n-import org.optaplanner.persistence.jaxb.api.score.AbstractScoreJaxbXmlAdapterTest;\n+import org.optaplanner.persistence.jaxb.api.score.AbstractScoreJaxbXmlJsonAdapterTest;\n \n-public class BendableScoreJaxbXmlAdapterTest extends AbstractScoreJaxbXmlAdapterTest {\n+public class BendableScoreJaxbXmlJsonAdapterTest extends AbstractScoreJaxbXmlJsonAdapterTest {\n \n     @Test\n-    public void serializeAndDeserialize() {\n-        assertSerializeAndDeserialize(null, new TestBendableScoreWrapper(null));\n+    public void serializeAndDeserializeXML() {\n+        assertSerializeAndDeserializeXML(null, new TestBendableScoreWrapper(null));\n+\n         BendableScore score = BendableScore.of(new int[]{1000, 200}, new int[]{34});\n-        assertSerializeAndDeserialize(score, new TestBendableScoreWrapper(score));\n+        assertSerializeAndDeserializeXML(score, new TestBendableScoreWrapper(score));\n+\n+        score = BendableScore.ofUninitialized(-7, new int[]{1000, 200}, new int[]{34});\n+        assertSerializeAndDeserializeXML(score, new TestBendableScoreWrapper(score));\n+    }\n+\n+    @Test\n+    public void serializeAndDeserializeJson() {\n+        assertSerializeAndDeserializeJson(null, new TestBendableScoreWrapper(null));\n+\n+        BendableScore score = BendableScore.of(new int[]{1000, 200}, new int[]{34});\n+        assertSerializeAndDeserializeJson(score, new TestBendableScoreWrapper(score));\n+\n         score = BendableScore.ofUninitialized(-7, new int[]{1000, 200}, new int[]{34});\n-        assertSerializeAndDeserialize(score, new TestBendableScoreWrapper(score));\n+        assertSerializeAndDeserializeJson(score, new TestBendableScoreWrapper(score));\n     }", "originalCommit": "7f374bccae63233247c3ff81853b007be03df11f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e9c505e5fa3f99a21435e3fe8610b18e548f647c", "url": "https://github.com/kiegroup/optaplanner/commit/e9c505e5fa3f99a21435e3fe8610b18e548f647c", "message": "Add JAXB JSON marshalling tests", "committedDate": "2020-02-19T14:58:52Z", "type": "forcePushed"}, {"oid": "b1d2670df2c45b389387a98b35bf57344c3b92c0", "url": "https://github.com/kiegroup/optaplanner/commit/b1d2670df2c45b389387a98b35bf57344c3b92c0", "message": "Add MOXy dependency for JAXB JSON support", "committedDate": "2020-03-02T15:20:47Z", "type": "commit"}, {"oid": "303ec2ecfa1fd9b3d8f672e8a4676d1034c4e8b4", "url": "https://github.com/kiegroup/optaplanner/commit/303ec2ecfa1fd9b3d8f672e8a4676d1034c4e8b4", "message": "Add JAXB JSON marshalling tests", "committedDate": "2020-03-02T19:31:15Z", "type": "commit"}, {"oid": "303ec2ecfa1fd9b3d8f672e8a4676d1034c4e8b4", "url": "https://github.com/kiegroup/optaplanner/commit/303ec2ecfa1fd9b3d8f672e8a4676d1034c4e8b4", "message": "Add JAXB JSON marshalling tests", "committedDate": "2020-03-02T19:31:15Z", "type": "forcePushed"}]}