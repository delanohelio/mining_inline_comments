{"pr_number": 676, "pr_title": "PLANNER-1791 Add SolverManager tests", "pr_createdAt": "2020-02-07T15:59:55Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/676", "timeline": [{"oid": "81a0dd95e9b23cca1a8ad94fdbdb077b57d9e164", "url": "https://github.com/kiegroup/optaplanner/commit/81a0dd95e9b23cca1a8ad94fdbdb077b57d9e164", "message": "PLANNER-1791 Add SolverManager tests", "committedDate": "2020-02-07T15:54:58Z", "type": "commit"}, {"oid": "b3fdb1b210ad8bb1fb5118b7d2ecaed543cb5cf5", "url": "https://github.com/kiegroup/optaplanner/commit/b3fdb1b210ad8bb1fb5118b7d2ecaed543cb5cf5", "message": "PLANNER-1791 Add checks for consumers and multiple threaded moves", "committedDate": "2020-02-07T15:54:58Z", "type": "commit"}, {"oid": "cc29f27df29a8233edcda076b4b37bc6fe0ed991", "url": "https://github.com/kiegroup/optaplanner/commit/cc29f27df29a8233edcda076b4b37bc6fe0ed991", "message": "PLANNER-1791 Let the config deduce threadCount automatically", "committedDate": "2020-02-07T15:54:58Z", "type": "commit"}, {"oid": "6d16ffca5b9c88c54e827dea0b52dca4fd2b0d74", "url": "https://github.com/kiegroup/optaplanner/commit/6d16ffca5b9c88c54e827dea0b52dca4fd2b0d74", "message": "PLANNER-1791 Refactor methods and decrease timeout", "committedDate": "2020-02-07T15:54:58Z", "type": "commit"}, {"oid": "44b47afd60dff2d8de80fa0d2af8c21d01062a1b", "url": "https://github.com/kiegroup/optaplanner/commit/44b47afd60dff2d8de80fa0d2af8c21d01062a1b", "message": "PLANNER-1791 Increase timeout to a more reasonable amount", "committedDate": "2020-02-07T15:54:58Z", "type": "commit"}, {"oid": "2b98e04642265f3bea99898dce21e139593a9ccc", "url": "https://github.com/kiegroup/optaplanner/commit/2b98e04642265f3bea99898dce21e139593a9ccc", "message": "PLANNER-1791 Add Jira link to @Ignore text", "committedDate": "2020-02-07T15:54:58Z", "type": "commit"}, {"oid": "f4cb00b67bb8dbf5db1a9948a14d3fb54dceeae4", "url": "https://github.com/kiegroup/optaplanner/commit/f4cb00b67bb8dbf5db1a9948a14d3fb54dceeae4", "message": "Address review comments", "committedDate": "2020-02-07T15:54:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ3MTQ0Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/676#discussion_r376471446", "bodyText": "Are you sure you want to bring the timeouts down to 1 minute isntead of 10 minutes? I remember we set it to 10 minutes for good reasons, even though the slowest test only took 10 seconds on our machines back then.", "author": "ge0ffrey", "createdAt": "2020-02-07T16:04:06Z", "path": "optaplanner-core/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java", "diffHunk": "@@ -47,31 +57,35 @@\n \n public class SolverManagerTest {\n \n-    @Test(timeout = 600_000)\n+    @Test(timeout = 60_000)\n     public void solveBatch_2InParallel() throws ExecutionException, InterruptedException {\n-        CyclicBarrier barrier = new CyclicBarrier(2);\n         final SolverConfig solverConfig = PlannerTestUtils.buildSolverConfig(TestdataSolution.class, TestdataEntity.class)\n-                .withPhases(new CustomPhaseConfig().withCustomPhaseCommands(\n-                        scoreDirector -> {\n-                            try {\n-                                barrier.await();\n-                            } catch (InterruptedException | BrokenBarrierException e) {\n-                                fail(\"Cyclic barrier failed.\");\n-                            }\n-                        }), new ConstructionHeuristicPhaseConfig());\n+                .withPhases(createPhaseWithConcurrentSolvingStart(2), new ConstructionHeuristicPhaseConfig());\n         SolverManager<TestdataSolution, Long> solverManager = SolverManager.create(\n                 solverConfig, new SolverManagerConfig().withParallelSolverCount(\"2\"));\n \n         SolverJob<TestdataSolution, Long> solverJob1 = solverManager.solve(1L,\n-                PlannerTestUtils.generateTestdataSolution(\"s1\"));\n+                                                                           PlannerTestUtils.generateTestdataSolution(\"s1\"));\n         SolverJob<TestdataSolution, Long> solverJob2 = solverManager.solve(2L,\n-                PlannerTestUtils.generateTestdataSolution(\"s2\"));\n+                                                                           PlannerTestUtils.generateTestdataSolution(\"s2\"));\n \n         assertSolutionInitialized(solverJob1.getFinalBestSolution());\n         assertSolutionInitialized(solverJob2.getFinalBestSolution());\n     }\n \n-    @Test(timeout = 600_000)\n+    private CustomPhaseConfig createPhaseWithConcurrentSolvingStart(int barrierPartiesCount) {\n+        CyclicBarrier barrier = new CyclicBarrier(barrierPartiesCount);\n+        return new CustomPhaseConfig().withCustomPhaseCommands(\n+                scoreDirector -> {\n+                    try {\n+                        barrier.await();\n+                    } catch (InterruptedException | BrokenBarrierException e) {\n+                        fail(\"Cyclic barrier failed.\");\n+                    }\n+                });\n+    }\n+\n+    @Test(timeout = 60_000)", "originalCommit": "f4cb00b67bb8dbf5db1a9948a14d3fb54dceeae4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ3NzU0Nw==", "url": "https://github.com/kiegroup/optaplanner/pull/676#discussion_r376477547", "bodyText": "Each test runs below 1 sec, I don't believe the CI environment will be > 60 times slower. If some test runs longer than 1 minute, I prefer to know about it (by seeing it failing on timeout).", "author": "rsynek", "createdAt": "2020-02-07T16:15:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ3MTQ0Ng=="}], "type": "inlineReview"}]}