{"pr_number": 6698, "pr_title": "KEYCLOAK-10884: Need clock skew for SAML identity provider", "pr_createdAt": "2020-01-27T09:05:47Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6698", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3MjIxMQ==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r371772211", "bodyText": "We are not using static waits in testsuite, we have a possibility to \"move\" in time. You can just use this method: https://github.com/keycloak/keycloak/blob/master/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/AbstractKeycloakTest.java#L581 You can look for usages of the method to see how it works. It basically changes the time in Keycloak server, so you don't need to wait.", "author": "mhajas", "createdAt": "2020-01-28T12:27:31Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlBrokerTest.java", "diffHunk": "@@ -256,6 +262,75 @@ public void loginClientWithDotsInName() throws Exception {\n         Assert.assertThat(samlResponse.getSamlObject(), isSamlResponse(JBossSAMLURIConstants.STATUS_SUCCESS));\n     }\n \n+    @Test\n+    public void loginClientExpiredResponseFromIdP() throws Exception {\n+        // set the provider realm lifespans to 1 sec, this way the SAML response will be expired\n+        try (AutoCloseable c = new RealmAttributeUpdater(adminClient.realm(bc.providerRealmName()))\n+                .setAccessTokenLifespan(1)\n+                .setAccessCodeLifespan(1)\n+                .update()) {\n+\n+            AuthnRequestType loginRep = SamlClient.createLoginRequestDocument(AbstractSamlTest.SAML_CLIENT_ID_SALES_POST + \".dot/ted\", getAuthServerContextRoot() + \"/sales-post/saml\", null);\n+\n+            Document doc = SAML2Request.convert(loginRep);\n+\n+            new SamlClientBuilder()\n+              .authnRequest(getAuthServerSamlEndpoint(bc.consumerRealmName()), doc, Binding.POST).build()   // Request to consumer IdP\n+              .login().idp(bc.getIDPAlias()).build()\n+\n+              .processSamlResponse(Binding.POST)    // AuthnRequest to producer IdP\n+                .targetAttributeSamlRequest()\n+                .build()\n+\n+              .login().user(bc.getUserLogin(), bc.getUserPassword()).build()\n+\n+              .sleep(1500)    // sleep 1.5 seconds to expire the document", "originalCommit": "c3e61d8392c87df5f2751b602fe6925cbffa453a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQxMDUxNg==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r372410516", "bodyText": "Done!", "author": "rmartinc", "createdAt": "2020-01-29T14:23:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3MjIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3NzExMg==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r371777112", "bodyText": "I would prefer to create a new test class for these two tests and remove it from general KcSamlBrokerTest. You can have a look at https://github.com/keycloak/keycloak/blob/master/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlBrokerSessionNotOnOrAfterTest.java to see what is needed for a new class.", "author": "mhajas", "createdAt": "2020-01-28T12:38:57Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlBrokerTest.java", "diffHunk": "@@ -256,6 +262,75 @@ public void loginClientWithDotsInName() throws Exception {\n         Assert.assertThat(samlResponse.getSamlObject(), isSamlResponse(JBossSAMLURIConstants.STATUS_SUCCESS));\n     }\n \n+    @Test\n+    public void loginClientExpiredResponseFromIdP() throws Exception {", "originalCommit": "c3e61d8392c87df5f2751b602fe6925cbffa453a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQxMDY5Ng==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r372410696", "bodyText": "Done!", "author": "rmartinc", "createdAt": "2020-01-29T14:24:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3NzExMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3NzkxNA==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r371777914", "bodyText": "Not needed remove please. See comment in test.", "author": "mhajas", "createdAt": "2020-01-28T12:40:43Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/util/SamlClient.java", "diffHunk": "@@ -86,6 +86,23 @@ public HttpUriRequest perform(CloseableHttpClient client, URI uri, CloseableHttp\n         }\n     }\n \n+    public static final class Sleep implements Step {", "originalCommit": "c3e61d8392c87df5f2751b602fe6925cbffa453a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQxMDgxNw==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r372410817", "bodyText": "Removed!", "author": "rmartinc", "createdAt": "2020-01-29T14:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3NzkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MTg3OA==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r371791878", "bodyText": "If I understand it correctly, this is here so that identityProvider.config.allowedClockSkew is stored as a number not as a String. However, when I try to save a provider with clockskew it is a String in the request. Also in the database it is stored as a String, so we can't avoid parsing the value in Java code. I looked at other places we are having numbers in forms and it is not needed, for example see: https://github.com/keycloak/keycloak/blob/master/themes/src/main/resources/theme/base/admin/resources/partials/realm-tokens.html#L34 @rmartinc is there something I am missing?", "author": "mhajas", "createdAt": "2020-01-28T13:10:51Z", "path": "themes/src/main/resources/theme/base/admin/resources/js/app.js", "diffHunk": "@@ -3270,6 +3270,21 @@ module.directive('kcValidPage', function() {\n    }\n });\n \n+// Directive to parse/format strings into numbers\n+module.directive('stringToNumber', function() {", "originalCommit": "c3e61d8392c87df5f2751b602fe6925cbffa453a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI5Mjc0OA==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r372292748", "bodyText": "@mhajas If I remove the string-to-number from the input and set any valid number (30 for example). After saving, the field is empty and the JS console (in chrome) says:\nangular.js:14961 Error: [ngModel:numfmt] http://errors.angularjs.org/1.6.10/ngModel/numfmt?p0=13\n    at angular.js:88\n    at Array.<anonymous> (angular.js:25862)\n    at Object.$$format (angular.js:30061)\n    at Object.$processModelValue (angular.js:30041)\n    at Object.$$setModelValue (angular.js:30073)\n    at angular.js:30112\n    at m.$digest (angular.js:18535)\n    at m.$apply (angular.js:18903)\n    at k (angular.js:12775)\n    at s (angular.js:13032)\n\nCheck the issue I link before.", "author": "rmartinc", "createdAt": "2020-01-29T10:10:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MTg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM3NDQ2NA==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r372374464", "bodyText": "Ah I see it now. Sorry. So to fully understand it, when you not include the directive, it fails because angular is trying to store an integer into identityProvider.config.allowedClockSkew which is supposed to be a string?", "author": "mhajas", "createdAt": "2020-01-29T13:15:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MTg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM4NjM1NQ==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r372386355", "bodyText": "The problem is reading the value from the json. It fails because it expects an integer and it's a string (the value that comes from the endpoint is a string, \"60\" for example). So it complains with that error and sets nothing (the input is empty). The saving is OK, but the read fails.\nI think that the OIDC used a text input because of this.\nYes, I'm right. I have just tested with the $formaters function and it works:\nmodule.directive('stringToNumber', function() {\n    return {\n        require: 'ngModel',\n        link: function(scope, element, attrs, ngModel) {\n            //ngModel.$parsers.push(function(value) {\n            //    return (typeof value === 'undefined' || value === null)? '' : '' + value;\n            //});\n            ngModel.$formatters.push(function(value) {\n                return parseFloat(value);\n            });\n        }\n    };\n});\nSo, if you want I can remove the commented part.", "author": "rmartinc", "createdAt": "2020-01-29T13:39:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MTg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQwMTU2MA==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r372401560", "bodyText": "I like the approach via the directive due to min / max limits. Since this affects app.js, I'd like to ask @vmuzikar to review this part of the code.", "author": "hmlnarik", "createdAt": "2020-01-29T14:08:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MTg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQxMTcxNg==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r372411716", "bodyText": "Only this one remains. I like using an input because the javascript controls any invalid character in the number (or decimals, or whatever). Okis, I have submitted the rest of the changes and this point is the same for the moment.", "author": "rmartinc", "createdAt": "2020-01-29T14:25:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MTg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI1MTkwMA==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r374251900", "bodyText": "@rmartinc Thank you for your contribution!\n@hmlnarik Even though this seems to me like a significant overkill (using a plain input field would do just fine \u2013\u00a0we're going to rewrite the whole admin console soon anyway), I see nothing wrong with this approach \u2013 seems to be the usual solution for problems like this. And it even works with IE. :D\nLGTM.", "author": "vmuzikar", "createdAt": "2020-02-03T18:00:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MTg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMzODA1Ng==", "url": "https://github.com/keycloak/keycloak/pull/6698#discussion_r374338056", "bodyText": "Thanks @vmuzikar!", "author": "hmlnarik", "createdAt": "2020-02-03T21:00:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MTg3OA=="}], "type": "inlineReview"}, {"oid": "08eb01bbbc143b83cea50d4c7f5cebf506d60daa", "url": "https://github.com/keycloak/keycloak/commit/08eb01bbbc143b83cea50d4c7f5cebf506d60daa", "message": "KEYCLOAK-10884: Need clock skew for SAML identity provider", "committedDate": "2020-01-29T14:13:25Z", "type": "forcePushed"}, {"oid": "4a6bd4bbda7afbe46ffcb41f8ff48150cf2648a5", "url": "https://github.com/keycloak/keycloak/commit/4a6bd4bbda7afbe46ffcb41f8ff48150cf2648a5", "message": "KEYCLOAK-10884: Need clock skew for SAML identity provider", "committedDate": "2020-02-03T08:43:31Z", "type": "commit"}, {"oid": "4a6bd4bbda7afbe46ffcb41f8ff48150cf2648a5", "url": "https://github.com/keycloak/keycloak/commit/4a6bd4bbda7afbe46ffcb41f8ff48150cf2648a5", "message": "KEYCLOAK-10884: Need clock skew for SAML identity provider", "committedDate": "2020-02-03T08:43:31Z", "type": "forcePushed"}]}