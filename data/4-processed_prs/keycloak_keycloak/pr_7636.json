{"pr_number": 7636, "pr_title": "KEYCLOAK-14846 default roles processing", "pr_createdAt": "2020-11-23T12:00:45Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7636", "timeline": [{"oid": "b6b8f607f5ec34a60fd66967a13c30361366b236", "url": "https://github.com/keycloak/keycloak/commit/b6b8f607f5ec34a60fd66967a13c30361366b236", "message": "KEYCLOAK-14846 remove DefaultRoles.java", "committedDate": "2020-11-25T11:03:05Z", "type": "forcePushed"}, {"oid": "db0b243bb7631d08f634198a7cf4895730c92787", "url": "https://github.com/keycloak/keycloak/commit/db0b243bb7631d08f634198a7cf4895730c92787", "message": "KEYCLOAK-14846 remove DefaultRoles.java", "committedDate": "2020-11-25T11:09:59Z", "type": "forcePushed"}, {"oid": "237f043cf5e091e3d1e8e5f28b2b1f148e8561da", "url": "https://github.com/keycloak/keycloak/commit/237f043cf5e091e3d1e8e5f28b2b1f148e8561da", "message": "KEYCLOAK-14846 fix import", "committedDate": "2020-11-25T13:20:10Z", "type": "forcePushed"}, {"oid": "a26736834ff9f09383d9377ecebc79c0586138b1", "url": "https://github.com/keycloak/keycloak/commit/a26736834ff9f09383d9377ecebc79c0586138b1", "message": "KEYCLOAK-14846 fix import", "committedDate": "2020-11-25T16:13:50Z", "type": "forcePushed"}, {"oid": "2362cb45dd4f9865ddcd29254351fbb4a480e816", "url": "https://github.com/keycloak/keycloak/commit/2362cb45dd4f9865ddcd29254351fbb4a480e816", "message": "KEYCLOAK-14846 rebase", "committedDate": "2020-11-30T20:18:45Z", "type": "forcePushed"}, {"oid": "a239d0c998f1cd6e4b03745c8e95f8404a2a1c86", "url": "https://github.com/keycloak/keycloak/commit/a239d0c998f1cd6e4b03745c8e95f8404a2a1c86", "message": "KEYCLOAK-14846 fix tests", "committedDate": "2020-12-01T21:21:46Z", "type": "forcePushed"}, {"oid": "b77443f88b2cb572c1d9cd4332c2c50625ec326d", "url": "https://github.com/keycloak/keycloak/commit/b77443f88b2cb572c1d9cd4332c2c50625ec326d", "message": "KEYCLOAK-14846 SQL migrate default roles", "committedDate": "2020-12-02T23:39:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzODE4NQ==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r535938185", "bodyText": "Is this flush call needed?", "author": "hmlnarik", "createdAt": "2020-12-04T08:57:50Z", "path": "model/jpa/src/main/java/org/keycloak/models/jpa/RealmAdapter.java", "diffHunk": "@@ -1204,6 +1159,20 @@ public void setMasterAdminClient(ClientModel client) {\n         em.flush();\n     }\n \n+    @Override\n+    public void setDefaultRole(RoleModel role) {\n+        realm.setDefaultRoleId(role.getId());\n+        em.flush();", "originalCommit": "b77443f88b2cb572c1d9cd4332c2c50625ec326d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNzAwNQ==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r537107005", "bodyText": "no, it isn't, thank you", "author": "vramik", "createdAt": "2020-12-06T19:30:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzODE4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk0MjcyMQ==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r535942721", "bodyText": "Can we do without this change?", "author": "hmlnarik", "createdAt": "2020-12-04T09:05:16Z", "path": "testsuite/integration-arquillian/tests/base/src/test/resources/migration-test/migration-realm-1.9.8.Final.json", "diffHunk": "@@ -324,7 +324,7 @@\n     \"clientRoles\" : { },\n     \"subGroups\" : [ ]\n   } ],\n-  \"defaultRoles\" : [ \"offline_access\" ],\n+  \"defaultRoles\" : [ \"offline_access\", \"master-test-realm-role\" ],", "originalCommit": "b77443f88b2cb572c1d9cd4332c2c50625ec326d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwODgyOQ==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r537108829", "bodyText": "Yes we can, but I think it's still good way for testing migration of default roles. I've used roles which are already presented in the realm json files and also it's in a format which is still compatible with the particular version, so if you try to import the json file to 1.9.8, you should succeed and if you had the role in the previous version the json would end up exactly how it's.\nSo I've re-used those role to be able to test all migration within single method: AbstractMigrationTest.testDefaultRoles\nI also plan to create one more role with name 'default-roles' in json files to test that newly created default role will have 'default-roles1' name. WDYT?", "author": "vramik", "createdAt": "2020-12-06T19:41:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk0MjcyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4OTg3OA==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r537789878", "bodyText": "This sounds good to me, thanks!", "author": "hmlnarik", "createdAt": "2020-12-07T19:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk0MjcyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQzODM2NA==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r537438364", "bodyText": "Should be this commented block removed? If no should we add some comment why it is there?", "author": "mhajas", "createdAt": "2020-12-07T11:37:56Z", "path": "model/infinispan/src/main/java/org/keycloak/models/cache/infinispan/RealmAdapter.java", "diffHunk": "@@ -724,29 +724,39 @@ public void removeDefaultGroup(GroupModel group) {\n \n     }\n \n-    @Override\n-    public Stream<String> getDefaultRolesStream() {\n-        if (isUpdated()) return updated.getDefaultRolesStream();\n-        return cached.getDefaultRoles().stream();\n-    }\n-\n-    @Override\n-    public void addDefaultRole(String name) {\n-        getDelegateForUpdate();\n-        updated.addDefaultRole(name);\n-    }\n-\n-    @Override\n-    public void updateDefaultRoles(String... defaultRoles) {\n-        getDelegateForUpdate();\n-        updated.updateDefaultRoles(defaultRoles);\n-    }\n-\n-    @Override\n-    public void removeDefaultRoles(String... defaultRoles) {\n-        getDelegateForUpdate();\n-        updated.removeDefaultRoles(defaultRoles);\n-\n+//    @Override", "originalCommit": "5314d629274ceb03556244c15f0dfefaeb6d71d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIyMDcwNQ==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r538220705", "bodyText": "done", "author": "vramik", "createdAt": "2020-12-08T10:30:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQzODM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ0MjY1OQ==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r537442659", "bodyText": "If I understand this correctly, this interface will basically stop working in newer versions. Should we provide an implementation of this that uses the composite default role in the background to stay backward compatible?", "author": "mhajas", "createdAt": "2020-12-07T11:45:24Z", "path": "server-spi/src/main/java/org/keycloak/models/RoleContainerModel.java", "diffHunk": "@@ -71,60 +67,40 @@\n     Stream<RoleModel> searchForRolesStream(String search, Integer first, Integer max);\n \n     /**\n-     * Returns all the default role names of this object.\n-     * @return List of the default role names of this object. Never returns {@code null}.\n-     * @deprecated use the stream variant instead\n+     * @deprecated Default roles are now managed by {@link org.keycloak.models.RealmModel#getDefaultRole()}\n      */\n     @Deprecated\n     default List<String> getDefaultRoles() {", "originalCommit": "5314d629274ceb03556244c15f0dfefaeb6d71d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIyMDg2OA==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r538220868", "bodyText": "Yes, you're right. It started by the fact that I've relialized we don't need to have possibility to manage default roles of each client separately so I've sent a mail to keycloak-dev about that and got confirmation I can remove the possibility from clients. Then we decided we should add RoleModel RealmModel.getDefaultRole() and it basically means all these methods could be potentionaly removed. But in the end it ended up like this. I've introduced those implementations you've asked for in separate commit for better re-review.", "author": "vramik", "createdAt": "2020-12-08T10:31:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ0MjY1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1NzM4Mg==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r537457382", "bodyText": "Is it possible that defaultRole is null? Or we can be sure default role always exists?", "author": "mhajas", "createdAt": "2020-12-07T12:09:23Z", "path": "services/src/main/java/org/keycloak/services/resources/admin/RoleByIdResource.java", "diffHunk": "@@ -104,6 +106,11 @@ protected RoleModel getRoleModel(String id) {\n     @DELETE\n     @NoCache\n     public void deleteRole(final @PathParam(\"role-id\") String id) {\n+        if (realm.getDefaultRole().getId().equals(id)) {", "originalCommit": "5314d629274ceb03556244c15f0dfefaeb6d71d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIxMjM5Mw==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r538212393", "bodyText": "The default role should always exist, in case it doesn't the server is in illegal state. But I get your point.\nNot sure if it'll be better to handle null possibility here rather than later face NPE or rely on the fact the role has to exist. wdyt?\nAnd if the former the question is what would be correct way to handle it. I lean towards to do nothing: if (realm.getDefaultRole == null) return; wdyt?", "author": "vramik", "createdAt": "2020-12-08T10:19:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1NzM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIyMDY1NA==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r538220654", "bodyText": "I'd say the right way is to log a warning if the default role does not exist, and then return.", "author": "hmlnarik", "createdAt": "2020-12-08T10:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1NzM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIyMzk2NA==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r538223964", "bodyText": "@hmlnarik sounds good, thank you", "author": "vramik", "createdAt": "2020-12-08T10:34:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1NzM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NjA3NQ==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r538246075", "bodyText": "Thinking about it a bit deeper, I wonder whether we should not just allow deleting the role in case there is no default role defined. Yes, log a warning, but preventing to delete any role when default role is not set on realm seems too much on the second thought. WDYT?", "author": "hmlnarik", "createdAt": "2020-12-08T11:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1NzM4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1MTI0MA==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r537551240", "bodyText": "This seems like a duplicity of this: https://github.com/keycloak/keycloak/blob/master/themes/src/main/resources/theme/base/admin/resources/js/services.js#L1059\nIf I understand it correctly this function should provide all functionality necessary for default tab to work, so we could remove almost all code from here and add just call to roleControl() function. Have you tried it?", "author": "mhajas", "createdAt": "2020-12-07T14:31:27Z", "path": "themes/src/main/resources/theme/base/admin/resources/js/controllers/realm.js", "diffHunk": "@@ -747,99 +747,119 @@ module.controller('RealmPasswordPolicyCtrl', function($scope, Realm, realm, $htt\n     };\n });\n \n-module.controller('RealmDefaultRolesCtrl', function ($scope, $route, Realm, realm, roles, Notifications, ClientRole, Client) {\n+module.controller('RealmDefaultRolesCtrl', function ($scope, $route, realm, roles, Notifications, ClientRole, Client, RoleRealmComposites, RoleClientComposites, ComponentUtils, $http) {\n \n     console.log('RealmDefaultRolesCtrl');\n \n     $scope.realm = realm;\n-\n-    $scope.availableRealmRoles = [];\n+    $scope.availableRealmRoles = angular.copy(roles);\n     $scope.selectedRealmRoles = [];\n     $scope.selectedRealmDefRoles = [];\n \n     $scope.availableClientRoles = [];\n     $scope.selectedClientRoles = [];\n     $scope.selectedClientDefRoles = [];\n \n-    if (!$scope.realm.hasOwnProperty('defaultRoles') || $scope.realm.defaultRoles === null) {\n-        $scope.realm.defaultRoles = [];\n+    for (var j = 0; j < $scope.availableRealmRoles.length; j++) {\n+        if ($scope.availableRealmRoles[j].id === realm.defaultRole.id) {\n+            var realmRole = $scope.availableRealmRoles[j];\n+            var idx = $scope.availableRealmRoles.indexOf(realmRole);\n+            $scope.availableRealmRoles.splice(idx, 1);\n+            break;\n+        }\n     }\n \n-    // Populate available roles. Available roles are neither already assigned\n-    for (var i = 0; i < roles.length; i++) {\n-        var item = roles[i].name;\n-\n-        if ($scope.realm.defaultRoles.indexOf(item) < 0) {\n-            $scope.availableRealmRoles.push(item);\n+    $scope.realmMappings = RoleRealmComposites.query({realm : realm.realm, role : realm.defaultRole.id}, function(){\n+        for (var i = 0; i < $scope.realmMappings.length; i++) {\n+            var role = $scope.realmMappings[i];\n+            for (var j = 0; j < $scope.availableRealmRoles.length; j++) {\n+                var realmRole = $scope.availableRealmRoles[j];\n+                if (realmRole.id === role.id) {\n+                    var idx = $scope.availableRealmRoles.indexOf(realmRole);\n+                    if (idx !== -1) {\n+                        $scope.availableRealmRoles.splice(idx, 1);\n+                        break;\n+                    }\n+                }\n+            }\n         }\n-    }\n+    });\n \n     $scope.addRealmDefaultRole = function () {\n \n-        // Remove selected roles from the Available roles and add them to realm default roles (move from left to right).\n-        for (var i = 0; i < $scope.selectedRealmRoles.length; i++) {\n-            var selectedRole = $scope.selectedRealmRoles[i];\n-\n-            $scope.realm.defaultRoles.push(selectedRole);\n-\n-            var index = $scope.availableRealmRoles.indexOf(selectedRole);\n-            if (index > -1) {\n-                $scope.availableRealmRoles.splice(index, 1);\n+        $scope.selectedRealmRolesToAdd = JSON.parse('[' + $scope.selectedRealmRoles + ']');\n+        $http.post(authUrl + '/admin/realms/' + realm.realm + '/roles-by-id/' + realm.defaultRole.id + '/composites',\n+            $scope.selectedRealmRolesToAdd).then(function() {\n+            // Remove selected roles from the Available roles and add them to realm default roles (move from left to right).\n+            for (var i = 0; i < $scope.selectedRealmRolesToAdd.length; i++) {\n+                var selectedRole = $scope.selectedRealmRolesToAdd[i];\n+                var index = ComponentUtils.findIndexById($scope.availableRealmRoles, selectedRole.id);\n+                if (index > -1) {\n+                    $scope.availableRealmRoles.splice(index, 1);\n+                    $scope.realmMappings.push(selectedRole);\n+                }\n             }\n-        }\n-\n-        $scope.selectedRealmRoles = [];\n \n-        // Update/save the realm with new default roles.\n-        Realm.update($scope.realm, function () {\n-            Notifications.success(\"Realm default roles updated.\");\n+            $scope.selectedRealmRoles = [];\n+            $scope.selectedRealmRolesToAdd = [];\n+            Notifications.success(\"Default roles updated.\");\n         });\n     };\n \n     $scope.deleteRealmDefaultRole = function () {\n \n-        // Remove selected roles from the realm default roles and add them to available roles (move from right to left).\n-        for (var i = 0; i < $scope.selectedRealmDefRoles.length; i++) {\n-            $scope.availableRealmRoles.push($scope.selectedRealmDefRoles[i]);\n-\n-            var index = $scope.realm.defaultRoles.indexOf($scope.selectedRealmDefRoles[i]);\n-            if (index > -1) {\n-                $scope.realm.defaultRoles.splice(index, 1);\n+        $scope.selectedClientRolesToRemove = JSON.parse('[' + $scope.selectedRealmDefRoles + ']');\n+        $http.delete(authUrl + '/admin/realms/' + realm.realm + '/roles-by-id/' + realm.defaultRole.id + '/composites',", "originalCommit": "5314d629274ceb03556244c15f0dfefaeb6d71d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIxNzg0MQ==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r538217841", "bodyText": "I was trying to re-use roleControl method [1] but I wasn't able to do it successfully. So I ended up with current state. But if you know how to do it, I'll be grateful for the advise (or contribution :) ).\n[1] https://github.com/keycloak/keycloak/blob/master/themes/src/main/resources/theme/base/admin/resources/js/services.js#L965", "author": "vramik", "createdAt": "2020-12-08T10:27:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1MTI0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIyNjM1Mg==", "url": "https://github.com/keycloak/keycloak/pull/7636#discussion_r539226352", "bodyText": "I don't know how to do it, I just saw it has some similar parts so I was wondering whether it is possible to use it.  But if you tried it and it didn't work, lets leave it as it is.", "author": "mhajas", "createdAt": "2020-12-09T11:25:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1MTI0MA=="}], "type": "inlineReview"}, {"oid": "b33672f629e6437ec5d0235323bd51b3713421a9", "url": "https://github.com/keycloak/keycloak/commit/b33672f629e6437ec5d0235323bd51b3713421a9", "message": "KEYCLOAK-14846 rebase", "committedDate": "2020-12-08T11:04:51Z", "type": "forcePushed"}, {"oid": "d7056927e2d5877bdf7826b6ee318b8328e571a7", "url": "https://github.com/keycloak/keycloak/commit/d7056927e2d5877bdf7826b6ee318b8328e571a7", "message": "KEYCLOAK-14846 rebase", "committedDate": "2020-12-10T18:20:30Z", "type": "forcePushed"}, {"oid": "1f4c838079a40c2317502ac479d604f5e4343251", "url": "https://github.com/keycloak/keycloak/commit/1f4c838079a40c2317502ac479d604f5e4343251", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2020-12-10T22:47:01Z", "type": "forcePushed"}, {"oid": "05e8936d415f2727ee47c8ebe1a667b26fe9bcec", "url": "https://github.com/keycloak/keycloak/commit/05e8936d415f2727ee47c8ebe1a667b26fe9bcec", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2020-12-16T22:53:32Z", "type": "forcePushed"}, {"oid": "2d7bc6b059d1ff9537f488987ffe0e8f21bd3246", "url": "https://github.com/keycloak/keycloak/commit/2d7bc6b059d1ff9537f488987ffe0e8f21bd3246", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2020-12-17T22:10:46Z", "type": "forcePushed"}, {"oid": "d51a2ee917395fabf9d575eb65e698058c067b96", "url": "https://github.com/keycloak/keycloak/commit/d51a2ee917395fabf9d575eb65e698058c067b96", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2020-12-18T00:18:53Z", "type": "forcePushed"}, {"oid": "fb9950abab067dd52a9a99025dd3c0a34ccff567", "url": "https://github.com/keycloak/keycloak/commit/fb9950abab067dd52a9a99025dd3c0a34ccff567", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2020-12-18T08:43:16Z", "type": "forcePushed"}, {"oid": "486478996664412dc2b6997bad7b27664be45db4", "url": "https://github.com/keycloak/keycloak/commit/486478996664412dc2b6997bad7b27664be45db4", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2021-01-05T10:07:27Z", "type": "forcePushed"}, {"oid": "7905645920a337ad0e57ff752b469d8d86b285e5", "url": "https://github.com/keycloak/keycloak/commit/7905645920a337ad0e57ff752b469d8d86b285e5", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2021-01-05T19:06:56Z", "type": "forcePushed"}, {"oid": "79874296348dc3e1c9f56052b9513c215a4698c0", "url": "https://github.com/keycloak/keycloak/commit/79874296348dc3e1c9f56052b9513c215a4698c0", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2021-01-06T00:02:25Z", "type": "forcePushed"}, {"oid": "43f58a354fd61e04241b87ce95eac3805b981dde", "url": "https://github.com/keycloak/keycloak/commit/43f58a354fd61e04241b87ce95eac3805b981dde", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2021-01-06T10:53:12Z", "type": "commit"}, {"oid": "43f58a354fd61e04241b87ce95eac3805b981dde", "url": "https://github.com/keycloak/keycloak/commit/43f58a354fd61e04241b87ce95eac3805b981dde", "message": "KEYCLOAK-14846 Default roles processing", "committedDate": "2021-01-06T10:53:12Z", "type": "forcePushed"}]}