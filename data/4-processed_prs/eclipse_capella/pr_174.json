{"pr_number": 174, "pr_title": "[559825] Rework on RefreshRepresentation Commandline", "pr_createdAt": "2020-03-27T10:05:59Z", "pr_url": "https://github.com/eclipse/capella/pull/174", "timeline": [{"oid": "a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "url": "https://github.com/eclipse/capella/commit/a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "message": "Rework on RefreshRepresentation Commandline\n\nChange-Id: Ia2adb056cfa1866a5290096723861184cf69ae49\nSigned-off-by: Yogaratnam YUGANSAN <yugansan.yogaratnam@gmail.com>", "committedDate": "2020-03-27T09:54:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxNDEwNQ==", "url": "https://github.com/eclipse/capella/pull/174#discussion_r399314105", "bodyText": "Wildcard new ArrayList<Job>()  -> new ArrayList<>()", "author": "sandupostaru", "createdAt": "2020-03-27T14:41:43Z", "path": "core/plugins/org.polarsys.capella.core.sirius.ui/src/org/polarsys/capella/core/sirius/ui/commandline/RefreshAirdCommandLine.java", "diffHunk": "@@ -33,29 +34,38 @@\n   public RefreshAirdCommandLine() {\r\n     super(true);\r\n   }\r\n-  \r\n+\r\n   protected IStatus executeWithinWorkbench() {\r\n     List<IFile> airdFiles = getAirdFilesFromInput();\r\n-    for (IFile file : airdFiles) {\r\n-      Job job = new RefreshDiagramJob(file);\r\n-      job.addJobChangeListener(new JobChangeAdapter() {\r\n-\r\n+    List<Job> listJob = new ArrayList<Job>();\r", "originalCommit": "a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyMTkxMQ==", "url": "https://github.com/eclipse/capella/pull/174#discussion_r399321911", "bodyText": "jobs", "author": "sandupostaru", "createdAt": "2020-03-27T14:52:12Z", "path": "core/plugins/org.polarsys.capella.core.sirius.ui/src/org/polarsys/capella/core/sirius/ui/commandline/RefreshAirdCommandLine.java", "diffHunk": "@@ -33,29 +34,38 @@\n   public RefreshAirdCommandLine() {\r\n     super(true);\r\n   }\r\n-  \r\n+\r\n   protected IStatus executeWithinWorkbench() {\r\n     List<IFile> airdFiles = getAirdFilesFromInput();\r\n-    for (IFile file : airdFiles) {\r\n-      Job job = new RefreshDiagramJob(file);\r\n-      job.addJobChangeListener(new JobChangeAdapter() {\r\n-\r\n+    List<Job> listJob = new ArrayList<Job>();\r", "originalCommit": "a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyMjk0MA==", "url": "https://github.com/eclipse/capella/pull/174#discussion_r399322940", "bodyText": "Can you do an optimized for loop?\nfor (IFile file: airdFiles) ...", "author": "sandupostaru", "createdAt": "2020-03-27T14:53:41Z", "path": "core/plugins/org.polarsys.capella.core.sirius.ui/src/org/polarsys/capella/core/sirius/ui/commandline/RefreshAirdCommandLine.java", "diffHunk": "@@ -33,29 +34,38 @@\n   public RefreshAirdCommandLine() {\r\n     super(true);\r\n   }\r\n-  \r\n+\r\n   protected IStatus executeWithinWorkbench() {\r\n     List<IFile> airdFiles = getAirdFilesFromInput();\r\n-    for (IFile file : airdFiles) {\r\n-      Job job = new RefreshDiagramJob(file);\r\n-      job.addJobChangeListener(new JobChangeAdapter() {\r\n-\r\n+    List<Job> listJob = new ArrayList<Job>();\r\n+    for (int i = 0; i < airdFiles.size(); i++) {\r\n+      listJob.add(new RefreshDiagramJob(airdFiles.get(i)));\r\n+    }\r", "originalCommit": "a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNDc3Nw==", "url": "https://github.com/eclipse/capella/pull/174#discussion_r399324777", "bodyText": "Job job = listJob.get(i)", "author": "sandupostaru", "createdAt": "2020-03-27T14:56:02Z", "path": "core/plugins/org.polarsys.capella.core.sirius.ui/src/org/polarsys/capella/core/sirius/ui/commandline/RefreshAirdCommandLine.java", "diffHunk": "@@ -33,29 +34,38 @@\n   public RefreshAirdCommandLine() {\r\n     super(true);\r\n   }\r\n-  \r\n+\r\n   protected IStatus executeWithinWorkbench() {\r\n     List<IFile> airdFiles = getAirdFilesFromInput();\r\n-    for (IFile file : airdFiles) {\r\n-      Job job = new RefreshDiagramJob(file);\r\n-      job.addJobChangeListener(new JobChangeAdapter() {\r\n-\r\n+    List<Job> listJob = new ArrayList<Job>();\r\n+    for (int i = 0; i < airdFiles.size(); i++) {\r\n+      listJob.add(new RefreshDiagramJob(airdFiles.get(i)));\r\n+    }\r\n+    for (int i = 0; i < listJob.size(); i++) {\r\n+      int index = i;\r\n+      listJob.get(i).addJobChangeListener(new JobChangeAdapter() {\r", "originalCommit": "a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNTA0Mg==", "url": "https://github.com/eclipse/capella/pull/174#discussion_r399325042", "bodyText": "Do we need this variable", "author": "sandupostaru", "createdAt": "2020-03-27T14:56:26Z", "path": "core/plugins/org.polarsys.capella.core.sirius.ui/src/org/polarsys/capella/core/sirius/ui/commandline/RefreshAirdCommandLine.java", "diffHunk": "@@ -33,29 +34,38 @@\n   public RefreshAirdCommandLine() {\r\n     super(true);\r\n   }\r\n-  \r\n+\r\n   protected IStatus executeWithinWorkbench() {\r\n     List<IFile> airdFiles = getAirdFilesFromInput();\r\n-    for (IFile file : airdFiles) {\r\n-      Job job = new RefreshDiagramJob(file);\r\n-      job.addJobChangeListener(new JobChangeAdapter() {\r\n-\r\n+    List<Job> listJob = new ArrayList<Job>();\r\n+    for (int i = 0; i < airdFiles.size(); i++) {\r\n+      listJob.add(new RefreshDiagramJob(airdFiles.get(i)));\r\n+    }\r\n+    for (int i = 0; i < listJob.size(); i++) {\r\n+      int index = i;\r", "originalCommit": "a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNjQ2NQ==", "url": "https://github.com/eclipse/capella/pull/174#discussion_r399326465", "bodyText": "airdFiles.get(index)) add a getter in RefreshDiagramJob that gives the file.\nThen obtain the job from the event, and the file from the job.", "author": "sandupostaru", "createdAt": "2020-03-27T14:58:22Z", "path": "core/plugins/org.polarsys.capella.core.sirius.ui/src/org/polarsys/capella/core/sirius/ui/commandline/RefreshAirdCommandLine.java", "diffHunk": "@@ -33,29 +34,38 @@\n   public RefreshAirdCommandLine() {\r\n     super(true);\r\n   }\r\n-  \r\n+\r\n   protected IStatus executeWithinWorkbench() {\r\n     List<IFile> airdFiles = getAirdFilesFromInput();\r\n-    for (IFile file : airdFiles) {\r\n-      Job job = new RefreshDiagramJob(file);\r\n-      job.addJobChangeListener(new JobChangeAdapter() {\r\n-\r\n+    List<Job> listJob = new ArrayList<Job>();\r\n+    for (int i = 0; i < airdFiles.size(); i++) {\r\n+      listJob.add(new RefreshDiagramJob(airdFiles.get(i)));\r\n+    }\r\n+    for (int i = 0; i < listJob.size(); i++) {\r\n+      int index = i;\r\n+      listJob.get(i).addJobChangeListener(new JobChangeAdapter() {\r\n         @Override\r\n         public void done(IJobChangeEvent event) {\r\n-          URI selectedUri = EcoreUtil2.getURI(file);\r\n+          URI selectedUri = EcoreUtil2.getURI(airdFiles.get(index));\r", "originalCommit": "a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNzAwOQ==", "url": "https://github.com/eclipse/capella/pull/174#discussion_r399327009", "bodyText": "Job nextJob = listJob.get(index + 1)", "author": "sandupostaru", "createdAt": "2020-03-27T14:59:06Z", "path": "core/plugins/org.polarsys.capella.core.sirius.ui/src/org/polarsys/capella/core/sirius/ui/commandline/RefreshAirdCommandLine.java", "diffHunk": "@@ -33,29 +34,38 @@\n   public RefreshAirdCommandLine() {\r\n     super(true);\r\n   }\r\n-  \r\n+\r\n   protected IStatus executeWithinWorkbench() {\r\n     List<IFile> airdFiles = getAirdFilesFromInput();\r\n-    for (IFile file : airdFiles) {\r\n-      Job job = new RefreshDiagramJob(file);\r\n-      job.addJobChangeListener(new JobChangeAdapter() {\r\n-\r\n+    List<Job> listJob = new ArrayList<Job>();\r\n+    for (int i = 0; i < airdFiles.size(); i++) {\r\n+      listJob.add(new RefreshDiagramJob(airdFiles.get(i)));\r\n+    }\r\n+    for (int i = 0; i < listJob.size(); i++) {\r\n+      int index = i;\r\n+      listJob.get(i).addJobChangeListener(new JobChangeAdapter() {\r\n         @Override\r\n         public void done(IJobChangeEvent event) {\r\n-          URI selectedUri = EcoreUtil2.getURI(file);\r\n+          URI selectedUri = EcoreUtil2.getURI(airdFiles.get(index));\r\n           Session session = SessionManager.INSTANCE.getSession(selectedUri, new NullProgressMonitor());\r\n           session.save(new NullProgressMonitor());\r\n           try {\r\n             session.close(new NullProgressMonitor());\r\n           } catch (Exception e) {\r\n             e.printStackTrace();\r\n           }\r\n-          if (PlatformUI.getTestableObject() == null || PlatformUI.getTestableObject().getTestHarness() == null) {\r\n-            new CloseWorkbenchJob().schedule();\r\n+          if (index < listJob.size() - 1) {\r\n+            listJob.get(index + 1).schedule();\r", "originalCommit": "a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNzU2Ng==", "url": "https://github.com/eclipse/capella/pull/174#discussion_r399327566", "bodyText": "Job firstJob = listJob.get(0)", "author": "sandupostaru", "createdAt": "2020-03-27T14:59:50Z", "path": "core/plugins/org.polarsys.capella.core.sirius.ui/src/org/polarsys/capella/core/sirius/ui/commandline/RefreshAirdCommandLine.java", "diffHunk": "@@ -33,29 +34,38 @@\n   public RefreshAirdCommandLine() {\r\n     super(true);\r\n   }\r\n-  \r\n+\r\n   protected IStatus executeWithinWorkbench() {\r\n     List<IFile> airdFiles = getAirdFilesFromInput();\r\n-    for (IFile file : airdFiles) {\r\n-      Job job = new RefreshDiagramJob(file);\r\n-      job.addJobChangeListener(new JobChangeAdapter() {\r\n-\r\n+    List<Job> listJob = new ArrayList<Job>();\r\n+    for (int i = 0; i < airdFiles.size(); i++) {\r\n+      listJob.add(new RefreshDiagramJob(airdFiles.get(i)));\r\n+    }\r\n+    for (int i = 0; i < listJob.size(); i++) {\r\n+      int index = i;\r\n+      listJob.get(i).addJobChangeListener(new JobChangeAdapter() {\r\n         @Override\r\n         public void done(IJobChangeEvent event) {\r\n-          URI selectedUri = EcoreUtil2.getURI(file);\r\n+          URI selectedUri = EcoreUtil2.getURI(airdFiles.get(index));\r\n           Session session = SessionManager.INSTANCE.getSession(selectedUri, new NullProgressMonitor());\r\n           session.save(new NullProgressMonitor());\r\n           try {\r\n             session.close(new NullProgressMonitor());\r\n           } catch (Exception e) {\r\n             e.printStackTrace();\r\n           }\r\n-          if (PlatformUI.getTestableObject() == null || PlatformUI.getTestableObject().getTestHarness() == null) {\r\n-            new CloseWorkbenchJob().schedule();\r\n+          if (index < listJob.size() - 1) {\r\n+            listJob.get(index + 1).schedule();\r\n+          } else {\r\n+            if (PlatformUI.getTestableObject() == null || PlatformUI.getTestableObject().getTestHarness() == null) {\r\n+              new CloseWorkbenchJob().schedule();\r\n+            }\r\n           }\r\n         }\r\n       });\r\n-      job.schedule();\r\n+    }\r\n+    if (!listJob.isEmpty()) {\r\n+      listJob.get(0).schedule();\r", "originalCommit": "a9472f33fbc42b42fb9eec27ae9a1d5a24c8ba1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5079ed214035a1e8dbfce52409685797a1246c70", "url": "https://github.com/eclipse/capella/commit/5079ed214035a1e8dbfce52409685797a1246c70", "message": "[559825] Rework on RefreshRepresentation Commandline\n\nChange-Id: I216f199798656cee56baccb48e87cf377581cf25", "committedDate": "2020-03-27T15:38:38Z", "type": "commit"}]}