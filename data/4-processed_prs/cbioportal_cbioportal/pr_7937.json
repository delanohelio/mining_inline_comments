{"pr_number": 7937, "pr_title": "Reimplemented gene set data test", "pr_createdAt": "2020-10-06T14:59:06Z", "pr_url": "https://github.com/cBioPortal/cbioportal/pull/7937", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM3NzQ0OA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7937#discussion_r500377448", "bodyText": "This is a place where I think Clean Code is wrong. Pulling the predicate out into its own method when it's used in exactly one spot, and its design is already clear is not worth it to me. I think this increases the mental effort needed to read this code, as you have to navigate to sampleListIdExists to understand the logic, and the logic isn't fully covered by the method name sampleListIdExists. I would change this back.", "author": "Luke-Sikina", "createdAt": "2020-10-06T15:14:45Z", "path": "web/src/main/java/org/cbioportal/web/GenesetDataController.java", "diffHunk": "@@ -36,27 +36,39 @@\n \n     @PreAuthorize(\"hasPermission(#geneticProfileId, 'GeneticProfileId', 'read')\")\n     @RequestMapping(value = \"/genetic-profiles/{geneticProfileId}/geneset-genetic-data/fetch\", method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE,\n-            produces = MediaType.APPLICATION_JSON_VALUE)\n+        produces = MediaType.APPLICATION_JSON_VALUE)\n     @ApiOperation(\"Fetch gene set \\\"genetic data\\\" items (gene set scores) by profile Id, gene set ids and sample ids\")\n     public ResponseEntity<List<GenesetMolecularData>> fetchGeneticDataItems(\n-            @ApiParam(required = true, value = \"Genetic profile ID, e.g. gbm_tcga_gsva_scores\")\n-            @PathVariable String geneticProfileId,\n-            @ApiParam(required = true, value = \"Search criteria to return the values for a given set of samples and gene set items. \"\n-                    + \"genesetIds: The list of identifiers for the gene sets of interest, e.g. HINATA_NFKB_MATRIX. \"\n-                    + \"Use one of these if you want to specify a subset of samples:\"\n-                    + \"(1) sampleListId: Identifier of pre-defined sample list with samples to query, e.g. brca_tcga_all \"\n-                    + \"or (2) sampleIds: custom list of samples or patients to query, e.g. TCGA-BH-A1EO-01, TCGA-AR-A1AR-01\")\n-            @RequestBody GenesetDataFilterCriteria genesetDataFilterCriteria) throws MolecularProfileNotFoundException, SampleListNotFoundException {\n-\n-        if (genesetDataFilterCriteria.getSampleListId() != null && genesetDataFilterCriteria.getSampleListId().trim().length() > 0) {\n+        @ApiParam(required = true, value = \"Genetic profile ID, e.g. gbm_tcga_gsva_scores\")\n+        @PathVariable String geneticProfileId,\n+        @ApiParam(required = true, value = \"Search criteria to return the values for a given set of samples and gene set items. \"\n+            + \"genesetIds: The list of identifiers for the gene sets of interest, e.g. HINATA_NFKB_MATRIX. \"\n+            + \"Use one of these if you want to specify a subset of samples:\"\n+            + \"(1) sampleListId: Identifier of pre-defined sample list with samples to query, e.g. brca_tcga_all \"\n+            + \"or (2) sampleIds: custom list of samples or patients to query, e.g. TCGA-BH-A1EO-01, TCGA-AR-A1AR-01\")\n+        @RequestBody GenesetDataFilterCriteria genesetDataFilterCriteria) throws MolecularProfileNotFoundException, SampleListNotFoundException {\n+\n+        if (sampleListIdExists(genesetDataFilterCriteria)) {", "originalCommit": "5133869990e753f31c764f6d12a0ac232e7cc1d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM3OTA1Mw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7937#discussion_r500379053", "bodyText": "Why don't they matter? I think they do. We are saying that when genesetDataService gets these args, it produces this value. We are setting up our expectations for this dependency in the context of this unit test.", "author": "Luke-Sikina", "createdAt": "2020-10-06T15:16:30Z", "path": "web/src/test/java/org/cbioportal/web/GenesetDataControllerTest.java", "diffHunk": "@@ -64,46 +64,77 @@ public void setUp() throws Exception {\n     }\n \n     @Test\n-    public void fetchGeneticDataItems() throws Exception {\n+    public void fetchGeneticDataItemsWithSampleIds() throws Exception {\n+        List<GenesetMolecularData> genesetDataItems = createGenesetDataItemsList();\n+\n+        String geneticProfileId = PROF_ID;\n+        List<String> sampleIds = Arrays.asList(SAMPLE_STABLE_ID_1);\n+        List<String> genesetIds = Arrays.asList(GENESET_ID_1, GENESET_ID_2);\n+\n+        // Argument values don't matter, just shows which fetchGenesetData is called", "originalCommit": "5133869990e753f31c764f6d12a0ac232e7cc1d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMTgzOA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7937#discussion_r500431838", "bodyText": "deleted the comment", "author": "jtquach1", "createdAt": "2020-10-06T16:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM3OTA1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4MDIzNQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/7937#discussion_r500380235", "bodyText": "I don't think this comment says anything useful. Trivial comments get ignored, and eventually age to the point that they're confusing or incorrect. I'd delete it.", "author": "Luke-Sikina", "createdAt": "2020-10-06T15:17:49Z", "path": "web/src/test/java/org/cbioportal/web/GenesetDataControllerTest.java", "diffHunk": "@@ -64,46 +64,77 @@ public void setUp() throws Exception {\n     }\n \n     @Test\n-    public void fetchGeneticDataItems() throws Exception {\n+    public void fetchGeneticDataItemsWithSampleIds() throws Exception {\n+        List<GenesetMolecularData> genesetDataItems = createGenesetDataItemsList();\n+\n+        String geneticProfileId = PROF_ID;\n+        List<String> sampleIds = Arrays.asList(SAMPLE_STABLE_ID_1);\n+        List<String> genesetIds = Arrays.asList(GENESET_ID_1, GENESET_ID_2);\n+\n+        // Argument values don't matter, just shows which fetchGenesetData is called\n+        Mockito.when(genesetDataService.fetchGenesetData(\n+            geneticProfileId,\n+            sampleIds,\n+            genesetIds)\n+        ).thenReturn(genesetDataItems);\n \n+        // Set sampleIds to ensure the fetchGenesetData variant above is called:", "originalCommit": "5133869990e753f31c764f6d12a0ac232e7cc1d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4MDQzOQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/7937#discussion_r500380439", "bodyText": "Good!", "author": "Luke-Sikina", "createdAt": "2020-10-06T15:18:02Z", "path": "web/src/test/java/org/cbioportal/web/GenesetDataControllerTest.java", "diffHunk": "@@ -64,46 +64,77 @@ public void setUp() throws Exception {\n     }\n \n     @Test\n-    public void fetchGeneticDataItems() throws Exception {\n+    public void fetchGeneticDataItemsWithSampleIds() throws Exception {\n+        List<GenesetMolecularData> genesetDataItems = createGenesetDataItemsList();\n+\n+        String geneticProfileId = PROF_ID;\n+        List<String> sampleIds = Arrays.asList(SAMPLE_STABLE_ID_1);\n+        List<String> genesetIds = Arrays.asList(GENESET_ID_1, GENESET_ID_2);\n+\n+        // Argument values don't matter, just shows which fetchGenesetData is called\n+        Mockito.when(genesetDataService.fetchGenesetData(\n+            geneticProfileId,\n+            sampleIds,\n+            genesetIds)", "originalCommit": "5133869990e753f31c764f6d12a0ac232e7cc1d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4MDc1Mg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7937#discussion_r500380752", "bodyText": "Argument values matter :(", "author": "Luke-Sikina", "createdAt": "2020-10-06T15:18:22Z", "path": "web/src/test/java/org/cbioportal/web/GenesetDataControllerTest.java", "diffHunk": "@@ -64,46 +64,77 @@ public void setUp() throws Exception {\n     }\n \n     @Test\n-    public void fetchGeneticDataItems() throws Exception {\n+    public void fetchGeneticDataItemsWithSampleIds() throws Exception {\n+        List<GenesetMolecularData> genesetDataItems = createGenesetDataItemsList();\n+\n+        String geneticProfileId = PROF_ID;\n+        List<String> sampleIds = Arrays.asList(SAMPLE_STABLE_ID_1);\n+        List<String> genesetIds = Arrays.asList(GENESET_ID_1, GENESET_ID_2);\n+\n+        // Argument values don't matter, just shows which fetchGenesetData is called\n+        Mockito.when(genesetDataService.fetchGenesetData(\n+            geneticProfileId,\n+            sampleIds,\n+            genesetIds)\n+        ).thenReturn(genesetDataItems);\n \n+        // Set sampleIds to ensure the fetchGenesetData variant above is called:\n+        GenesetDataFilterCriteria genesetDataFilterCriteria = new GenesetDataFilterCriteria();\n+        genesetDataFilterCriteria.setSampleIds(sampleIds);\n+        genesetDataFilterCriteria.setGenesetIds(genesetIds);\n+\n+        mockMvc.perform(MockMvcRequestBuilders.post(\"/genetic-profiles/\" + geneticProfileId + \"/geneset-genetic-data/fetch\")\n+            .accept(MediaType.APPLICATION_JSON)\n+            .contentType(MediaType.APPLICATION_JSON)\n+            .content(objectMapper.writeValueAsString(genesetDataFilterCriteria)))\n+            .andExpect(MockMvcResultMatchers.status().isOk())\n+            .andExpect(MockMvcResultMatchers.content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$\", Matchers.hasSize(2)))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].geneticProfileId\").value(geneticProfileId))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].genesetId\").value(GENESET_ID_1))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].sampleId\").value(SAMPLE_STABLE_ID_1))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].value\").value(VALUE_1))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].geneticProfileId\").value(geneticProfileId))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].genesetId\").value(GENESET_ID_2))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].sampleId\").value(SAMPLE_STABLE_ID_1))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].value\").value(VALUE_2));\n+    }\n+\n+    @Test\n+    public void fetchGeneticDataItemsWithSampleListId() throws Exception {\n         List<GenesetMolecularData> genesetDataItems = createGenesetDataItemsList();\n-        Mockito.when(genesetDataService.fetchGenesetData(Mockito.any(), (List) Mockito.any(),\n-            Mockito.any())).thenReturn(genesetDataItems);\n \n+        String geneticProfileId = PROF_ID;\n+        String sampleListId = SAMPLE_LIST_ID;\n+        List<String> genesetIds = Arrays.asList(GENESET_ID_1, GENESET_ID_2);\n+\n+        // Argument values don't matter, just shows which fetchGenesetData is called", "originalCommit": "5133869990e753f31c764f6d12a0ac232e7cc1d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNDAyNQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/7937#discussion_r500434025", "bodyText": "deleted the comment", "author": "jtquach1", "createdAt": "2020-10-06T16:26:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4MDc1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4Mjk5Mg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7937#discussion_r500382992", "bodyText": "Why did this change from 4 to 2? I liked that the two tests verified different results. It helped mentally separate the two tests for me", "author": "Luke-Sikina", "createdAt": "2020-10-06T15:20:44Z", "path": "web/src/test/java/org/cbioportal/web/GenesetDataControllerTest.java", "diffHunk": "@@ -64,46 +64,77 @@ public void setUp() throws Exception {\n     }\n \n     @Test\n-    public void fetchGeneticDataItems() throws Exception {\n+    public void fetchGeneticDataItemsWithSampleIds() throws Exception {\n+        List<GenesetMolecularData> genesetDataItems = createGenesetDataItemsList();\n+\n+        String geneticProfileId = PROF_ID;\n+        List<String> sampleIds = Arrays.asList(SAMPLE_STABLE_ID_1);\n+        List<String> genesetIds = Arrays.asList(GENESET_ID_1, GENESET_ID_2);\n+\n+        // Argument values don't matter, just shows which fetchGenesetData is called\n+        Mockito.when(genesetDataService.fetchGenesetData(\n+            geneticProfileId,\n+            sampleIds,\n+            genesetIds)\n+        ).thenReturn(genesetDataItems);\n \n+        // Set sampleIds to ensure the fetchGenesetData variant above is called:\n+        GenesetDataFilterCriteria genesetDataFilterCriteria = new GenesetDataFilterCriteria();\n+        genesetDataFilterCriteria.setSampleIds(sampleIds);\n+        genesetDataFilterCriteria.setGenesetIds(genesetIds);\n+\n+        mockMvc.perform(MockMvcRequestBuilders.post(\"/genetic-profiles/\" + geneticProfileId + \"/geneset-genetic-data/fetch\")\n+            .accept(MediaType.APPLICATION_JSON)\n+            .contentType(MediaType.APPLICATION_JSON)\n+            .content(objectMapper.writeValueAsString(genesetDataFilterCriteria)))\n+            .andExpect(MockMvcResultMatchers.status().isOk())\n+            .andExpect(MockMvcResultMatchers.content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$\", Matchers.hasSize(2)))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].geneticProfileId\").value(geneticProfileId))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].genesetId\").value(GENESET_ID_1))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].sampleId\").value(SAMPLE_STABLE_ID_1))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].value\").value(VALUE_1))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].geneticProfileId\").value(geneticProfileId))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].genesetId\").value(GENESET_ID_2))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].sampleId\").value(SAMPLE_STABLE_ID_1))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].value\").value(VALUE_2));\n+    }\n+\n+    @Test\n+    public void fetchGeneticDataItemsWithSampleListId() throws Exception {\n         List<GenesetMolecularData> genesetDataItems = createGenesetDataItemsList();\n-        Mockito.when(genesetDataService.fetchGenesetData(Mockito.any(), (List) Mockito.any(),\n-            Mockito.any())).thenReturn(genesetDataItems);\n \n+        String geneticProfileId = PROF_ID;\n+        String sampleListId = SAMPLE_LIST_ID;\n+        List<String> genesetIds = Arrays.asList(GENESET_ID_1, GENESET_ID_2);\n+\n+        // Argument values don't matter, just shows which fetchGenesetData is called\n+        Mockito.when(genesetDataService.fetchGenesetData(\n+            geneticProfileId,\n+            sampleListId,\n+            genesetIds)\n+        ).thenReturn(genesetDataItems);\n+\n+        // Set sampleListId to ensure the fetchGenesetData variant above is called:\n         GenesetDataFilterCriteria genesetDataFilterCriteria = new GenesetDataFilterCriteria();\n-        genesetDataFilterCriteria.setGenesetIds(Arrays.asList(GENESET_ID_1, GENESET_ID_2));\n-\n-        mockMvc.perform(MockMvcRequestBuilders.post(\"/genetic-profiles/\" + PROF_ID + \"/geneset-genetic-data/fetch\")\n-                .accept(MediaType.APPLICATION_JSON)\n-                .contentType(MediaType.APPLICATION_JSON)\n-                .content(objectMapper.writeValueAsString(genesetDataFilterCriteria)))\n-                .andExpect(MockMvcResultMatchers.status().isOk())\n-                .andExpect(MockMvcResultMatchers.content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$\", Matchers.hasSize(2)))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].geneticProfileId\").value(PROF_ID))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].genesetId\").value(GENESET_ID_1))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].sampleId\").value(SAMPLE_STABLE_ID_1))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$[0].value\").value(VALUE_1))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].geneticProfileId\").value(PROF_ID))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].genesetId\").value(GENESET_ID_2))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].sampleId\").value(SAMPLE_STABLE_ID_1))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].value\").value(VALUE_2));\n-\n-        //testing the sampleListId route:\n-        // List<GenesetMolecularData> genesetDataItems2 = createGenesetDataItemsList();\n-        // genesetDataItems2.addAll(createGenesetDataItemsList());//duplicate, just to make it different from response above\n-        // Mockito.when(genesetDataService.fetchGenesetData(Mockito.any(), (List) Mockito.any(),\n-        //     Mockito.any())).thenReturn(genesetDataItems2);\n-        // //set sampleListId to ensure the fetchGenesetData variant above is called:\n-        // genesetDataFilterCriteria.setSampleListId(SAMPLE_LIST_ID);\n-\n-        // mockMvc.perform(MockMvcRequestBuilders.post(\"/genetic-profiles/\" + PROF_ID + \"/geneset-genetic-data/fetch\")\n-        //         .accept(MediaType.APPLICATION_JSON)\n-        //         .contentType(MediaType.APPLICATION_JSON)\n-        //         .content(objectMapper.writeValueAsString(genesetDataFilterCriteria)))\n-        //         .andExpect(MockMvcResultMatchers.status().isOk())\n-        //         .andExpect(MockMvcResultMatchers.content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))\n-        //         .andExpect(MockMvcResultMatchers.jsonPath(\"$\", Matchers.hasSize(4)));\n+        genesetDataFilterCriteria.setSampleListId(sampleListId);\n+        genesetDataFilterCriteria.setGenesetIds(genesetIds);\n+\n+        mockMvc.perform(MockMvcRequestBuilders.post(\"/genetic-profiles/\" + geneticProfileId + \"/geneset-genetic-data/fetch\")\n+            .accept(MediaType.APPLICATION_JSON)\n+            .contentType(MediaType.APPLICATION_JSON)\n+            .content(objectMapper.writeValueAsString(genesetDataFilterCriteria)))\n+            .andExpect(MockMvcResultMatchers.status().isOk())\n+            .andExpect(MockMvcResultMatchers.content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))\n+            .andExpect(MockMvcResultMatchers.jsonPath(\"$\", Matchers.hasSize(2)))", "originalCommit": "5133869990e753f31c764f6d12a0ac232e7cc1d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f0d7058134e37f91df4fd7098c58a6d696939cbf", "url": "https://github.com/cBioPortal/cbioportal/commit/f0d7058134e37f91df4fd7098c58a6d696939cbf", "message": "Reimplemented gene set data test\n- Split fetchGenesetData tests based on usage of sampleIds and sampleListId\n- Revised test for sampleListId to call correct variant of fetchGenesetData\n- Added more assertions to sampleListId test\n- Formatted spacing (IntelliJ settings) and added variables for documentation purposes", "committedDate": "2020-10-06T16:01:07Z", "type": "forcePushed"}, {"oid": "896b988817cc745f5be79613a9e3174b2e4b39aa", "url": "https://github.com/cBioPortal/cbioportal/commit/896b988817cc745f5be79613a9e3174b2e4b39aa", "message": "Reimplemented gene set data test\n- Split fetchGenesetData tests based on usage of sampleIds and sampleListId\n- Revised test for sampleListId to call correct variant of fetchGenesetData\n- Added more assertions to sampleListId test\n- Formatted spacing (IntelliJ settings) and added variables for documentation purposes", "committedDate": "2020-10-06T16:17:41Z", "type": "forcePushed"}, {"oid": "8c4fe6760716eccb1314501a6600375c33d746dc", "url": "https://github.com/cBioPortal/cbioportal/commit/8c4fe6760716eccb1314501a6600375c33d746dc", "message": "Reimplemented gene set data test\n- Split fetchGenesetData tests based on usage of sampleIds and sampleListId\n- Revised test for sampleListId to call correct variant of fetchGenesetData\n- Added more assertions to sampleListId test\n- Formatted spacing (IntelliJ settings) and added variables for documentation purposes", "committedDate": "2020-11-05T15:27:34Z", "type": "commit"}, {"oid": "8c4fe6760716eccb1314501a6600375c33d746dc", "url": "https://github.com/cBioPortal/cbioportal/commit/8c4fe6760716eccb1314501a6600375c33d746dc", "message": "Reimplemented gene set data test\n- Split fetchGenesetData tests based on usage of sampleIds and sampleListId\n- Revised test for sampleListId to call correct variant of fetchGenesetData\n- Added more assertions to sampleListId test\n- Formatted spacing (IntelliJ settings) and added variables for documentation purposes", "committedDate": "2020-11-05T15:27:34Z", "type": "forcePushed"}]}