{"pr_number": 6610, "pr_title": "use shebang to infer filetype when appropriate", "pr_createdAt": "2020-04-07T23:35:43Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6610", "timeline": [{"oid": "65c148149cb4a80351b5187945d76a7279778374", "url": "https://github.com/rstudio/rstudio/commit/65c148149cb4a80351b5187945d76a7279778374", "message": "detect document type from shebang", "committedDate": "2020-04-07T23:25:32Z", "type": "commit"}, {"oid": "60bf1532b35651177545fbec44276aa5bb5a6ee6", "url": "https://github.com/rstudio/rstudio/commit/60bf1532b35651177545fbec44276aa5bb5a6ee6", "message": "remove debug logging", "committedDate": "2020-04-07T23:31:48Z", "type": "commit"}, {"oid": "ba97e30bf4058ecdc7932fe3e3b1b4febc6f1f08", "url": "https://github.com/rstudio/rstudio/commit/ba97e30bf4058ecdc7932fe3e3b1b4febc6f1f08", "message": "support littler", "committedDate": "2020-04-07T23:32:53Z", "type": "commit"}, {"oid": "5ce0b9f852bf469a0c3042d0a61c85c31db294bf", "url": "https://github.com/rstudio/rstudio/commit/5ce0b9f852bf469a0c3042d0a61c85c31db294bf", "message": "explicitly close ifs after read", "committedDate": "2020-04-07T23:33:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4NTYxOQ==", "url": "https://github.com/rstudio/rstudio/pull/6610#discussion_r405885619", "bodyText": "If memory serves this isn't exception-safe. Maybe use FilePath::openForRead?", "author": "jmcphers", "createdAt": "2020-04-09T00:11:52Z", "path": "src/cpp/session/modules/SessionSource.cpp", "diffHunk": "@@ -69,6 +71,52 @@ namespace {\n module_context::WaitForMethodFunction s_waitForRequestDocumentSave;\n module_context::WaitForMethodFunction s_waitForRequestDocumentClose;\n \n+std::string inferDocumentType(const FilePath& documentPath,\n+                              const std::string& defaultType)\n+{\n+   // read first line in document\n+   std::ifstream ifs(documentPath.getAbsolutePath());", "originalCommit": "5ce0b9f852bf469a0c3042d0a61c85c31db294bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4NTk4NA==", "url": "https://github.com/rstudio/rstudio/pull/6610#discussion_r405885984", "bodyText": "I think csh and ksh are pretty common, too.", "author": "jmcphers", "createdAt": "2020-04-09T00:13:12Z", "path": "src/cpp/session/modules/SessionSource.cpp", "diffHunk": "@@ -69,6 +71,52 @@ namespace {\n module_context::WaitForMethodFunction s_waitForRequestDocumentSave;\n module_context::WaitForMethodFunction s_waitForRequestDocumentClose;\n \n+std::string inferDocumentType(const FilePath& documentPath,\n+                              const std::string& defaultType)\n+{\n+   // read first line in document\n+   std::ifstream ifs(documentPath.getAbsolutePath());\n+   if (!ifs.is_open())\n+      return defaultType;\n+ \n+   // try to read the first line\n+   std::string line;\n+   std::getline(ifs, line);\n+   ifs.close();\n+   \n+   // check for a shebang line\n+   if (!boost::algorithm::starts_with(line, \"#!\"))\n+      return defaultType;\n+   \n+   // use heuristics to guess the file type\n+   boost::regex pattern(\"(?:\\\\s|/)([^\\\\s/]+)(?=\\\\s|$)\");\n+   boost::sregex_token_iterator it(line.begin(), line.end(), pattern, 1);\n+   boost::sregex_token_iterator end;\n+   for (; it != end; ++it)\n+   {\n+      // skip things that look like flags\n+      if (boost::algorithm::starts_with(*it, \"-\"))\n+         continue;\n+      \n+      // check for common shells\n+      for (auto&& shell : {\"sh\", \"bash\", \"fish\", \"zsh\"})", "originalCommit": "5ce0b9f852bf469a0c3042d0a61c85c31db294bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "40cccdea202005eaf42aabce079aba9281754f56", "url": "https://github.com/rstudio/rstudio/commit/40cccdea202005eaf42aabce079aba9281754f56", "message": "check for 'csh', 'ksh'", "committedDate": "2020-04-24T22:46:49Z", "type": "commit"}]}