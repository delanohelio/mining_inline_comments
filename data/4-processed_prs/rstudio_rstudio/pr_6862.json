{"pr_number": 6862, "pr_title": "support view of Python objects in Environment pane", "pr_createdAt": "2020-05-12T23:16:04Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6862", "timeline": [{"oid": "414966f6a95992b9755de6d5a7d3c4befd6eb752", "url": "https://github.com/rstudio/rstudio/commit/414966f6a95992b9755de6d5a7d3c4befd6eb752", "message": "initial wiring of Python to environment pane", "committedDate": "2020-05-18T18:39:21Z", "type": "commit"}, {"oid": "1429cbe8f7c33efbe693cb548109f7a8fee0d2ca", "url": "https://github.com/rstudio/rstudio/commit/1429cbe8f7c33efbe693cb548109f7a8fee0d2ca", "message": "ensure reticulate events are fired", "committedDate": "2020-05-18T18:39:21Z", "type": "commit"}, {"oid": "3fb0c2b7dc89f8ecf41bc99bfdc40dd12ee105e1", "url": "https://github.com/rstudio/rstudio/commit/3fb0c2b7dc89f8ecf41bc99bfdc40dd12ee105e1", "message": "work on detectChanges", "committedDate": "2020-05-18T18:39:21Z", "type": "commit"}, {"oid": "021f6bf591952b07bccd23b9df2652d4caea3a63", "url": "https://github.com/rstudio/rstudio/commit/021f6bf591952b07bccd23b9df2652d4caea3a63", "message": "fix invocation", "committedDate": "2020-05-18T18:39:21Z", "type": "commit"}, {"oid": "21d1bd188d8518de70e4933eab1167201a4ec978", "url": "https://github.com/rstudio/rstudio/commit/21d1bd188d8518de70e4933eab1167201a4ec978", "message": "send python init status during client init", "committedDate": "2020-05-18T18:39:21Z", "type": "commit"}, {"oid": "b34a69c0da4f7f343fbd6b49028f36a1be09fa37", "url": "https://github.com/rstudio/rstudio/commit/b34a69c0da4f7f343fbd6b49028f36a1be09fa37", "message": "behavior refinements", "committedDate": "2020-05-18T18:39:21Z", "type": "commit"}, {"oid": "1bef81ab64b10433aa5e10ce717cb17bdb248f20", "url": "https://github.com/rstudio/rstudio/commit/1bef81ab64b10433aa5e10ce717cb17bdb248f20", "message": "detect Python functions consistently", "committedDate": "2020-05-18T18:39:21Z", "type": "commit"}, {"oid": "3a6d90f94f3aa56df80dd503f7aad76c6fd88ac1", "url": "https://github.com/rstudio/rstudio/commit/3a6d90f94f3aa56df80dd503f7aad76c6fd88ac1", "message": "don't include builtins by default", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "fc2d86ae71cc2b6adf4135a3a25b993fc85da2fb", "url": "https://github.com/rstudio/rstudio/commit/fc2d86ae71cc2b6adf4135a3a25b993fc85da2fb", "message": "bundle environment changes into single event", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "4e0f2e70126fae4bfe400499ce7663e711d2f3dd", "url": "https://github.com/rstudio/rstudio/commit/4e0f2e70126fae4bfe400499ce7663e711d2f3dd", "message": "use default format method directly", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "2fc045381d3791657d0806f422c1da27fa2d23c1", "url": "https://github.com/rstudio/rstudio/commit/2fc045381d3791657d0806f422c1da27fa2d23c1", "message": "sync Python state on browser refresh", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "f37c306e55c97194be70ffd1725b76ca8730e616", "url": "https://github.com/rstudio/rstudio/commit/f37c306e55c97194be70ffd1725b76ca8730e616", "message": "support object explorer, data viewer", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "219c1ebaa16d562dd126acf3736f1d7b38022b61", "url": "https://github.com/rstudio/rstudio/commit/219c1ebaa16d562dd126acf3736f1d7b38022b61", "message": "respect active language in Environment pane View", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "112a971fb61632b72f60b39c13e267a881284507", "url": "https://github.com/rstudio/rstudio/commit/112a971fb61632b72f60b39c13e267a881284507", "message": "further refine View behavior", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "57d854dfbac5063c0a1a9c5c14c04215187cd654", "url": "https://github.com/rstudio/rstudio/commit/57d854dfbac5063c0a1a9c5c14c04215187cd654", "message": "inspect Python object attributes", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "e06b3eeb9dccb8696fb24e425688f08dddf7092d", "url": "https://github.com/rstudio/rstudio/commit/e06b3eeb9dccb8696fb24e425688f08dddf7092d", "message": "refactor a bit", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "3c223dcf80db85d744cf7686dbcd16fa7439d4e2", "url": "https://github.com/rstudio/rstudio/commit/3c223dcf80db85d744cf7686dbcd16fa7439d4e2", "message": "further refine", "committedDate": "2020-05-18T18:39:22Z", "type": "commit"}, {"oid": "3c223dcf80db85d744cf7686dbcd16fa7439d4e2", "url": "https://github.com/rstudio/rstudio/commit/3c223dcf80db85d744cf7686dbcd16fa7439d4e2", "message": "further refine", "committedDate": "2020-05-18T18:39:22Z", "type": "forcePushed"}, {"oid": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e", "url": "https://github.com/rstudio/rstudio/commit/90b072efdc8dcd35a0437845e05b3f4ed7f9c39e", "message": "inspect object attributes when requested", "committedDate": "2020-05-18T21:28:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwODAwOQ==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426908009", "bodyText": "Nit: typo (byd)", "author": "jmcphers", "createdAt": "2020-05-18T21:40:11Z", "path": "src/cpp/session/modules/SessionObjectExplorer.R", "diffHunk": "@@ -952,21 +1176,25 @@\n    format(object.size(object), units = \"auto\")\n })\n \n-# Utility Functions ----\n-\n-.rs.addFunction(\"getRefCount\", function(object)\n+.rs.addFunction(\"explorer.isPythonObjectExpandable\", function(object)\n {\n-   .Call(\"rs_getRefCount\",\n-         as.name(\"object\"),\n-         environment(),\n-         PACKAGE = \"(embedding)\")\n-})\n-\n-.rs.addFunction(\"setRefCount\", function(object, count)\n-{\n-   .Call(\"rs_setRefCount\",\n-         as.name(\"object\"),\n-         environment(),\n-         as.integer(count),\n-         PACKAGE = \"(embedding)\")\n-})\n+   # NOTE: technically, these objects are expandable (they have attributes\n+   # and may even have methods of interest) but since they're usually less\n+   # interesting than the object's actual value we ignore those byd default.", "originalCommit": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzkxMw==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426927913", "bodyText": "Thanks for catching that! Fixed now.", "author": "kevinushey", "createdAt": "2020-05-18T22:32:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwODAwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwOTE5MQ==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426909191", "bodyText": "Is this called a lot? (if so wondering if it'd be better to detect python initialization eagerly instead of recomputing it on every call when uninitialized)", "author": "jmcphers", "createdAt": "2020-05-18T21:42:52Z", "path": "src/cpp/session/modules/SessionReticulate.cpp", "diffHunk": "@@ -56,6 +56,27 @@ void onDeferredInit(bool)\n }\n \n } // end anonymous namespace\n+\n+bool isPythonInitialized()", "originalCommit": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyODEyMA==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426928120", "bodyText": "It currently doesn't, but since we do get notified when Python is initialized by reticulate we can just use that to set and store a flag rather than making this a more expensive call. I've made that change.", "author": "kevinushey", "createdAt": "2020-05-18T22:33:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwOTE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMDcwNw==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426910707", "bodyText": "Since this is a plain string value, maybe dump a log entry if it's something other than the values we expect? (realize it's totally impossible for it to get into that state now...)", "author": "jmcphers", "createdAt": "2020-05-18T21:46:48Z", "path": "src/cpp/session/modules/environment/SessionEnvironment.cpp", "diffHunk": "@@ -485,9 +493,25 @@ Error setEnvironment(boost::shared_ptr<int> pContextDepth,\n    if (error)\n       return error;\n \n-   error = setEnvironmentName(*pContextDepth,\n-                              *pCurrentContext,\n-                              environmentName);\n+   s_monitoredPythonModule = std::string();\n+   \n+   if (s_environmentLanguage == \"R\")\n+   {\n+      error = setEnvironmentName(*pContextDepth,\n+                                 *pCurrentContext,\n+                                 environmentName);\n+   }\n+   else if (s_environmentLanguage == \"Python\")\n+   {\n+      if (environmentName != s_monitoredPythonModule)\n+      {\n+         s_monitoredPythonModule = environmentName;\n+         \n+         ClientEvent event(client_events::kEnvironmentRefresh);\n+         module_context::enqueClientEvent(event);\n+      }\n+   }", "originalCommit": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyODI0Ng==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426928246", "bodyText": "Good idea -- I've added a simple warning log message.", "author": "kevinushey", "createdAt": "2020-05-18T22:33:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMDcwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMTI1NA==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426911254", "bodyText": "Does this imply that the Python environment pane does not respect the manual/auto refresh setting? (Should it?)", "author": "jmcphers", "createdAt": "2020-05-18T21:48:02Z", "path": "src/cpp/session/modules/environment/SessionEnvironment.cpp", "diffHunk": "@@ -720,25 +772,56 @@ Error setContextDepth(boost::shared_ptr<int> pContextDepth,\n \n Error getEnvironmentState(boost::shared_ptr<int> pContextDepth,\n                           boost::shared_ptr<LineDebugState> pLineDebugState,\n-                          const json::JsonRpcRequest&,\n+                          const json::JsonRpcRequest& request,\n                           json::JsonRpcResponse* pResponse)\n {\n-   pResponse->setResult(commonEnvironmentStateData(*pContextDepth,\n-                                                   true, // include contents\n-                                                   pLineDebugState.get()));\n+   std::string language = \"R\";\n+   std::string environment = \"R_GlobalEnv\";\n+   Error error = json::readParams(request.params, &language, &environment);\n+   if (error)\n+      LOG_ERROR(error);\n+   \n+   json::Object jsonState;\n+   \n+   if (language == \"Python\")\n+   {\n+      jsonState = pythonEnvironmentStateData(environment);\n+   }\n+   else\n+   {\n+      jsonState = commonEnvironmentStateData(\n+               *pContextDepth,\n+               true,\n+               pLineDebugState.get());\n+   }\n+   \n+   pResponse->setResult(jsonState);\n    return Success();\n }\n \n-void onDetectChanges(module_context::ChangeSource source)\n+void onDetectChanges(module_context::ChangeSource /* source */)\n {\n    // Prevent recursive calls to this function\n    DROP_RECURSIVE_CALLS;\n \n+   // Check for Python changes.\n+   if (s_environmentLanguage == \"Python\" && !s_monitoredPythonModule.empty())\n+   {\n+      Error error =\n+            r::exec::RFunction(\".rs.reticulate.detectChanges\")\n+            .addParam(s_monitoredPythonModule)\n+            .call();\n+      \n+      if (error)\n+         LOG_ERROR(error);\n+   }\n+   \n    // Ignore if not monitoring\n    if (!s_monitoring)", "originalCommit": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMDkzOA==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426930938", "bodyText": "You're right! I've made that change.", "author": "kevinushey", "createdAt": "2020-05-18T22:41:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMTI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMjY2NQ==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426912665", "bodyText": "Not a checkin blocker, but I wonder if it'd be nicer to show this all the time as a sort of advertisement of what's possible. Attempting to switch modes before Python is initialized could show instructions for enabling the feature (by initializing python or installing the appropriate software). What do you think?", "author": "jmcphers", "createdAt": "2020-05-18T21:51:26Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPane.java", "diffHunk": "@@ -150,9 +170,38 @@ protected Toolbar createMainToolbar()\n \n    @Override\n    protected SecondaryToolbar createSecondaryToolbar()\n+   {\n+      initSecondaryToolbar();\n+      return secondaryToolbar_;\n+   }\n+   \n+   private void initSecondaryToolbar()\n    {\n       SecondaryToolbar toolbar = new SecondaryToolbar(\"Environment Tab Second\");\n       \n+      languageMenu_ = new ToolbarPopupMenu();\n+      \n+      MenuItem rMenuItem = new MenuItem(\"R\", () -> setActiveLanguage(\"R\", true));\n+      languageMenu_.addItem(rMenuItem);\n+      \n+      MenuItem pyMenuItem = new MenuItem(\"Python\", () -> setActiveLanguage(\"Python\", true));\n+      languageMenu_.addItem(pyMenuItem);\n+      \n+      languageButton_ = new ToolbarMenuButton(\n+            \"R\",\n+            ToolbarButton.NoTitle,\n+            (ImageResource) null,\n+            languageMenu_);\n+      \n+      // don't show the language button at first; instead,\n+      // toggle its visibility after the widget is created\n+      // depending on whether Python has been initialized", "originalCommit": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMTMwMw==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426931303", "bodyText": "At first I was opposed, but now I think this is worth doing -- especially so now because the trigger that makes this button visible is non-obvious (reticulate must be loaded and Python must be initialized). I'll make that change.", "author": "kevinushey", "createdAt": "2020-05-18T22:43:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMjY2NQ=="}], "type": "inlineReview"}, {"oid": "f379d5ac4f17508ebdfd3b35d11298171120f76f", "url": "https://github.com/rstudio/rstudio/commit/f379d5ac4f17508ebdfd3b35d11298171120f76f", "message": "better accommodate Python objects with undefined length", "committedDate": "2020-05-18T22:09:45Z", "type": "commit"}, {"oid": "1471a34bb863f03a1cf1e862716f85e346c32cd2", "url": "https://github.com/rstudio/rstudio/commit/1471a34bb863f03a1cf1e862716f85e346c32cd2", "message": "use flag to track python init status", "committedDate": "2020-05-18T22:15:22Z", "type": "commit"}, {"oid": "7d06f28537a95a7795f4a28ec41271536a43e8ef", "url": "https://github.com/rstudio/rstudio/commit/7d06f28537a95a7795f4a28ec41271536a43e8ef", "message": "add missing include guards; use constants", "committedDate": "2020-05-18T22:29:47Z", "type": "commit"}, {"oid": "398a5b759c9328a56b4ab6ce23e780db12e9d7e2", "url": "https://github.com/rstudio/rstudio/commit/398a5b759c9328a56b4ab6ce23e780db12e9d7e2", "message": "another language check", "committedDate": "2020-05-18T22:30:47Z", "type": "commit"}, {"oid": "bf6f9a9469ae8c1616ef564351a1938a8fd8f1d7", "url": "https://github.com/rstudio/rstudio/commit/bf6f9a9469ae8c1616ef564351a1938a8fd8f1d7", "message": "respect environment monitoring pref", "committedDate": "2020-05-18T22:32:02Z", "type": "commit"}, {"oid": "aaa33bb0426ff967431a9875adfb6a54e6230922", "url": "https://github.com/rstudio/rstudio/commit/aaa33bb0426ff967431a9875adfb6a54e6230922", "message": "ensure monitoring state is reflected in Python refresh", "committedDate": "2020-05-18T22:41:21Z", "type": "commit"}, {"oid": "c343524525acd817a7cfb9ee65c7552c8de7f37f", "url": "https://github.com/rstudio/rstudio/commit/c343524525acd817a7cfb9ee65c7552c8de7f37f", "message": "always show language button in environment pane", "committedDate": "2020-05-18T22:47:38Z", "type": "commit"}, {"oid": "5ffa83518ce7c38c90c0c7be3bad7da6140b4b3e", "url": "https://github.com/rstudio/rstudio/commit/5ffa83518ce7c38c90c0c7be3bad7da6140b4b3e", "message": "RStudio, Inc. -> RStudio, PBC", "committedDate": "2020-05-18T22:49:41Z", "type": "commit"}, {"oid": "2fb7cad4655db3742265702ec9a532f4f75f2fa8", "url": "https://github.com/rstudio/rstudio/commit/2fb7cad4655db3742265702ec9a532f4f75f2fa8", "message": "update copyright date", "committedDate": "2020-05-18T22:52:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE5MDg3Ng==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r428190876", "bodyText": "Do we need to track TODO via a new issue (otherwise our getting back to TODO's is pretty sporadic at best).", "author": "gtritchie", "createdAt": "2020-05-20T17:37:44Z", "path": "src/cpp/session/modules/SessionReticulate.R", "diffHunk": "@@ -1411,3 +1462,403 @@ html.heading = _heading\n    else\n       item\n })\n+\n+#    > str(.rs.describeObject(globalenv(), \"a\"))\n+# List of 10\n+#  $ name             : 'rs.scalar' chr \"a\"\n+#  $ type             : 'rs.scalar' chr \"numeric\"\n+#  $ clazz            : chr [1:2] \"numeric\" \"double\"\n+#  $ is_data          : 'rs.scalar' logi FALSE\n+#  $ value            : 'rs.scalar' chr \"1\"\n+#  $ description      : 'rs.scalar' chr \" num 1\"\n+#  $ size             : 'rs.scalar' num 56\n+#  $ length           : 'rs.scalar' int 1\n+#  $ contents         : list()\n+#  $ contents_deferred: 'rs.scalar' logi FALSE\n+.rs.addFunction(\"reticulate.describeObject\", function(name, parent)\n+{\n+   builtins <- reticulate::import_builtins(convert = TRUE)\n+   object <- if (inherits(parent, \"python.builtin.dict\"))\n+      reticulate::py_get_item(parent, name)\n+   else\n+      reticulate::py_get_attr(parent, name)\n+   \n+   # is this object 'data'? consider non-callable, non-module objects as data\n+   isData <- !(\n+      grepl(\"^__.*__$\", name) ||\n+      reticulate:::py_is_callable(object) ||\n+      reticulate:::py_is_module(object)\n+   )\n+   \n+   # TODO: there isn't really a distinction between an objects \"type\"", "originalCommit": "2fb7cad4655db3742265702ec9a532f4f75f2fa8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3NjExMg==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r428276112", "bodyText": "I've converted this to a NOTE, since it really doesn't represent an actionable item -- it's ultimately just to help anyone reading that bit of code understand some of the decisions made there.", "author": "kevinushey", "createdAt": "2020-05-20T20:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE5MDg3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxNzU5NA==", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r428217594", "bodyText": "nit: single year for new files", "author": "gtritchie", "createdAt": "2020-05-20T18:23:23Z", "path": "src/gwt/tools/editor-settings/eclipse-templates.xml", "diffHunk": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><templates><template autoinsert=\"true\" context=\"java\" deleted=\"false\" description=\"Boilerplate for a GWT event.\" enabled=\"true\" name=\"GWTEvent\">/*\n  * ${event}Event.java\n  *\n- * Copyright (C) 2020 by RStudio, PBC\n+ * Copyright (C) 2009-${year} by RStudio, PBC", "originalCommit": "2fb7cad4655db3742265702ec9a532f4f75f2fa8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8919c5b5d4353c67b5c60d920e45343b5fb51200", "url": "https://github.com/rstudio/rstudio/commit/8919c5b5d4353c67b5c60d920e45343b5fb51200", "message": "TODO is really a NOTE", "committedDate": "2020-05-20T20:01:11Z", "type": "commit"}, {"oid": "17e3d2d8c95f02cfee10c232c81533c7026e438d", "url": "https://github.com/rstudio/rstudio/commit/17e3d2d8c95f02cfee10c232c81533c7026e438d", "message": "use only current year for header", "committedDate": "2020-05-20T20:01:30Z", "type": "commit"}]}