{"pr_number": 6449, "pr_title": "Maintain file permissions while performing replace", "pr_createdAt": "2020-03-11T16:24:17Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6449", "timeline": [{"oid": "4f2941f7fcca290e1b705493cff3c1ebd0cd32d1", "url": "https://github.com/rstudio/rstudio/commit/4f2941f7fcca290e1b705493cff3c1ebd0cd32d1", "message": "maintain file permissions while performing replace", "committedDate": "2020-03-11T00:26:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwOTY4OQ==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391109689", "bodyText": "When constructing a boost::filesystem::path from a std::string, some extra work is needed on Windows; see: \n  \n    \n      rstudio/src/cpp/shared_core/FilePath.cpp\n    \n    \n        Lines 224 to 246\n      in\n      6a45dc8\n    \n    \n    \n    \n\n        \n          \n           #ifdef _WIN32 \n        \n\n        \n          \n            \n        \n\n        \n          \n           // For Windows only, we need to use the wide character versions of the file \n        \n\n        \n          \n           // APIs in order to deal properly with characters that cannot be represented \n        \n\n        \n          \n           // in the default system encoding. (It would be preferable if UTF-8 were the \n        \n\n        \n          \n           // system encoding, but Windows doesn't support that.) However, we can't give \n        \n\n        \n          \n           // FilePath a wide character API because Mac needs to use narrow characters \n        \n\n        \n          \n           // (see note below). So we use wstring internally, and translate to/from UTF-8 \n        \n\n        \n          \n           // narrow strings that are used in the API. \n        \n\n        \n          \n            \n        \n\n        \n          \n           typedef std::wstring internal_string; \n        \n\n        \n          \n            \n        \n\n        \n          \n           std::string toString(const internal_string& value) \n        \n\n        \n          \n           { \n        \n\n        \n          \n              return string_utils::wideToUtf8(value); \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           internal_string fromString(const std::string& value) \n        \n\n        \n          \n           { \n        \n\n        \n          \n              return string_utils::utf8ToWide(value); \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           #else \n        \n    \n  \n\n\nThis is one reason that we almost never use raw boost::filesystem::path objects and instead always use our FilePath wrapper. You might consider making these set/get permissions methods part of the FilePath object itself (which stores a boost filesystem path internally).", "author": "jmcphers", "createdAt": "2020-03-11T16:41:55Z", "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -487,6 +489,42 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       }\n    }\n \n+   Error setPermissions(const std::string& filePath, boost::filesystem::perms permissions)\n+   {\n+      boost::filesystem::path path(filePath);", "originalCommit": "4f2941f7fcca290e1b705493cff3c1ebd0cd32d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExNzY0Ng==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391117646", "bodyText": "At first I did have this as part of FilePath, but I felt weird having our wrapper functions directly pass and return boost::filesystem::perms without its own wrapper and implementing that seems like more work will little payoff. What are your thoughts on this?", "author": "melissa-barca", "createdAt": "2020-03-11T16:53:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwOTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyMjUxNQ==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391122515", "bodyText": "That's a good instinct; FilePath should abstract boost::filesystem completely so we shouldn't return filesystem internals like perms.\nI think we could greatly simplify this by skipping all permissions-related code on Windows. The only permission supported by boost::filesystem::perms on Windows is write permission... which is a tautology here since we just wrote to the file! https://www.boost.org/doc/libs/1_66_0/libs/filesystem/doc/reference.html#Enum-perms\nWe could also simplify it further by using ::stat and ::chmod directly instead of using the Boost wrappers around them (which would remove the need to handle exceptions and path wrappers); but I'll leave that up to your discretion.", "author": "jmcphers", "createdAt": "2020-03-11T17:00:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwOTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIyNDIwOQ==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391224209", "bodyText": "Hi Jonathan, at this point I can't think of a strong argument to use ::stat and ::chmod over the boost permissions. I updated the code so these functions are not declared or called in Windows. Thanks!", "author": "melissa-barca", "createdAt": "2020-03-11T19:54:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwOTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0MjcyNA==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391242724", "bodyText": "Could we add an update/set permissions method on FilePath to resolve this?", "author": "MariaSemple", "createdAt": "2020-03-11T20:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwOTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1MDQ5MA==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391250490", "bodyText": "Maria pointed out that FileMode already has functions I can use so expect another update later today :)", "author": "melissa-barca", "createdAt": "2020-03-11T20:30:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwOTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI2NjgwOA==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391266808", "bodyText": "IIRC the FileMode enums do not cover all the possible permissions, so I don't think you can use them in this case.", "author": "jmcphers", "createdAt": "2020-03-11T21:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwOTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNjA3OA==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391316078", "bodyText": "Ah you are correct. In that case, I'll leave the code alone and this is ready for review again.", "author": "melissa-barca", "createdAt": "2020-03-11T22:55:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwOTY4OQ=="}], "type": "inlineReview"}, {"oid": "b1239d411954bfb3a22f0ea5242a6ee73c62631f", "url": "https://github.com/rstudio/rstudio/commit/b1239d411954bfb3a22f0ea5242a6ee73c62631f", "message": "during a replace, only get/set permissions on non-Windows OSs", "committedDate": "2020-03-11T17:28:26Z", "type": "commit"}, {"oid": "90d8d676d6e01c67bcb7ec34a23fef85a8edfbc6", "url": "https://github.com/rstudio/rstudio/commit/90d8d676d6e01c67bcb7ec34a23fef85a8edfbc6", "message": "disable permissions functions on windows", "committedDate": "2020-03-11T19:42:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0MTM2MQ==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391241361", "bodyText": "What do you mean by the above check? Does this mean flushing the output stream should happen first? Why is it for efficiency?", "author": "MariaSemple", "createdAt": "2020-03-11T20:13:39Z", "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -586,7 +586,14 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n             outputStream_->flush();\n             inputStream_.reset();\n             outputStream_.reset();\n+\n+            // Unneccesary on Windows because this only sets write permissions which we\n+            // already know are correct if we are writing.\n+            // For efficiency, this should not be combined with the above check as flushing\n+            // outputStream could change the file permissions", "originalCommit": "b1239d411954bfb3a22f0ea5242a6ee73c62631f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNTgwNw==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391315807", "bodyText": "To be honest, I'm not sure. I updated the comment to be more clear.", "author": "melissa-barca", "createdAt": "2020-03-11T22:54:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0MTM2MQ=="}], "type": "inlineReview"}, {"oid": "63e3e243ff0fb4942bbbe6354d466decebaba89c", "url": "https://github.com/rstudio/rstudio/commit/63e3e243ff0fb4942bbbe6354d466decebaba89c", "message": "fix comment", "committedDate": "2020-03-11T22:54:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxOTEyNw==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391319127", "bodyText": "Nit: I think this return should be outside the try block for clarity (as it is in the function above)", "author": "jmcphers", "createdAt": "2020-03-11T23:04:21Z", "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -487,6 +489,45 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       }\n    }\n \n+// permissions getter/setter (only applicable to Unix platforms)\n+#ifndef _WIN32\n+   Error setPermissions(const std::string& filePath, boost::filesystem::perms permissions)\n+   {\n+      boost::filesystem::path path(filePath);\n+      try\n+      {\n+         boost::filesystem::permissions(path, permissions);\n+      }\n+      catch (const boost::filesystem::filesystem_error& e)\n+      {\n+         return Error(e.code(), ERROR_LOCATION);\n+      }\n+\n+      return Success();\n+   }\n+\n+   Error getPermissions(const std::string& filePath, boost::filesystem::perms* pPerms)\n+   {\n+      *pPerms = boost::filesystem::no_perms;\n+\n+      boost::filesystem::path path(filePath);\n+      try\n+      {\n+         boost::filesystem::file_status fileStatus = status(path);\n+         *pPerms = fileStatus.permissions();\n+         return Success();", "originalCommit": "63e3e243ff0fb4942bbbe6354d466decebaba89c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMyMTg3OA==", "url": "https://github.com/rstudio/rstudio/pull/6449#discussion_r391321878", "bodyText": "Done!", "author": "melissa-barca", "createdAt": "2020-03-11T23:13:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxOTEyNw=="}], "type": "inlineReview"}, {"oid": "cfb0678fc3c352db535a677de7711b97c2e14732", "url": "https://github.com/rstudio/rstudio/commit/cfb0678fc3c352db535a677de7711b97c2e14732", "message": "move return outside of try block", "committedDate": "2020-03-11T23:12:39Z", "type": "commit"}]}