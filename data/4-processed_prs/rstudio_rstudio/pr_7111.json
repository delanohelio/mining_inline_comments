{"pr_number": 7111, "pr_title": "don't break display math marks on delimiter edit (wait until save)", "pr_createdAt": "2020-06-12T11:42:14Z", "pr_url": "https://github.com/rstudio/rstudio/pull/7111", "timeline": [{"oid": "bd7f38d309d16a6441b60f20d9e23d4fbd1798fa", "url": "https://github.com/rstudio/rstudio/commit/bd7f38d309d16a6441b60f20d9e23d4fbd1798fa", "message": "don't break display math on delimiter edit (wait until save)", "committedDate": "2020-06-12T11:37:39Z", "type": "commit"}, {"oid": "c982ee75d3123a85cf5aec80917049c9bf80cbba", "url": "https://github.com/rstudio/rstudio/commit/c982ee75d3123a85cf5aec80917049c9bf80cbba", "message": "move comment", "committedDate": "2020-06-12T11:43:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxNzM0Mg==", "url": "https://github.com/rstudio/rstudio/pull/7111#discussion_r440317342", "bodyText": "IIUC this condition should always be true given the check above?", "author": "kevinushey", "createdAt": "2020-06-15T16:59:10Z", "path": "src/gwt/panmirror/src/editor/src/marks/math/math-transaction.ts", "diffHunk": "@@ -36,17 +36,19 @@ export function mathAppendMarkTransaction(): AppendMarkTransactionHandler {\n         const mathRange = getMarkRange(tr.doc.resolve(from), schema.marks.math);\n         if (mathRange) {\n           const mathAttr = getMarkAttrs(tr.doc, mathRange, schema.marks.math);\n-          const mathDelim = delimiterForType(mathAttr.type);\n-          const mathText = tr.doc.textBetween(mathRange.from, mathRange.to);\n-          const charAfter = tr.doc.textBetween(mathRange.to, mathRange.to + 1);\n-          const noDelims = !mathText.startsWith(mathDelim) || !mathText.endsWith(mathDelim);\n-          const spaceAtEdge =\n-            mathAttr.type === MathType.Inline &&\n-            (mathText.startsWith(mathDelim + ' ') || mathText.endsWith(' ' + mathDelim));\n-          const numberAfter = mathAttr.type === MathType.Inline && /\\d/.test(charAfter);\n-          if (noDelims || spaceAtEdge || numberAfter) {\n-            tr.removeMark(mathRange.from, mathRange.to, schema.marks.math);\n-            tr.removeStoredMark(schema.marks.math);\n+          if (mathAttr.type === MathType.Inline) {\n+            const mathDelim = delimiterForType(mathAttr.type);\n+            const mathText = tr.doc.textBetween(mathRange.from, mathRange.to);\n+            const charAfter = tr.doc.textBetween(mathRange.to, mathRange.to + 1);\n+            const noDelims = !mathText.startsWith(mathDelim) || !mathText.endsWith(mathDelim);\n+            const spaceAtEdge =\n+              mathAttr.type === MathType.Inline &&", "originalCommit": "c982ee75d3123a85cf5aec80917049c9bf80cbba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxNzU4MA==", "url": "https://github.com/rstudio/rstudio/pull/7111#discussion_r440317580", "bodyText": "Same here?", "author": "kevinushey", "createdAt": "2020-06-15T16:59:35Z", "path": "src/gwt/panmirror/src/editor/src/marks/math/math-transaction.ts", "diffHunk": "@@ -36,17 +36,19 @@ export function mathAppendMarkTransaction(): AppendMarkTransactionHandler {\n         const mathRange = getMarkRange(tr.doc.resolve(from), schema.marks.math);\n         if (mathRange) {\n           const mathAttr = getMarkAttrs(tr.doc, mathRange, schema.marks.math);\n-          const mathDelim = delimiterForType(mathAttr.type);\n-          const mathText = tr.doc.textBetween(mathRange.from, mathRange.to);\n-          const charAfter = tr.doc.textBetween(mathRange.to, mathRange.to + 1);\n-          const noDelims = !mathText.startsWith(mathDelim) || !mathText.endsWith(mathDelim);\n-          const spaceAtEdge =\n-            mathAttr.type === MathType.Inline &&\n-            (mathText.startsWith(mathDelim + ' ') || mathText.endsWith(' ' + mathDelim));\n-          const numberAfter = mathAttr.type === MathType.Inline && /\\d/.test(charAfter);\n-          if (noDelims || spaceAtEdge || numberAfter) {\n-            tr.removeMark(mathRange.from, mathRange.to, schema.marks.math);\n-            tr.removeStoredMark(schema.marks.math);\n+          if (mathAttr.type === MathType.Inline) {\n+            const mathDelim = delimiterForType(mathAttr.type);\n+            const mathText = tr.doc.textBetween(mathRange.from, mathRange.to);\n+            const charAfter = tr.doc.textBetween(mathRange.to, mathRange.to + 1);\n+            const noDelims = !mathText.startsWith(mathDelim) || !mathText.endsWith(mathDelim);\n+            const spaceAtEdge =\n+              mathAttr.type === MathType.Inline &&\n+              (mathText.startsWith(mathDelim + ' ') || mathText.endsWith(' ' + mathDelim));\n+            const numberAfter = mathAttr.type === MathType.Inline && /\\d/.test(charAfter);", "originalCommit": "c982ee75d3123a85cf5aec80917049c9bf80cbba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}