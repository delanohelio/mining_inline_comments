{"pr_number": 6491, "pr_title": "Add equality and inequality operators to User", "pr_createdAt": "2020-03-18T21:57:17Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6491", "timeline": [{"oid": "163b75ec8bc7a25ea193bacec796b2d2cc50b1b1", "url": "https://github.com/rstudio/rstudio/commit/163b75ec8bc7a25ea193bacec796b2d2cc50b1b1", "message": "add equality and inequality operators to User", "committedDate": "2020-03-18T19:13:03Z", "type": "commit"}, {"oid": "53b678da27466123a504c9c0429216c2891eff8d", "url": "https://github.com/rstudio/rstudio/commit/53b678da27466123a504c9c0429216c2891eff8d", "message": "add move operator and constructor to User", "committedDate": "2020-03-18T20:02:52Z", "type": "commit"}, {"oid": "7c514b2a7a64cabc58c53eab119981f71b7a45e0", "url": "https://github.com/rstudio/rstudio/commit/7c514b2a7a64cabc58c53eab119981f71b7a45e0", "message": "account for empty users in equality comparison", "committedDate": "2020-03-18T20:05:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5ODMxMw==", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394698313", "bodyText": "Is it intentional that we explicitly copy the members piece-by-piece rather than just relying on *m_impl = *in_other->m_impl or something similar? (Main worry is that it could be easy to forget to update this method if we were to add new members to the Impl struct)", "author": "kevinushey", "createdAt": "2020-03-18T23:33:07Z", "path": "src/cpp/shared_core/system/User.cpp", "diffHunk": "@@ -161,6 +166,48 @@ FilePath User::getUserHomePath(const std::string& in_envOverride)\n    return FilePath(getEnvVariable(\"HOME\"));\n }\n \n+User& User::operator=(const User& in_other)\n+{\n+   m_impl->Name = in_other.m_impl->Name;", "originalCommit": "7c514b2a7a64cabc58c53eab119981f71b7a45e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyMDczOQ==", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394720739", "bodyText": "I think that should be safe. I was probably just being overly untrusting of the compiler generated code at the time. I'll make that change.", "author": "MariaSemple", "createdAt": "2020-03-19T00:27:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5ODMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTAwMw==", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394699003", "bodyText": "I wonder if we could just use the default compiler-implemented move constructor here?", "author": "kevinushey", "createdAt": "2020-03-18T23:35:09Z", "path": "src/cpp/shared_core/include/shared_core/system/User.hpp", "diffHunk": "@@ -101,6 +101,13 @@ class User\n     */\n    User(const User& in_other);\n \n+   /**\n+    * @brief Move constructor.\n+    *\n+    * @param in_other   The user to move into this User.\n+    */\n+   User(User&& in_other) noexcept;", "originalCommit": "7c514b2a7a64cabc58c53eab119981f71b7a45e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTE0NA==", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394699144", "bodyText": "Similar question re: using compiler default.", "author": "kevinushey", "createdAt": "2020-03-18T23:35:32Z", "path": "src/cpp/shared_core/include/shared_core/system/User.hpp", "diffHunk": "@@ -131,6 +138,42 @@ class User\n     */\n    static Error getUserFromIdentifier(UidType in_userId, User& out_user);\n \n+   /**\n+    * @brief Overloaded assignment operator.\n+    *\n+    * @param in_other   The user to copy to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(const User& in_other);\n+\n+   /**\n+    * @brief Overloaded move operator.\n+    *\n+    * @param in_other   The user to move to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(User&& in_other) noexcept;", "originalCommit": "7c514b2a7a64cabc58c53eab119981f71b7a45e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyMDQyMg==", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394720422", "bodyText": "The compiler won't generate a default because User::User(const User&) and User& User::operator=(const User&) are implemented.", "author": "MariaSemple", "createdAt": "2020-03-19T00:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczNDc4OQ==", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394734789", "bodyText": "Sorry, I meant using = default to force the compiler to generate the default version.", "author": "kevinushey", "createdAt": "2020-03-19T01:14:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc0MDE1Mw==", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394740153", "bodyText": "Oh, that's a good point! Thanks!", "author": "MariaSemple", "createdAt": "2020-03-19T01:35:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTE0NA=="}], "type": "inlineReview"}, {"oid": "86c3f576a834d55523f78fc3dd4a7385e0f91db9", "url": "https://github.com/rstudio/rstudio/commit/86c3f576a834d55523f78fc3dd4a7385e0f91db9", "message": "rely on compiler generated copy constructor\n\nand handle nullptr edge cases just in case", "committedDate": "2020-03-19T01:34:29Z", "type": "commit"}, {"oid": "c225b6ea5ffa7be7d0a108c96531e66990fb0e9f", "url": "https://github.com/rstudio/rstudio/commit/c225b6ea5ffa7be7d0a108c96531e66990fb0e9f", "message": "use = default for move constructor/operator", "committedDate": "2020-03-19T01:59:01Z", "type": "commit"}]}