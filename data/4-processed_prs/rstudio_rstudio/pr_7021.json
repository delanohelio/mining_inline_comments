{"pr_number": 7021, "pr_title": "Insert Symbol in Visual Markdown Editor", "pr_createdAt": "2020-06-02T12:41:38Z", "pr_url": "https://github.com/rstudio/rstudio/pull/7021", "timeline": [{"oid": "790641ed77168e24fae5c763ad258f3422827030", "url": "https://github.com/rstudio/rstudio/commit/790641ed77168e24fae5c763ad258f3422827030", "message": "Basic Scaffolding for Insert Symbol\n\nInitial implementation for the scaffoling implementing insert symbol.", "committedDate": "2020-05-18T21:08:04Z", "type": "commit"}, {"oid": "575148aa8f77f096e827bc7be1b714393fc56c3f", "url": "https://github.com/rstudio/rstudio/commit/575148aa8f77f096e827bc7be1b714393fc56c3f", "message": "Convert to auto dismissing panel", "committedDate": "2020-05-19T14:05:09Z", "type": "commit"}, {"oid": "1b09664c62c45b0b9dd68dccbc02da47e10c8fc5", "url": "https://github.com/rstudio/rstudio/commit/1b09664c62c45b0b9dd68dccbc02da47e10c8fc5", "message": "Merge branch 'feature/panmirror-dev' into feature/panmirror-symbol-picker", "committedDate": "2020-05-19T14:07:24Z", "type": "commit"}, {"oid": "1af2a56d35b0ab3a6a427c690ecbb755fd4018f2", "url": "https://github.com/rstudio/rstudio/commit/1af2a56d35b0ab3a6a427c690ecbb755fd4018f2", "message": "Improved positioning\n\nImplement a basic version of the sizing and constrained positioning of the panels.", "committedDate": "2020-05-19T17:23:30Z", "type": "commit"}, {"oid": "6383a2ed55866b721b1d5503cce9c901999dff66", "url": "https://github.com/rstudio/rstudio/commit/6383a2ed55866b721b1d5503cce9c901999dff66", "message": "yarn add react-window\n\nAdd react-window, @types/react-window for use in grid control", "committedDate": "2020-05-20T17:27:40Z", "type": "commit"}, {"oid": "858a72ce618894cbdb68cebe3575f838ad31cfce", "url": "https://github.com/rstudio/rstudio/commit/858a72ce618894cbdb68cebe3575f838ad31cfce", "message": "Add JSONPlugin to Fuse", "committedDate": "2020-05-20T17:27:40Z", "type": "commit"}, {"oid": "1191915aa2a680ce429101d5395ad1ae70707dc2", "url": "https://github.com/rstudio/rstudio/commit/1191915aa2a680ce429101d5395ad1ae70707dc2", "message": "Implement Basic Functionality\n\nThis includes loading symbols from JSON, basic display and insertion of symbols, and filtering by category and name.\n\nUI is barebones functional but need massive improvements. Many loose ends.", "committedDate": "2020-05-20T17:29:48Z", "type": "commit"}, {"oid": "96817d17297d91d98f0f462fa4ef76aeccf06410", "url": "https://github.com/rstudio/rstudio/commit/96817d17297d91d98f0f462fa4ef76aeccf06410", "message": "react-window types", "committedDate": "2020-05-20T20:24:43Z", "type": "commit"}, {"oid": "688b2b968912d264808ef25f503824fadeda32e1", "url": "https://github.com/rstudio/rstudio/commit/688b2b968912d264808ef25f503824fadeda32e1", "message": "Improve Generation of Symbols", "committedDate": "2020-05-20T20:26:31Z", "type": "commit"}, {"oid": "a65a34b7b80af964c23e161f1fc7a350fb0d8855", "url": "https://github.com/rstudio/rstudio/commit/a65a34b7b80af964c23e161f1fc7a350fb0d8855", "message": "Merge branch 'feature/panmirror-dev' into feature/panmirror-symbol-picker", "committedDate": "2020-05-20T20:28:53Z", "type": "commit"}, {"oid": "414807f93daadb6ac820bcb3f30fbce9344caf1b", "url": "https://github.com/rstudio/rstudio/commit/414807f93daadb6ac820bcb3f30fbce9344caf1b", "message": "Import symbols from unicode.org\n\nSmall tool for downloading and importing data from unicode.org. Use the downloaded file to generate the set of symbols that we will support.", "committedDate": "2020-05-21T21:17:19Z", "type": "commit"}, {"oid": "7f9baea9209fd008add201d8b14abd7ac394c0b2", "url": "https://github.com/rstudio/rstudio/commit/7f9baea9209fd008add201d8b14abd7ac394c0b2", "message": "Sanity Checkpoint\n\n- End to end implementation is looking pretty reasonable\n- Keyboard handling mostly works", "committedDate": "2020-05-23T16:16:40Z", "type": "commit"}, {"oid": "8c50b96a1d1135b5238dea1010acaf88b78a8e18", "url": "https://github.com/rstudio/rstudio/commit/8c50b96a1d1135b5238dea1010acaf88b78a8e18", "message": "Improve Insert Symbol Appearance", "committedDate": "2020-05-26T13:00:57Z", "type": "commit"}, {"oid": "30212942f4a082491c45e08ffab31e27b7548961", "url": "https://github.com/rstudio/rstudio/commit/30212942f4a082491c45e08ffab31e27b7548961", "message": "Additional Code Cleanup\n\n- Move Symbol Categories in Groups that alias multiple categories\n- Rename react widgets\n- Improve unicode character parsing readability", "committedDate": "2020-05-26T16:10:23Z", "type": "commit"}, {"oid": "dc764c4be0541221fbdaec611d3276f3b1c60ac4", "url": "https://github.com/rstudio/rstudio/commit/dc764c4be0541221fbdaec611d3276f3b1c60ac4", "message": "Move filtering into data manager", "committedDate": "2020-05-26T16:20:07Z", "type": "commit"}, {"oid": "0905d7ab6deff914fec45731ed8fe4aa43c3f277", "url": "https://github.com/rstudio/rstudio/commit/0905d7ab6deff914fec45731ed8fe4aa43c3f277", "message": "Add \u2018no matching symbols\u2019 text", "committedDate": "2020-05-26T18:09:18Z", "type": "commit"}, {"oid": "695693627b1f4acbc408a9cd7c7b09f4ff833aa9", "url": "https://github.com/rstudio/rstudio/commit/695693627b1f4acbc408a9cd7c7b09f4ff833aa9", "message": "New search image", "committedDate": "2020-05-26T19:24:12Z", "type": "commit"}, {"oid": "ad640fc8809eeccd9771a33f227b6a255a4781f9", "url": "https://github.com/rstudio/rstudio/commit/ad640fc8809eeccd9771a33f227b6a255a4781f9", "message": "Separate Plugin/Extension from popup", "committedDate": "2020-05-26T19:35:30Z", "type": "commit"}, {"oid": "778087e7147e7516fb4cf1ddbe5cb4b49dc98e8b", "url": "https://github.com/rstudio/rstudio/commit/778087e7147e7516fb4cf1ddbe5cb4b49dc98e8b", "message": "Keyboard Handling and Focus", "committedDate": "2020-05-27T14:12:21Z", "type": "commit"}, {"oid": "b9cca34db3244ff1a7566fc0e59996a933223b71", "url": "https://github.com/rstudio/rstudio/commit/b9cca34db3244ff1a7566fc0e59996a933223b71", "message": "Remove disused code", "committedDate": "2020-05-27T14:15:37Z", "type": "commit"}, {"oid": "43477ae93e4276ea68ad65846ff712f30bdc00e8", "url": "https://github.com/rstudio/rstudio/commit/43477ae93e4276ea68ad65846ff712f30bdc00e8", "message": "Properly handle blur", "committedDate": "2020-05-27T15:50:14Z", "type": "commit"}, {"oid": "c085d40f6630df1f026e5b7db0108a480bd25897", "url": "https://github.com/rstudio/rstudio/commit/c085d40f6630df1f026e5b7db0108a480bd25897", "message": "Fix broken parseCodePoint", "committedDate": "2020-05-27T15:55:01Z", "type": "commit"}, {"oid": "edb3cb7c07e46fb79b041d08c9e7ae864eb6916c", "url": "https://github.com/rstudio/rstudio/commit/edb3cb7c07e46fb79b041d08c9e7ae864eb6916c", "message": "Adjust height to show entire bottom row by default", "committedDate": "2020-05-27T15:56:29Z", "type": "commit"}, {"oid": "7a57161902ff664258eebdc4456c81500f4eced9", "url": "https://github.com/rstudio/rstudio/commit/7a57161902ff664258eebdc4456c81500f4eced9", "message": "Improve codepoint parsing + don\u2019t emit undefined cells", "committedDate": "2020-05-27T19:20:56Z", "type": "commit"}, {"oid": "1e3f8939161680ac5823ac654cc6ee1fae5581bb", "url": "https://github.com/rstudio/rstudio/commit/1e3f8939161680ac5823ac654cc6ee1fae5581bb", "message": "Improved data format in anticipation of improved emoji support", "committedDate": "2020-05-27T20:50:44Z", "type": "commit"}, {"oid": "5f9898073a30b5b2fd5f2f7d7965e82c42c3c733", "url": "https://github.com/rstudio/rstudio/commit/5f9898073a30b5b2fd5f2f7d7965e82c42c3c733", "message": "Note emoji and whether modifiers are allowed", "committedDate": "2020-05-27T20:58:45Z", "type": "commit"}, {"oid": "d1dde98c40602c8544938dc940b9865170bc7339", "url": "https://github.com/rstudio/rstudio/commit/d1dde98c40602c8544938dc940b9865170bc7339", "message": "Add source code header comment", "committedDate": "2020-05-27T21:08:34Z", "type": "commit"}, {"oid": "52f9b29e45491047b712a4c546d9a5e0e9e41e6e", "url": "https://github.com/rstudio/rstudio/commit/52f9b29e45491047b712a4c546d9a5e0e9e41e6e", "message": "All Emoji are directed to the Emoji Group", "committedDate": "2020-05-27T21:09:08Z", "type": "commit"}, {"oid": "b0334b2c7fe0b63486467dd7f3255cf0585e9180", "url": "https://github.com/rstudio/rstudio/commit/b0334b2c7fe0b63486467dd7f3255cf0585e9180", "message": "Sort all by codepoint (eventually sort by sort order)", "committedDate": "2020-05-27T21:14:26Z", "type": "commit"}, {"oid": "1ad63089804310546c267e522e5663637fccbbd0", "url": "https://github.com/rstudio/rstudio/commit/1ad63089804310546c267e522e5663637fccbbd0", "message": "Add node-fetch dev dependency\n\nnode-fetch is a very lightweight promise oriented http library", "committedDate": "2020-05-28T20:56:30Z", "type": "commit"}, {"oid": "d4fafca8a0223a3118d4740e8ef9944df9da4cbb", "url": "https://github.com/rstudio/rstudio/commit/d4fafca8a0223a3118d4740e8ef9944df9da4cbb", "message": "Generate Symbols with emoji and simple schema", "committedDate": "2020-05-28T20:56:54Z", "type": "commit"}, {"oid": "1efba3d90bef35557022b1225642103b2b6a397b", "url": "https://github.com/rstudio/rstudio/commit/1efba3d90bef35557022b1225642103b2b6a397b", "message": "Make sure \u2018u+\u2019 is supported", "committedDate": "2020-05-28T20:58:24Z", "type": "commit"}, {"oid": "d5e1ce35f50b41a4f6adfa8e48042beca4d6b647", "url": "https://github.com/rstudio/rstudio/commit/d5e1ce35f50b41a4f6adfa8e48042beca4d6b647", "message": "Finalize 1.0 Symbol List\n\n-> All symbols render properly in our default font.\n-> Included the symbol blocks that I think are likely to be useful.", "committedDate": "2020-05-29T15:00:36Z", "type": "commit"}, {"oid": "fbd175a95d3b38bbb7e330c1f9829c5cc00ead46", "url": "https://github.com/rstudio/rstudio/commit/fbd175a95d3b38bbb7e330c1f9829c5cc00ead46", "message": "Add Grid Preview", "committedDate": "2020-05-29T19:17:18Z", "type": "commit"}, {"oid": "604ceda5cd3fd8aa5e688481cd6f7b502ba5dd53", "url": "https://github.com/rstudio/rstudio/commit/604ceda5cd3fd8aa5e688481cd6f7b502ba5dd53", "message": "Fix a handful of bugs", "committedDate": "2020-05-29T19:33:44Z", "type": "commit"}, {"oid": "0b5f04ee5ae30650f76f2d24e351bbdf36dd11ef", "url": "https://github.com/rstudio/rstudio/commit/0b5f04ee5ae30650f76f2d24e351bbdf36dd11ef", "message": "Merge remote-tracking branch 'origin/master' into feature/panmirror-symbol-picker", "committedDate": "2020-05-30T12:30:00Z", "type": "commit"}, {"oid": "461140f024618c3a82c62deb97b2a2cbdb492721", "url": "https://github.com/rstudio/rstudio/commit/461140f024618c3a82c62deb97b2a2cbdb492721", "message": "some initial comments", "committedDate": "2020-05-30T14:09:05Z", "type": "commit"}, {"oid": "3df7e6da2ed8661bbc733c627b1baebcde7ef598", "url": "https://github.com/rstudio/rstudio/commit/3df7e6da2ed8661bbc733c627b1baebcde7ef598", "message": "code review comments", "committedDate": "2020-05-31T11:07:35Z", "type": "commit"}, {"oid": "1462bb4f298f6140f4541b04568aa93c64ae69da", "url": "https://github.com/rstudio/rstudio/commit/1462bb4f298f6140f4541b04568aa93c64ae69da", "message": "Address Code Review Feedback", "committedDate": "2020-06-01T18:19:17Z", "type": "commit"}, {"oid": "865f4090e132b508663e4b200c0218c08cd78463", "url": "https://github.com/rstudio/rstudio/commit/865f4090e132b508663e4b200c0218c08cd78463", "message": "use lodash debounce", "committedDate": "2020-06-01T18:49:36Z", "type": "commit"}, {"oid": "597490951fc4f5c583e3ee8ac7a556ec9cd58c2c", "url": "https://github.com/rstudio/rstudio/commit/597490951fc4f5c583e3ee8ac7a556ec9cd58c2c", "message": "TODOS", "committedDate": "2020-06-01T18:49:48Z", "type": "commit"}, {"oid": "b000228950a195c1d2a83fb50f5d3489a861bbea", "url": "https://github.com/rstudio/rstudio/commit/b000228950a195c1d2a83fb50f5d3489a861bbea", "message": "Merge remote-tracking branch 'origin/feature/panmirror-dev' into feature/panmirror-symbol-picker", "committedDate": "2020-06-01T18:50:24Z", "type": "commit"}, {"oid": "832649e720628781ee7bfc9465074eae5ef841b0", "url": "https://github.com/rstudio/rstudio/commit/832649e720628781ee7bfc9465074eae5ef841b0", "message": "Cleanup element focus naming", "committedDate": "2020-06-01T21:34:07Z", "type": "commit"}, {"oid": "412dd87cb50074abfa825926caf57bdfc38951dc", "url": "https://github.com/rstudio/rstudio/commit/412dd87cb50074abfa825926caf57bdfc38951dc", "message": "use lodash", "committedDate": "2020-06-01T21:34:17Z", "type": "commit"}, {"oid": "cddfcec08a44a48d8dff1755aee09b111aaaad69", "url": "https://github.com/rstudio/rstudio/commit/cddfcec08a44a48d8dff1755aee09b111aaaad69", "message": "Small cleanup in positioning popup", "committedDate": "2020-06-01T21:35:15Z", "type": "commit"}, {"oid": "23632d9a0db8153832b19be76a8b101275c70a64", "url": "https://github.com/rstudio/rstudio/commit/23632d9a0db8153832b19be76a8b101275c70a64", "message": "Add \u2018Symbol\u2026\u2019 to the Insert Menu in RStudio\n\n(additionally remove the keyboard shortcut)", "committedDate": "2020-06-01T21:35:56Z", "type": "commit"}, {"oid": "96fbd14a974d9173274e08ac0813f7e40cf898d2", "url": "https://github.com/rstudio/rstudio/commit/96fbd14a974d9173274e08ac0813f7e40cf898d2", "message": "Improve preview timer behavior", "committedDate": "2020-06-02T12:05:38Z", "type": "commit"}, {"oid": "4021695ee30959c75e7b5d22d8a3a88ed6a2c2e3", "url": "https://github.com/rstudio/rstudio/commit/4021695ee30959c75e7b5d22d8a3a88ed6a2c2e3", "message": "Improve positioning of panel", "committedDate": "2020-06-02T12:14:27Z", "type": "commit"}, {"oid": "897f88207963f3f9f10aadf1297f0599b1b1b19f", "url": "https://github.com/rstudio/rstudio/commit/897f88207963f3f9f10aadf1297f0599b1b1b19f", "message": "Fix lint in generate-symbols", "committedDate": "2020-06-02T12:18:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxNDI4Ng==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434014286", "bodyText": "The easiest way I know to do this is with ts-node.\nyarn add --dev ts-node\n\nThen change the command to:\nts-node -T tools/generate-symbols.ts\n\nts-node approximates \"a node interpreter that understands typescript\", sometimes the seams show through but most of the time it works pretty nicely.\nThe -T is necessary because generate-symbols.ts doesn't seem to pass type check, the @types/node-fetch is missing and even after I added that I got some compiler errors. If you add --strict to your tsc invocation, you'll see those same errors; fix them and you can drop -T.", "author": "jcheng5", "createdAt": "2020-06-02T16:31:15Z", "path": "src/gwt/panmirror/src/editor/package.json", "diffHunk": "@@ -46,23 +49,30 @@\n     \"prosemirror-view\": \"^1.14.9\",\n     \"react\": \"^16.13.1\",\n     \"react-dom\": \"^16.13.1\",\n+    \"react-window\": \"^1.8.5\",\n     \"tlite\": \"^0.1.9\",\n     \"typescript\": \"3.8.3\",\n     \"zenscroll\": \"^4.0.2\"\n   },\n   \"scripts\": {\n     \"format\": \"prettier --write \\\"src/**/*.ts\\\" \\\"src/**/*.tsx\\\"\",\n     \"lint\": \"tslint -c tslint.json 'src/**/*.{ts,tsx}'\",\n-    \"watch\": \"tsc --watch --noEmit --project './tsconfig.json'\"\n+    \"watch\": \"tsc --watch --noEmit --project './tsconfig.json'\",\n+    \"generate-symbols\": \"tsc --types node --lib es2015,dom \\\"tools/generate-symbols.ts\\\";node \\\"tools/generate-symbols.js\\\"; rm -rf \\\"tools/generate-symbols.js\\\"\"", "originalCommit": "897f88207963f3f9f10aadf1297f0599b1b1b19f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxNzA4Nw==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434017087", "bodyText": "Oh, one of the compiler errors is because\nimport * as fetch from 'node-fetch';\n\nshould be\nimport fetch from 'node-fetch';\n\nThen there are a couple of trivial ones related to null checking.", "author": "jcheng5", "createdAt": "2020-06-02T16:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxNDI4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxODk3OQ==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434018979", "bodyText": "I think process.exit(1) would be appropriate after this line", "author": "jcheng5", "createdAt": "2020-06-02T16:38:28Z", "path": "src/gwt/panmirror/src/editor/tools/generate-symbols.ts", "diffHunk": "@@ -0,0 +1,337 @@\n+/*\n+ * generate-symbols.ts\n+ *\n+ * Copyright (C) 2019-20 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+\n+import * as fetch from 'node-fetch';\n+import * as fs from 'fs';\n+import * as os from 'os';\n+import * as unzip from 'unzip';\n+import * as parser from 'fast-xml-parser';\n+\n+// This will enforce the 'age' of the unicode characters and only allow characters\n+// with an age less than or equal to this age.\n+const maxUnicodeAge = 6.0;\n+\n+// The file that should be generated holding the symbol data\n+const outputFile = './src/behaviors/insert_symbol/symbols.json';\n+\n+// The names of blocks of unicode characters to be scan for characters to include.\n+// Blocks will only be included if characters from that block are selected (e.g. characters)\n+// might not meet the maxUnicodeVersion requirement, may be depcrecated or so on).\n+const groupToBlockMapping = [\n+  {\n+    alias: 'Miscellaneous',\n+    blocks: ['Latin-1 Supplement', 'Enclosed Alphanumerics', 'Dingbats', 'Miscellaneous Symbols', 'Letterlike Symbols'],\n+  },\n+  {\n+    alias: 'Mathematical',\n+    blocks: [\n+      'Mathematical Operators',\n+      'Miscellaneous Mathematical Symbols-A',\n+      'Miscellaneous Mathematical Symbols-B',\n+      'Supplemental Mathematical Operators',\n+      'Mathematical Alphanumeric Symbols',\n+    ],\n+  },\n+  {\n+    alias: 'Punctuation',\n+    blocks: ['Supplemental Punctuation'],\n+  },\n+  {\n+    alias: 'Technical',\n+    blocks: ['Miscellaneous Technical'],\n+  },\n+  {\n+    alias: 'Arrows',\n+    blocks: ['Miscellaneous Symbols and Arrows', 'Supplemental Arrows-A', 'Supplemental Arrows-B'],\n+  },\n+  {\n+    alias: 'Ancient',\n+    blocks: ['Ancient Symbols', 'Ancient Greek Numbers'],\n+  },\n+  {\n+    alias: 'Braille',\n+    blocks: ['Braille Patterns'],\n+  },\n+  {\n+    alias: 'Currency',\n+    blocks: ['Currency Symbols'],\n+  },\n+  {\n+    alias: 'Game Symbols',\n+    blocks: ['Mahjong Tiles', 'Domino Tiles', 'Playing Cards', 'Chess Symbols'],\n+  },\n+  {\n+    alias: 'Music',\n+    blocks: ['Musical Symbols'],\n+  },\n+  {\n+    alias: 'Geometric Shapes',\n+    blocks: ['Geometric Shapes', 'Geometric Shapes Extended'],\n+  },\n+  {\n+    alias: 'Ideographic',\n+    blocks: ['Ideographic Description Characters', 'Ideographic Symbols and Punctuation'],\n+  }\n+];\n+\n+// These characters are excluded because they don't render properly in the default font. \n+// Consider re-enabling them as address font issues with unicode.\n+const excludedChars = [\n+  160, // no-break space\n+  65860,65861,65910,65911,65912,65923,65927,65928,65929,65931,65932,65933,65934, // Ancient Characters\n+  11094,11095,11096,11097, // Arrows\n+  10190,10191,120778,120779, // Mathematical\n+  9885,9886,9887,9907,9908,9909,9910,9911,9912,9913,9914,9915,9916,9919,9920,9921,\n+  9922,9923,9926,9927,9929,9930,9932,9933,9936,9938,9941,9942,9943,9944,9945,9946,\n+  9947,9948,9949,9950,9951,9952,9953,9955,9956,9957,9958,9959,9960,9963,9964,9965,\n+  9966,9967,9974,9979,9980,9982,9983,10079,10080, // Miscellaneous\n+  9192, // technical\n+  11801, // punctuation\n+  119049,119050,119051,119052,119053,119054,119055,119059,119060,119061,119062,119063,\n+  119064,119065,119066,119067,119068,119069,119071,119072,119075,119076,119077,119078,\n+  119081,119084,119085,119086,119087,119088,119089,119090,119091,119092,119093,119094,\n+  119095,119096,119097,119098,119099,119100,119101,119102,119103,119104,119105,119106,\n+  119107,119108,119109,119110,119111,119112,119113,119114,119115,119116,119117,119118,\n+  119119,119120,119121,119122,119123,119124,119125,119126,119127,119128,119129,119130,\n+  119131,119132,119133,119134,119135,119136,119137,119138,119139,119140,119141,119142,\n+  119143,119144,119145,119146,119147,119148,119149,119150,119151,119152,119153,119154,\n+  119163,119164,119165,119166,119167,119168,119169,119170,119171,119172,119173,119174,\n+  119175,119176,119177,119178,119179,119180,119181,119182,119183,119184,119185,119188,\n+  119189,119190,119191,119192,119193,119194,119195,119196,119197,119198,119199,119200,\n+  119201,119202,119203,119204,119205,119209,119210,119211,119212,119213,119214,\n+  119215,119216,119217,119218,119219,119220,119221,119222,119223,119224,119225,119226,\n+  119227,119228,119229,119230,119231,119232,119233,119234,119235,119236,119237,119238,\n+  119247,119248,119249,119250,119251,119252,119253,119254,119255,119256,119257,119258,\n+  119259,119260,119261, // musical symbols\n+\n+\n+];\n+\n+// Basic file paths to use when downloading and generating the file. These files will be cleaned up\n+// upon completion.\n+const workingDirectory = os.tmpdir();\n+const targetFileName = 'ucd.nounihan.flat';\n+const targetZipFile = `${workingDirectory}/${targetFileName}.zip`;\n+const targetXmlFile = `${workingDirectory}/${targetFileName}.xml`;\n+\n+// The path that will be used to download the unicode file. This is currently\n+// set to always downlod the latest. The maxUnicodeVersion attribute of each\n+// character is used to decide which characters to include rather than the unicode database\n+// version\n+const unicodeDownloadPath = `https://www.unicode.org/Public/UCD/latest/ucdxml/${targetFileName}.zip`;\n+\n+// Remove any orphaned intermediary files\n+cleanupFiles([targetXmlFile, targetZipFile], true);\n+\n+fetch(unicodeDownloadPath, {method: 'GET'})\n+.then((res) => {\n+  // Download the file\n+  return new Promise<string>((resolve, reject) => {\n+    const file = fs.createWriteStream(targetZipFile);\n+    res.body.on('finish', () => resolve(targetZipFile));\n+    res.body.pipe(file);\n+    file.on('error', reject);\n+  });\n+})\n+.then(() => {\n+  // Unzip the file\n+  return new Promise((resolve, reject) => {\n+    info('Unzipping File', targetZipFile);\n+    const readStream = fs.createReadStream(targetZipFile);\n+    const writeStream = unzip.Extract({ path: workingDirectory });\n+    writeStream.on('error', reject);\n+    writeStream.on('close', () => {\n+      info('Done unzipping', '');\n+      resolve(outputFile);     \n+    });\n+    readStream.pipe(writeStream);\n+  });    \n+})\n+.then(() => {\n+  // Parse XML -> Json\n+  info('Parsing', targetXmlFile);\n+  const fileContents = fs.readFileSync(targetXmlFile, 'utf8');\n+  const options = {\n+    ignoreAttributes: false,\n+    arrayMode: false,\n+  };\n+  const tObj = parser.getTraversalObj(fileContents, options);\n+  const jsonResult = parser.convertToJson(tObj, options);\n+  info('Done Parsing', '');\n+  return jsonResult;\n+})\n+.then((jsonResult) => {\n+  // Read the block from the XML file and generate typed data\n+  info('Reading Raw Data'); \n+  const allIncludedBlocks: Block[] = parseBlocks(jsonResult.ucd.blocks.block);\n+  const allValidSymbols: Character[] = parseSymbols(jsonResult.ucd.repertoire.char);\n+  info(' Blocks ' + allIncludedBlocks.length);\n+  info(' Chars ' + allValidSymbols.length);\n+  info('');\n+\n+  info('Generating Output Data');\n+  const symbolGroups: Group[] = new Array<Group>();\n+  groupToBlockMapping.forEach(mapping => {\n+    const groupName = mapping.alias;\n+    const groupSymbols = allValidSymbols.filter(symbol => {\n+        // Find the child blocks for this Group and use the codepoint to determine\n+        // whether this symbol should be included in this group\n+        const matchingBlockName = mapping.blocks.find(blockName => {\n+          const matchingBlock = allIncludedBlocks.find(block => block.name === blockName);\n+          return symbol.codepoint >= matchingBlock.codepointFirst && symbol.codepoint <= matchingBlock.codepointLast;\n+        });\n+\n+        return matchingBlockName != null;\n+    });\n+    info('Group ' + groupName + ' -> ' + groupSymbols.length + ' symbols');   \n+    symbolGroups.push({ name: groupName, symbols: groupSymbols });\n+  });\n+  info('');\n+  return symbolGroups;\n+})\n+.then((symbolGroups) => {\n+  // Filter out any groups with no valid characters\n+  return symbolGroups.filter(blockGroup => blockGroup.symbols.length > 0);\n+})\n+.then((symbolGroups) => {\n+  // Write the output file\n+  info('Writing output', outputFile);\n+  cleanupFiles([outputFile], false);\n+  const finalJson = JSON.stringify(symbolGroups, null, 2);\n+  fs.writeFileSync(outputFile, finalJson);\n+\n+\n+  const countSymbols = symbolGroups.reduce((count, symbolGroup) => {\n+    return count + symbolGroup.symbols.length;\n+  }, 0);\n+  info(countSymbols + \" total symbols generated\");\n+  info('Done', '');\n+})\n+.catch((message: any) => {\n+  error(message);", "originalCommit": "897f88207963f3f9f10aadf1297f0599b1b1b19f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAyNDg0NQ==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434024845", "bodyText": "I'm surprised to see any in the type signature here, does HTMLInputElement not work?", "author": "jcheng5", "createdAt": "2020-06-02T16:47:59Z", "path": "src/gwt/panmirror/src/editor/src/api/widgets/text.tsx", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * text.tsx\n+ *\n+ * Copyright (C) 2019-20 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+\n+import React, { ChangeEventHandler, KeyboardEventHandler } from 'react';\n+\n+import { WidgetProps } from './react';\n+\n+import './text.css';\n+\n+export interface TextInputProps extends WidgetProps {\n+  widthChars: number;\n+  tabIndex?: number;\n+  className?: string;\n+  placeholder?: string;\n+  iconAdornment? : string;\n+  onChange?: ChangeEventHandler;\n+  onKeyDown?: KeyboardEventHandler<HTMLInputElement>;\n+  onKeyUp?: KeyboardEventHandler<HTMLInputElement>;\n+}\n+\n+export const TextInput = React.forwardRef<any, TextInputProps>((props, ref) => {", "originalCommit": "897f88207963f3f9f10aadf1297f0599b1b1b19f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4MDY2NA==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434580664", "bodyText": "Nope just an error on my part (similar error in select.tsx as well). Resolved thx for catching!", "author": "dragonstyle", "createdAt": "2020-06-03T13:48:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAyNDg0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA1NzcyNw==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434057727", "bodyText": "switch to dash not underscore", "author": "dragonstyle", "createdAt": "2020-06-02T17:42:40Z", "path": "src/gwt/panmirror/src/editor/src/behaviors/insert_symbol/insert_symbol.tsx", "diffHunk": "@@ -0,0 +1,179 @@\n+/*\n+ * insert_symbol.tsx\n+ *\n+ * Copyright (C) 2019-20 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+\n+import { Schema } from 'prosemirror-model';\n+import { EditorState, Transaction, Plugin, PluginKey } from 'prosemirror-state';\n+import { EditorView } from 'prosemirror-view';\n+\n+import React from 'react';\n+import ReactDOM from 'react-dom';\n+\n+import { ProsemirrorCommand, EditorCommandId } from '../../api/command';\n+import { applyStyles } from '../../api/css';\n+import { EditorEvents, EditorEvent } from '../../api/events';\n+import { Extension } from '../../api/extension';\n+import { EditorFormat } from '../../api/format';\n+import { canInsertNode } from '../../api/node';\n+import { EditorOptions } from '../../api/options';\n+import { PandocExtensions } from '../../api/pandoc';\n+import { PandocCapabilities } from '../../api/pandoc_capabilities';\n+import { EditorUI } from '../../api/ui';\n+\n+import { InsertSymbolPopup } from './insert_symbol-popup';\n+\n+const key = new PluginKey<boolean>('insert_symbol');", "originalCommit": "897f88207963f3f9f10aadf1297f0599b1b1b19f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA3Njc0Nw==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434076747", "bodyText": "forward the classname as well?", "author": "dragonstyle", "createdAt": "2020-06-02T18:09:40Z", "path": "src/gwt/panmirror/src/editor/src/behaviors/insert_symbol/insert_symbol-popup.tsx", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * insert_symbol-popup.tsx\n+ *\n+ * Copyright (C) 2019-20 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+\n+import { WidgetProps } from '../../api/widgets/react';\n+import React, { ChangeEvent } from 'react';\n+import SymbolDataManager, { kCategoryAll, SymbolCharacter, SymbolCharacterGroup } from './insert_symbol-data';\n+import { isElementFocused, focusElement } from '../../api/focus';\n+import { Popup } from '../../api/widgets/popup';\n+import { TextInput } from '../../api/widgets/text';\n+import { SelectInput } from '../../api/widgets/select';\n+import SymbolCharacterGrid, { newIndexForKeyboardEvent } from './insert_symbol-grid';\n+\n+import './insert_symbol-styles.css';\n+\n+const symbolDataManager = new SymbolDataManager();\n+\n+interface InsertSymbolPopupProps extends WidgetProps {\n+  enabled: boolean;\n+  size: [number, number];\n+  searchImage?: string;\n+  onInsertText: (text: string) => void;\n+  onClose: VoidFunction;\n+}\n+\n+export const InsertSymbolPopup: React.FC<InsertSymbolPopupProps> = props => {", "originalCommit": "897f88207963f3f9f10aadf1297f0599b1b1b19f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEwOTY2OA==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434109668", "bodyText": "Is this redundant to the very similar useEffect a few lines up?", "author": "jcheng5", "createdAt": "2020-06-02T19:00:08Z", "path": "src/gwt/panmirror/src/editor/src/behaviors/insert_symbol/insert_symbol-grid.tsx", "diffHunk": "@@ -0,0 +1,237 @@\n+/*\n+ * insert_symbol-grid.tsx\n+ *\n+ * Copyright (C) 2019-20 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+\n+import React from 'react';\n+import { FixedSizeGrid } from 'react-window';\n+\n+import debounce from 'lodash.debounce';\n+\n+import { CharacterGridCellItemData, SymbolCharacterCell } from './insert_symbol-grid-cell';\n+import { SymbolCharacter } from './insert_symbol-data';\n+import { SymbolPreview } from './insert_symbol-grid-preview';\n+import { WidgetProps } from '../../api/widgets/react';\n+\n+import './insert_symbol-grid-styles.css';\n+\n+interface CharacterGridProps extends WidgetProps {\n+  height: number;\n+  width: number;\n+  numberOfColumns: number;\n+  symbolCharacters: SymbolCharacter[];\n+  selectedIndex: number;\n+  onSelectionChanged: (selectedIndex: number) => void;\n+  onSelectionCommitted: VoidFunction;\n+}\n+\n+const kPreviewHeight = 120;\n+const kPreviewWidth = 140;\n+const selectedItemClassName = 'pm-grid-item-selected';\n+\n+\n+\n+const SymbolCharacterGrid = React.forwardRef<any, CharacterGridProps>((props, ref) => {\n+\n+  const columnWidth = Math.floor(props.width / props.numberOfColumns);\n+  const characterCellData: CharacterGridCellItemData = {\n+    symbolCharacters: props.symbolCharacters,\n+    numberOfColumns: props.numberOfColumns,\n+    selectedIndex: props.selectedIndex,\n+    onSelectionChanged: props.onSelectionChanged,\n+    onSelectionCommitted: props.onSelectionCommitted,\n+    selectedItemClassName,\n+  };\n+\n+  const gridRef = React.useRef<FixedSizeGrid>(null);\n+  const handleScroll = debounce(() => {\n+    gridRef.current?.scrollToItem({ rowIndex: Math.floor(props.selectedIndex / props.numberOfColumns) });\n+  }, 5);\n+\n+  React.useEffect(handleScroll, [props.selectedIndex]);\n+\n+  const handleMouseLeave = (event: React.MouseEvent) => {\n+    setMayShowPreview(false);\n+    setShowPreview(false);\n+  };\n+\n+  const handleMouseEnter = (event: React.MouseEvent) => {\n+    setMayShowPreview(true);\n+  };\n+\n+  const handleKeyDown = (event: React.KeyboardEvent) => {\n+    const newIndex = newIndexForKeyboardEvent(\n+      event,\n+      props.selectedIndex,\n+      props.numberOfColumns,\n+      props.symbolCharacters.length,\n+    );\n+    if (newIndex !== undefined) {\n+      props.onSelectionChanged(newIndex);\n+      event.preventDefault();\n+      setMayShowPreview(true);\n+    }\n+  };\n+\n+  const [previewPosition, setPreviewPosition] = React.useState<[number, number]>([0, 0]);\n+  const [showPreview, setShowPreview] = React.useState<boolean>(false);\n+  const [mayShowPreview, setMayShowPreview] = React.useState<boolean>(false);\n+\n+  React.useEffect(() => {\n+    if (mayShowPreview) {\n+      updatePreviewPosition();\n+      maybeShowPreview();\n+    }\n+  }, [props.selectedIndex, mayShowPreview]);\n+\n+  React.useEffect(() => {\n+    if (props.symbolCharacters.length < 1) {\n+      setShowPreview(false);\n+    }\n+  }, [props.symbolCharacters]);\n+  \n+  React.useEffect(() => {\n+    maybeShowPreview();\n+  }, [mayShowPreview]);", "originalCommit": "897f88207963f3f9f10aadf1297f0599b1b1b19f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExOTcyMQ==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434119721", "bodyText": "I haven't used it before but I think useMemo was designed for this.\nconst symbols = useMemo(\n  () => symbolDataManager.getSymbols(selectedSymbolGroup),\n  [selectedSymbolGroup]\n); \nconst filteredSymbols = useMemo(\n  () => symbolDataManager.filterSymbols(filterText, symbols),\n  [filterText, symbols]\n);\nIt's nice because it makes it clear that the values of symbols and filteredSymbols are purely derived from their inputs, rather than having their own independent statefulness.", "author": "jcheng5", "createdAt": "2020-06-02T19:17:02Z", "path": "src/gwt/panmirror/src/editor/src/behaviors/insert_symbol/insert_symbol-popup.tsx", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * insert_symbol-popup.tsx\n+ *\n+ * Copyright (C) 2019-20 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+\n+import { WidgetProps } from '../../api/widgets/react';\n+import React, { ChangeEvent } from 'react';\n+import SymbolDataManager, { kCategoryAll, SymbolCharacter, SymbolCharacterGroup } from './insert_symbol-data';\n+import { isElementFocused, focusElement } from '../../api/focus';\n+import { Popup } from '../../api/widgets/popup';\n+import { TextInput } from '../../api/widgets/text';\n+import { SelectInput } from '../../api/widgets/select';\n+import SymbolCharacterGrid, { newIndexForKeyboardEvent } from './insert_symbol-grid';\n+\n+import './insert_symbol-styles.css';\n+\n+const symbolDataManager = new SymbolDataManager();\n+\n+interface InsertSymbolPopupProps extends WidgetProps {\n+  enabled: boolean;\n+  size: [number, number];\n+  searchImage?: string;\n+  onInsertText: (text: string) => void;\n+  onClose: VoidFunction;\n+}\n+\n+export const InsertSymbolPopup: React.FC<InsertSymbolPopupProps> = props => {\n+  const kPopupChromeHeight = 25;\n+  const popupHeight = props.size[0] - kPopupChromeHeight;\n+  const popupWidth = props.size[1];\n+  const style: React.CSSProperties = {\n+    ...props.style,\n+    height: popupHeight + 'px',\n+    width: popupWidth + 'px',\n+  };\n+\n+  const gridHeight = popupHeight - 48;\n+  const gridWidth = popupWidth;\n+  const kNumberOfcolumns = 12;\n+\n+  const [filterText, setFilterText] = React.useState<string>('');\n+  const [selectedSymbolGroup, setSelectedSymbolGroup] = React.useState<string>(kCategoryAll);\n+  const [selectedSymbolIndex, setSelectedSymbolIndex] = React.useState<number>(0);\n+  const [symbols, setSymbols] = React.useState<SymbolCharacter[]>([]);\n+  const [filteredSymbols, setFilteredSymbols] = React.useState<SymbolCharacter[]>(symbols);\n+\n+  React.useEffect(() => {\n+    const symbolsForGroup: SymbolCharacter[] = symbolDataManager.getSymbols(selectedSymbolGroup);\n+    setSymbols(symbolsForGroup);\n+  }, [selectedSymbolGroup]);\n+\n+  React.useEffect(() => {\n+    setFilteredSymbols(symbolDataManager.filterSymbols(filterText, symbols));\n+  }, [filterText, symbols]);", "originalCommit": "897f88207963f3f9f10aadf1297f0599b1b1b19f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU3OTIyNA==", "url": "https://github.com/rstudio/rstudio/pull/7021#discussion_r434579224", "bodyText": "Great improvement, thank you.", "author": "dragonstyle", "createdAt": "2020-06-03T13:46:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExOTcyMQ=="}], "type": "inlineReview"}, {"oid": "664c00c398b31e13f4b5d86c9eb4abbf918747be", "url": "https://github.com/rstudio/rstudio/commit/664c00c398b31e13f4b5d86c9eb4abbf918747be", "message": "Merge remote-tracking branch 'origin/feature/panmirror-dev' into feature/panmirror-symbol-picker", "committedDate": "2020-06-02T19:43:14Z", "type": "commit"}, {"oid": "b474ee3613bb90312aca9213793017240fe3fcfa", "url": "https://github.com/rstudio/rstudio/commit/b474ee3613bb90312aca9213793017240fe3fcfa", "message": "add fragment.ts", "committedDate": "2020-06-02T19:46:38Z", "type": "commit"}, {"oid": "a03e436deccb1dae10d02fbc3a99a25fb94955ea", "url": "https://github.com/rstudio/rstudio/commit/a03e436deccb1dae10d02fbc3a99a25fb94955ea", "message": "Merge remote-tracking branch 'origin/feature/panmirror-dev' into feature/panmirror-symbol-picker", "committedDate": "2020-06-02T19:47:44Z", "type": "commit"}, {"oid": "444ecdc16b15b0e6eefaa0651c9c1d6f0530813d", "url": "https://github.com/rstudio/rstudio/commit/444ecdc16b15b0e6eefaa0651c9c1d6f0530813d", "message": "Simplify generation of symbols and resolve errors", "committedDate": "2020-06-03T13:35:30Z", "type": "commit"}, {"oid": "1b3941fa1548ba302cb9a11e561155e2a3fed1dc", "url": "https://github.com/rstudio/rstudio/commit/1b3941fa1548ba302cb9a11e561155e2a3fed1dc", "message": "Address Code Review Feedback\n\n- Memoize symbols and filtering\n- speed up preview display\n- other small nits and errors fixed", "committedDate": "2020-06-03T13:49:35Z", "type": "commit"}, {"oid": "064d32def838ace714cd649798bea4f4563ac879", "url": "https://github.com/rstudio/rstudio/commit/064d32def838ace714cd649798bea4f4563ac879", "message": "Fix selection and previewing issues as data is filtered", "committedDate": "2020-06-03T15:15:29Z", "type": "commit"}, {"oid": "0dbaf9dfa70cf612d8a6baba67e12b029086e89f", "url": "https://github.com/rstudio/rstudio/commit/0dbaf9dfa70cf612d8a6baba67e12b029086e89f", "message": "fix whitespace in panmirror commands", "committedDate": "2020-06-03T19:41:20Z", "type": "commit"}]}