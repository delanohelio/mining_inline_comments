{"pr_number": 6520, "pr_title": "allow configuring graphics device type, antialias", "pr_createdAt": "2020-03-24T23:06:53Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6520", "timeline": [{"oid": "61cdb6f8690bed357e8a8f36cc284cd701ae2bc4", "url": "https://github.com/rstudio/rstudio/commit/61cdb6f8690bed357e8a8f36cc284cd701ae2bc4", "message": "allow configuring graphics device type, antialias", "committedDate": "2020-03-24T22:35:01Z", "type": "commit"}, {"oid": "b68ad72320ebe433670b4984b8c6a81c6666dc37", "url": "https://github.com/rstudio/rstudio/commit/b68ad72320ebe433670b4984b8c6a81c6666dc37", "message": "guard against 'windows' on non-Windows machine", "committedDate": "2020-03-24T22:41:29Z", "type": "commit"}, {"oid": "db8923119a66671c1ce2f1568935c547961d2fd1", "url": "https://github.com/rstudio/rstudio/commit/db8923119a66671c1ce2f1568935c547961d2fd1", "message": "define shared constants", "committedDate": "2020-03-24T22:57:32Z", "type": "commit"}, {"oid": "d4f6451bd3a455592c964a1cb4c27c446a53d13c", "url": "https://github.com/rstudio/rstudio/commit/d4f6451bd3a455592c964a1cb4c27c446a53d13c", "message": "fixup antialias for Windows", "committedDate": "2020-03-24T23:06:31Z", "type": "commit"}, {"oid": "ac6f96a008770911ea6b862ef0b76c1de698d786", "url": "https://github.com/rstudio/rstudio/commit/ac6f96a008770911ea6b862ef0b76c1de698d786", "message": "sync with prefs on load", "committedDate": "2020-03-25T04:03:26Z", "type": "commit"}, {"oid": "cd96a8e0b3c72a745fe3c70c7d0b399229071d6b", "url": "https://github.com/rstudio/rstudio/commit/cd96a8e0b3c72a745fe3c70c7d0b399229071d6b", "message": "change antialias for both default, windows", "committedDate": "2020-03-25T04:06:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA4NTkwNg==", "url": "https://github.com/rstudio/rstudio/pull/6520#discussion_r398085906", "bodyText": "Do we also need to e.g. ignore cairo if the pref was set on a machine that had cairo but then read on a machine that didn't? (feels like we should just get the set of supported backends here and double check that the pref is included)", "author": "jmcphers", "createdAt": "2020-03-25T18:40:14Z", "path": "src/cpp/r/session/graphics/RGraphicsUtils.cpp", "diffHunk": "@@ -150,29 +154,48 @@ bool validateRequirements(std::string* pMessage)\n \n std::string extraBitmapParams()\n {\n-#if defined(_WIN32)\n-\n-   // no extra params for windows\n-\n-#elif defined(__APPLE__)\n-\n-   return \", type = \\\"quartz\\\", antialias=\\\"default\\\"\";\n-\n-#else\n-\n-   // if bitmapType is Xlib then force cairo if we can\n-   if (r::options::getOption<std::string>(\"bitmapType\") == \"Xlib\")\n-   {\n-      if (r::util::hasRequiredVersion(\"2.14\") &&\n-          r::util::hasCapability(\"cairo\"))\n-      {\n-         return \", type = \\\"cairo\\\"\";\n-      }\n-   }\n-\n+   std::vector<std::string> params;\n+   \n+   std::string backend = r::options::getOption<std::string>(\n+            kGraphicsOptionBackend,\n+            \"default\",\n+            false);\n+   \n+#ifndef __APPLE__\n+   // silently ignore 'quartz' on non-macOS platforms\n+   // (assume this would arise if one copied UI prefs across different machines)\n+   if (backend == \"quartz\")\n+      backend = \"default\";\n+#endif\n+   \n+#ifndef _WIN32\n+   // silently ignore 'windows' on non-Windows platforms\n+   // (assume this would arise if one copied UI prefs across different machines)\n+   if (backend == \"windows\")\n+      backend = \"default\";\n+#endif\n+   ", "originalCommit": "cd96a8e0b3c72a745fe3c70c7d0b399229071d6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cd720f586eaac9b674785e713542b3ec3b2af24f", "url": "https://github.com/rstudio/rstudio/commit/cd720f586eaac9b674785e713542b3ec3b2af24f", "message": "validate that we have a supported backend", "committedDate": "2020-03-25T20:59:27Z", "type": "commit"}]}