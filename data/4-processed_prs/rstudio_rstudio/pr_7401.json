{"pr_number": 7401, "pr_title": "Properly resize buffer during group enumeration", "pr_createdAt": "2020-07-21T16:32:20Z", "pr_url": "https://github.com/rstudio/rstudio/pull/7401", "timeline": [{"oid": "40bf0013fba24aaece074ed52cbed8f2567c9549", "url": "https://github.com/rstudio/rstudio/commit/40bf0013fba24aaece074ed52cbed8f2567c9549", "message": "Fix bug where user group enumeration was not properly checking return code of getgrouplist to resize the buffer when needed. Fixes https://github.com/rstudio/rstudio-pro/issues/1796", "committedDate": "2020-07-21T16:30:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NDE1MQ==", "url": "https://github.com/rstudio/rstudio/pull/7401#discussion_r458264151", "bodyText": "FWIW I think we can remove the while loop here and just have two explicit calls to getgrouplist(). If I'm reading the documentation correctly, if the function returns -1, then the real required number of groups will be written to &numGroups and we can just make one more call with that value. (It also gives us a chance to sanity-check the second call to getgrouplist(), which should in theory never fail)", "author": "kevinushey", "createdAt": "2020-07-21T17:22:52Z", "path": "src/cpp/core/system/PosixGroup.cpp", "diffHunk": "@@ -121,13 +117,12 @@ Error userGroups(const std::string& userName, std::vector<Group>* pGroups)\n    typedef int GIDTYPE;\n #endif\n \n-   boost::shared_ptr<GIDTYPE> pGids(new GIDTYPE[100]);\n-   while (!getgrouplist(userName.c_str(), user.getGroupId(), pGids.get(), &numGroups))\n+   // get the groups for the user - we start with 100 groups which should be enough for most cases\n+   // if it is not, resize the buffer with the correct amount of groups and try again\n+   int numGroups = 100;\n+   boost::shared_ptr<GIDTYPE> pGids(new GIDTYPE[numGroups]);\n+   while (getgrouplist(userName.c_str(), user.getGroupId(), pGids.get(), &numGroups) == -1)", "originalCommit": "40bf0013fba24aaece074ed52cbed8f2567c9549", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NjkwNA==", "url": "https://github.com/rstudio/rstudio/pull/7401#discussion_r458266904", "bodyText": "Yes, I thought of doing that as well but figured it was ok to leave as is. I'll update with this change.", "author": "kfeinauer", "createdAt": "2020-07-21T17:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NDE1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3MzA3OA==", "url": "https://github.com/rstudio/rstudio/pull/7401#discussion_r458273078", "bodyText": "I am torn though because this introduces the possibility of the following sequence:\n\nInitial call to getgrouplist\nUser is added to another group via some other mechanism\nSecond call to getgrouplist still fails, since the count parameter is wrong\n\nThis is not likely but it is one of the reasons I decided to keep the while loop - what do you think?", "author": "kfeinauer", "createdAt": "2020-07-21T17:37:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NDE1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4MzQ2MA==", "url": "https://github.com/rstudio/rstudio/pull/7401#discussion_r458283460", "bodyText": "Ah, that's a very good point. I think that's motivation enough to keep things as-is.", "author": "kevinushey", "createdAt": "2020-07-21T17:54:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NDE1MQ=="}], "type": "inlineReview"}, {"oid": "1a412d42e3823342291430e20bbacfd7c6b51569", "url": "https://github.com/rstudio/rstudio/commit/1a412d42e3823342291430e20bbacfd7c6b51569", "message": "Update NEWS", "committedDate": "2020-07-21T21:33:47Z", "type": "commit"}, {"oid": "deb7641bac55a281539086d3d63bdc0c6e54ba42", "url": "https://github.com/rstudio/rstudio/commit/deb7641bac55a281539086d3d63bdc0c6e54ba42", "message": "Merge branch 'v1.3' into bugfix/user-groups-resize", "committedDate": "2020-07-21T21:34:35Z", "type": "commit"}]}