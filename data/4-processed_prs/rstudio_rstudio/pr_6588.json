{"pr_number": 6588, "pr_title": "improve handling of multiline Python blocks in console", "pr_createdAt": "2020-04-03T18:57:16Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6588", "timeline": [{"oid": "804d2118e860a612a2aa9640f58b81b9e2ba030d", "url": "https://github.com/rstudio/rstudio/commit/804d2118e860a612a2aa9640f58b81b9e2ba030d", "message": "fix indent in blocks of submitted Python code", "committedDate": "2020-04-02T23:09:55Z", "type": "commit"}, {"oid": "ab6a268c0a97a287fc000b0fa576b81f35a05470", "url": "https://github.com/rstudio/rstudio/commit/ab6a268c0a97a287fc000b0fa576b81f35a05470", "message": "improve indent tracking", "committedDate": "2020-04-03T18:30:53Z", "type": "commit"}, {"oid": "155b57ce1e9f8ac536c7d39591b16cce25295c26", "url": "https://github.com/rstudio/rstudio/commit/155b57ce1e9f8ac536c7d39591b16cce25295c26", "message": "use module API for repl active", "committedDate": "2020-04-03T18:45:16Z", "type": "commit"}, {"oid": "b3c95e8bafd89ff93477f03e88aaf39255aacde6", "url": "https://github.com/rstudio/rstudio/commit/b3c95e8bafd89ff93477f03e88aaf39255aacde6", "message": "clean up", "committedDate": "2020-04-03T18:46:25Z", "type": "commit"}, {"oid": "b6440d1b6f2d17bcd4f987aefa24d430adb2c815", "url": "https://github.com/rstudio/rstudio/commit/b6440d1b6f2d17bcd4f987aefa24d430adb2c815", "message": "check for closed block", "committedDate": "2020-04-03T18:56:37Z", "type": "commit"}, {"oid": "51e815684589ce4d0264abd3db1474c2e23b68fb", "url": "https://github.com/rstudio/rstudio/commit/51e815684589ce4d0264abd3db1474c2e23b68fb", "message": "missing else", "committedDate": "2020-04-03T19:12:02Z", "type": "commit"}, {"oid": "95b01d28cf27040dbb30eba9da89c019751d0a46", "url": "https://github.com/rstudio/rstudio/commit/95b01d28cf27040dbb30eba9da89c019751d0a46", "message": "more tests", "committedDate": "2020-04-03T19:15:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1MjYwNw==", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403352607", "bodyText": "Nit: update file copyright", "author": "gtritchie", "createdAt": "2020-04-03T21:47:57Z", "path": "src/cpp/core/StringUtils.cpp", "diffHunk": "@@ -774,6 +774,14 @@ bool extractCommentHeader(const std::string& contents,\n    return true;\n }\n ", "originalCommit": "95b01d28cf27040dbb30eba9da89c019751d0a46", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1Mjc4NQ==", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403352785", "bodyText": "Nit: file copyright", "author": "gtritchie", "createdAt": "2020-04-03T21:48:29Z", "path": "src/cpp/core/include/core/StringUtils.hpp", "diffHunk": "@@ -290,6 +290,8 @@ bool extractCommentHeader(const std::string& contents,\n                           const std::string& reCommentPrefix,\n                           std::string* pHeader);\n ", "originalCommit": "95b01d28cf27040dbb30eba9da89c019751d0a46", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1MzAxOA==", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403353018", "bodyText": "Nit: file copyright", "author": "gtritchie", "createdAt": "2020-04-03T21:49:03Z", "path": "src/cpp/session/SessionConsoleInput.cpp", "diffHunk": "@@ -15,6 +15,8 @@\n ", "originalCommit": "95b01d28cf27040dbb30eba9da89c019751d0a46", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1OTMwOA==", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403359308", "bodyText": "Minor, could simplify to if (input.text.find('\\n') == std::string::npos) and eliminate index variable.", "author": "gtritchie", "createdAt": "2020-04-03T22:07:19Z", "path": "src/cpp/session/SessionConsoleInput.cpp", "diffHunk": "@@ -156,11 +157,127 @@ void reissueLastConsolePrompt()\n \n void clearConsoleInputBuffer()\n {\n-   // Discard any buffered input\n-   while (!s_consoleInputBuffer.empty())\n-      s_consoleInputBuffer.pop();\n+   s_consoleInputBuffer = {};\n+}\n+\n+namespace {\n+\n+// this function takes the next chunk of (potentially multi-line) pending\n+// console input in the queue, then splits it into separate pieces of console\n+// input with one piece of input for each line.\n+//\n+// we also fix up indentation if we can determine that the\n+// code is going to be sent to the reticulate Python REPL.\n+void fixupPendingConsoleInput()\n+{\n+   // get next input\n+   auto input = s_consoleInputBuffer.front();\n+   \n+   // nothing to do if this is a cancel\n+   if (input.cancel)\n+      return;\n+   \n+   // if this has no newlines, then nothing to do\n+   auto index = input.text.find('\\n');", "originalCommit": "95b01d28cf27040dbb30eba9da89c019751d0a46", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM2MDIzOA==", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403360238", "bodyText": "If you're considering it, maybe now is the time? :-)", "author": "gtritchie", "createdAt": "2020-04-03T22:10:00Z", "path": "src/cpp/session/SessionConsoleInput.cpp", "diffHunk": "@@ -156,11 +157,127 @@ void reissueLastConsolePrompt()\n \n void clearConsoleInputBuffer()\n {\n-   // Discard any buffered input\n-   while (!s_consoleInputBuffer.empty())\n-      s_consoleInputBuffer.pop();\n+   s_consoleInputBuffer = {};\n+}\n+\n+namespace {\n+\n+// this function takes the next chunk of (potentially multi-line) pending\n+// console input in the queue, then splits it into separate pieces of console\n+// input with one piece of input for each line.\n+//\n+// we also fix up indentation if we can determine that the\n+// code is going to be sent to the reticulate Python REPL.\n+void fixupPendingConsoleInput()\n+{\n+   // get next input\n+   auto input = s_consoleInputBuffer.front();\n+   \n+   // nothing to do if this is a cancel\n+   if (input.cancel)\n+      return;\n+   \n+   // if this has no newlines, then nothing to do\n+   auto index = input.text.find('\\n');\n+   if (index == std::string::npos)\n+      return;\n+   \n+   // if we're about to send code to the Python REPL, then\n+   // we need to fix whitespace in the code before sending\n+   bool pyReplActive = modules::reticulate::isReplActive();\n+   \n+   // pop off current input (we're going to split and re-push now)\n+   s_consoleInputBuffer.pop();\n+   \n+   // does this Python line start an indented block?\n+   // NOTE: should consider using tokenizer here", "originalCommit": "95b01d28cf27040dbb30eba9da89c019751d0a46", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "730f9c9efc7e1530da1791604f80f324a36889c3", "url": "https://github.com/rstudio/rstudio/commit/730f9c9efc7e1530da1791604f80f324a36889c3", "message": "update copyright dates", "committedDate": "2020-04-13T21:35:56Z", "type": "commit"}]}