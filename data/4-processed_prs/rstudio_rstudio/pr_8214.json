{"pr_number": 8214, "pr_title": "Do not attempt to continue logging session output dp fd writes if the read end of the pipe closes", "pr_createdAt": "2020-10-28T17:31:13Z", "pr_url": "https://github.com/rstudio/rstudio/pull/8214", "timeline": [{"oid": "2c4e90a816dcba9564cc4733d0b95b227eabeedc", "url": "https://github.com/rstudio/rstudio/commit/2c4e90a816dcba9564cc4733d0b95b227eabeedc", "message": "Do not attempt to continue logging session output dp fd writes if the read end of the pipe closes.\n\nFixes #8082", "committedDate": "2020-10-28T17:26:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2NzQ3MQ==", "url": "https://github.com/rstudio/rstudio/pull/8214#discussion_r514467471", "bodyText": "Nit: this can be set in the systemError constructor more succinctly", "author": "jmcphers", "createdAt": "2020-10-29T18:11:54Z", "path": "src/cpp/core/system/PosixOutputCapture.cpp", "diffHunk": "@@ -71,21 +72,48 @@ void standardStreamCaptureThread(\n    auto wrapHandler =\n     [=](const boost::function<void(const std::string&)>& handler,\n         int dupFd,\n+        const std::string& descriptorType,\n+        boost::shared_ptr<bool> pSkipWrite,\n         const std::string& output)\n     {\n        handler(output);\n-       if (::write(dupFd, output.c_str(), output.size()) == -1)\n+\n+       if (!*pSkipWrite)\n        {\n-          if (errno != EAGAIN && errno != EINTR)\n-             LOG_ERROR(systemError(errno, ERROR_LOCATION));\n+          if (::write(dupFd, output.c_str(), output.size()) == -1)\n+          {\n+             if (errno == EPIPE || errno == EBADF)\n+             {\n+                // the std stream was closed somehow, meaning this write call will never succeed again\n+                // mark that we should skip the write, and only log this error once\n+                *pSkipWrite = true;\n+\n+                Error error = systemError(errno, ERROR_LOCATION);\n+                std::string cause = errno == EBADF ? \" closed\" : \"'s pipe read end closed\";\n+                std::string description =\n+                      descriptorType + \" descriptor \" + core::safe_convert::numberToString(dupFd) +\n+                      cause + \". Output will no longer be redirected.\";\n+                error.addProperty(\"description\", description);", "originalCommit": "2c4e90a816dcba9564cc4733d0b95b227eabeedc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e5421a759ee8ede543b5f7e3a40f46af0fa73531", "url": "https://github.com/rstudio/rstudio/commit/e5421a759ee8ede543b5f7e3a40f46af0fa73531", "message": "Code review feedback", "committedDate": "2020-10-29T19:01:48Z", "type": "commit"}]}