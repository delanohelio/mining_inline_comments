{"pr_number": 6849, "pr_title": "Rework Source structure", "pr_createdAt": "2020-05-11T17:22:36Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6849", "timeline": [{"oid": "f04fd9828feb1e3c57c1e960d2512ee938ff4b17", "url": "https://github.com/rstudio/rstudio/commit/f04fd9828feb1e3c57c1e960d2512ee938ff4b17", "message": "start base for third column", "committedDate": "2020-03-25T23:48:19Z", "type": "commit"}, {"oid": "ff95517936c254875ef3c68e8440dc1393e4a3db", "url": "https://github.com/rstudio/rstudio/commit/ff95517936c254875ef3c68e8440dc1393e4a3db", "message": "allow for multiple source views (WIP)", "committedDate": "2020-03-26T23:37:47Z", "type": "commit"}, {"oid": "7298e3a283b04682d2bf75f61c953014806a9c67", "url": "https://github.com/rstudio/rstudio/commit/7298e3a283b04682d2bf75f61c953014806a9c67", "message": "put multiple LayoutPanels within the SourcePane", "committedDate": "2020-03-27T00:40:16Z", "type": "commit"}, {"oid": "cc5dda489711fbee619ff673b6d0b7f730c703eb", "url": "https://github.com/rstudio/rstudio/commit/cc5dda489711fbee619ff673b6d0b7f730c703eb", "message": "ugly experimental code", "committedDate": "2020-03-28T00:56:37Z", "type": "commit"}, {"oid": "48d29d3e70dcaaf2cf3f7649437bc2991d233dea", "url": "https://github.com/rstudio/rstudio/commit/48d29d3e70dcaaf2cf3f7649437bc2991d233dea", "message": "hard-coded to display 3 columns - two source", "committedDate": "2020-03-30T23:07:04Z", "type": "commit"}, {"oid": "ed7f259d8e925847737f33290f36b2c0773fbebc", "url": "https://github.com/rstudio/rstudio/commit/ed7f259d8e925847737f33290f36b2c0773fbebc", "message": "start work for multiple SourceShims", "committedDate": "2020-03-31T00:34:26Z", "type": "commit"}, {"oid": "02e06b32ebb513b68ddecc22fb34d59bd0c6be2d", "url": "https://github.com/rstudio/rstudio/commit/02e06b32ebb513b68ddecc22fb34d59bd0c6be2d", "message": "add to allowing multiple sources", "committedDate": "2020-03-31T22:01:55Z", "type": "commit"}, {"oid": "fbeca078998138456cc8ac121d6fc5fd48ee3118", "url": "https://github.com/rstudio/rstudio/commit/fbeca078998138456cc8ac121d6fc5fd48ee3118", "message": "begin removal of SourceShim", "committedDate": "2020-04-02T23:31:06Z", "type": "commit"}, {"oid": "057c4422363f1e7b7301d19d78ec2e460afe224c", "url": "https://github.com/rstudio/rstudio/commit/057c4422363f1e7b7301d19d78ec2e460afe224c", "message": "make the Source constructor act more like the shim so neccesary dependencies can load before setting\nup the display pane", "committedDate": "2020-04-03T00:45:30Z", "type": "commit"}, {"oid": "3658c416d8f49e6609a2b8a79162d08583b79ca3", "url": "https://github.com/rstudio/rstudio/commit/3658c416d8f49e6609a2b8a79162d08583b79ca3", "message": "add class for managing different source views", "committedDate": "2020-04-03T19:59:14Z", "type": "commit"}, {"oid": "5e62e2857ccd9bf945640a709c3fa3a11ad3e6e1", "url": "https://github.com/rstudio/rstudio/commit/5e62e2857ccd9bf945640a709c3fa3a11ad3e6e1", "message": "fix spacing and add missing event handlers", "committedDate": "2020-04-03T21:04:10Z", "type": "commit"}, {"oid": "dd22ca55a3399c846c401e6945310ec1001bc8df", "url": "https://github.com/rstudio/rstudio/commit/dd22ca55a3399c846c401e6945310ec1001bc8df", "message": "working on getting source to display", "committedDate": "2020-04-06T19:32:24Z", "type": "commit"}, {"oid": "dc70d3b9c5f892fe621e4438d212c80a071ab51f", "url": "https://github.com/rstudio/rstudio/commit/dc70d3b9c5f892fe621e4438d212c80a071ab51f", "message": "add missing event handles to Source", "committedDate": "2020-04-07T01:19:22Z", "type": "commit"}, {"oid": "a4671ed06029a8815d1111faa1a52b0206dd244f", "url": "https://github.com/rstudio/rstudio/commit/a4671ed06029a8815d1111faa1a52b0206dd244f", "message": "debug code", "committedDate": "2020-04-07T21:01:54Z", "type": "commit"}, {"oid": "ee0c0fc1c465136d8f5e7799d5b177e84ef95e12", "url": "https://github.com/rstudio/rstudio/commit/ee0c0fc1c465136d8f5e7799d5b177e84ef95e12", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/add-source-pane", "committedDate": "2020-04-07T21:36:40Z", "type": "commit"}, {"oid": "69f583bf8b3c382e9d7a5976b748b009b5510a05", "url": "https://github.com/rstudio/rstudio/commit/69f583bf8b3c382e9d7a5976b748b009b5510a05", "message": "remove code for adding multiple source columns.", "committedDate": "2020-04-16T20:34:10Z", "type": "commit"}, {"oid": "a1bd5838e029ebce62a76eae70ca8bb835740b4b", "url": "https://github.com/rstudio/rstudio/commit/a1bd5838e029ebce62a76eae70ca8bb835740b4b", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-16T20:35:15Z", "type": "commit"}, {"oid": "aa43c480a0e9b456ad35b455ecb1f74b3935a802", "url": "https://github.com/rstudio/rstudio/commit/aa43c480a0e9b456ad35b455ecb1f74b3935a802", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-16T22:03:31Z", "type": "commit"}, {"oid": "2bde2906b0f582ed3458c0323f6ae7e1e13e1c31", "url": "https://github.com/rstudio/rstudio/commit/2bde2906b0f582ed3458c0323f6ae7e1e13e1c31", "message": "load all source events for satellite windows, broken in previous commit", "committedDate": "2020-04-17T01:00:56Z", "type": "commit"}, {"oid": "cbd1743aac144fd5b6126367a8c685a47365837b", "url": "https://github.com/rstudio/rstudio/commit/cbd1743aac144fd5b6126367a8c685a47365837b", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-23T20:10:10Z", "type": "commit"}, {"oid": "b29ad0b5e29c0672d4e83743fc75ec51f5d509d6", "url": "https://github.com/rstudio/rstudio/commit/b29ad0b5e29c0672d4e83743fc75ec51f5d509d6", "message": "debug code", "committedDate": "2020-04-23T22:38:28Z", "type": "commit"}, {"oid": "5562100641e75ec06fc975b8ad788bb74d0e00e4", "url": "https://github.com/rstudio/rstudio/commit/5562100641e75ec06fc975b8ad788bb74d0e00e4", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-23T22:56:44Z", "type": "commit"}, {"oid": "c4592dc4700792ce029045ee1a09fe4f8b698db0", "url": "https://github.com/rstudio/rstudio/commit/c4592dc4700792ce029045ee1a09fe4f8b698db0", "message": "Fix issue where UserPrefs were loaded before StatePrefs", "committedDate": "2020-04-24T00:46:24Z", "type": "commit"}, {"oid": "76f6d71109605da56eb3f73c45947527c17770ec", "url": "https://github.com/rstudio/rstudio/commit/76f6d71109605da56eb3f73c45947527c17770ec", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-24T17:21:48Z", "type": "commit"}, {"oid": "31bc3fc540546dd2052154e952b005316f6d770d", "url": "https://github.com/rstudio/rstudio/commit/31bc3fc540546dd2052154e952b005316f6d770d", "message": "fix drag and drop desktop issue", "committedDate": "2020-05-04T22:13:48Z", "type": "commit"}, {"oid": "c263037e1eac15e3664611ef76e20aaae145fdc7", "url": "https://github.com/rstudio/rstudio/commit/c263037e1eac15e3664611ef76e20aaae145fdc7", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-05-04T23:06:04Z", "type": "commit"}, {"oid": "e80e5f7ea37ec8908bebe22915be86ee2235c650", "url": "https://github.com/rstudio/rstudio/commit/e80e5f7ea37ec8908bebe22915be86ee2235c650", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-05-11T17:04:29Z", "type": "commit"}, {"oid": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "url": "https://github.com/rstudio/rstudio/commit/6b0f1284217369ad95fe502f4c976aac4cbf4feb", "message": "remove comments", "committedDate": "2020-05-11T17:15:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MDA2Mw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424570063", "bodyText": "update file copyright year", "author": "gtritchie", "createdAt": "2020-05-13T16:25:28Z", "path": "src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java", "diffHunk": "@@ -120,6 +120,11 @@ public DocTabLayoutPanel(boolean closeableTabs,\n       events_.addHandler(DocTabDragStartedEvent.TYPE, dragManager_);\n       commands_ = RStudioGinjector.INSTANCE.getCommands();\n \n+   }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0OTkyNg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424649926", "bodyText": "Done.", "author": "melissa-barca", "createdAt": "2020-05-13T18:35:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MDA2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3Mjg0Nw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424572847", "bodyText": "Can you elaborate on how/why this might be? Maybe it's obvious as I read more of the code.", "author": "gtritchie", "createdAt": "2020-05-13T16:29:45Z", "path": "src/gwt/src/org/rstudio/studio/client/application/Application.java", "diffHunk": "@@ -206,7 +207,18 @@ public void run()\n             MathJaxLoader.ensureMathJaxLoaded();\n \n             // initialize workbench\n-            initializeWorkbench();\n+            // refresh prefs incase they were loaded without sessionInfo", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1MjE0Mg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424652142", "bodyText": "This happens exclusively in desktop mode, I was able to track down the issue enough to find that userPrefs were being loaded before sessionInfo but couldn't find when this was happening or if it was truly necessary. I updated the comment with that clarification.", "author": "melissa-barca", "createdAt": "2020-05-13T18:39:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3Mjg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3NzI1Mg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424577252", "bodyText": "Using lambdas you can tidy this up to:\n            userState_.get().writeState(boolArg ->\n            {\n               userPrefs_.get().writeUserPrefs(boolArg1 ->\n               {\n                     initializeWorkbench();\n               });\n            });\n         }\n\nYou could drop the braces and make it more compact, but I personally find that harder to read especially when there are multiple lambda happening at once (but that's just me):\n            userState_.get().writeState(boolArg ->\n               userPrefs_.get().writeUserPrefs(boolArg1 ->\n                  initializeWorkbench()));", "author": "gtritchie", "createdAt": "2020-05-13T16:36:33Z", "path": "src/gwt/src/org/rstudio/studio/client/application/Application.java", "diffHunk": "@@ -206,7 +207,18 @@ public void run()\n             MathJaxLoader.ensureMathJaxLoaded();\n \n             // initialize workbench\n-            initializeWorkbench();\n+            // refresh prefs incase they were loaded without sessionInfo\n+            userState_.get().writeState(\n+                  new CommandWithArg<Boolean>() {\n+                     public void execute(Boolean arg) {\n+                        userPrefs_.get().writeUserPrefs(\n+                              new CommandWithArg<Boolean>() {\n+                                 public void execute(Boolean arg) {\n+                                    initializeWorkbench();\n+                                 }\n+                              });\n+                        }\n+                  });\n          }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NjMwMQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424656301", "bodyText": "Thanks, I left the braces.", "author": "melissa-barca", "createdAt": "2020-05-13T18:46:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3NzI1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MDIyNw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424580227", "bodyText": "update file copyright year", "author": "gtritchie", "createdAt": "2020-05-13T16:41:08Z", "path": "src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java", "diffHunk": "@@ -65,7 +65,6 @@\n import org.rstudio.studio.client.workbench.prefs.events.UserPrefsChangedEvent;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1MjQ1Nw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424652457", "bodyText": "Done", "author": "melissa-barca", "createdAt": "2020-05-13T18:40:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MDIyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MTcwMQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424581701", "bodyText": "update file copyright year", "author": "gtritchie", "createdAt": "2020-05-13T16:43:29Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/viewer/ViewerPresenter.java", "diffHunk": "@@ -63,7 +63,6 @@\n import org.rstudio.studio.client.workbench.prefs.model.UserState;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MzgyMQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424583821", "bodyText": "update file copyright year", "author": "gtritchie", "createdAt": "2020-05-13T16:46:53Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserState.java", "diffHunk": "@@ -18,6 +18,7 @@\n import com.google.inject.Inject;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NjMwNg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424586306", "bodyText": "not needed", "author": "gtritchie", "createdAt": "2020-05-13T16:50:42Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java", "diffHunk": "@@ -23,7 +23,9 @@\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n+import com.google.gwt.core.client.JsArrayString;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NjM5Ng==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424586396", "bodyText": "not needed", "author": "gtritchie", "createdAt": "2020-05-13T16:50:48Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java", "diffHunk": "@@ -23,7 +23,9 @@\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n+import com.google.gwt.core.client.JsArrayString;\n import com.google.gwt.core.client.JsArray;\n+import org.rstudio.core.client.JsArrayUtil;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NjkwNQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424586905", "bodyText": "delete this extra line", "author": "gtritchie", "createdAt": "2020-05-13T16:51:40Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java", "diffHunk": "@@ -277,6 +279,7 @@ public PaneManager(Provider<MainSplitPanel> pSplitPanel,\n       left_ = createSplitWindow(panes_.get(0), panes_.get(1), LEFT_COLUMN, 0.4, splitterSize);\n       right_ = createSplitWindow(panes_.get(2), panes_.get(3), RIGHT_COLUMN, 0.6, splitterSize);\n \n+", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NzE4MQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424587181", "bodyText": "update file copyright year", "author": "gtritchie", "createdAt": "2020-05-13T16:52:11Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java", "diffHunk": "@@ -64,7 +64,7 @@\n import org.rstudio.studio.client.workbench.views.console.events.WorkingDirChangedHandler;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDUwMw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424590503", "bodyText": "While you're touching this... could be lambda-fied. Braces and newlines as you see fit:\n      source_.withSaveFilesBeforeCommand(() ->\n      {\n         withDevtoolsLoadAllPath(loadAllPath ->\n         {\n            sendLoadCommandToConsole(\"devtools::load_all(\\\"\" + loadAllPath + \"\\\")\");\n         });\n      }, () -> {}, \"Build\");", "author": "gtritchie", "createdAt": "2020-05-13T16:57:24Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java", "diffHunk": "@@ -309,7 +309,7 @@ void onBuildAll()\n    \n    void onDevtoolsLoadAll()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NzgzNg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424657836", "bodyText": "Done.", "author": "melissa-barca", "createdAt": "2020-05-13T18:49:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDUwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MTc4Mw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424591783", "bodyText": "Another lambda-ing opportunity:\n      source_.withSaveFilesBeforeCommand(() ->\n      {\n         server_.startBuild(type, subType, new SimpleRequestCallback<Boolean>() {\n            @Override\n            public void onResponseReceived(Boolean response)\n            {\n            }\n\n            @Override\n            public void onError(ServerError error)\n            {\n               super.onError(error);\n               workbenchContext_.setBuildInProgress(false);\n            }\n         });\n      }, () -> {}, \"Build\");", "author": "gtritchie", "createdAt": "2020-05-13T16:59:19Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java", "diffHunk": "@@ -442,7 +448,13 @@ public void onError(ServerError error)\n \n             });\n          }\n-      }, \"Build\");\n+      },\n+      new Command() {", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5NDcyMA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424594720", "bodyText": "update file copyright year", "author": "gtritchie", "createdAt": "2020-05-13T17:04:06Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java", "diffHunk": "@@ -83,7 +83,6 @@\n import org.rstudio.studio.client.workbench.views.environment.model.RObject;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5NTI1Mw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424595253", "bodyText": "not used", "author": "gtritchie", "createdAt": "2020-05-13T17:04:59Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -14,6 +14,7 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n+import com.google.gwt.core.client.GWT;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5NzU3NQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424597575", "bodyText": "Doesn't this trigger an infinite recursive loop? (onNewDocumentWithCode calling itself?).", "author": "gtritchie", "createdAt": "2020-05-13T17:09:02Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -409,40 +413,48 @@ public Source(Commands commands,\n          command.setVisible(false);\n          command.setEnabled(false);\n       }\n-\n-      // fake shortcuts for commands which we handle at a lower level\n-      commands.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n-      commands.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n-\n-      // If tab has been disabled for auto complete by the user, set the \"shortcut\" to ctrl-space instead.\n-      if (userPrefs_.tabCompletion().getValue() && !userPrefs_.tabKeyMoveFocus().getValue())\n-         commands.codeCompletion().setShortcut(new KeyboardShortcut(\"Tab\", KeyCodes.KEY_TAB, KeyboardShortcut.NONE));\n-      else\n-      {\n-         KeySequence sequence = new KeySequence();\n-         sequence.add(new KeyCombination(\"Ctrl+Space\", KeyCodes.KEY_SPACE, KeyCodes.KEY_CTRL));\n-         commands.codeCompletion().setShortcut(new KeyboardShortcut(sequence));\n-      }\n-      \n-      events.addHandler(ShowContentEvent.TYPE, this);\n-      events.addHandler(ShowDataEvent.TYPE, this);\n-      events.addHandler(OpenObjectExplorerEvent.TYPE, this);\n-\n-      events.addHandler(CodeBrowserNavigationEvent.TYPE, this);\n       \n-      events.addHandler(CodeBrowserFinishedEvent.TYPE, this);\n+      vimCommands_ = new SourceVimCommands();\n \n-      events.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n+      view_.addTabClosingHandler(this);\n+      view_.addTabCloseHandler(this);\n+      view_.addTabClosedHandler(this);\n+      view_.addTabReorderHandler(this);\n+      view_.addSelectionHandler(this);\n+      view_.addBeforeShowHandler(this);\n \n-      events.addHandler(FileTypeChangedEvent.TYPE, new FileTypeChangedHandler()\n+      events_.addHandler(EditPresentationSourceEvent.TYPE, this);\n+      events_.addHandler(FileEditEvent.TYPE, this);\n+      events_.addHandler(InsertSourceEvent.TYPE, this);\n+      events_.addHandler(ShowContentEvent.TYPE, this);\n+      events_.addHandler(ShowDataEvent.TYPE, this);\n+      events_.addHandler(OpenObjectExplorerEvent.TYPE, this);\n+      events_.addHandler(OpenPresentationSourceFileEvent.TYPE, this);\n+      events_.addHandler(OpenSourceFileEvent.TYPE, this);\n+      events_.addHandler(CodeBrowserNavigationEvent.TYPE, this);\n+      events_.addHandler(CodeBrowserFinishedEvent.TYPE, this);\n+      events_.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n+      events_.addHandler(SnippetsChangedEvent.TYPE, this);\n+      events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n+\n+      events_.addHandler(FileTypeChangedEvent.TYPE, new FileTypeChangedHandler()\n       {\n          public void onFileTypeChanged(FileTypeChangedEvent event)\n          {\n             manageCommands();\n          }\n       });\n       \n-      events.addHandler(SourceOnSaveChangedEvent.TYPE, \n+      events_.addHandler(NewDocumentWithCodeEvent.TYPE,\n+                         new NewDocumentWithCodeEvent.Handler() {\n+         @Override\n+         public void onNewDocumentWithCode(NewDocumentWithCodeEvent event)\n+         {\n+            onNewDocumentWithCode(event);", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczOTI5MQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424739291", "bodyText": "You're right and we've already added the handler on +438 so I've removed this.", "author": "melissa-barca", "createdAt": "2020-05-13T21:23:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5NzU3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMzEzMA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424603130", "bodyText": "extra whitespace", "author": "gtritchie", "createdAt": "2020-05-13T17:18:22Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -464,15 +476,15 @@ public void onSwitchToDoc(SwitchToDocEvent event)\n          }\n       });\n \n-      events.addHandler(SourceFileSavedEvent.TYPE, new SourceFileSavedHandler()\n+      events_.addHandler(SourceFileSavedEvent.TYPE, new SourceFileSavedHandler()\n       {\n          public void onSourceFileSaved(SourceFileSavedEvent event)\n          {\n             pMruList_.get().add(event.getPath());\n          }\n       });\n-      \n-      events.addHandler(SourcePathChangedEvent.TYPE, \n+         ", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMzI2NA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424603264", "bodyText": "extra whitespace", "author": "gtritchie", "createdAt": "2020-05-13T17:18:32Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -518,8 +530,8 @@ public void onSourceNavigation(SourceNavigationEvent event)\n          }\n       });\n       \n-      events.addHandler(SourceExtendedTypeDetectedEvent.TYPE, this);\n-      \n+      events_.addHandler(SourceExtendedTypeDetectedEvent.TYPE, this);\n+         ", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNDQzMg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424604432", "bodyText": "Why is this added here?", "author": "gtritchie", "createdAt": "2020-05-13T17:20:24Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -688,14 +727,61 @@ else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDIN\n       // open project or edit_published docs (only for main source window)\n       if (SourceWindowManager.isMainSourceWindow())\n       {\n-         openProjectDocs(session);\n+         openProjectDocs(session_);\n          openEditPublishedDocs();\n       }\n       \n       // add vim commands\n       initVimCommands();\n+      ensureVisible(false);", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4NDg1Ng==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424684856", "bodyText": "Original thought process was that at this point we don't need to be visible but there's no need to ensure it so I've removed.", "author": "melissa-barca", "createdAt": "2020-05-13T19:38:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNDQzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNTA3MA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424605070", "bodyText": "Brief JavaDoc comment about method's purpose would be good.", "author": "gtritchie", "createdAt": "2020-05-13T17:21:25Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -688,14 +727,61 @@ else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDIN\n       // open project or edit_published docs (only for main source window)\n       if (SourceWindowManager.isMainSourceWindow())\n       {\n-         openProjectDocs(session);\n+         openProjectDocs(session_);\n          openEditPublishedDocs();\n       }\n       \n       // add vim commands\n       initVimCommands();\n+      ensureVisible(false);\n    }\n    \n+   public void withSaveFilesBeforeCommand(final Command command,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4NDE4OQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424684189", "bodyText": "Added.", "author": "melissa-barca", "createdAt": "2020-05-13T19:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNTA3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNzAwNA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424607004", "bodyText": "lambda:\n            new UnsavedChangesDialog(\n                  commandSource,\n                  alwaysSaveOption,\n                  unsavedSourceDocs,\n                  dialogResult ->\n                  {\n                     if (dialogResult.getAlwaysSave())\n                     {\n                        userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n                        userPrefs_.writeUserPrefs();\n                     }\n   \n                     handleUnsavedChangesBeforeExit(\n                                           dialogResult.getSaveTargets(),\n                                           command);\n   \n                  },\n                  cancelCommand\n            ).showModal();", "author": "gtritchie", "createdAt": "2020-05-13T17:24:36Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -688,14 +727,61 @@ else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDIN\n       // open project or edit_published docs (only for main source window)\n       if (SourceWindowManager.isMainSourceWindow())\n       {\n-         openProjectDocs(session);\n+         openProjectDocs(session_);\n          openEditPublishedDocs();\n       }\n       \n       // add vim commands\n       initVimCommands();\n+      ensureVisible(false);\n    }\n    \n+   public void withSaveFilesBeforeCommand(final Command command,\n+                                          final Command cancelCommand,\n+                                          String commandSource)\n+   {\n+      if (userPrefs_.saveFilesBeforeBuild().getValue())\n+      {\n+         saveUnsavedDocuments(command);\n+      }\n+      else\n+      {\n+         String alwaysSaveOption = !userPrefs_.saveFilesBeforeBuild().getValue() ?\n+                                    \"Always save files before build\" : null;\n+\n+         ArrayList<UnsavedChangesTarget> unsavedSourceDocs = getUnsavedChanges(TYPE_FILE_BACKED);\n+\n+         if (unsavedSourceDocs.size() > 0)\n+         {\n+            new UnsavedChangesDialog(\n+                  commandSource,\n+                  alwaysSaveOption,\n+                  unsavedSourceDocs,\n+                  new OperationWithInput<UnsavedChangesDialog.Result>() {\n+                     public void execute(UnsavedChangesDialog.Result result)\n+                     {\n+                        if (result.getAlwaysSave())\n+                        {\n+                           userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n+                           userPrefs_.writeUserPrefs();\n+                        }\n+\n+                        handleUnsavedChangesBeforeExit(\n+                                              result.getSaveTargets(),\n+                                              command);\n+\n+                     }\n+                   },\n+                   cancelCommand\n+            ).showModal();", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwODY0Nw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424608647", "bodyText": "Reduce this whole method to:\n public Command revertUnsavedChangesBeforeExitCommand(final Command onCompleted)\n   {\n      return () -> handleUnsavedChangesBeforeExit(new ArrayList<>(), onCompleted);\n   }", "author": "gtritchie", "createdAt": "2020-05-13T17:27:16Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -2577,6 +2662,21 @@ public void saveWithPrompt(UnsavedChangesTarget target,\n          editingTarget.saveWithPrompt(onCompleted, onCancelled);\n    }\n    \n+   public Command revertUnsavedChangesBeforeExitCommand(\n+                                               final Command onCompleted)\n+   {\n+      return new Command()\n+      {\n+         @Override\n+         public void execute()\n+         {\n+            handleUnsavedChangesBeforeExit(\n+                                 new ArrayList<UnsavedChangesTarget>(),\n+                                 onCompleted);\n+         }\n+\n+      };\n+   }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwOTcwMQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424609701", "bodyText": "update file copyright year", "author": "gtritchie", "createdAt": "2020-05-13T17:28:58Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceSatellitePresenter.java", "diffHunk": "@@ -29,7 +29,7 @@\n    {}", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwOTk1OA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424609958", "bodyText": "update file copyright year", "author": "gtritchie", "createdAt": "2020-05-13T17:29:26Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceSatelliteWindow.java", "diffHunk": "@@ -49,6 +49,7 @@ public SourceSatelliteWindow(Provider<EventBus> pEventBus,\n                                 Provider<SourceWindow> pSourceWindow,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMTE1NQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424611155", "bodyText": "update file copyright year", "author": "gtritchie", "createdAt": "2020-05-13T17:31:18Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindow.java", "diffHunk": "@@ -69,12 +69,12 @@ public SourceWindow(\n          Provider<DesktopHooks> pDesktopHooks,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMTgyNA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424611824", "bodyText": "update file header year", "author": "gtritchie", "createdAt": "2020-05-13T17:32:24Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java", "diffHunk": "@@ -102,7 +102,7 @@ public SourceWindowManager(\n          EventBus events,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMjczMA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424612730", "bodyText": "labmda: () -> {}", "author": "gtritchie", "createdAt": "2020-05-13T17:33:55Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java", "diffHunk": "@@ -5574,24 +5574,36 @@ public void execute()\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      },\n+      new Command() {\n+         public void execute()\n+         {\n+         }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMjg5Mg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424612892", "bodyText": "lambda: () -> {}", "author": "gtritchie", "createdAt": "2020-05-13T17:34:11Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java", "diffHunk": "@@ -5574,24 +5574,36 @@ public void execute()\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      },\n+      new Command() {\n+         public void execute()\n+         {\n+         }\n+      },\n+      \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      },\n+      new Command() {\n+         public void execute()\n+         {\n+         }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzODI2Ng==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424638266", "bodyText": "This might not be safe -- if I understand correctly, this call will load Ace concurrently, but it seems like since we're about to initialize tabs (which might require Ace to be available) we would want to ensure Ace has really been loaded.", "author": "kevinushey", "createdAt": "2020-05-13T18:16:37Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -586,17 +598,57 @@ public void onNewWorkingCopy(NewWorkingCopyEvent event)\n          }\n       });\n       \n-      events.addHandler(PopoutDocEvent.TYPE, this);\n-      events.addHandler(DocWindowChangedEvent.TYPE, this);\n-      events.addHandler(DocTabDragInitiatedEvent.TYPE, this);\n-      events.addHandler(PopoutDocInitiatedEvent.TYPE, this);\n-      events.addHandler(DebugModeChangedEvent.TYPE, this);\n-      events.addHandler(ReplaceRangesEvent.TYPE, this);\n-      events.addHandler(GetEditorContextEvent.TYPE, this);\n-      events.addHandler(SetSelectionRangesEvent.TYPE, this);\n-      events.addHandler(OpenProfileEvent.TYPE, this);\n-      events.addHandler(RequestDocumentSaveEvent.TYPE, this);\n-      events.addHandler(RequestDocumentCloseEvent.TYPE, this);\n+      events_.addHandler(PopoutDocEvent.TYPE, this);\n+      events_.addHandler(DocWindowChangedEvent.TYPE, this);\n+      events_.addHandler(DocTabDragInitiatedEvent.TYPE, this);\n+      events_.addHandler(PopoutDocInitiatedEvent.TYPE, this);\n+      events_.addHandler(DebugModeChangedEvent.TYPE, this);\n+      events_.addHandler(ReplaceRangesEvent.TYPE, this);\n+      events_.addHandler(GetEditorContextEvent.TYPE, this);\n+      events_.addHandler(SetSelectionRangesEvent.TYPE, this);\n+      events_.addHandler(OpenProfileEvent.TYPE, this);\n+      events_.addHandler(RequestDocumentSaveEvent.TYPE, this);\n+      events_.addHandler(RequestDocumentCloseEvent.TYPE, this);\n+      \n+      initialized_ = true;\n+   }\n+\n+   public void loadFullSource()\n+   {\n+      AceEditor.preload();", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc4MTMxNQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424781315", "bodyText": "Good catch. I updated the code with a new method that loads Ace and calls loadFullSource (now private) in its callback.", "author": "melissa-barca", "createdAt": "2020-05-13T23:08:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzODI2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzOTE5NQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424639195", "bodyText": "nit: method name should be camelCase?", "author": "kevinushey", "createdAt": "2020-05-13T18:18:05Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java", "diffHunk": "@@ -100,6 +100,7 @@ public void writeUserPrefs()\n \n    public void writeUserPrefs(CommandWithArg<Boolean> onCompleted)\n    {\n+      UpdatePrefs(session_.getSessionInfo().getPrefs());", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0MTA1OQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424641059", "bodyText": "(realize this is a pre-existing method but maybe worth changing while you're working with this code)", "author": "kevinushey", "createdAt": "2020-05-13T18:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzOTE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1Mzk5Mg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424653992", "bodyText": "Done.", "author": "melissa-barca", "createdAt": "2020-05-13T18:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzOTE5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0MjM1NA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424642354", "bodyText": "Can we document the intent here? (why do we need to fire this \"empty\" DocTabsChangedEvent?)", "author": "kevinushey", "createdAt": "2020-05-13T18:23:22Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -586,17 +598,57 @@ public void onNewWorkingCopy(NewWorkingCopyEvent event)\n          }\n       });\n       \n-      events.addHandler(PopoutDocEvent.TYPE, this);\n-      events.addHandler(DocWindowChangedEvent.TYPE, this);\n-      events.addHandler(DocTabDragInitiatedEvent.TYPE, this);\n-      events.addHandler(PopoutDocInitiatedEvent.TYPE, this);\n-      events.addHandler(DebugModeChangedEvent.TYPE, this);\n-      events.addHandler(ReplaceRangesEvent.TYPE, this);\n-      events.addHandler(GetEditorContextEvent.TYPE, this);\n-      events.addHandler(SetSelectionRangesEvent.TYPE, this);\n-      events.addHandler(OpenProfileEvent.TYPE, this);\n-      events.addHandler(RequestDocumentSaveEvent.TYPE, this);\n-      events.addHandler(RequestDocumentCloseEvent.TYPE, this);\n+      events_.addHandler(PopoutDocEvent.TYPE, this);\n+      events_.addHandler(DocWindowChangedEvent.TYPE, this);\n+      events_.addHandler(DocTabDragInitiatedEvent.TYPE, this);\n+      events_.addHandler(PopoutDocInitiatedEvent.TYPE, this);\n+      events_.addHandler(DebugModeChangedEvent.TYPE, this);\n+      events_.addHandler(ReplaceRangesEvent.TYPE, this);\n+      events_.addHandler(GetEditorContextEvent.TYPE, this);\n+      events_.addHandler(SetSelectionRangesEvent.TYPE, this);\n+      events_.addHandler(OpenProfileEvent.TYPE, this);\n+      events_.addHandler(RequestDocumentSaveEvent.TYPE, this);\n+      events_.addHandler(RequestDocumentCloseEvent.TYPE, this);\n+      \n+      initialized_ = true;\n+   }\n+\n+   public void loadFullSource()\n+   {\n+      AceEditor.preload();\n+\n+      // sync UI prefs with shortcut manager\n+      userPrefs_ = RStudioGinjector.INSTANCE.getUserPrefs();\n+\n+      if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDINGS_VIM)\n+         ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_VIM);\n+      else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDINGS_EMACS)\n+         ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_EMACS);\n+      else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDINGS_SUBLIME)\n+         ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_SUBLIME);\n+      else\n+         ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_DEFAULT);\n+   \n+      events_.fireEvent(new DocTabsChangedEvent(null,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczMDAzOA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424730038", "bodyText": "IIRC this code is needed for future work when we have multiple source columns. I've removed it from this branch and added a comment to the other to document it.", "author": "melissa-barca", "createdAt": "2020-05-13T21:04:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0MjM1NA=="}], "type": "inlineReview"}, {"oid": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "url": "https://github.com/rstudio/rstudio/commit/90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "message": "update copyright years, use lambdas when possible, remove white space", "committedDate": "2020-05-13T19:22:17Z", "type": "commit"}, {"oid": "2050408f950459d3e5c3f72ed9385da57a0e8b79", "url": "https://github.com/rstudio/rstudio/commit/2050408f950459d3e5c3f72ed9385da57a0e8b79", "message": "add javadoc, remove unneeded code", "committedDate": "2020-05-13T19:38:14Z", "type": "commit"}, {"oid": "d05ce26ff1323507099b91cb0cdffdaf215a5ee6", "url": "https://github.com/rstudio/rstudio/commit/d05ce26ff1323507099b91cb0cdffdaf215a5ee6", "message": "remove empty event", "committedDate": "2020-05-13T21:04:16Z", "type": "commit"}, {"oid": "b51a5a1abe6b8eaa54470b881a1cfff19f3ca658", "url": "https://github.com/rstudio/rstudio/commit/b51a5a1abe6b8eaa54470b881a1cfff19f3ca658", "message": "remove sourceshim code", "committedDate": "2020-05-13T21:22:05Z", "type": "commit"}, {"oid": "9217906b990746c6709b77851db7996797c9dd8f", "url": "https://github.com/rstudio/rstudio/commit/9217906b990746c6709b77851db7996797c9dd8f", "message": "ensure ace is loaded before initializing any tabs", "committedDate": "2020-05-13T22:43:18Z", "type": "commit"}]}