{"pr_number": 6787, "pr_title": "Add class attributes to chunks", "pr_createdAt": "2020-05-01T00:56:20Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6787", "timeline": [{"oid": "e284794bd5e6d18d0b7dad0ecddd9ca81946ceb3", "url": "https://github.com/rstudio/rstudio/commit/e284794bd5e6d18d0b7dad0ecddd9ca81946ceb3", "message": "fix issue where chunks weren't marked as initialized.\nAssign id attribute to chunks based on their label.", "committedDate": "2020-04-30T02:39:17Z", "type": "commit"}, {"oid": "d1228cd380efa3382b6705c4eb01341a6407da54", "url": "https://github.com/rstudio/rstudio/commit/d1228cd380efa3382b6705c4eb01341a6407da54", "message": "add css id validator to StringUtil and ensure chunks have valids ids.", "committedDate": "2020-04-30T23:07:02Z", "type": "commit"}, {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09", "url": "https://github.com/rstudio/rstudio/commit/a9e6141045be99413d4c57a442a22f29ac775f09", "message": "add an id to the chunk output widget based on the chunk's label", "committedDate": "2020-05-01T00:22:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4ODk5Mw==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418588993", "bodyText": "I think this regex would be more simply expressed with a leading -? (then it won't be necessary to duplicate the whole alphanumeric test)", "author": "jmcphers", "createdAt": "2020-05-01T15:21:33Z", "path": "src/gwt/src/org/rstudio/core/client/StringUtil.java", "diffHunk": "@@ -944,6 +944,40 @@ public static String getExtension(String string)\n       return getExtension(string, 1);\n    }\n    \n+   public static String getCssIdentifier(String string)\n+   {\n+      // Each character must be one of the following:\n+      // alphanumeric, an ISO 10646 character U+00A0 or higher, a hyphen, or an underscore.\n+      // Identifiers cannot start with a hyphen, two hyphens, or a hyphen followed by a digit.\n+      // This implementation considers escaped characters invalid.\n+      // If an invalid character is found, it is replaced with an 'x'.\n+      \n+\n+      // return the string if it's already valid,\n+      // otherwise replace invalid characters with 'x'\n+      Pattern pattern =\n+         Pattern.create(\"(^[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)|(^-[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)\");", "originalCommit": "a9e6141045be99413d4c57a442a22f29ac775f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY1MTA1NQ==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418651055", "bodyText": "Ah good idea, that's much nicer.", "author": "melissa-barca", "createdAt": "2020-05-01T17:38:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4ODk5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4OTQ2OQ==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418589469", "bodyText": "I think we should replace with a - or _ for readability reasons in the calling code; e.g., exercise_six is much easier to read than exercisexsix.", "author": "jmcphers", "createdAt": "2020-05-01T15:22:40Z", "path": "src/gwt/src/org/rstudio/core/client/StringUtil.java", "diffHunk": "@@ -944,6 +944,40 @@ public static String getExtension(String string)\n       return getExtension(string, 1);\n    }\n    \n+   public static String getCssIdentifier(String string)\n+   {\n+      // Each character must be one of the following:\n+      // alphanumeric, an ISO 10646 character U+00A0 or higher, a hyphen, or an underscore.\n+      // Identifiers cannot start with a hyphen, two hyphens, or a hyphen followed by a digit.\n+      // This implementation considers escaped characters invalid.\n+      // If an invalid character is found, it is replaced with an 'x'.\n+      \n+\n+      // return the string if it's already valid,\n+      // otherwise replace invalid characters with 'x'\n+      Pattern pattern =\n+         Pattern.create(\"(^[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)|(^-[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)\");\n+      if (pattern.test(string))\n+         return string;\n+      else\n+      {\n+         StringBuilder builder = new StringBuilder();\n+         for (int i = 0; i < string.length(); i++)\n+         {\n+            char c = string.charAt(i);\n+            if (c == '_' ||\n+                c > 0x00A0 ||\n+                (c >= 'a' && c <= 'z') ||\n+                (c >= 'A' && c <= 'Z') ||\n+                (i > 0 && (c == '-' || (c >= '0' && c <= '9'))))\n+               builder.append(c);\n+            else\n+               builder.append(\"x\");", "originalCommit": "a9e6141045be99413d4c57a442a22f29ac775f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY1MTkxMQ==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418651911", "bodyText": "Agreed - I didn't use a hyphen because it wouldn't protect against a string starting with -- but an underscore works!", "author": "melissa-barca", "createdAt": "2020-05-01T17:40:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4OTQ2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MDU1MA==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418590550", "bodyText": "We should use CSS class names rather than IDs, for two reasons:\n\nAn element can only have one ID, but it can have multiple classes. So once we use the element's ID for this addressability feature, we can't use the ID for anything else.\nIt is considered best practice for a document to have only one element with a given ID, but as chunk names can be duplicated we could also wind up with duplicate IDs. It's normal (and expected) for the same CSS class to be assigned to multiple elements.", "author": "jmcphers", "createdAt": "2020-05-01T15:25:02Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputWidget.java", "diffHunk": "@@ -242,6 +243,12 @@ public int getState()\n       return state_;\n    }\n \n+   public void setId(String id)\n+   {\n+      this.getElement().setPropertyString(\"id\",", "originalCommit": "a9e6141045be99413d4c57a442a22f29ac775f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4NjMzMQ==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418686331", "bodyText": "Ok, that makes sense. I've updated this.", "author": "melissa-barca", "createdAt": "2020-05-01T18:56:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MDU1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MTAwMw==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418591003", "bodyText": "This function would be a great candidate for a unit test.", "author": "jmcphers", "createdAt": "2020-05-01T15:26:03Z", "path": "src/gwt/src/org/rstudio/core/client/StringUtil.java", "diffHunk": "@@ -944,6 +944,40 @@ public static String getExtension(String string)\n       return getExtension(string, 1);\n    }\n    \n+   public static String getCssIdentifier(String string)", "originalCommit": "a9e6141045be99413d4c57a442a22f29ac775f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcyNzU4Mg==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418727582", "bodyText": "Added \ud83d\udc4d (I even found a tiny bug while adding it).", "author": "melissa-barca", "createdAt": "2020-05-01T20:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MTAwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MTE4MA==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418591180", "bodyText": "Realize you're just moving this, but adding a unit test for this would be helpful!", "author": "jmcphers", "createdAt": "2020-05-01T15:26:23Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/rmd/ChunkContextUi.java", "diffHunk": "@@ -55,6 +55,41 @@ public ChunkContextUi(TextEditingTarget target, int renderPass,\n       createToolbar(preambleRow);\n    }\n    \n+   // Public static methods ---------------------------------------------------\n+\n+   public static String extractChunkLabel(String extractedChunkHeader)", "originalCommit": "a9e6141045be99413d4c57a442a22f29ac775f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NDIzNA==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418754234", "bodyText": "Added.", "author": "melissa-barca", "createdAt": "2020-05-01T21:54:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MTE4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMTA0OQ==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418431049", "bodyText": "I think you could re-use chunkLabel here. (I realize this is just coming up in the diff as part of the refactor but worth changing while you're in this code)", "author": "kevinushey", "createdAt": "2020-05-01T06:14:29Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/rmd/display/DefaultChunkOptionsPopupPanel.java", "diffHunk": "@@ -194,9 +162,9 @@ else if (modeId == \"mode/rhtml\")\n       String extracted = match.getGroup(1);\n       chunkPreamble_ = extractChunkPreamble(extracted, modeId);\n       \n-      String chunkLabel = extractChunkLabel(extracted);\n+      String chunkLabel = ChunkContextUi.extractChunkLabel(extracted);\n       if (!StringUtil.isNullOrEmpty(chunkLabel))\n-         tbChunkLabel_.setText(extractChunkLabel(extracted));\n+         tbChunkLabel_.setText(ChunkContextUi.extractChunkLabel(extracted));", "originalCommit": "a9e6141045be99413d4c57a442a22f29ac775f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NDc5MA==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418754790", "bodyText": "You're right, I fixed this.", "author": "melissa-barca", "createdAt": "2020-05-01T21:55:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMTA0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMTM1NA==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418431354", "bodyText": "nit: as a matter of style, I think it's better to either always include braces on each branch of an if-else, or to never include them. (Otherwise it's easy to miss things in a refactor)", "author": "kevinushey", "createdAt": "2020-05-01T06:16:13Z", "path": "src/gwt/src/org/rstudio/core/client/StringUtil.java", "diffHunk": "@@ -944,6 +944,40 @@ public static String getExtension(String string)\n       return getExtension(string, 1);\n    }\n    \n+   public static String getCssIdentifier(String string)\n+   {\n+      // Each character must be one of the following:\n+      // alphanumeric, an ISO 10646 character U+00A0 or higher, a hyphen, or an underscore.\n+      // Identifiers cannot start with a hyphen, two hyphens, or a hyphen followed by a digit.\n+      // This implementation considers escaped characters invalid.\n+      // If an invalid character is found, it is replaced with an 'x'.\n+      \n+\n+      // return the string if it's already valid,\n+      // otherwise replace invalid characters with 'x'\n+      Pattern pattern =\n+         Pattern.create(\"(^[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)|(^-[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)\");\n+      if (pattern.test(string))", "originalCommit": "a9e6141045be99413d4c57a442a22f29ac775f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTYzMQ==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418755631", "bodyText": "Hm, I tend to disagree with this. I try to write if statements so that the one liners are on top and rely on that to make them stand out.", "author": "melissa-barca", "createdAt": "2020-05-01T21:58:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMTM1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMjQwNw==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418432407", "bodyText": "nit: GWT element objects should have a setId() method, which does the same thing here but is more succinct", "author": "kevinushey", "createdAt": "2020-05-01T06:20:56Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/rmd/ChunkContextToolbar.java", "diffHunk": "@@ -106,6 +107,12 @@ public void setEngine(String engine)\n       chunkTypeLabel_.setText(engine);\n    }\n    \n+   public void setId(String id)\n+   {\n+      this.getElement().setPropertyString(\"id\",", "originalCommit": "a9e6141045be99413d4c57a442a22f29ac775f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTA4Ng==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418755086", "bodyText": "Ah, good to know. In the latest version this function no longer exists :)", "author": "melissa-barca", "createdAt": "2020-05-01T21:56:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMjQwNw=="}], "type": "inlineReview"}, {"oid": "8cd475fc736aaa38ec192704ca69987327977119", "url": "https://github.com/rstudio/rstudio/commit/8cd475fc736aaa38ec192704ca69987327977119", "message": "fix chunk output label bug and improve code\n- replace invalid characters with _ instead of x\n- set chunks class with the label instead of id\n- fix issue where output labels weren't always refreshed", "committedDate": "2020-05-01T20:16:53Z", "type": "commit"}, {"oid": "5878318a3dba42ca24508ec4d4a5a98e49eaa3ab", "url": "https://github.com/rstudio/rstudio/commit/5878318a3dba42ca24508ec4d4a5a98e49eaa3ab", "message": "add chunk label unit tests", "committedDate": "2020-05-01T21:46:24Z", "type": "commit"}, {"oid": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6", "url": "https://github.com/rstudio/rstudio/commit/525fa399e8d60ebe91efa3952fc3cb449a4c10c6", "message": "update copyright dates", "committedDate": "2020-05-01T21:50:50Z", "type": "commit"}, {"oid": "2c3d219fba5b56f32f6d0fa0b0c0c47a46ccc59f", "url": "https://github.com/rstudio/rstudio/commit/2c3d219fba5b56f32f6d0fa0b0c0c47a46ccc59f", "message": "use variable instead of recalling function", "committedDate": "2020-05-01T21:55:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTAyOQ==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418755029", "bodyText": "Nit: this needs indent fixed (should be 3 spaces)", "author": "jmcphers", "createdAt": "2020-05-01T21:56:40Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputWidget.java", "diffHunk": "@@ -242,6 +244,26 @@ public int getState()\n       return state_;\n    }\n \n+   public void setLabelClass(String value)\n+   {\n+      // ensure value has the correct prefix\n+      if (!value.startsWith(ChunkContextToolbar.CHUNK_CLASS_PREFIX + CHUNK_OUTPUT_PREFIX))\n+               value = new String(ChunkContextToolbar.CHUNK_CLASS_PREFIX +", "originalCommit": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc3ODIyNg==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418778226", "bodyText": "Fixed", "author": "melissa-barca", "createdAt": "2020-05-01T23:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTUzNw==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418755537", "bodyText": "Nit: use StringUtil.equal for comparing strings. Believe it or not GWT has made breaking changes in str1 == str2 in the past (in particular when one of them is null, it can throw an exception).", "author": "jmcphers", "createdAt": "2020-05-01T21:58:16Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputWidget.java", "diffHunk": "@@ -242,6 +244,26 @@ public int getState()\n       return state_;\n    }\n \n+   public void setLabelClass(String value)\n+   {\n+      // ensure value has the correct prefix\n+      if (!value.startsWith(ChunkContextToolbar.CHUNK_CLASS_PREFIX + CHUNK_OUTPUT_PREFIX))\n+               value = new String(ChunkContextToolbar.CHUNK_CLASS_PREFIX +\n+                                  CHUNK_OUTPUT_PREFIX +\n+                                  value);\n+      value = StringUtil.getCssIdentifier(value);\n+\n+      if (value != label_)", "originalCommit": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjgyOA==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418756828", "bodyText": "Let's add a couple more here to increase code coverage -- maybe one in which there's no label, and another in which there are no options?\n{r echo=TRUE}\n{r thisisalabel}", "author": "jmcphers", "createdAt": "2020-05-01T22:02:31Z", "path": "src/gwt/test/org/rstudio/studio/client/workbench/views/source/editors/text/rmd/ChunkContextUiTests.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * ChunkContextUiTests.java\n+ *\n+ * Copyright (C) 2009-20 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+package org.rstudio.studio.client.workbench.views.source.editors.text.rmd;\n+\n+import com.google.gwt.junit.client.GWTTestCase;\n+\n+\n+public class ChunkContextUiTests extends GWTTestCase\n+{\n+   @Override\n+   public String getModuleName()\n+   {\n+      return \"org.rstudio.studio.RStudioTests\";\n+   }\n+   \n+   public void testExtractChunkLabel()", "originalCommit": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc3ODE4OA==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418778188", "bodyText": "Updated", "author": "melissa-barca", "createdAt": "2020-05-01T23:29:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjgyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NzQ3NA==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418757474", "bodyText": "Nit: I think this might be frustrating to update since you have to remember to increase the pass count here whenever you add a pass below. How about just putting the input/expected values in arrays, and looping over the arrays?", "author": "jmcphers", "createdAt": "2020-05-01T22:04:37Z", "path": "src/gwt/test/org/rstudio/core/client/StringUtilTests.java", "diffHunk": "@@ -238,6 +238,40 @@ public void testConciseElapsedTime()\n       assertEquals(\"2:02:01:01\", days);\n    }\n   \n+   public void testGetCssIdentifier()\n+   {\n+      for (int pass = 0; pass < 5; pass++)", "originalCommit": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc3ODE1Mw==", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418778153", "bodyText": "Updated!", "author": "melissa-barca", "createdAt": "2020-05-01T23:28:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NzQ3NA=="}], "type": "inlineReview"}, {"oid": "f4f60f41dac749a117a0404ac024439c6545ecca", "url": "https://github.com/rstudio/rstudio/commit/f4f60f41dac749a117a0404ac024439c6545ecca", "message": "improve unit tests", "committedDate": "2020-05-01T23:26:31Z", "type": "commit"}]}