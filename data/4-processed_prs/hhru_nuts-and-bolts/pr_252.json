{"pr_number": 252, "pr_title": "HH-113445 add LogLevelOverrideExtension", "pr_createdAt": "2020-07-27T08:06:33Z", "pr_url": "https://github.com/hhru/nuts-and-bolts/pull/252", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNjY1Nw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460716657", "bodyText": "\u041d\u0430\u0433\u043b\u043e \u0443\u043a\u0440\u0430\u043b \u0443 JClient'\u0430", "author": "pvorlov", "createdAt": "2020-07-27T08:08:22Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/logging/LogLevelOverrideApplier.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package ru.hh.nab.starter.logging;\n+\n+import ch.qos.logback.classic.Level;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import static java.util.concurrent.Executors.newSingleThreadScheduledExecutor;\n+import java.util.concurrent.TimeUnit;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LogLevelOverrideApplier {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(LogLevelOverrideApplier.class);\n+\n+  private final Map<String, String> initialLogLevels = new HashMap<>();\n+  private final Map<String, String> previousOverrides = new HashMap<>();\n+\n+  public void run(LogLevelOverrideExtension extension) {\n+    var executor = newSingleThreadScheduledExecutor((Runnable r) -> {\n+      Thread thread = new Thread(r, LogLevelOverrideApplier.class.getSimpleName());\n+      thread.setDaemon(true);\n+      return thread;\n+    });\n+    executor.scheduleWithFixedDelay(() -> {\n+      try {\n+        applyOverrides(getOrThrow(extension.loadLogLevelOverrides()));\n+      } catch (RuntimeException e) {\n+        LOGGER.error(\"Could not apply log level overrides\", e);\n+      }\n+    }, extension.updateInterval(), extension.updateInterval(), TimeUnit.MINUTES);\n+  }\n+\n+  private void applyOverrides(Map<String, String> overrides) {\n+    Set<String> obsoleteOverrides = new HashSet<>(previousOverrides.keySet());\n+    overrides.forEach((logger, logLevel) -> {\n+      obsoleteOverrides.remove(logger);\n+      if (!logLevel.equals(previousOverrides.get(logger))) {\n+        previousOverrides.put(logger, logLevel);\n+        var initialLogLevel = initialLogLevels.get(logger);\n+        var logbackLogger = (ch.qos.logback.classic.Logger) LoggerFactory.getLogger(logger);\n+        if (initialLogLevel == null) {\n+          initialLogLevels.put(logger, logbackLogger.getLevel().levelStr);\n+        }\n+        logbackLogger.setLevel(Level.toLevel(logLevel));\n+      }\n+    });\n+    obsoleteOverrides.forEach(obsoleteOverrideLogger -> {\n+      previousOverrides.remove(obsoleteOverrideLogger);\n+      var logbackLogger = (ch.qos.logback.classic.Logger) LoggerFactory.getLogger(obsoleteOverrideLogger);\n+      logbackLogger.setLevel(Level.toLevel(initialLogLevels.get(obsoleteOverrideLogger)));\n+      initialLogLevels.remove(obsoleteOverrideLogger);\n+    });\n+  }\n+\n+  private <T> T getOrThrow(CompletableFuture<T> future) {", "originalCommit": "4f18ae78768c5c95f4b3607a4355888360734829", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyMDkwNQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460920905", "bodyText": "\u0443 \u043e\u043d\u0438 \u0448\u0430\u0440\u044f\u0442 \u043a\u0430\u043a\u043e\u0439 \u0442\u043e \u043a\u043e\u0434?\n\u0422\u043e\u0433\u0434\u0430 \u043c\u043e\u0436\u0435\u0442 \u0432 utils?", "author": "heruv1m", "createdAt": "2020-07-27T14:14:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNjY1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyOTE0OA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460929148", "bodyText": "\u0434\u0430 \u043d\u0443 \u043a\u0443\u0434\u0430. \u0442\u0443\u0442 \u043a\u043e\u0434\u0430-\u0442\u043e", "author": "dzharikhin", "createdAt": "2020-07-27T14:25:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNjY1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzMzU0Mg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460933542", "bodyText": "\u041d\u0435 \u0448\u0430\u0440\u044f\u0442. \u0414\u0443\u043c\u0430\u043b \u043f\u0440\u043e utils \u043d\u043e \u0442\u043e\u0433\u0434\u0430 \u043f\u0440\u0438\u0434\u0451\u0442\u0441\u044f public \u0434\u0435\u043b\u0430\u0442\u044c \u0438 \u0443 \u043a\u043e\u0433\u043e-\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u0443\u0442\u044c \u0441\u043e\u0431\u043b\u0430\u0437\u043d \u0437\u0430\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c.", "author": "pvorlov", "createdAt": "2020-07-27T14:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNjY1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxNzE3MA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460717170", "bodyText": "\u0421\u0434\u0435\u043b\u0430\u043b private, \u043e\u043d \u0432\u0441\u0451 \u0440\u0430\u0432\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 run", "author": "pvorlov", "createdAt": "2020-07-27T08:09:28Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java", "diffHunk": "@@ -112,16 +115,27 @@ public static NabApplicationBuilder builder() {\n     return new NabApplicationBuilder();\n   }\n \n-  public static void configureLogger() {\n-    SLF4JBridgeHandler.removeHandlersForRootLogger();\n-    SLF4JBridgeHandler.install();\n-  }\n-\n   public static void configureSentry(ApplicationContext context) {\n     FileSettings settings = context.getBean(FileSettings.class);\n     Sentry.init(settings.getString(\"sentry.dsn\"));\n   }\n \n+  private static void configureLogger(ApplicationContext context) {\n+    SLF4JBridgeHandler.removeHandlersForRootLogger();", "originalCommit": "4f18ae78768c5c95f4b3607a4355888360734829", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxODA2Nw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460718067", "bodyText": "\u041e\u0441\u0442\u0430\u0432\u0438\u043b \u043d\u0430 \u0432\u0441\u044f\u043a\u0438\u0439 \u0441\u043b\u0443\u0447\u0430\u0439 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0439 \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u0438, \u043d\u043e \u043d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d \u0447\u0442\u043e \u043d\u0430\u043c \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0443\u0436\u043d\u044b \u0442\u0430\u043d\u0446\u044b \u0441 jul-bridg'\u0435\u043c \u0432 \u0442\u0435\u0441\u0442\u0430\u0445.", "author": "pvorlov", "createdAt": "2020-07-27T08:11:07Z", "path": "nab-testbase-old/src/main/java/ru/hh/nab/testbase/old/NabTestBase.java", "diffHunk": "@@ -31,7 +32,9 @@\n \n   @Before\n   public void setUpNabTestBase() {\n-    NabApplication.configureLogger();\n+    SLF4JBridgeHandler.removeHandlersForRootLogger();", "originalCommit": "4f18ae78768c5c95f4b3607a4355888360734829", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NzY1OQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460887659", "bodyText": "\u0430 \u0437\u0430\u0447\u0435\u043c \u0442\u0443\u0442 \u0432\u043e\u043e\u0431\u0449\u0435 \u0447\u0442\u043e-\u0442\u043e \u0442\u0440\u043e\u0433\u0430\u0442\u044c?", "author": "dzharikhin", "createdAt": "2020-07-27T13:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxODA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxNDkxNA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460914914", "bodyText": "\u0421\u0438\u0433\u043d\u0430\u0442\u0443\u0440\u0430 \u043f\u043e\u043c\u0435\u043d\u044f\u043b\u0430\u0441\u044c, \u0442\u0435\u043f\u0435\u0440\u044c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c", "author": "pvorlov", "createdAt": "2020-07-27T14:05:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxODA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzMDU2MA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460930560", "bodyText": "\u0442\u0430\u043a \u043d\u0443 \u0430 \u0447\u0435 - \u043d\u0443 \u0441\u0434\u0435\u043b\u0430\u0439 \u043c\u0435\u0442\u043e\u0434 \u0431\u0435\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 - \u043f\u0440\u043e\u0441\u0442\u043e \u0449\u0430\u0441 \u0442\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043a\u0438\u0448\u043a\u0438 \u0432\u044b\u0432\u0430\u043b\u0438\u043b \u0432 \u0442\u0435\u0441\u0442\u044b", "author": "dzharikhin", "createdAt": "2020-07-27T14:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxODA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3ODYxMg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460978612", "bodyText": "\u041f\u043e\u0447\u0435\u043c\u0443 \u043c\u043d\u0435 \u044d\u0442\u043e \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f:\n\n\u042d\u0442\u043e \u043f\u043e \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u043a\u0435 \u0443\u0436\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0435 configureLogger \u0430 \u043b\u0438\u0448\u044c \u0447\u0430\u0441\u0442\u044c \u0435\u0433\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0431\u0440\u0430\u0442\u0430. \u0427\u0442\u043e\u0431\u044b \u043c\u0435\u0442\u043e\u0434 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0442\u0440\u0430\u0436\u0430\u043b \u0447\u0442\u043e \u043e\u043d \u0434\u0435\u043b\u0430\u0435\u0442 \u043d\u0430\u0434\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0435\u0433\u043e configureJULBridge \u0430 \u044d\u0442\u043e \u0443\u0436\u0435 \u043d\u0435 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u043a\u043e \u043e\u0442 2 \u0441\u0442\u0440\u043e\u0447\u0435\u043a, \u0447\u0442\u043e \u044f \u0437\u0430\u0438\u043d\u043b\u0430\u0439\u043d\u0438\u043b\n\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u043b public \u043d\u0430 private \u0447\u0442\u043e \u0431 \u043b\u0438\u0448\u043d\u0438\u0435 \u043a\u0438\u0448\u043a\u0438 \u043d\u0435 \u0442\u043e\u0440\u0447\u0430\u043b\u0438 \u0430 \u0442\u0443\u0442 \u043f\u0440\u0438\u0434\u0451\u0442\u0441\u044f public \u0434\u0435\u043b\u0430\u0442\u044c\n\u042d\u0442\u043e \u0434\u0435\u043b\u043e \u043b\u0435\u0436\u0438\u0442 \u0432 testbase-old, \u0432 \u043d\u043e\u0432\u044b\u0439 testbase \u043e\u043d \u043c\u0430\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043d\u0435 \u043f\u043e\u043f\u0430\u043b", "author": "pvorlov", "createdAt": "2020-07-27T15:32:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxODA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk5NzMyNg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460997326", "bodyText": "\u043d\u0443\u0443\u0443\u0443 \u043e\u043a", "author": "dzharikhin", "createdAt": "2020-07-27T16:00:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxODA2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NDg0MA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460884840", "bodyText": "\u0430 \u0447\u0435 \u043d\u0435 \u0432 \u0442\u0440\u0430\u0439 \u0431\u043b\u043e\u043a\u0435?", "author": "dzharikhin", "createdAt": "2020-07-27T13:21:54Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/NabApplication.java", "diffHunk": "@@ -112,16 +115,27 @@ public static NabApplicationBuilder builder() {\n     return new NabApplicationBuilder();\n   }\n \n-  public static void configureLogger() {\n-    SLF4JBridgeHandler.removeHandlersForRootLogger();\n-    SLF4JBridgeHandler.install();\n-  }\n-\n   public static void configureSentry(ApplicationContext context) {\n     FileSettings settings = context.getBean(FileSettings.class);\n     Sentry.init(settings.getString(\"sentry.dsn\"));\n   }\n \n+  private static void configureLogger(ApplicationContext context) {\n+    SLF4JBridgeHandler.removeHandlersForRootLogger();\n+    SLF4JBridgeHandler.install();\n+\n+    LogLevelOverrideExtension extension;\n+    try {\n+      extension = context.getBean(LogLevelOverrideExtension.class);\n+      LOGGER.info(\"{} activated\", LogLevelOverrideExtension.class.getSimpleName());\n+    } catch (NoSuchBeanDefinitionException e) {\n+      // Extension not activated, normal behaviour\n+      return;\n+    }\n+\n+    new LogLevelOverrideApplier().run(extension);", "originalCommit": "4f18ae78768c5c95f4b3607a4355888360734829", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxNjcyNg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460916726", "bodyText": "\u0427\u0442\u043e \u0431 \u043d\u0435 \u0437\u0430\u0433\u0440\u043e\u043c\u043e\u0436\u0434\u0430\u0442\u044c, \u0432\u0441\u0435 try \u043c\u043e\u0436\u043d\u043e \u0443\u043d\u0435\u0441\u0442\u0438 \u0432\u043d\u0443\u0442\u0440\u044c. \u041d\u043e \u0442\u0430\u043c \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0435 \u0436\u0435 \u0432\u0441\u0451 \u043a\u0440\u0443\u0442\u0438\u0442\u0441\u044f \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442, \u0441\u043b\u043e\u043c\u0430\u0442\u044c\u0441\u044f \u0443\u0436\u0435 \u0432\u043d\u0443\u0442\u0440\u0438 \u043d\u0435\u0433\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u0438\u0434\u0435\u0435.", "author": "pvorlov", "createdAt": "2020-07-27T14:08:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NDg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzNTY5MA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460935690", "bodyText": "\u043c\u043e\u0436 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0431\u0438\u043d\u0430 \u0432 \u043c\u0435\u0442\u043e\u0434 Optional?\n\u0430 LogLevelOverrideApplier \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0430 \u0441\u0442\u0430\u0442\u0438\u043a\u0443 \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0442\u044c - \u0443 \u043d\u0435\u0433\u043e \u0432\u0440\u043e\u0434\u0435 \u043b\u043e\u0433\u0438\u043a\u0438 \u0438\u043d\u0441\u0442\u0430\u043d\u0441\u043d\u043e\u0439-\u0442\u043e \u043d\u0435\u0442\u0443\n\u0447\u0435 \u0442 \u0441\u0442\u0440\u0430\u0448\u043d\u0435\u043d\u044c\u043a\u0438\u043c \u043a\u0430\u0436\u0435\u0442\u0441\u044f \u0432\u043e\u0442 \u044d\u0442\u043e\u0442 return \u0438\u0437 catch \u0438 \u043f\u043e\u0442\u043e\u043c \u043f\u043e\u0441\u043b\u0435 catch \u0435\u0449\u0435 \u0438 new \u0437\u0430 \u043d\u0438\u043c", "author": "dzharikhin", "createdAt": "2020-07-27T14:33:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NDg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NjQ0NA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460966444", "bodyText": "optional - \u043e\u043a\n\u0441\u0442\u0430\u0442\u0438\u043a\u0430 - \u043d\u0435 \u043e\u043a, \u043f\u043e\u043b\u044f \u0436 \u0438\u043d\u0441\u0442\u0430\u043d\u0441\u043d\u044b\u0435. \u0414\u0430 \u0438 \u0432\u043e\u043e\u0431\u0449\u0435 \u0431\u0435\u0437 \u0441\u0442\u0430\u0442\u0438\u043a\u0438 \u0436\u0438\u0437\u043d\u044c \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u044f\u0442\u043d\u0435\u0435, \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0442 \u043f\u043e\u044f\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u0442\u0435\u0441\u0442\u044b", "author": "pvorlov", "createdAt": "2020-07-27T15:15:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NDg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MzIzMQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460973231", "bodyText": "\u0417\u0430\u043f\u0443\u0448\u0438\u043b Optional", "author": "pvorlov", "createdAt": "2020-07-27T15:25:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NDg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NzEyMQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460887121", "bodyText": "\u043f\u0435\u0440\u0432\u0430\u044f \u0436\u0435 initialDelay - \u0442\u0430\u043c \u0436\u0435 \u043c\u043e\u0436\u043d\u043e 0 \u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435?", "author": "dzharikhin", "createdAt": "2020-07-27T13:25:20Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/logging/LogLevelOverrideApplier.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package ru.hh.nab.starter.logging;\n+\n+import ch.qos.logback.classic.Level;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import static java.util.concurrent.Executors.newSingleThreadScheduledExecutor;\n+import java.util.concurrent.TimeUnit;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LogLevelOverrideApplier {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(LogLevelOverrideApplier.class);\n+\n+  private final Map<String, String> initialLogLevels = new HashMap<>();\n+  private final Map<String, String> previousOverrides = new HashMap<>();\n+\n+  public void run(LogLevelOverrideExtension extension) {\n+    var executor = newSingleThreadScheduledExecutor((Runnable r) -> {\n+      Thread thread = new Thread(r, LogLevelOverrideApplier.class.getSimpleName());\n+      thread.setDaemon(true);\n+      return thread;\n+    });\n+    executor.scheduleWithFixedDelay(() -> {\n+      try {\n+        applyOverrides(getOrThrow(extension.loadLogLevelOverrides()));\n+      } catch (RuntimeException e) {\n+        LOGGER.error(\"Could not apply log level overrides\", e);\n+      }\n+    }, extension.updateInterval(), extension.updateInterval(), TimeUnit.MINUTES);", "originalCommit": "8cf9f6cf58964f61cdd150d0c31791c5908e6630", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxNzU0OQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460917549", "bodyText": "\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u0441\u0442\u0430\u043b, \u0434\u0443\u043c\u0430\u044e \u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u0442\u0430\u043a \u043d\u0430 \u0441\u0442\u0430\u0440\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0435\u0432\u0430 \u0445\u0432\u0430\u0442\u0430\u0435\u0442", "author": "pvorlov", "createdAt": "2020-07-27T14:09:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NzEyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNzA1MA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460907050", "bodyText": "\u043a\u0430\u043a-\u0442\u043e \u043c\u043d\u0435 \u0441\u0442\u0440\u0435\u043c\u043d\u043e, \u043a\u043e\u0433\u0434\u0430 executor \u043d\u0435 \u0432 \u043f\u043e\u043b\u0435, \u043a\u043e\u043d\u0435\u0447\u043d\u043e)\n\u043d\u0438\u043a\u0430\u043a\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430", "author": "dzharikhin", "createdAt": "2020-07-27T13:54:51Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/logging/LogLevelOverrideApplier.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package ru.hh.nab.starter.logging;\n+\n+import ch.qos.logback.classic.Level;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import static java.util.concurrent.Executors.newSingleThreadScheduledExecutor;\n+import java.util.concurrent.TimeUnit;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LogLevelOverrideApplier {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(LogLevelOverrideApplier.class);\n+\n+  private final Map<String, String> initialLogLevels = new HashMap<>();\n+  private final Map<String, String> previousOverrides = new HashMap<>();\n+\n+  public void run(LogLevelOverrideExtension extension) {\n+    var executor = newSingleThreadScheduledExecutor((Runnable r) -> {", "originalCommit": "8cf9f6cf58964f61cdd150d0c31791c5908e6630", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxODMxOA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460918318", "bodyText": "\u0410 \u043a\u0430\u043a\u043e\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c \u0442\u044b \u0445\u043e\u0447\u0435\u0448\u044c?", "author": "pvorlov", "createdAt": "2020-07-27T14:10:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNzA1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyODgwNg==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460928806", "bodyText": "\u043d\u0443 \u043e\u0431\u044b\u0447\u043d\u043e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0432\u044b\u043a\u043b\u044e\u0447\u0430\u043b\u043a\u0443. \u0434\u0430 \u0432\u0440\u043e\u0434\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0442\u0430\u043a\u043e\u0433\u043e", "author": "dzharikhin", "createdAt": "2020-07-27T14:24:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNzA1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNzYxOA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460907618", "bodyText": "\u043b\u0443\u0447\u0448\u0435 \u0432 \u0438\u043c\u0435\u043d\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u044e\u043d\u0438\u0442\u044b \u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c. \u0436\u0430\u0432\u0430\u0434\u043e\u043a\u0438 - \u043d\u0435 \u0442\u0430\u043a \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e", "author": "dzharikhin", "createdAt": "2020-07-27T13:55:34Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/logging/LogLevelOverrideExtension.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package ru.hh.nab.starter.logging;\n+\n+import java.util.Map;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Extension which provides ability to override static Loggers levels with dynamic ones.\n+ * To activate extension simply implement it as a Spring bean.\n+ */\n+public interface LogLevelOverrideExtension {\n+\n+  /**\n+   * How often override should be loaded and applied in minutes\n+   */\n+  int updateInterval();", "originalCommit": "8cf9f6cf58964f61cdd150d0c31791c5908e6630", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxOTUyOA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460919528", "bodyText": "\u041e\u043a, \u0442\u043e\u0436\u0435 \u0434\u0443\u043c\u0430\u043b \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043d\u0430\u0447\u0430\u043b\u0430. \u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u043e, \u0447\u0442\u043e \u044d\u0442\u043e\u0442 \u043a\u0443\u0441\u043e\u043a \u043f\u0440\u0438\u0434\u0451\u0442\u0441\u044f \u0432\u0441\u0435\u043c \u043a\u043e\u043f\u0438\u043f\u0430\u0441\u0442\u0438\u0442\u044c, \u0445\u043e\u0442\u0435\u043b \u0435\u0433\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435\u0433\u0440\u043e\u043c\u043e\u0437\u0434\u043a\u0438\u043c.", "author": "pvorlov", "createdAt": "2020-07-27T14:12:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNzYxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyMDkzOA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460920938", "bodyText": "\u0413\u043e\u0442\u043e\u0432\u043e", "author": "pvorlov", "createdAt": "2020-07-27T14:14:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNzYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyMDYxOQ==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460920619", "bodyText": "\u0430 \u0435\u0441\u043b\u0438 \u043d\u0430 \u0434\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430?\n\u043e\u0434\u0438\u043d \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442, \u0430 \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442?", "author": "heruv1m", "createdAt": "2020-07-27T14:13:59Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/logging/LogLevelOverrideApplier.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package ru.hh.nab.starter.logging;\n+\n+import ch.qos.logback.classic.Level;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import static java.util.concurrent.Executors.newSingleThreadScheduledExecutor;\n+import java.util.concurrent.TimeUnit;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LogLevelOverrideApplier {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(LogLevelOverrideApplier.class);\n+\n+  private final Map<String, String> initialLogLevels = new HashMap<>();\n+  private final Map<String, String> previousOverrides = new HashMap<>();\n+\n+  public void run(LogLevelOverrideExtension extension) {\n+    var executor = newSingleThreadScheduledExecutor((Runnable r) -> {\n+      Thread thread = new Thread(r, LogLevelOverrideApplier.class.getSimpleName());\n+      thread.setDaemon(true);\n+      return thread;\n+    });\n+    executor.scheduleWithFixedDelay(() -> {\n+      try {\n+        applyOverrides(getOrThrow(extension.loadLogLevelOverrides()));\n+      } catch (RuntimeException e) {\n+        LOGGER.error(\"Could not apply log level overrides\", e);\n+      }\n+    }, extension.updateInterval(), extension.updateInterval(), TimeUnit.MINUTES);\n+  }\n+\n+  private void applyOverrides(Map<String, String> overrides) {\n+    Set<String> obsoleteOverrides = new HashSet<>(previousOverrides.keySet());\n+    overrides.forEach((logger, logLevel) -> {\n+      obsoleteOverrides.remove(logger);\n+      if (!logLevel.equals(previousOverrides.get(logger))) {\n+        previousOverrides.put(logger, logLevel);\n+        var initialLogLevel = initialLogLevels.get(logger);\n+        var logbackLogger = (ch.qos.logback.classic.Logger) LoggerFactory.getLogger(logger);\n+        if (initialLogLevel == null) {\n+          initialLogLevels.put(logger, logbackLogger.getEffectiveLevel().levelStr);\n+        }\n+        logbackLogger.setLevel(Level.toLevel(logLevel));\n+      }\n+    });\n+    obsoleteOverrides.forEach(obsoleteOverrideLogger -> {", "originalCommit": "8cf9f6cf58964f61cdd150d0c31791c5908e6630", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1OTc3Mw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r460959773", "bodyText": "\u0420\u0430\u0437\u0431\u0438\u043b (\u0434\u0430\u0436\u0435 \u043d\u0430 \u0442\u0440\u0438, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0438\u0445 \u043e\u0432\u0435\u0440\u0440\u0430\u0439\u0434\u043e\u0432 \u0442\u043e\u0436\u0435 \u0432\u044b\u043d\u0435\u0441)", "author": "pvorlov", "createdAt": "2020-07-27T15:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyMDYxOQ=="}], "type": "inlineReview"}, {"oid": "4ed2bc83642148efb253caeef727305c9aabaa5b", "url": "https://github.com/hhru/nuts-and-bolts/commit/4ed2bc83642148efb253caeef727305c9aabaa5b", "message": "HH-113445 add Optional for extension bean", "committedDate": "2020-07-27T15:23:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAxMzQ5OA==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r461013498", "bodyText": "withLogLevel", "author": "dzharikhin", "createdAt": "2020-07-27T16:25:40Z", "path": "nab-starter/src/main/java/ru/hh/nab/starter/logging/LogLevelOverrideApplier.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package ru.hh.nab.starter.logging;\n+\n+import ch.qos.logback.classic.Level;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import static java.util.concurrent.Executors.newSingleThreadScheduledExecutor;\n+import java.util.concurrent.TimeUnit;\n+import static java.util.stream.Collectors.toMap;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LogLevelOverrideApplier {\n+\n+  private static class LogInfo {\n+    private String logLevel;\n+\n+    public Optional<String> getLogLevelOptional() {\n+      return Optional.ofNullable(logLevel);\n+    }\n+\n+    public LogInfo setLogLevel(String logLevel) {", "originalCommit": "4af0728b95891fff01d130bd83f490c4a8109b01", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMjUxNw==", "url": "https://github.com/hhru/nuts-and-bolts/pull/252#discussion_r461022517", "bodyText": "\u042d\u0442\u043e \u0436 \u043d\u0435 \u0431\u0438\u043b\u0434\u0435\u0440", "author": "pvorlov", "createdAt": "2020-07-27T16:40:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAxMzQ5OA=="}], "type": "inlineReview"}, {"oid": "165cb3732ba23ba698c1173075cdb1f325ff59c9", "url": "https://github.com/hhru/nuts-and-bolts/commit/165cb3732ba23ba698c1173075cdb1f325ff59c9", "message": "HH-113445 add LogLevelOverrideExtension", "committedDate": "2020-07-27T16:45:50Z", "type": "commit"}, {"oid": "165cb3732ba23ba698c1173075cdb1f325ff59c9", "url": "https://github.com/hhru/nuts-and-bolts/commit/165cb3732ba23ba698c1173075cdb1f325ff59c9", "message": "HH-113445 add LogLevelOverrideExtension", "committedDate": "2020-07-27T16:45:50Z", "type": "forcePushed"}]}