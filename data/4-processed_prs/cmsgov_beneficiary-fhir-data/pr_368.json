{"pr_number": 368, "pr_title": "BFD-354: Document HTTP request headers (for audit and optional data)", "pr_createdAt": "2020-10-01T18:22:38Z", "pr_url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/368", "timeline": [{"oid": "f8f13339d08006548ca02f0a2cf96becc242848b", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/f8f13339d08006548ca02f0a2cf96becc242848b", "message": "Fix up README headers.\n\nThey were a bit off and made the doc a bit more confusing.\n\nBFD-354", "committedDate": "2020-10-01T17:40:47Z", "type": "commit"}, {"oid": "abe8ea89475e9bbc56225e4bb6fd05e840ea58f6", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/abe8ea89475e9bbc56225e4bb6fd05e840ea58f6", "message": "Fix line endings and trailing whitespace in README\n\nIt was all goofed up.\n\nBFD-354", "committedDate": "2020-10-01T18:00:37Z", "type": "commit"}, {"oid": "7b29d9bc2d4a057734bc8e2b9faffd1d205e9d6e", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/7b29d9bc2d4a057734bc8e2b9faffd1d205e9d6e", "message": "Add docs on HTTP request headers.\n\nCovers the headers used for audit purposes and those that toggle\noptional data in the results.\n\nBFD-354", "committedDate": "2020-10-01T18:13:45Z", "type": "commit"}, {"oid": "52d12e33c29a552f3e74fd4d128e3dbf1ed0f0b4", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/52d12e33c29a552f3e74fd4d128e3dbf1ed0f0b4", "message": "Add section for (internal) developer docs.\n\nAlmost certainly missing several others, but this is a start, at least.\n\nBFD-354", "committedDate": "2020-10-01T18:24:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkyOTIyMg==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/368#discussion_r499929222", "bodyText": "@keithdadkins - This should do the trick for using header to aggregate bulk metrics. It'll also allow us to further breakdown these bulk partner requests by the requesting party (ACO, Provider, etc.)", "author": "jzulim", "createdAt": "2020-10-05T23:41:39Z", "path": "docs/request-audit-headers.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# BFD Audit Headers\n+\n+This document details the HTTP headers that should be included when calling BFD,\n+  to ensure that proper audit information is available to the BFD team.\n+Future versions of BFD may enforce/require some or all of these headers.\n+\n+These fields allow enginees & operators to read the BFD logs\n+  and see exactly _why_ data was requested.\n+Some of this information is redundant with information already captured elsewhere,\n+  but experience has shown it to be very helpful when investigating issues.\n+\n+## Synchronous Requests\n+\n+For synchronous (i.e. non-bulk) requests, BFD users SHALL include meaningful values for as many as possible of the following HTTP headers.\n+\n+* `BlueButton-OriginalQueryId`: a unique ID (e.g. UUID) generated by the frontend system, per HTTP request to that frontend system.\n+    * This ID SHALL be included in all log events for the frontend system.\n+    * This allows requests to be traced across systems.\n+* `BlueButton-OriginalQueryCounter`: start at `1` and increment for every request to BFD with the same `BlueButton-OriginalQueryId` value.\n+* `BlueButton-OriginalQueryTimestamp`: an ISO-8601 UTC timestamp representing (roughly) when the original request reached the frontend system.\n+* `BlueButton-DeveloperId`: the unique ID in the frontend system for the developer/vendor of the third-party application.\n+* `BlueButton-Developer`: the human-readable name in the frontend system for the developer/vendor of the third-party application.\n+* `BlueButton-ApplicationId`: the unique ID in the frontend system for the application/client that will receieve the data.\n+* `BlueButton-Application`: the human-readable name in the frontend system for the application/client that will receive the data.\n+* `BlueButton-UserId`: the unique ID in the frontend system for the user (e.g. beneficiary) that data is being requested on behalf of.\n+* `BlueButton-User`: the human-readable login ID (e.g. email address) in the frontend system for the user (e.g. beneficiary) that the data is being requested on behalf of.\n+* `BlueButton-BeneficiaryId`: the unique beneificary ID (e.g. `Patient.id`) from BFD for the user the beneficiary whose data is being requested.\n+\n+## Asynchronous Requests", "originalCommit": "52d12e33c29a552f3e74fd4d128e3dbf1ed0f0b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkyOTM3NA==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/368#discussion_r499929374", "bodyText": "I did not know how this behavior worked, this documentation helped a lot. Thx!", "author": "jzulim", "createdAt": "2020-10-05T23:42:09Z", "path": "docs/request-options.md", "diffHunk": "@@ -0,0 +1,28 @@\n+# BFD Request Options\n+\n+This document details the request options that can be used when calling BFD.\n+Future versions of BFD may apply some of these options automatically,\n+  based on other request details (e.g. authentication/authorization).\n+\n+## Optional Data\n+\n+Some data fields are optional; they're only included when the request is configured to do so.\n+\n+* HTTP Header: `IncludeIdentifiers`", "originalCommit": "52d12e33c29a552f3e74fd4d128e3dbf1ed0f0b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}