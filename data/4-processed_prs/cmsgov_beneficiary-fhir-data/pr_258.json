{"pr_number": 258, "pr_title": "BLUEBUTTON-2002 Return synthetic resources with negative IDs", "pr_createdAt": "2020-04-22T17:27:43Z", "pr_url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r416669064", "bodyText": "Does this change make sense to do? Does it have a potential to cause any incompatibility issues?\nI believe that the exception here should indicate that the ID parameter pattern is invalid rather than not found. This also enables the ability to more easily test this via the IT tests.", "author": "dtisza1", "createdAt": "2020-04-28T14:40:17Z", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/CoverageResourceProvider.java", "diffHunk": "@@ -85,7 +86,9 @@ public Coverage read(@IdParam IdType coverageId) {\n       throw new IllegalArgumentException();\n \n     Matcher coverageIdMatcher = COVERAGE_ID_PATTERN.matcher(coverageIdText);\n-    if (!coverageIdMatcher.matches()) throw new ResourceNotFoundException(coverageId);\n+    if (!coverageIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + coverageIdText);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2Nzk5OA==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r416767998", "bodyText": "NOTE:  The java.lang.IllegalArgumentException results in a ca.uhn.fhir.rest.server.exceptions.InvalidRequestException exception here as seen in the IT tests. Was following other related code examples, but should these all be changed to InvalidRequestException?", "author": "dtisza1", "createdAt": "2020-04-28T16:48:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4MTU1NA==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r417481554", "bodyText": "How do we differentiate between a valid pattern that doesn't have an ID in the database, and an invalid pattern?", "author": "njdister", "createdAt": "2020-04-29T17:19:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzNjkzMg==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r419436932", "bodyText": "How do we differentiate between a valid pattern that doesn't have an ID in the database, and an invalid pattern?\n@njdister Further down in the code, a ResourceNotFoundException is thrown when the ID is not found. I think your question supports the change for the pattern not matching to throw an IllegalArgumentException here instead. Otherwise, would not be able to tell the difference and be able to easily test for this difference.", "author": "dtisza1", "createdAt": "2020-05-04T13:30:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0OTk0OA==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r419449948", "bodyText": "I agree that this change makes sense and is helpful. We shouldn't try to preserve bad exceptions for assumed compatibility.", "author": "RickHawesUSDS", "createdAt": "2020-05-04T13:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTM1MQ==", "url": "https://github.com/CMSgov/beneficiary-fhir-data/pull/258#discussion_r416669351", "bodyText": "Does this change make sense to do? Does it have a potential to cause any incompatibility issues?\nI believe that the exception here should indicate that the ID parameter pattern is invalid rather than not found. This also enables the ability to more easily test this via the IT tests.", "author": "dtisza1", "createdAt": "2020-04-28T14:40:40Z", "path": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/ExplanationOfBenefitResourceProvider.java", "diffHunk": "@@ -102,7 +102,9 @@ public ExplanationOfBenefit read(@IdParam IdType eobId) {\n     if (eobIdText == null || eobIdText.trim().isEmpty()) throw new IllegalArgumentException();\n \n     Matcher eobIdMatcher = EOB_ID_PATTERN.matcher(eobIdText);\n-    if (!eobIdMatcher.matches()) throw new ResourceNotFoundException(eobId);\n+    if (!eobIdMatcher.matches())\n+      throw new IllegalArgumentException(\"Unsupported ID pattern: \" + eobIdText);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "98056186907ddeef1aa21ee6723a3c5b306d7f99", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/98056186907ddeef1aa21ee6723a3c5b306d7f99", "message": "Return synthetic resources with negative IDs\n\nA regex for parsing the format of EoB and Coverage resource\nread requests did not successfully parse synthetic\nResource read requests due to their negative IDs.\nThe result was that no synthetic EoB or Coverage resources\nwere found on Read requests.\n\nThis updates those regex to allow for the IDs of these\nResources to be negative.", "committedDate": "2020-05-06T17:08:16Z", "type": "commit"}, {"oid": "b8f67ba7e435a1e282f99dcd40b9dfbca228c28f", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/b8f67ba7e435a1e282f99dcd40b9dfbca228c28f", "message": "Throw IllegalArgumentException on invalid eobId\n\nThis changes the exception from ResourceNotFoundException\nto IllegalArgumentException when the eobIdText does not\nmatch the expected Regex pattern. This parameter is\ninvalid rather than indicating an eobId was not found.", "committedDate": "2020-05-06T17:08:16Z", "type": "commit"}, {"oid": "0f10c8ccee2a606e502714c2b1c9808b237224f0", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/0f10c8ccee2a606e502714c2b1c9808b237224f0", "message": "Throw IllegalArgumentException for invalid ID\n\nThis changes the exception from ResourceNotFoundException\nto IllegalArgumentException when the coverageIdText does not\nmatch the expected Regex pattern. This parameter is\ninvalid rather than indicating an covargeId was not found.", "committedDate": "2020-05-06T17:08:16Z", "type": "commit"}, {"oid": "6a928400763635b087bbfa1e35c0d83e2d889799", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/6a928400763635b087bbfa1e35c0d83e2d889799", "message": "Update IT tests for negative and invalid IDs\n\nThis updates the IT tests for Coverage and EOB read()\nmethods to test that the ID parameters work as expected\nfor negative IDs and IDs that do not pass the regex\npattern for a valid format.", "committedDate": "2020-05-06T17:08:16Z", "type": "commit"}, {"oid": "0cdfbfcf004c101505c0a48311fd60df4acb12ac", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/0cdfbfcf004c101505c0a48311fd60df4acb12ac", "message": "Update comments per Karl's suggestion", "committedDate": "2020-05-06T17:08:16Z", "type": "commit"}, {"oid": "0cdfbfcf004c101505c0a48311fd60df4acb12ac", "url": "https://github.com/CMSgov/beneficiary-fhir-data/commit/0cdfbfcf004c101505c0a48311fd60df4acb12ac", "message": "Update comments per Karl's suggestion", "committedDate": "2020-05-06T17:08:16Z", "type": "forcePushed"}]}