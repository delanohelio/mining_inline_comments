{"pr_number": 278, "pr_title": "fix: Properly define + document JKubeProjectAssembly behavior", "pr_createdAt": "2020-07-03T15:55:02Z", "pr_url": "https://github.com/eclipse/jkube/pull/278", "timeline": [{"oid": "047bffae93f410c5017f930fa69c1f4eb7fcf222", "url": "https://github.com/eclipse/jkube/commit/047bffae93f410c5017f930fa69c1f4eb7fcf222", "message": "WIP: TODO, fix documentation, check rest of examples\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-03T16:03:49Z", "type": "forcePushed"}, {"oid": "51332fc1b23556b00f18047b8878ec79277e9178", "url": "https://github.com/eclipse/jkube/commit/51332fc1b23556b00f18047b8878ec79277e9178", "message": "fix: Properly define + document JKubeProjectAssembly behavior\n\n- AssemblyFileSet supports wildcard includes and excludes\n- AssemblyFileSet contains default file and directory modes\n- Removed no longer working descriptor and descriptorRef configs from AssemblyFileSet\n- Removed unsupported assembly .xml descriptors\n- Removed outdated documentation\n- xml-config quickstart works as expected\n- Fixed *Controller*Enricher to support xml configured names (just like replicas or image pull policy)\n- Updated Assembly related documentation\n- Updated ibm-javaee8-webprofile-liberty example\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-06T13:49:49Z", "type": "forcePushed"}, {"oid": "ef8de0095fbcc3bf96ba2bb2756dbdc35c246596", "url": "https://github.com/eclipse/jkube/commit/ef8de0095fbcc3bf96ba2bb2756dbdc35c246596", "message": "fix: Properly define + document JKubeProjectAssembly behavior\n\n- AssemblyFileSet supports wildcard includes and excludes\n- AssemblyFileSet contains default file and directory modes\n- Removed no longer working descriptor and descriptorRef configs from AssemblyFileSet\n- Removed unsupported assembly .xml descriptors\n- Removed outdated documentation\n- xml-config quickstart works as expected\n- Fixed *Controller*Enricher to support xml configured names (just like replicas or image pull policy)\n- Updated Assembly related documentation\n- Updated ibm-javaee8-webprofile-liberty example\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-06T15:10:09Z", "type": "forcePushed"}, {"oid": "4fb2b13b18cc9c5f26e102a85ec8ad756dd8c600", "url": "https://github.com/eclipse/jkube/commit/4fb2b13b18cc9c5f26e102a85ec8ad756dd8c600", "message": "fix: Properly define + document JKubeProjectAssembly behavior\n\n- AssemblyFileSet supports wildcard includes and excludes\n- AssemblyFileSet contains default file and directory modes\n- Removed no longer working descriptor and descriptorRef configs from AssemblyFileSet\n- Removed unsupported assembly .xml descriptors\n- Removed outdated documentation\n- xml-config quickstart works as expected\n- Fixed *Controller*Enricher to support xml configured names (just like replicas or image pull policy)\n- Updated Assembly related documentation\n- Updated ibm-javaee8-webprofile-liberty example\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-06T15:12:43Z", "type": "forcePushed"}, {"oid": "b1990afa96db340124e6f3d54ee18975acf6a5df", "url": "https://github.com/eclipse/jkube/commit/b1990afa96db340124e6f3d54ee18975acf6a5df", "message": "fix: Properly define + document JKubeProjectAssembly behavior\n\n- AssemblyFileSet supports wildcard includes and excludes\n- AssemblyFileSet contains default file and directory modes\n- Removed no longer working descriptor and descriptorRef configs from AssemblyFileSet\n- Removed unsupported assembly .xml descriptors\n- Removed outdated documentation\n- xml-config quickstart works as expected\n- Fixed *Controller*Enricher to support xml configured names (just like replicas or image pull policy)\n- Updated Assembly related documentation\n- Updated ibm-javaee8-webprofile-liberty example\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-06T15:30:43Z", "type": "forcePushed"}, {"oid": "71f6c1d0c1706b9e4f888078f620ceb75521e47b", "url": "https://github.com/eclipse/jkube/commit/71f6c1d0c1706b9e4f888078f620ceb75521e47b", "message": "fix: Properly define + document JKubeProjectAssembly behavior\n\n- AssemblyFileSet supports wildcard includes and excludes\n- AssemblyFileSet contains default file and directory modes\n- Removed no longer working descriptor and descriptorRef configs from AssemblyFileSet\n- Removed unsupported assembly .xml descriptors\n- Removed outdated documentation\n- xml-config quickstart works as expected\n- Fixed *Controller*Enricher to support xml configured names (just like replicas or image pull policy)\n- Updated Assembly related documentation\n- Updated ibm-javaee8-webprofile-liberty example\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-08T11:46:33Z", "type": "forcePushed"}, {"oid": "0158f25a46284d5253860d671f27caa4b773e964", "url": "https://github.com/eclipse/jkube/commit/0158f25a46284d5253860d671f27caa4b773e964", "message": "fix: Properly define + document JKubeProjectAssembly behavior\n\n- AssemblyFileSet supports wildcard includes and excludes\n- AssemblyFileSet contains default file and directory modes\n- Removed no longer working descriptor and descriptorRef configs from AssemblyFileSet\n- Removed unsupported assembly .xml descriptors\n- Removed outdated documentation\n- xml-config quickstart works as expected\n- Fixed *Controller*Enricher to support xml configured names (just like replicas or image pull policy)\n- Updated Assembly related documentation\n- Updated ibm-javaee8-webprofile-liberty example\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-08T12:53:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY3Nzk5MQ==", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452677991", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \" dependencies for you application to run.\");\n          \n          \n            \n                            \" dependencies for your application to run.\");", "author": "rohanKanojia", "createdAt": "2020-07-10T07:43:20Z", "path": "jkube-kit/generator/java-exec/src/main/java/org/eclipse/jkube/generator/javaexec/JavaExecGenerator.java", "diffHunk": "@@ -173,21 +170,17 @@ protected AssemblyConfiguration createAssembly() {\n     }\n \n     protected void addAssembly(AssemblyConfiguration.AssemblyConfigurationBuilder builder) {\n-        String assemblyRef = getConfig(Config.assemblyRef);\n-        if (assemblyRef != null) {\n-            builder.descriptorRef(assemblyRef);\n-        } else {\n-            final List<AssemblyFileSet> fileSets = new ArrayList<>(addAdditionalFiles());\n-            if (isFatJar()) {\n-                FatJarDetector.Result fatJar = detectFatJar();\n-                if (fatJar != null) {\n-                    fileSets.add(getOutputDirectoryFileSet(fatJar, getProject()));\n-                }\n-            } else {\n-                builder.descriptorRef(\"artifact-with-dependencies\");\n+        final List<AssemblyFileSet> fileSets = new ArrayList<>(addAdditionalFiles());\n+        if (isFatJar()) {\n+            FatJarDetector.Result fatJar = detectFatJar();\n+            if (fatJar != null) {\n+                fileSets.add(getOutputDirectoryFileSet(fatJar, getProject()));\n             }\n-            builder.inline(Assembly.builder().fileSets(fileSets).build());\n+        } else {\n+            log.warn(\"No fat Jar detected, make sure your image assembly configuration contains all the required\" +\n+                \" dependencies for you application to run.\");", "originalCommit": "0158f25a46284d5253860d671f27caa4b773e964", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc0ODU5Mg==", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452748592", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \" dependencies for you application to run.\");\n          \n          \n            \n                            \" dependencies for your application to run.\");", "author": "rohanKanojia", "createdAt": "2020-07-10T10:01:07Z", "path": "jkube-kit/jkube-kit-openliberty/src/main/java/org/eclipse/jkube/openliberty/generator/OpenLibertyGenerator.java", "diffHunk": "@@ -70,26 +70,22 @@ public boolean isApplicable(List<ImageConfiguration> configs) {\n \n     @Override\n     protected void addAssembly(AssemblyConfiguration.AssemblyConfigurationBuilder builder) {\n-        String assemblyRef = getConfig(Config.assemblyRef);\n-        if (assemblyRef != null) {\n-            builder.descriptorRef(assemblyRef);\n-        } else {\n-            final List<AssemblyFileSet> fileSets = new ArrayList<>(addAdditionalFiles());\n-            if (isFatJar()) {\n-                FatJarDetector.Result fatJar = detectFatJar();\n-                JavaProject project = getProject();\n-                if (fatJar != null) {\n-                    AssemblyFileSet fileSet = getOutputDirectoryFileSet(fatJar, project);\n-                    if (LIBERTY_SELF_EXTRACTOR.equals(fatJar.getMainClass())) {\n-                        this.runnableJarName = fatJar.getArchiveFile().getName();\n-                    }\n-                    fileSets.add(fileSet);\n+        final List<AssemblyFileSet> fileSets = new ArrayList<>(addAdditionalFiles());\n+        if (isFatJar()) {\n+            FatJarDetector.Result fatJar = detectFatJar();\n+            JavaProject project = getProject();\n+            if (fatJar != null) {\n+                AssemblyFileSet fileSet = getOutputDirectoryFileSet(fatJar, project);\n+                if (LIBERTY_SELF_EXTRACTOR.equals(fatJar.getMainClass())) {\n+                    this.runnableJarName = fatJar.getArchiveFile().getName();\n                 }\n-            } else {\n-                builder.descriptorRef(\"artifact-with-dependencies\");\n+                fileSets.add(fileSet);\n             }\n-            builder.inline(Assembly.builder().fileSets(fileSets).build());\n+        } else {\n+            log.warn(\"No fat Jar detected, make sure your image assembly configuration contains all the required\" +\n+                \" dependencies for you application to run.\");", "originalCommit": "0158f25a46284d5253860d671f27caa4b773e964", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MDY2OQ==", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452750669", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            a| User and/or group under which the files should be added. The user must already exist in the base image.\n          \n          \n            \n            | User and/or group under which the files should be added. The user must already exist in the base image.", "author": "rohanKanojia", "createdAt": "2020-07-10T10:05:27Z", "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "diffHunk": "@@ -51,8 +55,8 @@ assembly configuration\n | *tarLongFileMode*\n | Sets the TarArchiver behaviour on file paths with more than 100 characters length. Valid values are: \"warn\"(default), \"fail\", \"truncate\", \"gnu\", \"posix\", \"posix_warn\" or \"omit\"\n \n-| [[config-image-build-assembly-user]] *user*\n-| User and/or group under which the files should be added. The user must already exist in the base image.\n+| *user*\n+a| User and/or group under which the files should be added. The user must already exist in the base image.", "originalCommit": "0158f25a46284d5253860d671f27caa4b773e964", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNjk1NQ==", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452826955", "bodyText": "This is not a typo, it's asciidoc syntax", "author": "manusa", "createdAt": "2020-07-10T12:59:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MDY2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNzI1Ng==", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452827256", "bodyText": "oh,ok", "author": "rohanKanojia", "createdAt": "2020-07-10T12:59:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MDY2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MTc4Mw==", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452751783", "bodyText": "Is this by accident or does this preceding a has some purpose which I'm not aware of?", "author": "rohanKanojia", "createdAt": "2020-07-10T10:07:47Z", "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "diffHunk": "@@ -64,140 +68,50 @@ For example, the image `jboss/wildfly` use a \"jboss\" user under which all comman\n \n In the event you do not need to include any artifacts with the image, you may safely omit this element from the configuration.\n \n-[[build-assembly-descriptor]]\n-==== Assembly Descriptor\n-\n-With using the `inline`, `descriptor` or `descriptorRef` option\n-it is possible to bring local files, artifacts and dependencies into\n-the running Docker container. A `descriptor` points to a file\n-describing the data to put into an image to build. It has the same\n-http://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[format] as for creating assemblies with the\n-http://maven.apache.org/plugins/maven-assembly-plugin[maven-assembly-plugin] with following exceptions:\n-\n-* `<formats>` are ignored, the assembly will allways use a directory\n-when preparing the data container (i.e. the format is fixed to\n-`dir`)\n-* The `<id>` is ignored since only a single assembly descriptor is\n-used (no need to distinguish multiple descriptors)\n-\n-Also you can inline the assembly description with a `inline` description\n-directly into the pom file. Adding the proper namespace even allows for\n-IDE autocompletion. As an example, refer to the profile `inline` in\n-the `data-jolokia-demo` 's pom.xml.\n-\n-Alternatively `descriptorRef` can be used with the name of a\n-predefined assembly descriptor. The following symbolic names can be\n-used for `descriptorRef`:\n-\n-[[build-assembly-descriptor-refs]]\n-.Predefined Assembly Descriptors\n-[cols=\"1,3\"]\n+[[build-assembly-inline]]\n+==== Assembly - Inline\n+\n+Inlined assembly description with a format very similar to\n+https://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[Maven Assembly Plugin].\n+\n+[cols=\"1,5\"]\n |===\n-| Assembly Reference | Description\n+| Element | Description\n \n-| *artifact-with-dependencies*\n-| Attaches project's artifact and all its dependencies. Also, when a `classpath` file exists in the target directory, this will be added to.\n+| *id*\n+| Unique ID for the assembly.\n \n-| *artifact*\n-| Attaches only the project's artifact but no dependencies.\n+| *files*\n+a| List of files for the assembly.", "originalCommit": "0158f25a46284d5253860d671f27caa4b773e964", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNzEzNA==", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452827134", "bodyText": "https://asciidoctor.org/docs/user-manual/#tables\nOur docs are full of these", "author": "manusa", "createdAt": "2020-07-10T12:59:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MTc4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1NTEzOQ==", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452755139", "bodyText": "here too", "author": "rohanKanojia", "createdAt": "2020-07-10T10:15:07Z", "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "diffHunk": "@@ -64,140 +68,50 @@ For example, the image `jboss/wildfly` use a \"jboss\" user under which all comman\n \n In the event you do not need to include any artifacts with the image, you may safely omit this element from the configuration.\n \n-[[build-assembly-descriptor]]\n-==== Assembly Descriptor\n-\n-With using the `inline`, `descriptor` or `descriptorRef` option\n-it is possible to bring local files, artifacts and dependencies into\n-the running Docker container. A `descriptor` points to a file\n-describing the data to put into an image to build. It has the same\n-http://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[format] as for creating assemblies with the\n-http://maven.apache.org/plugins/maven-assembly-plugin[maven-assembly-plugin] with following exceptions:\n-\n-* `<formats>` are ignored, the assembly will allways use a directory\n-when preparing the data container (i.e. the format is fixed to\n-`dir`)\n-* The `<id>` is ignored since only a single assembly descriptor is\n-used (no need to distinguish multiple descriptors)\n-\n-Also you can inline the assembly description with a `inline` description\n-directly into the pom file. Adding the proper namespace even allows for\n-IDE autocompletion. As an example, refer to the profile `inline` in\n-the `data-jolokia-demo` 's pom.xml.\n-\n-Alternatively `descriptorRef` can be used with the name of a\n-predefined assembly descriptor. The following symbolic names can be\n-used for `descriptorRef`:\n-\n-[[build-assembly-descriptor-refs]]\n-.Predefined Assembly Descriptors\n-[cols=\"1,3\"]\n+[[build-assembly-inline]]\n+==== Assembly - Inline\n+\n+Inlined assembly description with a format very similar to\n+https://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[Maven Assembly Plugin].\n+\n+[cols=\"1,5\"]\n |===\n-| Assembly Reference | Description\n+| Element | Description\n \n-| *artifact-with-dependencies*\n-| Attaches project's artifact and all its dependencies. Also, when a `classpath` file exists in the target directory, this will be added to.\n+| *id*\n+| Unique ID for the assembly.\n \n-| *artifact*\n-| Attaches only the project's artifact but no dependencies.\n+| *files*\n+a| List of files for the assembly.\n \n-| *project*\n-| Attaches the whole Maven project but with out the `target/` directory.\n+Each file has the following fields:\n+\n+* `source`: Absolute or relative path from the project's directory of the file to be included in the assembly.\n+* `outputDirectory`: Output directory relative to the root of the root directory of the assembly.\n+* `destName`: Destination filename in the outputDirectory.\n+* `fileMode`: Similar to a UNIX permission, sets the file mode of the file included.\n+\n+| *fileSets*\n+a| List of filesets for the Assembly.", "originalCommit": "0158f25a46284d5253860d671f27caa4b773e964", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1NzYwNQ==", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452757605", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      <!-- Standard d-m-p configuration which defines how images are build, i.e. how the docker.tar is created -->\n          \n          \n            \n                      <!-- Standard jkube/kmp configuration which defines how images are build, i.e. how the docker.tar is created -->", "author": "rohanKanojia", "createdAt": "2020-07-10T10:20:29Z", "path": "quickstarts/maven/xml-config/pom.xml", "diffHunk": "@@ -135,167 +156,111 @@\n           <mainClass>org.apache.camel.cdi.Main</mainClass>\n         </configuration>\n       </plugin>\n+      <plugin>\n+        <groupId>org.eclipse.jkube</groupId>\n+        <artifactId>kubernetes-maven-plugin</artifactId>\n+        <version>${project.version}</version>\n+\n+        <configuration>\n+          <!-- Standard d-m-p configuration which defines how images are build, i.e. how the docker.tar is created -->", "originalCommit": "0158f25a46284d5253860d671f27caa4b773e964", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "498b54da91f570290b0b77c5aa3fa903235cccae", "url": "https://github.com/eclipse/jkube/commit/498b54da91f570290b0b77c5aa3fa903235cccae", "message": "fix: Properly define + document JKubeProjectAssembly behavior\n\n- AssemblyFileSet supports wildcard includes and excludes\n- AssemblyFileSet contains default file and directory modes\n- Removed no longer working descriptor and descriptorRef configs from AssemblyFileSet\n- Removed unsupported assembly .xml descriptors\n- Removed outdated documentation\n- xml-config quickstart works as expected\n- Fixed *Controller*Enricher to support xml configured names (just like replicas or image pull policy)\n- Updated Assembly related documentation\n- Updated ibm-javaee8-webprofile-liberty example\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-10T12:54:59Z", "type": "forcePushed"}, {"oid": "6457ea07bc5f762f9f46f48075affa27d643026b", "url": "https://github.com/eclipse/jkube/commit/6457ea07bc5f762f9f46f48075affa27d643026b", "message": "fix: Properly define + document JKubeProjectAssembly behavior\n\n- AssemblyFileSet supports wildcard includes and excludes\n- AssemblyFileSet contains default file and directory modes\n- Removed no longer working descriptor and descriptorRef configs from AssemblyFileSet\n- Removed unsupported assembly .xml descriptors\n- Removed outdated documentation\n- xml-config quickstart works as expected\n- Fixed *Controller*Enricher to support xml configured names (just like replicas or image pull policy)\n- Updated Assembly related documentation\n- Updated ibm-javaee8-webprofile-liberty example\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-10T13:24:17Z", "type": "commit"}, {"oid": "6457ea07bc5f762f9f46f48075affa27d643026b", "url": "https://github.com/eclipse/jkube/commit/6457ea07bc5f762f9f46f48075affa27d643026b", "message": "fix: Properly define + document JKubeProjectAssembly behavior\n\n- AssemblyFileSet supports wildcard includes and excludes\n- AssemblyFileSet contains default file and directory modes\n- Removed no longer working descriptor and descriptorRef configs from AssemblyFileSet\n- Removed unsupported assembly .xml descriptors\n- Removed outdated documentation\n- xml-config quickstart works as expected\n- Fixed *Controller*Enricher to support xml configured names (just like replicas or image pull policy)\n- Updated Assembly related documentation\n- Updated ibm-javaee8-webprofile-liberty example\n\nSigned-off-by: Marc Nuri <marc@marcnuri.com>", "committedDate": "2020-07-10T13:24:17Z", "type": "forcePushed"}]}