{"pr_number": 1825, "pr_title": "[SCB-1995]Fix incorrect message issue identifed through testing", "pr_createdAt": "2020-06-09T19:05:34Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1825", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgwMzA4Nw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1825#discussion_r437803087", "bodyText": "This logic seams not correct. Maybe you'd check the length of data actually received and using the correct data.", "author": "liubao68", "createdAt": "2020-06-10T01:02:25Z", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "diffHunk": "@@ -179,12 +179,12 @@ private static ServerMicroserviceInstance buildServerMicroserviceInstanceFromMap\n \n   private static void startListenerForRegisterUnregisterEvent() {\n     try {\n-      byte[] buffer = new byte[DATA_PACKET_BUFFER_SIZE];\n       multicastSocket = new MulticastSocket(PORT);\n       group = InetAddress.getByName(GROUP);\n       multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n \n       while (true) {\n+        byte[] buffer = new byte[DATA_PACKET_BUFFER_SIZE];\n         DatagramPacket receivePacketBuffer = new DatagramPacket(buffer, buffer.length);\n         multicastSocket.receive(receivePacketBuffer);\n         String receivedPacketString = new String(receivePacketBuffer.getData(), ENCODE);", "originalCommit": "b73ad72402b03002428a1896ac853485c436b6f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyMjY2MA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1825#discussion_r437822660", "bodyText": "good point. Unfortunately, based on the Multicast working mechanism, we have to create a buffer before data is received.  After data is received, then buffer is filled with the received data.   So we can't create a buffer with size exactly same as the received data.\nBy the way, it's also mentioned in the JDK source code comments:\nhttps://github.com/frohoff/jdk8u-jdk/blob/master/src/share/classes/java/net/DatagramSocket.java#L698-L700", "author": "jungan21", "createdAt": "2020-06-10T02:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgwMzA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyMzcxNw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1825#discussion_r437823717", "bodyText": "Maybe you misunderstanding my point. You should do this\n multicastSocket.receive(receivePacketBuffer);\nint len = receivePacketBuffer.getLength() ;\nif(len > 0) {\n   String receivedPacketString = new String(receivePacketBuffer.getData(), 0, len, ENCODE);\n}\n\nAnd you can avoid creating new buffers for each receive, though this is not very important because the next receive happens in seconds.", "author": "liubao68", "createdAt": "2020-06-10T02:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgwMzA4Nw=="}], "type": "inlineReview"}, {"oid": "c497ee142e3af48f7e38b051cad0e309505449ce", "url": "https://github.com/apache/servicecomb-java-chassis/commit/c497ee142e3af48f7e38b051cad0e309505449ce", "message": "[SCB-1995]Fix incorrect message issue identifed through testing", "committedDate": "2020-06-10T03:32:56Z", "type": "commit"}]}