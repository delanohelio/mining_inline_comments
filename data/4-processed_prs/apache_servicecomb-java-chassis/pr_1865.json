{"pr_number": 1865, "pr_title": "[SCB-2031] Fix mapping problem between pojo consumer method and provider swagger operation", "pr_createdAt": "2020-07-02T14:16:16Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1865", "timeline": [{"oid": "bf831ab2e437124e5f79c75b90c35c64500645d2", "url": "https://github.com/apache/servicecomb-java-chassis/commit/bf831ab2e437124e5f79c75b90c35c64500645d2", "message": "[SCB-2031] fix the problem in mapping pojo consumer method to swagger provider operation", "committedDate": "2020-07-02T14:13:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1MzY1NA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#discussion_r449153654", "bodyText": "Method to be key of HashMap is too expensive\nshould change HashMap to IdentityHashMap", "author": "wujimin", "createdAt": "2020-07-02T17:01:48Z", "path": "providers/provider-pojo/src/main/java/org/apache/servicecomb/provider/pojo/definition/PojoConsumerMeta.java", "diffHunk": "@@ -33,7 +34,7 @@\n \n   private SchemaMeta schemaMeta;\n \n-  private Map<String, PojoConsumerOperationMeta> operationMetas = new HashMap<>();\n+  private Map<Method, PojoConsumerOperationMeta> operationMetas = new HashMap<>();", "originalCommit": "5b206430be2269b223006a7309c64b2da5f6b4c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1NDM0Ng==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#discussion_r449154346", "bodyText": "IdentityHashMap", "author": "wujimin", "createdAt": "2020-07-02T17:03:15Z", "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/engine/SwaggerConsumer.java", "diffHunk": "@@ -16,14 +16,15 @@\n  */\n package org.apache.servicecomb.swagger.engine;\n \n+import java.lang.reflect.Method;\n import java.util.HashMap;\n import java.util.Map;\n \n public class SwaggerConsumer {\n   private Class<?> consumerIntf;\n \n   // key is consumer method name\n-  private Map<String, SwaggerConsumerOperation> operations = new HashMap<>();\n+  private Map<Method, SwaggerConsumerOperation> operations = new HashMap<>();", "originalCommit": "5b206430be2269b223006a7309c64b2da5f6b4c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1NTg3Mw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#discussion_r449155873", "bodyText": "can still keep findOperation(String consumerMethodName), and mark as VisiableForTest\nthis makes test easier", "author": "wujimin", "createdAt": "2020-07-02T17:06:11Z", "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/engine/SwaggerConsumer.java", "diffHunk": "@@ -34,14 +35,14 @@ public void setConsumerIntf(Class<?> consumerIntf) {\n   }\n \n   public void addOperation(SwaggerConsumerOperation op) {\n-    operations.put(op.getSchemaOperationId(), op);\n+    operations.put(op.getConsumerMethod(), op);\n   }\n \n-  public SwaggerConsumerOperation findOperation(String consumerMethodName) {\n-    return operations.get(consumerMethodName);\n+  public SwaggerConsumerOperation findOperation(Method consumerMethod) {", "originalCommit": "5b206430be2269b223006a7309c64b2da5f6b4c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE0NTU0MQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#discussion_r450145541", "bodyText": "Done. Please review it.", "author": "yhs0092", "createdAt": "2020-07-06T11:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1NTg3Mw=="}], "type": "inlineReview"}, {"oid": "f4a0e31ea2c10377b17ddcf8d23b0c5944a3949b", "url": "https://github.com/apache/servicecomb-java-chassis/commit/f4a0e31ea2c10377b17ddcf8d23b0c5944a3949b", "message": "[SCB-2031] optimize code as review opinion", "committedDate": "2020-07-06T09:50:38Z", "type": "commit"}, {"oid": "f4a0e31ea2c10377b17ddcf8d23b0c5944a3949b", "url": "https://github.com/apache/servicecomb-java-chassis/commit/f4a0e31ea2c10377b17ddcf8d23b0c5944a3949b", "message": "[SCB-2031] optimize code as review opinion", "committedDate": "2020-07-06T09:50:38Z", "type": "forcePushed"}]}