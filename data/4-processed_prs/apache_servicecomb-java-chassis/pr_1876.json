{"pr_number": 1876, "pr_title": " [SCB-2036] fix memory leak when router pass header", "pr_createdAt": "2020-07-09T03:35:46Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1876", "timeline": [{"oid": "c81e5d89e7bdd1f0b8535b4511030ec3dbe55398", "url": "https://github.com/apache/servicecomb-java-chassis/commit/c81e5d89e7bdd1f0b8535b4511030ec3dbe55398", "message": "[SCB-1861] fix bug when delete all config\n\n(cherry picked from commit 08eaf304364111b5965bc21360f5222ab36f9de0)", "committedDate": "2020-05-12T11:26:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk5MzI0OQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1876#discussion_r451993249", "bodyText": "This modification is not good. Try find the root cause and fixed the condition why memory leak and do not modifify the logic of dynamicy config cache.", "author": "liubao68", "createdAt": "2020-07-09T06:33:46Z", "path": "handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java", "diffHunk": "@@ -68,67 +63,34 @@ public boolean enabled() {\n   @Override\n   public Response afterReceiveRequest(Invocation invocation,\n       HttpServletRequestEx httpServletRequestEx) {\n-    if (!isHaveHeadersRule()) {\n+    if (!RouterRuleCache.isServerContainRule(invocation.getMicroserviceName())) {\n       return null;\n     }\n-    if (!RouterRuleCache.isServerContainRule(invocation.getMicroserviceName())) {\n+    List<String> headerRules = loadHeaders();\n+    if (headerRules == null) {\n       return null;\n     }\n-    if (loadHeaders()) {\n-      Map<String, String> headerMap = getHeaderMap(httpServletRequestEx);\n-      try {\n-        invocation.addContext(ROUTER_HEADER, JsonUtils.OBJ_MAPPER.writeValueAsString(headerMap));\n-      } catch (JsonProcessingException e) {\n-        LOGGER.error(\"canary context serialization failed\");\n-      }\n+    Map<String, String> headerMap = getHeaderMap(httpServletRequestEx, headerRules);\n+    try {\n+      invocation.addContext(ROUTER_HEADER, JsonUtils.OBJ_MAPPER.writeValueAsString(headerMap));\n+    } catch (JsonProcessingException e) {\n+      LOGGER.error(\"router context serialization failed\");\n     }\n     return null;", "originalCommit": "d36fd3f02bebcd7154622788e52a4a74d3eb8006", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "71023d5916d8ffd8046e51c2b9603ca0e680aaed", "url": "https://github.com/apache/servicecomb-java-chassis/commit/71023d5916d8ffd8046e51c2b9603ca0e680aaed", "message": "[SCB-2036] fix memory leak when router pass header", "committedDate": "2020-07-09T07:00:45Z", "type": "forcePushed"}, {"oid": "16f956d9ef9e717c5aa961a91656fdc3f9f2b864", "url": "https://github.com/apache/servicecomb-java-chassis/commit/16f956d9ef9e717c5aa961a91656fdc3f9f2b864", "message": "[SCB-2036] fix memory leak when router pass header", "committedDate": "2020-07-10T01:08:26Z", "type": "commit"}, {"oid": "16f956d9ef9e717c5aa961a91656fdc3f9f2b864", "url": "https://github.com/apache/servicecomb-java-chassis/commit/16f956d9ef9e717c5aa961a91656fdc3f9f2b864", "message": "[SCB-2036] fix memory leak when router pass header", "committedDate": "2020-07-10T01:08:26Z", "type": "forcePushed"}]}