{"pr_number": 1789, "pr_title": "[SCB-1650]discovery schema from instancies directly", "pr_createdAt": "2020-05-28T06:58:11Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1789", "timeline": [{"oid": "89f8158dbe83fa0b85e90abd8b34c6ef08bcd815", "url": "https://github.com/apache/servicecomb-java-chassis/commit/89f8158dbe83fa0b85e90abd8b34c6ef08bcd815", "message": "[SCB-1942]change Discovery getSchema with instances param", "committedDate": "2020-05-28T06:52:12Z", "type": "commit"}, {"oid": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e", "url": "https://github.com/apache/servicecomb-java-chassis/commit/2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e", "message": "[SCB-1650]discovery schema from instancies directly", "committedDate": "2020-05-28T06:52:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY0ODAzMg==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431648032", "bodyText": "no need prefix \"I\"?", "author": "wujimin", "createdAt": "2020-05-28T07:53:38Z", "path": "demo/demo-multi-registries/demo-multi-registries-client/src/main/java/org/apache/servicecomb/demo/registry/IServerEndpoint.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.demo.registry;\n+\n+public interface IServerEndpoint {", "originalCommit": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2MzM4Ng==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431663386", "bodyText": "ServerEndpoint is used for class. Here is a demo, try a quick name like other interfaces in the demo.", "author": "liubao68", "createdAt": "2020-05-28T08:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY0ODAzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MTA2Mg==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431651062", "bodyText": "hashmap is not thread safe, not only for write, but also for read", "author": "wujimin", "createdAt": "2020-05-28T07:59:15Z", "path": "foundations/foundation-registry/src/main/java/org/apache/servicecomb/registry/consumer/MicroserviceManager.java", "diffHunk": "@@ -45,11 +47,21 @@ public MicroserviceManager(AppManager appManager, String appId) {\n   }\n \n   public MicroserviceVersions getOrCreateMicroserviceVersions(String microserviceName) {\n-    MicroserviceVersions microserviceVersions = versionsByName.computeIfAbsent(microserviceName, name -> {\n-      MicroserviceVersions instance = new MicroserviceVersions(appManager, appId, microserviceName);\n-      instance.pullInstances();\n-      return instance;\n-    });\n+    // do not use ConcurrentHashMap computeIfAbsent for versionsByName\n+    // because: when create MicroserviceVersions, one creation may depend on another\n+    // MicroserviceVersions. And pullInstances will create a new MicroserviceVersions.\n+    // Calling ConcurrentHashMap computeIfAbsent inside will get deadlock.\n+    MicroserviceVersions microserviceVersions = versionsByName.get(microserviceName);", "originalCommit": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MzM0NQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431653345", "bodyText": "try org.apache.servicecomb.foundation.common.utils.ResourceUtil#findResourcesBySuffix?", "author": "wujimin", "createdAt": "2020-05-28T08:03:39Z", "path": "service-registry/registry-local/src/main/java/org/apache/servicecomb/localregistry/LocalRegistryStore.java", "diffHunk": "@@ -83,9 +90,28 @@ public void run() {\n     selfMicroserviceInstance.setInstanceId(selfMicroservice.getServiceId());\n     selfMicroserviceInstance.setServiceId(selfMicroservice.getServiceId());\n \n-    InputStream is = this.getClass().getClassLoader().getResourceAsStream(REGISTRY_FILE_NAME);\n-    if (is != null) {\n-      initFromData(is);\n+    InputStream is = null;\n+\n+    try {\n+      ClassLoader loader = JvmUtils.findClassLoader();", "originalCommit": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY3NDI1Nw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431674257", "bodyText": "I see many ohter places code like this.\n'ResourceUtil#findResourcesBySuffix' returns List<URI> and not convinient for open stream.", "author": "liubao68", "createdAt": "2020-05-28T08:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MzM0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1OTQ0Mw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431659443", "bodyText": "3rd party is a good mechanism\uff0c must not delete it.", "author": "wujimin", "createdAt": "2020-05-28T08:14:41Z", "path": "service-registry/registry-service-center/src/main/java/org/apache/servicecomb/serviceregistry/registry/AbstractServiceRegistry.java", "diffHunk": "@@ -263,6 +263,7 @@ public void destroy() {\n \n   @Override\n   // TODO: this is for 3rd party invocation, and a better way can be provided\n+  // TODO:  microserviceManager.getVersionsByName() can not be used, will delete this in SCB-1949", "originalCommit": "2753d18f25f48c2f7c51bde43fe1c4fc7abf3f6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2MzcwMA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1789#discussion_r431663700", "bodyText": "OK. I'll fix the problem in next PR without delete the interface.", "author": "liubao68", "createdAt": "2020-05-28T08:22:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1OTQ0Mw=="}], "type": "inlineReview"}, {"oid": "7f5f7df27e87bf6ad8698dc745ea82de1b16e570", "url": "https://github.com/apache/servicecomb-java-chassis/commit/7f5f7df27e87bf6ad8698dc745ea82de1b16e570", "message": "[SCB-1650]fix review comments", "committedDate": "2020-05-28T08:41:21Z", "type": "commit"}]}