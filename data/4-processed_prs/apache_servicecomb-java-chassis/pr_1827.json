{"pr_number": 1827, "pr_title": "[SCB-1997] Small improvement when Muticastscoket receive data", "pr_createdAt": "2020-06-10T20:37:12Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1827", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3OTg2Mw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#discussion_r438479863", "bodyText": "Maybe need look at the outer try, if IOException is thrown, the task is exit.", "author": "liubao68", "createdAt": "2020-06-11T00:34:52Z", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "diffHunk": "@@ -172,16 +172,29 @@ private static ServerMicroserviceInstance buildServerMicroserviceInstanceFromMap\n     return map;\n   }\n \n+  private static void initMulticastSocket() throws IOException{\n+    multicastSocket = new MulticastSocket(PORT);\n+    group = InetAddress.getByName(GROUP);\n+    multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n+  }\n+\n   private static void startListenerForRegisterUnregisterEvent() {\n     try {\n       byte[] buffer = new byte[DATA_PACKET_BUFFER_SIZE];\n-      multicastSocket = new MulticastSocket(PORT);\n-      group = InetAddress.getByName(GROUP);\n-      multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n-\n+      initMulticastSocket();\n       while (true) {\n         DatagramPacket receivePacketBuffer = new DatagramPacket(buffer, buffer.length);\n-        multicastSocket.receive(receivePacketBuffer);\n+        try {", "originalCommit": "40505871fb490afad3f6b0acf4391a6b81ea9a1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUwMjY5NQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#discussion_r438502695", "bodyText": "Correct. But the outer try/catch(IOException) is for initializing the Multicastsocket object ......the failure should rarely happen. I don't think we need to handle this for now.  I'm thinkg to throw exception, (like our servicecomb init task)...instead of the just logging.\nthrow new IllegalStateException(\"Zero-Config init failed.\", e);", "author": "jungan21", "createdAt": "2020-06-11T02:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3OTg2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2MTc4Ng==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1827#discussion_r439161786", "bodyText": "cyclomatic complexity of startListenerForRegisterUnregisterEvent is a bit too high, can be refactored.", "author": "liubao68", "createdAt": "2020-06-12T01:37:04Z", "path": "service-registry/registry-zero-config/src/main/java/org/apache/servicecomb/zeroconfig/server/ServerUtil.java", "diffHunk": "@@ -172,16 +172,29 @@ private static ServerMicroserviceInstance buildServerMicroserviceInstanceFromMap\n     return map;\n   }\n \n+  private static void initMulticastSocket() throws IOException {\n+    multicastSocket = new MulticastSocket(PORT);\n+    group = InetAddress.getByName(GROUP);\n+    multicastSocket.joinGroup(group); // need to join the group to be able to receive the data\n+  }\n+\n   private static void startListenerForRegisterUnregisterEvent() {\n     try {\n       byte[] buffer = new byte[DATA_PACKET_BUFFER_SIZE];", "originalCommit": "0d3fc41c60e81ba542fc961cdceee8a4856a4fee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "366296cec6dd02011627f64020d49846881f9d10", "url": "https://github.com/apache/servicecomb-java-chassis/commit/366296cec6dd02011627f64020d49846881f9d10", "message": "[SCB-1997] Small improvement when Muticastscoket receive data", "committedDate": "2020-06-12T03:20:03Z", "type": "commit"}]}