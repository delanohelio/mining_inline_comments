{"pr_number": 9108, "pr_title": "CB-7419 adding in Service Principals to Ranger User Sync", "pr_createdAt": "2020-09-29T18:50:48Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9108", "timeline": [{"oid": "8d99ac8acacfdebdab01a1f10bd83b8826918d66", "url": "https://github.com/hortonworks/cloudbreak/commit/8d99ac8acacfdebdab01a1f10bd83b8826918d66", "message": "CB-7419 adding in Service Principals to Ranger User Sync\n\nThis adds a call to get Service Principals from Thunderhead during template\npreparation that will be passed into the RangerUserSyncRoleConfigProvider\nto sync OID before the datalake starts up.", "committedDate": "2020-09-29T19:32:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MTAzMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497161031", "bodyText": "nit: So this is account id? It's not that obvious to me. Can we pull it out as an accountId variable.", "author": "aarman-cloudera", "createdAt": "2020-09-30T00:01:50Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/converter/StackToTemplatePreparationObjectConverter.java", "diffHunk": "@@ -194,7 +204,11 @@ public TemplatePreparationObject convert(Stack source) {\n             cluster.setIdBroker(idbroker);\n             String envCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n             VirtualGroupRequest virtualGroupRequest = new VirtualGroupRequest(envCrnForVirtualGroups, ldapView.map(LdapView::getAdminGroup).orElse(\"\"));\n-\n+            List<UserManagementProto.ServicePrincipalCloudIdentities> servicePrincipalCloudIdentities =\n+                    grpcUmsClient.listServicePrincipalCloudIdentities(INTERNAL_ACTOR_CRN,\n+                            source.getCreator().getTenant().getName(),", "originalCommit": "8d99ac8acacfdebdab01a1f10bd83b8826918d66", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MjE4MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497162181", "bodyText": "Looks like this would would be filled in with azure service principles even on non Azure environments. Can we instead just fill this in for Azure RAZ enabled clusters?", "author": "aarman-cloudera", "createdAt": "2020-09-30T00:03:33Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/converter/StackToTemplatePreparationObjectConverter.java", "diffHunk": "@@ -350,4 +365,30 @@ private GeneralClusterConfigs calculateGeneralClusterConfigs(Stack source, Clust\n         return generalClusterConfigs;\n     }\n \n+    private void decorateBuilderWithServicePrincipals(Builder builder,", "originalCommit": "8d99ac8acacfdebdab01a1f10bd83b8826918d66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3NzUzNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497177537", "bodyText": "And also add an entitlement check as per other comment.", "author": "aarman-cloudera", "createdAt": "2020-09-30T00:26:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MjE4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3NjY2OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497176669", "bodyText": "I should have mentioned, we only want to do this if the accountId has the necessary entitlement (CDP_CLOUD_IDENTITY_MAPPING). Can you add a check for that. You can use EntitlementService.cloudIdentityMappingEnabled to do it.", "author": "aarman-cloudera", "createdAt": "2020-09-30T00:24:42Z", "path": "template-manager-cmtemplate/src/main/java/com/sequenceiq/cloudbreak/cmtemplate/configproviders/ranger/RangerUserSyncRoleConfigProvider.java", "diffHunk": "@@ -35,9 +39,28 @@\n     @Override\n     public List<ApiClusterTemplateConfig> getRoleConfigs(String roleType, TemplatePreparationObject source) {\n         String adminGroup = virtualGroupService.getVirtualGroup(source.getVirtualGroupRequest(), UmsRight.RANGER_ADMIN.getRight());\n-        return List.of(\n-                config(ROLE_SAFETY_VALVE, ConfigUtils.getSafetyValveProperty(RANGER_USERSYNC_UNIX_BACKEND, \"nss\")),\n-                config(ROLE_ASSIGNMENT_RULES, \"&ROLE_SYS_ADMIN:g:\" + adminGroup));\n+\n+        if (CloudPlatform.AZURE.equals(source.getCloudPlatform()) && source.getGeneralClusterConfigs().isEnableRangerRaz()) {", "originalCommit": "8d99ac8acacfdebdab01a1f10bd83b8826918d66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4NTA3Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497785077", "bodyText": "Too much of a pain to add an entitlement check here.  So added a check for a null map.  This is similar how the ranger raz flag is set, we don't check entitlements in the config provider.", "author": "frozenwizard", "createdAt": "2020-09-30T20:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3NjY2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4ODQ2Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9108#discussion_r497788467", "bodyText": "nice, that should work.", "author": "aarman-cloudera", "createdAt": "2020-09-30T20:43:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3NjY2OQ=="}], "type": "inlineReview"}, {"oid": "b70cda917ead76891ce80e172c1c752f7d2940cf", "url": "https://github.com/hortonworks/cloudbreak/commit/b70cda917ead76891ce80e172c1c752f7d2940cf", "message": "CB-7419 adding in Service Principals to Ranger User Sync\n\nThis adds a call to get Service Principals from Thunderhead during template\npreparation that will be passed into the RangerUserSyncRoleConfigProvider\nto sync OID before the datalake starts up.", "committedDate": "2020-09-30T20:35:02Z", "type": "commit"}, {"oid": "b70cda917ead76891ce80e172c1c752f7d2940cf", "url": "https://github.com/hortonworks/cloudbreak/commit/b70cda917ead76891ce80e172c1c752f7d2940cf", "message": "CB-7419 adding in Service Principals to Ranger User Sync\n\nThis adds a call to get Service Principals from Thunderhead during template\npreparation that will be passed into the RangerUserSyncRoleConfigProvider\nto sync OID before the datalake starts up.", "committedDate": "2020-09-30T20:35:02Z", "type": "forcePushed"}]}