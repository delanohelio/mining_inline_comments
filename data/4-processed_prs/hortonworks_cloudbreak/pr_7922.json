{"pr_number": 7922, "pr_title": "Add backup and restore scripts for DL postgres db.", "pr_createdAt": "2020-04-28T21:34:23Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7922", "timeline": [{"oid": "97fd4d2451504c8db77a2f7dc6fab01ce598abce", "url": "https://github.com/hortonworks/cloudbreak/commit/97fd4d2451504c8db77a2f7dc6fab01ce598abce", "message": "Add backup and restore scripts for DL postgres db.", "committedDate": "2020-04-28T21:16:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4MTQxMg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418581412", "bodyText": "The date directory part of the backup location will be coming from the datalake DR service calls, since we need to sync that across the different backup types. So you don't need to generate it dynamically in the the scripts.", "author": "hreeve-cloudera", "createdAt": "2020-05-01T15:04:31Z", "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. PostgreSQL host name.\"\n+  echo \"  3. PostgreSQL port.\"\n+  echo \"  4. Object Storage Service url to place backups.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo \"  6. PostgreSQL password.\"\n+  exit 1\n+fi\n+\n+CLOUD_PROVIDER=\"$1\"\n+HOST=\"$2\"\n+PORT=\"$3\"\n+BACKUP_LOCATION=\"$4\"\n+USERNAME=\"$5\"\n+export PGPASSWORD=\"$6\" # We can provide the password to pg_dump through this variable, or in ~/.pgpass\n+\n+BACKUP_DATE=$(date '+%Y-%m-%dT%H:%M:%SZ')", "originalCommit": "97fd4d2451504c8db77a2f7dc6fab01ce598abce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQyNDMwMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r419424303", "bodyText": "Done, but I'm still generating a date for the temp files that Azure must create before uploading to blob storage -- if you notice the $(date '+%Y-%m-%dT%H:%M:%SZ') still hanging around.", "author": "brycederriso", "createdAt": "2020-05-04T13:12:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4MTQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4MjMwNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418582304", "bodyText": "If you're exporting this, you might want to unset it at the end of the script. I don't actually think it'll live outside the script's context, but just in case.", "author": "hreeve-cloudera", "createdAt": "2020-05-01T15:06:34Z", "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. PostgreSQL host name.\"\n+  echo \"  3. PostgreSQL port.\"\n+  echo \"  4. Object Storage Service url to place backups.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo \"  6. PostgreSQL password.\"\n+  exit 1\n+fi\n+\n+CLOUD_PROVIDER=\"$1\"\n+HOST=\"$2\"\n+PORT=\"$3\"\n+BACKUP_LOCATION=\"$4\"\n+USERNAME=\"$5\"\n+export PGPASSWORD=\"$6\" # We can provide the password to pg_dump through this variable, or in ~/.pgpass", "originalCommit": "97fd4d2451504c8db77a2f7dc6fab01ce598abce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3NDM1Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418674352", "bodyText": "I think this should really live in the .pgpass file for proper security. I'll think\n(talk) about whether we need to that now or later.", "author": "brycederriso", "createdAt": "2020-05-01T18:29:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4MjMwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY1MTM0Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r419651346", "bodyText": "Postgres will attempt to read the ~/.pgpass file if it's present. So we should see about adding that to Cloudbreak.", "author": "brycederriso", "createdAt": "2020-05-04T18:48:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4MjMwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4Mjc4Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418582786", "bodyText": "\"Script accepts six inputs:\"", "author": "hreeve-cloudera", "createdAt": "2020-05-01T15:07:39Z", "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"", "originalCommit": "97fd4d2451504c8db77a2f7dc6fab01ce598abce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4Mjg2Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418582863", "bodyText": "\"Script accepts six inputs:\"", "author": "hreeve-cloudera", "createdAt": "2020-05-01T15:07:52Z", "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/restore_db.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"", "originalCommit": "97fd4d2451504c8db77a2f7dc6fab01ce598abce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyMDM3OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418620379", "bodyText": "If the S3 location is created here, How will the Caller provide an appropriate location for restore?", "author": "kkalvagadda1", "createdAt": "2020-05-01T16:30:57Z", "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. PostgreSQL host name.\"\n+  echo \"  3. PostgreSQL port.\"\n+  echo \"  4. Object Storage Service url to place backups.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo \"  6. PostgreSQL password.\"\n+  exit 1\n+fi\n+\n+CLOUD_PROVIDER=\"$1\"\n+HOST=\"$2\"\n+PORT=\"$3\"\n+BACKUP_LOCATION=\"$4\"\n+USERNAME=\"$5\"\n+export PGPASSWORD=\"$6\" # We can provide the password to pg_dump through this variable, or in ~/.pgpass\n+\n+BACKUP_DATE=$(date '+%Y-%m-%dT%H:%M:%SZ')\n+LOGFILE=/var/log/dl_postgres_backup.log\n+\n+echo \"Logs at ${LOGFILE}\"\n+\n+doLog() {\n+  type_of_msg=$(echo $* | cut -d\" \" -f1)\n+  msg=$(echo \"$*\" | cut -d\" \" -f2-)\n+  [[ $type_of_msg == INFO ]] && type_of_msg=\"INFO \" # one space for aligning\n+  [[ $type_of_msg == WARN ]] && type_of_msg=\"WARN \" # as well\n+\n+  # print to the terminal if we have one\n+  test -t 1 && echo \"$(date \"+%Y-%m-%dT%H:%M:%SZ\") $type_of_msg \"\"$msg\"\n+  echo \"$(date \"+%Y-%m-%dT%H:%M:%SZ\") $type_of_msg \"\"$msg\" >>$LOGFILE\n+}\n+\n+errorExit() {\n+  doLog \"ERROR $1\"\n+  exit 1\n+}\n+\n+dump_to_azure() {\n+  SERVICE=\"$1\"\n+  doLog \"INFO Dumping ${SERVICE}\"\n+  LOCAL_BACKUP=${DATE_DIR}/${SERVICE}_backup\n+  pg_dump --host=\"$HOST\" --port=\"$PORT\" --username=\"$USERNAME\" --dbname=\"$SERVICE\" --format=custom --file=\"$LOCAL_BACKUP\" >>$LOGFILE 2>&1 || errorExit \"Unable to dump ${SERVICE}\"\n+\n+  doLog \"INFO Uploading to ${BACKUP_LOCATION}\"\n+  # todo: strip trailing slash from BACKUP_LOCATION if it's there\n+  AZURE_LOCATION=\"${BACKUP_LOCATION}/${BACKUP_DATE}/${SERVICE}_backup\"\n+  azcopy copy \"$LOCAL_BACKUP\" \"$AZURE_LOCATION\" >>$LOGFILE 2>&1 || errorExit \"Unable to upload $SERVICE backup\"\n+  doLog \"INFO Completed upload to ${BACKUP_LOCATION}\"\n+\n+  rm -v \"$LOCAL_BACKUP\" >>$LOGFILE 2>&1\n+\n+  doLog \"INFO ${SERVICE} dumped to \"\n+}\n+run_azure_backup () {\n+  BACKUPS_DIR=\"/var/tmp/\" # Is this appropriate for keeping backups that are staged before uploading to Azure Blob Storage?\n+  DATE_DIR=${BACKUPS_DIR}/${BACKUP_DATE}\n+  mkdir -p \"$DATE_DIR\" || error_exit \"Could not create local directory for backups.\"\n+\n+  azcopy login --identity || errorExit \"Could not login to Azure\"\n+  dump_to_azure \"hive\"\n+  dump_to_azure \"ranger\"\n+\n+  rmdir -v \"$DATE_DIR\" >>$LOGFILE 2>&1\n+}\n+\n+dump_to_s3() {\n+  SERVICE=$1\n+  # todo: strip trailing slash from BACKUP_LOCATION if it's there\n+  S3_LOCATION=\"${BACKUP_LOCATION}/${BACKUP_DATE}/${SERVICE}_backup\"", "originalCommit": "97fd4d2451504c8db77a2f7dc6fab01ce598abce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3ODkzNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418678937", "bodyText": "I'll change this to only create the ${SERVICE}_backup portion at the end of the s3 location.", "author": "brycederriso", "createdAt": "2020-05-01T18:40:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyMDM3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyMzE1NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418623154", "bodyText": "Re-order the inputs to be in-order. Move Object store URL to the end so that all the database configurations will be together.", "author": "kkalvagadda1", "createdAt": "2020-05-01T16:37:11Z", "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts five inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. PostgreSQL host name.\"\n+  echo \"  3. PostgreSQL port.\"\n+  echo \"  4. Object Storage Service url to place backups.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo \"  6. PostgreSQL password.\"", "originalCommit": "97fd4d2451504c8db77a2f7dc6fab01ce598abce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY1NDM0OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418654348", "bodyText": "My intent with password last was to make it easier to remove the password altogether if/when we migrate to using the recommended .pgpass file for passwords.\nHow about\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              echo \"Invalid inputs provided\"\n          \n          \n            \n              echo \"Script accepts five inputs:\"\n          \n          \n            \n              echo \"  1. Cloud Provider (azure | aws)\"\n          \n          \n            \n              echo \"  2. PostgreSQL host name.\"\n          \n          \n            \n              echo \"  3. PostgreSQL port.\"\n          \n          \n            \n              echo \"  4. Object Storage Service url to place backups.\"\n          \n          \n            \n              echo \"  5. PostgreSQL user name.\"\n          \n          \n            \n              echo \"  6. PostgreSQL password.\"\n          \n          \n            \n              echo \"  1. Cloud Provider (azure | aws)\"\n          \n          \n            \n              echo \"  2. Object Storage Service url to place backups.\"\n          \n          \n            \n              echo \"  3. PostgreSQL host name.\"\n          \n          \n            \n              echo \"  4. PostgreSQL port.\"\n          \n          \n            \n              echo \"  5. PostgreSQL user name.\"\n          \n          \n            \n              echo \"  6. PostgreSQL password.\"", "author": "brycederriso", "createdAt": "2020-05-01T17:45:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyMzE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY1ODc2Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418658767", "bodyText": "Make sure you don't actually delete the part that explains they're missing parameters. And you might explicitly mark PostgresSQL password as optional. I didn't realize it was, which is why I ticked the mentioned number of parameters.", "author": "hreeve-cloudera", "createdAt": "2020-05-01T17:54:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyMzE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4MzAzNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r418683037", "bodyText": "Ah, you're giving me too much credit, I hadn't thought of making it optional. I'll add the accoutrements to make it so.", "author": "brycederriso", "createdAt": "2020-05-01T18:49:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyMzE1NA=="}], "type": "inlineReview"}, {"oid": "9f848377bfe27543f74dae755d35bd5e00ba8398", "url": "https://github.com/hortonworks/cloudbreak/commit/9f848377bfe27543f74dae755d35bd5e00ba8398", "message": "Rearrange script inputs. Correct inputs prompt.", "committedDate": "2020-05-01T18:30:21Z", "type": "commit"}, {"oid": "308802a0d11506617e888e620e57895cecbe9ccb", "url": "https://github.com/hortonworks/cloudbreak/commit/308802a0d11506617e888e620e57895cecbe9ccb", "message": "Remove intermediate Date folder in Cloud Object Storage", "committedDate": "2020-05-01T18:47:49Z", "type": "commit"}, {"oid": "ecb82e19f858e1982de23273693dfe5f8500f17f", "url": "https://github.com/hortonworks/cloudbreak/commit/ecb82e19f858e1982de23273693dfe5f8500f17f", "message": "Change number of expected script inputs to 5", "committedDate": "2020-05-04T12:58:28Z", "type": "commit"}, {"oid": "d43cb7986796d3b459105b43011c4153167aaa91", "url": "https://github.com/hortonworks/cloudbreak/commit/d43cb7986796d3b459105b43011c4153167aaa91", "message": "Remove BACKUP_DATE from pgsql backup usage.", "committedDate": "2020-05-04T13:13:37Z", "type": "commit"}, {"oid": "b919811c59f9d0e99b463af48e9a377ef15beb91", "url": "https://github.com/hortonworks/cloudbreak/commit/b919811c59f9d0e99b463af48e9a377ef15beb91", "message": "Remove comment questioning backup staging location.", "committedDate": "2020-05-04T13:14:29Z", "type": "commit"}, {"oid": "1da293df25e739262b0bf74b795d883b7d8f7f60", "url": "https://github.com/hortonworks/cloudbreak/commit/1da293df25e739262b0bf74b795d883b7d8f7f60", "message": "Remove trailing slash from cloud storage urls.\n\nURLs don't like doubling up on slashes, so I need to strip them, if\npresent, when receiving cloud backup locations.", "committedDate": "2020-05-04T13:27:40Z", "type": "commit"}, {"oid": "05cdbbe6d9d4524ed315f4eb3f6290c74a47ce8e", "url": "https://github.com/hortonworks/cloudbreak/commit/05cdbbe6d9d4524ed315f4eb3f6290c74a47ce8e", "message": "Add space to fix test command typo.", "committedDate": "2020-05-04T14:42:32Z", "type": "commit"}, {"oid": "31e83c9c857ce0b8aad72fa85e396d2b8f64a964", "url": "https://github.com/hortonworks/cloudbreak/commit/31e83c9c857ce0b8aad72fa85e396d2b8f64a964", "message": "Fix bugs.\n\n* Fix argument order\n* Fix or to and for argument numbers.\n* Fix variable substitution errors.", "committedDate": "2020-05-04T17:59:42Z", "type": "commit"}, {"oid": "ef4b05ca2098405a7a64db4bff92b2514d3c45b9", "url": "https://github.com/hortonworks/cloudbreak/commit/ef4b05ca2098405a7a64db4bff92b2514d3c45b9", "message": "Do a refactor of postgresql restore script.", "committedDate": "2020-05-04T18:41:35Z", "type": "commit"}, {"oid": "538769a89de7d6774c3f74dd08a52662a35c8b32", "url": "https://github.com/hortonworks/cloudbreak/commit/538769a89de7d6774c3f74dd08a52662a35c8b32", "message": "Use plain format from pg_dump.\n\n* Change `--format` to be plain.\n* Read backup sql into the `psql` cli tool.", "committedDate": "2020-05-07T18:17:00Z", "type": "commit"}, {"oid": "8a4484537b54884700151bb2871f6dac14f2b10f", "url": "https://github.com/hortonworks/cloudbreak/commit/8a4484537b54884700151bb2871f6dac14f2b10f", "message": "Reformat drop+create statment to heredoc.\n\nAlso, tell psql to return an non-zero exit status if sql commands fail.", "committedDate": "2020-05-07T19:02:04Z", "type": "commit"}, {"oid": "083e2eaa5110c21796585b3cf33081a517937fbc", "url": "https://github.com/hortonworks/cloudbreak/commit/083e2eaa5110c21796585b3cf33081a517937fbc", "message": "Remove dead comment about splitting psql commands", "committedDate": "2020-05-07T19:51:33Z", "type": "commit"}, {"oid": "d09d266742261a0fd6ba34df0fa172f04119b1a3", "url": "https://github.com/hortonworks/cloudbreak/commit/d09d266742261a0fd6ba34df0fa172f04119b1a3", "message": "Update postgres backup/restore scripts.", "committedDate": "2020-05-08T17:29:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4Nzk3MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r422987971", "bodyText": "I would not export the password as it will be part of the logs. In Salt we can simply pass passwords to the script without exposing it. Example: \n  \n    \n      cloudbreak/freeipa/src/main/resources/freeipa-salt/salt/freeipa/common-install.sls\n    \n    \n         Line 5\n      in\n      bb5ebdf\n    \n    \n    \n    \n\n        \n          \n           - FPW: {{salt['pillar.get']('freeipa:password')}}", "author": "keyki", "createdAt": "2020-05-11T11:58:40Z", "path": "orchestrator-salt/src/main/resources/salt/salt/postgresql/scripts/backup_db.sh", "diffHunk": "@@ -0,0 +1,96 @@\n+#!/bin/bash\n+set -o errexit\n+set -o nounset\n+set -o pipefail\n+\n+if [ $# -ne 5 ] && [ $# -ne 6 ]; then\n+  echo \"Invalid inputs provided\"\n+  echo \"Script accepts 5 inputs:\"\n+  echo \"  1. Cloud Provider (azure | aws)\"\n+  echo \"  2. Object Storage Service url to retrieve backups.\"\n+  echo \"  3. PostgreSQL host name.\"\n+  echo \"  4. PostgreSQL port.\"\n+  echo \"  5. PostgreSQL user name.\"\n+  echo\n+  echo \"  Optional: PostgreSQL password.\"\n+  exit 1\n+fi\n+\n+CLOUD_PROVIDER=\"$1\"\n+BACKUP_LOCATION=$(echo \"$2\"| sed 's/\\/\\+$//g') # Clear trailng '/' (if present) for later path joining.\n+HOST=\"$3\"\n+PORT=\"$4\"\n+USERNAME=\"$5\"\n+export PGPASSWORD=\"$6\" # We can provide the password to pg_dump through this variable, or in ~/.pgpass", "originalCommit": "d09d266742261a0fd6ba34df0fa172f04119b1a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMDc1MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r423300750", "bodyText": "The problem actually lies in passing the password to the pg_dump command. There isn't any option to provide it as a command line argument. If we stick to using a password we need to either:\n\nProvide it interactively\nPut the password in the special PGPASSWORD variable\nPut the password as a connection string in ~/.pgpass and chmod 0600 it for root.\n\nStackOverflow suggests using an alternative to password authentication as well.", "author": "brycederriso", "createdAt": "2020-05-11T20:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4Nzk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5NDcwMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7922#discussion_r423794700", "bodyText": "@keyki has explained that we can use Salt to define the PGPASSWORD variable in the environment, so there's no need to set it + export it in the backup or restore scripts.\nThis prevents accidental exposure of the password by set -x.", "author": "brycederriso", "createdAt": "2020-05-12T14:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4Nzk3MQ=="}], "type": "inlineReview"}, {"oid": "41c1ea6027fdb7d2e13e08f649af98edce066c26", "url": "https://github.com/hortonworks/cloudbreak/commit/41c1ea6027fdb7d2e13e08f649af98edce066c26", "message": "Add header comments. Fix some spacing.", "committedDate": "2020-05-11T20:57:49Z", "type": "commit"}, {"oid": "7e79c3a645d2c5956eb85ce37bb307f89c4bb577", "url": "https://github.com/hortonworks/cloudbreak/commit/7e79c3a645d2c5956eb85ce37bb307f89c4bb577", "message": "Remove optinal PGPASSWORD export from postgresql backup/restore scripts.", "committedDate": "2020-05-12T14:45:35Z", "type": "commit"}]}