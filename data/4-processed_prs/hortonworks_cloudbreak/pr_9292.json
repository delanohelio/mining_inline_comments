{"pr_number": 9292, "pr_title": "CB-9325 All entitlements in one place and entitlement check result is logged", "pr_createdAt": "2020-10-27T08:11:38Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9292", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5MTg5OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9292#discussion_r512491898", "bodyText": "Entitlement check for authz entitlement still not logged here. The main reason for jira task creation was to use EntitlementService here and also resolve circular dependency between GrpcUmsClient and EntitlementService", "author": "horadla23", "createdAt": "2020-10-27T08:20:44Z", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java", "diffHunk": "@@ -511,7 +512,7 @@ public boolean isAuthorizationEntitlementRegistered(String actorCrn, String acco\n         return getAccountDetails(actorCrn, accountId, MDCUtils.getRequestId()).getEntitlementsList()\n                 .stream()\n                 .map(e -> e.getEntitlementName().toUpperCase())\n-                .anyMatch(e -> e.equalsIgnoreCase(\"CB_AUTHZ_POWER_USERS\"));\n+                .anyMatch(e -> e.equalsIgnoreCase(Entitlement.CB_AUTHZ_POWER_USERS.name()));", "originalCommit": "fd5f9263406405a5ba982525c70375102c0879a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5Mjk5Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9292#discussion_r512492997", "bodyText": "Yes, this is the reason why it is in do_not_merge state, but I'll put it into draft to make it more clear.", "author": "foldik", "createdAt": "2020-10-27T08:22:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5MTg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5NDAxOQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9292#discussion_r512494019", "bodyText": "I'll leave it simply in DO_NOT_MERGE.", "author": "foldik", "createdAt": "2020-10-27T08:24:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5MTg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5NTA0OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9292#discussion_r512495048", "bodyText": "oh, ok, yes, makes sense to make it draft for now", "author": "horadla23", "createdAt": "2020-10-27T08:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5MTg5OA=="}], "type": "inlineReview"}, {"oid": "b60742868058ea41ad40ca9bcdc67da6215bbc54", "url": "https://github.com/hortonworks/cloudbreak/commit/b60742868058ea41ad40ca9bcdc67da6215bbc54", "message": "CB-9325 All entitlements in one place and entitlement check result is logged", "committedDate": "2020-10-27T15:00:58Z", "type": "commit"}, {"oid": "b60742868058ea41ad40ca9bcdc67da6215bbc54", "url": "https://github.com/hortonworks/cloudbreak/commit/b60742868058ea41ad40ca9bcdc67da6215bbc54", "message": "CB-9325 All entitlements in one place and entitlement check result is logged", "committedDate": "2020-10-27T15:00:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgwODUyMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9292#discussion_r512808521", "bodyText": "maybe it is better to let UMS call fail here if account id is internal (which should not ever happen at this point), so i would not check for that, anyway CB will fail somewhere else also if internal account id reaches service layer", "author": "horadla23", "createdAt": "2020-10-27T15:47:32Z", "path": "auth-connector/src/main/java/com/sequenceiq/cloudbreak/auth/altus/GrpcUmsClient.java", "diffHunk": "@@ -503,15 +504,24 @@ public String rightCheckToString(AuthorizationProto.RightCheck rightCheck) {\n         }\n     }\n \n-    @Cacheable(cacheNames = \"umsAuthorizationEntitlementRegisteredCache\", key = \"{ #actorCrn, #accountId }\")\n-    public boolean isAuthorizationEntitlementRegistered(String actorCrn, String accountId) {\n-        if (StringUtils.equals(accountId, InternalCrnBuilder.INTERNAL_ACCOUNT)) {\n-            return false;\n+    @Cacheable(cacheNames = \"umsEntitlementRegisteredCache\", key = \"{ #actorCrn, #accountId, #entitlement }\")\n+    public boolean isEntitled(String actorCrn, String accountId, Entitlement entitlement) {\n+        boolean entitled;\n+        if (Entitlement.CB_AUTHZ_POWER_USERS.equals(entitlement) && StringUtils.equals(accountId, InternalCrnBuilder.INTERNAL_ACCOUNT)) {\n+            entitled = false;", "originalCommit": "b60742868058ea41ad40ca9bcdc67da6215bbc54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxOTg1MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9292#discussion_r512819851", "bodyText": "nvm i put that kind of if statement because of an issue", "author": "horadla23", "createdAt": "2020-10-27T16:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgwODUyMQ=="}], "type": "inlineReview"}]}