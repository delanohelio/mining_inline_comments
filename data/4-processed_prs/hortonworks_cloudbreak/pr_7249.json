{"pr_number": 7249, "pr_title": "CB 5486: Add Instance ID to health check response.", "pr_createdAt": "2020-02-10T02:47:17Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7249", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk3MDQzMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7249#discussion_r376970430", "bodyText": "You can do it inline", "author": "topolyai5", "createdAt": "2020-02-10T10:13:09Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaHealthDetailsService.java", "diffHunk": "@@ -0,0 +1,152 @@\n+package com.sequenceiq.freeipa.service.stack;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Service;\n+\n+\n+import com.sequenceiq.freeipa.api.v1.freeipa.stack.model.common.DetailedStackStatus;\n+import com.sequenceiq.freeipa.api.v1.freeipa.stack.model.common.Status;\n+import com.sequenceiq.freeipa.api.v1.freeipa.stack.model.common.instance.InstanceGroupType;\n+import com.sequenceiq.freeipa.api.v1.freeipa.stack.model.health.HealthDetailsFreeIpaResponse;\n+import com.sequenceiq.freeipa.api.v1.freeipa.stack.model.health.NodeHealthDetails;\n+import com.sequenceiq.freeipa.client.FreeIpaClient;\n+import com.sequenceiq.freeipa.client.FreeIpaClientException;\n+import com.sequenceiq.freeipa.client.model.RPCMessage;\n+import com.sequenceiq.freeipa.client.model.RPCResponse;\n+import com.sequenceiq.freeipa.entity.InstanceGroup;\n+import com.sequenceiq.freeipa.entity.InstanceMetaData;\n+import com.sequenceiq.freeipa.entity.Stack;\n+import com.sequenceiq.freeipa.service.freeipa.FreeIpaClientFactory;\n+\n+@Service\n+public class FreeIpaHealthDetailsService {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FreeIpaHealthDetailsService.class);\n+\n+    private static final String EXTERNAL_COMMAND_OUTPUT = \"ExternalCommandOutput\";\n+\n+    private static final String STATUS_OK = \"OK\";\n+\n+    private static final int STATUS_GROUP = 2;\n+\n+    private static final int NODE_GROUP = 1;\n+\n+    private static final String MESSAGE_UNAVAILABLE = \"Message Unavailable\";\n+\n+    private static final Pattern RESULT_PATTERN = Pattern.compile(\"(ecure port|: TCP) \\\\([0-9]*\\\\): (.*)\");\n+\n+    private static final Pattern NEW_NODE_PATTERN = Pattern.compile(\"Check connection from master to remote replica '(.[^\\']*)\");\n+\n+    @Inject\n+    private StackService stackService;\n+\n+    @Inject\n+    private FreeIpaClientFactory freeIpaClientFactory;\n+\n+    public HealthDetailsFreeIpaResponse getHealthDetails(String environmentCrn, String accountId) {\n+        Stack stack = stackService.getByEnvironmentCrnAndAccountIdWithLists(environmentCrn, accountId);\n+        InstanceMetaData master = findMaster(stack);\n+        Optional<RPCResponse<Boolean>> rpcResponse = Optional.empty();\n+        try {\n+            rpcResponse = Optional.ofNullable(checkFreeIpaHealth(stack, master));\n+        } catch (FreeIpaClientException e) {\n+            LOGGER.error(\"Unable to check the health of FreeIPA.\", e);\n+        }\n+        return createResponse(stack, rpcResponse, master);\n+    }\n+\n+    private HealthDetailsFreeIpaResponse createResponse(Stack stack, Optional<RPCResponse<Boolean>> rpcResponse, InstanceMetaData master) {\n+        HealthDetailsFreeIpaResponse response = new HealthDetailsFreeIpaResponse();\n+        response.setEnvironmentCrn(stack.getEnvironmentCrn());\n+        response.setCrn(stack.getResourceCrn());\n+        if (rpcResponse.isPresent()) {\n+            response.setName((String) rpcResponse.get().getValue());\n+            parseMessages(rpcResponse.get(), response);\n+            if (isOverallHealthy(response)) {\n+                response.setStatus(DetailedStackStatus.PROVISIONED.getStatus());\n+            } else {\n+                response.setStatus(DetailedStackStatus.UNHEALTHY.getStatus());\n+            }\n+        } else {\n+            response.setStatus(DetailedStackStatus.UNREACHABLE.getStatus());\n+            NodeHealthDetails nodeResponse = null;\n+            nodeResponse = new NodeHealthDetails();", "originalCommit": "052eaaea3ddc80a26d212586f52fa80656387391", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzEwMzI2OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7249#discussion_r377103268", "bodyText": "missed this in the refactoring.  Fixed.", "author": "holleyism", "createdAt": "2020-02-10T14:42:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk3MDQzMA=="}], "type": "inlineReview"}, {"oid": "fb205991672a48287aae67730a0240d5e0b66486", "url": "https://github.com/hortonworks/cloudbreak/commit/fb205991672a48287aae67730a0240d5e0b66486", "message": "CB-5486: Add instanceID to the response for the health check\n\nThis patch adds the instanceID for the nodes to the reponse\nfor the health check.", "committedDate": "2020-02-10T14:32:12Z", "type": "forcePushed"}, {"oid": "998e6ebb485b1dfdf6d84f670d10a0ebc1f2cfa6", "url": "https://github.com/hortonworks/cloudbreak/commit/998e6ebb485b1dfdf6d84f670d10a0ebc1f2cfa6", "message": "CB-5486: Add instanceID to the response for the health check\n\nThis patch adds the instanceID for the nodes to the reponse\nfor the health check.", "committedDate": "2020-02-10T14:41:41Z", "type": "forcePushed"}, {"oid": "c632b89b922d395f10ac6125d02f2de6046aab66", "url": "https://github.com/hortonworks/cloudbreak/commit/c632b89b922d395f10ac6125d02f2de6046aab66", "message": "CB-5486: Add instanceID to the response for the health check\n\nThis patch adds the instanceID for the nodes to the reponse\nfor the health check.", "committedDate": "2020-02-12T15:41:03Z", "type": "commit"}, {"oid": "c632b89b922d395f10ac6125d02f2de6046aab66", "url": "https://github.com/hortonworks/cloudbreak/commit/c632b89b922d395f10ac6125d02f2de6046aab66", "message": "CB-5486: Add instanceID to the response for the health check\n\nThis patch adds the instanceID for the nodes to the reponse\nfor the health check.", "committedDate": "2020-02-12T15:41:03Z", "type": "forcePushed"}]}