{"pr_number": 7897, "pr_title": "CB-6605 only sync env related WAGs", "pr_createdAt": "2020-04-25T12:33:28Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7897", "timeline": [{"oid": "96760454e0c9f24f20c72820832f9d0e016527f7", "url": "https://github.com/hortonworks/cloudbreak/commit/96760454e0c9f24f20c72820832f9d0e016527f7", "message": "CB-6605 only sync env related WAGs", "committedDate": "2020-04-25T12:31:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAxMzkzNw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7897#discussion_r416013937", "bodyText": "So we have these utility functions in Crns.java and Crn.java to do things like Crns.safeFromString (that can't return null) and Crns.forTypr(String, Service, ResourceType) that ensures that a crn belongs to a service and is of a specific resource type. It may be useful to bring that in here.", "author": "giladwolff", "createdAt": "2020-04-27T17:37:31Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/user/UmsUsersStateProvider.java", "diffHunk": "@@ -230,4 +247,14 @@ private EnvironmentAccessChecker createEnvironmentAccessChecker(String environme\n         requireNonNull(environmentCrn, \"environmentCrn is null\");\n         return new EnvironmentAccessChecker(grpcUmsClient, environmentCrn);\n     }\n+\n+    private Crn getCrn(WorkloadAdministrationGroup wag) {\n+        Crn resourceCrn = null;\n+        try {\n+            resourceCrn = Crn.fromString(wag.getResource());\n+        } catch (Exception e) {\n+            LOGGER.debug(\"Invalid resource is assigned to workload admin group: {}\", e.getMessage());\n+        }\n+        return resourceCrn;\n+    }", "originalCommit": "96760454e0c9f24f20c72820832f9d0e016527f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAxNjg2OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7897#discussion_r416016868", "bodyText": "Thanks. I'll bring that one in along with some tests.", "author": "keyki", "createdAt": "2020-04-27T17:41:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAxMzkzNw=="}], "type": "inlineReview"}]}