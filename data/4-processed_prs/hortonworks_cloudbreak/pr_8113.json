{"pr_number": 8113, "pr_title": "CB-7085 - Env: moving UMS api calls from nio thread to flow", "pr_createdAt": "2020-05-20T12:04:04Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8113", "timeline": [{"oid": "d7d72a3271ba2e116b97be71f52b01478f33e98f", "url": "https://github.com/hortonworks/cloudbreak/commit/d7d72a3271ba2e116b97be71f52b01478f33e98f", "message": "CB-7085 - Env: moving UMS api calls to from nio thread to flow", "committedDate": "2020-05-20T17:25:11Z", "type": "forcePushed"}, {"oid": "28233ee0c286f00f533366dc3ef036bdb8fb5d2f", "url": "https://github.com/hortonworks/cloudbreak/commit/28233ee0c286f00f533366dc3ef036bdb8fb5d2f", "message": "CB-7085 - Env: moving UMS api calls to from nio thread to flow", "committedDate": "2020-05-20T17:28:03Z", "type": "forcePushed"}, {"oid": "9bb437b92531db5ff28383517e25fa0517d07987", "url": "https://github.com/hortonworks/cloudbreak/commit/9bb437b92531db5ff28383517e25fa0517d07987", "message": "CB-7085 - Env: moving UMS api calls to from nio thread to flow", "committedDate": "2020-05-20T17:29:34Z", "type": "forcePushed"}, {"oid": "05d07bc1b57d8d75c9801d0e098d06892ad57650", "url": "https://github.com/hortonworks/cloudbreak/commit/05d07bc1b57d8d75c9801d0e098d06892ad57650", "message": "CB-7085 - Env: moving UMS api calls from nio thread to flow", "committedDate": "2020-05-20T17:34:12Z", "type": "forcePushed"}, {"oid": "c36e0f6966e165243263cc306f4639bae45b2ecd", "url": "https://github.com/hortonworks/cloudbreak/commit/c36e0f6966e165243263cc306f4639bae45b2ecd", "message": "CB-7085 - Env: moving UMS api calls from nio thread to flow", "committedDate": "2020-05-21T09:30:32Z", "type": "commit"}, {"oid": "c36e0f6966e165243263cc306f4639bae45b2ecd", "url": "https://github.com/hortonworks/cloudbreak/commit/c36e0f6966e165243263cc306f4639bae45b2ecd", "message": "CB-7085 - Env: moving UMS api calls from nio thread to flow", "committedDate": "2020-05-21T09:30:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNDQzNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428604436", "bodyText": "isNullorEmpty ?", "author": "doktoric", "createdAt": "2020-05-21T11:48:28Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "diffHunk": "@@ -52,6 +62,34 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                 );\n     }\n \n+    private void initEnvironment(Environment environment) {\n+        String environmentCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n+        if (!createVirtualGroups(environment, environmentCrnForVirtualGroups)) {\n+            // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n+            environmentService.setAdminGroupName(environment, environment.getAdminGroupName());\n+        }\n+        environmentService.assignEnvironmentAdminAndOwnerRole(environment.getCreator(), environmentCrnForVirtualGroups);\n+        setLocationAndRegions(environment);\n+    }\n+\n+    private String getEnvironmentCrnForVirtualGroups(Environment environment) {\n+        String environmentCrnForVirtualGroups = environment.getResourceCrn();\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            environmentCrnForVirtualGroups = environment.getParentEnvironment().getResourceCrn();\n+        }\n+        return environmentCrnForVirtualGroups;\n+    }\n+\n+    private boolean createVirtualGroups(Environment environment, String envCrn) {\n+        boolean result = false;\n+        if (StringUtils.isEmpty(environment.getAdminGroupName())) {", "originalCommit": "c36e0f6966e165243263cc306f4639bae45b2ecd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNzk1Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428607957", "bodyText": "isblank? :D", "author": "bergerdenes", "createdAt": "2020-05-21T11:57:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNDQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYxMjE2NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428612165", "bodyText": "dont worry they all do the same. :D I like the isEmpty named version", "author": "attilapalfi92", "createdAt": "2020-05-21T12:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNDQzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwODQ5Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428608497", "bodyText": "I hope getParentEnvironment is cached. if not, please extract this to a variable.", "author": "bergerdenes", "createdAt": "2020-05-21T11:58:36Z", "path": "environment/src/main/java/com/sequenceiq/environment/environment/flow/creation/handler/EnvironmentInitHandler.java", "diffHunk": "@@ -52,6 +62,34 @@ public void accept(Event<EnvironmentDto> environmentDtoEvent) {\n                 );\n     }\n \n+    private void initEnvironment(Environment environment) {\n+        String environmentCrnForVirtualGroups = getEnvironmentCrnForVirtualGroups(environment);\n+        if (!createVirtualGroups(environment, environmentCrnForVirtualGroups)) {\n+            // To keep backward compatibility, if somebody passes the group name, then we shall just use it\n+            environmentService.setAdminGroupName(environment, environment.getAdminGroupName());\n+        }\n+        environmentService.assignEnvironmentAdminAndOwnerRole(environment.getCreator(), environmentCrnForVirtualGroups);\n+        setLocationAndRegions(environment);\n+    }\n+\n+    private String getEnvironmentCrnForVirtualGroups(Environment environment) {\n+        String environmentCrnForVirtualGroups = environment.getResourceCrn();\n+        if (Objects.nonNull(environment.getParentEnvironment())) {\n+            environmentCrnForVirtualGroups = environment.getParentEnvironment().getResourceCrn();", "originalCommit": "c36e0f6966e165243263cc306f4639bae45b2ecd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYxNTExNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428615115", "bodyText": "It is not an api call or anything, returns a reference. I can cache that reference to a local variable but I think the JVM will do that so the method call overhead will be removed too.", "author": "attilapalfi92", "createdAt": "2020-05-21T12:14:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwODQ5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyMDczNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8113#discussion_r428620736", "bodyText": "(I moved this code without modification from the env creation service)", "author": "attilapalfi92", "createdAt": "2020-05-21T12:27:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwODQ5Nw=="}], "type": "inlineReview"}]}