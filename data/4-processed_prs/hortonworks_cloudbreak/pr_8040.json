{"pr_number": 8040, "pr_title": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "pr_createdAt": "2020-05-13T17:09:26Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8040", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNzQ3NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8040#discussion_r424607474", "bodyText": "Please add log lines to the different conditions.", "author": "keyki", "createdAt": "2020-05-13T17:25:22Z", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsNetworkCfTemplateProvider.java", "diffHunk": "@@ -42,13 +61,50 @@ public String provide(String envName, Long envId, String vpcCidr, List<SubnetReq\n         }\n     }\n \n-    private Map<String, Object> createModel(String envName, Long envId, String vpcCidr, List<SubnetRequest> subnets, boolean privateSubnetEnabled) {\n+    private Map<String, Object> createModel(NetworkCreationRequest networkCreationRequest, List<SubnetRequest> subnets) {\n         Map<String, Object> model = new HashMap<>();\n-        model.put(\"environmentName\", envName);\n-        model.put(\"environmentId\", envId);\n-        model.put(\"vpcCidr\", vpcCidr);\n+        model.put(\"environmentName\", networkCreationRequest.getEnvName());\n+        model.put(\"environmentId\", networkCreationRequest.getEnvId());\n+        model.put(\"vpcCidr\", networkCreationRequest.getNetworkCidr());\n         model.put(\"subnetDetails\", subnets);\n-        model.put(\"privateSubnetEnabled\", privateSubnetEnabled);\n+        model.put(\"privateSubnetEnabled\", privateSubnetEnabled(networkCreationRequest, subnets));\n+        model.put(\"vpcGatewayEndpoints\", gatewayServices);\n+        model.put(\"vpcInterfaceEndpointsMap\", createServiceSubnetMap(networkCreationRequest, subnets));\n         return model;\n     }\n+\n+    private Map<String, List<SubnetRequest>> createServiceSubnetMap(NetworkCreationRequest networkCreationRequest, List<SubnetRequest> subnets) {", "originalCommit": "53cd1a9288f4b670c8b7d9a5b5f490104293ffb1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "217a44429400141ec49fd029122c0129bfbf7e3e", "url": "https://github.com/hortonworks/cloudbreak/commit/217a44429400141ec49fd029122c0129bfbf7e3e", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-13T17:37:06Z", "type": "forcePushed"}, {"oid": "6391a2604990bc2407f6b97add549228a61eeab5", "url": "https://github.com/hortonworks/cloudbreak/commit/6391a2604990bc2407f6b97add549228a61eeab5", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-14T16:11:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3ODA3NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8040#discussion_r425278074", "bodyText": "it looks like not all the field are in the toString. is it on purpose?", "author": "lacikaaa", "createdAt": "2020-05-14T16:38:16Z", "path": "cloud-api/src/main/java/com/sequenceiq/cloudbreak/cloud/model/network/SubnetRequest.java", "diffHunk": "@@ -61,4 +61,14 @@ public void setType(SubnetType type) {\n     public SubnetType getType() {\n         return type;\n     }\n+\n+    @Override\n+    public String toString() {", "originalCommit": "6391a2604990bc2407f6b97add549228a61eeab5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3OTczMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8040#discussion_r425279730", "bodyText": "please remove :", "author": "lacikaaa", "createdAt": "2020-05-14T16:40:52Z", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsNetworkCfTemplateProvider.java", "diffHunk": "@@ -20,19 +31,31 @@\n \n @Component\n public class AwsNetworkCfTemplateProvider {\n+    static final String VPC_INTERFACE_SERVICE_ENDPOINT_NAME_PATTERN = \"com.amazonaws.%s.%s\";\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AwsNetworkCfTemplateProvider.class);\n \n     @Inject\n     private Configuration freemarkerConfiguration;\n \n     @Value(\"${cb.aws.cf.network.template.path:}\")\n     private String cloudFormationNetworkTemplatePath;\n \n+    @Value(\"${cb.aws.vpcendpoints.gateway.services:}\")", "originalCommit": "6391a2604990bc2407f6b97add549228a61eeab5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3OTg1Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8040#discussion_r425279853", "bodyText": "please remove :", "author": "lacikaaa", "createdAt": "2020-05-14T16:41:02Z", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsNetworkCfTemplateProvider.java", "diffHunk": "@@ -20,19 +31,31 @@\n \n @Component\n public class AwsNetworkCfTemplateProvider {\n+    static final String VPC_INTERFACE_SERVICE_ENDPOINT_NAME_PATTERN = \"com.amazonaws.%s.%s\";\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AwsNetworkCfTemplateProvider.class);\n \n     @Inject\n     private Configuration freemarkerConfiguration;\n \n     @Value(\"${cb.aws.cf.network.template.path:}\")\n     private String cloudFormationNetworkTemplatePath;\n \n+    @Value(\"${cb.aws.vpcendpoints.gateway.services:}\")\n+    private List<String> gatewayServices;\n+\n+    @Value(\"${cb.aws.vpcendpoints.interface.services:}\")", "originalCommit": "6391a2604990bc2407f6b97add549228a61eeab5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a33facf6d31719ff78215f158da5d8a49ee09ba7", "url": "https://github.com/hortonworks/cloudbreak/commit/a33facf6d31719ff78215f158da5d8a49ee09ba7", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-14T16:52:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5NDIwNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8040#discussion_r425294205", "bodyText": "please refactor innto smaller parts", "author": "lacikaaa", "createdAt": "2020-05-14T17:03:22Z", "path": "cloud-aws/src/main/java/com/sequenceiq/cloudbreak/cloud/aws/AwsNetworkCfTemplateProvider.java", "diffHunk": "@@ -42,13 +65,53 @@ public String provide(String envName, Long envId, String vpcCidr, List<SubnetReq\n         }\n     }\n \n-    private Map<String, Object> createModel(String envName, Long envId, String vpcCidr, List<SubnetRequest> subnets, boolean privateSubnetEnabled) {\n+    private Map<String, Object> createModel(NetworkCreationRequest networkCreationRequest, List<SubnetRequest> subnets) {\n         Map<String, Object> model = new HashMap<>();\n-        model.put(\"environmentName\", envName);\n-        model.put(\"environmentId\", envId);\n-        model.put(\"vpcCidr\", vpcCidr);\n+        model.put(\"environmentName\", networkCreationRequest.getEnvName());\n+        model.put(\"environmentId\", networkCreationRequest.getEnvId());\n+        model.put(\"vpcCidr\", networkCreationRequest.getNetworkCidr());\n         model.put(\"subnetDetails\", subnets);\n-        model.put(\"privateSubnetEnabled\", privateSubnetEnabled);\n+        model.put(\"privateSubnetEnabled\", privateSubnetEnabled(networkCreationRequest, subnets));\n+        model.put(\"vpcGatewayEndpoints\", gatewayServices);\n+        model.put(\"vpcInterfaceEndpointsMap\", createServiceSubnetMap(networkCreationRequest, subnets));\n         return model;\n     }\n+\n+    private Map<String, List<SubnetRequest>> createServiceSubnetMap(NetworkCreationRequest networkCreationRequest, List<SubnetRequest> subnets) {", "originalCommit": "a33facf6d31719ff78215f158da5d8a49ee09ba7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5NTIzMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8040#discussion_r425295233", "bodyText": "you have to add default in separate steps to avoid lock, like this:\nhttps://github.com/hortonworks/cloudbreak/blob/master/freeipa/src/main/resources/schema/app/20200406095012_CB-6385_add_version_to_stack.sql", "author": "lacikaaa", "createdAt": "2020-05-14T17:05:00Z", "path": "environment/src/main/resources/schema/app/20200513175538_CB-6764_introduce_serviceEndpointCreation_column_in_environment's_network_entity.sql", "diffHunk": "@@ -0,0 +1,9 @@\n+-- // CB-6764 introduce serviceEndpointCreation column in environment's network entity\n+-- Migration SQL that makes the change goes here.\n+\n+ALTER TABLE environment_network ADD COLUMN IF NOT EXISTS serviceEndpointCreation varchar(255) NOT NULL DEFAULT 'DISABLED';", "originalCommit": "a33facf6d31719ff78215f158da5d8a49ee09ba7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5f6d6286330c2f949ae5d82640294bb8aa2ceb42", "url": "https://github.com/hortonworks/cloudbreak/commit/5f6d6286330c2f949ae5d82640294bb8aa2ceb42", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-15T09:44:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcyOTk3Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8040#discussion_r425729972", "bodyText": "I think it would be nice to generate this on Java side", "author": "doktoric", "createdAt": "2020-05-15T11:08:40Z", "path": "cloud-aws/src/main/resources/templates/aws-cf-network.ftl", "diffHunk": "@@ -119,38 +136,42 @@\n     </#if>\n     </#list>\n \n-    <#if privateSubnetEnabled == true>\n-    \"S3Endpoint\" : {\n+    <#list vpcGatewayEndpoints as vpcGatewayEndpoint>\n+    \"${vpcGatewayEndpoint?replace(\"[-\\\\.]\", \"\")}Endpoint\" : {\n       \"Type\" : \"AWS::EC2::VPCEndpoint\",\n       \"Properties\" : {\n         \"RouteTableIds\" : [\n-         {\"Ref\" : \"PublicRouteTable\"} <#if privateSubnetEnabled == true>, </#if>\n-        <#list subnetDetails as subnet>\n+          {\"Ref\" : \"PublicRouteTable\"} <#if privateSubnetEnabled == true>, </#if>\n+          <#if privateSubnetEnabled == true>\n+          <#list subnetDetails as subnet>\n             <#if subnet.privateSubnetCidr?has_content>\n-             {\"Ref\" : \"PRT${subnet.index}\"}<#if subnet_has_next>,</#if>\n+              {\"Ref\" : \"PRT${subnet.index}\"}<#if subnet_has_next>,</#if>\n             </#if>\n-        </#list>\n+          </#list>\n+          </#if>\n         ],\n-        \"ServiceName\" : { \"Fn::Sub\": \"com.amazonaws.${r\"${AWS::Region}\"}.s3\" },\n+        \"ServiceName\" : { \"Fn::Sub\": \"com.amazonaws.${r\"${AWS::Region}\"}.${vpcGatewayEndpoint}\" },\n         \"VpcId\" : {\"Ref\" : \"VPC\"}\n       }\n     },\n-    \"DDBEndpoint\" : {\n+    </#list>\n+    <#list vpcInterfaceEndpointsMap as vpcInterfaceEndpoint, azSubnets>\n+    \"${vpcInterfaceEndpoint?replace(\"[-\\\\.]\", \"\", \"r\")}Endpoint\" : {", "originalCommit": "5f6d6286330c2f949ae5d82640294bb8aa2ceb42", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTczNjAzMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8040#discussion_r425736031", "bodyText": "please write a unit test for this", "author": "doktoric", "createdAt": "2020-05-15T11:22:03Z", "path": "environment/src/main/java/com/sequenceiq/environment/network/dao/domain/converter/ServiceEndpointCreationConverter.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.sequenceiq.environment.network.dao.domain.converter;\n+\n+import com.sequenceiq.cloudbreak.converter.DefaultEnumConverter;\n+import com.sequenceiq.environment.api.v1.environment.model.base.ServiceEndpointCreation;\n+\n+public class ServiceEndpointCreationConverter extends DefaultEnumConverter<ServiceEndpointCreation> {", "originalCommit": "5f6d6286330c2f949ae5d82640294bb8aa2ceb42", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a0faa88d652e01021929c822a26538d1a9096bdf", "url": "https://github.com/hortonworks/cloudbreak/commit/a0faa88d652e01021929c822a26538d1a9096bdf", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-18T14:11:14Z", "type": "forcePushed"}, {"oid": "1271dfc3f0907e2e68a009d6d1f6fdc1da5b2764", "url": "https://github.com/hortonworks/cloudbreak/commit/1271dfc3f0907e2e68a009d6d1f6fdc1da5b2764", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-18T16:00:26Z", "type": "forcePushed"}, {"oid": "670a6c3d55f119b5e0630751d259a38b167f33c5", "url": "https://github.com/hortonworks/cloudbreak/commit/670a6c3d55f119b5e0630751d259a38b167f33c5", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-19T07:57:55Z", "type": "forcePushed"}, {"oid": "43bcccc22625280c64b1d1cb8825171c5031dada", "url": "https://github.com/hortonworks/cloudbreak/commit/43bcccc22625280c64b1d1cb8825171c5031dada", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-19T09:05:55Z", "type": "forcePushed"}, {"oid": "edd5ed998f94b92d4243bc7575e38cc6099c0e87", "url": "https://github.com/hortonworks/cloudbreak/commit/edd5ed998f94b92d4243bc7575e38cc6099c0e87", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-19T14:38:27Z", "type": "forcePushed"}, {"oid": "cf7198eb18ac38f0d82f0ad2b2cfb76b7ec7eeac", "url": "https://github.com/hortonworks/cloudbreak/commit/cf7198eb18ac38f0d82f0ad2b2cfb76b7ec7eeac", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-19T19:37:59Z", "type": "commit"}, {"oid": "cf7198eb18ac38f0d82f0ad2b2cfb76b7ec7eeac", "url": "https://github.com/hortonworks/cloudbreak/commit/cf7198eb18ac38f0d82f0ad2b2cfb76b7ec7eeac", "message": "CB-6764 Create private endpoints for cloud provider services in CB-created networks", "committedDate": "2020-05-19T19:37:59Z", "type": "forcePushed"}]}