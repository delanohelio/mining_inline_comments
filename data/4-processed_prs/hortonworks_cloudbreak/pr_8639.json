{"pr_number": 8639, "pr_title": "CB-8144: Fix Cloudbreak Core DNS registration and TTL", "pr_createdAt": "2020-07-24T20:12:12Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8639", "timeline": [{"oid": "9051e484b9dde8e0009673a569b3876b0d022457", "url": "https://github.com/hortonworks/cloudbreak/commit/9051e484b9dde8e0009673a569b3876b0d022457", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale.", "committedDate": "2020-07-25T00:38:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3ODQ2NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r460678465", "bodyText": "I think you should grep for .in-addr.arpa. here", "author": "lacikaaa", "createdAt": "2020-07-27T06:46:02Z", "path": "orchestrator-salt/src/main/resources/salt/salt/sssd/template/add_dns_record.j2", "diffHunk": "@@ -0,0 +1,43 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+\n+echo \"$PW\" | kinit {{ pillar['sssd-ipa']['principal'] }}\n+\n+set -x\n+\n+HOSTNAME=$(hostname)\n+FQDN=$(hostname -f)\n+IPADDR=$(hostname -i)\n+REVERSE_IP=$(hostname -i | awk -F. '{print $4\".\"$3\".\" $2\".\"$1}')\n+\n+# dnsrecord-add must either add the record or modify it\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  ipa dnsrecord-add {{ pillar['sssd-ipa']['domain'] }}. \"${HOSTNAME}\" \"--a-rec=${IPADDR}\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+fi\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  echo \"Failed to set DNS A-record for ${HOSTNAME}\"\n+  false\n+fi\n+\n+for zone in $(ipa dnszone-find --raw | grep idnsname | cut -d':' -f2 | xargs)", "originalCommit": "9051e484b9dde8e0009673a569b3876b0d022457", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY4MTgzMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r460681830", "bodyText": "also I have a little concern here. if we have lets see the IP 10.10.1.2.\nAnd we have 2 zones:\n\n10.10.in-addr.arpa\n10.in-addr.arpa\n\nthis for loop will add the reverse record for both zone. Is it really what we want to do?", "author": "lacikaaa", "createdAt": "2020-07-27T06:55:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3ODQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NjY1Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r461096656", "bodyText": "I think you should grep for .in-addr.arpa. here\n\nDone, but its technically not needed as if echo \"$REVERSE_IP\" | grep -qE \"$ZONE_NET$\"; then should have handled this.\n\nalso I have a little concern here. if we have\nlets see the IP 10.10.1.2.\nAnd we have 2 zones:\n10.10.in-addr.arpa\n10.in-addr.arpa\nthis for loop will add the reverse record for both zone. Is it really what we want to do?\n\nI don't think we should have cases where there are different matching zones, but maybe there is a way to do it with submitting with our current deployment of CDP. Either way, I made the reverse DNS register with the more specific zone. So it should only register once.", "author": "jamisonbennett", "createdAt": "2020-07-27T18:47:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3ODQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3NDIwMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r461374203", "bodyText": "Done, but its technically not needed as...\n\nYes, but it will then loop for reverse zones only\nWe should not create but never know. Also customer might create it. I tested and FreeIPA will return the more exact match, but I think it's better to be prepared and add only for the right one.\nThanks for the modification!", "author": "lacikaaa", "createdAt": "2020-07-28T07:27:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3ODQ2NQ=="}], "type": "inlineReview"}, {"oid": "968ec77ef054470cf9e84564057498f65ffc6bad", "url": "https://github.com/hortonworks/cloudbreak/commit/968ec77ef054470cf9e84564057498f65ffc6bad", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale.", "committedDate": "2020-07-27T18:43:08Z", "type": "forcePushed"}, {"oid": "5423f3b7cc542897814b46777c5e1a4f6f91530a", "url": "https://github.com/hortonworks/cloudbreak/commit/5423f3b7cc542897814b46777c5e1a4f6f91530a", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was not validated at scale.", "committedDate": "2020-07-27T18:50:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3NjYyNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r461376626", "bodyText": "if this if is false, shouldn't we exit the loop? I mean in case we find the record, so it's successfully added we shouldn't iterate any more", "author": "lacikaaa", "createdAt": "2020-07-28T07:32:29Z", "path": "orchestrator-salt/src/main/resources/salt/salt/sssd/template/add_dns_record.j2", "diffHunk": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+\n+echo \"$PW\" | kinit {{ pillar['sssd-ipa']['principal'] }}\n+\n+set -x\n+\n+HOSTNAME=$(hostname)\n+FQDN=$(hostname -f)\n+IPADDR=$(hostname -i)\n+REVERSE_IP=$(hostname -i | awk -F. '{print $4\".\"$3\".\" $2\".\"$1}')\n+\n+# dnsrecord-add must either add the record or modify it\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  ipa dnsrecord-add {{ pillar['sssd-ipa']['domain'] }}. \"${HOSTNAME}\" \"--a-rec=${IPADDR}\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+fi\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  echo \"Failed to set DNS A-record for ${HOSTNAME}\"\n+  false\n+fi\n+\n+LONGEST_MATCHING_ZONE_FOUND=0\n+for zone in $(ipa dnszone-find --raw | grep \"idnsname:.*\\.in-addr\\.arpa\\.\" | cut -d':' -f2 | awk '{ print length, $0 }' | sort -n -r | awk '{ print $2 }' | xargs)\n+do\n+    ZONE_NET=${zone//.in-addr.arpa./}\n+    if [[ $LONGEST_MATCHING_ZONE_FOUND -eq 0 ]] && echo \"$REVERSE_IP\" | grep -qE \"$ZONE_NET$\"; then\n+        LONGEST_MATCHING_ZONE_FOUND=1\n+        REVERSE_RECORD_NAME=$(echo \"$REVERSE_IP\" | sed \"s/.$ZONE_NET$//g\")\n+        # dnsrecord-add must either add the record or modify it\n+        if ! ipa dnsrecord-find \"$zone\" \"--name=$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}; then\n+          ipa dnsrecord-add \"$zone\" \"$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+        fi\n+        if ! ipa dnsrecord-find \"$zone\" \"--name=$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}; then", "originalCommit": "5423f3b7cc542897814b46777c5e1a4f6f91530a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3NzUxOQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r461377519", "bodyText": "due to set -e this won't run in case of failure. If we really want to destroy it we should use trap for this", "author": "lacikaaa", "createdAt": "2020-07-28T07:34:13Z", "path": "orchestrator-salt/src/main/resources/salt/salt/sssd/template/add_dns_record.j2", "diffHunk": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+\n+echo \"$PW\" | kinit {{ pillar['sssd-ipa']['principal'] }}\n+\n+set -x\n+\n+HOSTNAME=$(hostname)\n+FQDN=$(hostname -f)\n+IPADDR=$(hostname -i)\n+REVERSE_IP=$(hostname -i | awk -F. '{print $4\".\"$3\".\" $2\".\"$1}')\n+\n+# dnsrecord-add must either add the record or modify it\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  ipa dnsrecord-add {{ pillar['sssd-ipa']['domain'] }}. \"${HOSTNAME}\" \"--a-rec=${IPADDR}\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+fi\n+if ! ipa dnsrecord-find {{ pillar['sssd-ipa']['domain'] }}. \"--name=${HOSTNAME}\" \"--a-rec=${IPADDR}\"  --ttl {{ pillar['sssd-ipa']['dns_ttl'] }} --all; then\n+  echo \"Failed to set DNS A-record for ${HOSTNAME}\"\n+  false\n+fi\n+\n+LONGEST_MATCHING_ZONE_FOUND=0\n+for zone in $(ipa dnszone-find --raw | grep \"idnsname:.*\\.in-addr\\.arpa\\.\" | cut -d':' -f2 | awk '{ print length, $0 }' | sort -n -r | awk '{ print $2 }' | xargs)\n+do\n+    ZONE_NET=${zone//.in-addr.arpa./}\n+    if [[ $LONGEST_MATCHING_ZONE_FOUND -eq 0 ]] && echo \"$REVERSE_IP\" | grep -qE \"$ZONE_NET$\"; then\n+        LONGEST_MATCHING_ZONE_FOUND=1\n+        REVERSE_RECORD_NAME=$(echo \"$REVERSE_IP\" | sed \"s/.$ZONE_NET$//g\")\n+        # dnsrecord-add must either add the record or modify it\n+        if ! ipa dnsrecord-find \"$zone\" \"--name=$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}; then\n+          ipa dnsrecord-add \"$zone\" \"$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}\n+        fi\n+        if ! ipa dnsrecord-find \"$zone\" \"--name=$REVERSE_RECORD_NAME\" \"--ptr-rec=${FQDN}.\" --ttl {{ pillar['sssd-ipa']['dns_ttl'] }}; then\n+          echo \"Failed to set Reverse DNS PTR-record for ${FQDN}\"\n+          false\n+        fi\n+    fi\n+done\n+\n+# Destroy the krbtgt\n+kdestroy", "originalCommit": "5423f3b7cc542897814b46777c5e1a4f6f91530a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9d45b411f92f725d56fdcd168ecf3c1f19105e4b", "url": "https://github.com/hortonworks/cloudbreak/commit/9d45b411f92f725d56fdcd168ecf3c1f19105e4b", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale.", "committedDate": "2020-07-28T18:59:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE3NDI1MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8639#discussion_r462174250", "bodyText": "it looks like you have some extra character here", "author": "lacikaaa", "createdAt": "2020-07-29T09:44:10Z", "path": "orchestrator-salt/src/main/resources/salt/salt/sssd/ipa.sls", "diffHunk": "@@ -12,30 +12,27 @@ ipa_packages_install:\n     - unless:\n       - rpm -q ipa-client openldap openldap-clients\n \n+/opt/salt/scripts/join_ipa.sh:\n+  file.managed:\n+    - makedirs: True\n+    - user: root\n+    - group: root\n+    - mode: 700\n+    - source: salt://sssd/template/join_ipa.j2\n+    - template: jinja\n+\n join_ipa:\n   cmd.run:\n {% if metadata.platform != 'YARN' %}\n-    - name: |\n-        ipa-client-install --unattended --uninstall\n-        ipa-client-install --realm={{salt['pillar.get']('sssd-ipa:realm')}} \\\n-          --domain={{salt['pillar.get']('sssd-ipa:domain')}} --mkhomedir --principal={{salt['pillar.get']('sssd-ipa:principal')}} \\\n-          {%- if \"ID_BROKER_CLOUD_IDENTITY_ROLE\" in grains.get('roles', []) %}\n-          --no-sshd --no-ssh \\\n-          {%- endif %}\n-          --password $PW --unattended --force-join --ssh-trust-dns --no-ntp && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/ipa-join-executed\n+    - name: /opt/salt/scripts/join_ipa.sh && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/ipa-join-executed\n {% else %}\n-    - name: |\n-        runuser -l root -c 'ipa-client-install --unattended --uninstall\n-        runuser -l root -c 'ipa-client-install --realm={{salt['pillar.get']('sssd-ipa:realm')}} \\\n-          --domain={{salt['pillar.get']('sssd-ipa:domain')}} --mkhomedir --principal={{salt['pillar.get']('sssd-ipa:principal')}} \\\n-          {%- if \"ID_BROKER_CLOUD_IDENTITY_ROLE\" in grains.get('roles', []) %}\n-          --no-sshd --no-ssh \\\n-          {%- endif %}\n-          --password \"{{salt['pillar.get']('sssd-ipa:password')}}\" --unattended --force-join --ssh-trust-dns --no-ntp && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/ipa-join-executed'\n+    - name: runuser -l root -c '/opt/salt/scripts/join_ipa.sh && echo $(date +%Y-%m-%d:%H:%M:%S) >> /var/log/ipa-join-executed'\n {% endif %}\n-    - unless: test -f /var/log/ipa-join-executed || { echo $PW | kinit {{salt['pillar.get']('sssd-ipa:principal')}} && ipa env; }\n+    - unless: test -f /var/log/ipa-join-executed\n     - runas: root\n-    - failhard: True\n+    - failhard: True:$", "originalCommit": "9d45b411f92f725d56fdcd168ecf3c1f19105e4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "51bb111937f224a3ccd0bd1a7a320ea476413d34", "url": "https://github.com/hortonworks/cloudbreak/commit/51bb111937f224a3ccd0bd1a7a320ea476413d34", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale.", "committedDate": "2020-07-29T12:52:38Z", "type": "forcePushed"}, {"oid": "07ce97c44bc4e1907d159018782c76b0b44313f7", "url": "https://github.com/hortonworks/cloudbreak/commit/07ce97c44bc4e1907d159018782c76b0b44313f7", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale.", "committedDate": "2020-07-29T12:56:31Z", "type": "forcePushed"}, {"oid": "d19094af8239e091d17e8d933c1c06f784dc1846", "url": "https://github.com/hortonworks/cloudbreak/commit/d19094af8239e091d17e8d933c1c06f784dc1846", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale.", "committedDate": "2020-07-29T22:29:53Z", "type": "forcePushed"}, {"oid": "071250e95eb70a407fe5badc0a2a9cd977446593", "url": "https://github.com/hortonworks/cloudbreak/commit/071250e95eb70a407fe5badc0a2a9cd977446593", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale.", "committedDate": "2020-07-29T23:49:55Z", "type": "commit"}, {"oid": "071250e95eb70a407fe5badc0a2a9cd977446593", "url": "https://github.com/hortonworks/cloudbreak/commit/071250e95eb70a407fe5badc0a2a9cd977446593", "message": "CB-8144: Fix Cloudbreak Core DNS registration and TTL\n\nFix the cloudbreak core DNS A record and reverse registration to\nalways have a 30 second TTL and to be able to regsister both the\nA record and reverse record with salt retries in the case of an\nintermittent failure.\n\nMore Details:\n\nCloudbreak core had a fix put in to address scale with CB-6544. But\nit turns out this does not always work. When ipa-client-install is\nrun, it sometimes (but for some reason it does not always) registers\nthe DNS and reverse DNS. If the ipa-client-install registers DNS\nentries then the add_dns_record rule is not run because the unless\nclause causes it to be skipped. This presents a few problems.\n\n1. The flag file /var/log/dnsrecord-add-executed is never created. So\nevery time a salt high state is run the unless clauses which in turn\nchecks FreeIPA to see if the DNS entries are present. The intent of\nCB-6544 was to fix this.\n\n2. The actual rule is never run, so the TTL for the A record is not\nset to 30. The intent of CB-7715 was to fix this.\n\nAdditionally, the reverse DNS TTL was never set so the default value\nfor the zone is used. See CB-7715 for more details on this.\n\nIt also appears that when the dnsrecord-add is run, it can fail with a\npartially executed state (e.g. A record set but reverse not set). This\nmeans that a retry will fail because it will not modify anything for\none of the 2 implicit commands, which makes the salt retry fail. But\nthis is silently happening because the retry is also checking the DNS\nA record so in this case actually the reverse record never gets set.\nAgain, it is not clear exactly how or why this might happen.\n\nAdditional cleanup was done to ensure kdestroy is run.\n\nWhat was tested:\n\nA datalake was provsioned using local cloudbreak deployment. This was\nnot validated at scale.", "committedDate": "2020-07-29T23:49:55Z", "type": "forcePushed"}]}