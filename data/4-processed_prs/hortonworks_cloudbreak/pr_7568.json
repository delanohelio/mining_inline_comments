{"pr_number": 7568, "pr_title": "CB-5921 Make CM setup restartable", "pr_createdAt": "2020-03-12T16:47:42Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7568", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3OTAyNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7568#discussion_r391779026", "bodyText": "This log should include the exception stacktrace.", "author": "keyki", "createdAt": "2020-03-12T17:28:55Z", "path": "cluster-cm/src/main/java/com/sequenceiq/cloudbreak/cm/ClouderaManagerSecurityService.java", "diffHunk": "@@ -128,36 +130,61 @@ public void disableSecurity() {\n     public void changeOriginalCredentialsAndCreateCloudbreakUser(boolean ldapConfigured) throws CloudbreakException {\n         LOGGER.debug(\"change original admin user and create cloudbreak user\");\n         try {\n-            ApiClient client = getDefaultClient(stack.getGatewayPort(), clientConfig);\n+            ApiClient client = createApiClient();\n             UsersResourceApi usersResourceApi = clouderaManagerApiFactory.getUserResourceApi(client);\n-            Optional<ApiUser2> oldAdminUser = getOldAdminUser(usersResourceApi);\n-            if (oldAdminUser.isPresent()) {\n-                Cluster cluster = stack.getCluster();\n-                createNewUser(usersResourceApi, oldAdminUser.get().getAuthRoles(), cluster.getCloudbreakAmbariUser(), cluster.getCloudbreakAmbariPassword());\n-                createNewUser(usersResourceApi, oldAdminUser.get().getAuthRoles(), cluster.getDpAmbariUser(), cluster.getDpAmbariPassword());\n-                if (ADMIN_USER.equals(cluster.getUserName())) {\n-                    ApiUser2 oldAdmin = oldAdminUser.get();\n-                    oldAdmin.setPassword(cluster.getPassword());\n-                    usersResourceApi.updateUser2(oldAdminUser.get().getName(), oldAdmin);\n-                } else {\n-                    if (cluster.getUserName() != null) {\n-                        String user = cluster.getCloudbreakAmbariUser();\n-                        String password = cluster.getCloudbreakAmbariPassword();\n-                        client = getClient(stack.getGatewayPort(), user, password, clientConfig);\n-                        UsersResourceApi newUsersResourceApi = clouderaManagerApiFactory.getUserResourceApi(client);\n-                        createNewUser(newUsersResourceApi, oldAdminUser.get().getAuthRoles(), cluster.getUserName(), cluster.getPassword());\n-                    }\n-                }\n-                removeDefaultAdminUser(ldapConfigured, Optional.ofNullable(cluster.getUserName()));\n+            ApiUser2List userList = usersResourceApi.readUsers2(\"SUMMARY\");\n+\n+            ApiUser2 oldAdminUser = getOldAdminUser(userList).orElseThrow(() -> new CloudbreakException(\"Can't find original admin user\"));\n+            Cluster cluster = stack.getCluster();\n+            createNewUser(usersResourceApi, oldAdminUser.getAuthRoles(), cluster.getCloudbreakAmbariUser(), cluster.getCloudbreakAmbariPassword(), userList);\n+            createNewUser(usersResourceApi, oldAdminUser.getAuthRoles(), cluster.getDpAmbariUser(), cluster.getDpAmbariPassword(), userList);\n+            if (ADMIN_USER.equals(cluster.getUserName())) {\n+                ApiUser2 oldAdmin = oldAdminUser;\n+                oldAdmin.setPassword(cluster.getPassword());\n+                usersResourceApi.updateUser2(oldAdminUser.getName(), oldAdmin);\n             } else {\n-                throw new CloudbreakException(\"Can't find original admin user\");\n+                if (cluster.getUserName() != null) {\n+                    String user = cluster.getCloudbreakAmbariUser();\n+                    String password = cluster.getCloudbreakAmbariPassword();\n+                    client = getClient(stack.getGatewayPort(), user, password, clientConfig);\n+                    UsersResourceApi newUsersResourceApi = clouderaManagerApiFactory.getUserResourceApi(client);\n+                    createNewUser(newUsersResourceApi, oldAdminUser.getAuthRoles(), cluster.getUserName(), cluster.getPassword(), userList);\n+                }\n             }\n-        } catch (ApiException | ClouderaManagerClientInitException e) {\n+            removeDefaultAdminUser(ldapConfigured, Optional.ofNullable(cluster.getUserName()));\n+        } catch (ApiException | ClusterClientInitException | ClouderaManagerClientInitException e) {\n             LOGGER.info(\"Can't replace original admin user due to: \", e);\n             throw new CloudbreakException(\"Can't replace original admin user due to: \" + e.getMessage());\n         }\n     }\n \n+    private boolean checkUserExists(ApiUser2List userList, String username) {\n+        return userList.getItems().stream().map(ApiUser2::getName).anyMatch(username::equals);\n+    }\n+\n+    private ApiClient createApiClient() throws ClusterClientInitException, ClouderaManagerClientInitException, CloudbreakException {\n+        ApiClient client = null;\n+        try {\n+            client = clouderaManagerApiClientProvider.getDefaultClient(stack.getGatewayPort(), clientConfig, ClouderaManagerApiClientProvider.API_V_31);\n+            ToolsResourceApi toolsResourceApi = clouderaManagerApiFactory.getToolsResourceApi(client);\n+            toolsResourceApi.echo(\"TEST\");\n+            LOGGER.debug(\"Cloudera Manager already running, old admin user's password has not been changed yet.\");\n+            return client;\n+        } catch (ClouderaManagerClientInitException e) {\n+            throw new ClusterClientInitException(e);\n+        } catch (ApiException e) {\n+            if (org.springframework.http.HttpStatus.UNAUTHORIZED.value() == e.getCode()) {\n+                LOGGER.debug(\"Cloudera Manager already running, old admin user's password has been changed.\");\n+                Cluster cluster = stack.getCluster();\n+                String user = cluster.getCloudbreakAmbariUser();\n+                String password = cluster.getCloudbreakAmbariPassword();\n+                return clouderaManagerApiClientProvider.getClient(stack.getGatewayPort(), user, password, clientConfig);\n+            }\n+            LOGGER.debug(\"Cloudera Manager is not running.\");", "originalCommit": "581ce7ecccc64915f21e3b1e8458773d83820c4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "83a9cc991e27393c416df0e23ca4663121e59cb5", "url": "https://github.com/hortonworks/cloudbreak/commit/83a9cc991e27393c416df0e23ca4663121e59cb5", "message": "CB-5921 Make CM setup restartable", "committedDate": "2020-03-12T17:30:48Z", "type": "forcePushed"}, {"oid": "3cb25ff5805427b11cc45497774d2371006519a5", "url": "https://github.com/hortonworks/cloudbreak/commit/3cb25ff5805427b11cc45497774d2371006519a5", "message": "CB-5921 Make CM setup restartable", "committedDate": "2020-03-12T17:32:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4OTQ4OQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7568#discussion_r391789489", "bodyText": "There are 2 methods that look the same with minor changes. I'm not sure if this can be moved to some common place or worth generalizing it. It's up to you, just wanted to make a note of it.", "author": "keyki", "createdAt": "2020-03-12T17:45:59Z", "path": "cluster-cm/src/main/java/com/sequenceiq/cloudbreak/cm/ClouderaManagerSetupService.java", "diffHunk": "@@ -160,6 +156,30 @@ public void waitForServer() throws CloudbreakException, ClusterClientInitExcepti\n         }\n     }\n \n+    private ApiClient createApiClient() throws ClusterClientInitException {", "originalCommit": "3cb25ff5805427b11cc45497774d2371006519a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcxODAwMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7568#discussion_r392718003", "bodyText": "Their behaviour is quite different. I cannot really come up with a common method for them.", "author": "daszabo", "createdAt": "2020-03-15T22:11:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4OTQ4OQ=="}], "type": "inlineReview"}, {"oid": "1d8c10b61f0a2f609147f951195d8a07f653d533", "url": "https://github.com/hortonworks/cloudbreak/commit/1d8c10b61f0a2f609147f951195d8a07f653d533", "message": "CB-5921 Make CM setup restartable", "committedDate": "2020-03-15T20:36:39Z", "type": "commit"}, {"oid": "1d8c10b61f0a2f609147f951195d8a07f653d533", "url": "https://github.com/hortonworks/cloudbreak/commit/1d8c10b61f0a2f609147f951195d8a07f653d533", "message": "CB-5921 Make CM setup restartable", "committedDate": "2020-03-15T20:36:39Z", "type": "forcePushed"}]}