{"pr_number": 7619, "pr_title": "CB-6161 Fix HDFS user home directory creation for HA configuration", "pr_createdAt": "2020-03-20T08:53:44Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7619", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUxMzkxNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7619#discussion_r395513914", "bodyText": "I'm guessing you need the colon here between host and port if I'm reading this correctly?", "author": "risdenk", "createdAt": "2020-03-20T09:16:44Z", "path": "orchestrator-salt/src/main/resources/salt/salt/post-recipes/scripts/createuserhome.sh", "diffHunk": "@@ -71,25 +71,47 @@ PATH_PREFIX=\"/user\"\n \n export KRB5CCNAME=/tmp/krb5cc_cloudbreak_$EUID\n \n+\n+klist -s\n+if [[ $? -ne 0 ]]; then\n+  kinit_as_hdfs\n+fi\n+\n WEBHDFS_HTTP_POLICY=$(hdfs getconf -confkey dfs.http.policy)\n \n-if [ \"$WEBHDFS_HTTP_POLICY\" == \"HTTP_ONLY\" ]; then\n-  NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.http-address)\n-  WEBHDFS_URL=http://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+hdfs haadmin -getAllServiceState\n+if [[ $? -ne 0 ]]; then\n+  echo \"Single node configuration\"\n+  if [ \"$WEBHDFS_HTTP_POLICY\" == \"HTTP_ONLY\" ]; then\n+    NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.http-address)\n+    WEBHDFS_URL=http://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+  else\n+    NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.https-address)\n+    WEBHDFS_URL=https://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+  fi\n else\n-  NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.https-address)\n-  WEBHDFS_URL=https://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+  echo \"HA configuration\"\n+  NN_HOST=$(hdfs haadmin -getAllServiceState | grep active | cut -d':' -f 1)\n+  echo \"Active NAMENODE host: $NN_HOST\"\n+  if [ \"$NN_HOST\" != \"$(hostname -f)\" ]; then\n+    echo \"This is not the active host. Script will run on the active one\"\n+    exit 0\n+  fi\n+  if [ \"$WEBHDFS_HTTP_POLICY\" == \"HTTP_ONLY\" ]; then\n+    NAMENODE_PORT=$(hdfs getconf -confkey dfs.namenode.http-address | cut -d':' -f 2)\n+    echo \"NN port: $NAMENODE_PORT\"\n+    WEBHDFS_URL=http://$NN_HOST$NAMENODE_PORT/webhdfs/v1", "originalCommit": "1e216d8dd0f4fbbc442524729d4cad6492cee5f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU0NDU1Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7619#discussion_r395544553", "bodyText": "yep, fixed. good catch!", "author": "lacikaaa", "createdAt": "2020-03-20T10:19:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUxMzkxNA=="}], "type": "inlineReview"}, {"oid": "efdedbda44fabd04595adf6614c6f18bc16894cc", "url": "https://github.com/hortonworks/cloudbreak/commit/efdedbda44fabd04595adf6614c6f18bc16894cc", "message": "CB-6161 Fix HDFS user home directory creation for HA configuration", "committedDate": "2020-03-20T10:18:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyNjIwOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7619#discussion_r395626208", "bodyText": "Do we need this check in the case of non HA? This to me looks like this script will be installed on all the nodes or maybe just the namenodes?", "author": "risdenk", "createdAt": "2020-03-20T13:13:07Z", "path": "orchestrator-salt/src/main/resources/salt/salt/post-recipes/scripts/createuserhome.sh", "diffHunk": "@@ -71,25 +71,47 @@ PATH_PREFIX=\"/user\"\n \n export KRB5CCNAME=/tmp/krb5cc_cloudbreak_$EUID\n \n+\n+klist -s\n+if [[ $? -ne 0 ]]; then\n+  kinit_as_hdfs\n+fi\n+\n WEBHDFS_HTTP_POLICY=$(hdfs getconf -confkey dfs.http.policy)\n \n-if [ \"$WEBHDFS_HTTP_POLICY\" == \"HTTP_ONLY\" ]; then\n-  NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.http-address)\n-  WEBHDFS_URL=http://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+hdfs haadmin -getAllServiceState\n+if [[ $? -ne 0 ]]; then\n+  echo \"Single node configuration\"\n+  if [ \"$WEBHDFS_HTTP_POLICY\" == \"HTTP_ONLY\" ]; then\n+    NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.http-address)\n+    WEBHDFS_URL=http://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+  else\n+    NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.https-address)\n+    WEBHDFS_URL=https://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+  fi\n else\n-  NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.https-address)\n-  WEBHDFS_URL=https://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+  echo \"HA configuration\"\n+  NN_HOST=$(hdfs haadmin -getAllServiceState | grep active | cut -d':' -f 1)\n+  echo \"Active NAMENODE host: $NN_HOST\"\n+  if [ \"$NN_HOST\" != \"$(hostname -f)\" ]; then", "originalCommit": "efdedbda44fabd04595adf6614c6f18bc16894cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNDY2OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7619#discussion_r395634668", "bodyText": "this will be on every, but only namenodes, and will run there, so if they switch the active one for any reason we don't have to do anything from cb side", "author": "lacikaaa", "createdAt": "2020-03-20T13:27:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyNjIwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyNjU2MQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7619#discussion_r395626561", "bodyText": "nit: you can put this in the if statement itself to check status code instead of a separate line if you wanted.", "author": "risdenk", "createdAt": "2020-03-20T13:13:43Z", "path": "orchestrator-salt/src/main/resources/salt/salt/post-recipes/scripts/createuserhome.sh", "diffHunk": "@@ -71,25 +71,47 @@ PATH_PREFIX=\"/user\"\n \n export KRB5CCNAME=/tmp/krb5cc_cloudbreak_$EUID\n \n+\n+klist -s\n+if [[ $? -ne 0 ]]; then\n+  kinit_as_hdfs\n+fi\n+\n WEBHDFS_HTTP_POLICY=$(hdfs getconf -confkey dfs.http.policy)\n \n-if [ \"$WEBHDFS_HTTP_POLICY\" == \"HTTP_ONLY\" ]; then\n-  NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.http-address)\n-  WEBHDFS_URL=http://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+hdfs haadmin -getAllServiceState", "originalCommit": "efdedbda44fabd04595adf6614c6f18bc16894cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY5ODkwNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7619#discussion_r395698904", "bodyText": "I fixed this, could you check and resolv if you find it ok?", "author": "lacikaaa", "createdAt": "2020-03-20T15:06:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyNjU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwNTk4Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7619#discussion_r395705987", "bodyText": "Looks good - didn't run it - but surface looks good.", "author": "risdenk", "createdAt": "2020-03-20T15:16:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyNjU2MQ=="}], "type": "inlineReview"}, {"oid": "0314a03b1e82ce47de73c5bce5206c7c40e0150e", "url": "https://github.com/hortonworks/cloudbreak/commit/0314a03b1e82ce47de73c5bce5206c7c40e0150e", "message": "CB-6161 Fix HDFS user home directory creation for HA configuration", "committedDate": "2020-03-20T15:05:19Z", "type": "forcePushed"}, {"oid": "097e4401110a96142f42a93428bbb39e9db5961a", "url": "https://github.com/hortonworks/cloudbreak/commit/097e4401110a96142f42a93428bbb39e9db5961a", "message": "CB-6161 Fix HDFS user home directory creation for HA configuration", "committedDate": "2020-03-20T18:15:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxNTM4MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7619#discussion_r395815380", "bodyText": "this doesn't seem like a robust approach. I have two concerns:\n\nis it possible that this runs concurrently with the namenodes starting, in which case neither NN is active yet?\nit's definitely possible that one of the NNs fails around the same time these two scripts are running. In that case either neither or both of the copies of this script will run.\n\nit seems this script should be idempotent. How often does it get re-run? eg if for some reason we hit one of the above issues, would it run again a minute later and just be a transient problem, or would we be left in a persistent unsynced state?", "author": "toddlipcon", "createdAt": "2020-03-20T18:20:26Z", "path": "orchestrator-salt/src/main/resources/salt/salt/post-recipes/scripts/createuserhome.sh", "diffHunk": "@@ -71,25 +71,47 @@ PATH_PREFIX=\"/user\"\n \n export KRB5CCNAME=/tmp/krb5cc_cloudbreak_$EUID\n \n+\n+klist -s\n+if [[ $? -ne 0 ]]; then\n+  kinit_as_hdfs\n+fi\n+\n WEBHDFS_HTTP_POLICY=$(hdfs getconf -confkey dfs.http.policy)\n \n-if [ \"$WEBHDFS_HTTP_POLICY\" == \"HTTP_ONLY\" ]; then\n-  NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.http-address)\n-  WEBHDFS_URL=http://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+if ! hdfs haadmin -getAllServiceState\n+then\n+  echo \"Single node configuration\"\n+  if [ \"$WEBHDFS_HTTP_POLICY\" == \"HTTP_ONLY\" ]; then\n+    NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.http-address)\n+    WEBHDFS_URL=http://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+  else\n+    NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.https-address)\n+    WEBHDFS_URL=https://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+  fi\n else\n-  NAMENODE_HTTP_ADDRESS=$(hdfs getconf -confkey dfs.namenode.https-address)\n-  WEBHDFS_URL=https://$NAMENODE_HTTP_ADDRESS/webhdfs/v1\n+  echo \"HA configuration\"\n+  NN_HOST=$(hdfs haadmin -getAllServiceState | grep active | cut -d':' -f 1)\n+  echo \"Active NAMENODE host: $NN_HOST\"\n+  if [ \"$NN_HOST\" != \"$(hostname -f)\" ]; then\n+    echo \"This is not the active host. Script will run on the active one\"", "originalCommit": "097e4401110a96142f42a93428bbb39e9db5961a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgyNDQ3NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7619#discussion_r395824474", "bodyText": "it will start on all namenodes, but will exit if it's not the active one. this is in case of HA. (if there is no active host it won't run)\nif not HA it will work as it used to.\nit's in cron, so it runs periodically.\nI haven't touched the core logic, only the address calculation in case of HA. it was written mostly by Deveraj and you. But if we need more modification I can make it.", "author": "lacikaaa", "createdAt": "2020-03-20T18:38:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxNTM4MA=="}], "type": "inlineReview"}, {"oid": "3f79110e2ce84ebdf193db15e42f87f1c1166a67", "url": "https://github.com/hortonworks/cloudbreak/commit/3f79110e2ce84ebdf193db15e42f87f1c1166a67", "message": "CB-6161 Fix HDFS user home directory creation for HA configuration", "committedDate": "2020-03-23T08:23:38Z", "type": "commit"}, {"oid": "3f79110e2ce84ebdf193db15e42f87f1c1166a67", "url": "https://github.com/hortonworks/cloudbreak/commit/3f79110e2ce84ebdf193db15e42f87f1c1166a67", "message": "CB-6161 Fix HDFS user home directory creation for HA configuration", "committedDate": "2020-03-23T08:23:38Z", "type": "forcePushed"}]}