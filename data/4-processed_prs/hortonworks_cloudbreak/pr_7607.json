{"pr_number": 7607, "pr_title": "CB-6127 Improve FreeIPA service termination trigger", "pr_createdAt": "2020-03-18T08:25:12Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7607", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE3NDk0NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394174945", "bodyText": "typo in flowCancelServicel -> flowCancelService", "author": "topolyai5", "createdAt": "2020-03-18T08:27:55Z", "path": "datalake/src/test/java/com/sequenceiq/datalake/service/sdx/SdxServiceTest.java", "diffHunk": "@@ -124,6 +125,9 @@\n     @Mock\n     private CDPConfigService cdpConfigService;\n \n+    @Mock\n+    private FlowCancelService flowCancelServicel;", "originalCommit": "afb8db51231bb0564405256e47f25ff3b9cd124f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5NTIwNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394195206", "bodyText": "fixed", "author": "lacikaaa", "createdAt": "2020-03-18T09:06:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE3NDk0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE3NzkzMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394177930", "bodyText": "You should not remove the LOGGER, you should improve the logging in this class", "author": "topolyai5", "createdAt": "2020-03-18T08:33:42Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/flow/FreeIpaFlowManager.java", "diffHunk": "@@ -7,29 +7,22 @@\n import javax.inject.Inject;\n \n import org.apache.commons.lang3.StringUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Component;\n \n import com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider;\n import com.sequenceiq.cloudbreak.common.event.Acceptable;\n import com.sequenceiq.cloudbreak.common.event.Selectable;\n-import com.sequenceiq.flow.core.Flow2Handler;\n import com.sequenceiq.flow.core.FlowConstants;\n import com.sequenceiq.flow.core.model.FlowAcceptResult;\n import com.sequenceiq.flow.core.model.ResultType;\n import com.sequenceiq.flow.reactor.ErrorHandlerAwareReactorEventFactory;\n-import com.sequenceiq.freeipa.flow.stack.StackEvent;\n-import com.sequenceiq.freeipa.service.stack.StackService;\n \n import reactor.bus.Event;\n import reactor.bus.EventBus;\n \n @Component\n public class FreeIpaFlowManager {\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(FreeIpaFlowManager.class);", "originalCommit": "afb8db51231bb0564405256e47f25ff3b9cd124f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MDA3Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394180073", "bodyText": "it is not informative. In the logs, we cannot find easily what flow does not have INIT_STATE", "author": "topolyai5", "createdAt": "2020-03-18T08:38:07Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/core/flow2/service/TerminationTriggerService.java", "diffHunk": "@@ -58,7 +59,7 @@ private void handleIfStackIsNotTerminated(Stack stack, boolean forced) {\n             LOGGER.debug(\"Found termination flowlog with id [{}] and payload [{}]\", flowLog.getFlowId(), flowLog.getPayload());\n             handleIfFlowLogExistsForTermination(stack, forced, flowLog);\n         } else {\n-            LOGGER.warn(\"Couldn't find FlowLog with 'PRE_TERMINATION_STATE'. Triggering termination\");\n+            LOGGER.warn(\"Couldn't find FlowLog with 'INIT_STATE'. Triggering termination\");", "originalCommit": "afb8db51231bb0564405256e47f25ff3b9cd124f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MDkzOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394180938", "bodyText": "it's for indicating which path the code took if we are investigating an issue", "author": "lacikaaa", "createdAt": "2020-03-18T08:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MDA3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MTMwOA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394181308", "bodyText": "but it should be debug level", "author": "lacikaaa", "createdAt": "2020-03-18T08:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MDA3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MDM0OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394180348", "bodyText": "it is not informative. In the logs, we cannot find easily what flow does not have INIT_STATE", "author": "topolyai5", "createdAt": "2020-03-18T08:38:40Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaDeletionService.java", "diffHunk": "@@ -42,9 +61,39 @@ public void delete(String environmentCrn, String accountId) {\n     }\n \n     private void unscheduleAndTriggerTerminate(Stack stack) {\n+        flowCancelService.cancelTooOldTerminationFlowForResource(stack.getId(), stack.getName());\n         freeipaJobService.unschedule(stack);\n+        if (!stack.isDeleteCompleted()) {\n+            handleIfStackIsNotTerminated(stack);\n+        } else {\n+            LOGGER.debug(\"Stack is already deleted.\");\n+        }\n+    }\n+\n+    private void handleIfStackIsNotTerminated(Stack stack) {\n+        LOGGER.info(\"stack {} in environment {} is not deleted.\", stack.getName(), stack.getEnvironmentCrn());\n+        Optional<FlowLog> optionalFlowLog = findLatestTerminationFlowLogWithInitState(stack);\n+        if (optionalFlowLog.isPresent()) {\n+            FlowLog flowLog = optionalFlowLog.get();\n+            LOGGER.debug(\"Found termination flowlog with id [{}] and payload [{}]\", flowLog.getFlowId(), flowLog.getPayload());\n+        } else {\n+            fireTerminationEvent(stack);\n+        }\n+    }\n+\n+    private void fireTerminationEvent(Stack stack) {\n+        LOGGER.warn(\"Couldn't find FlowLog with 'INIT_STATE'. Triggering termination\");", "originalCommit": "afb8db51231bb0564405256e47f25ff3b9cd124f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4NTMwMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394185300", "bodyText": "modified to debug, it's only to check the flow of the code if there is an issue", "author": "lacikaaa", "createdAt": "2020-03-18T08:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE4MDM0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIyNzgxNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394227816", "bodyText": "Minor, capital S", "author": "keyki", "createdAt": "2020-03-18T10:00:15Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/stack/FreeIpaDeletionService.java", "diffHunk": "@@ -42,9 +61,39 @@ public void delete(String environmentCrn, String accountId) {\n     }\n \n     private void unscheduleAndTriggerTerminate(Stack stack) {\n+        flowCancelService.cancelTooOldTerminationFlowForResource(stack.getId(), stack.getName());\n         freeipaJobService.unschedule(stack);\n+        if (!stack.isDeleteCompleted()) {\n+            handleIfStackIsNotTerminated(stack);\n+        } else {\n+            LOGGER.debug(\"Stack is already deleted.\");\n+        }\n+    }\n+\n+    private void handleIfStackIsNotTerminated(Stack stack) {\n+        LOGGER.info(\"stack {} in environment {} is not deleted.\", stack.getName(), stack.getEnvironmentCrn());", "originalCommit": "afb8db51231bb0564405256e47f25ff3b9cd124f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNzI3Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/7607#discussion_r394427276", "bodyText": "fixed", "author": "lacikaaa", "createdAt": "2020-03-18T15:19:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIyNzgxNg=="}], "type": "inlineReview"}, {"oid": "5f1328d8521667a29d91c623285aa3a89131dfa4", "url": "https://github.com/hortonworks/cloudbreak/commit/5f1328d8521667a29d91c623285aa3a89131dfa4", "message": "CB-6127 Improve FreeIPA service termination trigger", "committedDate": "2020-03-18T14:09:00Z", "type": "commit"}, {"oid": "5f1328d8521667a29d91c623285aa3a89131dfa4", "url": "https://github.com/hortonworks/cloudbreak/commit/5f1328d8521667a29d91c623285aa3a89131dfa4", "message": "CB-6127 Improve FreeIPA service termination trigger", "committedDate": "2020-03-18T14:09:00Z", "type": "forcePushed"}]}