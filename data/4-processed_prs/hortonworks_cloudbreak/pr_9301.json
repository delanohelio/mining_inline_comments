{"pr_number": 9301, "pr_title": "CB-9005 - FreeIpa client tracing", "pr_createdAt": "2020-10-27T12:35:09Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9301", "timeline": [{"oid": "8a659a6994593848ec03779d1cda59fed8482000", "url": "https://github.com/hortonworks/cloudbreak/commit/8a659a6994593848ec03779d1cda59fed8482000", "message": "CB-9005 - FreeIpa client tracing\nAdditional code cleanup/refactor in VaultRetryService", "committedDate": "2020-10-27T13:20:41Z", "type": "forcePushed"}, {"oid": "c3080f84ecc4770a30a6f6b90654427e12d03035", "url": "https://github.com/hortonworks/cloudbreak/commit/c3080f84ecc4770a30a6f6b90654427e12d03035", "message": "CB-9005 - FreeIpa client tracing\nAdditional code cleanup/refactor in VaultRetryService", "committedDate": "2020-10-27T14:43:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA1ODIxMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9301#discussion_r513058211", "bodyText": "nit: if you are adding the MockitoExtension, can you pull this up to a class field and add the @mock annotation?", "author": "handavid", "createdAt": "2020-10-27T21:59:25Z", "path": "freeipa-client/src/test/java/com/sequenceiq/freeipa/client/FreeIpaClientTest.java", "diffHunk": "@@ -20,8 +29,8 @@ void setUp() {\n                 mock(JsonRpcHttpClient.class),", "originalCommit": "c3080f84ecc4770a30a6f6b90654427e12d03035", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4MTgyMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9301#discussion_r513281821", "bodyText": "yep", "author": "attilapalfi92", "createdAt": "2020-10-28T09:08:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA1ODIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA1OTUwNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9301#discussion_r513059504", "bodyText": "nit: all other parameters are each on their own lines.", "author": "handavid", "createdAt": "2020-10-27T22:01:49Z", "path": "freeipa/src/main/java/com/sequenceiq/freeipa/service/freeipa/FreeIpaClientFactory.java", "diffHunk": "@@ -211,15 +216,15 @@ private FreeIpaClientBuilder getFreeIpaClientBuilderForClusterProxy(Stack stack,\n                 additionalHeadersStickySessionFirstRpc,\n                 additionalHeadersStickySession,\n                 stickyIdHeader,\n-                CLUSTER_PROXY_ERROR_LISTENER);\n+                CLUSTER_PROXY_ERROR_LISTENER, tracer);", "originalCommit": "c3080f84ecc4770a30a6f6b90654427e12d03035", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4MjAyMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9301#discussion_r513282020", "bodyText": "indeed, I'm fixing this", "author": "attilapalfi92", "createdAt": "2020-10-28T09:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA1OTUwNA=="}], "type": "inlineReview"}, {"oid": "e78bcd7dba64ad8c1bddec761129da7e5f1fed0e", "url": "https://github.com/hortonworks/cloudbreak/commit/e78bcd7dba64ad8c1bddec761129da7e5f1fed0e", "message": "CB-9005 - FreeIpa client tracing\nAdditional code cleanup/refactor in VaultRetryService", "committedDate": "2020-10-28T09:10:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwNjczNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9301#discussion_r513306735", "bodyText": "if I see it well this is almost the same as initSpan, except it will return Optional.empty() if tracer.activeSpan() is null\nCould you refactor this part to reflect this logic?", "author": "lacikaaa", "createdAt": "2020-10-28T09:46:28Z", "path": "common/src/main/java/com/sequenceiq/cloudbreak/tracing/TracingUtil.java", "diffHunk": "@@ -25,6 +29,25 @@\n     private TracingUtil() {\n     }\n \n+    public static Span initSpan(Tracer tracer, String component, String operation) {\n+        Span activeSpan = tracer.activeSpan();\n+        Span span = tracer.buildSpan(component + \" - \" + operation)\n+                .addReference(References.FOLLOWS_FROM, activeSpan != null ? activeSpan.context() : null)\n+                .start();\n+        span.setTag(TracingUtil.COMPONENT, component);\n+        return span;\n+    }\n+\n+    public static Optional<Span> initOptionalSpan(Tracer tracer, String component, String operation) {", "originalCommit": "e78bcd7dba64ad8c1bddec761129da7e5f1fed0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8812a837b9cef2bff8cec32301f19efb26a314b3", "url": "https://github.com/hortonworks/cloudbreak/commit/8812a837b9cef2bff8cec32301f19efb26a314b3", "message": "CB-9005 - FreeIpa client tracing\nAdditional code cleanup/refactor in VaultRetryService", "committedDate": "2020-10-28T11:34:37Z", "type": "commit"}, {"oid": "8812a837b9cef2bff8cec32301f19efb26a314b3", "url": "https://github.com/hortonworks/cloudbreak/commit/8812a837b9cef2bff8cec32301f19efb26a314b3", "message": "CB-9005 - FreeIpa client tracing\nAdditional code cleanup/refactor in VaultRetryService", "committedDate": "2020-10-28T11:34:37Z", "type": "forcePushed"}]}