{"pr_number": 8263, "pr_title": "CB-7246 - Prevent favicon.ico requests for unauthenticated UIs", "pr_createdAt": "2020-06-11T20:13:35Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/8263", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzNTExMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r439535111", "bodyText": "So cookies MAY have the SameSite set. In that case you should not overwrite it or add it.", "author": "giladwolff", "createdAt": "2020-06-12T16:54:26Z", "path": "orchestrator-salt/src/main/resources/salt/salt/nginx/conf/clouderamanager-ssl-user-facing.conf", "diffHunk": "@@ -38,6 +38,8 @@ server {\n         proxy_set_header   Upgrade $http_upgrade;\n         proxy_set_header   Connection $connection_upgrade;\n         proxy_set_header   Referer {{ protocol }}://$host/$1;\n+        # Add Security cookie flags\n+        proxy_cookie_path ~(.*) \"$1; SameSite=none; secure; httponly\";", "originalCommit": "c48049a4b68e92848f3dc1fbe8b086294f60e5db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU3Njg3NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r439576875", "bodyText": "That is true @biharitomi is there a way to do this? thanks!", "author": "moresandeep", "createdAt": "2020-06-12T18:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzNTExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA5OTc0Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r440099747", "bodyText": "You can test this change on a simple local env of CB which based on your changes. Every created cluster is going to have this config, so you are able to test this change even in VPC which as proxy to complicate the flow.", "author": "biharitomi", "createdAt": "2020-06-15T11:07:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzNTExMQ=="}], "type": "inlineReview"}, {"oid": "19715b530e5ee6ad9a682524281cd775233523c1", "url": "https://github.com/hortonworks/cloudbreak/commit/19715b530e5ee6ad9a682524281cd775233523c1", "message": "CB-7246 - Prevent favicon.ico requests for unauthenticated UIs", "committedDate": "2020-06-25T16:38:47Z", "type": "commit"}, {"oid": "19715b530e5ee6ad9a682524281cd775233523c1", "url": "https://github.com/hortonworks/cloudbreak/commit/19715b530e5ee6ad9a682524281cd775233523c1", "message": "CB-7246 - Prevent favicon.ico requests for unauthenticated UIs", "committedDate": "2020-06-25T16:38:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1OTEyNQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r445759125", "bodyText": "So let me see if I understand what this change is doing. Before this change, the browser made two requests to knox that is fronted by this nginx, one for the actual resource and right afterwards for the favicon.ico. When google changed the default SameSite default the pac4j cookie was not sent by the browser so knox did not know where to redirect the browser to. And then when the second request came it just returned the favicon and that is what you got.\nWhat this change is doing is returning a 403 for the second request. This means that the user will see a 403 UNAUTHORIZED error message on the screen instead of the favicon, right?", "author": "giladwolff", "createdAt": "2020-06-25T18:36:14Z", "path": "orchestrator-salt/src/main/resources/salt/salt/nginx/conf/clouderamanager-ssl-user-facing.conf", "diffHunk": "@@ -28,6 +28,14 @@ server {\n         rewrite ^([/](?!clouderamanager/).*$) /clouderamanager$1;\n     }\n \n+    # If hadoop-jwt cookie not set and favicon is requested return 403.", "originalCommit": "19715b530e5ee6ad9a682524281cd775233523c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMTgwMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r445811803", "bodyText": "Not exactly, browser will request (on its own) favicon.ico for new websites. Now, what happens is when we click the UI link from Control Plane we get redirected to the UI page with a request for the resource (CM, Ranger, Atlas etc.), Chrome will, on its own also request favicon.ico. These two requests would go through full KnoxSSO cycle and for some unknown reason Altus would return back response for favicon.ico (even when favicon.ico was the send request) and drop the request for requested resource. We saw this in the SAML debugging session we had few weeks ago. How this is related to SameSite is honestly a mystery to me :(\nWhat the fix tries to do is block favicon.ico requests for unauthenticated requests.\nNow since favicon.ico request is initiated by the browser users will not see 403. And upon successful authentication browser will again request favicon.ico and this time it will succeed. This is demonstrated in the screenshot I pasted above.", "author": "moresandeep", "createdAt": "2020-06-25T20:13:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1OTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1NTc3Ng==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r445955776", "bodyText": "The control plane gets exactly one SAML authentication request from Knox and it's never for favicon. I believe that after you set the samesite property in knox and atlas we could not reproduce the issue any more. That said, @risdenk thinks that there are no issues with SameSite as he is running with the new feature enabled and haven't encountered any problem.\nI would like to get to the bottom of this if possible. Let's chat offline.", "author": "giladwolff", "createdAt": "2020-06-26T04:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1OTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxNzE2NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r447917164", "bodyText": "After looking at a reproduction with you again, I agree that not triggering the authentication route for favicon requests is the right thing to do. I am not sure that returning a 403 is the right thing as it seems like the browser will never retry the request. But maybe I'm wrong and maybe it's not important. I added @arnebech and @joeheyming as reviewers as they may have more ideas/information re: what to return to the original favicon request.", "author": "giladwolff", "createdAt": "2020-06-30T19:08:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1OTEyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2MDMxNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r445760314", "bodyText": "Why not just add the location to the first if statement?\nif ($cookie_hadoop-jwt .. && location favicon.ico) return 403?", "author": "giladwolff", "createdAt": "2020-06-25T18:38:30Z", "path": "orchestrator-salt/src/main/resources/salt/salt/nginx/conf/clouderamanager-ssl-user-facing.conf", "diffHunk": "@@ -28,6 +28,14 @@ server {\n         rewrite ^([/](?!clouderamanager/).*$) /clouderamanager$1;\n     }\n \n+    # If hadoop-jwt cookie not set and favicon is requested return 403.\n+    if ($cookie_hadoop-jwt !~ .+) {\n+        rewrite ^/favicon.ico$ /favicon.403;\n+    }\n+    location ~ ^/favicon.403$ {\n+        return 403;\n+    }", "originalCommit": "19715b530e5ee6ad9a682524281cd775233523c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMzA1Mw==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r445813053", "bodyText": "Oh I wish ! quirks of nginx.\nLocation is not allowed in if and if is frowned upon in Location, see If is Evil", "author": "moresandeep", "createdAt": "2020-06-25T20:16:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2MDMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MTU4MA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r448591580", "bodyText": "I suspect this rule will be applied when CM is reached directly and not through Knox.\nCould you please test this behaviour when NGiNX proxies the request directly to CM?\nhttps://github.com/hortonworks/cloudbreak#how-to-reach-cm-ui-directlynot-through-knox\nThe mentioned scenario is mainly for debugging when the cluster could not be installed and may Knox is not running.\nOtherwise the PR looks good to me.", "author": "biharitomi", "createdAt": "2020-07-01T20:11:54Z", "path": "orchestrator-salt/src/main/resources/salt/salt/nginx/conf/clouderamanager-ssl-user-facing.conf", "diffHunk": "@@ -28,6 +28,14 @@ server {\n         rewrite ^([/](?!clouderamanager/).*$) /clouderamanager$1;\n     }\n \n+    # If hadoop-jwt cookie not set and favicon is requested return 403.\n+    if ($cookie_hadoop-jwt !~ .+) {", "originalCommit": "19715b530e5ee6ad9a682524281cd775233523c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkzNDgzNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r448934836", "bodyText": "@biharitomi thanks! looks like this is not affecting direct CM requests. This is a direct call to CM, notice there is no response from the server (not even 403). If this was going through the patched nginx code we would have seen 403.\n\nWhen the request goes through Knox we return 403 (nginx patch code)\n\nWhich makes me conclude this patch works as expected. Let me know your thoughts.", "author": "moresandeep", "createdAt": "2020-07-02T11:29:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MTU4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzODA5OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/8263#discussion_r450038098", "bodyText": "Thanks!", "author": "biharitomi", "createdAt": "2020-07-06T07:39:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MTU4MA=="}], "type": "inlineReview"}]}