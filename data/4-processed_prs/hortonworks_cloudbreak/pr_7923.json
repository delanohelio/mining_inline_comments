{"pr_number": 7923, "pr_title": "CB-6050 [FAILED AZURE E2E] SDX polling failed when stack is available and cluster is requested", "pr_createdAt": "2020-04-29T07:11:35Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/7923", "timeline": [{"oid": "06fef3213a93e8f61959891ee1d6fdf881d1f2b6", "url": "https://github.com/hortonworks/cloudbreak/commit/06fef3213a93e8f61959891ee1d6fdf881d1f2b6", "message": "CB-6050 Change flow chain waiting structure", "committedDate": "2020-04-29T10:43:43Z", "type": "forcePushed"}, {"oid": "55096447718800bc378873e8ea47b111478980d4", "url": "https://github.com/hortonworks/cloudbreak/commit/55096447718800bc378873e8ea47b111478980d4", "message": "CB-6050 Change flow chain waiting structure", "committedDate": "2020-04-29T16:04:04Z", "type": "forcePushed"}, {"oid": "9656f8562857dc5fbfe8508ad468ebd463e649c3", "url": "https://github.com/hortonworks/cloudbreak/commit/9656f8562857dc5fbfe8508ad468ebd463e649c3", "message": "CB-6050 Change flow chain waiting structure", "committedDate": "2020-04-30T10:30:32Z", "type": "commit"}, {"oid": "9656f8562857dc5fbfe8508ad468ebd463e649c3", "url": "https://github.com/hortonworks/cloudbreak/commit/9656f8562857dc5fbfe8508ad468ebd463e649c3", "message": "CB-6050 Change flow chain waiting structure", "committedDate": "2020-04-30T10:30:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyODg2NA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7923#discussion_r420128864", "bodyText": "Can't rootFlowChain be null here?", "author": "lnardai", "createdAt": "2020-05-05T13:56:21Z", "path": "flow/src/main/java/com/sequenceiq/flow/service/flowlog/FlowChainLogService.java", "diffHunk": "@@ -40,50 +39,50 @@\n         return repository.findByFlowChainIdOrderByCreatedDesc(flowChainId);\n     }\n \n-    public Set<FlowChainLog> collectRelatedFlowChains(FlowChainLog flowChain) {\n+    public List<FlowChainLog> collectRelatedFlowChains(FlowChainLog flowChain) {\n         LOGGER.info(\"Finding out master flow chain based on chain id {}\", flowChain.getFlowChainId());\n-        FlowChainLog masterFlowChain = collectMasterFlowChain(flowChain);\n-        LOGGER.info(\"Collecting child flow chains based on master chain id {}\", masterFlowChain.getFlowChainId());\n-        Set<FlowChainLog> flowChainList = Sets.newHashSet(masterFlowChain);\n-        collectChildFlowChains(flowChainList, masterFlowChain);\n+        FlowChainLog rootFlowChain = collectRootFlowChain(flowChain);\n+        LOGGER.info(\"Collecting child flow chains based on master chain id {}\", rootFlowChain.getFlowChainId());", "originalCommit": "9656f8562857dc5fbfe8508ad468ebd463e649c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIxOTA5OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/7923#discussion_r420219098", "bodyText": "Nice one! Readable tests.", "author": "lnardai", "createdAt": "2020-05-05T15:55:46Z", "path": "flow/src/test/java/com/sequenceiq/flow/service/flowlog/FlowChainLogServiceTest.java", "diffHunk": "@@ -34,87 +26,107 @@\n \n     private static final String FLOWCHAIN_PARENT_SUFFIX = \"Parent\";\n \n+    private static final String NO_PARENT = null;\n+\n     @InjectMocks\n     private FlowChainLogService underTest;\n \n     @Mock\n     private FlowChainLogRepository flowLogRepository;\n \n     @Test\n-    public void testGetRelatedFlowChainIds() {\n-        String flowChainId = \"flowChainId\";\n-        String otherFlowChainId = \"otherFlowChainId\";\n-        String childFlowChainId = \"childFlowChainId\";\n-        String parentFlowChainId = \"parentFlowChainId\";\n-        when(flowLogRepository.findByParentFlowChainIdOrderByCreatedDesc(eq(parentFlowChainId)))\n-                .thenReturn(Lists.newArrayList(create(flowChainId), create(otherFlowChainId)));\n-        when(flowLogRepository.findByParentFlowChainIdOrderByCreatedDesc(eq(flowChainId))).thenReturn(Lists.newArrayList(create(childFlowChainId)));\n-        when(flowLogRepository.findByParentFlowChainIdOrderByCreatedDesc(eq(otherFlowChainId))).thenReturn(Lists.newArrayList());\n-        when(flowLogRepository.findByParentFlowChainIdOrderByCreatedDesc(eq(childFlowChainId))).thenReturn(Lists.newArrayList());\n-        when(flowLogRepository.findFirstByFlowChainIdOrderByCreatedDesc(eq(flowChainId + FLOWCHAIN_PARENT_SUFFIX)))\n-                .thenReturn(Optional.of(create(parentFlowChainId)));\n-        when(flowLogRepository.findFirstByFlowChainIdOrderByCreatedDesc(eq(parentFlowChainId + FLOWCHAIN_PARENT_SUFFIX))).thenReturn(Optional.empty());\n-\n-        Set<FlowChainLog> flowChains = underTest.collectRelatedFlowChains(create(flowChainId));\n-        List<String> flowChainIds = flowChains.stream().map(flowChainLog -> flowChainLog.getFlowChainId()).collect(Collectors.toList());\n-\n-        assertEquals(4, flowChainIds.size());\n-        assertTrue(flowChainIds.contains(flowChainId));\n-        assertTrue(flowChainIds.contains(childFlowChainId));\n-        assertTrue(flowChainIds.contains(parentFlowChainId));\n-\n-        verify(flowLogRepository, times(4)).findByParentFlowChainIdOrderByCreatedDesc(any());\n-        verify(flowLogRepository, times(2)).findFirstByFlowChainIdOrderByCreatedDesc(any());\n+    public void testFindAllFlowChainsInTree() {", "originalCommit": "9656f8562857dc5fbfe8508ad468ebd463e649c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}