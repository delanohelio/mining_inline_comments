{"pr_number": 9084, "pr_title": "CB-8970 entitlement based upscale and downscale on specific services.\u2026", "pr_createdAt": "2020-09-24T14:38:57Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9084", "timeline": [{"oid": "851dfef5b35f01abd5afc8e3fd17c0f58132d02a", "url": "https://github.com/hortonworks/cloudbreak/commit/851dfef5b35f01abd5afc8e3fd17c0f58132d02a", "message": "CB-8970 entitlement based upscale and downscale on specific services. We need to request new ums entitlements as well for this feature to use. Mostly for nifi team to use but I prepared for streaming and other scenarios as well.", "committedDate": "2020-09-24T14:36:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4MjA3OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9084#discussion_r494582078", "bodyText": "Shouldn't the DATAHUB_DEFAULT_SCALING should also be added here?", "author": "biharitomi", "createdAt": "2020-09-24T20:10:16Z", "path": "mock-thunderhead/src/main/java/com/sequenceiq/thunderhead/grpc/service/auth/MockUserManagementService.java", "diffHunk": "@@ -594,6 +598,8 @@ public void getAccount(GetAccountRequest request, StreamObserver<GetAccountRespo\n                                 .addEntitlements(createEntitlement(DATAHUB_AZURE_AUTOSCALING))\n                                 .addEntitlements(createEntitlement(DATAHUB_AWS_AUTOSCALING))\n                                 .addEntitlements(createEntitlement(LOCAL_DEV))\n+                                .addEntitlements(createEntitlement(DATAHUB_FLOW_SCALING))\n+                                .addEntitlements(createEntitlement(DATAHUB_STREAMING_SCALING))", "originalCommit": "851dfef5b35f01abd5afc8e3fd17c0f58132d02a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5NzQxNA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9084#discussion_r494797414", "bodyText": "I dont want to enable that one yet", "author": "doktoric", "createdAt": "2020-09-25T07:24:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4MjA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NDMzMw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9084#discussion_r494884333", "bodyText": "ok", "author": "biharitomi", "createdAt": "2020-09-25T10:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4MjA3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDEwNg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9084#discussion_r494584106", "bodyText": "Shouldn't we gather and check the user who initiated this scaling operation?", "author": "biharitomi", "createdAt": "2020-09-24T20:14:21Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/ClusterCommonService.java", "diffHunk": "@@ -127,7 +129,14 @@ private FlowIdentifier clusterHostgroupAdjustmentChange(Long stackId, UpdateClus\n                     updateJson.getHostGroupAdjustment().getHostGroup(), stack.getName()));\n         }\n         if (blueprintService.isClouderaManagerTemplate(blueprint)) {\n-            cmTemplateValidator.validateHostGroupScalingRequest(blueprint, hostGroup.get(),\n+            User creator = stack.getCreator();\n+            String userCrn = creator.getUserCrn();", "originalCommit": "851dfef5b35f01abd5afc8e3fd17c0f58132d02a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5Nzg0OA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9084#discussion_r494797848", "bodyText": "I think what we want to check is the account entitlement. It does not matter who initiated this", "author": "doktoric", "createdAt": "2020-09-25T07:25:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDEwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NDc2NQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9084#discussion_r494884765", "bodyText": "Yet, but probably it we should consider it later, I am ok with that, but I said :)", "author": "biharitomi", "createdAt": "2020-09-25T10:03:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDEwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDIwMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9084#discussion_r494584200", "bodyText": "Shouldn't we gather and check the user who initiated this scaling operation?", "author": "biharitomi", "createdAt": "2020-09-24T20:14:29Z", "path": "core/src/main/java/com/sequenceiq/cloudbreak/service/stack/flow/UpdateNodeCountValidator.java", "diffHunk": "@@ -80,7 +81,12 @@ public void validateServiceRoles(Stack stack, InstanceGroupAdjustmentV4Request i\n                 .filter(e -> e.getName().equals(instanceGroup))\n                 .findFirst();\n         if (hostGroup.isPresent()) {\n+            User creator = stack.getCreator();\n+            String userCrn = creator.getUserCrn();", "originalCommit": "851dfef5b35f01abd5afc8e3fd17c0f58132d02a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5ODAzMQ==", "url": "https://github.com/hortonworks/cloudbreak/pull/9084#discussion_r494798031", "bodyText": "nope", "author": "doktoric", "createdAt": "2020-09-25T07:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDIwMA=="}], "type": "inlineReview"}]}