{"pr_number": 9068, "pr_title": "Cb 8777 refactor structured filter", "pr_createdAt": "2020-09-23T11:25:42Z", "pr_url": "https://github.com/hortonworks/cloudbreak/pull/9068", "timeline": [{"oid": "51c8c503d46aebf52b82f80facb522bf5bc032c9", "url": "https://github.com/hortonworks/cloudbreak/commit/51c8c503d46aebf52b82f80facb522bf5bc032c9", "message": "CB-8777 Refactor CDPStructuredEventFilter.class as it is too complex", "committedDate": "2020-09-23T11:26:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ3ODU5Nw==", "url": "https://github.com/hortonworks/cloudbreak/pull/9068#discussion_r493478597", "bodyText": "The method name is misstyped.", "author": "biharitomi", "createdAt": "2020-09-23T11:31:07Z", "path": "structuredevent-service-cdp/src/main/java/com/sequenceiq/cloudbreak/structuredevent/rest/CDPRestCommonService.java", "diffHunk": "@@ -36,30 +37,44 @@\n     @Inject\n     private Map<String, CustomCrnOrNameProvider> customCrnOrNameProviders;\n \n-    public Map<String, String> collectCrnAndNameIfPresent(RestCallDetails restCallDetails, CDPOperationDetails operationDetails,\n-            Map<String, String> restParams, String nameField, String crnField) {\n+    public Map<String, String> collectCrnAndNameIfPresent(RestCallDetails restCallDetails, CDPOperationDetails operationDetails, Map<String, String> restParams,\n+            String nameField, String crnField) {\n         Map<String, String> params = new HashMap<>();\n+\n         RestRequestDetails restRequest = restCallDetails.getRestRequest();\n+\n         Json requestJson = getJson(restRequest.getBody());\n         Json responseJson = getJson(restCallDetails.getRestResponse().getBody());\n+\n         Map<String, String> copyRestParams = new HashMap<>(restParams);\n-        CustomCrnOrNameProvider customCrnOrNameProvider = customCrnOrNameProviders.get(restParams.get(RESOURCE_TYPE) + \"CustomCrnOrNameProvider\");\n-        if (customCrnOrNameProvider != null) {\n-            copyRestParams.putAll(customCrnOrNameProvider.provide(restCallDetails, operationDetails, restParams, nameField, crnField));\n-        }\n+        copyRestParams.putAll(collectFromCrnOPrNameProvider(restCallDetails, operationDetails, restParams, nameField, crnField));\n+\n         String resourceCrn = getCrn(requestJson, responseJson, operationDetails, copyRestParams, crnField);\n         String name = getName(requestJson, responseJson, operationDetails, copyRestParams, nameField);\n \n         checkNameOrCrnProvided(restRequest, resourceCrn, name);\n \n+        addNameAndCrnIfNotEmpty(nameField, crnField, params, resourceCrn, name);\n+        return params;\n+    }\n+\n+    private void addNameAndCrnIfNotEmpty(String nameField, String crnField, Map<String, String> params, String resourceCrn, String name) {\n         if (StringUtils.isNotEmpty(name)) {\n             params.put(nameField, name);\n         }\n \n         if (StringUtils.isNotEmpty(resourceCrn)) {\n             params.put(crnField, resourceCrn);\n         }\n-        return params;\n+    }\n+\n+    private Map<String, String> collectFromCrnOPrNameProvider(RestCallDetails restCallDetails, CDPOperationDetails operationDetails,", "originalCommit": "51c8c503d46aebf52b82f80facb522bf5bc032c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "286fcaf011d90db5807976a9a882c643e5e13ebe", "url": "https://github.com/hortonworks/cloudbreak/commit/286fcaf011d90db5807976a9a882c643e5e13ebe", "message": "CB-8777 Refactor CDPStructuredEventFilter.class as it is too complex", "committedDate": "2020-09-23T12:01:44Z", "type": "forcePushed"}, {"oid": "b549a1689346acb1c7b0d6135de84e1405aa6f83", "url": "https://github.com/hortonworks/cloudbreak/commit/b549a1689346acb1c7b0d6135de84e1405aa6f83", "message": "CB-8777 Refactor CDPStructuredEventFilter.class as it is too complex", "committedDate": "2020-09-23T12:03:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUxMTE2Mg==", "url": "https://github.com/hortonworks/cloudbreak/pull/9068#discussion_r493511162", "bodyText": "I would name it that contains that it is using repositories to fetch entities/resources back like RepositoryBasedEntity/ResourceCollector", "author": "biharitomi", "createdAt": "2020-09-23T12:07:55Z", "path": "structuredevent-service-cdp/src/main/java/com/sequenceiq/cloudbreak/structuredevent/rest/filter/DataCollectorComponent.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.sequenceiq.cloudbreak.structuredevent.rest.filter;\n+\n+import static com.sequenceiq.cloudbreak.structuredevent.rest.urlparser.CDPRestUrlParser.RESOURCE_CRN;\n+import static com.sequenceiq.cloudbreak.structuredevent.rest.urlparser.CDPRestUrlParser.RESOURCE_ID;\n+import static com.sequenceiq.cloudbreak.structuredevent.rest.urlparser.CDPRestUrlParser.RESOURCE_NAME;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import javax.annotation.PostConstruct;\n+import javax.inject.Inject;\n+import javax.ws.rs.Path;\n+\n+import org.springframework.beans.factory.ListableBeanFactory;\n+import org.springframework.core.annotation.AnnotationUtils;\n+import org.springframework.stereotype.Component;\n+\n+import com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider;\n+import com.sequenceiq.cloudbreak.structuredevent.repository.AccountAwareResource;\n+import com.sequenceiq.cloudbreak.structuredevent.repository.AccountAwareResourceRepository;\n+import com.sequenceiq.cloudbreak.structuredevent.rest.annotation.AccountEntityType;\n+import com.sequenceiq.cloudbreak.structuredevent.service.lookup.CDPAccountAwareRepositoryLookupService;\n+\n+@Component\n+public class DataCollectorComponent {", "originalCommit": "b549a1689346acb1c7b0d6135de84e1405aa6f83", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUxNDUzMA==", "url": "https://github.com/hortonworks/cloudbreak/pull/9068#discussion_r493514530", "bodyText": "This name is too open, as the class only able to create Objects that are necessary for Rest event filter. RestEventFilterRelatedObjectFactory", "author": "biharitomi", "createdAt": "2020-09-23T12:11:42Z", "path": "structuredevent-service-cdp/src/main/java/com/sequenceiq/cloudbreak/structuredevent/rest/filter/ObjectFactory.java", "diffHunk": "@@ -0,0 +1,108 @@\n+package com.sequenceiq.cloudbreak.structuredevent.rest.filter;\n+\n+import static com.sequenceiq.cloudbreak.structuredevent.event.StructuredEventType.REST;\n+import static com.sequenceiq.cloudbreak.structuredevent.rest.urlparser.CDPRestUrlParser.RESOURCE_CRN;\n+import static com.sequenceiq.cloudbreak.structuredevent.rest.urlparser.CDPRestUrlParser.RESOURCE_EVENT;\n+import static com.sequenceiq.cloudbreak.structuredevent.rest.urlparser.CDPRestUrlParser.RESOURCE_ID;\n+import static com.sequenceiq.cloudbreak.structuredevent.rest.urlparser.CDPRestUrlParser.RESOURCE_NAME;\n+import static com.sequenceiq.cloudbreak.structuredevent.rest.urlparser.CDPRestUrlParser.RESOURCE_TYPE;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Component;\n+\n+import com.google.common.collect.Lists;\n+import com.sequenceiq.cloudbreak.auth.ThreadBasedUserCrnProvider;\n+import com.sequenceiq.cloudbreak.structuredevent.event.cdp.CDPOperationDetails;\n+import com.sequenceiq.cloudbreak.structuredevent.event.rest.RestRequestDetails;\n+import com.sequenceiq.cloudbreak.structuredevent.event.rest.RestResponseDetails;\n+import com.sequenceiq.flow.ha.NodeConfig;\n+\n+@Component\n+class ObjectFactory {", "originalCommit": "b549a1689346acb1c7b0d6135de84e1405aa6f83", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ed5a084a9ff09c01ea384020d5c968ea64fd7ed", "url": "https://github.com/hortonworks/cloudbreak/commit/3ed5a084a9ff09c01ea384020d5c968ea64fd7ed", "message": "CB-8777 Refactor CDPStructuredEventFilter.class as it is too complex", "committedDate": "2020-09-23T12:29:50Z", "type": "forcePushed"}, {"oid": "0730126b00fe1b0c65c139b7bc50d6b2b1513698", "url": "https://github.com/hortonworks/cloudbreak/commit/0730126b00fe1b0c65c139b7bc50d6b2b1513698", "message": "CB-8777 Refactor CDPStructuredEventFilter.class as it is too complex", "committedDate": "2020-09-23T14:25:46Z", "type": "commit"}, {"oid": "0730126b00fe1b0c65c139b7bc50d6b2b1513698", "url": "https://github.com/hortonworks/cloudbreak/commit/0730126b00fe1b0c65c139b7bc50d6b2b1513698", "message": "CB-8777 Refactor CDPStructuredEventFilter.class as it is too complex", "committedDate": "2020-09-23T14:25:46Z", "type": "forcePushed"}]}