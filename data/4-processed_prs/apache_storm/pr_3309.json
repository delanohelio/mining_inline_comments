{"pr_number": 3309, "pr_title": "[STORM-3675] Check worker process death using /proc/<pid> directory", "pr_createdAt": "2020-07-16T06:17:17Z", "pr_url": "https://github.com/apache/storm/pull/3309", "timeline": [{"oid": "ee05c962db43562bbe3575b2a6d6ec6af5c358bb", "url": "https://github.com/apache/storm/commit/ee05c962db43562bbe3575b2a6d6ec6af5c358bb", "message": "[STORM-3675] Check worker process death using /proc/<pid> directory on Linux. Add new test.", "committedDate": "2020-07-16T06:09:45Z", "type": "commit"}, {"oid": "711b739e051f6aa49b8ce52c1cfc3f4e044cb165", "url": "https://github.com/apache/storm/commit/711b739e051f6aa49b8ce52c1cfc3f4e044cb165", "message": "[STORM-3675] Change log messages and fix comment.", "committedDate": "2020-07-16T16:33:05Z", "type": "commit"}, {"oid": "188913d7d8689e662d5ff56c65313b6900ba58cf", "url": "https://github.com/apache/storm/commit/188913d7d8689e662d5ff56c65313b6900ba58cf", "message": "[STORM-3675] Enahnce failure message for visibility in Travis.", "committedDate": "2020-08-27T17:59:24Z", "type": "commit"}, {"oid": "dec64ced1f051b4395f69d92e18ad79054b942de", "url": "https://github.com/apache/storm/commit/dec64ced1f051b4395f69d92e18ad79054b942de", "message": "[STORM-3675] Add errors to track why PID cannot be determined under JDK11", "committedDate": "2020-08-27T19:53:08Z", "type": "commit"}, {"oid": "4c547971559e1ef33750bfe085ead73f41f25520", "url": "https://github.com/apache/storm/commit/4c547971559e1ef33750bfe085ead73f41f25520", "message": "[STORM-3675] Add code to detect processid if test process on JDK-11 used in Travis.", "committedDate": "2020-08-28T01:50:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NzM5OQ==", "url": "https://github.com/apache/storm/pull/3309#discussion_r480197399", "bodyText": "I would remove \"{\". It doesn't seem necessary", "author": "Ethanlm", "createdAt": "2020-08-31T15:13:19Z", "path": "storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java", "diffHunk": "@@ -162,6 +174,163 @@ public void testGetUserId() throws Exception {\n         int uid1 = ServerUtils.getUserId(null);\n         Path p = Files.createTempFile(\"testGetUser\", \".txt\");\n         int uid2 = ServerUtils.getPathOwnerUid(p.toString());\n+        if (!p.toFile().delete()) {\n+            LOG.warn(\"Could not delete tempoary file {}\", p);\n+        }\n         assertEquals(\"User UID \" + uid1 + \" is not same as file \" + p.toString() + \" owner UID of \" + uid2, uid1, uid2);\n     }\n+\n+    @Test\n+    public void testIsAnyProcessPosixProcessPidDirAlive() throws IOException {\n+        final String testName = \"testIsAnyProcessPosixProcessPidDirAlive\";\n+        List<String> errors = new ArrayList<>();\n+        int maxPidCnt = 5;\n+        if (ServerUtils.IS_ON_WINDOWS) {\n+            LOG.info(\"{}: test cannot be run on Windows. Marked as successful\", testName);\n+            return;\n+        }\n+        final Path parentDir = Paths.get(\"/proc\");\n+        if (!parentDir.toFile().exists()) {\n+            LOG.info(\"{}: test cannot be run on system without process directory {}, os.name={}\",\n+                    testName, parentDir, System.getProperty(\"os.name\"));\n+            {", "originalCommit": "4c547971559e1ef33750bfe085ead73f41f25520", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwOTgyNw==", "url": "https://github.com/apache/storm/pull/3309#discussion_r480209827", "bodyText": "fixed", "author": "bipinprasad", "createdAt": "2020-08-31T15:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NzM5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5Nzk2OA==", "url": "https://github.com/apache/storm/pull/3309#discussion_r480197968", "bodyText": "Can you please explain why is it \"useful on Mac\"?", "author": "Ethanlm", "createdAt": "2020-08-31T15:14:15Z", "path": "storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java", "diffHunk": "@@ -162,6 +174,163 @@ public void testGetUserId() throws Exception {\n         int uid1 = ServerUtils.getUserId(null);\n         Path p = Files.createTempFile(\"testGetUser\", \".txt\");\n         int uid2 = ServerUtils.getPathOwnerUid(p.toString());\n+        if (!p.toFile().delete()) {\n+            LOG.warn(\"Could not delete tempoary file {}\", p);\n+        }\n         assertEquals(\"User UID \" + uid1 + \" is not same as file \" + p.toString() + \" owner UID of \" + uid2, uid1, uid2);\n     }\n+\n+    @Test\n+    public void testIsAnyProcessPosixProcessPidDirAlive() throws IOException {\n+        final String testName = \"testIsAnyProcessPosixProcessPidDirAlive\";\n+        List<String> errors = new ArrayList<>();\n+        int maxPidCnt = 5;\n+        if (ServerUtils.IS_ON_WINDOWS) {\n+            LOG.info(\"{}: test cannot be run on Windows. Marked as successful\", testName);\n+            return;\n+        }\n+        final Path parentDir = Paths.get(\"/proc\");\n+        if (!parentDir.toFile().exists()) {\n+            LOG.info(\"{}: test cannot be run on system without process directory {}, os.name={}\",\n+                    testName, parentDir, System.getProperty(\"os.name\"));\n+            {\n+                // check if we can get process id on this Posix system - testing test code, useful on Mac", "originalCommit": "4c547971559e1ef33750bfe085ead73f41f25520", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwNjE3Nw==", "url": "https://github.com/apache/storm/pull/3309#discussion_r480206177", "bodyText": "Rest of test will not get exercised on Mac (no /proc dir), but at least the getPidOfPosixProcess() will be validated locally.", "author": "bipinprasad", "createdAt": "2020-08-31T15:27:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5Nzk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMDA1NA==", "url": "https://github.com/apache/storm/pull/3309#discussion_r480200054", "bodyText": "nit: space before \";\" can be removed", "author": "Ethanlm", "createdAt": "2020-08-31T15:17:20Z", "path": "storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java", "diffHunk": "@@ -162,6 +174,163 @@ public void testGetUserId() throws Exception {\n         int uid1 = ServerUtils.getUserId(null);\n         Path p = Files.createTempFile(\"testGetUser\", \".txt\");\n         int uid2 = ServerUtils.getPathOwnerUid(p.toString());\n+        if (!p.toFile().delete()) {\n+            LOG.warn(\"Could not delete tempoary file {}\", p);\n+        }\n         assertEquals(\"User UID \" + uid1 + \" is not same as file \" + p.toString() + \" owner UID of \" + uid2, uid1, uid2);\n     }\n+\n+    @Test\n+    public void testIsAnyProcessPosixProcessPidDirAlive() throws IOException {\n+        final String testName = \"testIsAnyProcessPosixProcessPidDirAlive\";\n+        List<String> errors = new ArrayList<>();\n+        int maxPidCnt = 5;\n+        if (ServerUtils.IS_ON_WINDOWS) {\n+            LOG.info(\"{}: test cannot be run on Windows. Marked as successful\", testName);\n+            return;\n+        }\n+        final Path parentDir = Paths.get(\"/proc\");\n+        if (!parentDir.toFile().exists()) {\n+            LOG.info(\"{}: test cannot be run on system without process directory {}, os.name={}\",\n+                    testName, parentDir, System.getProperty(\"os.name\"));\n+            {\n+                // check if we can get process id on this Posix system - testing test code, useful on Mac\n+                String cmd = \"/bin/sleep 10\";\n+                if (getPidOfPosixProcess(Runtime.getRuntime().exec(cmd), errors) < 0) {\n+                    fail(String.format(\"%s: Cannot obtain process id for executed command \\\"%s\\\"\\n%s\",\n+                            testName, cmd, String.join(\"\\n\\t\", errors)));\n+                }\n+            }\n+            return;\n+        }\n+        // Create processes and wait for their termination\n+        Set<Long> observables = new HashSet<>();\n+\n+        for (int i = 0 ; i < maxPidCnt ; i++) {\n+            String cmd = \"sleep 2000\";\n+            Process process = Runtime.getRuntime().exec(cmd);\n+            long pid = getPidOfPosixProcess(process, errors);\n+            LOG.info(\"{}: ({}) ran process \\\"{}\\\" with pid={}\", testName, i, cmd, pid);\n+            if (pid < 0) {\n+                String e = String.format(\"%s: (%d) Cannot obtain process id for executed command \\\"%s\\\"\", testName, i, cmd);\n+                errors.add(e);\n+                LOG.error(e);\n+                continue;\n+            }\n+            observables.add(pid);\n+        }\n+        String userName = System.getProperty(\"user.name\");\n+        // now kill processes one by one\n+        List<Long> pidList = new ArrayList<>(observables);\n+        final long processKillIntervalMs = 2000;\n+        for (int i = 0 ; i < pidList.size() ; i++) {", "originalCommit": "4c547971559e1ef33750bfe085ead73f41f25520", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwOTMwNQ==", "url": "https://github.com/apache/storm/pull/3309#discussion_r480209305", "bodyText": "fixed", "author": "bipinprasad", "createdAt": "2020-08-31T15:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMDA1NA=="}], "type": "inlineReview"}, {"oid": "9201fc8fee49b1da279d59a1127bb67758892f45", "url": "https://github.com/apache/storm/commit/9201fc8fee49b1da279d59a1127bb67758892f45", "message": "[STORM-3675] Code style fixes.", "committedDate": "2020-08-31T15:52:54Z", "type": "commit"}, {"oid": "9201fc8fee49b1da279d59a1127bb67758892f45", "url": "https://github.com/apache/storm/commit/9201fc8fee49b1da279d59a1127bb67758892f45", "message": "[STORM-3675] Code style fixes.", "committedDate": "2020-08-31T15:52:54Z", "type": "forcePushed"}]}