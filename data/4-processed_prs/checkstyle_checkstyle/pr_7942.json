{"pr_number": 7942, "pr_title": "Issue #7565: update doc for AbstractClassName", "pr_createdAt": "2020-03-22T16:54:35Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7942", "timeline": [{"oid": "fbcbe488e8ccdac4d77f4adbaad16827f594a391", "url": "https://github.com/checkstyle/checkstyle/commit/fbcbe488e8ccdac4d77f4adbaad16827f594a391", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-03-24T17:08:43Z", "type": "forcePushed"}, {"oid": "7dc2822de7fa12514afa5df08866c5284c0a8e4e", "url": "https://github.com/checkstyle/checkstyle/commit/7dc2822de7fa12514afa5df08866c5284c0a8e4e", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-03-26T18:24:34Z", "type": "forcePushed"}, {"oid": "076855979c228b489c8aaffbfc5044a371474271", "url": "https://github.com/checkstyle/checkstyle/commit/076855979c228b489c8aaffbfc5044a371474271", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-03-27T13:47:22Z", "type": "forcePushed"}, {"oid": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "url": "https://github.com/checkstyle/checkstyle/commit/69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-03-29T19:23:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1MDMxMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400450313", "bodyText": "Add : and the end", "author": "rdiachenko", "createdAt": "2020-03-30T19:46:23Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -53,6 +53,21 @@\n  * </ul>\n  * <p>\n  * The following example shows how to configure the {@code AbstractClassName} to\n+ * default values", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMDIxMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401430213", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:08:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1MDMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1MDY2OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400450668", "bodyText": "Please remove, the above line already describes what is it", "author": "rdiachenko", "createdAt": "2020-03-30T19:47:00Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -53,6 +53,21 @@\n  * </ul>\n  * <p>\n  * The following example shows how to configure the {@code AbstractClassName} to\n+ * default values\n+ * </p>\n+ * <p>Configuration:</p>", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMjU5OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401432598", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:13:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1MDY2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1MzEwNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400453105", "bodyText": "Please change to How to configure the {@code AbstractClassName} to use default values:", "author": "rdiachenko", "createdAt": "2020-03-30T19:51:27Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -53,6 +53,21 @@\n  * </ul>\n  * <p>\n  * The following example shows how to configure the {@code AbstractClassName} to", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMDEwMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401430103", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:08:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1MzEwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1Mzg4Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400453886", "bodyText": "Please change to How to configure the {@code AbstractClassName} to check names but ignore missing {@code abstract} modifier:", "author": "rdiachenko", "createdAt": "2020-03-30T19:52:53Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -53,6 +53,21 @@\n  * </ul>\n  * <p>\n  * The following example shows how to configure the {@code AbstractClassName} to\n+ * default values\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"/&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n+ * class AbstractThirdClass {} // violation, abstract access modifier should be present\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to\n  * checks names, but ignore missing {@code abstract} modifiers:", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNzY3Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401437672", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:21:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1Mzg4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NDM0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400454345", "bodyText": "Redundant, please remove.", "author": "rdiachenko", "createdAt": "2020-03-30T19:53:41Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -53,6 +53,21 @@\n  * </ul>\n  * <p>\n  * The following example shows how to configure the {@code AbstractClassName} to\n+ * default values\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"/&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n+ * class AbstractThirdClass {} // violation, abstract access modifier should be present\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to\n  * checks names, but ignore missing {@code abstract} modifiers:\n  * </p>\n  * <p>Configuration:</p>", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNzczNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401437737", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:22:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NDM0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NTg2MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400455860", "bodyText": "Please update to the format mentioned above.", "author": "rdiachenko", "createdAt": "2020-03-30T19:56:35Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +79,43 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0ODUzMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401448533", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:40:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NTg2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NjI1Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400456256", "bodyText": "{@code Name} is not a modifier, please fix", "author": "rdiachenko", "createdAt": "2020-03-30T19:57:18Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +79,43 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to\n+ * checks names, but ignore {@code Name} modifiers:", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NDIwMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r403344202", "bodyText": "Still not done. Please read about what is called as modifier in Java.", "author": "rdiachenko", "createdAt": "2020-04-03T21:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NjI1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzOTYzOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r405539639", "bodyText": "ok", "author": "pkpale", "createdAt": "2020-04-08T13:49:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NjI1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzOTc1Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r405539757", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-08T13:49:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NjI1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NjM5Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400456396", "bodyText": "Please remove", "author": "rdiachenko", "createdAt": "2020-03-30T19:57:35Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +79,43 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to\n+ * checks names, but ignore {@code Name} modifiers:\n+ * </p>\n+ * <p>Configuration:</p>", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0ODYwNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401448606", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:40:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NjM5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NzE4NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400457185", "bodyText": "please put a reason for the violation like you did above", "author": "rdiachenko", "createdAt": "2020-03-30T19:59:01Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +79,43 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to\n+ * checks names, but ignore {@code Name} modifiers:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"ignoreName\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // OK\n+ * class AbstractThirdClass {} // violation", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0OTA2OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401449068", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:41:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NzE4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NzkyMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400457923", "bodyText": "please put a reason why it is ok like above in line 83", "author": "rdiachenko", "createdAt": "2020-03-30T20:00:21Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +79,43 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to\n+ * checks names, but ignore {@code Name} modifiers:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"ignoreName\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // OK", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0OTAxOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401449019", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:41:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1NzkyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1ODQ3Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400458473", "bodyText": "format is not a modifier, please fix. Also update the whole description according to the format mentioned above.", "author": "rdiachenko", "createdAt": "2020-03-30T20:01:26Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +79,43 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to\n+ * checks names, but ignore {@code Name} modifiers:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"ignoreName\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // OK\n+ * class AbstractThirdClass {} // violation\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName}\n+ * with {@code format} modifier:", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0OTEyNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401449127", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1ODQ3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1ODY0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400458645", "bodyText": "remove", "author": "rdiachenko", "createdAt": "2020-03-30T20:01:45Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +79,43 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to\n+ * checks names, but ignore {@code Name} modifiers:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"ignoreName\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // OK\n+ * class AbstractThirdClass {} // violation\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName}\n+ * with {@code format} modifier:\n+ * </p>\n+ * <p>Configuration:</p>", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0OTE4OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401449188", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:41:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1ODY0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1OTA3Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400459076", "bodyText": "please put reasons like above", "author": "rdiachenko", "createdAt": "2020-03-30T20:02:36Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +79,43 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName} to\n+ * checks names, but ignore {@code Name} modifiers:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"ignoreName\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // OK\n+ * class AbstractThirdClass {} // violation\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * The following example shows how to configure the {@code AbstractClassName}\n+ * with {@code format} modifier:\n+ * </p>\n+ * <p>Configuration:</p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"format\" value=\"^Generator.+$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class GeneratorFirstClass {} // OK\n+ * abstract class SecondClass {} // violation\n+ * class GeneratorThirdClass {} // violation", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0OTI0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401449245", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T08:41:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1OTA3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1OTc0Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400459743", "bodyText": "Don't use <div> here", "author": "rdiachenko", "createdAt": "2020-03-30T20:03:44Z", "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -317,6 +317,23 @@ public class MyClass { // OK, ignore checking the class name\n       </subsection>\n \n       <subsection name=\"Examples\" id=\"AbstractClassName_Examples\">\n+        <p>\n+          The following example shows how to configure the\n+          <code>AbstractClassName</code> to default values\n+        </p>\n+        <p>Configuration:</p>\n+        <source>\n+&lt;module name=&quot;AbstractClassName&quot;/&gt;\n+        </source>\n+        <p>Example:</p>\n+        <div class=\"wrapper\">", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUwMjM2OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401502369", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T10:08:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1OTc0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2MDE4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r400460180", "bodyText": "Use <source> instead of <pre>", "author": "rdiachenko", "createdAt": "2020-03-30T20:04:27Z", "path": "src/xdocs/config_naming.xml", "diffHunk": "@@ -317,6 +317,23 @@ public class MyClass { // OK, ignore checking the class name\n       </subsection>\n \n       <subsection name=\"Examples\" id=\"AbstractClassName_Examples\">\n+        <p>\n+          The following example shows how to configure the\n+          <code>AbstractClassName</code> to default values\n+        </p>\n+        <p>Configuration:</p>\n+        <source>\n+&lt;module name=&quot;AbstractClassName&quot;/&gt;\n+        </source>\n+        <p>Example:</p>\n+        <div class=\"wrapper\">\n+          <pre>", "originalCommit": "69b89949fadc5ac35b0535b4ecbe43f5e564bf69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUwMjQxNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r401502415", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-01T10:08:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2MDE4MA=="}], "type": "inlineReview"}, {"oid": "465064c14584578975d1cbd999abe3afc43115c9", "url": "https://github.com/checkstyle/checkstyle/commit/465064c14584578975d1cbd999abe3afc43115c9", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-04-01T10:19:49Z", "type": "forcePushed"}, {"oid": "d8424a9f65324ba83d5eb4a52dc4abb0ccc9d9f0", "url": "https://github.com/checkstyle/checkstyle/commit/d8424a9f65324ba83d5eb4a52dc4abb0ccc9d9f0", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-04-03T06:27:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NTEyOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r403345129", "bodyText": "Please update to // OK, name validation is ignored", "author": "rdiachenko", "createdAt": "2020-04-03T21:28:33Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +77,41 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * How to configure the {@code AbstractClassName} to\n+ * check names but ignore Name modifier:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"ignoreName\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // OK, ignored naming convention", "originalCommit": "d8424a9f65324ba83d5eb4a52dc4abb0ccc9d9f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0MTYxMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r405541613", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-08T13:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NTEyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NTY0OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r403345648", "bodyText": "Please update to // OK, no \"abstract\" modifier", "author": "rdiachenko", "createdAt": "2020-04-03T21:29:47Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +77,41 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * How to configure the {@code AbstractClassName} to\n+ * check names but ignore Name modifier:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"ignoreName\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // OK, ignored naming convention\n+ * class AbstractThirdClass {} // violation, must be declared as 'abstract'\n+ * class FourthClass {} // OK, not declared abstract", "originalCommit": "d8424a9f65324ba83d5eb4a52dc4abb0ccc9d9f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0Mzg0Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r405543847", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-08T13:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NTY0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0Njg5OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r403346898", "bodyText": "Please remove , all validation passed, it is redundant in this case", "author": "rdiachenko", "createdAt": "2020-04-03T21:32:51Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +77,41 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * How to configure the {@code AbstractClassName} to\n+ * check names but ignore Name modifier:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"ignoreName\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // OK, ignored naming convention\n+ * class AbstractThirdClass {} // violation, must be declared as 'abstract'\n+ * class FourthClass {} // OK, not declared abstract\n+ * </pre>\n+ * <p>\n+ * How to configure the {@code AbstractClassName}\n+ * with {@code format}:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"format\" value=\"^Generator.+$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class GeneratorFirstClass {} // OK, all validation passed", "originalCommit": "d8424a9f65324ba83d5eb4a52dc4abb0ccc9d9f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0Mzc3OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r405543779", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-08T13:55:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0Njg5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NzY5NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r403347695", "bodyText": "Update to // violation, must be declared 'abstract'", "author": "rdiachenko", "createdAt": "2020-04-03T21:34:42Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -52,10 +52,23 @@\n  * {@code false}.</li>\n  * </ul>\n  * <p>\n- * The following example shows how to configure the {@code AbstractClassName} to\n- * checks names, but ignore missing {@code abstract} modifiers:\n+ * How to configure the {@code AbstractClassName} to use\n+ * default values:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"/&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n+ * class AbstractThirdClass {} // violation, abstract access modifier should be present", "originalCommit": "d8424a9f65324ba83d5eb4a52dc4abb0ccc9d9f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MDkzOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r405570939", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-08T14:32:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NzY5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0Nzk2NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r403347965", "bodyText": "Update to // OK, no \"abstract\" modifier", "author": "rdiachenko", "createdAt": "2020-04-03T21:35:30Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +77,41 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * How to configure the {@code AbstractClassName} to\n+ * check names but ignore Name modifier:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"ignoreName\" value=\"true\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // OK, ignored naming convention\n+ * class AbstractThirdClass {} // violation, must be declared as 'abstract'\n+ * class FourthClass {} // OK, not declared abstract\n+ * </pre>\n+ * <p>\n+ * How to configure the {@code AbstractClassName}\n+ * with {@code format}:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"&gt;\n+ *   &lt;property name=\"format\" value=\"^Generator.+$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class GeneratorFirstClass {} // OK, all validation passed\n+ * abstract class SecondClass {} // violation, must match pattern '^Generator.+$'\n+ * class GeneratorThirdClass {} // violation, must be declared 'abstract'\n+ * class FourthClass {} // OK, not declared abstract", "originalCommit": "d8424a9f65324ba83d5eb4a52dc4abb0ccc9d9f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MDg2NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r405570865", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-08T14:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0Nzk2NQ=="}], "type": "inlineReview"}, {"oid": "b19e952681bd34cd9a4d80935f210a3086bfe092", "url": "https://github.com/checkstyle/checkstyle/commit/b19e952681bd34cd9a4d80935f210a3086bfe092", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-04-08T07:32:24Z", "type": "forcePushed"}, {"oid": "6c54ef054e9c1810f8d5fe72cc029b898f7b4f85", "url": "https://github.com/checkstyle/checkstyle/commit/6c54ef054e9c1810f8d5fe72cc029b898f7b4f85", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-04-08T14:19:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4MTA4NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r405781085", "bodyText": "Please update to How to configure the {@code AbstractClassName} to ignore name validation when class declared as 'abstract'", "author": "rdiachenko", "createdAt": "2020-04-08T20:04:21Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +77,41 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * How to configure the {@code AbstractClassName} to\n+ * check names with {@code ignoreName}:", "originalCommit": "6c54ef054e9c1810f8d5fe72cc029b898f7b4f85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMTg3OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r405831879", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-08T21:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4MTA4NQ=="}], "type": "inlineReview"}, {"oid": "bc9b04ca53764d1d5a14a95ff2783d31f0036077", "url": "https://github.com/checkstyle/checkstyle/commit/bc9b04ca53764d1d5a14a95ff2783d31f0036077", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-04-08T20:54:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5ODY2MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r408098660", "bodyText": "The common wording for default config is\nTo configure the check:\nPlease take a look over existent docs", "author": "pbludov", "createdAt": "2020-04-14T12:33:00Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -52,10 +52,23 @@\n  * {@code false}.</li>\n  * </ul>\n  * <p>\n- * The following example shows how to configure the {@code AbstractClassName} to\n- * checks names, but ignore missing {@code abstract} modifiers:\n+ * How to configure the {@code AbstractClassName} to use", "originalCommit": "bc9b04ca53764d1d5a14a95ff2783d31f0036077", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NDEyNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r408884125", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-15T14:26:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5ODY2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5OTYyNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r408099624", "bodyText": "Same here: To configure the check to...", "author": "pbludov", "createdAt": "2020-04-14T12:34:30Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -52,10 +52,23 @@\n  * {@code false}.</li>\n  * </ul>\n  * <p>\n- * The following example shows how to configure the {@code AbstractClassName} to\n- * checks names, but ignore missing {@code abstract} modifiers:\n+ * How to configure the {@code AbstractClassName} to use\n+ * default values:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"AbstractClassName\"/&gt;\n+ * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * abstract class AbstractFirstClass {} // OK\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n+ * class AbstractThirdClass {} // violation, must be declared 'abstract'\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * How to configure the {@code AbstractClassName} to", "originalCommit": "bc9b04ca53764d1d5a14a95ff2783d31f0036077", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NDA3Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r408884072", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-15T14:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5OTYyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5OTk2Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r408099963", "bodyText": "Same here", "author": "pbludov", "createdAt": "2020-04-14T12:35:05Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "diffHunk": "@@ -64,8 +77,41 @@\n  * <p>Example:</p>\n  * <pre>\n  * abstract class AbstractFirstClass {} // OK\n- * abstract class SecondClass {} // violation, it should match the pattern \"^Abstract.+$\"\n+ * abstract class SecondClass {} // violation, it should match pattern \"^Abstract.+$\"\n  * class AbstractThirdClass {} // OK, no \"abstract\" modifier\n+ * class FourthClass {} // OK\n+ * </pre>\n+ * <p>\n+ * How to configure the {@code AbstractClassName} to", "originalCommit": "bc9b04ca53764d1d5a14a95ff2783d31f0036077", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NDAzOA==", "url": "https://github.com/checkstyle/checkstyle/pull/7942#discussion_r408884038", "bodyText": "done", "author": "pkpale", "createdAt": "2020-04-15T14:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5OTk2Mw=="}], "type": "inlineReview"}, {"oid": "72cfba2a90f0396c89ff1d1ff2d5b14ddefacc7d", "url": "https://github.com/checkstyle/checkstyle/commit/72cfba2a90f0396c89ff1d1ff2d5b14ddefacc7d", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-04-15T14:24:19Z", "type": "commit"}, {"oid": "72cfba2a90f0396c89ff1d1ff2d5b14ddefacc7d", "url": "https://github.com/checkstyle/checkstyle/commit/72cfba2a90f0396c89ff1d1ff2d5b14ddefacc7d", "message": "Issue #7565: Update doc for AbstractClassName", "committedDate": "2020-04-15T14:24:19Z", "type": "forcePushed"}]}