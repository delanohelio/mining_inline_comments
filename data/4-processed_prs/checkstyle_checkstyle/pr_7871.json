{"pr_number": 7871, "pr_title": "Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder", "pr_createdAt": "2020-03-16T20:34:48Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7871", "timeline": [{"oid": "c1ad0b5cb65e91109eaae0f44401b1bce797b57c", "url": "https://github.com/checkstyle/checkstyle/commit/c1ad0b5cb65e91109eaae0f44401b1bce797b57c", "message": "Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder", "committedDate": "2020-03-17T06:36:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5NzU0Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r393797547", "bodyText": "checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/api/FullIdent.java\n    \n    \n         Line 44\n      in\n      ae9edbd\n    \n    \n    \n    \n\n        \n          \n           private DetailAST detailAst; \n        \n    \n  \n\n\nFullIdent holds the AST too.\nIs there any difference between the new AST passed in and the one in FullIdent? If so, what is the difference? If not, doesn't it make sense to use that instead?", "author": "rnveach", "createdAt": "2020-03-17T16:12:20Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "diffHunk": "@@ -655,25 +654,27 @@ else if (option == ImportOrderOption.INFLOW) {\n      * @param isStatic whether the token is static or not.\n      * @param previous previous non-static but current is static (above), or\n      *                  previous static but current is non-static (under).\n-     * @param line the line of the current import.\n+     * @param ast the line of the current import.\n      */\n-    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n+    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, DetailAST ast) {", "originalCommit": "c1ad0b5cb65e91109eaae0f44401b1bce797b57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgxNTgzMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r393815832", "bodyText": "@rnveach can you please elaborate me more on this change,", "author": "DXTkastb", "createdAt": "2020-03-17T16:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5NzU0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgyMjk1Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r393822952", "bodyText": "You changed the code to pass in the AST, but the AST is available from the FullIdent.\nI am asking, are the 2 ASTs the same instance? If they are not, explain what each one points to.", "author": "rnveach", "createdAt": "2020-03-17T16:48:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5NzU0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMzI4OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394003288", "bodyText": "@rnveach I did a dry run for the code and found that the ast instance(present in ImportOrdercheck.java) traverses the nodes, whereas private DetailAST detailAst(present in the FullIdent.java) points specifically to the import package's first node name.\nexample:\nimport java.util.List;\nast:import>java>util>List(traversal)\ndetailAst:java\nCode(in FullIdent.java):\n    private void append(DetailAST ast) {\n        elements.add(ast.getText());\n        if (detailAst == null) {\n            detailAst = ast;\n        }\n    }\n\nthis piece of code initializes detailAst to 'java'(or whatever the first name be, say org/com...).\nIn terms of reference yes these two do point to the same instance but usability differs(pointing to a node). And I gave a try to your point as well, passing FullIdent.getDetailAst() rather than ast to the log can provide more precision as it throws error for import's line no. as well as the column no.(which was always '1'  due to imports alignment). It throws an error for incorrect expected column number like:\npackage org.checkstyle.suppressionxpathfilter.importorder;\n\nimport java.io.*;\nimport java.util.Set;\nimport static java.lang.Math.PI; // warn\n\npublic class SuppressionXpathRegressionImportOrderFour {\n\t// code\n}\n\nExpected :/home/kaustubh/main repo/checkstyle/src/it/resources/org/checkstyle/suppressionxpathfilter/importorder/SuppressionXpathRegressionImportOrderFour.java:5:1: Wrong order for 'java.lang.Math.PI' import.\nActual   :/home/kaustubh/main repo/checkstyle/src/it/resources/org/checkstyle/suppressionxpathfilter/importorder/SuppressionXpathRegressionImportOrderFour.java:5:15: Wrong order for 'java.lang.Math.PI' import.\n\nThis happened because the passed value is now 'java' at 5:15: (FulIdent.detailAst) rather than\n'import' at 5:1: (ast)\nShould I change these passed values to ident.getDetailAst() or let them remain as ast?\nAccording to me, I think passing ast is better because this check is about the ordering of the imports(emphasis on line number) rather than pointing out the import name column no., which might create a little bit confusion during future testing whether there is an error due to ordering or due to the import's name to readers. Line no. will remain the same in both scenarios.", "author": "DXTkastb", "createdAt": "2020-03-17T22:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5NzU0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMzNjgzOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394336839", "bodyText": "example:\nimport java.util.List;\nast:import>java>util>List(traversal)\ndetailAst:java\n\nTo confirm, detailAst is from FullIdent and ast is AST being passed in method parameter?\nIf so, will detailAst.getParent() always point to ast then?", "author": "rnveach", "createdAt": "2020-03-18T13:16:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5NzU0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM4NjczOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394386739", "bodyText": "Yes, detailAst is from FullIdent and ast is the AST passed in method parameter of visitiToken();\nNo, detailAst.getParent() isn't pointing to ast.(They are pointing to different nodes)", "author": "DXTkastb", "createdAt": "2020-03-18T14:26:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5NzU0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwNDIwNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394504204", "bodyText": "IMPORT -> import [1:0]\n|--DOT -> . [1:16]\n|  |--DOT -> . [1:11]\n|  |  |--IDENT -> java [1:7]\n|  |  `--IDENT -> util [1:12]\n|  `--IDENT -> List [1:17]\n`--SEMI -> ; [1:21]\n\nYou are correct. I thought the tree looked different.\nOk, I am good to leave it as using the custom AST in the memory parameter. It makes more sense to have the violation be the import itself.", "author": "rnveach", "createdAt": "2020-03-18T17:04:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5NzU0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODIyMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r393798221", "bodyText": "If this stays, this isn't \"the line\" anymore.", "author": "rnveach", "createdAt": "2020-03-17T16:13:16Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "diffHunk": "@@ -655,25 +654,27 @@ else if (option == ImportOrderOption.INFLOW) {\n      * @param isStatic whether the token is static or not.\n      * @param previous previous non-static but current is static (above), or\n      *                  previous static but current is non-static (under).\n-     * @param line the line of the current import.\n+     * @param ast the line of the current import.", "originalCommit": "c1ad0b5cb65e91109eaae0f44401b1bce797b57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUyMjk3Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394522976", "bodyText": "done.", "author": "DXTkastb", "createdAt": "2020-03-18T17:33:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODIyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODQ1Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r393798457", "bodyText": "Same.", "author": "rnveach", "createdAt": "2020-03-17T16:13:32Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "diffHunk": "@@ -728,14 +729,14 @@ private boolean isSeparatorBeforeImport(int line) {\n      * @param previous previous non-static but current is static (above), or\n      *     previous static but current is non-static (under).\n      * @param name the name of the current import.\n-     * @param line the line of the current import.\n+     * @param ast the line of the current import.", "originalCommit": "c1ad0b5cb65e91109eaae0f44401b1bce797b57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUyMzIxMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394523211", "bodyText": "done. removed this line", "author": "DXTkastb", "createdAt": "2020-03-18T17:33:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5MTg5MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394591891", "bodyText": "This line can't be removed. We have to document all method parameters. CI should complain it is missing.", "author": "rnveach", "createdAt": "2020-03-18T19:33:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxNTk3Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394615976", "bodyText": "Ok I will document this, and will push the changes", "author": "DXTkastb", "createdAt": "2020-03-18T20:21:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODQ1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODg0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r393798845", "bodyText": "Please restore this removed line. We don't expect any unnecessary changes.", "author": "rnveach", "createdAt": "2020-03-17T16:14:06Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "diffHunk": "@@ -973,5 +974,5 @@ else if (CommonUtil.startsWithChar(pkg, '/')) {\n         }\n         return patterns;\n     }\n-", "originalCommit": "c1ad0b5cb65e91109eaae0f44401b1bce797b57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUyMzI4NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394523284", "bodyText": "done", "author": "DXTkastb", "createdAt": "2020-03-18T17:33:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODg0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODk4MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r393798981", "bodyText": "same.", "author": "rnveach", "createdAt": "2020-03-17T16:14:16Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -667,5 +664,5 @@ protected void finishLocalSetup() throws CheckstyleException {\n             }\n         }\n     }\n-", "originalCommit": "c1ad0b5cb65e91109eaae0f44401b1bce797b57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUyMzM1Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394523356", "bodyText": "done", "author": "DXTkastb", "createdAt": "2020-03-18T17:33:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODk4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5OTUyNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r393799526", "bodyText": "Please confirm this. Is this a second empty line? All Java files should have an empty line at the bottom already.", "author": "rnveach", "createdAt": "2020-03-17T16:15:04Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -667,5 +664,5 @@ protected void finishLocalSetup() throws CheckstyleException {\n             }\n         }\n     }\n-\n }\n+", "originalCommit": "c1ad0b5cb65e91109eaae0f44401b1bce797b57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUyNDAwMA==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394524000", "bodyText": "fixed this too.", "author": "DXTkastb", "createdAt": "2020-03-18T17:34:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5OTUyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5OTg1Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r393799853", "bodyText": "same.", "author": "rnveach", "createdAt": "2020-03-17T16:15:30Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "diffHunk": "@@ -930,5 +930,4 @@ public void testStaticGroupsUnordered() throws Exception {\n         verify(checkConfig, getNonCompilablePath(\"InputImportOrderStaticGroupsUnordered.java\"),\n                 expected);\n     }\n-", "originalCommit": "c1ad0b5cb65e91109eaae0f44401b1bce797b57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUyNDEwMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7871#discussion_r394524103", "bodyText": "done", "author": "DXTkastb", "createdAt": "2020-03-18T17:34:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5OTg1Mw=="}], "type": "inlineReview"}, {"oid": "2e88dda21c52fe141c38ff15ebe04c5a0a521243", "url": "https://github.com/checkstyle/checkstyle/commit/2e88dda21c52fe141c38ff15ebe04c5a0a521243", "message": "Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder", "committedDate": "2020-03-18T17:30:46Z", "type": "forcePushed"}, {"oid": "313f8796603cf9643e400313528b82285ea5e1ea", "url": "https://github.com/checkstyle/checkstyle/commit/313f8796603cf9643e400313528b82285ea5e1ea", "message": "Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder", "committedDate": "2020-03-18T20:26:06Z", "type": "forcePushed"}, {"oid": "790ecfc60a2c2cd5a9bb9089ca8c321a89ed0b4d", "url": "https://github.com/checkstyle/checkstyle/commit/790ecfc60a2c2cd5a9bb9089ca8c321a89ed0b4d", "message": "Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder", "committedDate": "2020-03-18T20:33:00Z", "type": "commit"}, {"oid": "790ecfc60a2c2cd5a9bb9089ca8c321a89ed0b4d", "url": "https://github.com/checkstyle/checkstyle/commit/790ecfc60a2c2cd5a9bb9089ca8c321a89ed0b4d", "message": "Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder", "committedDate": "2020-03-18T20:33:00Z", "type": "forcePushed"}]}