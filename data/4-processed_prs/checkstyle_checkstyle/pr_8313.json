{"pr_number": 8313, "pr_title": "Issue #8308: need to introduce \"id\" rule (#8023)", "pr_createdAt": "2020-06-10T15:21:02Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8313", "timeline": [{"oid": "ac4de3aa95d47a33833b0ac8e492fd06a52f8864", "url": "https://github.com/checkstyle/checkstyle/commit/ac4de3aa95d47a33833b0ac8e492fd06a52f8864", "message": "Issue #8308: need to introduce \"id\" rule to solve keyword as identifier problem", "committedDate": "2020-06-10T15:34:28Z", "type": "forcePushed"}, {"oid": "891300f5f6ca734480d0f65bb80ba8a979e88036", "url": "https://github.com/checkstyle/checkstyle/commit/891300f5f6ca734480d0f65bb80ba8a979e88036", "message": "Issue #8308: need to introduce \"id\" rule to solve keyword as identifier problem", "committedDate": "2020-06-10T16:05:18Z", "type": "forcePushed"}, {"oid": "eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "url": "https://github.com/checkstyle/checkstyle/commit/eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "message": "Issue #8308: need to introduce \"id\" rule to solve keyword as identifier problem", "committedDate": "2020-06-10T21:28:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMDU0OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r438510549", "bodyText": "nit: could leave this named \u201ci\u201d?", "author": "esilkensen", "createdAt": "2020-06-11T02:38:51Z", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -501,9 +501,9 @@ annotationMemberValuePairs\n     ;\n \n annotationMemberValuePair!\n-    :   i:IDENT a:ASSIGN v:annotationMemberValueInitializer\n+    :   id:id a:ASSIGN v:annotationMemberValueInitializer", "originalCommit": "eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4MTIyOA==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r439081228", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-06-11T21:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMDU0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMDc5Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r438510792", "bodyText": "Does this need to be named, or could it just be \u201cid\u201d by itself?", "author": "esilkensen", "createdAt": "2020-06-11T02:39:48Z", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -545,7 +545,7 @@ annotationExpression\n \n // Definition of a Java class\n classDefinition![AST modifiers]\n-    :    c:\"class\" IDENT\n+    :    c:\"class\" id:id", "originalCommit": "eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4MTgyOA==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r439081828", "bodyText": "We need to assign the variable here to attach the IDENT AST to the CLASS_DEF AST.", "author": "nmancus1", "createdAt": "2020-06-11T21:32:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMDc5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMDk2Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r438510966", "bodyText": "Same question here", "author": "esilkensen", "createdAt": "2020-06-11T02:40:26Z", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -565,33 +565,33 @@ superClassClause\n \n // Definition of a Java Interface\n interfaceDefinition![AST modifiers]\n-    :    i:\"interface\" IDENT\n+    :    i:\"interface\" id:id", "originalCommit": "eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4MjI2Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r439082262", "bodyText": "See above.", "author": "nmancus1", "createdAt": "2020-06-11T21:33:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMDk2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTAyNg==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r438511026", "bodyText": "Same question here", "author": "esilkensen", "createdAt": "2020-06-11T02:40:40Z", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -565,33 +565,33 @@ superClassClause\n \n // Definition of a Java Interface\n interfaceDefinition![AST modifiers]\n-    :    i:\"interface\" IDENT\n+    :    i:\"interface\" id:id\n         // it _might_ have type parameters\n         (tp:typeParameters)?\n         // it might extend some other interfaces\n         ie:interfaceExtends\n         // now parse the body of the interface (looks like a class...)\n         cb:classBlock\n         {#interfaceDefinition = #(#[INTERFACE_DEF,\"INTERFACE_DEF\"],\n-                                    modifiers, i, IDENT,tp,ie,cb);}\n+                                    modifiers, i, id,tp,ie,cb);}\n     ;\n \n enumDefinition![AST modifiers]\n-    :    e:ENUM IDENT\n+    :    e:ENUM id:id", "originalCommit": "eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4MjM1NA==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r439082354", "bodyText": "See above.", "author": "nmancus1", "createdAt": "2020-06-11T21:33:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTAyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTEwNg==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r438511106", "bodyText": "Same question here", "author": "esilkensen", "createdAt": "2020-06-11T02:40:59Z", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -565,33 +565,33 @@ superClassClause\n \n // Definition of a Java Interface\n interfaceDefinition![AST modifiers]\n-    :    i:\"interface\" IDENT\n+    :    i:\"interface\" id:id\n         // it _might_ have type parameters\n         (tp:typeParameters)?\n         // it might extend some other interfaces\n         ie:interfaceExtends\n         // now parse the body of the interface (looks like a class...)\n         cb:classBlock\n         {#interfaceDefinition = #(#[INTERFACE_DEF,\"INTERFACE_DEF\"],\n-                                    modifiers, i, IDENT,tp,ie,cb);}\n+                                    modifiers, i, id,tp,ie,cb);}\n     ;\n \n enumDefinition![AST modifiers]\n-    :    e:ENUM IDENT\n+    :    e:ENUM id:id\n         // it might implement some interfaces...\n         ic:implementsClause\n         // now parse the body of the enum\n         eb:enumBlock\n         {#enumDefinition = #(#[ENUM_DEF,\"ENUM_DEF\"],\n-                               modifiers, e, IDENT, ic, eb);}\n+                               modifiers, e, id, ic, eb);}\n     ;\n \n annotationDefinition![AST modifiers]\n-    :    a:AT i:\"interface\" IDENT\n+    :    a:AT i:\"interface\" id:id", "originalCommit": "eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4MjQxNg==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r439082416", "bodyText": "See above.", "author": "nmancus1", "createdAt": "2020-06-11T21:34:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTEwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTIyMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r438511221", "bodyText": "nit: could leave this named \u201ci\u201d?", "author": "esilkensen", "createdAt": "2020-06-11T02:41:29Z", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -696,13 +696,13 @@ enumBlock\n //a body\n enumConstant!\n     :   an:annotations\n-        i:IDENT\n+        id:id", "originalCommit": "eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4MjU3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r439082571", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-06-11T21:34:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTIyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTU2Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r438511562", "bodyText": "Same question here", "author": "esilkensen", "createdAt": "2020-06-11T02:42:54Z", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -805,7 +805,7 @@ implementsClause\n \n                        |\n                        t:typeSpec[false]  // method or variable declaration(s)\n-                       (    IDENT  // the name of the method\n+                       (    id:id  // the name of the method", "originalCommit": "eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4NDM0Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r439084347", "bodyText": "See above; if this also concerns the usage of \"id\" vs \"i\", I think the additional verbosity is helpful in the more complex rules.", "author": "nmancus1", "createdAt": "2020-06-11T21:38:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTU2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTcwNA==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r438511704", "bodyText": "Same question here", "author": "esilkensen", "createdAt": "2020-06-11T02:43:24Z", "path": "src/main/resources/com/puppycrawl/tools/checkstyle/grammar/java.g", "diffHunk": "@@ -724,7 +724,7 @@ enumConstantField!\n             // This is not allowed for variable definitions, but this production\n             // allows it, a semantic check could be used if you wanted.\n             (tp:typeParameters)? t:typeSpec[false]  // method or variable declaration(s)\n-            (    IDENT  // the name of the method\n+            (    id:id  // the name of the method", "originalCommit": "eb3b671a0a90ebd5715c6f1de5c03de7271861f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4NDQxNA==", "url": "https://github.com/checkstyle/checkstyle/pull/8313#discussion_r439084414", "bodyText": "See above.", "author": "nmancus1", "createdAt": "2020-06-11T21:38:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMTcwNA=="}], "type": "inlineReview"}, {"oid": "1217f83b9e0638cbd87a2e88c76e16eccff4e0b0", "url": "https://github.com/checkstyle/checkstyle/commit/1217f83b9e0638cbd87a2e88c76e16eccff4e0b0", "message": "Issue #8308: need to introduce \"id\" rule to solve keyword as identifier problem", "committedDate": "2020-06-11T21:47:32Z", "type": "commit"}, {"oid": "1217f83b9e0638cbd87a2e88c76e16eccff4e0b0", "url": "https://github.com/checkstyle/checkstyle/commit/1217f83b9e0638cbd87a2e88c76e16eccff4e0b0", "message": "Issue #8308: need to introduce \"id\" rule to solve keyword as identifier problem", "committedDate": "2020-06-11T21:47:32Z", "type": "forcePushed"}]}