{"pr_number": 8398, "pr_title": "Issue #8328: Change name of checkstyle types to be close to real java types - regexp", "pr_createdAt": "2020-07-05T12:19:21Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8398", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NDk0OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449874949", "bodyText": "why this things are exceptional?", "author": "strkkk", "createdAt": "2020-07-05T13:00:32Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -1011,10 +1011,23 @@ else if (fieldClass == URI.class) {\n             result = \"URI\";\n         }\n         else if (fieldClass == Pattern.class) {\n-            result = \"Regular Expression\";\n+            if (\"SuppressionSingleFilter:checks\".equals(checkProperty)\n+                || \"SuppressionXpathSingleFilter:files\".equals(checkProperty)\n+                || \"IllegalTokenText:format\".equals(checkProperty)) {\n+                result = \"Regular Expression\";\n+            }\n+            else {\n+                result = \"Pattern\";\n+            }\n         }\n         else if (fieldClass == Pattern[].class) {\n-            result = \"Regular Expressions\";\n+            if (\"ImportOrder:groups\".equals(checkProperty)\n+                || \"ImportOrder:staticGroups\".equals(checkProperty)) {", "originalCommit": "3bb17e5605999f5e1ae380c6964abeecf9e13fe7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NjUwMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449886501", "bodyText": "while discussion is not finished on how to deal with this Checks, lets keep them as they were on  \"Regular Expression\" (not real java type), See details in telegram group.", "author": "romani", "createdAt": "2020-07-05T14:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NDk0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NzkzMA==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449887930", "bodyText": "as we already have such type \"Regular Expressions\" in doc, we will keep it and even place in metadata for now, to let plugins know that type is very special and specified in words only in chekcstyle doc.", "author": "romani", "createdAt": "2020-07-05T15:08:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NDk0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTA0Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449875043", "bodyText": "same here, why it is an exception/", "author": "strkkk", "createdAt": "2020-07-05T13:01:16Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -1011,10 +1011,23 @@ else if (fieldClass == URI.class) {\n             result = \"URI\";\n         }\n         else if (fieldClass == Pattern.class) {\n-            result = \"Regular Expression\";\n+            if (\"SuppressionSingleFilter:checks\".equals(checkProperty)\n+                || \"SuppressionXpathSingleFilter:files\".equals(checkProperty)\n+                || \"IllegalTokenText:format\".equals(checkProperty)) {", "originalCommit": "3bb17e5605999f5e1ae380c6964abeecf9e13fe7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4NjQ4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449886480", "bodyText": "while discussion is not finished on how to deal with this Checks, lets keep them as they were on  \"Regular Expression\" (not real java type), See details in telegram group.", "author": "romani", "createdAt": "2020-07-05T14:53:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTA0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTc0MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449875740", "bodyText": "I would suggest to move these sorting changes to new PR to not mix it with renaming changes. Also, please add screenshot or list how new order looks like (to make sure it is sorted properly, it is not clear from diff)", "author": "strkkk", "createdAt": "2020-07-05T13:05:44Z", "path": "src/xdocs/property_types.xml", "diffHunk": "@@ -908,56 +927,52 @@\n       </div>\n     </section>\n \n-    <section name=\"JavadocContentLocationOption\">\n+    <section name=\"Uri\">\n       <p>\n-        This type represents policy on placement of the Javadoc content.\n+        This type represents a URI. The string representation is parsed using a custom\n+        routine to analyze what type of URI the string is.\n+        It can be a URL, regular file, or a resource path. It will try loading the path as\n+        a URL first, then as a file that must exist, and then finally as a resource on the\n+        classpath.\n+      </p>\n+    </section>\n+\n+    <section name=\"WrapOption\">\n+      <p>\n+        This type represents the policy for wrapping lines.\n         The following table describes the valid options:\n       </p>\n \n       <div class=\"wrapper\">\n-        <table summary=\"JavadocContentLocationOption options\">\n+        <table summary=\"wrap options\">\n           <tr>\n             <td>Option</td>\n             <td>Definition</td>\n           </tr>\n-\n           <tr>\n-            <td><code>FIRST_LINE</code></td>\n+            <td><code>nl</code></td>\n             <td>\n-              Represents the policy for Javadoc content starts from the same line\n-              as <code>/**</code>.\n-              Example:\n+              The token must be on a new line. For example:\n               <div class=\"wrapper\">\n                 <pre>\n-            &#47;** Summary text.\n-              * More details.\n-              *&#47;\n-            public void method();\n+    someVariable = aBigVariableNameToMakeThings + \"this may work\"\n+                   + lookVeryInteresting;\n                 </pre>\n               </div>\n-              This style is also known as \"scala\" style.\n             </td>\n           </tr>\n-\n           <tr>\n-            <td><code>SECOND_LINE</code></td>\n+            <td><code>eol</code></td>\n             <td>\n-              Represents the policy for Javadoc content starts from the next line\n-              after <code>/**</code>.\n-              Example:\n+              The token must be at the end of the line. For example:\n               <div class=\"wrapper\">\n                 <pre>\n-              &#47;**\n-              * Summary text.\n-              * More details.\n-              *&#47;\n-              public void method();\n+    someVariable = aBigVariableNameToMakeThings + \"this may work\" +\n+                   lookVeryInteresting;", "originalCommit": "3bb17e5605999f5e1ae380c6964abeecf9e13fe7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MDk0MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449890941", "bodyText": "Okay, will do it asap.", "author": "gaurabdg", "createdAt": "2020-07-05T15:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNDkwNw==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449914907", "bodyText": "@strkkk Done: #8400", "author": "gaurabdg", "createdAt": "2020-07-05T20:19:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTg2MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449875861", "bodyText": "just wonder - shouldn't this be %5B%5D instead?", "author": "strkkk", "createdAt": "2020-07-05T13:07:22Z", "path": "src/xdocs/config_metrics.xml", "diffHunk": "@@ -696,7 +696,7 @@ class Foo {\n             <tr>\n               <td>excludeClassesRegexps</td>\n               <td>Specify user-configured regular expressions to ignore classes.</td>\n-              <td><a href=\"property_types.html#regexp\">Regular Expressions</a></td>\n+              <td><a href=\"property_types.html#Pattern.5B.5D\">Pattern[]</a></td>", "originalCommit": "3bb17e5605999f5e1ae380c6964abeecf9e13fe7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4ODcxOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449888719", "bodyText": "checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java\n    \n    \n         Line 152\n      in\n      cf08aa0\n    \n    \n    \n    \n\n        \n          \n           public void setExcludeClassesRegexps(String... from) { \n        \n    \n  \n\n\nit is String[] in setter, so  real type is String[], if we want  to mean regexp nature of it keep it Regular Expressions.\nPlease do the same by all others.\nPLEASE keep in this PR only updates where setter type is Pattern, all other cases keep as  Regular Expression or  Regular Expressions`.", "author": "romani", "createdAt": "2020-07-05T15:17:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MDA0Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449890043", "bodyText": "@romani\nThat is what I tried to mention here in my comment #8328 (comment) that there are more than 5 such cases where setter type and field class is different.\nexcludeClasses have field type List<Pattern> . So these types didn't pop up in @rnveach's list #8328 (comment). I will then generate such occurences and omit them too.\nUpdated List of such occurences: #8328 (comment)", "author": "gaurabdg", "createdAt": "2020-07-05T15:33:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMzc3Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449903776", "bodyText": "lets skip all complicated cases for now, and merge what is simple.\nin this PR please skip all such cases, ones telegram discussion finished, we will tackle them.", "author": "romani", "createdAt": "2020-07-05T18:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNDc3NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449914775", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-07-05T20:17:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzOTQ0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449939445", "bodyText": "@gaurabdg , please answer question from @strkkk .", "author": "romani", "createdAt": "2020-07-06T00:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDEyMTg2MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r450121861", "bodyText": "just wonder - shouldn't this be %5B%5D instead?\n\nThe generated site contains link in this format.", "author": "gaurabdg", "createdAt": "2020-07-06T10:11:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTg2MQ=="}], "type": "inlineReview"}, {"oid": "a3a2d51d87a17ac13b183ccd52b81db21b39fe51", "url": "https://github.com/checkstyle/checkstyle/commit/a3a2d51d87a17ac13b183ccd52b81db21b39fe51", "message": "Issue #8328: Change name of checkstyle types to be close to real java types - regexp", "committedDate": "2020-07-05T19:36:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzOTIyMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r449939221", "bodyText": "it is String, please keep it Regular Expression, if setter is not Pattern it should be abstract non-existing type \"Regular Expression\" that user cannot instantiate of.\nApply the same to all other.", "author": "romani", "createdAt": "2020-07-06T00:49:57Z", "path": "src/xdocs/config_filters.xml", "diffHunk": "@@ -152,35 +152,35 @@\n               <tr>\n                   <td>offCommentFormat</td>\n                   <td>Specify comment pattern to trigger filter to begin suppression.</td>\n-                  <td><a href=\"property_types.html#regexp\">Regular Expression</a></td>\n+                  <td><a href=\"property_types.html#Pattern\">Pattern</a></td>\n                   <td><code>\"CHECKSTYLE:OFF\"</code></td>\n                   <td>3.5</td>\n               </tr>\n               <tr>\n                   <td>onCommentFormat</td>\n                   <td>Specify comment pattern to trigger filter to end suppression.</td>\n-                  <td><a href=\"property_types.html#regexp\">Regular Expression</a></td>\n+                  <td><a href=\"property_types.html#Pattern\">Pattern</a></td>\n                   <td><code>\"CHECKSTYLE:ON\"</code></td>\n                   <td>3.5</td>\n               </tr>\n               <tr>\n                   <td>checkFormat</td>\n                   <td>Specify check pattern to suppress.</td>\n-                  <td><a href=\"property_types.html#regexp\">Regular Expression</a></td>\n+                  <td><a href=\"property_types.html#Pattern\">Pattern</a></td>\n                   <td><code>\".*\"</code></td>\n                   <td>3.5</td>\n               </tr>\n               <tr>\n                   <td>messageFormat</td>\n                   <td>Specify message pattern to suppress.</td>\n-                  <td><a href=\"property_types.html#regexp\">Regular Expression</a></td>\n+                  <td><a href=\"property_types.html#Pattern\">Pattern</a></td>\n                   <td><code>null</code></td>\n                   <td>3.5</td>\n               </tr>\n               <tr>\n                   <td>idFormat</td>\n                   <td>Specify check ID pattern to suppress.</td>\n-                  <td><a href=\"property_types.html#regexp\">Regular Expression</a></td>\n+                  <td><a href=\"property_types.html#Pattern\">Pattern</a></td>", "originalCommit": "a3a2d51d87a17ac13b183ccd52b81db21b39fe51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDEyMDI5NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8398#discussion_r450120295", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-07-06T10:08:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzOTIyMQ=="}], "type": "inlineReview"}, {"oid": "50fcf519d48aa6750c05ece590a0e7e18a1df21f", "url": "https://github.com/checkstyle/checkstyle/commit/50fcf519d48aa6750c05ece590a0e7e18a1df21f", "message": "Issue #8328: Change name of checkstyle types to be close to real java types - regexp", "committedDate": "2020-07-06T10:02:17Z", "type": "forcePushed"}, {"oid": "25285b4a85061b92d2f271931f4a4b8fa4281d5b", "url": "https://github.com/checkstyle/checkstyle/commit/25285b4a85061b92d2f271931f4a4b8fa4281d5b", "message": "Issue #8328: Change name of checkstyle types to be close to real java types - regexp", "committedDate": "2020-07-06T10:14:58Z", "type": "forcePushed"}, {"oid": "31e1c371c916e926c07cc07bcd05915d2756ceec", "url": "https://github.com/checkstyle/checkstyle/commit/31e1c371c916e926c07cc07bcd05915d2756ceec", "message": "Issue #8328: Change name of checkstyle types to be close to real java types - regexp", "committedDate": "2020-07-06T10:50:56Z", "type": "commit"}, {"oid": "31e1c371c916e926c07cc07bcd05915d2756ceec", "url": "https://github.com/checkstyle/checkstyle/commit/31e1c371c916e926c07cc07bcd05915d2756ceec", "message": "Issue #8328: Change name of checkstyle types to be close to real java types - regexp", "committedDate": "2020-07-06T10:50:56Z", "type": "forcePushed"}]}