{"pr_number": 8983, "pr_title": "Issue #5362: Fix new keyword and their children not checked correctly.", "pr_createdAt": "2020-11-13T08:13:22Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8983", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjc3OTEyMA==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r522779120", "bodyText": "Had to change the pre-written file because it is more than 100 chars per lines due to addition of \"warn\" comment.", "author": "Abhishek-kumar09", "createdAt": "2020-11-13T08:17:39Z", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationCorrectIfAndParameter.java", "diffHunk": "@@ -114,14 +116,15 @@ void fooMethodWithIf(String stringStringStringStringLooooongString, //indent:6 e\n         if (conditionSecond(10000000000.0, new //indent:8 exp:8\n             SecondClassLongNam7(\"Looooooooooooo\" //indent:12 exp:12\n             + \"oooooong\").getString(new InputIndentationCorrectIfAndParameter(), //indent:12 exp:12\n-            new SecondClassLongNam7(\"loooooooooong\"). //indent:12 exp:12\n+            new SecondClassLongNam7(\"loooooooooong\"). //indent:12 exp:14,16 warn\n             getInteger(new InputIndentationCorrectIfAndParameter(), \"lg\")), \"l\") //indent:12 exp:12\n             || conditionThird(2048) || conditionFourth(new //indent:12 exp:12\n             SecondClassLongNam7(\"Looooooooooooooo\" //indent:12 exp:12\n               + \"o\").gB(new InputIndentationCorrectIfAndParameter(), false))|| //indent:14 exp:>=12\n               conditionFifth(true, new SecondClassLongNam7(getString(2048, \"L\" //indent:14 exp:>=12\n               + \"ooooooooooooooooooooooooooooooooooooooooooong\")).gB( //indent:14 exp:>=12\n-              new InputIndentationCorrectIfAndParameter(),true))||co(false,new //indent:14 exp:>=12\n+              new InputIndentationCorrectIfAndParameter(),true))//indent:14 exp:16,18 warn\n+                || co(false, new //indent:16 exp:16", "originalCommit": "94c019fbcd5e5000d502d821f7e5bd77017b36bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgwODcwOA==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r523808708", "bodyText": "Please add in name of class \"correct\", it is very valuable to keep such inputs.\nAs indentation is part of Google style please add  case from issue to Input of ITs, issue was reported by Google team, so we need to prove that it is ok  for Google style also.\nhttps://github.com/checkstyle/checkstyle/tree/master/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4841indentation", "author": "romani", "createdAt": "2020-11-15T20:23:50Z", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationNewChildren.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/* Config:                                                                    //indent:0 exp:0\n+ * This test-input is intended to be checked using following configuration:   //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ * arrayInitIndent = 4                                                        //indent:1 exp:1\n+ * basicOffset = 4                                                            //indent:1 exp:1\n+ * braceAdjustment = 0                                                        //indent:1 exp:1\n+ * caseIndent = 4                                                             //indent:1 exp:1\n+ * forceStrictCondition = false                                               //indent:1 exp:1\n+ * lineWrappingIndentation = 8                                                //indent:1 exp:1\n+ * tabWidth = 4                                                               //indent:1 exp:1\n+ * throwsIndent = 8                                                           //indent:1 exp:1\n+ *                                                                            //indent:1 exp:1\n+ */                                                                           //indent:1 exp:1\n+\n+package com.puppycrawl.tools.checkstyle.checks.indentation.indentation; //indent:0 exp:0\n+\n+public class InputIndentationNewChildren { //indent:0 exp:0", "originalCommit": "94c019fbcd5e5000d502d821f7e5bd77017b36bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIwNzk2NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525207965", "bodyText": "@Abhishek-kumar09 , please do not forget to reply done on comments", "author": "romani", "createdAt": "2020-11-17T14:43:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgwODcwOA=="}], "type": "inlineReview"}, {"oid": "d6f47d3f340c60daa56e007b6ec2e84f17f6c30f", "url": "https://github.com/checkstyle/checkstyle/commit/d6f47d3f340c60daa56e007b6ec2e84f17f6c30f", "message": "Issue #5362: Fix new keyword not checked and being raising wrong children indentation levels", "committedDate": "2020-11-16T10:43:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIyOTMxMg==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525229312", "bodyText": "final DetailAST mainAst = getMainAst();\nfinal DetailAST firstChild = mainAst.getFirstChild();", "author": "strkkk", "createdAt": "2020-11-17T15:09:11Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "diffHunk": "@@ -43,26 +48,57 @@ public NewHandler(IndentationCheck indentCheck,\n \n     @Override\n     public void checkIndentation() {\n-        final DetailAST type = getMainAst().getFirstChild();\n-        if (type != null) {\n-            checkExpressionSubtree(type, getIndent(), false, false);\n+        final DetailAST firstChild = getMainAst().getFirstChild();\n+        final DetailAST mainAst = getMainAst();", "originalCommit": "d6f47d3f340c60daa56e007b6ec2e84f17f6c30f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzNTc3Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525235772", "bodyText": "Also, you can move initialization of firstChild lower, closer to its first usage", "author": "strkkk", "createdAt": "2020-11-17T15:16:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIyOTMxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIyOTk2NA==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525229964", "bodyText": "getMainAst() you have this variable in scope, no need for method call", "author": "strkkk", "createdAt": "2020-11-17T15:09:54Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "diffHunk": "@@ -43,26 +48,57 @@ public NewHandler(IndentationCheck indentCheck,\n \n     @Override\n     public void checkIndentation() {\n-        final DetailAST type = getMainAst().getFirstChild();\n-        if (type != null) {\n-            checkExpressionSubtree(type, getIndent(), false, false);\n+        final DetailAST firstChild = getMainAst().getFirstChild();\n+        final DetailAST mainAst = getMainAst();\n+\n+        // if new is on the line start and it is not the part of assignment.\n+        if (isOnStartOfLine(mainAst)\n+                && !getMainAst().getParent().getParent().getText().equals(ASSIGNMENT)) {", "originalCommit": "d6f47d3f340c60daa56e007b6ec2e84f17f6c30f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzMTM5NA==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525231394", "bodyText": "getMainAst()\nI counted 4 invocations of this method, please extract to variable", "author": "strkkk", "createdAt": "2020-11-17T15:11:17Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "diffHunk": "@@ -43,26 +48,57 @@ public NewHandler(IndentationCheck indentCheck,\n \n     @Override\n     public void checkIndentation() {\n-        final DetailAST type = getMainAst().getFirstChild();\n-        if (type != null) {\n-            checkExpressionSubtree(type, getIndent(), false, false);\n+        final DetailAST firstChild = getMainAst().getFirstChild();\n+        final DetailAST mainAst = getMainAst();\n+\n+        // if new is on the line start and it is not the part of assignment.\n+        if (isOnStartOfLine(mainAst)\n+                && !getMainAst().getParent().getParent().getText().equals(ASSIGNMENT)) {\n+            final int columnNo = expandedTabsColumnNo(mainAst);\n+            final IndentLevel level = getIndentImpl();\n+\n+            if (columnNo < level.getFirstIndentLevel()) {\n+                logError(mainAst, \"\", columnNo, level);\n+            }\n+        }\n+\n+        if (firstChild != null) {\n+            checkExpressionSubtree(firstChild, getIndent(), false, false);\n         }\n \n-        final DetailAST lparen = getMainAst().findFirstToken(TokenTypes.LPAREN);\n+        final DetailAST lparen = mainAst.findFirstToken(TokenTypes.LPAREN);\n         checkLeftParen(lparen);\n     }\n \n+    @Override\n+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n+        final IndentLevel childIndent;\n+        if (child.getMainAst().getType() == TokenTypes.OBJBLOCK) {\n+            childIndent = new IndentLevel(getIndent(), getBasicOffset());\n+        }\n+        else {\n+            childIndent = new IndentLevel(getIndent(),\n+                    getIndentCheck().getLineWrappingIndentation());\n+        }\n+        return childIndent;\n+    }\n+\n     @Override\n     protected IndentLevel getIndentImpl() {\n-        final IndentLevel result;\n+        IndentLevel result;\n         // if our expression isn't first on the line, just use the start\n         // of the line\n         if (getLineStart(getMainAst()) == getMainAst().getColumnNo()) {\n             result = super.getIndentImpl();\n+\n+            if (getMainAst().getParent().getParent().getText().equals(ASSIGNMENT)) {", "originalCommit": "d6f47d3f340c60daa56e007b6ec2e84f17f6c30f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzNDQwMw==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525234403", "bodyText": "As for me, it will look a bit better with something like\nfinal int offset;\nif (child.getMainAst().getType() == TokenTypes.OBJBLOCK) {\n            offset= getBasicOffset();\n        }\n        else {\n            offset= getIndentCheck().getLineWrappingIndentation());\n        }\nreturn new IndentLevel(getIndent(), offset);", "author": "strkkk", "createdAt": "2020-11-17T15:15:04Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "diffHunk": "@@ -43,26 +48,57 @@ public NewHandler(IndentationCheck indentCheck,\n \n     @Override\n     public void checkIndentation() {\n-        final DetailAST type = getMainAst().getFirstChild();\n-        if (type != null) {\n-            checkExpressionSubtree(type, getIndent(), false, false);\n+        final DetailAST firstChild = getMainAst().getFirstChild();\n+        final DetailAST mainAst = getMainAst();\n+\n+        // if new is on the line start and it is not the part of assignment.\n+        if (isOnStartOfLine(mainAst)\n+                && !getMainAst().getParent().getParent().getText().equals(ASSIGNMENT)) {\n+            final int columnNo = expandedTabsColumnNo(mainAst);\n+            final IndentLevel level = getIndentImpl();\n+\n+            if (columnNo < level.getFirstIndentLevel()) {\n+                logError(mainAst, \"\", columnNo, level);\n+            }\n+        }\n+\n+        if (firstChild != null) {\n+            checkExpressionSubtree(firstChild, getIndent(), false, false);\n         }\n \n-        final DetailAST lparen = getMainAst().findFirstToken(TokenTypes.LPAREN);\n+        final DetailAST lparen = mainAst.findFirstToken(TokenTypes.LPAREN);\n         checkLeftParen(lparen);\n     }\n \n+    @Override\n+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n+        final IndentLevel childIndent;\n+        if (child.getMainAst().getType() == TokenTypes.OBJBLOCK) {\n+            childIndent = new IndentLevel(getIndent(), getBasicOffset());\n+        }\n+        else {\n+            childIndent = new IndentLevel(getIndent(),\n+                    getIndentCheck().getLineWrappingIndentation());\n+        }\n+        return childIndent;", "originalCommit": "d6f47d3f340c60daa56e007b6ec2e84f17f6c30f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzOTA1NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525239055", "bodyText": "getParent().getParent().getText().equals(ASSIGNMENT)\nwhy dont check its type? Like getMainAst().getParent().getParent().getType() == TokenTypes.ASSIGN?", "author": "strkkk", "createdAt": "2020-11-17T15:20:45Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "diffHunk": "@@ -43,26 +48,57 @@ public NewHandler(IndentationCheck indentCheck,\n \n     @Override\n     public void checkIndentation() {\n-        final DetailAST type = getMainAst().getFirstChild();\n-        if (type != null) {\n-            checkExpressionSubtree(type, getIndent(), false, false);\n+        final DetailAST firstChild = getMainAst().getFirstChild();\n+        final DetailAST mainAst = getMainAst();\n+\n+        // if new is on the line start and it is not the part of assignment.\n+        if (isOnStartOfLine(mainAst)\n+                && !getMainAst().getParent().getParent().getText().equals(ASSIGNMENT)) {", "originalCommit": "d6f47d3f340c60daa56e007b6ec2e84f17f6c30f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3ODQ4Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525378482", "bodyText": "Earlier It was giving error, when I compared. Type was showing VARIABLE_DEF, but now its all correct. I don't know how, Maybe I did something wrong there. Now its fine. Thank you very much.\nI have checked the diff report too, all good no changes.", "author": "Abhishek-kumar09", "createdAt": "2020-11-17T18:09:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzOTA1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0NjA4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525446080", "bodyText": "New diff report: https://abhishek-kumar09.github.io/checkstyleDiffReportTempContribition/", "author": "Abhishek-kumar09", "createdAt": "2020-11-17T19:44:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzOTA1NQ=="}], "type": "inlineReview"}, {"oid": "e621c2614f692022caf4de901af7882dac937dee", "url": "https://github.com/checkstyle/checkstyle/commit/e621c2614f692022caf4de901af7882dac937dee", "message": "Issue #5362: Fix new keyword not checked and being raising wrong children indentation levels", "committedDate": "2020-11-17T18:11:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ3NDg0Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r525474843", "bodyText": "javadoc", "author": "strkkk", "createdAt": "2020-11-17T20:08:04Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "diffHunk": "@@ -39,33 +42,75 @@ public NewHandler(IndentationCheck indentCheck,\n                       DetailAST ast,\n                       AbstractExpressionHandler parent) {\n         super(indentCheck, \"operator new\", ast, parent);\n+        mainAst = ast;\n     }\n \n     @Override\n     public void checkIndentation() {\n-        final DetailAST type = getMainAst().getFirstChild();\n-        if (type != null) {\n-            checkExpressionSubtree(type, getIndent(), false, false);\n+        // if new is on the line start and it is not the part of assignment.\n+        if (isOnStartOfLine(mainAst)\n+                && !isNewKeywordFollowedByAssign()) {\n+            final int columnNo = expandedTabsColumnNo(mainAst);\n+            final IndentLevel level = getIndentImpl();\n+\n+            if (columnNo < level.getFirstIndentLevel()) {\n+                logError(mainAst, \"\", columnNo, level);\n+            }\n         }\n \n-        final DetailAST lparen = getMainAst().findFirstToken(TokenTypes.LPAREN);\n+        final DetailAST firstChild = mainAst.getFirstChild();\n+        if (firstChild != null) {\n+            checkExpressionSubtree(firstChild, getIndent(), false, false);\n+        }\n+\n+        final DetailAST lparen = mainAst.findFirstToken(TokenTypes.LPAREN);\n         checkLeftParen(lparen);\n     }\n \n+    @Override\n+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n+        final int offset;\n+        if (child.getMainAst().getType() == TokenTypes.OBJBLOCK) {\n+            offset = getBasicOffset();\n+        }\n+        else {\n+            offset = getLineWrappingIndent();\n+        }\n+        return new IndentLevel(getIndent(), offset);\n+    }\n+\n     @Override\n     protected IndentLevel getIndentImpl() {\n-        final IndentLevel result;\n+        IndentLevel result;\n         // if our expression isn't first on the line, just use the start\n         // of the line\n-        if (getLineStart(getMainAst()) == getMainAst().getColumnNo()) {\n+        if (getLineStart(mainAst) == mainAst.getColumnNo()) {\n             result = super.getIndentImpl();\n+\n+            if (isNewKeywordFollowedByAssign()) {\n+                result = new IndentLevel(result, getLineWrappingIndent());\n+            }\n         }\n         else {\n-            result = new IndentLevel(getLineStart(getMainAst()));\n+            result = new IndentLevel(getLineStart(mainAst));\n         }\n+\n         return result;\n     }\n \n+    /**\n+     * Is NewKeyword is placed after an Assignment.\n+     *\n+     * @return is new keyWord is follwed by Assignment.\n+     */\n+    private boolean isNewKeywordFollowedByAssign() {\n+        return mainAst.getParent().getParent().getType() == TokenTypes.ASSIGN;\n+    }\n+\n+    private int getLineWrappingIndent() {", "originalCommit": "e621c2614f692022caf4de901af7882dac937dee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "841bb5bcfb1421e4eed8790c1ff813f547c2554c", "url": "https://github.com/checkstyle/checkstyle/commit/841bb5bcfb1421e4eed8790c1ff813f547c2554c", "message": "Issue #5362: Fix new keyword not checked and being raising wrong children indentation levels", "committedDate": "2020-11-17T21:29:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExMTQ0Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r526111447", "bodyText": "This is a good candidate for TokenUtil.isOfType().", "author": "nmancus1", "createdAt": "2020-11-18T14:04:45Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "diffHunk": "@@ -39,33 +42,81 @@ public NewHandler(IndentationCheck indentCheck,\n                       DetailAST ast,\n                       AbstractExpressionHandler parent) {\n         super(indentCheck, \"operator new\", ast, parent);\n+        mainAst = ast;\n     }\n \n     @Override\n     public void checkIndentation() {\n-        final DetailAST type = getMainAst().getFirstChild();\n-        if (type != null) {\n-            checkExpressionSubtree(type, getIndent(), false, false);\n+        // if new is on the line start and it is not the part of assignment.\n+        if (isOnStartOfLine(mainAst)\n+                && !isNewKeywordFollowedByAssign()) {\n+            final int columnNo = expandedTabsColumnNo(mainAst);\n+            final IndentLevel level = getIndentImpl();\n+\n+            if (columnNo < level.getFirstIndentLevel()) {\n+                logError(mainAst, \"\", columnNo, level);\n+            }\n+        }\n+\n+        final DetailAST firstChild = mainAst.getFirstChild();\n+        if (firstChild != null) {\n+            checkExpressionSubtree(firstChild, getIndent(), false, false);\n         }\n \n-        final DetailAST lparen = getMainAst().findFirstToken(TokenTypes.LPAREN);\n+        final DetailAST lparen = mainAst.findFirstToken(TokenTypes.LPAREN);\n         checkLeftParen(lparen);\n     }\n \n+    @Override\n+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n+        final int offset;\n+        if (child.getMainAst().getType() == TokenTypes.OBJBLOCK) {", "originalCommit": "841bb5bcfb1421e4eed8790c1ff813f547c2554c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5MjE2Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r526192162", "bodyText": "Done", "author": "Abhishek-kumar09", "createdAt": "2020-11-18T15:46:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExMTQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5NDkxNA==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r526194914", "bodyText": "Resolved.", "author": "nmancus1", "createdAt": "2020-11-18T15:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExMTQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExNzc4OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r526117789", "bodyText": "Is NewKeyword is placed after an Assignment.\nThis is a bit confusing.  Maybe Checks if the 'new' keyword is followed by an assignment?\n@return is new keyWord is follwed by Assignment. -> @return true if new keyword is followed by assignment", "author": "nmancus1", "createdAt": "2020-11-18T14:13:34Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "diffHunk": "@@ -39,33 +42,81 @@ public NewHandler(IndentationCheck indentCheck,\n                       DetailAST ast,\n                       AbstractExpressionHandler parent) {\n         super(indentCheck, \"operator new\", ast, parent);\n+        mainAst = ast;\n     }\n \n     @Override\n     public void checkIndentation() {\n-        final DetailAST type = getMainAst().getFirstChild();\n-        if (type != null) {\n-            checkExpressionSubtree(type, getIndent(), false, false);\n+        // if new is on the line start and it is not the part of assignment.\n+        if (isOnStartOfLine(mainAst)\n+                && !isNewKeywordFollowedByAssign()) {\n+            final int columnNo = expandedTabsColumnNo(mainAst);\n+            final IndentLevel level = getIndentImpl();\n+\n+            if (columnNo < level.getFirstIndentLevel()) {\n+                logError(mainAst, \"\", columnNo, level);\n+            }\n+        }\n+\n+        final DetailAST firstChild = mainAst.getFirstChild();\n+        if (firstChild != null) {\n+            checkExpressionSubtree(firstChild, getIndent(), false, false);\n         }\n \n-        final DetailAST lparen = getMainAst().findFirstToken(TokenTypes.LPAREN);\n+        final DetailAST lparen = mainAst.findFirstToken(TokenTypes.LPAREN);\n         checkLeftParen(lparen);\n     }\n \n+    @Override\n+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n+        final int offset;\n+        if (child.getMainAst().getType() == TokenTypes.OBJBLOCK) {\n+            offset = getBasicOffset();\n+        }\n+        else {\n+            offset = getLineWrappingIndent();\n+        }\n+        return new IndentLevel(getIndent(), offset);\n+    }\n+\n     @Override\n     protected IndentLevel getIndentImpl() {\n-        final IndentLevel result;\n+        IndentLevel result;\n         // if our expression isn't first on the line, just use the start\n         // of the line\n-        if (getLineStart(getMainAst()) == getMainAst().getColumnNo()) {\n+        if (getLineStart(mainAst) == mainAst.getColumnNo()) {\n             result = super.getIndentImpl();\n+\n+            if (isNewKeywordFollowedByAssign()) {\n+                result = new IndentLevel(result, getLineWrappingIndent());\n+            }\n         }\n         else {\n-            result = new IndentLevel(getLineStart(getMainAst()));\n+            result = new IndentLevel(getLineStart(mainAst));\n         }\n+\n         return result;\n     }\n \n+    /**\n+     * Is NewKeyword is placed after an Assignment.\n+     *\n+     * @return is new keyWord is follwed by Assignment.", "originalCommit": "841bb5bcfb1421e4eed8790c1ff813f547c2554c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEyMTEzNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r526121135", "bodyText": "Also, travis failure is from follwed.  As @romani has said, spelling check CI is the most difficult of all to pass :)", "author": "nmancus1", "createdAt": "2020-11-18T14:18:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExNzc4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE1MjQwMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r526152401", "bodyText": "spelling check CI is the most difficult of all to pass :)\n\nWell said ;)", "author": "Abhishek-kumar09", "createdAt": "2020-11-18T14:57:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExNzc4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5MjI4OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r526192288", "bodyText": "Done", "author": "Abhishek-kumar09", "createdAt": "2020-11-18T15:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExNzc4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5NTIyMw==", "url": "https://github.com/checkstyle/checkstyle/pull/8983#discussion_r526195223", "bodyText": "Resolved.", "author": "nmancus1", "createdAt": "2020-11-18T15:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExNzc4OQ=="}], "type": "inlineReview"}, {"oid": "823e5872899f5d4bc4a7a07ce8e4d22670556793", "url": "https://github.com/checkstyle/checkstyle/commit/823e5872899f5d4bc4a7a07ce8e4d22670556793", "message": "Issue #5362: Fix new keyword not checked and being raising wrong children indentation levels", "committedDate": "2020-11-18T14:59:10Z", "type": "commit"}, {"oid": "823e5872899f5d4bc4a7a07ce8e4d22670556793", "url": "https://github.com/checkstyle/checkstyle/commit/823e5872899f5d4bc4a7a07ce8e4d22670556793", "message": "Issue #5362: Fix new keyword not checked and being raising wrong children indentation levels", "committedDate": "2020-11-18T14:59:10Z", "type": "forcePushed"}]}