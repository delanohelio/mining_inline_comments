{"pr_number": 7634, "pr_title": "Issue #7631: Update doc for WhitespaceAfter", "pr_createdAt": "2020-02-24T20:59:51Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7634", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NDM1Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r383674353", "bodyText": "Remove text after \"ok\" or \" violation\" in this and other lines. On exact code there is no \"if\".", "author": "romani", "createdAt": "2020-02-25T06:04:34Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "diffHunk": "@@ -70,7 +70,23 @@\n  *   &lt;property name=&quot;tokens&quot; value=&quot;COMMA, SEMI&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ *<pre>\n+ * public class MyTest {\n+ *  public static void myTest() {\n+ *      if (foo) { // OK, 'if' followed by whitespace", "originalCommit": "c7e0915cb8d0763301e6a2995e9e7df363f2f8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE0MDg1NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r384140855", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-02-25T21:37:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NDM1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NTUxNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r383675517", "bodyText": "Please add example of behavior on default config.\nPlease share CLI output of config and example code to prove that Check is actually behave like shown in your example", "author": "romani", "createdAt": "2020-02-25T06:09:03Z", "path": "src/xdocs/config_whitespace.xml", "diffHunk": "@@ -2268,6 +2268,27 @@ public long toMicros(long d) { return d / (C1 / C0); }\n   &lt;property name=&quot;tokens&quot; value=&quot;COMMA, SEMI&quot;/&gt;\n &lt;/module&gt;\n         </source>\n+              <p>Example:</p>", "originalCommit": "c7e0915cb8d0763301e6a2995e9e7df363f2f8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3MzA5NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r384073095", "bodyText": "\u279c  check_style_test git:(master) \u2717 cat MyTest.java                                               \npublic class MyTest {\n    public static void myTest() {\n        if (foo) { // OK\n            //...\n        } else if(bar) { // violation\n            //...\n        }\n\n        testMethod(foo, bar); // OK\n        testMethod(foo,bar);  // violation\n\n        for (;;) {} // OK\n    }\n}\n\u279c  check_style_test git:(master) \u2717 cat my_checks.xml | grep WhitespaceAfter\n\t<module name=\"WhitespaceAfter\"/>\n\u279c  check_style_test git:(master) \u2717 checkstyle -c my_checks.xml MyTest.java | grep WhitespaceAfter\n[WARN] /home/nick/check_style_test/MyTest.java:5:16: 'if' is not followed by whitespace. [WhitespaceAfter]\n[WARN] /home/nick/check_style_test/MyTest.java:10:23: ',' is not followed by whitespace. [WhitespaceAfter]", "author": "nmancus1", "createdAt": "2020-02-25T19:21:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NTUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyNzYyNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r384527624", "bodyText": "thanks a lot, keep ding this format of prove for each code sample.\nNow please make sure that documentation is looks like:\n<<default config>>\n<<code sample>>\nsome words explanation for config below\n<<config>>\n<<code sample>>\nsome words explanation for config below\n<<config>>\n<<code sample>>\n\nyou have code sample NOT under default config. Default config is at 2259 line.", "author": "romani", "createdAt": "2020-02-26T14:30:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NTUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5OTg3MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r384799870", "bodyText": "\u279c  check_style_test git:(master) \u2717 cat MyTest.java                                             \npublic class MyTest {\n    public static void myTest() {\n\tint a; int b;\t\t \t// OK\n\tint a;int b;\t\t\t// violation\n\t\t\n        testMethod(foo, bar); \t// OK\n        testMethod(foo,bar);  \t// violation\n\n        for (;;) {} // OK\n    }\n}\n\u279c  check_style_test git:(master) \u2717 cat my_checks.xml | sed -n '/WhitespaceAfter/{p;n;p;n;p}'     \n\t<module name=\"WhitespaceAfter\">\n  \t<property name=\"tokens\" value=\"COMMA, SEMI\"/>\n\t</module>\n\u279c  check_style_test git:(master) \u2717 checkstyle -c my_checks.xml MyTest.java | grep WhitespaceAfter\n[WARN] /home/nick/check_style_test/MyTest.java:4:14: ';' is not followed by whitespace. [WhitespaceAfter]\n[WARN] /home/nick/check_style_test/MyTest.java:7:23: ',' is not followed by whitespace. [WhitespaceAfter]", "author": "nmancus1", "createdAt": "2020-02-26T22:14:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NTUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1NjY5NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r384856694", "bodyText": "OK. I think I've got everything taken care of here, thanks for being patient!", "author": "nmancus1", "createdAt": "2020-02-27T00:55:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NTUxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4MDQyNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r385480424", "bodyText": "Please remove extra empty line", "author": "romani", "createdAt": "2020-02-28T02:36:32Z", "path": "src/xdocs/config_whitespace.xml", "diffHunk": "@@ -2258,6 +2258,26 @@ public long toMicros(long d) { return d / (C1 / C0); }\n         <source>\n &lt;module name=&quot;WhitespaceAfter&quot;/&gt;\n         </source>\n+          <p>Example:</p>\n+          <div class=\"wrapper\">\n+              <pre>\n+public class MyTest {\n+    public static void myTest() {\n+        if (foo) {              // OK\n+            //...\n+        } else if(bar) {        // violation\n+            //...\n+        }\n+\n+        testMethod(foo, bar);   // OK\n+        testMethod(foo,bar);    // violation\n+\n+        for(;;){}               // OK\n+    }\n+}\n+", "originalCommit": "725c167663719f9431bc15a02b2491d255af2c43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxNDAyMA==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r385514020", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-02-28T05:29:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4MDQyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4MDcwNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r385480705", "bodyText": "Please remove class definition, the less  unnecessary code in example the better.\nYour code is not compilable, so extra code does no good.", "author": "romani", "createdAt": "2020-02-28T02:37:52Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "diffHunk": "@@ -62,6 +62,23 @@\n  * <pre>\n  * &lt;module name=&quot;WhitespaceAfter&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class MyTest {", "originalCommit": "725c167663719f9431bc15a02b2491d255af2c43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxNDA4NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r385514085", "bodyText": "Excellent point. Fixed.", "author": "nmancus1", "createdAt": "2020-02-28T05:30:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4MDcwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4MDg5NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r385480895", "bodyText": "Do you know why this is ok ? If this is big it it is better to not put it in example.", "author": "romani", "createdAt": "2020-02-28T02:38:49Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "diffHunk": "@@ -62,6 +62,23 @@\n  * <pre>\n  * &lt;module name=&quot;WhitespaceAfter&quot;/&gt;\n  * </pre>\n+ * <p>Example:</p>\n+ * <pre>\n+ * public class MyTest {\n+ *  public static void myTest() {\n+ *      if (foo) {              // OK\n+ *              //...\n+ *      } else if(bar) {        // violation\n+ *              //...\n+ *      }\n+ *\n+ *      testMethod(foo, bar);   // OK\n+ *      testMethod(foo,bar);    // violation\n+ *\n+ *      for(;;){}               // OK", "originalCommit": "725c167663719f9431bc15a02b2491d255af2c43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NDkyMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7634#discussion_r385484922", "bodyText": "This is the intended behavior:\n\nChecks that a token is followed by whitespace, with the exception that it does not check for whitespace after the semicolon of an empty for iterator. Use Check EmptyForIteratorPad to validate empty for iterators.\n\nSo, I thought it best to show that.", "author": "nmancus1", "createdAt": "2020-02-28T02:58:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4MDg5NQ=="}], "type": "inlineReview"}, {"oid": "9ca5920d6da3a4a6f9a6993c315445ab065c413f", "url": "https://github.com/checkstyle/checkstyle/commit/9ca5920d6da3a4a6f9a6993c315445ab065c413f", "message": "Issue #7631: add code examples", "committedDate": "2020-02-28T13:21:38Z", "type": "commit"}]}