{"pr_number": 7995, "pr_title": "Issue #7626: Update doc for OperatorWrap", "pr_createdAt": "2020-03-29T22:14:46Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7995", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401891999", "bodyText": "// violation, '+' should be on new line violation is reported on '+' token. Violation comment should be on same line as violation reported", "author": "strkkk", "createdAt": "2020-04-01T20:33:13Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line", "originalCommit": "68224ad86f427a926c3731fedfcc58d4d1c828b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5NzIxMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401897211", "bodyText": "I cannot put th comment  on the above line because there will be a comment node ahead which will not violate the rule @strkkk", "author": "harsh-kukreja", "createdAt": "2020-04-01T20:43:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNTIzNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401915237", "bodyText": "I do not understand. I mean to do it like\nString s = \"Hello\" + // violation, '+' should be on new line\n         \"World\";", "author": "strkkk", "createdAt": "2020-04-01T21:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNTkxNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401915917", "bodyText": "Yes if i do that there no violation i tries this @strkkk", "author": "harsh-kukreja", "createdAt": "2020-04-01T21:19:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2ODUwMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402168503", "bodyText": "it looks like a bug to me.\n@romani @rnveach @pbludov\nIs OperatorWrapCheck should work like this? I mean, do not report violation in case where there is a trailing comment after operator, like\nString s = \"Hello\" + // should be violation, but not\n         \"World\"; \n\nseems weird.\nCheck only checks if rest of line after operator is blank, but single comments should be ignored as well.", "author": "strkkk", "createdAt": "2020-04-02T09:16:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2OTY3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402169671", "bodyText": "@harsh-kukreja anyway, then please ignore items about moving this comment.", "author": "strkkk", "createdAt": "2020-04-02T09:18:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwNDA0NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402404044", "bodyText": "Should i create a issue regarding this? @strkkk", "author": "harsh-kukreja", "createdAt": "2020-04-02T15:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1OTE1Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402559152", "bodyText": "@harsh-kukreja yes, please. It is a good catch.", "author": "strkkk", "createdAt": "2020-04-02T19:28:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MTk5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjEwNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892107", "bodyText": "same here", "author": "strkkk", "createdAt": "2020-04-01T20:33:27Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.", "originalCommit": "68224ad86f427a926c3731fedfcc58d4d1c828b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjM2OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892369", "bodyText": "please use common formatting and move rcurly to previous line", "author": "strkkk", "createdAt": "2020-04-01T20:33:57Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {", "originalCommit": "68224ad86f427a926c3731fedfcc58d4d1c828b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjQ1MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892450", "bodyText": "same here", "author": "strkkk", "createdAt": "2020-04-01T20:34:07Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) // ok\n+ *         {\n+ *         // body\n+ *         }\n+ *\n+ *         int c = 10 /\n+ *                 5; // violation, '/' should be on new line.", "originalCommit": "68224ad86f427a926c3731fedfcc58d4d1c828b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjUxNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892515", "bodyText": "same here", "author": "strkkk", "createdAt": "2020-04-01T20:34:13Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) // ok", "originalCommit": "68224ad86f427a926c3731fedfcc58d4d1c828b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MjU3OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401892579", "bodyText": "same here", "author": "strkkk", "createdAt": "2020-04-01T20:34:19Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) // ok\n+ *         {", "originalCommit": "68224ad86f427a926c3731fedfcc58d4d1c828b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401893000", "bodyText": "there is no need for so many examples, 2-3 is enough", "author": "strkkk", "createdAt": "2020-04-01T20:35:08Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -104,6 +135,65 @@\n  *   &lt;property name=\"option\" value=\"eol\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *             int b\n+ *                     = 10; // violation, '=' should be on previous line\n+ *             int c =\n+ *                     10; // ok\n+ *             b\n+ *                     += 10; // violation, '+=' should be on previous line\n+ *             b +=\n+ *                     10; // ok\n+ *             c\n+ *                     *= 10; // violation, '*=' should be on previous line\n+ *             c *=\n+ *                     10; // ok\n+ *             c\n+ *                     -= 5; // violation, '-=' should be on previous line\n+ *             c -=\n+ *                     5; // ok\n+ *             c\n+ *                     /= 2; // violation, '/=' should be on previous line\n+ *             c /=\n+ *                     2; // ok\n+ *             c\n+ *                     %= 1; // violation, '%=' should be on previous line\n+ *             c %=\n+ *                     1; // ok\n+ *             c\n+ *                     &gt;&gt;= 1; // violation, '&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;=\n+ *                     1; // ok\n+ *             c\n+ *                 &gt;&gt;&gt;= 1; // violation, '&gt;&gt;&gt;=' should be on previous line\n+ *             c &gt;&gt;&gt;=\n+ *                     1; // ok", "originalCommit": "68224ad86f427a926c3731fedfcc58d4d1c828b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5MDQ4Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402390487", "bodyText": "@strkkk  we need to show users case of every tokens which are there in the congif this is the reason i showed all the example as i did in #7831", "author": "harsh-kukreja", "createdAt": "2020-04-02T15:10:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NzEzNw==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402397137", "bodyText": "As for me, there is too much examples.\nOk, lets remove ok code examples and keep only 2 or 3 at the top.", "author": "strkkk", "createdAt": "2020-04-02T15:18:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2MDEzMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402560131", "bodyText": "this item is not corrected", "author": "strkkk", "createdAt": "2020-04-02T19:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxOTc1Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402619752", "bodyText": "What do u mean by it is not corrected @strkkk ?", "author": "harsh-kukreja", "createdAt": "2020-04-02T21:57:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYyMDA2OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402620068", "bodyText": "I have kept 4 Ok message code and remove rest of them is it fine @strkkk ?", "author": "harsh-kukreja", "createdAt": "2020-04-02T21:58:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5NjY0Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402896647", "bodyText": "@harsh-kukreja yes it is ok", "author": "strkkk", "createdAt": "2020-04-03T10:02:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzAwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzY2OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r401893669", "bodyText": "this wont compile because of duplicated variable", "author": "strkkk", "createdAt": "2020-04-01T20:36:29Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,37 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) // violation, '==' should be on new line.\n+ *         {\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) // ok\n+ *         {\n+ *         // body\n+ *         }\n+ *\n+ *         int c = 10 /\n+ *                 5; // violation, '/' should be on new line.\n+ *\n+ *         int c = c", "originalCommit": "68224ad86f427a926c3731fedfcc58d4d1c828b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "27de0deadf9fef5c76efd3e38b4dad45585e03db", "url": "https://github.com/checkstyle/checkstyle/commit/27de0deadf9fef5c76efd3e38b4dad45585e03db", "message": "Issue #7626: Update doc for OperatorWrap", "committedDate": "2020-04-02T15:21:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1OTc2Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402559763", "bodyText": "can be moved to previous line", "author": "strkkk", "createdAt": "2020-04-02T19:29:16Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "diffHunk": "@@ -94,6 +94,35 @@\n  * &lt;module name=\"OperatorWrap\"/&gt;\n  * </pre>\n  * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * class Test {\n+ *     public static void main(String[] args) {\n+ *         String s = \"Hello\" +\n+ *         \"World\"; // violation, '+' should be on new line\n+ *\n+ *         if (10 ==\n+ *                 20) { // violation, '==' should be on new line.\n+ *         // body\n+ *         }\n+ *         if (10\n+ *                 ==\n+ *                 20) { // ok\n+ *         // body\n+ *         }\n+ *\n+ *         int c = 10 /\n+ *                 5; // violation, '/' should be on new line.\n+ *\n+ *         int d = c\n+ *                 +\n+ *                 10; // ok", "originalCommit": "27de0deadf9fef5c76efd3e38b4dad45585e03db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5NzQ3NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7995#discussion_r402897474", "bodyText": "Done with the changes @strkkk", "author": "harsh-kukreja", "createdAt": "2020-04-03T10:03:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1OTc2Mw=="}], "type": "inlineReview"}, {"oid": "31c9ee212bbc1204a2a24f8930356db4e0b6e869", "url": "https://github.com/checkstyle/checkstyle/commit/31c9ee212bbc1204a2a24f8930356db4e0b6e869", "message": "Issue #7626: Update doc for OperatorWrap", "committedDate": "2020-04-02T22:01:48Z", "type": "forcePushed"}, {"oid": "c78708c5e46d2e75f12f675672a1a9b664be6ca6", "url": "https://github.com/checkstyle/checkstyle/commit/c78708c5e46d2e75f12f675672a1a9b664be6ca6", "message": "Issue #7626: Update doc for OperatorWrap", "committedDate": "2020-04-02T22:04:39Z", "type": "commit"}, {"oid": "c78708c5e46d2e75f12f675672a1a9b664be6ca6", "url": "https://github.com/checkstyle/checkstyle/commit/c78708c5e46d2e75f12f675672a1a9b664be6ca6", "message": "Issue #7626: Update doc for OperatorWrap", "committedDate": "2020-04-02T22:04:39Z", "type": "forcePushed"}]}