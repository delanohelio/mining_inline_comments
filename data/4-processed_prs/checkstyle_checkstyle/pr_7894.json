{"pr_number": 7894, "pr_title": "Issue #7128: customImportOrderRules does not support the default value", "pr_createdAt": "2020-03-18T14:53:09Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7894", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczOTE5MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r394739191", "bodyText": "I don't believe we are expected to create a special override for just this property.\n@romani Please confirm.", "author": "rnveach", "createdAt": "2020-03-19T01:32:07Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -1185,6 +1185,9 @@ else if (fieldClass == String[].class) {\n                     if (\"fileExtensions\".equals(propertyName)) {\n                         result = \"all files\";\n                     }\n+                    else if (\"customImportOrderRules\".equals(propertyName)) {", "originalCommit": "69a5502276541fe908e2867631023aab18084a77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk5ODQzNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r394998434", "bodyText": "I do not expect this change.\n@wltan , please explain.", "author": "romani", "createdAt": "2020-03-19T12:45:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczOTE5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwMDg1Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r395000853", "bodyText": "@romani This goes back to my post in #7128 (comment) .\nxdoc display is strictly controlled by UT and this code is related to the default value if it sees an empty list.", "author": "rnveach", "createdAt": "2020-03-19T12:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczOTE5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MDYwOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r395050609", "bodyText": "xdoc display is strictly controlled by UT and this code is related to the default value if it sees an empty list.\n\nYes, the UT wouldn't let me change the value to \"\" otherwise.\nI am however open to changing where exactly we want to make this change. Note how the changes above are in the else if (fieldClass == String[].class) { block, even if our property is set using a single String. Refer to this snippet:\n\n  \n    \n      checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java\n    \n    \n        Lines 857 to 864\n      in\n      aa5a9fd\n    \n    \n    \n    \n\n        \n          \n           final Field field = getField(instance.getClass(), propertyName); \n        \n\n        \n          \n           final Class<?> fieldClss = getFieldClass(fileName, sectionName, instance, field, \n        \n\n        \n          \n                   propertyName); \n        \n\n        \n          \n            \n        \n\n        \n          \n           final String expectedTypeName = getModulePropertyExpectedTypeName(sectionName, fieldClss, \n        \n\n        \n          \n                   instance, propertyName); \n        \n\n        \n          \n           final String expectedValue = getModulePropertyExpectedValue(sectionName, propertyName, \n        \n\n        \n          \n                   field, fieldClss, instance); \n        \n    \n  \n\n\nThe root cause is that right now the field for customImportOrderRules is a List<String>, so getFieldClass is returning String[].class. If you want it to be String.class instead, then some additional modifications will have to be made.", "author": "wltan", "createdAt": "2020-03-19T14:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczOTE5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEwMDUwMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r396100501", "bodyText": "Check should reserve user defined value as is, so field should be changed to have String type String customImportOrderRules;.\nBut we need to create new field List<String> customOrderRules; that keeps parsed value from user input, user defined value will not be used in Check at all , except for creation of customOrderRules in setter.", "author": "romani", "createdAt": "2020-03-22T14:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczOTE5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEwOTM1OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r396109358", "bodyText": "I've made the requested changes and the hardcoding above is no longer required, so it has been removed.\nThere were some minor problems with PMD which doesn't like the field to be unused so I made a few adjustments to setCustomImportOrderRules to use and assign to it.", "author": "wltan", "createdAt": "2020-03-22T15:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczOTE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwMzAwOA==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r395003008", "bodyText": "we try to force us to create Input file for each test and place config in Input file.\nexample: https://github.com/checkstyle/checkstyle/blob/master/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadoccontentlocation/InputJavadocContentLocationFirstLine.java#L3", "author": "romani", "createdAt": "2020-03-19T12:54:06Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "diffHunk": "@@ -157,6 +157,20 @@ public void testNonSpecifiedImports() throws Exception {\n         verify(checkConfig, getPath(\"InputCustomImportOrderDefault.java\"), expected);\n     }\n \n+    @Test\n+    public void testOrderRuleEmpty() throws Exception {\n+        final DefaultConfiguration checkConfig =\n+                createModuleConfig(CustomImportOrderCheck.class);\n+        checkConfig.addAttribute(\"customImportOrderRules\", \"\");\n+        final String[] expected = {\n+            \"7: \" + getCheckMessage(MSG_SEPARATED_IN_GROUP, \"java.util.List\"),\n+            \"13: \" + getCheckMessage(MSG_SEPARATED_IN_GROUP, \"com.puppycrawl.tools.*\"),\n+            \"16: \" + getCheckMessage(MSG_SEPARATED_IN_GROUP, \"com.google.common.base.*\"),\n+        };\n+\n+        verify(checkConfig, getPath(\"InputCustomImportOrderDefault2.java\"), expected);", "originalCommit": "69a5502276541fe908e2867631023aab18084a77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1NjI5NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r395056294", "bodyText": "Will do", "author": "wltan", "createdAt": "2020-03-19T14:14:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwMzAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA5OTY1MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r396099650", "bodyText": "please do not reply anything to review item except for \"done\" or any other clarification.\nyou will do this fores sure, I need clear signal when you are ready for review.\nthis is still not done.", "author": "romani", "createdAt": "2020-03-22T14:27:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwMzAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEwODY0Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r396108643", "bodyText": "Sorry about that, was hoping to get clarification on the earlier point before pushing everything together.\nFix has been pushed and ready for review.", "author": "wltan", "createdAt": "2020-03-22T15:50:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwMzAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwNDEzMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r395004133", "bodyText": "do we need this condition ?\nwhat is side effect if we do not have it.", "author": "romani", "createdAt": "2020-03-19T12:56:14Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "diffHunk": "@@ -492,10 +492,12 @@ public final void setSortImportsInGroupAlphabetically(boolean value) {\n      *        user value.\n      */\n     public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n-        for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n-            addRulesToList(currentState);\n+        if (!inputCustomImportOrder.isEmpty()) {", "originalCommit": "69a5502276541fe908e2867631023aab18084a77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAyMjY3OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r395022679", "bodyText": "This is from your #7128 (comment).\n\nSetter need to be updated to expect empty string and keep empty list for customImportOrderRules class field.\n\nThere is a difference with and without the condition. Since we say that \"\" is the default value, suppose the user actually sets the value explicitly to \"\":\nD:\\checkstyletest>type config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd\">\n\n<module name = \"Checker\">\n    <module name=\"TreeWalker\">\n        <module name=\"CustomImportOrder\">\n            <property name=\"customImportOrderRules\" value=\"\"/>\n        </module>\n    </module>\n</module>\n\nOn the current release, this causes Checkstyle to crash:\nD:\\checkstyletest>java -jar -Duser.language=en -Duser.country=US checkstyle-8.30-all.jar -c config.xml test\\*.java\ncom.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module TreeWalker - cannot initialize module CustomImportOrder - Cannot set property 'customImportOrderRules' to ''\n        at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:473)\n        at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198)\n        at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:396)\n        at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:324)\n        at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:187)\n        at com.puppycrawl.tools.checkstyle.Main.main(Main.java:124)\nCaused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module CustomImportOrder - Cannot set property 'customImportOrderRules' to ''\n        at com.puppycrawl.tools.checkstyle.TreeWalker.setupChild(TreeWalker.java:135)\n        at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198)\n        at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:468)\n        ... 5 more\nCaused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Cannot set property 'customImportOrderRules' to ''\n        at com.puppycrawl.tools.checkstyle.api.AutomaticBean.tryCopyProperty(AutomaticBean.java:237)\n        at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:191)\n        at com.puppycrawl.tools.checkstyle.TreeWalker.setupChild(TreeWalker.java:130)\n        ... 7 more\nCaused by: java.lang.reflect.InvocationTargetException\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.base/java.lang.reflect.Method.invoke(Method.java:566)\n        at org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(PropertyUtilsBean.java:2128)\n        at org.apache.commons.beanutils.PropertyUtilsBean.setSimpleProperty(PropertyUtilsBean.java:2109)\n        at org.apache.commons.beanutils.BeanUtilsBean.copyProperty(BeanUtilsBean.java:437)\n        at com.puppycrawl.tools.checkstyle.api.AutomaticBean.tryCopyProperty(AutomaticBean.java:227)\n        ... 9 more\nCaused by: java.lang.IllegalStateException: Unexpected rule:\n        at com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck.addRulesToList(CustomImportOrderCheck.java:913)\n        at com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck.setCustomImportOrderRules(CustomImportOrderCheck.java:496)\n        ... 17 more\nCheckstyle ends with 1 errors.\n\nWith the additional condition, we can prevent that from happening:\nD:\\checkstyletest>type config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n          \"http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd\">\n\n<module name = \"Checker\">\n    <module name=\"TreeWalker\">\n        <module name=\"CustomImportOrder\">\n            <property name=\"customImportOrderRules\" value=\"\"/>\n        </module>\n    </module>\n</module>\n\nD:\\checkstyletest>type test\\*.java\n\ntest\\Test.java\n\n\nimport java.util.Scanner;\n\npublic class Test {\n\n}\n\nD:\\checkstyletest>java -jar -Duser.language=en -Duser.country=US checkstyle-8.31-SNAPSHOT-all.jar -c config.xml test\\*.java\nStarting audit...\nAudit done.", "author": "wltan", "createdAt": "2020-03-19T13:26:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwNDEzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA5OTQ0OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r396099449", "bodyText": "thanks a lot for explanation.", "author": "romani", "createdAt": "2020-03-22T14:25:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwNDEzMw=="}], "type": "inlineReview"}, {"oid": "1474e067437378f18291b3233072a95a87546f60", "url": "https://github.com/checkstyle/checkstyle/commit/1474e067437378f18291b3233072a95a87546f60", "message": "Issue #7128: CustomImportOrderCheck.customImportOrderRules does not support the default value", "committedDate": "2020-03-22T15:44:40Z", "type": "forcePushed"}, {"oid": "ebaf3ae05717becf908dace52d14ae9506abe71b", "url": "https://github.com/checkstyle/checkstyle/commit/ebaf3ae05717becf908dace52d14ae9506abe71b", "message": "Issue #7128: CustomImportOrderCheck.customImportOrderRules does not support the default value", "committedDate": "2020-03-29T07:26:24Z", "type": "forcePushed"}, {"oid": "6da5296a69de9a4ac256a6b8ed944d52169e165e", "url": "https://github.com/checkstyle/checkstyle/commit/6da5296a69de9a4ac256a6b8ed944d52169e165e", "message": "Issue #7128: CustomImportOrderCheck.customImportOrderRules does not support the default value", "committedDate": "2020-04-10T13:58:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MDczNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r407070736", "bodyText": "list => format", "author": "rnveach", "createdAt": "2020-04-11T14:32:27Z", "path": "src/xdocs/config_imports.xml", "diffHunk": "@@ -427,7 +427,7 @@ import com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck;\n               <td>customImportOrderRules</td>\n               <td>Specify list of order declaration customizing by user.</td>", "originalCommit": "6da5296a69de9a4ac256a6b8ed944d52169e165e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3Mjg5Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r407072893", "bodyText": "Fixed", "author": "wltan", "createdAt": "2020-04-11T14:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MDczNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MTU2NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r407071564", "bodyText": "after very long conversation with @rnveach , we agreed to keep \"\" as value, but we need to remove list from description to avoid confusion\nplease update to\nSpecify format of order declaration customizing by user.", "author": "romani", "createdAt": "2020-04-11T14:40:37Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "diffHunk": "@@ -136,7 +136,7 @@\n  * <ul>\n  * <li>\n  * Property {@code customImportOrderRules} - Specify list of order declaration customizing by user.", "originalCommit": "6da5296a69de9a4ac256a6b8ed944d52169e165e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MjA5OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7894#discussion_r407072099", "bodyText": "moved to #7894 (comment)", "author": "romani", "createdAt": "2020-04-11T14:45:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA3MTU2NA=="}], "type": "inlineReview"}, {"oid": "524460b00dc2b4dfc8b12faa71386b9fa6f0b402", "url": "https://github.com/checkstyle/checkstyle/commit/524460b00dc2b4dfc8b12faa71386b9fa6f0b402", "message": "Issue #7128: CustomImportOrderCheck.customImportOrderRules does not support the default value", "committedDate": "2020-04-11T14:51:32Z", "type": "forcePushed"}, {"oid": "915585bd080fe438a81cbcfdd87045b9c52d89a0", "url": "https://github.com/checkstyle/checkstyle/commit/915585bd080fe438a81cbcfdd87045b9c52d89a0", "message": "Issue #7128: CustomImportOrderCheck.customImportOrderRules does not support the default value", "committedDate": "2020-04-12T10:27:10Z", "type": "commit"}, {"oid": "915585bd080fe438a81cbcfdd87045b9c52d89a0", "url": "https://github.com/checkstyle/checkstyle/commit/915585bd080fe438a81cbcfdd87045b9c52d89a0", "message": "Issue #7128: CustomImportOrderCheck.customImportOrderRules does not support the default value", "committedDate": "2020-04-12T10:27:10Z", "type": "forcePushed"}]}