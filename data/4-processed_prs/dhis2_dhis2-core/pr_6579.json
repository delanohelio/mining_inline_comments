{"pr_number": 6579, "pr_title": "fix: support serialize embeddedObject for audit", "pr_createdAt": "2020-11-05T19:10:58Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6579", "timeline": [{"oid": "92419007414a8304591d089ca2d9a6392aded749", "url": "https://github.com/dhis2/dhis2-core/commit/92419007414a8304591d089ca2d9a6392aded749", "message": "fix: support serialize embeddedObject for audit", "committedDate": "2020-11-05T19:09:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzOTcwMA==", "url": "https://github.com/dhis2/dhis2-core/pull/6579#discussion_r518639700", "bodyText": "Double newline", "author": "netroms", "createdAt": "2020-11-06T09:52:21Z", "path": "dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/listener/AbstractHibernateListener.java", "diffHunk": "@@ -210,32 +225,62 @@ protected Object createAuditEntry( Object entity, Object[] state, EventSource se\n                 }\n             }\n \n-            if ( value != null )\n+            if ( value == null )\n             {\n-                if ( property.isCollection() && BaseIdentifiableObject.class.isAssignableFrom( property.getItemKlass() ) )\n+                continue;\n+            }\n+\n+            else if ( property.isCollection() && BaseIdentifiableObject.class.isAssignableFrom( property.getItemKlass() ) )\n+            {\n+                objectMap.put( pName, IdentifiableObjectUtils.getUids( (Collection) value ) );\n+            }\n+            else\n+            {\n+                objectMap.put( pName, getId( value ) );\n+            }\n+        }\n+\n+        return objectMap;\n+    }\n+\n+    private Map<String, Object> handleEmbeddedObject( Schema schema, Object value, EntityPersister persister )\n+    {\n+        Map<String, Object> map = new HashMap<>();\n+\n+        Map<String, Property> properties = schema.getFieldNameMapProperties();\n+        properties.forEach( (pName, property) -> {\n+\n+            Object propertyValue =  ReflectionUtils.invokeMethod( value, property.getGetterMethod() );\n+            if ( BaseIdentifiableObject.class.isAssignableFrom( property.getItemKlass() ) )\n+            {\n+                if ( property.isCollection() )\n                 {\n-                    objectMap.put( pName, IdentifiableObjectUtils.getUids( (Collection) value ) );\n+                    map.put( pName, IdentifiableObjectUtils.getUids( (Collection) propertyValue ) );\n                 }\n                 else\n                 {\n-                    objectMap.put( pName, getId( value ) );\n+                    map.put( pName, getId( propertyValue ) );\n                 }\n             }\n-        }\n+            else\n+            {\n+                map.put( pName, propertyValue );\n+            }\n \n-        return objectMap;\n+", "originalCommit": "92419007414a8304591d089ca2d9a6392aded749", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a7335ffee7b9f22d50ee263345b0ed7c1c289c90", "url": "https://github.com/dhis2/dhis2-core/commit/a7335ffee7b9f22d50ee263345b0ed7c1c289c90", "message": "fix: save audit attributes for non-owner properties", "committedDate": "2020-11-09T21:36:48Z", "type": "commit"}, {"oid": "a7335ffee7b9f22d50ee263345b0ed7c1c289c90", "url": "https://github.com/dhis2/dhis2-core/commit/a7335ffee7b9f22d50ee263345b0ed7c1c289c90", "message": "fix: save audit attributes for non-owner properties", "committedDate": "2020-11-09T21:36:48Z", "type": "forcePushed"}]}