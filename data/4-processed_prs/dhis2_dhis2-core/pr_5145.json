{"pr_number": 5145, "pr_title": "fix: Add index to trackedentityattributevalue table", "pr_createdAt": "2020-03-20T15:09:07Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/5145", "timeline": [{"oid": "fcb24e9a349f8a13e201a9afaa6e44bafc2c6f1a", "url": "https://github.com/dhis2/dhis2-core/commit/fcb24e9a349f8a13e201a9afaa6e44bafc2c6f1a", "message": "Add flyway script for adding btree index to trackedentityattributevalue table", "committedDate": "2020-03-20T15:07:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcxOTIxMg==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r395719212", "bodyText": "Perhaps add a bit more:\n\nCould not add btree-index to table 'trackedentityattributevalue', likely because the value column contains values which are longer than the index max size:\n\nAnd use String.format()", "author": "larshelge", "createdAt": "2020-03-20T15:36:35Z", "path": "dhis-2/dhis-support/dhis-support-db-migration/src/main/java/org/hisp/dhis/db/migration/v34/V2_34_22__Add_teav_btree_index.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.hisp.dhis.db.migration.v34;\n+\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+public class V2_34_22__Add_teav_btree_index extends BaseJavaMigration\n+{\n+    private static final Logger log = LoggerFactory.getLogger( V2_34_22__Add_teav_btree_index.class );\n+\n+    @Override\n+    public void migrate( Context context )\n+        throws Exception\n+    {\n+        try ( Statement statement = context.getConnection().createStatement() )\n+        {\n+            statement.execute( \"create index in_attribute_value on trackedentityattributevalue using btree (trackedentityattributeid, lower(value)) \" );\n+        }\n+        catch ( SQLException sqlException )\n+        {\n+            log.warn( \"Could not add btree-index to table 'trackedentityattributevalue': \" + sqlException.getMessage() );", "originalCommit": "fcb24e9a349f8a13e201a9afaa6e44bafc2c6f1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMTAwMg==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r396121002", "bodyText": "I think we need to enforce a max length (e.g. 1200) on TEI attribute values in the same PR to avoid too long values failing to be persisted.", "author": "larshelge", "createdAt": "2020-03-22T17:43:16Z", "path": "dhis-2/dhis-support/dhis-support-db-migration/src/main/java/org/hisp/dhis/db/migration/v34/V2_34_22__Add_teav_btree_index.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.hisp.dhis.db.migration.v34;\n+\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+public class V2_34_22__Add_teav_btree_index extends BaseJavaMigration\n+{\n+    private static final Logger log = LoggerFactory.getLogger( V2_34_22__Add_teav_btree_index.class );\n+\n+    @Override\n+    public void migrate( Context context )\n+        throws Exception\n+    {\n+        try ( Statement statement = context.getConnection().createStatement() )\n+        {\n+            statement.execute( \"create index in_attribute_value on trackedentityattributevalue using btree (trackedentityattributeid, lower(value)) \" );", "originalCommit": "fcb24e9a349f8a13e201a9afaa6e44bafc2c6f1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8b9bc4ba295fa0cee174ccf9865e949eab963154", "url": "https://github.com/dhis2/dhis2-core/commit/8b9bc4ba295fa0cee174ccf9865e949eab963154", "message": "Add test. Add validation for string length. Add upgrade for varchar(1200)", "committedDate": "2020-03-23T14:56:50Z", "type": "commit"}, {"oid": "0fcb0879d26e0230e556466e7e44c4efa29c13e9", "url": "https://github.com/dhis2/dhis2-core/commit/0fcb0879d26e0230e556466e7e44c4efa29c13e9", "message": "codestyle", "committedDate": "2020-03-23T14:59:15Z", "type": "commit"}, {"oid": "786691f6791bcf2c1292854e232eb9f84edaf46d", "url": "https://github.com/dhis2/dhis2-core/commit/786691f6791bcf2c1292854e232eb9f84edaf46d", "message": "Add constant when refering to max value size. Fixed minor issues. Added String.format.", "committedDate": "2020-03-24T08:36:51Z", "type": "commit"}, {"oid": "5261275ff18c69131d6223f4f16efa18e525c07c", "url": "https://github.com/dhis2/dhis2-core/commit/5261275ff18c69131d6223f4f16efa18e525c07c", "message": "Made COP_POST_URL static", "committedDate": "2020-03-24T08:40:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk5MzU0MA==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r396993540", "bodyText": "Lets move \"1200\" to a constant and re-use across the classes.", "author": "larshelge", "createdAt": "2020-03-24T09:00:55Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/enrollment/AbstractEnrollmentService.java", "diffHunk": "@@ -1215,6 +1215,14 @@ private boolean doValidationOfMandatoryAttributes( User user )\n                 continue;\n             }\n \n+\n+            if ( attributeValueMap.get( trackedEntityAttribute.getUid() ).length() > 1200 )", "originalCommit": "0fcb0879d26e0230e556466e7e44c4efa29c13e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk5Mzc0Mg==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r396993742", "bodyText": "Code style,  space.", "author": "larshelge", "createdAt": "2020-03-24T09:01:16Z", "path": "dhis-2/dhis-support/dhis-support-db-migration/src/main/java/org/hisp/dhis/db/migration/v34/V2_34_22__Add_teav_btree_index.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.hisp.dhis.db.migration.v34;\n+\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+public class V2_34_22__Add_teav_btree_index\n+    extends BaseJavaMigration\n+{\n+\n+    private final String COP_POST_URL = \"https://community.dhis2.org/t/draft-important-database-upgrade-for-tracker-performance/38766\";\n+\n+    @Override\n+    public void migrate( Context context )\n+        throws Exception\n+    {\n+        try (Statement statement = context.getConnection().createStatement())", "originalCommit": "0fcb0879d26e0230e556466e7e44c4efa29c13e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk5NDAyOA==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r396994028", "bodyText": "Add class javadoc about what this migration is doing and the \"special case\" of catching failing index creation.", "author": "larshelge", "createdAt": "2020-03-24T09:01:45Z", "path": "dhis-2/dhis-support/dhis-support-db-migration/src/main/java/org/hisp/dhis/db/migration/v34/V2_34_22__Add_teav_btree_index.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.hisp.dhis.db.migration.v34;\n+\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+public class V2_34_22__Add_teav_btree_index", "originalCommit": "0fcb0879d26e0230e556466e7e44c4efa29c13e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk5NDE2OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r396994169", "bodyText": "Use constant for 1200.", "author": "larshelge", "createdAt": "2020-03-24T09:01:58Z", "path": "dhis-2/dhis-support/dhis-support-db-migration/src/main/java/org/hisp/dhis/db/migration/v34/V2_34_22__Add_teav_btree_index.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.hisp.dhis.db.migration.v34;\n+\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+public class V2_34_22__Add_teav_btree_index\n+    extends BaseJavaMigration\n+{\n+\n+    private final String COP_POST_URL = \"https://community.dhis2.org/t/draft-important-database-upgrade-for-tracker-performance/38766\";\n+\n+    @Override\n+    public void migrate( Context context )\n+        throws Exception\n+    {\n+        try (Statement statement = context.getConnection().createStatement())\n+        {\n+            statement\n+                .execute( \"alter table trackedentityattributevalue alter column value set data type varchar(1200)\" );\n+            statement.execute(\n+                \"create index in_trackedentity_attribute_value on trackedentityattributevalue using btree (trackedentityattributeid, lower(value)) \" );\n+        }\n+        catch ( SQLException sqlException )\n+        {\n+            StringBuilder stringBuilder = new StringBuilder(  );\n+\n+            stringBuilder\n+                .append( \"Could not perform upgrade of table 'trackedentityattributevalue'. \" )\n+                .append( \"Column 'value' should be altered to data type varchar(1200) and receive a new index. \" )", "originalCommit": "0fcb0879d26e0230e556466e7e44c4efa29c13e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA0MzE1MA==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r397043150", "bodyText": "Is this URL available right now? Or is it private? When I tried it said \"Page doesnt exist, or is private\"", "author": "ameenhere", "createdAt": "2020-03-24T10:20:44Z", "path": "dhis-2/dhis-support/dhis-support-db-migration/src/main/java/org/hisp/dhis/db/migration/v34/V2_34_22__Add_teav_btree_index.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.hisp.dhis.db.migration.v34;\n+\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import static org.hisp.dhis.trackedentity.TrackedEntityAttributeService.TEA_VALUE_MAX_LENGTH;\n+\n+/**\n+ * This Java migration changes the data type of the 'value' column in trackedentityattributevalue table to varchar(1200).\n+ * Additionally we put a btree index on the same table, to improve performance of lookup.\n+ * This upograde will fail is any value in the table exceeds 1200 characters. Due to this, we catch any SQLException and\n+ * write a custom message, including a link to a community.dhis2.org post explaining this upgrade, and how to deal with any\n+ * upgrade failures.\n+ *\n+ * @author Stian\n+ */\n+public class V2_34_22__Add_teav_btree_index\n+    extends BaseJavaMigration\n+{\n+    private final static String COP_POST_URL = \"https://community.dhis2.org/t/draft-important-database-upgrade-for-tracker-performance/38766\";", "originalCommit": "5261275ff18c69131d6223f4f16efa18e525c07c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA0NjM0OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r397046349", "bodyText": "That URL points to a draft that is locked in COP. I will update the URL when the post have been published and gotten a final URL :)", "author": "stian-sandvold", "createdAt": "2020-03-24T10:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA0MzE1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4NzQ0OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r397087449", "bodyText": "Break on multiple lines with + to avoid weirdness in IDEs.", "author": "larshelge", "createdAt": "2020-03-24T11:38:42Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/events/TrackedEntityInstanceServiceTest.java", "diffHunk": "@@ -503,6 +512,42 @@ public void testDeleteTrackedEntityInstances()\n         assertNull( trackedEntityInstanceService.getTrackedEntityInstance( maleB.getUid() ) );\n     }\n \n+    @Test\n+    public void testTooLongTrackedEntityAttributeValue()\n+    {\n+        TrackedEntityInstance tei = new TrackedEntityInstance();\n+\n+        Attribute attribute = new AttributeoriginalCommit": "5261275ff18c69131d6223f4f16efa18e525c07c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fd2ac0665fd973e8c9b72f64d6225b56a30564f1", "url": "https://github.com/dhis2/dhis2-core/commit/fd2ac0665fd973e8c9b72f64d6225b56a30564f1", "message": "Clean up test", "committedDate": "2020-03-24T16:40:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgxODcwNQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5145#discussion_r397818705", "bodyText": "Codestyle, 4 space indent.", "author": "larshelge", "createdAt": "2020-03-25T12:34:09Z", "path": "dhis-2/dhis-support/dhis-support-db-migration/src/main/java/org/hisp/dhis/db/migration/v34/V2_34_22__Add_teav_btree_index.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.hisp.dhis.db.migration.v34;\n+\n+import org.flywaydb.core.api.migration.BaseJavaMigration;\n+import org.flywaydb.core.api.migration.Context;\n+\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import static org.hisp.dhis.trackedentity.TrackedEntityAttributeService.TEA_VALUE_MAX_LENGTH;\n+\n+/**\n+ * This Java migration changes the data type of the 'value' column in trackedentityattributevalue table to varchar(1200).\n+ * Additionally we put a btree index on the same table, to improve performance of lookup.\n+ * This upograde will fail is any value in the table exceeds 1200 characters. Due to this, we catch any SQLException and\n+ * write a custom message, including a link to a community.dhis2.org post explaining this upgrade, and how to deal with any\n+ * upgrade failures.\n+ *\n+ * @author Stian\n+ */\n+public class V2_34_22__Add_teav_btree_index\n+    extends BaseJavaMigration\n+{\n+    private final static String COP_POST_URL = \"https://community.dhis2.org/t/draft-important-database-upgrade-for-tracker-performance/38766\";\n+\n+    @Override\n+    public void migrate( Context context )\n+        throws Exception\n+    {\n+        try ( Statement statement = context.getConnection().createStatement() )\n+        {\n+            statement\n+                .execute( String.format( \"alter table trackedentityattributevalue alter column value set data type varchar(1200)\", TEA_VALUE_MAX_LENGTH ) );\n+            statement.execute(\n+                \"create index in_trackedentity_attribute_value on trackedentityattributevalue using btree (trackedentityattributeid, lower(value)) \" );\n+        }\n+        catch ( SQLException sqlException )\n+        {\n+            String message = \"Could not perform upgrade of table 'trackedentityattributevalue'. \" +\n+                    String.format( \"Column 'value' should be altered to data type varchar(%s) and receive a new index. \", TEA_VALUE_MAX_LENGTH ) +", "originalCommit": "fd2ac0665fd973e8c9b72f64d6225b56a30564f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1d9f2bde43fb2e95487f3c5fca7fc830798461fd", "url": "https://github.com/dhis2/dhis2-core/commit/1d9f2bde43fb2e95487f3c5fca7fc830798461fd", "message": "minor", "committedDate": "2020-03-26T13:28:02Z", "type": "commit"}, {"oid": "3631930e4d1aaccc9ca5a4ba3c8f8e5a6cab7366", "url": "https://github.com/dhis2/dhis2-core/commit/3631930e4d1aaccc9ca5a4ba3c8f8e5a6cab7366", "message": "fix: Made addTeavBtreeIndex script to execute outside main transaction", "committedDate": "2020-03-26T15:04:24Z", "type": "commit"}, {"oid": "9aceb273c14f023de1eef5e2259bb85b4c9d054c", "url": "https://github.com/dhis2/dhis2-core/commit/9aceb273c14f023de1eef5e2259bb85b4c9d054c", "message": "minor", "committedDate": "2020-03-27T10:16:01Z", "type": "commit"}, {"oid": "7d6f027d68a7f881e810dc9e5b1988174c7132dc", "url": "https://github.com/dhis2/dhis2-core/commit/7d6f027d68a7f881e810dc9e5b1988174c7132dc", "message": "merge from master", "committedDate": "2020-03-31T12:55:41Z", "type": "commit"}, {"oid": "8b96e1a3371fe60a3bee61ddabecc6a91882abe0", "url": "https://github.com/dhis2/dhis2-core/commit/8b96e1a3371fe60a3bee61ddabecc6a91882abe0", "message": "Add correct URL for log", "committedDate": "2020-03-31T13:03:00Z", "type": "commit"}]}