{"pr_number": 5016, "pr_title": "fix: Function hasValue for indicators", "pr_createdAt": "2020-03-05T20:56:39Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/5016", "timeline": [{"oid": "33d335c1e3764c9d55dd2f9023075e3d4d641d04", "url": "https://github.com/dhis2/dhis2-core/commit/33d335c1e3764c9d55dd2f9023075e3d4d641d04", "message": "fix: hasValue function for indicators", "committedDate": "2020-03-05T20:54:35Z", "type": "commit"}, {"oid": "110e3ac538e3cfac610f88957a08672428c85a9c", "url": "https://github.com/dhis2/dhis2-core/commit/110e3ac538e3cfac610f88957a08672428c85a9c", "message": "Merge branch 'master' into fix-DHIS2-8124", "committedDate": "2020-03-16T03:20:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyODk3Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/5016#discussion_r393328976", "bodyText": "I'm guessing this is commented out because dhis2/dhis2-antlr-expression-parser#7 had not yet been merged. But perhaps it could be commented back in now, since the other PR has now been merged?", "author": "jimgrace", "createdAt": "2020-03-16T21:49:22Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/variable/ProgramVariableItem.java", "diffHunk": "@@ -49,6 +49,7 @@\n         .put( V_ANALYTICS_PERIOD_START, new vAnalyticsPeriodStart() )\n         .put( V_CREATION_DATE, new vCreationDate() )\n         .put( V_CURRENT_DATE, new vCurrentDate() )\n+       // .put( V_COMPLETED_DATE, new vCompletedDate() )", "originalCommit": "33d335c1e3764c9d55dd2f9023075e3d4d641d04", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzMDU5Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/5016#discussion_r393330596", "bodyText": "I believe this logic came from @Bekkalizer, so I trust that. But I wonder if it should also be applied in other places where getProgramIndicatorEventColumnSql is used like vEventDate, vCreationDate, and ProgramBetweenFunction.getCompareDate. We don't need to change this method, but it would be worth asking Marcus about the others.", "author": "jimgrace", "createdAt": "2020-03-16T21:53:04Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/variable/vCompletedDate.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.hisp.dhis.program.variable;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.hisp.dhis.parser.expression.CommonExpressionVisitor;\n+import org.hisp.dhis.program.AnalyticsType;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+public class vCompletedDate extends ProgramDateVariable\n+{\n+    @Override\n+    public Object getSql( CommonExpressionVisitor visitor )\n+    {\n+        if ( AnalyticsType.EVENT == visitor.getProgramIndicator().getAnalyticsType() )\n+        {\n+            return \"completeddate\";\n+        }", "originalCommit": "33d335c1e3764c9d55dd2f9023075e3d4d641d04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1MDg4MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5016#discussion_r396950881", "bodyText": "@Bekkalizer your confirmation is required here.", "author": "zubaira", "createdAt": "2020-03-24T07:39:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzMDU5Ng=="}], "type": "inlineReview"}, {"oid": "3b66cd41b7c435d467262ea262535d725472908f", "url": "https://github.com/dhis2/dhis2-core/commit/3b66cd41b7c435d467262ea262535d725472908f", "message": "fix: comment out new variable", "committedDate": "2020-03-18T14:19:24Z", "type": "commit"}]}