{"pr_number": 2140, "pr_title": "[build] master is 3.4 Europium, introduce new versioning scheme", "pr_createdAt": "2020-04-30T10:01:57Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2140", "timeline": [{"oid": "e9fba9928bdcc29ccba1c278d5b5a44b3230d56f", "url": "https://github.com/reactor/reactor-core/commit/e9fba9928bdcc29ccba1c278d5b5a44b3230d56f", "message": "[build] Prepare 3.4.x and switch+explain new versioning scheme", "committedDate": "2020-04-30T09:59:40Z", "type": "commit"}, {"oid": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "url": "https://github.com/reactor/reactor-core/commit/e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "message": "fix perfBaselineVersion, let japicmp raise incompatibilities for now", "committedDate": "2020-04-30T09:59:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjM3OA==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417922378", "bodyText": "shouldn't we use 3.4.0-SNAPSHOT here? 3.4.0 is not released yet, so it can be a bit misleading", "author": "bsideup", "createdAt": "2020-04-30T10:49:05Z", "path": "README.md", "diffHunk": "@@ -29,10 +29,10 @@ With Gradle from repo.spring.io or Maven Central repositories (stable releases o\n     }\n \n     dependencies {\n-      //compile \"io.projectreactor:reactor-core:3.3.6.BUILD-SNAPSHOT\"\n-      //testCompile(\"io.projectreactor:reactor-test:3.3.6.BUILD-SNAPSHOT\")\n-      compile \"io.projectreactor:reactor-core:3.3.5.RELEASE\"\n-      testCompile(\"io.projectreactor:reactor-test:3.3.5.RELEASE\")\n+      //compile \"io.projectreactor:reactor-core:3.4.1-SNAPSHOT\"", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkzMjM3MQ==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417932371", "bodyText": "yeah we can. first release won't be able to use the bumpVersionInReadme task, so I had the change upfront, but we'll need to remember to do it manually instead.", "author": "simonbasle", "createdAt": "2020-04-30T11:09:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjM3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjc3NQ==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417922775", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tif (version.contains('.BUILD-SNAPSHOT') || version.contains('-SNAPSHOT')) {\n          \n          \n            \n            \tif (version.endsWith('-SNAPSHOT')) {", "author": "bsideup", "createdAt": "2020-04-30T10:49:52Z", "path": "build.gradle", "diffHunk": "@@ -106,7 +106,7 @@ configure(subprojects) { p ->\n \n   repositories {\n \tmavenLocal()\n-\tif (version.endsWith('BUILD-SNAPSHOT')) {\n+\tif (version.contains('.BUILD-SNAPSHOT') || version.contains('-SNAPSHOT')) {", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNDg0OQ==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417924849", "bodyText": "the feature that allows us to build snapshot jars from unmerged branches without polluting the main published snapshots now produces version in the format MAJOR.MINOR.PATCH-SNAPSHOT-customQualifier, hence the switch to contains... but at the same time I can fully drop support for BUILD-SNAPSHOT I guess", "author": "simonbasle", "createdAt": "2020-04-30T10:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNjYxNA==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417926614", "bodyText": "do we still do branch pushes? I'd rather prefer Jitpack for it :)", "author": "bsideup", "createdAt": "2020-04-30T10:57:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkzMTYwNA==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417931604", "bodyText": "how about if (version.endsWith('-SNAPSHOT') || version.contains('-SNAPSHOT-')) { //classic or customized snapshots @bsideup ?", "author": "simonbasle", "createdAt": "2020-04-30T11:07:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkzNDQxNg==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417934416", "bodyText": "Does not make me love Jitpack less but fine :D", "author": "bsideup", "createdAt": "2020-04-30T11:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjc3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjk1Mw==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417922953", "bodyText": "can be adjusted to just \"ends with -SNAPSHOT\"", "author": "bsideup", "createdAt": "2020-04-30T10:50:16Z", "path": "buildSrc/src/main/java/io/reactor/gradle/CustomVersionPlugin.java", "diffHunk": "@@ -24,8 +24,8 @@\n \n /**\n  * Looks for a {@code -PversionBranch=foo} type of property and uses that as an additional\n- * suffix between the patch number and the snapshot qualifier ({@code .BUILD-SNAPSHOT}), in\n- * order to generate branch-specific snapshots that can be used to eg. validate a PR.\n+ * suffix after the snapshot qualifier (either {@code .BUILD-SNAPSHOT} or {@code -SNAPSHOT}),", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNTYzMQ==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417925631", "bodyText": "yeah I guess we can fully drop support of the .BUILD-SNAPSHOT in this branch.", "author": "simonbasle", "createdAt": "2020-04-30T10:55:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMjk1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyMzEwNw==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417923107", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (!version.endsWith(SNAPSHOT_SUFFIX) && !version.endsWith(LEGACY_SNAPSHOT_SUFFIX)) {\n          \n          \n            \n            \t\tif (!version.endsWith(SNAPSHOT_SUFFIX)) {", "author": "bsideup", "createdAt": "2020-04-30T10:50:34Z", "path": "buildSrc/src/main/java/io/reactor/gradle/CustomVersionPlugin.java", "diffHunk": "@@ -55,11 +56,11 @@ public void apply(Project project) {\n \t\t\tthrow new InvalidUserDataException(\"Custom version for project passed through -PversionBranch must be alphanumeric chars only: \" + versionBranch);\n \t\t}\n \n-\t\tif (!version.endsWith(SNAPSHOT_SUFFIX)) {\n+\t\tif (!version.endsWith(SNAPSHOT_SUFFIX) && !version.endsWith(LEGACY_SNAPSHOT_SUFFIX)) {", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNDc1Mg==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417924752", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * `YYYY` is the year of the first ga release in a given release cycle (like 3.4.0 for 3.4.x)\n          \n          \n            \n             * `YYYY` is the year of the first GA release in a given release cycle (like 3.4.0 for 3.4.x)", "author": "bsideup", "createdAt": "2020-04-30T10:53:46Z", "path": "docs/asciidoc/gettingStarted.adoc", "diffHunk": "@@ -44,33 +44,46 @@ case-by-case basis.\n ====\n \n [[getting-started-understanding-bom]]\n-== Understanding the BOM\n+== Understanding the BOM and versioning scheme\n \n Reactor 3 uses a BOM (Bill of Materials) model (since `reactor-core 3.0.4`, with the `Aluminium` release train).\n This curated list groups artifacts that are meant to work well together, providing\n the relevant versions despite potentially divergent versioning schemes in these artifacts.\n \n-The BOM is itself versioned, using a release train scheme\n-with a codename followed by a qualifier. The following list shows a few examples:\n+Note the versioning scheme has changed between 3.3.x and 3.4.x (Dysprosium and Europium).\n \n-[verse]\n-Aluminium-RELEASE\n-Californium-BUILD-SNAPSHOT\n-Aluminium-SR1\n-Bismuth-RELEASE\n-Californium-SR32\n+Artifacts follow a versioning scheme of `MAJOR.MINOR.PATCH-QUALIFIER` while the BOM is versioned using a CalVer inspired scheme of `YYYY.MINOR.PATCH-QUALIFIER`, where:\n \n+ * `MAJOR` is the current generation of Reactor, where each new generation can bring fundamental changes to the structure of the project (which might imply a more significant migration effort)\n+ * `YYYY` is the year of the first ga release in a given release cycle (like 3.4.0 for 3.4.x)", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNDk0Mg==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417924942", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * `-QUALIFIER` is a textual qualifier, which is omitted in the case of ga releases (see below)\n          \n          \n            \n             * `-QUALIFIER` is a textual qualifier, which is omitted in the case of GA releases (see below)", "author": "bsideup", "createdAt": "2020-04-30T10:54:08Z", "path": "docs/asciidoc/gettingStarted.adoc", "diffHunk": "@@ -44,33 +44,46 @@ case-by-case basis.\n ====\n \n [[getting-started-understanding-bom]]\n-== Understanding the BOM\n+== Understanding the BOM and versioning scheme\n \n Reactor 3 uses a BOM (Bill of Materials) model (since `reactor-core 3.0.4`, with the `Aluminium` release train).\n This curated list groups artifacts that are meant to work well together, providing\n the relevant versions despite potentially divergent versioning schemes in these artifacts.\n \n-The BOM is itself versioned, using a release train scheme\n-with a codename followed by a qualifier. The following list shows a few examples:\n+Note the versioning scheme has changed between 3.3.x and 3.4.x (Dysprosium and Europium).\n \n-[verse]\n-Aluminium-RELEASE\n-Californium-BUILD-SNAPSHOT\n-Aluminium-SR1\n-Bismuth-RELEASE\n-Californium-SR32\n+Artifacts follow a versioning scheme of `MAJOR.MINOR.PATCH-QUALIFIER` while the BOM is versioned using a CalVer inspired scheme of `YYYY.MINOR.PATCH-QUALIFIER`, where:\n \n+ * `MAJOR` is the current generation of Reactor, where each new generation can bring fundamental changes to the structure of the project (which might imply a more significant migration effort)\n+ * `YYYY` is the year of the first ga release in a given release cycle (like 3.4.0 for 3.4.x)\n+ * `.MINOR` is a 0-based number incrementing with each new release cycle\n+ ** in the case of projects, it generally reflects wider changes and can indicate a moderate migration effort\n+ ** in the case of the BOM it allows discerning between release cycles in case two get first released the same year\n+ * `.PATCH` is a 0-based number incrementing with each service release\n+ * `-QUALIFIER` is a textual qualifier, which is omitted in the case of ga releases (see below)", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNTE0NQ==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417925145", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * _no qualifier_ for ga releases\n          \n          \n            \n             * _no qualifier_ for GA releases", "author": "bsideup", "createdAt": "2020-04-30T10:54:33Z", "path": "docs/asciidoc/gettingStarted.adoc", "diffHunk": "@@ -44,33 +44,46 @@ case-by-case basis.\n ====\n \n [[getting-started-understanding-bom]]\n-== Understanding the BOM\n+== Understanding the BOM and versioning scheme\n \n Reactor 3 uses a BOM (Bill of Materials) model (since `reactor-core 3.0.4`, with the `Aluminium` release train).\n This curated list groups artifacts that are meant to work well together, providing\n the relevant versions despite potentially divergent versioning schemes in these artifacts.\n \n-The BOM is itself versioned, using a release train scheme\n-with a codename followed by a qualifier. The following list shows a few examples:\n+Note the versioning scheme has changed between 3.3.x and 3.4.x (Dysprosium and Europium).\n \n-[verse]\n-Aluminium-RELEASE\n-Californium-BUILD-SNAPSHOT\n-Aluminium-SR1\n-Bismuth-RELEASE\n-Californium-SR32\n+Artifacts follow a versioning scheme of `MAJOR.MINOR.PATCH-QUALIFIER` while the BOM is versioned using a CalVer inspired scheme of `YYYY.MINOR.PATCH-QUALIFIER`, where:\n \n+ * `MAJOR` is the current generation of Reactor, where each new generation can bring fundamental changes to the structure of the project (which might imply a more significant migration effort)\n+ * `YYYY` is the year of the first ga release in a given release cycle (like 3.4.0 for 3.4.x)\n+ * `.MINOR` is a 0-based number incrementing with each new release cycle\n+ ** in the case of projects, it generally reflects wider changes and can indicate a moderate migration effort\n+ ** in the case of the BOM it allows discerning between release cycles in case two get first released the same year\n+ * `.PATCH` is a 0-based number incrementing with each service release\n+ * `-QUALIFIER` is a textual qualifier, which is omitted in the case of ga releases (see below)\n+\n+The first release cycle to follow that convention is thus `2020.0.x`, codename `Europium`.\n+The scheme uses the following qualifiers (note the use of dash separator), in order:\n+\n+ * `-M1`..`-M9`: milestones (we don't expect more than 9 per service release)\n+ * `-RC1`..`-RC9`: release candidates (we don't expect more than 9 per service release)\n+ * `-SNAPSHOT`: snapshots\n+ * _no qualifier_ for ga releases", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNTMwOA==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417925308", "bodyText": "not 100% sure, but:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: snapshots appear high in the order above because, conceptually, they're always \"the freshest pre-release\" of any given PATCH.\n          \n          \n            \n            NOTE: snapshots appear higher in the order above because, conceptually, they're always \"the freshest pre-release\" of any given PATCH.", "author": "bsideup", "createdAt": "2020-04-30T10:54:48Z", "path": "docs/asciidoc/gettingStarted.adoc", "diffHunk": "@@ -44,33 +44,46 @@ case-by-case basis.\n ====\n \n [[getting-started-understanding-bom]]\n-== Understanding the BOM\n+== Understanding the BOM and versioning scheme\n \n Reactor 3 uses a BOM (Bill of Materials) model (since `reactor-core 3.0.4`, with the `Aluminium` release train).\n This curated list groups artifacts that are meant to work well together, providing\n the relevant versions despite potentially divergent versioning schemes in these artifacts.\n \n-The BOM is itself versioned, using a release train scheme\n-with a codename followed by a qualifier. The following list shows a few examples:\n+Note the versioning scheme has changed between 3.3.x and 3.4.x (Dysprosium and Europium).\n \n-[verse]\n-Aluminium-RELEASE\n-Californium-BUILD-SNAPSHOT\n-Aluminium-SR1\n-Bismuth-RELEASE\n-Californium-SR32\n+Artifacts follow a versioning scheme of `MAJOR.MINOR.PATCH-QUALIFIER` while the BOM is versioned using a CalVer inspired scheme of `YYYY.MINOR.PATCH-QUALIFIER`, where:\n \n+ * `MAJOR` is the current generation of Reactor, where each new generation can bring fundamental changes to the structure of the project (which might imply a more significant migration effort)\n+ * `YYYY` is the year of the first ga release in a given release cycle (like 3.4.0 for 3.4.x)\n+ * `.MINOR` is a 0-based number incrementing with each new release cycle\n+ ** in the case of projects, it generally reflects wider changes and can indicate a moderate migration effort\n+ ** in the case of the BOM it allows discerning between release cycles in case two get first released the same year\n+ * `.PATCH` is a 0-based number incrementing with each service release\n+ * `-QUALIFIER` is a textual qualifier, which is omitted in the case of ga releases (see below)\n+\n+The first release cycle to follow that convention is thus `2020.0.x`, codename `Europium`.\n+The scheme uses the following qualifiers (note the use of dash separator), in order:\n+\n+ * `-M1`..`-M9`: milestones (we don't expect more than 9 per service release)\n+ * `-RC1`..`-RC9`: release candidates (we don't expect more than 9 per service release)\n+ * `-SNAPSHOT`: snapshots\n+ * _no qualifier_ for ga releases\n+\n+NOTE: snapshots appear high in the order above because, conceptually, they're always \"the freshest pre-release\" of any given PATCH.", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNTgyMQ==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417925821", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Each release cycle is also given a codename, in continuity of the previous codename-based\n          \n          \n            \n            Each release cycle is also given a codename, in continuity to the previous codename-based\n          \n      \n    \n    \n  \n\nmaybe?", "author": "bsideup", "createdAt": "2020-04-30T10:55:52Z", "path": "docs/asciidoc/gettingStarted.adoc", "diffHunk": "@@ -44,33 +44,46 @@ case-by-case basis.\n ====\n \n [[getting-started-understanding-bom]]\n-== Understanding the BOM\n+== Understanding the BOM and versioning scheme\n \n Reactor 3 uses a BOM (Bill of Materials) model (since `reactor-core 3.0.4`, with the `Aluminium` release train).\n This curated list groups artifacts that are meant to work well together, providing\n the relevant versions despite potentially divergent versioning schemes in these artifacts.\n \n-The BOM is itself versioned, using a release train scheme\n-with a codename followed by a qualifier. The following list shows a few examples:\n+Note the versioning scheme has changed between 3.3.x and 3.4.x (Dysprosium and Europium).\n \n-[verse]\n-Aluminium-RELEASE\n-Californium-BUILD-SNAPSHOT\n-Aluminium-SR1\n-Bismuth-RELEASE\n-Californium-SR32\n+Artifacts follow a versioning scheme of `MAJOR.MINOR.PATCH-QUALIFIER` while the BOM is versioned using a CalVer inspired scheme of `YYYY.MINOR.PATCH-QUALIFIER`, where:\n \n+ * `MAJOR` is the current generation of Reactor, where each new generation can bring fundamental changes to the structure of the project (which might imply a more significant migration effort)\n+ * `YYYY` is the year of the first ga release in a given release cycle (like 3.4.0 for 3.4.x)\n+ * `.MINOR` is a 0-based number incrementing with each new release cycle\n+ ** in the case of projects, it generally reflects wider changes and can indicate a moderate migration effort\n+ ** in the case of the BOM it allows discerning between release cycles in case two get first released the same year\n+ * `.PATCH` is a 0-based number incrementing with each service release\n+ * `-QUALIFIER` is a textual qualifier, which is omitted in the case of ga releases (see below)\n+\n+The first release cycle to follow that convention is thus `2020.0.x`, codename `Europium`.\n+The scheme uses the following qualifiers (note the use of dash separator), in order:\n+\n+ * `-M1`..`-M9`: milestones (we don't expect more than 9 per service release)\n+ * `-RC1`..`-RC9`: release candidates (we don't expect more than 9 per service release)\n+ * `-SNAPSHOT`: snapshots\n+ * _no qualifier_ for ga releases\n+\n+NOTE: snapshots appear high in the order above because, conceptually, they're always \"the freshest pre-release\" of any given PATCH.\n+Even though the first deployed artifact of a PATCH cycle will always be a -SNAPSHOT, a similarly named but more up-to-date snapshot\n+would also get released after eg. a milestone or between release candidates.\n+\n+Each release cycle is also given a codename, in continuity of the previous codename-based", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNjg3NQ==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417926875", "bodyText": "it is actually in continuity with \ud83d\ude06", "author": "simonbasle", "createdAt": "2020-04-30T10:57:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNTgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNjI2Ng==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417926266", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              if (!version.contains('.BUILD-SNAPSHOT') && !version.contains('-SNAPSHOT')) {\n          \n          \n            \n              if (!version.endsWith('-SNAPSHOT')) {", "author": "bsideup", "createdAt": "2020-04-30T10:56:46Z", "path": "reactor-core/build.gradle", "diffHunk": "@@ -204,7 +204,7 @@ check {\n   if (!detectedCiServers.contains(\"TRAVIS\")) {\n \tdependsOn testNG\n   }\n-  if (!version.endsWith('BUILD-SNAPSHOT')) {\n+  if (!version.contains('.BUILD-SNAPSHOT') && !version.contains('-SNAPSHOT')) {", "originalCommit": "e5163f0bd1c4a8a0bdad4f31e8c6750a026cdae2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk2MzYxMw==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417963613", "bodyText": "ditto in asciidoc.gradle line24", "author": "ericbottard", "createdAt": "2020-04-30T12:12:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNjI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk2NzE3Mg==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417967172", "bodyText": "right fixed both now \ud83d\udc4d", "author": "simonbasle", "createdAt": "2020-04-30T12:19:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkyNjI2Ng=="}], "type": "inlineReview"}, {"oid": "3ccc039daa24c673866788cc94f788a40ad01390", "url": "https://github.com/reactor/reactor-core/commit/3ccc039daa24c673866788cc94f788a40ad01390", "message": "Fixup docs\n\nCo-Authored-By: Sergei Egorov <segorov@pivotal.io>", "committedDate": "2020-04-30T10:59:39Z", "type": "commit"}, {"oid": "afdf00b4e11e32daaa47b5cbf8d1358d69352ae6", "url": "https://github.com/reactor/reactor-core/commit/afdf00b4e11e32daaa47b5cbf8d1358d69352ae6", "message": "fix review comments", "committedDate": "2020-04-30T11:14:29Z", "type": "commit"}, {"oid": "afdf00b4e11e32daaa47b5cbf8d1358d69352ae6", "url": "https://github.com/reactor/reactor-core/commit/afdf00b4e11e32daaa47b5cbf8d1358d69352ae6", "message": "fix review comments", "committedDate": "2020-04-30T11:14:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0NjI4Ng==", "url": "https://github.com/reactor/reactor-core/pull/2140#discussion_r417946286", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  testCompile(\"io.projectreactor:reactor-test:3.4.0\")\n          \n          \n            \n                  testCompile(\"io.projectreactor:reactor-test:3.4.0-SNAPSHOT\")", "author": "bsideup", "createdAt": "2020-04-30T11:37:58Z", "path": "README.md", "diffHunk": "@@ -23,16 +23,17 @@ With Gradle from repo.spring.io or Maven Central repositories (stable releases o\n \n ```groovy\n     repositories {\n-//      maven { url 'https://repo.spring.io/snapshot' }\n+      maven { url 'https://repo.spring.io/snapshot' }\n //      maven { url 'https://repo.spring.io/milestone' }\n       mavenCentral()\n     }\n \n     dependencies {\n-      //compile \"io.projectreactor:reactor-core:3.3.6.BUILD-SNAPSHOT\"\n-      //testCompile(\"io.projectreactor:reactor-test:3.3.6.BUILD-SNAPSHOT\")\n-      compile \"io.projectreactor:reactor-core:3.3.5.RELEASE\"\n-      testCompile(\"io.projectreactor:reactor-test:3.3.5.RELEASE\")\n+      //compile \"io.projectreactor:reactor-core:3.4.1-SNAPSHOT\"\n+      //testCompile(\"io.projectreactor:reactor-test:3.4.1-SNAPSHOT\")\n+      //TODO change to the release artifact and comment snapshot repo above when GA\n+      compile \"io.projectreactor:reactor-core:3.4.0-SNAPSHOT\"\n+      testCompile(\"io.projectreactor:reactor-test:3.4.0\")", "originalCommit": "afdf00b4e11e32daaa47b5cbf8d1358d69352ae6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c9c6c0d99a822a8fbdaa99a0bbbbaf73562debb7", "url": "https://github.com/reactor/reactor-core/commit/c9c6c0d99a822a8fbdaa99a0bbbbaf73562debb7", "message": "fix testCompile scope\n\nCo-authored-by: Sergei Egorov <segorov@pivotal.io>", "committedDate": "2020-04-30T11:55:33Z", "type": "commit"}, {"oid": "a9fdc5cf88271e365153755a3520b7ffe884280f", "url": "https://github.com/reactor/reactor-core/commit/a9fdc5cf88271e365153755a3520b7ffe884280f", "message": "fix the snapshot suffix detection for running loops and asciidoc pdf", "committedDate": "2020-04-30T12:19:39Z", "type": "commit"}]}