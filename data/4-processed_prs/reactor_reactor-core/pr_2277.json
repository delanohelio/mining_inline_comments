{"pr_number": 2277, "pr_title": "Remove previously deprecated methods and types", "pr_createdAt": "2020-07-20T15:07:35Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2277", "timeline": [{"oid": "204bcd121c71cd0c58c56f139431e9366d2a5b78", "url": "https://github.com/reactor/reactor-core/commit/204bcd121c71cd0c58c56f139431e9366d2a5b78", "message": "Remove previously deprecated methods and types", "committedDate": "2020-07-20T15:06:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0NDU3OA==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r457544578", "bodyText": "actually, I don't think this one should be removed :( It looks like it was deprecated by mistake, because ultimately the one we'd want removed is the one with a Consumer<Subscription> (see the TODO on subscribe variant with such a Consumer below)", "author": "simonbasle", "createdAt": "2020-07-20T16:36:29Z", "path": "reactor-core/src/main/java/reactor/core/publisher/ParallelFlux.java", "diffHunk": "@@ -1052,25 +1025,6 @@ public final Disposable subscribe(\n \t\treturn this.subscribe(onNext, onError, onComplete, onSubscribe, null);\n \t}\n \n-\t/**\n-\t * Subscribes to this {@link ParallelFlux} by providing an onNext, onError and\n-\t * onComplete callback as well as an initial {@link Context}, then trigger the execution chain for all\n-\t * 'rails'.\n-\t *\n-\t * @param onNext consumer of onNext signals\n-\t * @param onError consumer of error signal\n-\t * @param onComplete callback on completion signal\n-\t * @param initialContext {@link Context} for the rails\n-\t */\n-\t@Deprecated", "originalCommit": "204bcd121c71cd0c58c56f139431e9366d2a5b78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0NjY2OA==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r457546668", "bodyText": "please revert the removal of that method, and delete the @Deprecated instead \ud83d\ude47", "author": "simonbasle", "createdAt": "2020-07-20T16:39:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0NDU3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0ODM2Ng==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r457548366", "bodyText": "The implementation FluxRetryPredicate can most likely also be deleted. Please double check remaining relevant tests are either kept in this test class or moved to FluxRetryWhenTest as a @Nested test maybe?", "author": "simonbasle", "createdAt": "2020-07-20T16:42:39Z", "path": "reactor-core/src/test/java/reactor/core/publisher/FluxRetryPredicateTest.java", "diffHunk": "@@ -41,19 +42,13 @@ public void sourceNull() {\n \t\tnew FluxRetryPredicate<>(null, e -> true);", "originalCommit": "204bcd121c71cd0c58c56f139431e9366d2a5b78", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0OTA2Mg==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r457549062", "bodyText": "same as for FluxRetryPredicate", "author": "simonbasle", "createdAt": "2020-07-20T16:43:49Z", "path": "reactor-core/src/test/java/reactor/core/publisher/MonoRetryPredicateTest.java", "diffHunk": "@@ -34,14 +36,14 @@ public void twoRetryNormalSupplier() {\n \n \t\tStepVerifier.create(Mono.fromCallable(i::incrementAndGet)", "originalCommit": "204bcd121c71cd0c58c56f139431e9366d2a5b78", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU1MzIyMw==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r457553223", "bodyText": "there was no \"to be removed\" even though this one has been deprecated since 3.3.1... I wonder if there could be anybody out there testing that no onSubscribe happens for a given duration (which would be a legitimate-ish verification). Can restore it for now and open an issue for that specific case to remove the method and add a suitable alternative in a follow-up PR ?", "author": "simonbasle", "createdAt": "2020-07-20T16:50:36Z", "path": "reactor-test/src/main/java/reactor/test/StepVerifier.java", "diffHunk": "@@ -1021,28 +1021,6 @@ default Duration verifyTimeout(Duration duration) {\n \t\t */\n \t\tStep<T> expectNoFusionSupport();\n \n-\t\t/**", "originalCommit": "204bcd121c71cd0c58c56f139431e9366d2a5b78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk5MDM2NA==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r457990364", "bodyText": "But no onSubscribe after subscribe() would be a spec violation, isn't it?", "author": "bsideup", "createdAt": "2020-07-21T10:17:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU1MzIyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxNTU1NA==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r458015554", "bodyText": "yes, but a delayed onSubscribe wouldn't.", "author": "simonbasle", "createdAt": "2020-07-21T11:06:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU1MzIyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MjgwNA==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r458062804", "bodyText": "Is it so?\nreactive-streams/reactive-streams-jvm#486", "author": "bsideup", "createdAt": "2020-07-21T12:38:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU1MzIyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3OTg5Mw==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r458079893", "bodyText": "right... used to be a gray area. let's remove it then, even though the @Deprecated was intended as a deterrent to using that method without at least thinking about calling expectSubscription().", "author": "simonbasle", "createdAt": "2020-07-21T13:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU1MzIyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4MDUyMg==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r458080522", "bodyText": "Ok, will re-remove it :D \ud83d\udc4d", "author": "bsideup", "createdAt": "2020-07-21T13:06:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU1MzIyMw=="}], "type": "inlineReview"}, {"oid": "20f13a54b28f4fa94d04326c9a3c8e86a23cab9b", "url": "https://github.com/reactor/reactor-core/commit/20f13a54b28f4fa94d04326c9a3c8e86a23cab9b", "message": "un-deprecate some methods, remove unused classes", "committedDate": "2020-07-21T12:36:03Z", "type": "commit"}, {"oid": "f3fb770635717078e33c4a63643d1697c60effd1", "url": "https://github.com/reactor/reactor-core/commit/f3fb770635717078e33c4a63643d1697c60effd1", "message": "add japicmp exclusions", "committedDate": "2020-07-21T12:36:18Z", "type": "commit"}, {"oid": "62f227d2e32d4a3db9cb5ff579179b74a7b92243", "url": "https://github.com/reactor/reactor-core/commit/62f227d2e32d4a3db9cb5ff579179b74a7b92243", "message": "exclude `onLastAssembly` from japicmp", "committedDate": "2020-07-21T12:56:43Z", "type": "commit"}, {"oid": "aa5b06a17df01bee1dbe5ae8b15fc2eef2302875", "url": "https://github.com/reactor/reactor-core/commit/aa5b06a17df01bee1dbe5ae8b15fc2eef2302875", "message": "remove `expectNoEvent`", "committedDate": "2020-07-21T13:24:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEwOTY3Nw==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r458109677", "bodyText": "the tests of removed retry operators should either be moved to xxxRetryWhenTest or there should be a comment in that test class pointing to xxxRetryPredicateTest. also there are SuppressWarnings(\"deprecation\") in these tests that are not necessary anymore", "author": "simonbasle", "createdAt": "2020-07-21T13:47:35Z", "path": "reactor-core/src/test/java/reactor/core/publisher/MonoRetryPredicateTest.java", "diffHunk": "@@ -34,14 +36,14 @@ public void twoRetryNormalSupplier() {\n \n \t\tStepVerifier.create(Mono.fromCallable(i::incrementAndGet)\n \t\t                        .doOnNext(v -> {\n-\t\t                        \tif(v < 4) {\n+\t\t\t                        if (v < 4) {", "originalCommit": "aa5b06a17df01bee1dbe5ae8b15fc2eef2302875", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODExMDg2Nw==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r458110867", "bodyText": "IIRC we're stuck in 0.2.6 because newest japicmp by default reject introducing new default method()s (which we need in 3.4), and the gradle plugin doesn't let us disable that feature.\ndid you have a strong need for 0.2.8 ?", "author": "simonbasle", "createdAt": "2020-07-21T13:49:07Z", "path": "build.gradle", "diffHunk": "@@ -28,7 +28,7 @@ buildscript {\n plugins {\n \tid \"com.github.johnrengelman.shadow\" version \"4.0.2\"\n \tid 'org.asciidoctor.convert' version '1.5.11'\n-\tid \"me.champeau.gradle.japicmp\" version \"0.2.6\"\n+\tid \"me.champeau.gradle.japicmp\" version \"0.2.8\"", "originalCommit": "aa5b06a17df01bee1dbe5ae8b15fc2eef2302875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODExMTk4NA==", "url": "https://github.com/reactor/reactor-core/pull/2277#discussion_r458111984", "bodyText": "Ah, okay. It worked fine so I proceeded. Will revert", "author": "bsideup", "createdAt": "2020-07-21T13:50:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODExMDg2Nw=="}], "type": "inlineReview"}, {"oid": "b02c0f1d6657209beb232a2c8c1f29fceef11532", "url": "https://github.com/reactor/reactor-core/commit/b02c0f1d6657209beb232a2c8c1f29fceef11532", "message": "downgrade to japicmp 0.2.6", "committedDate": "2020-07-21T14:57:55Z", "type": "commit"}, {"oid": "097b0484531902dbca3a54968e9359e71b893e60", "url": "https://github.com/reactor/reactor-core/commit/097b0484531902dbca3a54968e9359e71b893e60", "message": "merge `{Flux,Mono}{RetryPredicate,When}Test`s", "committedDate": "2020-07-21T14:58:48Z", "type": "commit"}, {"oid": "2e77722ece874ae386cc8edec272c2de256a9fcd", "url": "https://github.com/reactor/reactor-core/commit/2e77722ece874ae386cc8edec272c2de256a9fcd", "message": "remove html japicmp reports", "committedDate": "2020-07-21T16:30:18Z", "type": "commit"}]}