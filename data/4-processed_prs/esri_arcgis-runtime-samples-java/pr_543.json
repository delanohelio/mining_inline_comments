{"pr_number": 543, "pr_title": "New sample: Edit features with feature-linked annotation", "pr_createdAt": "2020-08-04T15:04:49Z", "pr_url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543", "timeline": [{"oid": "1e1c4156280809adaa678464900875cdcc4ea0b6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1e1c4156280809adaa678464900875cdcc4ea0b6", "message": "Routing around barriers - add isStillSincePress to mouse events (#394)\n\n* add isStillSincePress to mouse events\r\n\r\n* remove error log from error dialog", "committedDate": "2019-08-01T11:06:42Z", "type": "commit"}, {"oid": "2288f9701cc3d1ef537adc463c6b4ee471ddbddb", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2288f9701cc3d1ef537adc463c6b4ee471ddbddb", "message": "oauth - README.metadata.json formatting (#395)\n\n* formatting", "committedDate": "2019-08-01T11:30:36Z", "type": "commit"}, {"oid": "d2ea64be819c9dd746c65bafeac64f5c7dded343", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d2ea64be819c9dd746c65bafeac64f5c7dded343", "message": "mmpk to class member (#398)", "committedDate": "2019-08-06T08:38:49Z", "type": "commit"}, {"oid": "f00d337e68f993aebe1fb26ba84e070803a30df1", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f00d337e68f993aebe1fb26ba84e070803a30df1", "message": "Patch/dictionary symbol style update constructor (#393)\n\n* update DictionarySymbolStyle constructor\r\n\r\n* update README.md and comments\r\n\r\n* update Item ID\r\n\r\n* update constructor in remaining samples\r\n\r\n* update README.md, README.metadata.json\r\n\r\n* optimise imports\r\n\r\n* update xml files to remove control points\r\n\r\n* get Mil2525d xml from AGOL where applicable\r\n\r\n* remove xml in resources\r\n\r\n* fix typo on mil2525d", "committedDate": "2019-08-06T23:25:51Z", "type": "commit"}, {"oid": "dc340c28ea6bdc0bbe660755ee951546bc78b03d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/dc340c28ea6bdc0bbe660755ee951546bc78b03d", "message": "Patch/geometry engine simplify - add isSimple check (#399)\n\n* add isSimple check\r\n\r\n* update Readme.md\r\n\r\n* update comments, update metadata.json", "committedDate": "2019-08-08T08:13:01Z", "type": "commit"}, {"oid": "1a56d0702c2d1c8c6b79a9aabec51eb4dc7b2299", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1a56d0702c2d1c8c6b79a9aabec51eb4dc7b2299", "message": "Integrated windows auth (#370)\n\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* patch oAuth sample custom challengehandler (#366)\r\n\r\n* implement fix for javafx webengine\r\n\r\n* formatting\r\n\r\n* add fix for create and save map sample\r\n\r\n* markdown to html formatting\r\n\r\n* working sample\r\n\r\n* comments, formatting, UI improvements\r\n\r\n* UI, screenshot, readme\r\n\r\n* readme formatting\r\n\r\n* code formatting\r\n\r\n* ui improvements, screenshot\r\n\r\n* comments, formatting\r\n\r\n* readme tags\r\n\r\n* javadoc comments\r\n\r\n* ui improvements\r\n\r\n* ui improvements\r\n\r\n* refactoring\r\n\r\n* comments\r\n\r\n* address review suggestions\r\n\r\n* smaller UI\r\n\r\n* update screenshot\r\n\r\n* listview holds portal item ids\r\n\r\n* Update README.md, comments\r\n\r\n* update README.md\r\n\r\n* fix package and path names\r\n\r\n* delete irrelevant files\r\n\r\n* readme to MD\r\n\r\n* add README.metadata.json\r\n\r\n* updated README.metadata.json\r\n\r\n* remove public search, refactoring\r\n\r\n* whitespace\r\n\r\n* cell factory to class, fxml tidying\r\n\r\n* error handling, comments, refactoring\r\n\r\n* error handling\r\n\r\n* remove loading/portal info text\r\n\r\n* class member to local var\r\n\r\n* update Readme.md for UI changes and review suggestions\r\n\r\n* refactoring\r\n\r\n* fix typo\r\n\r\n* Move construction of portal query parameters to its own line\r\n\r\n* small UI improvements, update screenshot", "committedDate": "2019-08-08T08:35:47Z", "type": "commit"}, {"oid": "2d926545316b521e81390b833fd8fe5ca8f56ef5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2d926545316b521e81390b833fd8fe5ca8f56ef5", "message": "update README.md for screenshot link (#403)", "committedDate": "2019-08-08T10:30:26Z", "type": "commit"}, {"oid": "b2095696bd63de522ad61ba678f3381bb659ba6d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b2095696bd63de522ad61ba678f3381bb659ba6d", "message": "Integrated windows auth - update README.metadata.json (#402)\n\n* update RAEDME.metadata.json\r\n\r\n* update tags in README.metadata.json", "committedDate": "2019-08-08T11:46:24Z", "type": "commit"}, {"oid": "0e5fc1d37929d87ee5e789ebe4d7d3b5f15bde18", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/0e5fc1d37929d87ee5e789ebe4d7d3b5f15bde18", "message": "move local data download logic to settings.gradle (#401)\n\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* patch oAuth sample custom challengehandler (#366)\r\n\r\n* implement fix for javafx webengine\r\n\r\n* formatting\r\n\r\n* add fix for create and save map sample\r\n\r\n* markdown to html formatting\r\n\r\n* corrects WKID to 4326 (#389)\r\n\r\n* corrects WKID to 4326\r\n\r\n* use SpatialReferences.getWgs84\r\n\r\n* move local data download logic to settings.gradle\r\n\r\n* move data download logic to settings.gradle\r\n\r\n* fix data paths", "committedDate": "2019-08-09T17:08:38Z", "type": "commit"}, {"oid": "8e431246d4383999f5c6a86ade51e270d8afa382", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8e431246d4383999f5c6a86ade51e270d8afa382", "message": "fixing data download for mil2505 xml file for sample viewer v2504 (#404)\n\n* update DictionarySymbolStyle constructor\r\n\r\n* update README.md and comments\r\n\r\n* update Item ID\r\n\r\n* update constructor in remaining samples\r\n\r\n* update README.md, README.metadata.json\r\n\r\n* optimise imports\r\n\r\n* update xml files to remove control points\r\n\r\n* get Mil2525d xml from AGOL where applicable\r\n\r\n* remove xml in resources\r\n\r\n* move data download to settings.gradle, fix paths", "committedDate": "2019-08-09T17:11:29Z", "type": "commit"}, {"oid": "71375c301078403828b889d2847f17a5c7823aa6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/71375c301078403828b889d2847f17a5c7823aa6", "message": "fix typo", "committedDate": "2019-08-09T17:14:26Z", "type": "commit"}, {"oid": "eae4977fc3651a35c2470a376061bdd603c10ca8", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/eae4977fc3651a35c2470a376061bdd603c10ca8", "message": "fix directory name", "committedDate": "2019-08-09T17:35:11Z", "type": "commit"}, {"oid": "0a4cca804fb46abdc891624d9bd2ddc1e419f092", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/0a4cca804fb46abdc891624d9bd2ddc1e419f092", "message": "fix local data folder", "committedDate": "2019-08-12T17:17:03Z", "type": "commit"}, {"oid": "c1c2b6d50c1d2b4a2aba61e94ae132625a98e151", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c1c2b6d50c1d2b4a2aba61e94ae132625a98e151", "message": "put native libraries in .arcgis folder", "committedDate": "2019-08-13T16:37:07Z", "type": "commit"}, {"oid": "5cf8674c7a0e5e8efc009b95e4bdd55f110a63fc", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/5cf8674c7a0e5e8efc009b95e4bdd55f110a63fc", "message": "Honor mmpk expiration (#397)\n\n* initial commit\r\n\r\n* working sample\r\n\r\n* refactoring\r\n\r\n* refactoring, comments\r\n\r\n* copyright statement in Launcher class\r\n\r\n* data download to settings.gradle\r\n\r\n* change expiration display to static date, CSS edits\r\n\r\n* update screenshot\r\n\r\n* expiration message to sentence case\r\n\r\n* fix settings.gradle. Again.\r\n\r\n* plement review suggestions\r\n\r\n* formatting\r\n\r\n* update README.metadata.json\r\n\r\n* comments", "committedDate": "2019-08-13T17:20:20Z", "type": "commit"}, {"oid": "959a101869d5d4a15ddbba466fa53e2462733014", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/959a101869d5d4a15ddbba466fa53e2462733014", "message": "Set annotation sublayer visibility (#396)\n\n* show scale in label\r\n\r\n* load mmpk\r\n\r\n* add checkboxes with labels\r\n\r\n* activate checkboxes, change checkbox text color dynamically\r\n\r\n* update label color\r\n\r\n* fix checkboxes, comments\r\n\r\n* optimise imports, copyright comment\r\n\r\n* labels and screenshot\r\n\r\n* update screenshot\r\n\r\n* update runtime build, update README.md\r\n\r\n* mmpk to class member\r\n\r\n* formatting and comments\r\n\r\n* javadoc comments\r\n\r\n* restore show_callout files\r\n\r\n* move downloading of sample data to settings.gradle\r\n\r\n* fix package naming\r\n\r\n* move scale label to control panel, check mmpk contains maps\r\n\r\n* fix checkbox text colours\r\n\r\n* UI fixes and label colouring\r\n\r\n* data download in settings.gradle\r\n\r\n* update README.md\r\n\r\n* update screenshot for UI changes\r\n\r\n* fix settings.gradle\r\n\r\n* fix settings.gradle\r\n\r\n* formatting\r\n\r\n* README.metadata.json redirect url to blank string\r\n\r\n* update README.md", "committedDate": "2019-08-13T17:21:26Z", "type": "commit"}, {"oid": "a002ce25b9d6312f4a116a7540789a6e54fd4694", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a002ce25b9d6312f4a116a7540789a6e54fd4694", "message": "Tschie/preplanned map (#405)\n\n* download preplanned map sample\r\n\r\n* refactoring\r\n\r\n* add ref to update parameters\r\n\r\n* method/enum name for update option\r\n\r\n* method/enum name for update option\r\n\r\n* update runtime version, imports\r\n\r\n* inner class to private\r\n\r\n* add auth manager to handle OAuth challenge\r\n\r\n* mark portal as requires authentication\r\n\r\n* update README.md\r\n\r\n* add screenshot alt text\r\n\r\n* update README.md\r\n\r\n* update README.md\r\n\r\n* update README.md for scheduled updates workflow\r\n\r\n* update link to guide\r\n\r\n* update README.md\r\n\r\n* update use case\r\n\r\n* improve 'how it works'\r\n\r\n* add preview of area of interest\r\n\r\n* improve drawing area of interest\r\n\r\n* update use case wording, references in additional information\r\n\r\n* fix deleting temp files, add button 'return to web map'\r\n\r\n* add numbering to list view\r\n\r\n* zoom to area on select, refactoring\r\n\r\n* update listener adding/removing\r\n\r\n* refactoring\r\n\r\n* disable/enable showWebMapButton approprately\r\n\r\n* add README.metadata.json\r\n\r\n* fix function naming\r\n\r\n* add confirmation popup when deleting\r\n\r\n* refactoring, use commons library to delete\r\n\r\n* fix commons-io dependency\r\n\r\n* 'show web map' button width\r\n\r\n* reorder imports\r\n\r\n* improve viewpoint change, button updates\r\n\r\n* smaller UI\r\n\r\n* refactoring and comments\r\n\r\n* javadoc comments and formatting\r\n\r\n* remove stray q file\r\n\r\n* address review corrections\r\n\r\n* review changes and refactoring\r\n\r\n* refactoring\r\n\r\n* whitespace\r\n\r\n* web map -> online map\r\n\r\n* further information -> additional information\r\n\r\n* mmpk to class member\r\n\r\n* change button text\r\n\r\n* selecting view online map pans to selected area\r\n\r\n* formatting\r\n\r\n* update README.md\r\n\r\n* copyright statements\r\n\r\n* remove commented code\r\n\r\n* try to simplify a bit\r\n\r\n* simplify sample\r\n\r\n* don't hide graphics overlay on download\r\n\r\n* add snippet\r\n\r\n* update How to use the sample section\r\n\r\n* Update DownloadPreplannedMap.png\r\n\r\n* Slim up the use case\r\n\r\n* remove fxml comments\r\n\r\n* remove redirect from for new sample", "committedDate": "2019-08-15T17:30:00Z", "type": "commit"}, {"oid": "cd1a4cc74436c3f3404f2335fa930121c730bcc7", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/cd1a4cc74436c3f3404f2335fa930121c730bcc7", "message": "Merge branch 'master' into dev", "committedDate": "2019-08-26T16:59:32Z", "type": "commit"}, {"oid": "9ed26f48ae18197bf147a8ea71ceffbeb6531a20", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9ed26f48ae18197bf147a8ea71ceffbeb6531a20", "message": "ignore iml files", "committedDate": "2019-08-27T16:03:42Z", "type": "commit"}, {"oid": "a0f2be83893b35d58cb67be994d26641d76e9e44", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a0f2be83893b35d58cb67be994d26641d76e9e44", "message": "Create and save kml file (#406)\n\n* create folder structure, add readme, metadata.json\r\n\r\n* split to mvc and add fxml file\r\n\r\n* ui and button events\r\n\r\n* UI and sketch mode\r\n\r\n* add basic kml sketching\r\n\r\n* show and hide style window after sketch complete\r\n\r\n* UI toggling based on app state\r\n\r\n* refactoring\r\n\r\n* add applying style\r\n\r\n* add saving\r\n\r\n* add combobox item list cell\r\n\r\n* show preview in combobox\r\n\r\n* JavaDoc comments\r\n\r\n* comments and refactoring\r\n\r\n* UI improvements\r\n\r\n* copyright in list cell factory\r\n\r\n* Center labels in UI\r\n\r\n* update README.md\r\n\r\n* add screenshot\r\n\r\n* improve saving\r\n\r\n* tidy ui, wait for map to load to enable ui\r\n\r\n* formatting\r\n\r\n* formatting fxml\r\n\r\n* optmise imports\r\n\r\n* remove unused css classes\r\n\r\n* improve file saving\r\n\r\n* refactor sample and improve UI\r\n\r\n* refactoring and comments\r\n\r\n* simplify UI (#407)\r\n\r\n* simplify UI\r\n\r\n* reuse file chooser\r\n\r\n* update readme, metadata, and image\r\n\r\n* add comments\r\n\r\n* remove unused imports", "committedDate": "2019-08-28T21:00:07Z", "type": "commit"}, {"oid": "f9e744d74151d2fb08d517b37cab24274654ae2d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f9e744d74151d2fb08d517b37cab24274654ae2d", "message": "Apply scheduled updates to preplanned map area (#392)\n\n* initial commit\r\n\r\n* fix launcher\r\n\r\n* add apache commons dependencies, fix runtime version\r\n\r\n* update runtime version\r\n\r\n* update gradle script\r\n\r\n* review changes\r\n\r\n* add README.metadata.json\r\n\r\n* remove gif\r\n\r\n* update screenshot\r\n\r\n* mmpk to class member\r\n\r\n* update README.metadata.json\r\n\r\n* add second check for updates after applying\r\n\r\n* refactor checking for update\r\n\r\n* title typo, widen UI\r\n\r\n* update runtime build\r\n\r\n* remove error message details, refactoring\r\n\r\n* remove unused imports\r\n\r\n* move downloading from build to settings.gradle\r\n\r\n* update README.metadata.json\r\n\r\n* remove unneeded sync direction code\r\n\r\n* remove unneeded imports\r\n\r\n* update runtime version\r\n\r\n* replace UI with alert\r\n\r\n* update screenshot and readme.md\r\n\r\n* fix alert typo\r\n\r\n* remove progress indicator, add javadocs\r\n\r\n* remove update checks and update automatically\r\n\r\n* update README.metadata.json\r\n\r\n* Revert \"remove update checks and update automatically\"\r\n\r\nThis reverts commit b9ee5ec630a52d1fd986cd4c531b47a37d45e8b6.\r\n\r\n* Revert \"update README.metadata.json\"\r\n\r\nThis reverts commit 74e6859785e0737b24833e7d98a24e8b8adbda8e.\r\n\r\n* minor cleanup\r\n\r\n* Rewording", "committedDate": "2019-09-25T08:22:26Z", "type": "commit"}, {"oid": "009b2f334250abf6dad5d1c641e42b68daf58fd7", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/009b2f334250abf6dad5d1c641e42b68daf58fd7", "message": "Patch/apply scheduled updates (#412)\n\n* remove rollback on fail\r\n\r\n* create new instance when reopen mmpk\r\n\r\n* update comments\r\n\r\n* clean up imports", "committedDate": "2019-10-03T10:34:43Z", "type": "commit"}, {"oid": "95f1ee9e0e0b4cba82deefb9ac02d487c70ff031", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/95f1ee9e0e0b4cba82deefb9ac02d487c70ff031", "message": "Data parent directory (#413)\n\n* Specify samples-data directory in File constructors\r\n\r\n* remove sout\r\n\r\n* add missing parent directory\r\n\r\n* add missing parent dir\r\n\r\n* Revert \"add missing parent dir\"\r\n\r\nThis reverts commit 29c5abe24bce0f227a88225808558c3f5b593e89.\r\n\r\n* add missing parent dir\r\n\r\n* change canonicalPath to absolutePath", "committedDate": "2019-10-22T16:28:48Z", "type": "commit"}, {"oid": "f34287c289f240571c1e297ff971d634b8cda096", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f34287c289f240571c1e297ff971d634b8cda096", "message": "specify parent directory in File constructor", "committedDate": "2019-10-22T21:16:12Z", "type": "commit"}, {"oid": "2ef5f63bb938c32afc02e0074b14cba0cb5c5424", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2ef5f63bb938c32afc02e0074b14cba0cb5c5424", "message": "avoid explicit list of excluded directories", "committedDate": "2019-10-22T21:16:42Z", "type": "commit"}, {"oid": "6d0ef08d3489d5913ebbd66f73934cc0129005c7", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/6d0ef08d3489d5913ebbd66f73934cc0129005c7", "message": "Merge branch 'master' into dev", "committedDate": "2019-10-23T21:26:17Z", "type": "commit"}, {"oid": "01a9bf80f2164c1055d2fae8733adaeb5619c5fd", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/01a9bf80f2164c1055d2fae8733adaeb5619c5fd", "message": "show progress indicator on initial load", "committedDate": "2019-10-23T21:44:25Z", "type": "commit"}, {"oid": "bdb6833d71ce7e7aaffe0f28a6c3c2a65cb0f2f1", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/bdb6833d71ce7e7aaffe0f28a6c3c2a65cb0f2f1", "message": "Jon/remove unpack workflow2 (#422)\n\n* remove unpack workflow\r\n\r\n* add System.getProperty(data.dir),", "committedDate": "2019-11-20T09:01:33Z", "type": "commit"}, {"oid": "8bb879c1b83bbfee6d6983fe6c5d87a9f496076d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8bb879c1b83bbfee6d6983fe6c5d87a9f496076d", "message": "Custom dictionary style [into dev] (#421)\n\n* add sample\r\n\r\n* add toggle box and use only overrides with effect\r\n\r\n* change initial viewpoint, rearrange code\r\n\r\n* update screenshot for new UI\r\n\r\n* update readme to reflect changes\r\n\r\n* update 'how to use'\r\n\r\n* simplify sample\r\n\r\n* var naming and comments\r\n\r\n* update screenshot, readme, comments\r\n\r\n* update README.md\r\n\r\n* update readme.md\r\n\r\n* changes from design review\r\n\r\n* review changes\r\n\r\n* remove extra comma\r\n\r\n* minor rewording\r\n\r\n* readme formatting\r\n\r\n* add data.dir property", "committedDate": "2019-11-20T09:01:53Z", "type": "commit"}, {"oid": "7ecda20d40a3b95cbcda7eb0e6f18641046fc261", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7ecda20d40a3b95cbcda7eb0e6f18641046fc261", "message": "Edit kml ground overlay [into dev] (#420)\n\n* initial commit\r\n\r\n* fix comments\r\n\r\n* refactoring\r\n\r\n* comments\r\n\r\n* fix URI\r\n\r\n* remove unused CSS, add screenshot\r\n\r\n* implement review corrections\r\n\r\n* update screenshot for new UI\r\n\r\n* UI changes, simplify applying opacity\r\n\r\n* setGroundOverlayOpacity() comment wording\r\n\r\n* update scene comment for clarity\r\n\r\n* review corrections\r\n\r\n* Change fields to local variables\r\n\r\n* add data.dir param", "committedDate": "2019-11-20T09:02:41Z", "type": "commit"}, {"oid": "afdb75a45cfe198e5a69d3fb6a05fc99366b3176", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/afdb75a45cfe198e5a69d3fb6a05fc99366b3176", "message": "Merge branch 'master' into dev", "committedDate": "2019-11-20T22:43:29Z", "type": "commit"}, {"oid": "d521670cff341219c705cda976ac88443d2562c4", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d521670cff341219c705cda976ac88443d2562c4", "message": "add panel-region class to vbox", "committedDate": "2019-11-20T22:43:46Z", "type": "commit"}, {"oid": "e06c5faa89a26c38ce3452ed424b3e56042c86ae", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e06c5faa89a26c38ce3452ed424b3e56042c86ae", "message": "Display subtype feature layer (#427)\n\n* set up sample\r\n\r\n* Update DisplaySubtypeFeatureLayerSample.java\r\n\r\n* update readme\r\n\r\n* refactor for fxml\r\n\r\n* self review\r\n\r\n* address review comments and update UI\r\n\r\n* fix typo\r\n\r\n* update method name\r\n\r\n* enable UI once sublayer has loaded\r\n\r\n* minor rewording", "committedDate": "2019-12-17T21:36:58Z", "type": "commit"}, {"oid": "dc232c2b3870cf0d931e534b14ef723e04b9ef16", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/dc232c2b3870cf0d931e534b14ef723e04b9ef16", "message": "New Sample - Find connected features in utility network (#419)\n\n* add base classes and load utility network\r\n\r\n* build UI\r\n\r\n* add creating parameters and building trace task\r\n\r\n* fix asset group and type selection\r\n\r\n* comments in asset group/type search\r\n\r\n* add sorting and selecting connected features to highlight\r\n\r\n* terminal selection dialog\r\n\r\n* formatting\r\n\r\n* comments, formatting, UI fixes\r\n\r\n* ui optimisation\r\n\r\n* fix dialog list view, add list cell\r\n\r\n* use GeometryEngine.nearestCoordinate(), javadocs, formatting\r\n\r\n* add loading utility element groups workaround\r\n\r\n* add comment to highlight workaround\r\n\r\n* refactoring, formatting, javadoc\r\n\r\n* comment spelling\r\n\r\n* restore gradle files\r\n\r\n* java-tize README\r\n\r\n* update README.md and README.metadata.json\r\n\r\n* formatting, javadoc, and comments\r\n\r\n* rename method enableButtonInteraction()\r\n\r\n* Update README.md\r\n\r\n* unchain methods for readability\r\n\r\n* remove workaround (sample only in Dev for now)\r\n\r\n* whitespace\r\n\r\n* make controls area smaller\r\n\r\n* comments on symbol creation\r\n\r\n* refactoring, wait for selection to finish to hide progress indicator\r\n\r\n* javadoc\r\n\r\n* update 'about the data'\r\n\r\n* update 'how to use'\r\n\r\n* update 'how to use' and remove reference to 'Element' in status label\r\n\r\n* unused import\r\n\r\n* formatting\r\n\r\n* remove unused imports\r\n\r\n* typos, wording, sorting of relevant apis\r\n\r\n* rename sample\r\n\r\n* use renderers for starting point and barriers\r\n\r\n* remove unneeded check for barriers list\r\n\r\n* clear previous trace results directly after trace click\r\n\r\n* remove try/catch from terminal select dialog\r\n\r\n* refactor fxml\r\n\r\n* use ChoiceDialog for terminal selection\r\n\r\n* use unique value renderer for lines\r\n\r\n* update sample for new design\r\n\r\n* optimise imports\u00a3\r\n\r\n* use string converter for terminal selection\r\n\r\n* update comments\r\n\r\n* bind handleMapViewClicked in fxml\r\n\r\n* refactoring\r\n\r\n* comments and formatting\r\n\r\n* ui improvements\r\n\r\n* refactor fetching asset type code\r\n\r\n* refactoring\r\n\r\n* improve terminal selection dialog\r\n\r\n* copyrights and readme.metadata.json\r\n\r\n* formatting and comments\r\n\r\n* fix fractionAlongEdge label\r\n\r\n* fix fractionAlongEdge label\r\n\r\n* remove console output of fraction along edge\r\n\r\n* improve error messages, keep terminal dialog in same window\r\n\r\n* improve element creation/terminal selection\r\n\r\n* better input confirmation, better terminal selection\r\n\r\n* remove check for geometry type\r\n\r\n* update readme, runtime version, code comments\r\n\r\n* readme and comments grammar\r\n\r\n* round fraction along edge, smaller UI\r\n\r\n* update screenshot for thinner UI\r\n\r\n* add base classes and load utility network\r\n\r\n* build UI\r\n\r\n* add creating parameters and building trace task\r\n\r\n* fix asset group and type selection\r\n\r\n* comments in asset group/type search\r\n\r\n* add sorting and selecting connected features to highlight\r\n\r\n* terminal selection dialog\r\n\r\n* formatting\r\n\r\n* comments, formatting, UI fixes\r\n\r\n* ui optimisation\r\n\r\n* fix dialog list view, add list cell\r\n\r\n* use GeometryEngine.nearestCoordinate(), javadocs, formatting\r\n\r\n* add loading utility element groups workaround\r\n\r\n* add comment to highlight workaround\r\n\r\n* refactoring, formatting, javadoc\r\n\r\n* comment spelling\r\n\r\n* restore gradle files\r\n\r\n* java-tize README\r\n\r\n* update README.md and README.metadata.json\r\n\r\n* formatting, javadoc, and comments\r\n\r\n* rename method enableButtonInteraction()\r\n\r\n* Update README.md\r\n\r\n* unchain methods for readability\r\n\r\n* remove workaround (sample only in Dev for now)\r\n\r\n* whitespace\r\n\r\n* make controls area smaller\r\n\r\n* comments on symbol creation\r\n\r\n* refactoring, wait for selection to finish to hide progress indicator\r\n\r\n* javadoc\r\n\r\n* update 'about the data'\r\n\r\n* update 'how to use'\r\n\r\n* update 'how to use' and remove reference to 'Element' in status label\r\n\r\n* unused import\r\n\r\n* formatting\r\n\r\n* remove unused imports\r\n\r\n* typos, wording, sorting of relevant apis\r\n\r\n* rename sample\r\n\r\n* use renderers for starting point and barriers\r\n\r\n* remove unneeded check for barriers list\r\n\r\n* clear previous trace results directly after trace click\r\n\r\n* remove try/catch from terminal select dialog\r\n\r\n* refactor fxml\r\n\r\n* use ChoiceDialog for terminal selection\r\n\r\n* use unique value renderer for lines\r\n\r\n* update sample for new design\r\n\r\n* optimise imports\u00a3\r\n\r\n* use string converter for terminal selection\r\n\r\n* update comments\r\n\r\n* bind handleMapViewClicked in fxml\r\n\r\n* refactoring\r\n\r\n* comments and formatting\r\n\r\n* ui improvements\r\n\r\n* refactor fetching asset type code\r\n\r\n* refactoring\r\n\r\n* improve terminal selection dialog\r\n\r\n* copyrights and readme.metadata.json\r\n\r\n* formatting and comments\r\n\r\n* fix fractionAlongEdge label\r\n\r\n* fix fractionAlongEdge label\r\n\r\n* remove console output of fraction along edge\r\n\r\n* improve error messages, keep terminal dialog in same window\r\n\r\n* improve element creation/terminal selection\r\n\r\n* better input confirmation, better terminal selection\r\n\r\n* remove check for geometry type\r\n\r\n* update readme, runtime version, code comments\r\n\r\n* readme and comments grammar\r\n\r\n* round fraction along edge, smaller UI\r\n\r\n* update screenshot for thinner UI", "committedDate": "2020-01-07T10:45:18Z", "type": "commit"}, {"oid": "1ce5952602401b8922737b3d030d2e0723168a60", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1ce5952602401b8922737b3d030d2e0723168a60", "message": "Update dev (#434)\n\n* use correct arcgis version (#424)\r\n\r\n* remove reference to toggling coordinates (#426)\r\n\r\n* 100.7.0 (#425)\r\n\r\n* update api version\r\n\r\n* change api version to 100.5.0\r\n\r\n* change version to 100.5.0\r\n\r\n* start updates for java 11\r\n\r\n* update java 11 parts\r\n\r\n* add dependencies for all platforms\r\n\r\n* Delete module-info.java\r\n\r\n* Update README\r\n\r\nUpdate README to alert Java 11 users to potential exceptions which may occur when running the project. Providing a suggested workaround from the OpenJavaFX docs.\r\n\r\n* Update README.md\r\n\r\n* add an integrated mesh layer sample\r\n\r\n* update arcgis version\r\n\r\n* use javafx plugin\r\n\r\n* remove jar task config\r\n\r\n* update arcgis version\r\n\r\n* move stage show\r\n\r\n* add point cloud data to sample data downloads\r\n\r\n* view point cloud data offline sample\r\n\r\n* Update build.gradle\r\n\r\n* change camera viewpoint\r\n\r\n* remove unused imports\r\n\r\n* update image\r\n\r\n* update api version\r\n\r\n* edit about the data and additional info sections\r\n\r\n* fix comment\r\n\r\n* Removed errant full stop\r\n\r\n* Open Mobile Scene Package (#318)\r\n\r\n* Gradle script includes path to download mspk file (further work required here) and implementation of sample in Java\r\n\r\n* Create README.md\r\n\r\n* Create OpenMobileScenePackage.png\r\n\r\n* Update typo in README\r\n\r\n* Updated gradle to point to correct data on AGOL\r\n\r\n* Update to sample code following review\r\n\r\n* Updates to ReadMe following review\r\n\r\n* Additional update to read me to include isDirectReadSupported.get\r\n\r\n* Updated from markdown to HTML\r\n\r\n* Remove id tags from HTML\r\n\r\n* Map reference scale (#319)\r\n\r\n* Create MapReferenceScaleSample.java\r\n\r\n* Set up MVC structure for sample\r\n\r\n* Set up basic map with MVC structure\r\n\r\n* Added label which updates scale of map as it changes\r\n\r\n* Set up means to change the map view to the selected reference scale\r\n\r\n* Set up check boxes for map layers\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Allow string in combobox, split to return double to feed into map reference scale\r\n\r\n* Link checkbox with map layer to set reference scale\r\n\r\n* Method descriptions and remove unused imports\r\n\r\n* Fix indents\r\n\r\n* Create MapReferenceScale.png\r\n\r\n* Create README.md\r\n\r\n* Convert markdown to HTML\r\n\r\n* Addressed comments from review. ComboBox now double, vBoxes will load after map has loaded\r\n\r\n* Add a method to handle setting the reference scale when interacting with the combobox and the scale sync button.\r\n\r\n* Code updates following review\r\n\r\nremoved unneeded label, added if loaded statement, and refactored map reference scale. Also updated Readme to account for behavior change.\r\n\r\n* move checkbox logic in with instanceof check\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Corrected title for sample\r\n\r\n* Merge master into dev  (#322)\r\n\r\n* Camera controller US english update (#320)\r\n\r\n* Replace \"aeroplane\" with \"plane\" in README and code\r\n\r\n* Update image to show corrected spelling\r\n\r\n* Fix grammar\r\n\r\n* Updates to Tiled Layer to show support for .tkpx files (#321)\r\n\r\n* Updates to tiled layer, including .tpkx support\r\n\r\n* Update tile cache readme to include support .tpkx\r\n\r\n* Allow downloading of non zip sample data (#324)\r\n\r\n* Allow downloading of non zip sample data\r\n\r\n* point scene layer sample (#323)\r\n\r\n* point scene layer sample\r\n\r\n* Merge master into Dev (#329)\r\n\r\n* Camera controller US english update (#320)\r\n\r\n* Replace \"aeroplane\" with \"plane\" in README and code\r\n\r\n* Update image to show corrected spelling\r\n\r\n* Fix grammar\r\n\r\n* Updates to Tiled Layer to show support for .tkpx files (#321)\r\n\r\n* Updates to tiled layer, including .tpkx support\r\n\r\n* Update tile cache readme to include support .tpkx\r\n\r\n* Update slider to show values from 1-5 rather than 0-5 (#328)\r\n\r\n* remove online elevation data source (#327)\r\n\r\n* remove online elevation data source\r\n\r\n* remove unneeded ArcGISScene object\r\n\r\n* View content beneath terrain surface (#325)\r\n\r\n* Initiating sample with Scene URL\r\n\r\n* add done loading listener for changes\r\n\r\n* portal item entry for data\r\n\r\n* Add readme and image\r\n\r\n* Update ViewContentBeneathTerrainSurfaceSample.java\r\n\r\n* update build and refactor float code\r\n\r\n* Update ViewContentBeneathTerrainSurfaceSample.java\r\n\r\n* Add layer view state changed listener\r\n\r\n* Update ViewContentBeneathTerrainSurface.png\r\n\r\n* Address comments following review\r\n\r\n* update comment for add done loading listener on to scene\r\n\r\n* Update README.md\r\n\r\n* remove unused imports\r\n\r\n* group layers sample (#331)\r\n\r\ngroup layers sample\r\n\r\n* update version, delete extra copy of samples data\r\n\r\n* Play kml tours (#332)\r\n\r\n* play a kml tour sample\r\n\r\n* Generate offline map with local basemap (#330)\r\n\r\n* added dialog box for choosing which basemap to use\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update build.gradle\r\n\r\n* refactoring and neatening up the code\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Ensure that the file exists before prompting user to find local file\r\n\r\n* Move standard code into private methods to draw attention to new API functionality\r\n\r\n* Add image and README\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update build.gradle\r\n\r\n* code restructuring (#333)\r\n\r\n* code restructuring\r\n\r\n* comment edits\r\n\r\n* Update image and readme\r\n\r\n* update description of generateOfflineMapDialog class\r\n\r\n* convert fields to local variables\r\n\r\n* convert readme from md to html\r\n\r\n* Merging Master into Dev (#345)\r\n\r\n* Browse wfs layers (#336)\r\n\r\nbrowse wfs layers sample\r\n\r\n* Raster rendering rule (#343)\r\n\r\n* create class, bring in image service raster, display it\r\n\r\n* zoom to extent of raster service\r\n\r\n* add functionality to apply hard-coded raster rendering rule\r\n\r\n* build and populate renderingruleInfoListView\r\n\r\n* change rule ListView for DropDown\r\n\r\n* make raster rendering rule apply on selection in drop-down\r\n\r\n* refactor imageServiceUrl\r\n\r\n* refactor applying rendering rule into separate function\r\n\r\n* refactor populating drop down and building HashMaps into own functions\r\n\r\n* remove HashMap, find rule through list index@\r\n\r\n* improve comments\r\n\r\n* private final String imageServiceUrl\r\n\r\n* Add screenshot and update ReadMe\r\n\r\n* fix screenshot link in README\r\n\r\n* new screenshot\r\n\r\n* use string directly as argument for ImageServiceRaster\r\n\r\n* README from MD to HTML\r\n\r\n* bring methods back into start\r\n\r\n* use ComboBox<RenderingRuleInfo> and string converter\r\n\r\n* add vbox, label to show rendering rule descr.\r\n\r\n* rearrange imports\r\n\r\n* remove imageServiceRaster.loadAsync();\r\n\r\n* add newline to label, update screenshot\r\n\r\n* change indentation to 2 spaces\r\n\r\n* Update README.md - remove html IDs and img alt\r\n\r\n* add load status indicator\r\n\r\n* fix imports\r\n\r\n* make ArgGISMap local\r\n\r\n* remove ComboBox.setEditable(False);\r\n\r\n* syntax, adding stylesheet\r\n\r\n* variable for ImageServiceRaster uri, update readme\r\n\r\n* formatting terminology in 'how it works'\r\n\r\n* readme markdown formatting\r\n\r\n* remove unused imports\r\n\r\n* comment for auto select of first rule\r\n\r\n* default selection now shows description\r\n\r\n* variable naming, remove unused code, factoring, comments\r\n\r\n* revise readme\r\n\r\n* comments, uri variable instantiated at first use\r\n\r\n* improve readme use-case\r\n\r\n* readme formatting, typos\r\n\r\n* tag formatting, typos\r\n\r\n* Merge `master` into `dev` (#350)\r\n\r\n* Browse wfs layers (#336)\r\n\r\nbrowse wfs layers sample\r\n\r\n* Raster rendering rule (#343)\r\n\r\n* Get elevation at a point (#341)\r\n\r\n* GetElevationAtAPoint - update screenshot (#348)\r\n\r\n* Token authentication (#347)\r\n\r\n* Update build.gradle\r\n\r\n* Allows user to click a value on slider to change exaggeration (#351) (#353)\r\n\r\n* Allows user to click a value on slider to change exaggeration\r\n\r\n* remove value changed listener, move annotation to correct place, add space before bracket\r\n\r\n* merge master into dev for ClosestFacilityStatic (#358)\r\n\r\n* Allows user to click a value on slider to change exaggeration (#351)\r\n* Closest facility static (#346)\r\n\r\n* merge master into dev (#362)\r\n\r\n* Clean up readme (#356)\r\n\r\n* fix/spatial-operations-reset-button (#359)\r\n\r\n* Edit and sync features (#352)\r\n\r\n* merge master into dev (#368)\r\n\r\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* merge master into dev - oAuth Sample patch (#369)\r\n\r\n* Tschie/split (#387)\r\n\r\nseparate samples into individual gradle projects, convert readmes to markdown, add readme metadata files\r\n\r\n* fix naming\r\n\r\n* Routing around barriers (#354)\r\n\r\n* build class with scene\r\n\r\n* render street map and add controls panel\r\n\r\n* add ui elements\r\n\r\n* add stops with lables on mouse click\r\n\r\n* add toggle of checkboxes\r\n\r\n* create pin symbols, number the stops incrementally\r\n\r\n* solve route task and display it, display instructions\r\n\r\n* can add barriers to map, switch between adding stops and barriers\r\n\r\n* implement barriers in routing, implement reset button\r\n\r\n* set the mode to adding stops on sample start\r\n\r\n* clear routes / barriers on right click\r\n\r\n* clear previous route when calculating new route\r\n\r\n* rearrange code for readability\r\n\r\n* symbol colours, fix remove last barrier\r\n\r\n* improve deleting stops and barriers\r\n\r\n* ui improvements, comments\r\n\r\n* improve comments/code structure, pin design\r\n\r\n* split sample into MVC structure with fxml\r\n\r\n* edit ui and comments\r\n\r\n* arrange code, comments, ui improvements\r\n\r\n* add display of travel time and distance\r\n\r\n* ui tweaks, add screenshot\r\n\r\n* add how it works, add use case\r\n\r\n* move variables from class to function scope\r\n\r\n* variable naming\r\n\r\n* README to html\r\n\r\n* revise readme\r\n\r\n* revise readme\r\n\r\n* add code comments\r\n\r\n* tidy imports\r\n\r\n* show route length in miles\r\n\r\n* whitespace\r\n\r\n* improve return compositesymbol\r\n\r\n* improve string formatting in route info\r\n\r\n* remove TODO\r\n\r\n* route length shows in km\r\n\r\n* remove unneeded TODOs\r\n\r\n* comment formatting\r\n\r\n* comment wording\r\n\r\n* comment wording\r\n\r\n* var naming, refactoring\r\n\r\n* fix bad routing condition, remove unused imports\r\n\r\n* comments and refactoring\r\n\r\n* barrier/route symbols to instance variables\r\n\r\n* create route task at launch\r\n\r\n* improve route solving and UI\r\n\r\n* whitespace\r\n\r\n* functions -> in-line code\r\n\r\n* readme edits\r\n\r\n* variables to method scope\r\n\r\n* fxml formtting, commenting, ui improvements\r\n\r\n* fxml line breaks\r\n\r\n* change 2nd order lists to ul\r\n\r\n* add normalizing geometry code\r\n\r\n* fxml refactor\r\n\r\n* reset title pane, pin image to class var\r\n\r\n* improve route info fetch\r\n\r\n* route/stop lists -> linked lists\r\n\r\n* improve removing stops/barriers\r\n\r\n* refactor click handling\r\n\r\n* refactor click handling\r\n\r\n* improve deleting stops/barriers\r\n\r\n* refactor adding/deleting stops\r\n\r\n* fixes\r\n\r\n* comments\r\n\r\n* indentation\r\n\r\n* formatting sample file\r\n\r\n* update README.md, comments\r\n\r\n* determine route automatically\r\n\r\n* use renderer for route graphics\r\n\r\n* bug fixes, refactoring\r\n\r\n* formatting\r\n\r\n* README.md to MD\r\n\r\n* remove extra backtick\r\n\r\n* add gradle wrapper\r\n\r\n* set main class to launcher\r\n\r\n* update README.md\r\n\r\n* Find service areas for multiple facilities (#367)\r\n\r\n* create basic class with ui elements, symbols\r\n\r\n* load in feature table, layer, and zoom to extent\r\n\r\n* solve service area task and display\r\n\r\n* UI improvements\r\n\r\n* imports\r\n\r\n* add facilities to task through featuretable\r\n\r\n* formatting\r\n\r\n* refactoring, ui fixes\r\n\r\n* comments and formatting\r\n\r\n* rm comment\r\n\r\n* add readme and screenshot\r\n\r\n* readme and comment edits\r\n\r\n* rename, remove reset button\r\n\r\n* rename, reduce service area\r\n\r\n* update readme to mirror design\r\n\r\n* comments\r\n\r\n* remove unused SimpleFillSymbol\r\n\r\n* graphics changes\r\n\r\n* change basemap to grey canvas\r\n\r\n* refactoring and variable naming\r\n\r\n* refactoring\r\n\r\n* readme wording\r\n\r\n* comments\r\n\r\n* screenshot\r\n\r\n* 3/5min service areas, yellow/red color\r\n\r\n* comments, bigger facility symbols\r\n\r\n* remove unneeded code, comment improvements, loop indices\r\n\r\n* describe both cutoffs in readme\r\n\r\n* service area comment\r\n\r\n* readme to html\r\n\r\n* smaller service areas, new screenshot\r\n\r\n* update readme for new service areas\r\n\r\n* update README.md, sample title\r\n\r\n* implement review changes\r\n\r\n* update settings.gradle\r\n\r\n* update build.gradle\r\n\r\n* package and folder names\r\n\r\n* Sample title: Area -> Areas\r\n\r\n* add gradle wrapper\r\n\r\n* fix main class name\r\n\r\n* implement review changes\r\n\r\n* update README.md, comments\r\n\r\n* update screenshot\r\n\r\n* update screenshot\r\n\r\n* Fix comment in ColormapRendererSample.java (#391)\r\n\r\n* Patch/create and save map - default challenge handler (#388)\r\n\r\n* implement default challenge handler\r\n\r\n* Update CreateAndSaveMapController.java\r\n\r\nfix typo\r\n\r\n* Update README.md\r\n\r\n* update README.md, code formatting\r\n\r\n* remove ShowMessage() method\r\n\r\n* review changes, update README to standard format\r\n\r\n* code formatting\r\n\r\n* Read symbols from mobile style file (#357)\r\n\r\n* create basic sample class with stage and map\r\n\r\n* split into main class, controller, fxml\r\n\r\n* load and search stylx file\r\n\r\n* click adds symbol to map\r\n\r\n* add styles to preview\r\n\r\n* add style to combobox, build preview on select\r\n\r\n* auto-build symbol preview and add on click\r\n\r\n* add slider to control size\r\n\r\n* add color selection dropdown\r\n\r\n* preview symbols in combobox\r\n\r\n* color only affects first symbol layer\r\n\r\n* code formatting, change first color to yellow\r\n\r\n* fix symbol and graphic sizing bug\r\n\r\n* improve variables\r\n\r\n* comboboxes to listviews\r\n\r\n* UI improvements and comments\r\n\r\n* refactoring and comments\r\n\r\n* make preview not resize with slider\r\n\r\n* refactoring\r\n\r\n* add readme\r\n\r\n* allow empty symbol selection, resize preview, fix mouse clicks\r\n\r\n* fix size slider preview\r\n\r\n* add labels and reset button\r\n\r\n* ui improvements\r\n\r\n* formatting and comments\r\n\r\n* add red color option, add screenshot\r\n\r\n* fxml formatting\r\n\r\n* formatting\r\n\r\n* formatting\r\n\r\n* refactoring\r\n\r\n* comments and refactoring\r\n\r\n* fxml refactor\r\n\r\n* formatting\r\n\r\n* comments and refactoring\r\n\r\n* swap SymbolLayerInfo class for HashMap\r\n\r\n* comments\r\n\r\n* use SymbolStyleSearchResult directly to access symbols\r\n\r\n* comments and refactoring\r\n\r\n* implement slider functionality through fxml\r\n\r\n* formatting\r\n\r\n* improve use case\r\n\r\n* use case wording\r\n\r\n* improve updateSymbolSize()\r\n\r\n* Revert \"improve updateSymbolSize()\"\r\n\r\nThis reverts commit 372e73c09825265a016adfb59400ca849d3043c0.\r\n\r\n* refactor mouse click into fxml\r\n\r\n* add default switch case\r\n\r\n* inner classes to bottom of the file\r\n\r\n* reorder for consistency\r\n\r\n* whitespace\r\n\r\n* listview array instead of list\r\n\r\n* refactoring\r\n\r\n* ui improvements\r\n\r\n* readme improvements\r\n\r\n* review corrections\r\n\r\n* commen\r\n\r\n* change colour options\r\n\r\n* slider reacts to click and to drag\r\n\r\n* implement review changes\r\n\r\n* update README.md\r\n\r\n* inner classes to private, override methods\r\n\r\n* Update README.md\r\n\r\n* add gradle wrapper\r\n\r\n* fix data download\r\n\r\n* implement review changes\r\n\r\n* review changes, implement color picker\r\n\r\n* code formatting\r\n\r\n* Update geopackage sample (#374)\r\n\r\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* patch oAuth sample custom challengehandler (#366)\r\n\r\n* implement fix for javafx webengine\r\n\r\n* formatting\r\n\r\n* add fix for create and save map sample\r\n\r\n* markdown to html formatting\r\n\r\n* update read geopackage design\r\n\r\n* update readme code snippets\r\n\r\n* improve comments\r\n\r\n* remove unneeded comments\r\n\r\n* comment wording\r\n\r\n* implement review corrections\r\n\r\n* whitespace\r\n\r\n* remove unrelated files\r\n\r\n* implement review changes\r\n\r\n* remove css stylesheet\r\n\r\n* clean up some comments\r\n\r\n* add readme metadata file\r\n\r\n* Patch/oauth default challenge handler (#375)\r\n\r\n* oauth with default challenge handler\r\n\r\n* code formatting and comments\r\n\r\n* correct redirect uri\r\n\r\n* remove fxml, formatting\r\n\r\n* revert gradle-wrapper.jar\r\n\r\n* comments\r\n\r\n* readme updated for def challenge handler\r\n\r\n* implement review changes\r\n\r\n* rename class file to match docsgst\r\n\r\n* rename package\r\n\r\n* implement default challenge handler\r\n\r\n* restore build.gradle\r\n\r\n* Revert \"restore build.gradle\"\r\n\r\nThis reverts commit 35c1df0c3df53e1748ee44db0cb388085fa066b6.\r\n\r\n* Revert \"implement default challenge handler\"\r\n\r\nThis reverts commit bd984783687fa1e2653f366fe9a99ff74bed6055.\r\n\r\n* fix screenshot file name\r\n\r\n* revert package and class name\r\n\r\n* update README.md\r\n\r\n* revert sample name, update README.metadata.json\r\n\r\n* implement review changes\r\n\r\n* remove extra comma\r\n\r\n* Routing around barriers - add isStillSincePress to mouse events (#394)\r\n\r\n* add isStillSincePress to mouse events\r\n\r\n* remove error log from error dialog\r\n\r\n* oauth - README.metadata.json formatting (#395)\r\n\r\n* formatting\r\n\r\n* mmpk to class member (#398)\r\n\r\n* Patch/dictionary symbol style update constructor (#393)\r\n\r\n* update DictionarySymbolStyle constructor\r\n\r\n* update README.md and comments\r\n\r\n* update Item ID\r\n\r\n* update constructor in remaining samples\r\n\r\n* update README.md, README.metadata.json\r\n\r\n* optimise imports\r\n\r\n* update xml files to remove control points\r\n\r\n* get Mil2525d xml from AGOL where applicable\r\n\r\n* remove xml in resources\r\n\r\n* fix typo on mil2525d\r\n\r\n* Patch/geometry engine simplify - add isSimple check (#399)\r\n\r\n* add isSimple check\r\n\r\n* update Readme.md\r\n\r\n* update comments, update metadata.json\r\n\r\n* Integrated windows auth (#370)\r\n\r\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* patch oAuth sample custom challengehandler (#366)\r\n\r\n* implement fix for javafx webengine\r\n\r\n* formatting\r\n\r\n* add fix for create and save map sample\r\n\r\n* markdown to html formatting\r\n\r\n* working sample\r\n\r\n* comments, formatting, UI improvements\r\n\r\n* UI, screenshot, readme\r\n\r\n* readme formatting\r\n\r\n* code formatting\r\n\r\n* ui improvements, screenshot\r\n\r\n* comments, formatting\r\n\r\n* readme tags\r\n\r\n* javadoc comments\r\n\r\n* ui improvements\r\n\r\n* ui improvements\r\n\r\n* refactoring\r\n\r\n* comments\r\n\r\n* address review suggestions\r\n\r\n* smaller UI\r\n\r\n* update screenshot\r\n\r\n* listview holds portal item ids\r\n\r\n* Update README.md, comments\r\n\r\n* update README.md\r\n\r\n* fix package and path names\r\n\r\n* delete irrelevant files\r\n\r\n* readme to MD\r\n\r\n* add README.metadata.json\r\n\r\n* updated README.metadata.json\r\n\r\n* remove public search, refactoring\r\n\r\n* whitespace\r\n\r\n* cell factory to class, fxml tidying\r\n\r\n* error handling, comments, refactoring\r\n\r\n* error handling\r\n\r\n* remove loading/portal info text\r\n\r\n* class member to local var\r\n\r\n* update Readme.md for UI changes and review suggestions\r\n\r\n* refactoring\r\n\r\n* fix typo\r\n\r\n* Move construction of portal query parameters to its own line\r\n\r\n* small UI improvements, update screenshot\r\n\r\n* update README.md for screenshot link (#403)\r\n\r\n* Integrated windows auth - update README.metadata.json (#402)\r\n\r\n* update RAEDME.metadata.json\r\n\r\n* update tags in README.metadata.json\r\n\r\n* move local data download logic to settings.gradle (#401)\r\n\r\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* patch oAuth sample custom challengehandler (#366)\r\n\r\n* implement fix for javafx webengine\r\n\r\n* formatting\r\n\r\n* add fix for create and save map sample\r\n\r\n* markdown to html formatting\r\n\r\n* corrects WKID to 4326 (#389)\r\n\r\n* corrects WKID to 4326\r\n\r\n* use SpatialReferences.getWgs84\r\n\r\n* move local data download logic to settings.gradle\r\n\r\n* move data download logic to settings.gradle\r\n\r\n* fix data paths\r\n\r\n* fixing data download for mil2505 xml file for sample viewer v2504 (#404)\r\n\r\n* update DictionarySymbolStyle constructor\r\n\r\n* update README.md and comments\r\n\r\n* update Item ID\r\n\r\n* update constructor in remaining samples\r\n\r\n* update README.md, README.metadata.json\r\n\r\n* optimise imports\r\n\r\n* update xml files to remove control points\r\n\r\n* get Mil2525d xml from AGOL where applicable\r\n\r\n* remove xml in resources\r\n\r\n* move data download to settings.gradle, fix paths\r\n\r\n* fix typo\r\n\r\n* fix directory name\r\n\r\n* fix local data folder\r\n\r\n* put native libraries in .arcgis folder\r\n\r\n* Honor mmpk expiration (#397)\r\n\r\n* initial commit\r\n\r\n* working sample\r\n\r\n* refactoring\r\n\r\n* refactoring, comments\r\n\r\n* copyright statement in Launcher class\r\n\r\n* data download to settings.gradle\r\n\r\n* change expiration display to static date, CSS edits\r\n\r\n* update screenshot\r\n\r\n* expiration message to sentence case\r\n\r\n* fix settings.gradle. Again.\r\n\r\n* plement review suggestions\r\n\r\n* formatting\r\n\r\n* update README.metadata.json\r\n\r\n* comments\r\n\r\n* Set annotation sublayer visibility (#396)\r\n\r\n* show scale in label\r\n\r\n* load mmpk\r\n\r\n* add checkboxes with labels\r\n\r\n* activate checkboxes, change checkbox text color dynamically\r\n\r\n* update label color\r\n\r\n* fix checkboxes, comments\r\n\r\n* optimise imports, copyright comment\r\n\r\n* labels and screenshot\r\n\r\n* update screenshot\r\n\r\n* update runtime build, update README.md\r\n\r\n* mmpk to class member\r\n\r\n* formatting and comments\r\n\r\n* javadoc comments\r\n\r\n* restore show_callout files\r\n\r\n* move downloading of sample data to settings.gradle\r\n\r\n* fix package naming\r\n\r\n* move scale label to control panel, check mmpk contains maps\r\n\r\n* fix checkbox text colours\r\n\r\n* UI fixes and label colouring\r\n\r\n* data download in settings.gradle\r\n\r\n* update README.md\r\n\r\n* update screenshot for UI changes\r\n\r\n* fix settings.gradle\r\n\r\n* fix settings.gradle\r\n\r\n* formatting\r\n\r\n* README.metadata.json redirect url to blank string\r\n\r\n* update README.md\r\n\r\n* Tschie/preplanned map (#405)\r\n\r\n* download preplanned map sample\r\n\r\n* refactoring\r\n\r\n* add ref to update parameters\r\n\r\n* method/enum name for update option\r\n\r\n* method/enum name for update option\r\n\r\n* update runtime version, imports\r\n\r\n* inner class to private\r\n\r\n* add auth manager to handle OAuth challenge\r\n\r\n* mark portal as requires authentication\r\n\r\n* update README.md\r\n\r\n* add screenshot alt text\r\n\r\n* update README.md\r\n\r\n* update README.md\r\n\r\n* update README.md for scheduled updates workflow\r\n\r\n* update link to guide\r\n\r\n* update README.md\r\n\r\n* update use case\r\n\r\n* improve 'how it works'\r\n\r\n* add preview of area of interest\r\n\r\n* improve drawing area of interest\r\n\r\n* update use case wording, references in additional information\r\n\r\n* fix deleting temp files, add button 'return to web map'\r\n\r\n* add numbering to list view\r\n\r\n* zoom to area on select, refactoring\r\n\r\n* update listener adding/removing\r\n\r\n* refactoring\r\n\r\n* disable/enable showWebMapButton approprately\r\n\r\n* add README.metadata.json\r\n\r\n* fix function naming\r\n\r\n* add confirmation popup when deleting\r\n\r\n* refactoring, use commons library to delete\r\n\r\n* fix commons-io dependency\r\n\r\n* 'show web map' button width\r\n\r\n* reorder imports\r\n\r\n* improve viewpoint change, button updates\r\n\r\n* smaller UI\r\n\r\n* refactoring and comments\r\n\r\n* javadoc comments and formatting\r\n\r\n* remove stray q file\r\n\r\n* address review corrections\r\n\r\n* review changes and refactoring\r\n\r\n* refactoring\r\n\r\n* whitespace\r\n\r\n* web map -> online map\r\n\r\n* further information -> additional information\r\n\r\n* mmpk to class member\r\n\r\n* change button text\r\n\r\n* selecting view online map pans to selected area\r\n\r\n* formatting\r\n\r\n* update README.md\r\n\r\n* copyright statements\r\n\r\n* remove commented code\r\n\r\n* try to simplify a bit\r\n\r\n* simplify sample\r\n\r\n* don't hide graphics overlay on download\r\n\r\n* add snippet\r\n\r\n* update How to use the sample section\r\n\r\n* Update DownloadPreplannedMap.png\r\n\r\n* Slim up the use case\r\n\r\n* remove fxml comments\r\n\r\n* remove redirect from for new sample\r\n\r\n* ignore iml files\r\n\r\n* Create and save kml file (#406)\r\n\r\n* create folder structure, add readme, metadata.json\r\n\r\n* split to mvc and add fxml file\r\n\r\n* ui and button events\r\n\r\n* UI and sketch mode\r\n\r\n* add basic kml sketching\r\n\r\n* show and hide style window after sketch complete\r\n\r\n* UI toggling based on app state\r\n\r\n* refactoring\r\n\r\n* add applying style\r\n\r\n* add saving\r\n\r\n* add combobox item list cell\r\n\r\n* show preview in combobox\r\n\r\n* JavaDoc comments\r\n\r\n* comments and refactoring\r\n\r\n* UI improvements\r\n\r\n* copyright in list cell factory\r\n\r\n* Center labels in UI\r\n\r\n* update README.md\r\n\r\n* add screenshot\r\n\r\n* improve saving\r\n\r\n* tidy ui, wait for map to load to enable ui\r\n\r\n* formatting\r\n\r\n* formatting fxml\r\n\r\n* optmise imports\r\n\r\n* remove unused css classes\r\n\r\n* improve file saving\r\n\r\n* refactor sample and improve UI\r\n\r\n* refactoring and comments\r\n\r\n* simplify UI (#407)\r\n\r\n* simplify UI\r\n\r\n* reuse file chooser\r\n\r\n* update readme, metadata, and image\r\n\r\n* add comments\r\n\r\n* remove unused imports\r\n\r\n* Apply scheduled updates to preplanned map area (#392)\r\n\r\n* initial commit\r\n\r\n* fix launcher\r\n\r\n* add apache commons dependencies, fix runtime version\r\n\r\n* update runtime version\r\n\r\n* update gradle script\r\n\r\n* review changes\r\n\r\n* add README.metadata.json\r\n\r\n* remove gif\r\n\r\n* update screenshot\r\n\r\n* mmpk to class member\r\n\r\n* update README.metadata.json\r\n\r\n* add second check for updates after applying\r\n\r\n* refactor checking for update\r\n\r\n* title typo, widen UI\r\n\r\n* update runtime build\r\n\r\n* remove error message details, refactoring\r\n\r\n* remove unused imports\r\n\r\n* move downloading from build to settings.gradle\r\n\r\n* update README.metadata.json\r\n\r\n* remove unneeded sync direction code\r\n\r\n* remove unneeded imports\r\n\r\n* update runtime version\r\n\r\n* replace UI with alert\r\n\r\n* update screenshot and readme.md\r\n\r\n* fix alert typo\r\n\r\n* remove progress indicator, add javadocs\r\n\r\n* remove update checks and update automatically\r\n\r\n* update README.metadata.json\r\n\r\n* Revert \"remove update checks and update automatically\"\r\n\r\nThis reverts commit b9ee5ec630a52d1fd986cd4c531b47a37d45e8b6.\r\n\r\n* Revert \"update README.metadata.json\"\r\n\r\nThis reverts commit 74e6859785e0737b24833e7d98a24e8b8adbda8e.\r\n\r\n* minor cleanup\r\n\r\n* Rewording\r\n\r\n* Patch/apply scheduled updates (#412)\r\n\r\n* remove rollback on fail\r\n\r\n* create new instance when reopen mmpk\r\n\r\n* update comments\r\n\r\n* clean up imports\r\n\r\n* Data parent directory (#413)\r\n\r\n* Specify samples-data directory in File constructors\r\n\r\n* remove sout\r\n\r\n* add missing parent directory\r\n\r\n* add missing parent dir\r\n\r\n* Revert \"add missing parent dir\"\r\n\r\nThis reverts commit 29c5abe24bce0f227a88225808558c3f5b593e89.\r\n\r\n* add missing parent dir\r\n\r\n* change canonicalPath to absolutePath\r\n\r\n* specify parent directory in File constructor\r\n\r\n* avoid explicit list of excluded directories\r\n\r\n* show progress indicator on initial load\r\n\r\n* Jon/remove unpack workflow2 (#422)\r\n\r\n* remove unpack workflow\r\n\r\n* add System.getProperty(data.dir),\r\n\r\n* Custom dictionary style [into dev] (#421)\r\n\r\n* add sample\r\n\r\n* add toggle box and use only overrides with effect\r\n\r\n* change initial viewpoint, rearrange code\r\n\r\n* update screenshot for new UI\r\n\r\n* update readme to reflect changes\r\n\r\n* update 'how to use'\r\n\r\n* simplify sample\r\n\r\n* var naming and comments\r\n\r\n* update screenshot, readme, comments\r\n\r\n* update README.md\r\n\r\n* update readme.md\r\n\r\n* changes from design review\r\n\r\n* review changes\r\n\r\n* remove extra comma\r\n\r\n* minor rewording\r\n\r\n* readme formatting\r\n\r\n* add data.dir property\r\n\r\n* Edit kml ground overlay [into dev] (#420)\r\n\r\n* initial commit\r\n\r\n* fix comments\r\n\r\n* refactoring\r\n\r\n* comments\r\n\r\n* fix URI\r\n\r\n* remove unused CSS, add screenshot\r\n\r\n* implement review corrections\r\n\r\n* update screenshot for new UI\r\n\r\n* UI changes, simplify applying opacity\r\n\r\n* setGroundOverlayOpacity() comment wording\r\n\r\n* update scene comment for clarity\r\n\r\n* review corrections\r\n\r\n* Change fields to local variables\r\n\r\n* add data.dir param\r\n\r\n* add panel-region class to vbox\r\n\r\n* update arcgis version to 100.7.0\r\n\r\n* remove reference to toggling coordinates (#428)\r\n\r\n* Display subtype feature layer (#427)\r\n\r\n* set up sample\r\n\r\n* Update DisplaySubtypeFeatureLayerSample.java\r\n\r\n* update readme\r\n\r\n* refactor for fxml\r\n\r\n* self review\r\n\r\n* address review comments and update UI\r\n\r\n* fix typo\r\n\r\n* update method name\r\n\r\n* enable UI once sublayer has loaded\r\n\r\n* minor rewording\r\n\r\n* correct package\r\n\r\n* correct category case (#431)\r\n\r\n* Patch/iwa self signed (#430)\r\n\r\n* update api version\r\n\r\n* change api version to 100.5.0\r\n\r\n* change version to 100.5.0\r\n\r\n* start updates for java 11\r\n\r\n* update java 11 parts\r\n\r\n* add dependencies for all platforms\r\n\r\n* Delete module-info.java\r\n\r\n* Update README\r\n\r\nUpdate README to alert Java 11 users to potential exceptions which may occur when running the project. Providing a suggested workaround from the OpenJavaFX docs.\r\n\r\n* Update README.md\r\n\r\n* add an integrated mesh layer sample\r\n\r\n* update arcgis version\r\n\r\n* use javafx plugin\r\n\r\n* remove jar task config\r\n\r\n* update arcgis version\r\n\r\n* move stage show\r\n\r\n* add point cloud data to sample data downloads\r\n\r\n* view point cloud data offline sample\r\n\r\n* Update build.gradle\r\n\r\n* change camera viewpoint\r\n\r\n* remove unused imports\r\n\r\n* update image\r\n\r\n* update api version\r\n\r\n* edit about the data and additional info sections\r\n\r\n* fix comment\r\n\r\n* Removed errant full stop\r\n\r\n* Open Mobile Scene Package (#318)\r\n\r\n* Gradle script includes path to download mspk file (further work required here) and implementation of sample in Java\r\n\r\n* Create README.md\r\n\r\n* Create OpenMobileScenePackage.png\r\n\r\n* Update typo in README\r\n\r\n* Updated gradle to point to correct data on AGOL\r\n\r\n* Update to sample code following review\r\n\r\n* Updates to ReadMe following review\r\n\r\n* Additional update to read me to include isDirectReadSupported.get\r\n\r\n* Updated from markdown to HTML\r\n\r\n* Remove id tags from HTML\r\n\r\n* Map reference scale (#319)\r\n\r\n* Create MapReferenceScaleSample.java\r\n\r\n* Set up MVC structure for sample\r\n\r\n* Set up basic map with MVC structure\r\n\r\n* Added label which updates scale of map as it changes\r\n\r\n* Set up means to change the map view to the selected reference scale\r\n\r\n* Set up check boxes for map layers\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Allow string in combobox, split to return double to feed into map reference scale\r\n\r\n* Link checkbox with map layer to set reference scale\r\n\r\n* Method descriptions and remove unused imports\r\n\r\n* Fix indents\r\n\r\n* Create MapReferenceScale.png\r\n\r\n* Create README.md\r\n\r\n* Convert markdown to HTML\r\n\r\n* Addressed comments from review. ComboBox now double, vBoxes will load after map has loaded\r\n\r\n* Add a method to handle setting the reference scale when interacting with the combobox and the scale sync button.\r\n\r\n* Code updates following review\r\n\r\nremoved unneeded label, added if loaded statement, and refactored map reference scale. Also updated Readme to account for behavior change.\r\n\r\n* move checkbox logic in with instanceof check\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Corrected title for sample\r\n\r\n* Merge master into dev  (#322)\r\n\r\n* Camera controller US english update (#320)\r\n\r\n* Replace \"aeroplane\" with \"plane\" in README and code\r\n\r\n* Update image to show corrected spelling\r\n\r\n* Fix grammar\r\n\r\n* Updates to Tiled Layer to show support for .tkpx files (#321)\r\n\r\n* Updates to tiled layer, including .tpkx support\r\n\r\n* Update tile cache readme to include support .tpkx\r\n\r\n* Allow downloading of non zip sample data (#324)\r\n\r\n* Allow downloading of non zip sample data\r\n\r\n* point scene layer sample (#323)\r\n\r\n* point scene layer sample\r\n\r\n* Merge master into Dev (#329)\r\n\r\n* Camera controller US english update (#320)\r\n\r\n* Replace \"aeroplane\" with \"plane\" in README and code\r\n\r\n* Update image to show corrected spelling\r\n\r\n* Fix grammar\r\n\r\n* Updates to Tiled Layer to show support for .tkpx files (#321)\r\n\r\n* Updates to tiled layer, including .tpkx support\r\n\r\n* Update tile cache readme to include support .tpkx\r\n\r\n* Update slider to show values from 1-5 rather than 0-5 (#328)\r\n\r\n* remove online elevation data source (#327)\r\n\r\n* remove online elevation data source\r\n\r\n* remove unneeded ArcGISScene object\r\n\r\n* View content beneath terrain surface (#325)\r\n\r\n* Initiating sample with Scene URL\r\n\r\n* add done loading listener for changes\r\n\r\n* portal item entry for data\r\n\r\n* Add readme and image\r\n\r\n* Update ViewContentBeneathTerrainSurfaceSample.java\r\n\r\n* update build and refactor float code\r\n\r\n* Update ViewContentBeneathTerrainSurfaceSample.java\r\n\r\n* Add layer view state changed listener\r\n\r\n* Update ViewContentBeneathTerrainSurface.png\r\n\r\n* Address comments following review\r\n\r\n* update comment for add done loading listener on to scene\r\n\r\n* Update README.md\r\n\r\n* remove unused imports\r\n\r\n* group layers sample (#331)\r\n\r\ngroup layers sample\r\n\r\n* update version, delete extra copy of samples data\r\n\r\n* Play kml tours (#332)\r\n\r\n* play a kml tour sample\r\n\r\n* Generate offline map with local basemap (#330)\r\n\r\n* added dialog box for choosing which basemap to use\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update build.gradle\r\n\r\n* refactoring and neatening up the code\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Ensure that the file exists before prompting user to find local file\r\n\r\n* Move standard code into private methods to draw attention to new API functionality\r\n\r\n* Add image and README\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update build.gradle\r\n\r\n* code restructuring (#333)\r\n\r\n* code restructuring\r\n\r\n* comment edits\r\n\r\n* Update image and readme\r\n\r\n* update description of generateOfflineMapDialog class\r\n\r\n* convert fields to local variables\r\n\r\n* convert readme from md to html\r\n\r\n* Merging Master into Dev (#345)\r\n\r\n* Browse wfs layers (#336)\r\n\r\nbrowse wfs layers sample\r\n\r\n* Raster rendering rule (#343)\r\n\r\n* create class, bring in image service raster, display it\r\n\r\n* zoom to extent of raster service\r\n\r\n* add functionality to apply hard-coded raster rendering rule\r\n\r\n* build and populate renderingruleInfoListView\r\n\r\n* change rule ListView for DropDown\r\n\r\n* make raster rendering rule apply on selection in drop-down\r\n\r\n* refactor imageServiceUrl\r\n\r\n* refactor applying rendering rule into separate function\r\n\r\n* refactor populating drop down and building HashMaps into own functions\r\n\r\n* remove HashMap, find rule through list index@\r\n\r\n* improve comments\r\n\r\n* private final String imageServiceUrl\r\n\r\n* Add screenshot and update ReadMe\r\n\r\n* fix screenshot link in README\r\n\r\n* new screenshot\r\n\r\n* use string directly as argument for ImageServiceRaster\r\n\r\n* README from MD to HTML\r\n\r\n* bring methods back into start\r\n\r\n* use ComboBox<RenderingRuleInfo> and string converter\r\n\r\n* add vbox, label to show rendering rule descr.\r\n\r\n* rearrange imports\r\n\r\n* remove imageServiceRaster.loadAsync();\r\n\r\n* add newline to label, update screenshot\r\n\r\n* change indentation to 2 spaces\r\n\r\n* Update README.md - remove html IDs and img alt\r\n\r\n* add load status indicator\r\n\r\n* fix imports\r\n\r\n* make ArgGISMap local\r\n\r\n* remove ComboBox.setEditable(False);\r\n\r\n* syntax, adding stylesheet\r\n\r\n* variable for ImageServiceRaster uri, update readme\r\n\r\n* formatting terminology in 'how it works'\r\n\r\n* readme markdown formatting\r\n\r\n* remove unused imports\r\n\r\n* comment for auto select of first rule\r\n\r\n* default selection now shows description\r\n\r\n* variable naming, remove unused code, factoring, comments\r\n\r\n* revise readme\r\n\r\n* comments, uri variable instantiated at first use\r\n\r\n* improve readme use-case\r\n\r\n* readme formatting, typos\r\n\r\n* tag formatting, typos\r\n\r\n* Merge `master` into `dev` (#350)\r\n\r\n* Browse wfs layers (#336)\r\n\r\nbrowse wfs layers sample\r\n\r\n* Raster rendering rule (#343)\r\n\r\n* Get elevation at a point (#341)\r\n\r\n* GetElevationAtAPoint - update screenshot (#348)\r\n\r\n* Token authentication (#347)\r\n\r\n* Update build.gradle\r\n\r\n* Allows user to click a value on slider to change exaggeration (#351) (#353)\r\n\r\n* Allows user to click a value on slider to change exaggeration\r\n\r\n* remove value changed listener, move annotation to correct place, add space before bracket\r\n\r\n* merge master into dev for ClosestFacilityStatic (#358)\r\n\r\n* Allows user to click a value on slider to change exaggeration (#351)\r\n* Closest facility static (#346)\r\n\r\n* merge master into dev (#362)\r\n\r\n* Clean up readme (#356)\r\n\r\n* fix/spatial-operations-reset-button (#359)\r\n\r\n* Edit and sync features (#352)\r\n\r\n* merge master into dev (#368)\r\n\r\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* merge master into dev - oAuth Sample patch (#369)\r\n\r\n* Tschie/split (#387)\r\n\r\nseparate samples into individual gradle projects, convert readmes to markdown, add readme metadata files\r\n\r\n* fix naming\r\n\r\n* Routing around barriers (#354)\r\n\r\n* build class with scene\r\n\r\n* render street map and add controls panel\r\n\r\n* add ui elements\r\n\r\n* add stops with lables on mouse click\r\n\r\n* add toggle of checkboxes\r\n\r\n* create pin symbols, number the stops incrementally\r\n\r\n* solve route task and display it, display instructions\r\n\r\n* can add barriers to map, switch between adding stops and barriers\r\n\r\n* implement barriers in routing, implement reset button\r\n\r\n* set the mode to adding stops on sample start\r\n\r\n* clear routes / barriers on right click\r\n\r\n* clear previous route when calculating new route\r\n\r\n* rearrange code for readability\r\n\r\n* symbol colours, fix remove last barrier\r\n\r\n* improve deleting stops and barriers\r\n\r\n* ui improvements, comments\r\n\r\n* improve comments/code structure, pin design\r\n\r\n* split sample into MVC structure with fxml\r\n\r\n* edit ui and comments\r\n\r\n* arrange code, comments, ui improvements\r\n\r\n* add display of travel time and distance\r\n\r\n* ui tweaks, add screenshot\r\n\r\n* add how it works, add use case\r\n\r\n* move variables from class to function scope\r\n\r\n* variable naming\r\n\r\n* README to html\r\n\r\n* revise readme\r\n\r\n* revise readme\r\n\r\n* add code comments\r\n\r\n* tidy imports\r\n\r\n* show route length in miles\r\n\r\n* whitespace\r\n\r\n* improve return compositesymbol\r\n\r\n* improve string formatting in route info\r\n\r\n* remove TODO\r\n\r\n* route length shows in km\r\n\r\n* remove unneeded TODOs\r\n\r\n* comment formatting\r\n\r\n* comment wording\r\n\r\n* comment wording\r\n\r\n* var naming, refactoring\r\n\r\n* fix bad routing condition, remove unused imports\r\n\r\n* comments and refactoring\r\n\r\n* barrier/route symbols to instance variables\r\n\r\n* create route task at launch\r\n\r\n* improve route solving and UI\r\n\r\n* whitespace\r\n\r\n* functions -> in-line code\r\n\r\n* readme edits\r\n\r\n* variables to method scope\r\n\r\n* fxml formtting, commenting, ui improvements\r\n\r\n* fxml line breaks\r\n\r\n* change 2nd order lists to ul\r\n\r\n* add normalizing geometry code\r\n\r\n* fxml refactor\r\n\r\n* reset title pane, pin image to class var\r\n\r\n* improve route info fetch\r\n\r\n* route/stop lists -> linked lists\r\n\r\n* improve removing stops/barriers\r\n\r\n* refactor click handling\r\n\r\n* refactor click handling\r\n\r\n* improve deleting stops/barriers\r\n\r\n* refactor adding/deleting stops\r\n\r\n* fixes\r\n\r\n* comments\r\n\r\n* indentation\r\n\r\n* formatting sample file\r\n\r\n* update README.md, comments\r\n\r\n* determine route automatically\r\n\r\n* use renderer for route graphics\r\n\r\n* bug fixes, refactoring\r\n\r\n* formatting\r\n\r\n* README.md to MD\r\n\r\n* remove extra backtick\r\n\r\n* add gradle wrapper\r\n\r\n* set main class to launcher\r\n\r\n* update README.md\r\n\r\n* Find service areas for multiple facilities (#367)\r\n\r\n* create basic class with ui elements, symbols\r\n\r\n* load in feature table, layer, and zoom to extent\r\n\r\n* solve service area task and display\r\n\r\n* UI improvements\r\n\r\n* imports\r\n\r\n* add facilities to task through featuretable\r\n\r\n* formatting\r\n\r\n* refactoring, ui fixes\r\n\r\n* comments and formatting\r\n\r\n* rm comment\r\n\r\n* add readme and screenshot\r\n\r\n* readme and comment edits\r\n\r\n* rename, remove reset button\r\n\r\n* rename, reduce service area\r\n\r\n* update readme to mirror design\r\n\r\n* comments\r\n\r\n* remove unused SimpleFillSymbol\r\n\r\n* graphics changes\r\n\r\n* change basemap to grey canvas\r\n\r\n* refactoring and variable naming\r\n\r\n* refactoring\r\n\r\n* readme wording\r\n\r\n* comments\r\n\r\n* screenshot\r\n\r\n* 3/5min service areas, yellow/red color\r\n\r\n* comments, bigger facility symbols\r\n\r\n* remove unneeded code, comment improvements, loop indices\r\n\r\n* describe both cutoffs in readme\r\n\r\n* service area comment\r\n\r\n* readme to html\r\n\r\n* smaller service areas, new screenshot\r\n\r\n* update readme for new service areas\r\n\r\n* update README.md, sample title\r\n\r\n* implement review changes\r\n\r\n* update settings.gradle\r\n\r\n* update build.gradle\r\n\r\n* package and folder names\r\n\r\n* Sample title: Area -> Areas\r\n\r\n* add gradle wrapper\r\n\r\n* fix main class name\r\n\r\n* implement review changes\r\n\r\n* update README.md, comments\r\n\r\n* update screenshot\r\n\r\n* update screenshot\r\n\r\n* Fix comment in ColormapRendererSample.java (#391)\r\n\r\n* Patch/create and save map - default challenge handler (#388)\r\n\r\n* implement default challenge handler\r\n\r\n* Update CreateAndSaveMapController.java\r\n\r\nfix typo\r\n\r\n* Update README.md\r\n\r\n* update README.md, code formatting\r\n\r\n* remove ShowMessage() method\r\n\r\n* review changes, update README to standard format\r\n\r\n* code formatting\r\n\r\n* Read symbols from mobile style file (#357)\r\n\r\n* create basic sample class with stage and map\r\n\r\n* split into main class, controller, fxml\r\n\r\n* load and search stylx file\r\n\r\n* click adds symbol to map\r\n\r\n* add styles to preview\r\n\r\n* add style to combobox, build preview on select\r\n\r\n* auto-build symbol preview and add on click\r\n\r\n* add slider to control size\r\n\r\n* add color selection dropdown\r\n\r\n* preview symbols in combobox\r\n\r\n* color only affects first symbol layer\r\n\r\n* code formatting, change first color to yellow\r\n\r\n* fix symbol and graphic sizing bug\r\n\r\n* improve variables\r\n\r\n* comboboxes to listviews\r\n\r\n* UI improvements and comments\r\n\r\n* refactoring and comments\r\n\r\n* make preview not resize with slider\r\n\r\n* refactoring\r\n\r\n* add readme\r\n\r\n* allow empty symbol selection, resize preview, fix mouse clicks\r\n\r\n* fix size slider preview\r\n\r\n* add labels and reset button\r\n\r\n* ui improvements\r\n\r\n* formatting and comments\r\n\r\n* add red color option, add screenshot\r\n\r\n* fxml formatting\r\n\r\n* formatting\r\n\r\n* formatting\r\n\r\n* refactoring\r\n\r\n* comments and refactoring\r\n\r\n* fxml refactor\r\n\r\n* formatting\r\n\r\n* comments and refactoring\r\n\r\n* swap SymbolLayerInfo class for HashMap\r\n\r\n* comments\r\n\r\n* use SymbolStyleSearchResult directly to access symbols\r\n\r\n* comments and refactoring\r\n\r\n* implement slider functionality through fxml\r\n\r\n* formatting\r\n\r\n* improve use case\r\n\r\n* use case wording\r\n\r\n* improve updateSymbolSize()\r\n\r\n* Revert \"improve updateSymbolSize()\"\r\n\r\nThis reverts commit 372e73c09825265a016adfb59400ca849d3043c0.\r\n\r\n* refactor mouse click into fxml\r\n\r\n* add default switch case\r\n\r\n* inner classes to bottom of the file\r\n\r\n* reorder for consistency\r\n\r\n* whitespace\r\n\r\n* listview array instead of list\r\n\r\n* refactoring\r\n\r\n* ui improvements\r\n\r\n* readme improvements\r\n\r\n* review corrections\r\n\r\n* commen\r\n\r\n* change colour options\r\n\r\n* slider reacts to click and to drag\r\n\r\n* implement review changes\r\n\r\n* update README.md\r\n\r\n* inner classes to private, override methods\r\n\r\n* Update README.md\r\n\r\n* add gradle wrapper\r\n\r\n* fix data download\r\n\r\n* implement review changes\r\n\r\n* review changes, implement color picker\r\n\r\n* code formatting\r\n\r\n* Update geopackage sample (#374)\r\n\r\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* patch oAuth sample custom challengehandler (#366)\r\n\r\n* implement fix for javafx webengine\r\n\r\n* formatting\r\n\r\n* add fix for create and save map sample\r\n\r\n* markdown to html formatting\r\n\r\n* update read geopackage design\r\n\r\n* update readme code snippets\r\n\r\n* improve comments\r\n\r\n* remove unneeded comments\r\n\r\n* comment wording\r\n\r\n* implement review corrections\r\n\r\n* whitespace\r\n\r\n* remove unrelated files\r\n\r\n* implement review changes\r\n\r\n* remove css stylesheet\r\n\r\n* clean up some comments\r\n\r\n* add readme metadata file\r\n\r\n* Patch/oauth default challenge handler (#375)\r\n\r\n* oauth with default challenge handler\r\n\r\n* code formatting and comments\r\n\r\n* correct redirect uri\r\n\r\n* remove fxml, formatting\r\n\r\n* revert gradle-wrapper.jar\r\n\r\n* comments\r\n\r\n* readme updated for def challenge handler\r\n\r\n* implement review changes\r\n\r\n* rename class file to match docsgst\r\n\r\n* rename package\r\n\r\n* implement default challenge handler\r\n\r\n* restore build.gradle\r\n\r\n* Revert \"restore build.gradle\"\r\n\r\nThis reverts commit 35c1df0c3df53e1748ee44db0cb388085fa066b6.\r\n\r\n* Revert \"implement default challenge handler\"\r\n\r\nThis reverts commit bd984783687fa1e2653f366fe9a99ff74bed6055.\r\n\r\n* fix screenshot file name\r\n\r\n* revert package and class name\r\n\r\n* update README.md\r\n\r\n* revert sample name, update README.metadata.json\r\n\r\n* implement review changes\r\n\r\n* remove extra comma\r\n\r\n* Routing around barriers - add isStillSincePress to mouse events (#394)\r\n\r\n* add isStillSincePress to mouse events\r\n\r\n* remove error log from error dialog\r\n\r\n* oauth - README.metadata.json formatting (#395)\r\n\r\n* formatting\r\n\r\n* mmpk to class member (#398)\r\n\r\n* Patch/dictionary symbol style update constructor (#393)\r\n\r\n* update DictionarySymbolStyle constructor\r\n\r\n* update README.md and comments\r\n\r\n* update Item ID\r\n\r\n* update constructor in remaining samples\r\n\r\n* update README.md, README.metadata.json\r\n\r\n* optimise imports\r\n\r\n* update xml files to remove control points\r\n\r\n* get Mil2525d xml from AGOL where applicable\r\n\r\n* remove xml in resources\r\n\r\n* fix typo on mil2525d\r\n\r\n* Patch/geometry engine simplify - add isSimple check (#399)\r\n\r\n* add isSimple check\r\n\r\n* update Readme.md\r\n\r\n* update comments, update metadata.json\r\n\r\n* Integrated windows auth (#370)\r\n\r\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* patch oAuth sample custom challengehandler (#366)\r\n\r\n* implement fix for javafx webengine\r\n\r\n* formatting\r\n\r\n* add fix for create and save map sample\r\n\r\n* markdown to html formatting\r\n\r\n* working sample\r\n\r\n* comments, formatting, UI improvements\r\n\r\n* UI, screenshot, readme\r\n\r\n* readme formatting\r\n\r\n* code formatting\r\n\r\n* ui improvements, screenshot\r\n\r\n* comments, formatting\r\n\r\n* readme tags\r\n\r\n* javadoc comments\r\n\r\n* ui improvements\r\n\r\n* ui improvements\r\n\r\n* refactoring\r\n\r\n* comments\r\n\r\n* address review suggestions\r\n\r\n* smaller UI\r\n\r\n* update screenshot\r\n\r\n* listview holds portal item ids\r\n\r\n* Update README.md, comments\r\n\r\n* update README.md\r\n\r\n* fix package and path names\r\n\r\n* delete irrelevant files\r\n\r\n* readme to MD\r\n\r\n* add README.metadata.json\r\n\r\n* updated README.metadata.json\r\n\r\n* remove public search, refactoring\r\n\r\n* whitespace\r\n\r\n* cell factory to class, fxml tidying\r\n\r\n* error handling, comments, refactoring\r\n\r\n* error handling\r\n\r\n* remove loading/portal info text\r\n\r\n* class member to local var\r\n\r\n* update Readme.md for UI changes and review suggestions\r\n\r\n* refactoring\r\n\r\n* fix typo\r\n\r\n* Move construction of portal query parameters to its own line\r\n\r\n* small UI improvements, update screenshot\r\n\r\n* update README.md for screenshot link (#403)\r\n\r\n* Integrated windows auth - update README.metadata.json (#402)\r\n\r\n* update RAEDME.metadata.json\r\n\r\n* update tags in README.metadata.json\r\n\r\n* move local data download logic to settings.gradle (#401)\r\n\r\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* patch oAuth sample custom challengehandler (#366)\r\n\r\n* implement fix for javafx webengine\r\n\r\n* formatting\r\n\r\n* add fix for create and save map sample\r\n\r\n* markdown to html formatting\r\n\r\n* corrects WKID to 4326 (#389)\r\n\r\n* corrects WKID to 4326\r\n\r\n* use SpatialReferences.getWgs84\r\n\r\n* move local data download logic to settings.gradle\r\n\r\n* move data download logic to settings.gradle\r\n\r\n* fix data paths\r\n\r\n* fixing data download for mil2505 xml file for sample viewer v2504 (#404)\r\n\r\n* update DictionarySymbolStyle constructor\r\n\r\n* update README.md and comments\r\n\r\n* update Item ID\r\n\r\n* update constructor in remaining samples\r\n\r\n* update README.md, README.metadata.json\r\n\r\n* optimise imports\r\n\r\n* update xml files to remove control points\r\n\r\n* get Mil2525d xml from AGOL where applicable\r\n\r\n* remove xml in resources\r\n\r\n* move data download to settings.gradle, fix paths\r\n\r\n* fix typo\r\n\r\n* fix directory name\r\n\r\n* fix local data folder\r\n\r\n* put native libraries in .arcgis folder\r\n\r\n* Honor mmpk expiration (#397)\r\n\r\n* initial commit\r\n\r\n* working sample\r\n\r\n* refactoring\r\n\r\n* refactoring, comments\r\n\r\n* copyright statement in Launcher class\r\n\r\n* data download to settings.gradle\r\n\r\n* change expiration display to static date, CSS edits\r\n\r\n* update screenshot\r\n\r\n* expiration message to sentence case\r\n\r\n* fix settings.gradle. Again.\r\n\r\n* plement review suggestions\r\n\r\n* formatting\r\n\r\n* update README.metadata.json\r\n\r\n* comments\r\n\r\n* Set annotation sublayer visibility (#396)\r\n\r\n* show scale in label\r\n\r\n* load mmpk\r\n\r\n* add checkboxes with labels\r\n\r\n* activate checkboxes, change checkbox text color dynamically\r\n\r\n* update label color\r\n\r\n* fix checkboxes, comments\r\n\r\n* optimise imports, copyright comment\r\n\r\n* labels and screenshot\r\n\r\n* update screenshot\r\n\r\n* update runtime build, update README.md\r\n\r\n* mmpk to class member\r\n\r\n* formatting and comments\r\n\r\n* javadoc comments\r\n\r\n* restore show_callout files\r\n\r\n* move downloading of sample data to settings.gradle\r\n\r\n* fix package naming\r\n\r\n* move scale label to control panel, check mmpk contains maps\r\n\r\n* fix checkbox text colours\r\n\r\n* UI fixes and label colouring\r\n\r\n* data download in settings.gradle\r\n\r\n* update README.md\r\n\r\n* update screenshot for UI changes\r\n\r\n* fix settings.gradle\r\n\r\n* fix settings.gradle\r\n\r\n* formatting\r\n\r\n* README.metadata.json redirect url to blank string\r\n\r\n* update README.md\r\n\r\n* Tschie/preplanned map (#405)\r\n\r\n* download preplanned map sample\r\n\r\n* refactoring\r\n\r\n* add ref to update parameters\r\n\r\n* method/enum name for update option\r\n\r\n* method/enum name for update option\r\n\r\n* update runtime version, imports\r\n\r\n* inner class to private\r\n\r\n* add auth manager to handle OAuth challenge\r\n\r\n* mark portal as requires authentication\r\n\r\n* update README.md\r\n\r\n* add screenshot alt text\r\n\r\n* update README.md\r\n\r\n* update README.md\r\n\r\n* update README.md for scheduled updates workflow\r\n\r\n* update link to guide\r\n\r\n* update README.md\r\n\r\n* update use case\r\n\r\n* improve 'how it works'\r\n\r\n* add preview of area of interest\r\n\r\n* improve drawing area of interest\r\n\r\n* update use case wording, references in additional information\r\n\r\n* fix deleting temp files, add button 'return to web map'\r\n\r\n* add numbering to list view\r\n\r\n* zoom to area on select, refactoring\r\n\r\n* update listener adding/removing\r\n\r\n* refactoring\r\n\r\n* disable/enable showWebMapButton approprately\r\n\r\n* add README.metadata.json\r\n\r\n* fix function naming\r\n\r\n* add confirmation popup when deleting\r\n\r\n* refactoring, use commons library to delete\r\n\r\n* fix commons-io dependency\r\n\r\n* 'show web map' button width\r\n\r\n* reorder imports\r\n\r\n* improve viewpoint change, button updates\r\n\r\n* smaller UI\r\n\r\n* refactoring and comments\r\n\r\n* javadoc comments and formatting\r\n\r\n* remove stray q file\r\n\r\n* address review corrections\r\n\r\n* review changes and refactoring\r\n\r\n* refactoring\r\n\r\n* whitespace\r\n\r\n* web map -> online map\r\n\r\n* further information -> additional information\r\n\r\n* mmpk to class member\r\n\r\n* change button text\r\n\r\n* selecting view online map pans to selected area\r\n\r\n* formatting\r\n\r\n* update README.md\r\n\r\n* copyright statements\r\n\r\n* remove commented code\r\n\r\n* try to simplify a bit\r\n\r\n* simplify sample\r\n\r\n* don't hide graphics overlay on download\r\n\r\n* add snippet\r\n\r\n* update How to use the sample section\r\n\r\n* Update DownloadPreplannedMap.png\r\n\r\n* Slim up the use case\r\n\r\n* remove fxml comments\r\n\r\n* remove redirect from for new sample\r\n\r\n* ignore iml files\r\n\r\n* Create and save kml file (#406)\r\n\r\n* create folder structure, add readme, metadata.json\r\n\r\n* split to mvc and add fxml file\r\n\r\n* ui and button events\r\n\r\n* UI and sketch mode\r\n\r\n* add basic kml sketching\r\n\r\n* show and hide style window after sketch complete\r\n\r\n* UI toggling based on app state\r\n\r\n* refactoring\r\n\r\n* add applying style\r\n\r\n* add saving\r\n\r\n* add combobox item list cell\r\n\r\n* show preview in combobox\r\n\r\n* JavaDoc comments\r\n\r\n* comments and refactoring\r\n\r\n* UI improvements\r\n\r\n* copyright in list cell factory\r\n\r\n* Center labels in UI\r\n\r\n* update README.md\r\n\r\n* add screenshot\r\n\r\n* improve saving\r\n\r\n* tidy ui, wait for map to load to enable ui\r\n\r\n* formatting\r\n\r\n* formatting fxml\r\n\r\n* optmise imports\r\n\r\n* remove unused css classes\r\n\r\n* improve file saving\r\n\r\n* refactor sample and improve UI\r\n\r\n* refactoring and comments\r\n\r\n* simplify UI (#407)\r\n\r\n* simplify UI\r\n\r\n* reuse file chooser\r\n\r\n* update readme, metadata, and image\r\n\r\n* add comments\r\n\r\n* remove unused imports\r\n\r\n* Apply scheduled updates to preplanned map area (#392)\r\n\r\n* initial commit\r\n\r\n* fix launcher\r\n\r\n* add apache commons dependencies, fix runtime version\r\n\r\n* update runtime version\r\n\r\n* update gradle script\r\n\r\n* review changes\r\n\r\n* add README.metadata.json\r\n\r\n* remove gif\r\n\r\n* update screenshot\r\n\r\n* mmpk to class member\r\n\r\n* update README.metadata.json\r\n\r\n* add second check for updates after applying\r\n\r\n* refactor checking for update\r\n\r\n* title typo, widen UI\r\n\r\n* update runtime build\r\n\r\n* remove error message details, refactoring\r\n\r\n* remove unused imports\r\n\r\n* move downloading from build to settings.gradle\r\n\r\n* update README.metadata.json\r\n\r\n* remove unneeded sync direction code\r\n\r\n* remove unneeded imports\r\n\r\n* update runtime version\r\n\r\n* replace UI with alert\r\n\r\n* update screenshot and readme.md\r\n\r\n* fix alert typo\r\n\r\n* remove progress indicator, add javadocs\r\n\r\n* remove update checks and update automatically\r\n\r\n* update README.metadata.json\r\n\r\n* Revert \"remove update checks and update automatically\"\r\n\r\nThis reverts commit b9ee5ec630a52d1fd986cd4c531b47a37d45e8b6.\r\n\r\n* Revert \"update README.metadata.json\"\r\n\r\nThis reverts commit 74e6859785e0737b24833e7d98a24e8b8adbda8e.\r\n\r\n* minor cleanup\r\n\r\n* Rewording\r\n\r\n* Patch/apply scheduled updates (#412)\r\n\r\n* remove rollback on fail\r\n\r\n* create new instance when reopen mmpk\r\n\r\n* update comments\r\n\r\n* clean up imports\r\n\r\n* Data parent directory (#413)\r\n\r\n* Specify samples-data directory in File constructors\r\n\r\n* remove sout\r\n\r\n* add missing parent directory\r\n\r\n* add missing parent dir\r\n\r\n* Revert \"add missing parent dir\"\r\n\r\nThis reverts commit 29c5abe24bce0f227a88225808558c3f5b593e89.\r\n\r\n* add missing parent dir\r\n\r\n* change canonicalPath to absolutePath\r\n\r\n* specify parent directory in File constructor\r\n\r\n* avoid explicit list of excluded directories\r\n\r\n* show progress indicator on initial load\r\n\r\n* Jon/remove unpack workflow2 (#422)\r\n\r\n* remove unpack workflow\r\n\r\n* add System.getProperty(data.dir),\r\n\r\n* Custom dictionary style [into dev] (#421)\r\n\r\n* add sample\r\n\r\n* add toggle box and use only overrides with effect\r\n\r\n* change initial viewpoint, rearrange code\r\n\r\n* update screenshot for new UI\r\n\r\n* update readme to reflect changes\r\n\r\n* update 'how to use'\r\n\r\n* simplify sample\r\n\r\n* var naming and comments\r\n\r\n* update screenshot, readme, comments\r\n\r\n* update README.md\r\n\r\n* update readme.md\r\n\r\n* changes from design review\r\n\r\n* review changes\r\n\r\n* remove extra comma\r\n\r\n* minor rewording\r\n\r\n* readme formatting\r\n\r\n* add data.dir property\r\n\r\n* Edit kml ground overlay [into dev] (#420)\r\n\r\n* initial commit\r\n\r\n* fix comments\r\n\r\n* refactoring\r\n\r\n* comments\r\n\r\n* fix URI\r\n\r\n* remove unused CSS, add screenshot\r\n\r\n* implement review corrections\r\n\r\n* update screenshot for new UI\r\n\r\n* UI changes, simplify applying opacity\r\n\r\n* setGroundOverlayOpacity() comment wording\r\n\r\n* update scene comment for clarity\r\n\r\n* review corrections\r\n\r\n* Change fields to local variables\r\n\r\n* add data.dir param\r\n\r\n* add panel-region class to vbox\r\n\r\n* update arcgis version to 100.7.0\r\n\r\n* remove reference to toggling coordinates (#428)\r\n\r\n* add support for self-signed challenges\r\n\r\n* comments\r\n\r\n* auto-add 'https://' prefix\r\n\r\nCo-authored-by: Tyler Schiewe <tyler.schiewe@gmail.com>\r\nCo-authored-by: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>\r\nCo-authored-by: Philip Ridgeway <philip.ridgeway@gmail.com>\r\n\r\n* Update sample design: surface placement draped (#429)\r\n\r\n* update api version\r\n\r\n* change api version to 100.5.0\r\n\r\n* change version to 100.5.0\r\n\r\n* start updates for java 11\r\n\r\n* update java 11 parts\r\n\r\n* add dependencies for all platforms\r\n\r\n* Delete module-info.java\r\n\r\n* Update README\r\n\r\nUpdate README to alert Java 11 users to potential exceptions which may occur when running the project. Providing a suggested workaround from the OpenJavaFX docs.\r\n\r\n* Update README.md\r\n\r\n* add an integrated mesh layer sample\r\n\r\n* update arcgis version\r\n\r\n* use javafx plugin\r\n\r\n* remove jar task config\r\n\r\n* update arcgis version\r\n\r\n* move stage show\r\n\r\n* add point cloud data to sample data downloads\r\n\r\n* view point cloud data offline sample\r\n\r\n* Update build.gradle\r\n\r\n* change camera viewpoint\r\n\r\n* remove unused imports\r\n\r\n* update image\r\n\r\n* update api version\r\n\r\n* edit about the data and additional info sections\r\n\r\n* fix comment\r\n\r\n* Removed errant full stop\r\n\r\n* Open Mobile Scene Package (#318)\r\n\r\n* Gradle script includes path to download mspk file (further work required here) and implementation of sample in Java\r\n\r\n* Create README.md\r\n\r\n* Create OpenMobileScenePackage.png\r\n\r\n* Update typo in README\r\n\r\n* Updated gradle to point to correct data on AGOL\r\n\r\n* Update to sample code following review\r\n\r\n* Updates to ReadMe following review\r\n\r\n* Additional update to read me to include isDirectReadSupported.get\r\n\r\n* Updated from markdown to HTML\r\n\r\n* Remove id tags from HTML\r\n\r\n* Map reference scale (#319)\r\n\r\n* Create MapReferenceScaleSample.java\r\n\r\n* Set up MVC structure for sample\r\n\r\n* Set up basic map with MVC structure\r\n\r\n* Added label which updates scale of map as it changes\r\n\r\n* Set up means to change the map view to the selected reference scale\r\n\r\n* Set up check boxes for map layers\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Allow string in combobox, split to return double to feed into map reference scale\r\n\r\n* Link checkbox with map layer to set reference scale\r\n\r\n* Method descriptions and remove unused imports\r\n\r\n* Fix indents\r\n\r\n* Create MapReferenceScale.png\r\n\r\n* Create README.md\r\n\r\n* Convert markdown to HTML\r\n\r\n* Addressed comments from review. ComboBox now double, vBoxes will load after map has loaded\r\n\r\n* Add a method to handle setting the reference scale when interacting with the combobox and the scale sync button.\r\n\r\n* Code updates following review\r\n\r\nremoved unneeded label, added if loaded statement, and refactored map reference scale. Also updated Readme to account for behavior change.\r\n\r\n* move checkbox logic in with instanceof check\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Corrected title for sample\r\n\r\n* Merge master into dev  (#322)\r\n\r\n* Camera controller US english update (#320)\r\n\r\n* Replace \"aeroplane\" with \"plane\" in README and code\r\n\r\n* Update image to show corrected spelling\r\n\r\n* Fix grammar\r\n\r\n* Updates to Tiled Layer to show support for .tkpx files (#321)\r\n\r\n* Updates to tiled layer, including .tpkx support\r\n\r\n* Update tile cache readme to include support .tpkx\r\n\r\n* Allow downloading of non zip sample data (#324)\r\n\r\n* Allow downloading of non zip sample data\r\n\r\n* point scene layer sample (#323)\r\n\r\n* point scene layer sample\r\n\r\n* Merge master into Dev (#329)\r\n\r\n* Camera controller US english update (#320)\r\n\r\n* Replace \"aeroplane\" with \"plane\" in README and code\r\n\r\n* Update image to show corrected spelling\r\n\r\n* Fix grammar\r\n\r\n* Updates to Tiled Layer to show support for .tkpx files (#321)\r\n\r\n* Updates to tiled layer, including .tpkx support\r\n\r\n* Update tile cache readme to include support .tpkx\r\n\r\n* Update slider to show values from 1-5 rather than 0-5 (#328)\r\n\r\n* remove online elevation data source (#327)\r\n\r\n* remove online elevation data source\r\n\r\n* remove unneeded ArcGISScene object\r\n\r\n* View content beneath terrain surface (#325)\r\n\r\n* Initiating sample with Scene URL\r\n\r\n* add done loading listener for changes\r\n\r\n* portal item entry for data\r\n\r\n* Add readme and image\r\n\r\n* Update ViewContentBeneathTerrainSurfaceSample.java\r\n\r\n* update build and refactor float code\r\n\r\n* Update ViewContentBeneathTerrainSurfaceSample.java\r\n\r\n* Add layer view state changed listener\r\n\r\n* Update ViewContentBeneathTerrainSurface.png\r\n\r\n* Address comments following review\r\n\r\n* update comment for add done loading listener on to scene\r\n\r\n* Update README.md\r\n\r\n* remove unused imports\r\n\r\n* group layers sample (#331)\r\n\r\ngroup layers sample\r\n\r\n* update version, delete extra copy of samples data\r\n\r\n* Play kml tours (#332)\r\n\r\n* play a kml tour sample\r\n\r\n* Generate offline map with local basemap (#330)\r\n\r\n* added dialog box for choosing which basemap to use\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update build.gradle\r\n\r\n* refactoring and neatening up the code\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Ensure that the file exists before prompting user to find local file\r\n\r\n* Move standard code into private methods to draw attention to new API functionality\r\n\r\n* Add image and README\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update build.gradle\r\n\r\n* code restructuring (#333)\r\n\r\n* code restructuring\r\n\r\n* comment edits\r\n\r\n* Update image and readme\r\n\r\n* update description of generateOfflineMapDialog class\r\n\r\n* convert fields to local variables\r\n\r\n* convert readme from md to html\r\n\r\n* Merging Master into Dev (#345)\r\n\r\n* Browse wfs layers (#336)\r\n\r\nbrowse wfs layers sample\r\n\r\n* Raster rendering rule (#343)\r\n\r\n* create class, bring in image service raster, display it\r\n\r\n* zoom to extent of raster service\r\n\r\n* add functionality to apply hard-coded raster rendering rule\r\n\r\n* build and populate renderingruleInfoListView\r\n\r\n* change rule ListView for DropDown\r\n\r\n* make raster rendering rule apply on selection in drop-down\r\n\r\n* refactor imageServiceUrl\r\n\r\n* refactor applying rendering rule into separate function\r\n\r\n* refactor populating drop down and building HashMaps into own functions\r\n\r\n* remove HashMap, find rule through list index@\r\n\r\n* improve comments\r\n\r\n* private final String imageServiceUrl\r\n\r\n* Add screenshot and update ReadMe\r\n\r\n* fix screenshot link in README\r\n\r\n* new screenshot\r\n\r\n* use string directly as argument for ImageServiceRaster\r\n\r\n* README from MD to HTML\r\n\r\n* bring methods back into start\r\n\r\n* use ComboBox<RenderingRuleInfo> and string converter\r\n\r\n* add vbox, label to show rendering rule descr.\r\n\r\n* rearrange imports\r\n\r\n* remove imageServiceRaster.loadAsync();\r\n\r\n* add newline to label, update screenshot\r\n\r\n* change indentation to 2 spaces\r\n\r\n* Update README.md - remove html IDs and img alt\r\n\r\n* add load status indicator\r\n\r\n* fix imports\r\n\r\n* make ArgGISMap local\r\n\r\n* remove ComboBox.setEditable(False);\r\n\r\n* syntax, adding stylesheet\r\n\r\n* variable for ImageServiceRaster uri, update readme\r\n\r\n* formatting terminology in 'how it works'\r\n\r\n* readme markdown formatting\r\n\r\n* remove unused imports\r\n\r\n* comment for auto select of first rule\r\n\r\n* default selection now shows description\r\n\r\n* variable naming, remove unused code, factoring, comments\r\n\r\n* revise readme\r\n\r\n* comments, uri variable instantiated at first use\r\n\r\n* improve readme use-case\r\n\r\n* readme formatting, typos\r\n\r\n* tag formatting, typos\r\n\r\n* Merge `master` into `dev` (#350)\r\n\r\n* Browse wfs layers (#336)\r\n\r\nbrowse wfs layers sample\r\n\r\n* Raster rendering rule (#343)\r\n\r\n* Get elevation at a point (#341)\r\n\r\n* GetElevationAtAPoint - update screenshot (#348)\r\n\r\n* Token authentication (#347)\r\n\r\n* Update build.gradle\r\n\r\n* Allows user to click a value on slider to change exaggeration (#351) (#353)\r\n\r\n* Allows user to click a value on slider to change exaggeration\r\n\r\n* remove value changed listener, move annotation to correct place, add space before bracket\r\n\r\n* merge master into dev for ClosestFacilityStatic (#358)\r\n\r\n* Allows user to click a value on slider to change exaggeration (#351)\r\n* Closest facility static (#346)\r\n\r\n* merge master into dev (#362)\r\n\r\n* Clean up readme (#356)\r\n\r\n* fix/spatial-operations-reset-button (#359)\r\n\r\n* Edit and sync features (#352)\r\n\r\n* merge master into dev (#368)\r\n\r\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* merge master into dev - oAuth Sample patch (#369)\r\n\r\n* Tschie/split (#387)\r\n\r\nseparate samples into individual gradle projects, convert readmes to markdown, add readme metadata files\r\n\r\n* fix naming\r\n\r\n* Routing around barriers (#354)\r\n\r\n* build class with scene\r\n\r\n* render street map and add controls panel\r\n\r\n* add ui elements\r\n\r\n* add stops with lables on mouse click\r\n\r\n* add toggle of checkboxes\r\n\r\n* create pin symbols, number the stops incrementally\r\n\r\n* solve route task and display it, display instructions\r\n\r\n* can add barriers to map, switch between adding stops and barriers\r\n\r\n* implement barriers in routing, implement reset button\r\n\r\n* set the mode to adding stops on sample start\r\n\r\n* clear routes / barriers on right click\r\n\r\n* clear previous route when calculating new route\r\n\r\n* rearrange code for readability\r\n\r\n* symbol colours, fix remove last barrier\r\n\r\n* improve deleting stops and barriers\r\n\r\n* ui improvements, comments\r\n\r\n* improve comments/code structure, pin design\r\n\r\n* \u2026", "committedDate": "2020-01-07T12:49:59Z", "type": "commit"}, {"oid": "60b2aaee7b6576d7a59030af7ba8c2bbbd2c7f53", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/60b2aaee7b6576d7a59030af7ba8c2bbbd2c7f53", "message": "display subtype feature layer - remove duplicate folder [dev] (#436)", "committedDate": "2020-01-07T15:49:23Z", "type": "commit"}, {"oid": "9d3158fe74902a9f99a5b0c1d224afb9efc40368", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9d3158fe74902a9f99a5b0c1d224afb9efc40368", "message": "Merge branch 'master' into dev", "committedDate": "2020-01-07T19:34:48Z", "type": "commit"}, {"oid": "050dadb5d3eb3965f471714f13683b2bb4ee7863", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/050dadb5d3eb3965f471714f13683b2bb4ee7863", "message": "Merge branch 'master' into dev", "committedDate": "2020-02-19T10:41:16Z", "type": "commit"}, {"oid": "7560e5445a53592ebf26d527b27ae141fba63d53", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7560e5445a53592ebf26d527b27ae141fba63d53", "message": "Sync Dev with Master (#464)\n\n* Update readmes to match common design (analysis category) (#444)\r\n\r\n* update analyse hotspots\r\n\r\n* update distance measurement analysis\r\n\r\n* update line of sight geoelement\r\n\r\n* update line of sight location\r\n\r\n* update viewshed camera\r\n\r\n* update viewshed geoelement\r\n\r\n* update viewshed geoprocessing\r\n\r\n* update viewshed location\r\n\r\n* casing of sample names / readme headers\r\n\r\n* tap -> click\r\n\r\n* implement review changes\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-Authored-By: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>\r\n\r\nCo-authored-by: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>\r\n\r\n* Display annotation (#442)\r\n\r\n* add sample\r\n\r\n* update metadata\r\n\r\n* better sreenshot\r\n\r\n* restore unrelated file\r\n\r\n* review comments\r\n\r\n* Update display_information/display-annotation/src/main/java/com/esri/samples/display_annotation/DisplayAnnotationSample.java\r\n\r\nCo-Authored-By: Tyler Schiewe <tyler.schiewe@gmail.com>\r\n\r\nCo-authored-by: Tyler Schiewe <tyler.schiewe@gmail.com>\r\n\r\n* Display annotation - fix readme (#446)\r\n\r\n* add sample\r\n\r\n* update metadata\r\n\r\n* better sreenshot\r\n\r\n* restore unrelated file\r\n\r\n* review comments\r\n\r\n* Map -> ArcGISMap\r\n\r\n* Update readmes to match common design (Editing category) (#450)\r\n\r\n* update readmes to match common design\r\n\r\n* update with review comments\r\n\r\n* Update README.md\r\n\r\nCo-authored-by: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>\r\nCo-authored-by: Tyler Schiewe <tyler.schiewe@gmail.com>", "committedDate": "2020-03-25T16:57:13Z", "type": "commit"}, {"oid": "412037a2ee868d3430e51498d49716a3b72934a0", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/412037a2ee868d3430e51498d49716a3b72934a0", "message": "Merge branch 'master' into dev", "committedDate": "2020-04-07T22:11:10Z", "type": "commit"}, {"oid": "fd3a211ffeb6bd0c02e432f2063106068e3843ef", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/fd3a211ffeb6bd0c02e432f2063106068e3843ef", "message": "Fclfp hardik (#463)\n\n* new sample - feature collection layer sample\r\n\r\n* Update build.gradle\r\n\r\nchanges in build.gradle file\r\n\r\n* Update settings.gradle\r\n\r\n* changes in files for sample\r\n\r\n* changes in files\r\n\r\n* screenshot added and changes in java files\r\n\r\n* Update README.md\r\n\r\n* Update feature_layers/feature-collection-layer-from-portal/README.md\r\n\r\nCo-Authored-By: Jonathan Lavi <jonathan.lavi@gmail.com>\r\n\r\n* Update feature_layers/feature-collection-layer-from-portal/README.md\r\n\r\nCo-Authored-By: Jonathan Lavi <jonathan.lavi@gmail.com>\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-Authored-By: Jonathan Lavi <jonathan.lavi@gmail.com>\r\n\r\n* sample changes\r\n\r\nremoved controller file , added code into one java file and also removed fxml/css file\r\n\r\n* Apply suggestions from code review\r\n\r\nmaking changes as per review by jonathan\r\n\r\nCo-Authored-By: Jonathan Lavi <jonathan.lavi@gmail.com>\r\n\r\n* changes in 2 files\r\n\r\nmade changes as per suggestion in pr\r\n\r\n* made changes in sample\r\n\r\nfew more changes as per review by jonathan\r\n- removed javadoc comment\r\n- set text in costructor\r\n- import order / map portal oder fixes\r\n- validation of portalitem and loading status before creating FC\r\n\r\n* minor changes\r\n\r\n- typo in button name\r\n- remove extra sapce for else cond\r\n- added space in listener method\r\n\r\n* done changes tyler suggested\r\n\r\n- alert message\r\n- readme\r\n\r\nCo-authored-by: Jonathan Lavi <jonathan.lavi@gmail.com>", "committedDate": "2020-04-13T18:33:33Z", "type": "commit"}, {"oid": "2a85c905ff66c2d7894143b9d35e8f1c3d2693fe", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2a85c905ff66c2d7894143b9d35e8f1c3d2693fe", "message": "Merge branch 'master' into dev", "committedDate": "2020-04-20T23:56:03Z", "type": "commit"}, {"oid": "ce35ebf8af3e7c91e532700b3afbc502053faed3", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/ce35ebf8af3e7c91e532700b3afbc502053faed3", "message": "Merge branch 'master' into dev", "committedDate": "2020-04-23T06:35:18Z", "type": "commit"}, {"oid": "933daccf0cf1e1fe13e22dcfebc66d6d32a80e27", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/933daccf0cf1e1fe13e22dcfebc66d6d32a80e27", "message": "Sync master into dev (#494)\n\nCo-Authored-By: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>\r\nCo-Authored-By: Tyler Schiewe <tyler.schiewe@gmail.com>", "committedDate": "2020-04-24T09:04:24Z", "type": "commit"}, {"oid": "98cceae056621f729041522244618f12d2c1e5cd", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/98cceae056621f729041522244618f12d2c1e5cd", "message": "Merge branch 'master' into dev", "committedDate": "2020-06-08T18:59:57Z", "type": "commit"}, {"oid": "e879c110f037288c62a1b55b48be7b1b7a4e6f87", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e879c110f037288c62a1b55b48be7b1b7a4e6f87", "message": "Merge branch 'master' into dev", "committedDate": "2020-06-12T19:16:02Z", "type": "commit"}, {"oid": "74ffdfc25deb96b669db22e08ba638be671ada9f", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/74ffdfc25deb96b669db22e08ba638be671ada9f", "message": "Merge branch 'master' into dev", "committedDate": "2020-07-06T13:34:43Z", "type": "commit"}, {"oid": "d9a13ff7da7ee5d54ca26f42bb3dc31ee0a1100b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d9a13ff7da7ee5d54ca26f42bb3dc31ee0a1100b", "message": "Merge branch 'master' into dev", "committedDate": "2020-07-07T19:51:42Z", "type": "commit"}, {"oid": "cddacc4a55ca5a827fff6c869957847808d35a05", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/cddacc4a55ca5a827fff6c869957847808d35a05", "message": "Update gradle and javafx versions (#527)", "committedDate": "2020-07-16T10:04:12Z", "type": "commit"}, {"oid": "4e278132726537193e3d7adff2224747e9e62ddf", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/4e278132726537193e3d7adff2224747e9e62ddf", "message": "sync dev with master (#530)\n\nCo-authored-by: TADraeseke <tdraeseke@esri.com>\r\nCo-authored-by: John Foster <jfoster@esri.com>\r\nCo-authored-by: Tyler Schiewe <tyler.schiewe@gmail.com>\r\nCo-authored-by: Rachael Ellen <rach9955@c02c9ap6md6r.esri.com>\r\nCo-authored-by: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>\r\nCo-authored-by: Rachael Ellen <rellen@esri.com>", "committedDate": "2020-07-16T13:06:18Z", "type": "commit"}, {"oid": "37114d29d116f6439a3b1aeb7ce6abd293ee1d64", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/37114d29d116f6439a3b1aeb7ce6abd293ee1d64", "message": "Merge branch 'master' into dev", "committedDate": "2020-07-23T08:56:48Z", "type": "commit"}, {"oid": "c8e66337d5097e1829b8c32a1806da2c9ada86ff", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c8e66337d5097e1829b8c32a1806da2c9ada86ff", "message": "fix keywords in metadata.json", "committedDate": "2020-07-23T12:53:20Z", "type": "commit"}, {"oid": "57d0aba75ad8e98617f215c8da2487d8f21a0820", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/57d0aba75ad8e98617f215c8da2487d8f21a0820", "message": "fix metadata file path, title, redirect (#535)", "committedDate": "2020-07-23T13:28:25Z", "type": "commit"}, {"oid": "f18496baafcc93536d0d6b87ddafe5b26592be05", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f18496baafcc93536d0d6b87ddafe5b26592be05", "message": "Merge remote-tracking branch 'origin/master' into dev", "committedDate": "2020-07-27T08:54:35Z", "type": "commit"}, {"oid": "14ee78b3bacd81a7ea46312a7b6657765cd8164b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/14ee78b3bacd81a7ea46312a7b6657765cd8164b", "message": "Feature enhancement to Surface Placement (#531)\n\n* amend arcgisversion to update 9\r\n\r\n* add a scenelayer and adjust camera and points location\r\n\r\n* add relative to scene point and graphic and rename existing point to make it clear they are distinct with some amendments to related comments\r\n\r\n* create style and display a slider that adjusts zvalue\r\n\r\n* adjust styling on labels changing text to blue and increasing size\r\n\r\n* additional label styling\r\n\r\n* update copyright date and readme including image\r\n\r\n* put copyright date back to original after confirming\r\n\r\n* tidy imports order\r\n\r\n* add scene layer url into method and amend slider get value from Double to double type\r\n\r\n* update gradle version to 6.5.1 and javafx to 11.0.2\r\n\r\n* refactored to MVC structure\r\n\r\n* implement loop in changeZValue method\r\n\r\n* tidy ups from code review\r\n\r\n* update metadata file for fxml and tidy up spacing\r\n\r\n* amendments to comments, metadata and css change\r\n\r\n* refactor loop to streams\r\n\r\n* add methods for creating text symbols and adding graphics\r\n\r\n* rename points\r\n\r\n* tidy up spacing", "committedDate": "2020-07-28T13:02:50Z", "type": "commit"}, {"oid": "b06ca29c35c12faa33d413682cb2def0dccd9395", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b06ca29c35c12faa33d413682cb2def0dccd9395", "message": "New Sample: Realistic Lighting and Shadows (#528)\n\n* Set up sample with Display a Scene application code\r\n\r\n* Added style.css\r\n\r\n* Updated arcgis runtime version 100.9.0-2782 in build.gradle\r\n\r\n* Removed \"Sample\" from the project name, java files\r\n\r\n* Created a controller and view with FXML\r\n\r\n* Fixed button event handlers\r\n\r\n* Fixed formatting and removed unused selectors in style.css\r\n\r\n* Update JavaFX modules and version\r\n\r\n* Change camera, scene layer to Portland buildings\r\n\r\n* Update calendar to PST\r\n\r\n* Update image and remove unused imports\r\n\r\n* Rename files\r\n\r\n* Update gradle version, import order\r\n\r\n* Refactor control styling in main.fxml to style.css\r\n\r\n* Rename folder\r\n\r\n* Rename project in settings.gradle\r\n\r\n* Remove setTimeLabel\r\n\r\n* Add slider padding\r\n\r\n* Add combo box\r\n\r\n* Represent time as ints\r\n\r\n* Add string converter and list cell classes\r\n\r\n* Revert \"Add string converter and list cell classes\"\r\n\r\nThis reverts commit 48be059177523628fa815f9fef2f6bd03faa12b8.\r\n\r\n* Add string converter and list cell classes\r\n\r\n* Add javadoc comments, slider css styling, and image\r\n\r\n* Refactor readme and controller\r\n\r\n* Remove slider styling from style.css\r\n\r\n* Update README.metadata.json using metadata-updater script\r\n\r\n* Remove slider css styling, update readme.metadata.json and class access modifiers in controller", "committedDate": "2020-07-28T13:04:10Z", "type": "commit"}, {"oid": "279eb0e61b2c0db648646cd27d31a965a423f8cf", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/279eb0e61b2c0db648646cd27d31a965a423f8cf", "message": "Set up feature linked annotation sample", "committedDate": "2020-07-28T16:41:34Z", "type": "commit"}, {"oid": "d8d4ea802147dc562b052856ac4cab2c410dcd5a", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d8d4ea802147dc562b052856ac4cab2c410dcd5a", "message": "Create EditFeaturesWithFeatureLinkedAnnotationController.java", "committedDate": "2020-07-28T16:42:47Z", "type": "commit"}, {"oid": "74e1edf7460a588ee1a8347432afea72bbeb56a0", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/74e1edf7460a588ee1a8347432afea72bbeb56a0", "message": "Add main.fxml", "committedDate": "2020-07-28T16:43:25Z", "type": "commit"}, {"oid": "01ebc1355b6894f0f328bf13d33ae18280caf4b9", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/01ebc1355b6894f0f328bf13d33ae18280caf4b9", "message": "Create dialog window in fxml", "committedDate": "2020-07-28T16:43:42Z", "type": "commit"}, {"oid": "5137779d279209a89f5e17c49db56ff03a716035", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/5137779d279209a89f5e17c49db56ff03a716035", "message": "Update EditFeaturesWithFeatureLinkedAnnotationController.java", "committedDate": "2020-07-28T16:44:02Z", "type": "commit"}, {"oid": "f1de75f8fffb21d8f9bf4077e29f3003ec24d60c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f1de75f8fffb21d8f9bf4077e29f3003ec24d60c", "message": "Create loudoun_anno.geodatabase", "committedDate": "2020-07-28T16:45:57Z", "type": "commit"}, {"oid": "688ddf5411a311909675d12cad399bddbe3f2857", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/688ddf5411a311909675d12cad399bddbe3f2857", "message": "Update readme and comments", "committedDate": "2020-07-29T14:58:57Z", "type": "commit"}, {"oid": "a51e9f53438479db4fd99cb41846aa7e3eaaa05a", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a51e9f53438479db4fd99cb41846aa7e3eaaa05a", "message": "Update README.metadata.json (#541)", "committedDate": "2020-07-29T15:01:06Z", "type": "commit"}, {"oid": "06ff35dc7629f84d6f244a83b56156289104626e", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/06ff35dc7629f84d6f244a83b56156289104626e", "message": "move some slider styling into fxml file to fix sample viewer display (#540)", "committedDate": "2020-07-29T15:02:11Z", "type": "commit"}, {"oid": "f0a36ec4987bdaa46af679de79f3cccbf1ca2bee", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f0a36ec4987bdaa46af679de79f3cccbf1ca2bee", "message": "Add gif and png", "committedDate": "2020-07-29T20:17:18Z", "type": "commit"}, {"oid": "dd6fb3e9381d40d67400f8a6d44080b5636c76a7", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/dd6fb3e9381d40d67400f8a6d44080b5636c76a7", "message": "Rename edit_attributes_dialog.fxml", "committedDate": "2020-07-29T20:38:29Z", "type": "commit"}, {"oid": "c1f08b2ba66ad46b943c2e1412abc9f417891697", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c1f08b2ba66ad46b943c2e1412abc9f417891697", "message": "Create identify and select feature methods", "committedDate": "2020-08-03T18:21:05Z", "type": "commit"}, {"oid": "7274f808d9b80d63c8be5b10a1e1abdfc8bb0973", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7274f808d9b80d63c8be5b10a1e1abdfc8bb0973", "message": "Add updateAttributes method", "committedDate": "2020-08-03T18:38:47Z", "type": "commit"}, {"oid": "c62ed0397c281ba823fea665ec35381db66d677d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c62ed0397c281ba823fea665ec35381db66d677d", "message": "Select top layer in identifyFeature()", "committedDate": "2020-08-04T13:00:31Z", "type": "commit"}, {"oid": "ed33b20b14fe57a94f268758877eff10ef1d0a83", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/ed33b20b14fe57a94f268758877eff10ef1d0a83", "message": "Change import order", "committedDate": "2020-08-04T13:02:23Z", "type": "commit"}, {"oid": "4f56af536455f25ec115baae09200b731ebc9098", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/4f56af536455f25ec115baae09200b731ebc9098", "message": "Merge changes to dev", "committedDate": "2020-08-04T14:44:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE1NzUxMA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465157510", "bodyText": "Let's add a short description to this class, just for some context. An example based on some other classes extending dialog:\n/**\n * Custom dialog for editing feature attributes.\n */\n\nAlso, although it has no direct implications in the way we are using it, it would be more correct to define this as:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class EditAttributesDialog extends Dialog<String>{\n          \n          \n            \n            public class EditAttributesDialog extends Dialog<Feature>{\n          \n      \n    \n    \n  \n\nSince we are using this dialog to interact with a particular feature (as you have it in the constructor).", "author": "JonLavi", "createdAt": "2020-08-04T15:58:13Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditAttributesDialog.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.ButtonType;\n+import javafx.scene.control.Dialog;\n+import javafx.scene.control.TextField;\n+\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+\n+public class EditAttributesDialog extends Dialog<String>{", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2MTQ5Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465161493", "bodyText": "We don't generally add the files directly from the source code, but set up the settings.gradle file to download these when the gradle run task is started. Check out this example:\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/editing/edit-and-sync-features/settings.gradle#L6-L16\nThere should be a link to the location of the file on ArcGIS Online (AGOL) in the sample's design.\nThe correct path for it would then be /resources/edit_features_with_feature_linked_annotation/<possibly some other folder>.\nWhereas the last folder might be the result of a folder within the archive coming from AGOL (or none!).", "author": "JonLavi", "createdAt": "2020-08-04T16:04:17Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationController.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationController {\n+  @FXML private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @FXML private void initialize() {\n+\n+    try {\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // add a map to the map view\n+      mapView.setMap(map);\n+\n+      // create the geodatabase from the local .geodatabase file\n+      Geodatabase geodatabase = new Geodatabase(\"loudoun_anno.geodatabase\");", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5NDIwMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r479394201", "bodyText": "@JonLavi @sclaridge just to note the above path for storing samples data is incorrect!\n/resources/sample_name should be for UI/style files (.fxml/css) only. Any samples data needs to be stored in a samples-data directory. You can see this pattern in the edit and sync features sample that Jon referred to above.\ne.g. for your sample\n    ant.unzip(\n            src: file(\"./data.zip\"),\n            dest: file(\"./samples-data/loudon\")\n    )", "author": "Rachael-E", "createdAt": "2020-08-28T15:57:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2MTQ5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2MzkyMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465163921", "bodyText": "It's generally considered better to write\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (identifyLayerResults.size() > 0) {\n          \n          \n            \n                    if (!identifyLayerResults.size().isEmpty()) {", "author": "JonLavi", "createdAt": "2020-08-04T16:08:06Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationController.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationController {\n+  @FXML private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @FXML private void initialize() {\n+\n+    try {\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // add a map to the map view\n+      mapView.setMap(map);\n+\n+      // create the geodatabase from the local .geodatabase file\n+      Geodatabase geodatabase = new Geodatabase(\"loudoun_anno.geodatabase\");\n+      geodatabase.addDoneLoadingListener(() -> {\n+        //load the geodatabase\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Select the nearest feature, or move the point or polyline vertex to the given screen point.\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identify a feature near the given screen point.\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+    selectedFeature = null;\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // if one or more results have been identified\n+        if (identifyLayerResults.size() > 0) {", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2NzQ3OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465167479", "bodyText": "Nice work on this, there's only a couple of things we could improve here.\nIn the first line, were technically creating a Future object, which we then unpack with .get() to get the actual 'edit result' from inside. So Let's call this object editResultFuture\nSince the lambda inside the DoneListener will only ever run if the future isDone(), there no need to check that again within the listener. You can just go ahead and do .get().\nLastly, we don't generally display the whole error message (i.e.  e.getCause().getMessage() in the alerts) but just show something in plain english, describing what may have gone wrong. So let's update that message\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ListenableFuture<Void> editResult = selectedFeature.getFeatureTable().updateFeatureAsync(selectedFeature);\n          \n          \n            \n                editResult.addDoneListener(() -> {\n          \n          \n            \n                          try {\n          \n          \n            \n                            if (editResult.isDone()) {\n          \n          \n            \n                              editResult.get();\n          \n          \n            \n                            }\n          \n          \n            \n                          } catch (InterruptedException | ExecutionException e) {\n          \n          \n            \n                            new Alert(Alert.AlertType.ERROR, \"Cannot update attributes: \" + e.getCause().getMessage()).show();\n          \n          \n            \n                          }\n          \n          \n            \n                        }\n          \n          \n            \n                );\n          \n          \n            \n                ListenableFuture<Void> editResultFuture = selectedFeature.getFeatureTable().updateFeatureAsync(selectedFeature);\n          \n          \n            \n                editResultFuture.addDoneListener(() -> {\n          \n          \n            \n                          try {\n          \n          \n            \n                            editResultFuture.get();\n          \n          \n            \n                          } catch (InterruptedException | ExecutionException e) {\n          \n          \n            \n                            new Alert(Alert.AlertType.ERROR, \"Error updating attributes.\").show();\n          \n          \n            \n                          }\n          \n          \n            \n                        }\n          \n          \n            \n                );", "author": "JonLavi", "createdAt": "2020-08-04T16:13:20Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationController.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationController {\n+  @FXML private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @FXML private void initialize() {\n+\n+    try {\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // add a map to the map view\n+      mapView.setMap(map);\n+\n+      // create the geodatabase from the local .geodatabase file\n+      Geodatabase geodatabase = new Geodatabase(\"loudoun_anno.geodatabase\");\n+      geodatabase.addDoneLoadingListener(() -> {\n+        //load the geodatabase\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Select the nearest feature, or move the point or polyline vertex to the given screen point.\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identify a feature near the given screen point.\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+    selectedFeature = null;\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // if one or more results have been identified\n+        if (identifyLayerResults.size() > 0) {\n+          // retrieve the first result\n+          IdentifyLayerResult layerResult = identifyLayerResults.get(0);\n+          // check that the result is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+          }\n+        }\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Check if the identified feature is a straight polyline or a point, and select the feature.\n+   * For a point feature, show a dialog to edit attributes. Future clicks will call move functions.\n+   */\n+  private void selectFeature(IdentifyLayerResult layerResult) {\n+\n+    try {\n+      // if the selected feature is a polyline\n+      if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+        // create a polyline builder from the selected feature\n+        PolylineBuilder polylineBuilder = new PolylineBuilder((Polyline) selectedFeature.getGeometry());\n+        // get a list of parts of the selected polyline\n+        List<Part> parts = polylineBuilder.getParts();\n+        parts.forEach(part -> {\n+          // if the selected feature is a polyline with any part containing more than one segment\n+          // (i.e. a curve)\n+          if (part.getPointCount() > 2) {\n+            selectedFeature = null;\n+            // show message reminding user to select straight (single segment) polylines only\n+            new Alert(Alert.AlertType.WARNING, \"Select straight (single segment) polylines only.\").show();\n+            // return early, effectively disallowing selection of multi segmented polylines\n+            return;\n+          } else {\n+            // select the polyline feature\n+            ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+            selectedFeatureIsPolyline = true;\n+          }\n+        });\n+      }\n+      // if the selected feature is a point, select the feature\n+      else if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POINT) {\n+        ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+        // open a dialog to edit the feature's attributes\n+        showEditableAttributes(selectedFeature);\n+      } else {\n+        new Alert(Alert.AlertType.WARNING, \"Feature of unexpected geometry type selected.\").show();\n+      }\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a dialog with text fields to allow editing of the given feature's 'AD_ADDRESS' and\n+   * 'ST_STR_NAM' attributes.\n+   */\n+  private void showEditableAttributes(Feature selectedFeature) {\n+\n+    // create a dialog to edit the attributes of the selected feature\n+    EditAttributesDialog editAttributesDialog = new EditAttributesDialog(selectedFeature);\n+\n+    // show the dialog and wait for the user response\n+    editAttributesDialog.showAndWait();\n+  }\n+\n+  /**\n+   * Update the attributes of the selected feature.\n+   */\n+  private void updateAttributes(Feature selectedFeature) {\n+\n+    // update feature in the feature table\n+    ListenableFuture<Void> editResult = selectedFeature.getFeatureTable().updateFeatureAsync(selectedFeature);\n+    editResult.addDoneListener(() -> {\n+              try {\n+                if (editResult.isDone()) {\n+                  editResult.get();\n+                }\n+              } catch (InterruptedException | ExecutionException e) {\n+                new Alert(Alert.AlertType.ERROR, \"Cannot update attributes: \" + e.getCause().getMessage()).show();\n+              }\n+            }\n+    );", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3MDg1OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465170858", "bodyText": "For your methods, it's common practice to put @param descriptions of the parameters in the JavaDoc above method descriptions.\nIntellij Top tip: you can auto-generate a template by writing /** in the line above a method signature, then hitting return. All you'll have to do is then fill in the descriptions. The rest of your methods would need updating as well.\nI think they should also be written in active voice, e.g. Creates/Moves, etc. But not 100% sure.", "author": "JonLavi", "createdAt": "2020-08-04T16:18:25Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationController.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationController {\n+  @FXML private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @FXML private void initialize() {\n+\n+    try {\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // add a map to the map view\n+      mapView.setMap(map);\n+\n+      // create the geodatabase from the local .geodatabase file\n+      Geodatabase geodatabase = new Geodatabase(\"loudoun_anno.geodatabase\");\n+      geodatabase.addDoneLoadingListener(() -> {\n+        //load the geodatabase\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Select the nearest feature, or move the point or polyline vertex to the given screen point.\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identify a feature near the given screen point.\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+    selectedFeature = null;\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // if one or more results have been identified\n+        if (identifyLayerResults.size() > 0) {\n+          // retrieve the first result\n+          IdentifyLayerResult layerResult = identifyLayerResults.get(0);\n+          // check that the result is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+          }\n+        }\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Check if the identified feature is a straight polyline or a point, and select the feature.\n+   * For a point feature, show a dialog to edit attributes. Future clicks will call move functions.\n+   */\n+  private void selectFeature(IdentifyLayerResult layerResult) {\n+\n+    try {\n+      // if the selected feature is a polyline\n+      if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+        // create a polyline builder from the selected feature\n+        PolylineBuilder polylineBuilder = new PolylineBuilder((Polyline) selectedFeature.getGeometry());\n+        // get a list of parts of the selected polyline\n+        List<Part> parts = polylineBuilder.getParts();\n+        parts.forEach(part -> {\n+          // if the selected feature is a polyline with any part containing more than one segment\n+          // (i.e. a curve)\n+          if (part.getPointCount() > 2) {\n+            selectedFeature = null;\n+            // show message reminding user to select straight (single segment) polylines only\n+            new Alert(Alert.AlertType.WARNING, \"Select straight (single segment) polylines only.\").show();\n+            // return early, effectively disallowing selection of multi segmented polylines\n+            return;\n+          } else {\n+            // select the polyline feature\n+            ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+            selectedFeatureIsPolyline = true;\n+          }\n+        });\n+      }\n+      // if the selected feature is a point, select the feature\n+      else if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POINT) {\n+        ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+        // open a dialog to edit the feature's attributes\n+        showEditableAttributes(selectedFeature);\n+      } else {\n+        new Alert(Alert.AlertType.WARNING, \"Feature of unexpected geometry type selected.\").show();\n+      }\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a dialog with text fields to allow editing of the given feature's 'AD_ADDRESS' and\n+   * 'ST_STR_NAM' attributes.\n+   */\n+  private void showEditableAttributes(Feature selectedFeature) {", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3Njg3Nw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465176877", "bodyText": "This FXML file doesn't really do much, and considering the main reason we use FXML is to refactor away some of the UI styling, I would personally say we could get rid of this one, and simply move all the code from the controller class to the sample class. We should keep the FXML file for the editing dialog, however, because that does do quite a bit of work - that's where all the refactoring gains are for the UI styling.", "author": "JonLavi", "createdAt": "2020-08-04T16:27:51Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/resources/edit_features_with_feature_linked_annotation/main.fxml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Esri.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy of\n+  ~ the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  ~ License for the specific language governing permissions and limitations under\n+  ~ the License.\n+  -->\n+\n+<?import com.esri.arcgisruntime.mapping.view.MapView?>\n+<?import javafx.scene.layout.StackPane?>\n+<StackPane fx:controller=\"com.esri.samples.edit_features_with_feature_linked_annotation.EditFeaturesWithFeatureLinkedAnnotationController\"\n+           xmlns:fx=\"http://javafx.com/fxml\">\n+    <MapView fx:id=\"mapView\"/>", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NDU2NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465184565", "bodyText": "I think JavaFX 11.0.2 is the newest version, so we should update that here", "author": "JonLavi", "createdAt": "2020-08-04T16:40:24Z", "path": "editing/edit-features-with-feature-linked-annotation/build.gradle", "diffHunk": "@@ -0,0 +1,74 @@\n+plugins {\n+    id 'application'\n+    id 'org.openjfx.javafxplugin' version '0.0.5'\n+}\n+\n+group = 'com.esri.samples'\n+\n+ext {\n+    arcgisVersion = '100.9.0-2852'\n+}\n+\n+javafx {\n+    version = \"11.0.1\"", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NTc2Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465185766", "bodyText": "I think we need to put the remaining code (line 50 onwards) inside this try statements, since if we fail to load the fxml loader, we won't want to execute any of the other code, as we don't have access to any of these FXML defined javafx objects.\nIt seems like our other samples don't do this though, so let's do some research on this which is the correct pattern!", "author": "JonLavi", "createdAt": "2020-08-04T16:42:23Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditAttributesDialog.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.ButtonType;\n+import javafx.scene.control.Dialog;\n+import javafx.scene.control.TextField;\n+\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+\n+public class EditAttributesDialog extends Dialog<String>{\n+\n+  @FXML private TextField addressTextField;\n+  @FXML private TextField streetNameTextField;\n+  @FXML private ButtonType continueButton;\n+\n+  EditAttributesDialog(Feature selectedFeature){\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/edit_features_with_feature_linked_annotation/edit_attributes_dialog.fxml\"));\n+    loader.setRoot(this);\n+    loader.setController(this);\n+\n+    setTitle(\"Edit Feature Attributes\");\n+\n+    try {\n+      loader.load();", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAwNzc1Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r468007756", "bodyText": "If I put the remaining code inside the try statement, when the loader fails, the rest of the code doesn't execute, but the code that executes after instantiating the dialog in showEditableAttributes() creates an empty dialog:\n\nHowever, if I remove the try catch entirely and have EditAttributesDialog throw the Exception, it can be handled in showEditableAttributes():\ntry {\n      // create a dialog to edit the attributes of the selected feature\n      EditAttributesDialog editAttributesDialog = new EditAttributesDialog(selectedFeature);\n\n      // show the dialog and wait for the user response\n      editAttributesDialog.showAndWait();\n\n      // update the selected feature's feature table\n      updateAttributes(selectedFeature);\n    } catch (Exception e) {\n      new Alert(Alert.AlertType.ERROR, \"Error: \" + e).show();\n    }", "author": "sclaridge", "createdAt": "2020-08-10T15:53:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NTc2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAyNzE1MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r468027151", "bodyText": "Good spot on these!\n\nHowever, if I remove the try catch entirely and have EditAttributesDialog throw the Exception, it can be handled in showEditableAttributes():\n\nI don't think it's a good idea to handle the exceptions in a different method, at least in the context of a sample. Best we keep the complexity to a minimum there.\nSo, looks like what you had originally was correct. Let's just leave it as is then \ud83d\udc4d", "author": "JonLavi", "createdAt": "2020-08-10T16:24:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NTc2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MzgxOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465193819", "bodyText": "This code looks like a repetition of the method\nprivate void updateAttributes(Feature selectedFeature)\n\nin the controller class.\nNot too sure if it's good practice, but you could modify the signature to:\nstatic void updateAttributes(Feature selectedFeature)\n\nBy leaving out private and making it static, it would be 'protected', meaning available to this dialog class, and it being 'static' would allow you to import it into this file as a static import:\nimport static com.esri.samples.edit_features_with_feature_linked_annotation.EditFeaturesWithFeatureLinkedAnnotationController.updateAttributes;\n\nAnd then you could replace the whole ListenableFuture block here with simply:\n          // update feature in the feature table\n          updateAttributes(selectedFeature);\n\nLike I said, not sure whether this is good practice.\n@colinanderson could you advise whether this is considered SOLID?\nBut before you go through the effort of doing this, I suppose we'd need @Rachael-E 's input whether this is user-friendly enough...", "author": "JonLavi", "createdAt": "2020-08-04T16:55:38Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditAttributesDialog.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.ButtonType;\n+import javafx.scene.control.Dialog;\n+import javafx.scene.control.TextField;\n+\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+\n+public class EditAttributesDialog extends Dialog<String>{\n+\n+  @FXML private TextField addressTextField;\n+  @FXML private TextField streetNameTextField;\n+  @FXML private ButtonType continueButton;\n+\n+  EditAttributesDialog(Feature selectedFeature){\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/edit_features_with_feature_linked_annotation/edit_attributes_dialog.fxml\"));\n+    loader.setRoot(this);\n+    loader.setController(this);\n+\n+    setTitle(\"Edit Feature Attributes\");\n+\n+    try {\n+      loader.load();\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+\n+    // populate text fields with current attribute values\n+    addressTextField.setText(selectedFeature.getAttributes().get(\"AD_ADDRESS\").toString());\n+    streetNameTextField.setText(selectedFeature.getAttributes().get(\"ST_STR_NAM\").toString());\n+\n+    // convert the result to an address and street name when the ok button is clicked.\n+    setResultConverter(dialogButton -> {\n+      if (dialogButton == continueButton) {\n+        try {\n+          // set AD_ADDRESS value to the int from the text field\n+          selectedFeature.getAttributes().put(\"AD_ADDRESS\", Integer.parseInt(addressTextField.getText()));\n+\n+          // set ST_STR_NAM value to the string from the text field\n+          selectedFeature.getAttributes().put(\"ST_STR_NAM\", streetNameTextField.getText());\n+\n+          // update feature in the feature table\n+          ListenableFuture<Void> editResult = selectedFeature.getFeatureTable().updateFeatureAsync(selectedFeature);\n+          editResult.addDoneListener(() -> {\n+                    try {\n+                      if (editResult.isDone()) {\n+                        editResult.get();\n+                      }\n+                    } catch (InterruptedException | ExecutionException e) {\n+                      new Alert(Alert.AlertType.ERROR, \"Cannot update attributes: \" + e.getCause().getMessage()).show();\n+                    }\n+                  }\n+          );", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0MTc5OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465541798", "bodyText": "As I mentioned in the comment on your questions, we also have the possibility to have the Dialog return the data to edit back to the main Controller class, and then do the updateFeatureAsync call back in there. In hindsight that might actually be the better way forward. Then we'd abstract away the data input through the UI, but keep the Runtime API call to updateFeatureAsync within the main class.", "author": "JonLavi", "createdAt": "2020-08-05T07:54:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MzgxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyODIxMA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465528210", "bodyText": "Looks like every time we call clearSelection(), we also do selectedFeature = null. So it would be possible to put that statement in the method as well.\nWe could also pop the statement selectedFeatureIsPolyline = false; in the method as well, although it's not necessary to set that boolean every time.", "author": "JonLavi", "createdAt": "2020-08-05T07:28:34Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationController.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationController {\n+  @FXML private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @FXML private void initialize() {\n+\n+    try {\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // add a map to the map view\n+      mapView.setMap(map);\n+\n+      // create the geodatabase from the local .geodatabase file\n+      Geodatabase geodatabase = new Geodatabase(\"loudoun_anno.geodatabase\");\n+      geodatabase.addDoneLoadingListener(() -> {\n+        //load the geodatabase\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Select the nearest feature, or move the point or polyline vertex to the given screen point.\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identify a feature near the given screen point.\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+    selectedFeature = null;\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // if one or more results have been identified\n+        if (identifyLayerResults.size() > 0) {\n+          // retrieve the first result\n+          IdentifyLayerResult layerResult = identifyLayerResults.get(0);\n+          // check that the result is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+          }\n+        }\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Check if the identified feature is a straight polyline or a point, and select the feature.\n+   * For a point feature, show a dialog to edit attributes. Future clicks will call move functions.\n+   */\n+  private void selectFeature(IdentifyLayerResult layerResult) {\n+\n+    try {\n+      // if the selected feature is a polyline\n+      if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+        // create a polyline builder from the selected feature\n+        PolylineBuilder polylineBuilder = new PolylineBuilder((Polyline) selectedFeature.getGeometry());\n+        // get a list of parts of the selected polyline\n+        List<Part> parts = polylineBuilder.getParts();\n+        parts.forEach(part -> {\n+          // if the selected feature is a polyline with any part containing more than one segment\n+          // (i.e. a curve)\n+          if (part.getPointCount() > 2) {\n+            selectedFeature = null;\n+            // show message reminding user to select straight (single segment) polylines only\n+            new Alert(Alert.AlertType.WARNING, \"Select straight (single segment) polylines only.\").show();\n+            // return early, effectively disallowing selection of multi segmented polylines\n+            return;\n+          } else {\n+            // select the polyline feature\n+            ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+            selectedFeatureIsPolyline = true;\n+          }\n+        });\n+      }\n+      // if the selected feature is a point, select the feature\n+      else if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POINT) {\n+        ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+        // open a dialog to edit the feature's attributes\n+        showEditableAttributes(selectedFeature);\n+      } else {\n+        new Alert(Alert.AlertType.WARNING, \"Feature of unexpected geometry type selected.\").show();\n+      }\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a dialog with text fields to allow editing of the given feature's 'AD_ADDRESS' and\n+   * 'ST_STR_NAM' attributes.\n+   */\n+  private void showEditableAttributes(Feature selectedFeature) {\n+\n+    // create a dialog to edit the attributes of the selected feature\n+    EditAttributesDialog editAttributesDialog = new EditAttributesDialog(selectedFeature);\n+\n+    // show the dialog and wait for the user response\n+    editAttributesDialog.showAndWait();\n+  }\n+\n+  /**\n+   * Update the attributes of the selected feature.\n+   */\n+  private void updateAttributes(Feature selectedFeature) {\n+\n+    // update feature in the feature table\n+    ListenableFuture<Void> editResult = selectedFeature.getFeatureTable().updateFeatureAsync(selectedFeature);\n+    editResult.addDoneListener(() -> {\n+              try {\n+                if (editResult.isDone()) {\n+                  editResult.get();\n+                }\n+              } catch (InterruptedException | ExecutionException e) {\n+                new Alert(Alert.AlertType.ERROR, \"Cannot update attributes: \" + e.getCause().getMessage()).show();\n+              }\n+            }\n+    );\n+  }\n+\n+  /**\n+   * Move the selected point feature to the given map point by updating the selected\n+   * feature's geometry and feature table.\n+   */\n+  private void movePoint(Point mapPoint) {\n+\n+    // set the selected features' geometry to a new map point\n+    selectedFeature.setGeometry(mapPoint);\n+\n+    // update the selected feature's feature table\n+    updateAttributes(selectedFeature);\n+\n+    // clear selection of the point\n+    clearSelection();\n+    selectedFeature = null;\n+  }\n+\n+  /**\n+   * Move the last of the vertex point of the currently selected polyline to the given map point by updating the\n+   * selected feature's geometry and feature table.\n+   */\n+  private void movePolylineVertex(Point mapPoint) {\n+\n+    // get the selected feature's geometry as a polyline\n+    Polyline polyline = (Polyline) selectedFeature.getGeometry();\n+\n+    // create a polyline builder to add and remove parts from the polyline\n+    PolylineBuilder polylineBuilder = new PolylineBuilder(polyline);\n+\n+    // get the nearest vertex to the map point on the polyline\n+    ProximityResult nearestVertex = GeometryEngine.nearestVertex(polyline, (Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));\n+\n+    // get the part of the polyline nearest to the map point\n+    Part part = polylineBuilder.getParts().get((int) nearestVertex.getPartIndex());\n+\n+    // remove the nearest point to the map point from the part\n+    part.removePoint((int) nearestVertex.getPointIndex());\n+\n+    // add the map point as the new point on the part\n+    part.addPoint((Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));\n+\n+    // add the part to the polyline\n+    polylineBuilder.getParts().add(part);\n+\n+    // set the selected feature's geometry to the new polyline\n+    selectedFeature.setGeometry(polylineBuilder.toGeometry());\n+\n+    // update the selected feature's feature table\n+    updateAttributes(selectedFeature);\n+\n+    // clear selection of the polyline\n+    clearSelection();\n+    selectedFeatureIsPolyline = false;\n+    selectedFeature = null;", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyOTEwOA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465529108", "bodyText": "This is a really long line, so let's just break it down for readability:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ProximityResult nearestVertex = GeometryEngine.nearestVertex(polyline, (Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));\n          \n          \n            \n                ProximityResult nearestVertex =\n          \n          \n            \n                        GeometryEngine.nearestVertex(polyline, (Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));", "author": "JonLavi", "createdAt": "2020-08-05T07:30:18Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationController.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationController {\n+  @FXML private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @FXML private void initialize() {\n+\n+    try {\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // add a map to the map view\n+      mapView.setMap(map);\n+\n+      // create the geodatabase from the local .geodatabase file\n+      Geodatabase geodatabase = new Geodatabase(\"loudoun_anno.geodatabase\");\n+      geodatabase.addDoneLoadingListener(() -> {\n+        //load the geodatabase\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Select the nearest feature, or move the point or polyline vertex to the given screen point.\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identify a feature near the given screen point.\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+    selectedFeature = null;\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // if one or more results have been identified\n+        if (identifyLayerResults.size() > 0) {\n+          // retrieve the first result\n+          IdentifyLayerResult layerResult = identifyLayerResults.get(0);\n+          // check that the result is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+          }\n+        }\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Check if the identified feature is a straight polyline or a point, and select the feature.\n+   * For a point feature, show a dialog to edit attributes. Future clicks will call move functions.\n+   */\n+  private void selectFeature(IdentifyLayerResult layerResult) {\n+\n+    try {\n+      // if the selected feature is a polyline\n+      if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+        // create a polyline builder from the selected feature\n+        PolylineBuilder polylineBuilder = new PolylineBuilder((Polyline) selectedFeature.getGeometry());\n+        // get a list of parts of the selected polyline\n+        List<Part> parts = polylineBuilder.getParts();\n+        parts.forEach(part -> {\n+          // if the selected feature is a polyline with any part containing more than one segment\n+          // (i.e. a curve)\n+          if (part.getPointCount() > 2) {\n+            selectedFeature = null;\n+            // show message reminding user to select straight (single segment) polylines only\n+            new Alert(Alert.AlertType.WARNING, \"Select straight (single segment) polylines only.\").show();\n+            // return early, effectively disallowing selection of multi segmented polylines\n+            return;\n+          } else {\n+            // select the polyline feature\n+            ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+            selectedFeatureIsPolyline = true;\n+          }\n+        });\n+      }\n+      // if the selected feature is a point, select the feature\n+      else if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POINT) {\n+        ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+        // open a dialog to edit the feature's attributes\n+        showEditableAttributes(selectedFeature);\n+      } else {\n+        new Alert(Alert.AlertType.WARNING, \"Feature of unexpected geometry type selected.\").show();\n+      }\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a dialog with text fields to allow editing of the given feature's 'AD_ADDRESS' and\n+   * 'ST_STR_NAM' attributes.\n+   */\n+  private void showEditableAttributes(Feature selectedFeature) {\n+\n+    // create a dialog to edit the attributes of the selected feature\n+    EditAttributesDialog editAttributesDialog = new EditAttributesDialog(selectedFeature);\n+\n+    // show the dialog and wait for the user response\n+    editAttributesDialog.showAndWait();\n+  }\n+\n+  /**\n+   * Update the attributes of the selected feature.\n+   */\n+  private void updateAttributes(Feature selectedFeature) {\n+\n+    // update feature in the feature table\n+    ListenableFuture<Void> editResult = selectedFeature.getFeatureTable().updateFeatureAsync(selectedFeature);\n+    editResult.addDoneListener(() -> {\n+              try {\n+                if (editResult.isDone()) {\n+                  editResult.get();\n+                }\n+              } catch (InterruptedException | ExecutionException e) {\n+                new Alert(Alert.AlertType.ERROR, \"Cannot update attributes: \" + e.getCause().getMessage()).show();\n+              }\n+            }\n+    );\n+  }\n+\n+  /**\n+   * Move the selected point feature to the given map point by updating the selected\n+   * feature's geometry and feature table.\n+   */\n+  private void movePoint(Point mapPoint) {\n+\n+    // set the selected features' geometry to a new map point\n+    selectedFeature.setGeometry(mapPoint);\n+\n+    // update the selected feature's feature table\n+    updateAttributes(selectedFeature);\n+\n+    // clear selection of the point\n+    clearSelection();\n+    selectedFeature = null;\n+  }\n+\n+  /**\n+   * Move the last of the vertex point of the currently selected polyline to the given map point by updating the\n+   * selected feature's geometry and feature table.\n+   */\n+  private void movePolylineVertex(Point mapPoint) {\n+\n+    // get the selected feature's geometry as a polyline\n+    Polyline polyline = (Polyline) selectedFeature.getGeometry();\n+\n+    // create a polyline builder to add and remove parts from the polyline\n+    PolylineBuilder polylineBuilder = new PolylineBuilder(polyline);\n+\n+    // get the nearest vertex to the map point on the polyline\n+    ProximityResult nearestVertex = GeometryEngine.nearestVertex(polyline, (Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzMjE2Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465532166", "bodyText": "Let's not forget to add the category here.\nIf you haven't been using the script to generate this, do give it a shot. We're constantly optimising it so it would be helpful to see the output with every new sample\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"category\": \"\",\n          \n          \n            \n                \"category\": \"Editing\",", "author": "JonLavi", "createdAt": "2020-08-05T07:36:27Z", "path": "editing/edit-features-with-feature-linked-annotation/README.metadata.json", "diffHunk": "@@ -0,0 +1,34 @@\n+{\n+    \"category\": \"\",", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzMzU1NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r465533554", "bodyText": "Looks like the imports here are out of order. The optimize-imports commands should sort that out easily", "author": "JonLavi", "createdAt": "2020-08-05T07:39:16Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/resources/edit_features_with_feature_linked_annotation/edit_attributes_dialog.fxml", "diffHunk": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Esri.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy of\n+  ~ the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  ~ License for the specific language governing permissions and limitations under\n+  ~ the License.\n+  -->\n+\n+<?import javafx.scene.control.Dialog?>\n+<?import javafx.scene.control.DialogPane?>\n+<?import javafx.scene.layout.GridPane?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.control.ButtonType?>", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4fe4d003ab1edca32e9f9b2cea28e5fba0aa3078", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/4fe4d003ab1edca32e9f9b2cea28e5fba0aa3078", "message": "Remove gif and fix README metadata", "committedDate": "2020-08-05T14:12:10Z", "type": "commit"}, {"oid": "5471cbbd92b6e3421c8c80d3b285258a150c6c3c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/5471cbbd92b6e3421c8c80d3b285258a150c6c3c", "message": "Move application code from the controller", "committedDate": "2020-08-06T09:24:01Z", "type": "commit"}, {"oid": "4d93b19f494044b7d62d1cd0e4dd5972e7712359", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/4d93b19f494044b7d62d1cd0e4dd5972e7712359", "message": "Create loudoun_anno.geodatabase", "committedDate": "2020-08-06T09:25:59Z", "type": "commit"}, {"oid": "555a2a721e36866f7daf8780656e1783a94287f0", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/555a2a721e36866f7daf8780656e1783a94287f0", "message": "Add param javadoc comments", "committedDate": "2020-08-07T18:06:05Z", "type": "commit"}, {"oid": "9c0abeefb48c58a27423860b013b76be07ed320b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9c0abeefb48c58a27423860b013b76be07ed320b", "message": "Edit method comments", "committedDate": "2020-08-10T10:01:48Z", "type": "commit"}, {"oid": "aed897bdcf2e64e71eb0f795c692b35fee19c6d7", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/aed897bdcf2e64e71eb0f795c692b35fee19c6d7", "message": "Update README.metadata.json", "committedDate": "2020-08-10T10:17:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxMzU3Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r467913573", "bodyText": "Do you need to check isDone? I think just calling get() will either work or throw an exception.", "author": "colinanderson", "createdAt": "2020-08-10T13:44:45Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditAttributesDialog.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.ButtonType;\n+import javafx.scene.control.Dialog;\n+import javafx.scene.control.TextField;\n+\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+\n+public class EditAttributesDialog extends Dialog<String>{\n+\n+  @FXML private TextField addressTextField;\n+  @FXML private TextField streetNameTextField;\n+  @FXML private ButtonType continueButton;\n+\n+  EditAttributesDialog(Feature selectedFeature){\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/edit_features_with_feature_linked_annotation/edit_attributes_dialog.fxml\"));\n+    loader.setRoot(this);\n+    loader.setController(this);\n+\n+    setTitle(\"Edit Feature Attributes\");\n+\n+    try {\n+      loader.load();\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+\n+    // populate text fields with current attribute values\n+    addressTextField.setText(selectedFeature.getAttributes().get(\"AD_ADDRESS\").toString());\n+    streetNameTextField.setText(selectedFeature.getAttributes().get(\"ST_STR_NAM\").toString());\n+\n+    // convert the result to an address and street name when the ok button is clicked.\n+    setResultConverter(dialogButton -> {\n+      if (dialogButton == continueButton) {\n+        try {\n+          // set AD_ADDRESS value to the int from the text field\n+          selectedFeature.getAttributes().put(\"AD_ADDRESS\", Integer.parseInt(addressTextField.getText()));\n+\n+          // set ST_STR_NAM value to the string from the text field\n+          selectedFeature.getAttributes().put(\"ST_STR_NAM\", streetNameTextField.getText());\n+\n+          // update feature in the feature table\n+          ListenableFuture<Void> editResult = selectedFeature.getFeatureTable().updateFeatureAsync(selectedFeature);\n+          editResult.addDoneListener(() -> {\n+                    try {\n+                      if (editResult.isDone()) {", "originalCommit": "4f56af536455f25ec115baae09200b731ebc9098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "message": "Update feature in showEditableAttributes", "committedDate": "2020-08-10T17:07:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0OTExMg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r469249112", "bodyText": "Nice work on tidying this up.\nI've had a closer look and there's actually no need to return the selected feature here. This is because there's a handle on it in the main sample code already (from when we run mapView.identifyLayersAsync). So for the sake of simplicty let's convert back to return null;", "author": "JonLavi", "createdAt": "2020-08-12T13:13:48Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditAttributesDialog.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.control.ButtonType;\n+import javafx.scene.control.Dialog;\n+import javafx.scene.control.TextField;\n+\n+import com.esri.arcgisruntime.data.Feature;\n+\n+/**\n+ * Custom dialog for editing feature attributes.\n+ */\n+public class EditAttributesDialog extends Dialog<Feature>{\n+\n+  @FXML private TextField addressTextField;\n+  @FXML private TextField streetNameTextField;\n+  @FXML private ButtonType continueButton;\n+\n+  EditAttributesDialog(Feature selectedFeature){\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/edit_features_with_feature_linked_annotation/edit_attributes_dialog.fxml\"));\n+    loader.setRoot(this);\n+    loader.setController(this);\n+\n+    setTitle(\"Edit Feature Attributes\");\n+\n+    try {\n+      loader.load();\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+\n+    // populate text fields with current attribute values\n+    addressTextField.setText(selectedFeature.getAttributes().get(\"AD_ADDRESS\").toString());\n+    streetNameTextField.setText(selectedFeature.getAttributes().get(\"ST_STR_NAM\").toString());\n+\n+    // convert the result to an address and street name when the ok button is clicked.\n+    setResultConverter(dialogButton -> {\n+      if (dialogButton == continueButton) {\n+        try {\n+          // set AD_ADDRESS value to the int from the text field\n+          selectedFeature.getAttributes().put(\"AD_ADDRESS\", Integer.parseInt(addressTextField.getText()));\n+\n+          // set ST_STR_NAM value to the string from the text field\n+          selectedFeature.getAttributes().put(\"ST_STR_NAM\", streetNameTextField.getText());\n+\n+          return selectedFeature;", "originalCommit": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MTE5Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r469251196", "bodyText": "Let's just give this a tad more breathing space and separate into two blocks. One where we create the GDB, and the other where we add the done loading listener:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n          \n          \n            \n                  geodatabase.addDoneLoadingListener(() -> {\n          \n          \n            \n                  Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n          \n          \n            \n                  \n          \n          \n            \n                  geodatabase.addDoneLoadingListener(() -> {", "author": "JonLavi", "createdAt": "2020-08-12T13:17:00Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,357 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./src/main/resources/edit_features_with_feature_linked_annotation/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+      geodatabase.addDoneLoadingListener(() -> {", "originalCommit": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1ODUxMg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r469258512", "bodyText": "We can be a bit more generous here and give a larger tolerance. That way it'll be a bit easier to select the lines.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n          \n          \n            \n                ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 10, false);", "author": "JonLavi", "createdAt": "2020-08-12T13:27:44Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,357 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./src/main/resources/edit_features_with_feature_linked_annotation/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Selects the nearest feature, or move the point or polyline vertex to the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identifies a feature near the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);", "originalCommit": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE0ODAzNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r470148036", "bodyText": "Increasing the tolerance forces you to zoom in to select a feature, as annotation layers are identified as the top most layer. A for loop can be added to ignore the annotation layers and select the feature. I think this implementation is cleaner, and is similar to the identify workflow in the Android sample.\n// identify across all layers\nListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 10, false);\n    identifyLayerResultsFuture.addDoneListener(() -> {\n      try {\n        // get the list of results from the future\n        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n        // for each layer from which an element was identified\n        for (IdentifyLayerResult layerResult : identifyLayerResults) {\n          // check if the layer is a feature layer, thereby excluding annotation layers\n          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n            // get a reference to the identified feature\n            selectedFeature = (Feature) layerResult.getElements().get(0);\n            // check the geometry and select the feature\n            selectFeature(layerResult);\n            return;\n          }\n     }", "author": "sclaridge", "createdAt": "2020-08-13T18:05:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1ODUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2MTY5MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r469261690", "bodyText": "I personally think we can simplify this by turning the if-statment around. Doing an 'early return' is very much a C# pattern, as far as I'm aware.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // if the selected feature is a polyline with any part containing more than one segment\n          \n          \n            \n                      // (i.e. a curve)\n          \n          \n            \n                      if (part.getPointCount() > 2) {\n          \n          \n            \n                        selectedFeature = null;\n          \n          \n            \n                        // show message reminding user to select straight (single segment) polylines only\n          \n          \n            \n                        new Alert(Alert.AlertType.WARNING, \"Select straight (single segment) polylines only.\").show();\n          \n          \n            \n                        // return early, effectively disallowing selection of multi segmented polylines\n          \n          \n            \n                        return;\n          \n          \n            \n                      } else {\n          \n          \n            \n                        // select the polyline feature\n          \n          \n            \n                        ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n          \n          \n            \n                        selectedFeatureIsPolyline = true;\n          \n          \n            \n                      }\n          \n          \n            \n                      // only select single segment lines\n          \n          \n            \n                      if (part.getPointCount() <= 2) {\n          \n          \n            \n                        // select the polyline feature\n          \n          \n            \n                        ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n          \n          \n            \n                        selectedFeatureIsPolyline = true;\n          \n          \n            \n                      \n          \n          \n            \n                      } else {\n          \n          \n            \n                        selectedFeature = null;\n          \n          \n            \n                        // show message reminding user to select straight (single segment) polylines only\n          \n          \n            \n                        new Alert(Alert.AlertType.WARNING, \"Select straight (single segment) polylines only.\").show();\n          \n          \n            \n                      }", "author": "JonLavi", "createdAt": "2020-08-12T13:32:16Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,357 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./src/main/resources/edit_features_with_feature_linked_annotation/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Selects the nearest feature, or move the point or polyline vertex to the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identifies a feature near the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // if one or more results have been identified\n+        if (!identifyLayerResults.isEmpty()) {\n+          // retrieve the first result\n+          IdentifyLayerResult layerResult = identifyLayerResults.get(0);\n+          // check that the result is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+          }\n+        }\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Checks if the identified feature is a straight polyline or a point, and select the feature.\n+   * For a point feature, show a dialog to edit attributes. Future clicks will call move functions.\n+   *\n+   * @param layerResult identify layer result\n+   */\n+  private void selectFeature(IdentifyLayerResult layerResult) {\n+\n+    try {\n+      // if the selected feature is a polyline\n+      if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+        // create a polyline builder from the selected feature\n+        PolylineBuilder polylineBuilder = new PolylineBuilder((Polyline) selectedFeature.getGeometry());\n+        // get a list of parts of the selected polyline\n+        List<Part> parts = polylineBuilder.getParts();\n+        parts.forEach(part -> {\n+          // if the selected feature is a polyline with any part containing more than one segment\n+          // (i.e. a curve)\n+          if (part.getPointCount() > 2) {\n+            selectedFeature = null;\n+            // show message reminding user to select straight (single segment) polylines only\n+            new Alert(Alert.AlertType.WARNING, \"Select straight (single segment) polylines only.\").show();\n+            // return early, effectively disallowing selection of multi segmented polylines\n+            return;\n+          } else {\n+            // select the polyline feature\n+            ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+            selectedFeatureIsPolyline = true;\n+          }", "originalCommit": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwMDI4Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r469300283", "bodyText": "I'm not the documentation expert, but I have the impression we usually start @param descriptions with the, and describe these parameters based on their context within the function. So we could write here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param screenPoint location the user clicked\n          \n          \n            \n               * @param screenPoint the screen point at which to select a feature, or to move a feature to", "author": "JonLavi", "createdAt": "2020-08-12T14:26:31Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,357 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./src/main/resources/edit_features_with_feature_linked_annotation/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Selects the nearest feature, or move the point or polyline vertex to the given screen point.\n+   *\n+   * @param screenPoint location the user clicked", "originalCommit": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwMTUwMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r469301501", "bodyText": "Another documentation suggestion: we can describe what purpose this parameter serves within the method:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param screenPoint location the user clicked\n          \n          \n            \n               * @param screenPoint the screen point at which to identify a feature", "author": "JonLavi", "createdAt": "2020-08-12T14:28:08Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,357 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./src/main/resources/edit_features_with_feature_linked_annotation/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Selects the nearest feature, or move the point or polyline vertex to the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identifies a feature near the given screen point.\n+   *\n+   * @param screenPoint location the user clicked", "originalCommit": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwMjA5OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r469302099", "bodyText": "Just another suggestion:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param layerResult identify layer result\n          \n          \n            \n               * @param layerResult the identify layer result from which to select a feature", "author": "JonLavi", "createdAt": "2020-08-12T14:28:52Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,357 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./src/main/resources/edit_features_with_feature_linked_annotation/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Selects the nearest feature, or move the point or polyline vertex to the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identifies a feature near the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // if one or more results have been identified\n+        if (!identifyLayerResults.isEmpty()) {\n+          // retrieve the first result\n+          IdentifyLayerResult layerResult = identifyLayerResults.get(0);\n+          // check that the result is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+          }\n+        }\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Checks if the identified feature is a straight polyline or a point, and select the feature.\n+   * For a point feature, show a dialog to edit attributes. Future clicks will call move functions.\n+   *\n+   * @param layerResult identify layer result", "originalCommit": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNDA2Nw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r469304067", "bodyText": "Let's show an alert here instead of just printing the stack trace:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    e.printStackTrace();\n          \n          \n            \n                    new Alert(Alert.AlertType.ERROR, \"Error identifying the clicked feature.\").show();", "author": "JonLavi", "createdAt": "2020-08-12T14:31:40Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,357 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./src/main/resources/edit_features_with_feature_linked_annotation/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Selects the nearest feature, or move the point or polyline vertex to the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identifies a feature near the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // if one or more results have been identified\n+        if (!identifyLayerResults.isEmpty()) {\n+          // retrieve the first result\n+          IdentifyLayerResult layerResult = identifyLayerResults.get(0);\n+          // check that the result is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+          }\n+        }\n+      } catch (Exception e) {\n+        e.printStackTrace();", "originalCommit": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNjAwNQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r469306005", "bodyText": "It doesn't look like there's any need for this try/catch block anymore, since all the asynchronous actions are now being done in other methods? In which case we can just remove it", "author": "JonLavi", "createdAt": "2020-08-12T14:34:19Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,357 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./src/main/resources/edit_features_with_feature_linked_annotation/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Selects the nearest feature, or move the point or polyline vertex to the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identifies a feature near the given screen point.\n+   *\n+   * @param screenPoint location the user clicked\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 1, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // if one or more results have been identified\n+        if (!identifyLayerResults.isEmpty()) {\n+          // retrieve the first result\n+          IdentifyLayerResult layerResult = identifyLayerResults.get(0);\n+          // check that the result is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+          }\n+        }\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Checks if the identified feature is a straight polyline or a point, and select the feature.\n+   * For a point feature, show a dialog to edit attributes. Future clicks will call move functions.\n+   *\n+   * @param layerResult identify layer result\n+   */\n+  private void selectFeature(IdentifyLayerResult layerResult) {\n+\n+    try {\n+      // if the selected feature is a polyline\n+      if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+        // create a polyline builder from the selected feature\n+        PolylineBuilder polylineBuilder = new PolylineBuilder((Polyline) selectedFeature.getGeometry());\n+        // get a list of parts of the selected polyline\n+        List<Part> parts = polylineBuilder.getParts();\n+        parts.forEach(part -> {\n+          // if the selected feature is a polyline with any part containing more than one segment\n+          // (i.e. a curve)\n+          if (part.getPointCount() > 2) {\n+            selectedFeature = null;\n+            // show message reminding user to select straight (single segment) polylines only\n+            new Alert(Alert.AlertType.WARNING, \"Select straight (single segment) polylines only.\").show();\n+            // return early, effectively disallowing selection of multi segmented polylines\n+            return;\n+          } else {\n+            // select the polyline feature\n+            ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+            selectedFeatureIsPolyline = true;\n+          }\n+        });\n+      }\n+      // if the selected feature is a point, select the feature\n+      else if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POINT) {\n+        ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+        // open a dialog to edit the feature's attributes\n+        showEditableAttributes(selectedFeature);\n+      } else {\n+        new Alert(Alert.AlertType.WARNING, \"Feature of unexpected geometry type selected.\").show();\n+      }\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }", "originalCommit": "0e27fd3d13cde6b60a9cc355a1d0694f09d7f98d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d0b749465df4b5bc20d0c61aa4b3837e368825d4", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d0b749465df4b5bc20d0c61aa4b3837e368825d4", "message": "Add changes from PR", "committedDate": "2020-08-14T13:24:54Z", "type": "commit"}, {"oid": "3aca50f8aea4baa1ff9fa93b6a96c6be424467cc", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/3aca50f8aea4baa1ff9fa93b6a96c6be424467cc", "message": "Change settings.gradle to store data in samples-data directory", "committedDate": "2020-09-01T09:01:36Z", "type": "commit"}, {"oid": "57e046f2ec6f86b1adc6f39829905e33023abe02", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/57e046f2ec6f86b1adc6f39829905e33023abe02", "message": "Merge branch 'master' into sim11117-feature-linked-annotation", "committedDate": "2020-09-02T10:36:04Z", "type": "commit"}, {"oid": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a96616d1bf0b0e6b2cabb316cb505a714b85479a", "message": "Update build.gradle", "committedDate": "2020-09-02T10:43:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ0OTc2OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r479449768", "bodyText": "we can update this to 100.9.0 now that we're live!", "author": "Rachael-E", "createdAt": "2020-08-28T17:46:02Z", "path": "editing/edit-features-with-feature-linked-annotation/build.gradle", "diffHunk": "@@ -0,0 +1,74 @@\n+plugins {\n+    id 'application'\n+    id 'org.openjfx.javafxplugin' version '0.0.5'\n+}\n+\n+group = 'com.esri.samples'\n+\n+ext {\n+    arcgisVersion = '100.9.0-2852'", "originalCommit": "d0b749465df4b5bc20d0c61aa4b3837e368825d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1NDE4MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r479454180", "bodyText": "this description doesn't include actually moving an address point on the sample. This threw me initially as I clicked \"OK\" or \"Cancel\" and then clicked on the map/another point: wasn't expecting the address point to move too.  We should add in some additional documentation for this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Pan and zoom the map to see that the text on the map is annotation, not labels. Click one of the address points to update the house number (AD_ADDRESS) and street name (ST_STR_NAM). Click one of the dashed parcel polylines and click another location to change its geometry. NOTE: Selection is only enabled for points and straight (single segment) polylines.\n          \n          \n            \n            Pan and zoom the map to see that the text on the map is annotation, not labels. Click one of the address points to update the house number (AD_ADDRESS) and street name (ST_STR_NAM). Once you have edited the feature attributes, click \"OK\" and then click again on the map to move the address point to a new location. You can also click one of the dashed parcel polylines and click another location to change its geometry and update its annotation (distance in feet). NOTE: Selection is only enabled for points and straight (single segment) polylines.", "author": "Rachael-E", "createdAt": "2020-08-28T17:55:21Z", "path": "editing/edit-features-with-feature-linked-annotation/README.md", "diffHunk": "@@ -0,0 +1,42 @@\n+# Edit features with feature-linked annotation\n+\n+Edit feature attributes which are linked to annotation through an expression.\n+\n+![Image of edit features with feature-linked annotation](EditFeaturesWithFeatureLinkedAnnotation.png)\n+\n+## Use case\n+\n+Annotation is useful for displaying text that you don't want to move or resize when the map is panned or zoomed (unlike labels which will move and resize). Feature-linked annotation will update when a feature attribute referenced by the annotation expression is also updated. Additionally, the position of the annotation will transform to match any transformation to the linked feature's geometry.\n+\n+## How to use the sample\n+\n+Pan and zoom the map to see that the text on the map is annotation, not labels. Click one of the address points to update the house number (AD_ADDRESS) and street name (ST_STR_NAM). Click one of the dashed parcel polylines and click another location to change its geometry. NOTE: Selection is only enabled for points and straight (single segment) polylines.", "originalCommit": "d0b749465df4b5bc20d0c61aa4b3837e368825d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1ODg5OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r479458898", "bodyText": "to make sure the samples data is included within a production zip made from this file, we also here need to include the following code here - this should be done for all samples which require locally saved data to run.\n    from (\"samples-data\") {\n        into \"samples-data\"\n    }", "author": "Rachael-E", "createdAt": "2020-08-28T18:05:38Z", "path": "editing/edit-features-with-feature-linked-annotation/build.gradle", "diffHunk": "@@ -0,0 +1,74 @@\n+plugins {\n+    id 'application'\n+    id 'org.openjfx.javafxplugin' version '0.0.5'\n+}\n+\n+group = 'com.esri.samples'\n+\n+ext {\n+    arcgisVersion = '100.9.0-2852'\n+}\n+\n+javafx {\n+    version = \"11.0.2\"\n+    modules = [ 'javafx.controls', 'javafx.fxml' ]\n+}\n+\n+compileJava.options.encoding = 'UTF-8'\n+\n+repositories {\n+    jcenter()\n+    maven {\n+        url 'https://esri.bintray.com/arcgis'\n+    }\n+    maven {\n+        url 'http://olympus.esri.com/artifactory/arcgisruntime-repo'\n+    }\n+}\n+\n+configurations {\n+    natives\n+}\n+\n+dependencies {\n+    compile \"com.esri.arcgisruntime:arcgis-java:$arcgisVersion\"\n+    natives \"com.esri.arcgisruntime:arcgis-java-jnilibs:$arcgisVersion\"\n+    natives \"com.esri.arcgisruntime:arcgis-java-resources:$arcgisVersion\"\n+}\n+\n+task copyNatives(type: Copy) {\n+    description = \"Copies the arcgis native libraries into the project build directory for development.\"\n+    group = \"build\"\n+    configurations.natives.asFileTree.each {\n+        from(zipTree(it))\n+    }\n+    // store native libraries in a common location shared with other samples\n+    into \"${System.properties.getProperty(\"user.home\")}/.arcgis/$arcgisVersion\"\n+}\n+\n+run {\n+    dependsOn copyNatives\n+    mainClassName = 'com.esri.samples.edit_features_with_feature_linked_annotation.EditFeaturesWithFeatureLinkedAnnotationLauncher'\n+}\n+\n+jar {\n+    duplicatesStrategy = DuplicatesStrategy.EXCLUDE\n+    manifest {\n+        attributes(\"Main-Class\": \"$mainClassName\")\n+    }\n+    from {\n+        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }\n+    }\n+}\n+\n+task productionZip(type: Zip) {\n+    group = 'distribution'\n+    from copyNatives", "originalCommit": "d0b749465df4b5bc20d0c61aa4b3837e368825d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1OTg0Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r479459842", "bodyText": "I added a comment in Jon's review, but just in case it gets lost: samples data should always be saved into a samples-data directory. The resources are reserved for UI or style files.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        dest: file(\"./src/main/resources/edit_features_with_feature_linked_annotation/loudon\")\n          \n          \n            \n                        dest: file(\"./samples-data/loudon\")", "author": "Rachael-E", "createdAt": "2020-08-28T18:07:47Z", "path": "editing/edit-features-with-feature-linked-annotation/settings.gradle", "diffHunk": "@@ -0,0 +1,16 @@\n+rootProject.name = 'edit-features-with-feature-linked-annotation'\n+\n+// download sample data\n+def ant = new groovy.util.AntBuilder()\n+\n+if (!file(\"./samples-data\").exists()) {\n+    ant.get(\n+            src: \"https://arcgisruntime.maps.arcgis.com/sharing/rest/content/items/74c0c9fa80f4498c9739cc42531e9948/data\",\n+            dest: file(\"./data.zip\")\n+    )\n+    ant.unzip(\n+            src: file(\"./data.zip\"),\n+            dest: file(\"./src/main/resources/edit_features_with_feature_linked_annotation/loudon\")", "originalCommit": "d0b749465df4b5bc20d0c61aa4b3837e368825d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA0NjkxNQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483046915", "bodyText": "in in line javadoc comments (i.e. those not describing a method/class), full stops/periods aren't required.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // convert the result to an address and street name when the ok button is clicked.\n          \n          \n            \n                // convert the result to an address and street name when the ok button is clicked", "author": "Rachael-E", "createdAt": "2020-09-03T15:01:22Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditAttributesDialog.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.control.ButtonType;\n+import javafx.scene.control.Dialog;\n+import javafx.scene.control.TextField;\n+\n+import com.esri.arcgisruntime.data.Feature;\n+\n+/**\n+ * Custom dialog for editing feature attributes.\n+ */\n+public class EditAttributesDialog extends Dialog<Feature>{\n+\n+  @FXML private TextField addressTextField;\n+  @FXML private TextField streetNameTextField;\n+  @FXML private ButtonType continueButton;\n+\n+  EditAttributesDialog(Feature selectedFeature){\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/edit_features_with_feature_linked_annotation/edit_attributes_dialog.fxml\"));\n+    loader.setRoot(this);\n+    loader.setController(this);\n+\n+    setTitle(\"Edit Feature Attributes\");\n+\n+    try {\n+      loader.load();\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+\n+    // populate text fields with current attribute values\n+    addressTextField.setText(selectedFeature.getAttributes().get(\"AD_ADDRESS\").toString());\n+    streetNameTextField.setText(selectedFeature.getAttributes().get(\"ST_STR_NAM\").toString());\n+\n+    // convert the result to an address and street name when the ok button is clicked.", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1ODUxMw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483058513", "bodyText": "to avoid a keyboard-happy user like me inadvertently throwing a java.lang.NumberFormatException by putting lots of extra numbers in in this field ;)\nwe can put in something like the following:\n          // ensure input is equal to or less than 5 characters (max length for addresses in area)\n          if (addressTextField.getLength() <= 5){\n            // set AD_ADDRESS value to the int from the text field\n            selectedFeature.getAttributes().put(\"AD_ADDRESS\", Integer.parseInt(addressTextField.getText()));\n          } else  {\n            new Alert(Alert.AlertType.WARNING, \"Field not updated. Integer must be less than 6 characters\").showAndWait();\n          }\nSee also this stackoverflow post for understanding better why an exception is thrown here when putting in too many digits.", "author": "Rachael-E", "createdAt": "2020-09-03T15:17:46Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditAttributesDialog.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.control.ButtonType;\n+import javafx.scene.control.Dialog;\n+import javafx.scene.control.TextField;\n+\n+import com.esri.arcgisruntime.data.Feature;\n+\n+/**\n+ * Custom dialog for editing feature attributes.\n+ */\n+public class EditAttributesDialog extends Dialog<Feature>{\n+\n+  @FXML private TextField addressTextField;\n+  @FXML private TextField streetNameTextField;\n+  @FXML private ButtonType continueButton;\n+\n+  EditAttributesDialog(Feature selectedFeature){\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/edit_features_with_feature_linked_annotation/edit_attributes_dialog.fxml\"));\n+    loader.setRoot(this);\n+    loader.setController(this);\n+\n+    setTitle(\"Edit Feature Attributes\");\n+\n+    try {\n+      loader.load();\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+\n+    // populate text fields with current attribute values\n+    addressTextField.setText(selectedFeature.getAttributes().get(\"AD_ADDRESS\").toString());\n+    streetNameTextField.setText(selectedFeature.getAttributes().get(\"ST_STR_NAM\").toString());\n+\n+    // convert the result to an address and street name when the ok button is clicked.\n+    setResultConverter(dialogButton -> {\n+      if (dialogButton == continueButton) {\n+        try {\n+          // set AD_ADDRESS value to the int from the text field", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MjY2NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483062664", "bodyText": "perhaps this would be better named as \"updateButton\"? We could also update the button text to show \"Update\" which is perhaps a bit clearer than \"Ok\" in terms of what the user is doing if they click to edit the feature.", "author": "Rachael-E", "createdAt": "2020-09-03T15:23:16Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditAttributesDialog.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.control.ButtonType;\n+import javafx.scene.control.Dialog;\n+import javafx.scene.control.TextField;\n+\n+import com.esri.arcgisruntime.data.Feature;\n+\n+/**\n+ * Custom dialog for editing feature attributes.\n+ */\n+public class EditAttributesDialog extends Dialog<Feature>{\n+\n+  @FXML private TextField addressTextField;\n+  @FXML private TextField streetNameTextField;\n+  @FXML private ButtonType continueButton;", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA5MTEzMA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483091130", "bodyText": "Usually on our samples desktop applications, I'd expect to see the cancel button on the right hand side of dialog, not the left. Our other samples follow this pattern too, so let's stick with that by switching \"OK_DONE\" for \"FINISH\" (looks like JavaFX controls the position of the buttons and the enum seems to do the same thing in this case). I also think \"Update\" might be clearer than \"Ok\".\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        <ButtonType fx:id=\"continueButton\" buttonData=\"OK_DONE\" text=\"Ok\"/>\n          \n          \n            \n                        <ButtonType fx:id=\"continueButton\" buttonData=\"FINISH\" text=\"Update\"/>", "author": "Rachael-E", "createdAt": "2020-09-03T16:03:49Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/resources/edit_features_with_feature_linked_annotation/edit_attributes_dialog.fxml", "diffHunk": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Esri.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy of\n+  ~ the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  ~ License for the specific language governing permissions and limitations under\n+  ~ the License.\n+  -->\n+\n+<?import javafx.scene.control.DialogPane?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.ButtonType?>\n+<?import javafx.scene.layout.GridPane?>\n+<fx:root type=\"javafx.scene.control.Dialog\"\n+         xmlns:fx=\"http://javafx.com/fxml\">\n+    <dialogPane>\n+        <DialogPane>\n+            <content>\n+                <GridPane vgap=\"10\" hgap=\"10\">\n+                    <Label text=\"AD_ADDRESS:\" GridPane.rowIndex=\"0\" GridPane.columnIndex=\"0\"/>\n+                    <TextField fx:id=\"addressTextField\" GridPane.rowIndex=\"0\" GridPane.columnIndex=\"1\"/>\n+                    <Label text=\"ST_STR_NAM:\" GridPane.rowIndex=\"1\" GridPane.columnIndex=\"0\"/>\n+                    <TextField fx:id=\"streetNameTextField\" GridPane.rowIndex=\"1\" GridPane.columnIndex=\"1\"/>\n+                </GridPane>\n+            </content>\n+            <ButtonType fx:id=\"continueButton\" buttonData=\"OK_DONE\" text=\"Ok\"/>", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1NzU3NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483157574", "bodyText": "all of these can be local variables in the start method, since they are not referenced elsewhere in the class. We don't need to worry about these being garbage collected, since we're not waiting for them to finish loading before doing something with them.", "author": "Rachael-E", "createdAt": "2020-09-03T17:56:54Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1OTU3Nw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483159577", "bodyText": "we should make this an instance variable. Since it is a loadable, and we are waiting on it to finish loading, there is a small chance it's initial reference will be garbage collected and by the time the addDoneLoadingListener has returned, the initial geodatabase reference is lost and the app will hang.  Let's add the following up above the start method:\n  private Geodatabase geodatabase; // keep loadable in scope to avoid garbage collection\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n          \n          \n            \n                  geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());", "author": "Rachael-E", "createdAt": "2020-09-03T18:00:36Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2MTc4MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483161781", "bodyText": "we can simplify the following with:\n// add the annotation and feature layers to the map\nmap.getOperationalLayers().addAll(Arrays.asList(\n     addressPointFeatureLayer, parcelLinesFeatureLayer, addressPointsAnnotationLayer, parcelLinesAnnotationLayer));", "author": "Rachael-E", "createdAt": "2020-09-03T18:05:02Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2MzgzMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483163831", "bodyText": "by the time we're using local variables for the FeatureLayer's here (see comment above), that's a lot of references to the word FeatureLayer in this block of code. For situations like this, we can make use of Java 10's keyword \"var\". This replaces the type information when declaring local variables and clears the readability up a little.\nAlso since these are quite long lines of code, we should stagger them a little:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // create feature layers from tables in the geodatabase\n          \n          \n            \n                      addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n          \n          \n            \n                      parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n          \n          \n            \n                      // create annotation layers from tables in the geodatabase\n          \n          \n            \n                      addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n          \n          \n            \n                      parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n          \n          \n            \n                     // create feature layers from tables in the geodatabase\n          \n          \n            \n                     var addressPointFeatureLayer =\n          \n          \n            \n                       new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n          \n          \n            \n                     var parcelLinesFeatureLayer =\n          \n          \n            \n                       new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n          \n          \n            \n                     // create annotation layers from tables in the geodatabase\n          \n          \n            \n                     var addressPointsAnnotationLayer =\n          \n          \n            \n                       new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n          \n          \n            \n                     var parcelLinesAnnotationLayer =\n          \n          \n            \n                       new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));", "author": "Rachael-E", "createdAt": "2020-09-03T18:08:52Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2NjMwNw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483166307", "bodyText": "I think for a readability perspective, it makes more sense for us to move this loadAsync call up (to above the geodatabase.addDoneLoadingListener() even though it doesn't make much of a difference from a code execution perspective.", "author": "Rachael-E", "createdAt": "2020-09-03T18:13:25Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2ODc2OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483168769", "bodyText": "with moving the logic from the single use method directly into this listener, we can borrow some of the original method description and use it here instead:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // set on click behaviour\n          \n          \n            \n                  // select the nearest feature from where the user clicked, or move the selected feature to the given screen point", "author": "Rachael-E", "createdAt": "2020-09-03T18:17:52Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2OTA1MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483169050", "bodyText": "we can remove this comment: the code below it is clear enough to describe it is checking the primary mouse button was clicked.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // check that the primary mouse button was clicked", "author": "Rachael-E", "createdAt": "2020-09-03T18:18:26Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2OTY4MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r483169680", "bodyText": "it's common with the Android implementations to have single use methods, but with Java SE samples we don't do this as often. The logic in this method isn't too verbose, so let's just remove the method and insert the code from that method directly here instead.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      selectOrMove(screenPoint);\n          \n          \n            \n                // if a feature hasn't been selected, select the feature\n          \n          \n            \n                if (selectedFeature == null) {\n          \n          \n            \n                  identifyFeature(screenPoint);\n          \n          \n            \n                } else {\n          \n          \n            \n                  // convert the screen point to a map point\n          \n          \n            \n                  Point mapPoint = mapView.screenToLocation(screenPoint);\n          \n          \n            \n                  // if the feature is a polyline, move the polyline\n          \n          \n            \n                  if (selectedFeatureIsPolyline) {\n          \n          \n            \n                    movePolylineVertex(mapPoint);\n          \n          \n            \n                  } else {\n          \n          \n            \n                    // if the feature is a point, move the point\n          \n          \n            \n                    movePoint(mapPoint);\n          \n          \n            \n                  }\n          \n          \n            \n                }```", "author": "Rachael-E", "createdAt": "2020-09-03T18:19:37Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4c38e39954a8824e797ca59057651898d5e7dded", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/4c38e39954a8824e797ca59057651898d5e7dded", "message": "Commit changes from PR", "committedDate": "2020-09-04T09:43:14Z", "type": "commit"}, {"oid": "a97213ab394ab945aa383ff3bd6f939963db19b9", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a97213ab394ab945aa383ff3bd6f939963db19b9", "message": "Update image", "committedDate": "2020-09-04T10:15:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2NTI0Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r484365246", "bodyText": "rather than casting this long to an int (which could result in a stack overflow if the long is greater than the maximum allowed int value), we can use the following method which would throw an informative exception in case of the above happening. Very unlikely in this sample but good practice I believe.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Part part = polylineBuilder.getParts().get((int) nearestVertex.getPartIndex());\n          \n          \n            \n                Part part = polylineBuilder.getParts().get(Math.toIntExact(nearestVertex.getPartIndex()));", "author": "Rachael-E", "createdAt": "2020-09-07T11:12:45Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Selects the nearest feature, or move the point or polyline vertex to the given screen point.\n+   *\n+   * @param screenPoint the screen point at which to select a feature, or to move a feature to\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identifies a feature near the given screen point.\n+   *\n+   * @param screenPoint the screen point at which to identify a feature\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 10, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // for each layer from which an element was identified\n+        for (IdentifyLayerResult layerResult : identifyLayerResults) {\n+          // check if the layer is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+            return;\n+          }\n+        }\n+      } catch (Exception e) {\n+        new Alert(Alert.AlertType.ERROR, \"Error identifying the clicked feature.\").show();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Checks if the identified feature is a straight polyline or a point, and select the feature.\n+   * For a point feature, show a dialog to edit attributes. Future clicks will call move functions.\n+   *\n+   * @param layerResult the identify layer result from which to select a feature\n+   */\n+  private void selectFeature(IdentifyLayerResult layerResult) {\n+\n+    // if the selected feature is a polyline\n+    if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+      // create a polyline builder from the selected feature\n+      PolylineBuilder polylineBuilder = new PolylineBuilder((Polyline) selectedFeature.getGeometry());\n+      // get a list of parts of the selected polyline\n+      List<Part> parts = polylineBuilder.getParts();\n+      parts.forEach(part -> {\n+        // only select single segment lines\n+        if (part.getPointCount() <= 2) {\n+          // select the polyline feature\n+          ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+          selectedFeatureIsPolyline = true;\n+        } else {\n+          selectedFeature = null;\n+          // show message reminding user to select straight (single segment) polylines only\n+          new Alert(Alert.AlertType.WARNING, \"Select straight (single segment) polylines only.\").show();\n+        }\n+      });\n+    }\n+    // if the selected feature is a point, select the feature\n+    else if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POINT) {\n+      ((FeatureLayer) layerResult.getLayerContent()).selectFeature(selectedFeature);\n+      // open a dialog to edit the feature's attributes\n+      showEditableAttributes(selectedFeature);\n+    } else {\n+      new Alert(Alert.AlertType.WARNING, \"Feature of unexpected geometry type selected.\").show();\n+    }\n+  }\n+\n+  /**\n+   * Creates a dialog with text fields to allow editing of the given feature's 'AD_ADDRESS' and\n+   * 'ST_STR_NAM' attributes.\n+   *\n+   * @param selectedFeature the feature to update\n+   */\n+  private void showEditableAttributes(Feature selectedFeature) {\n+\n+    // create a dialog to edit the attributes of the selected feature\n+    EditAttributesDialog editAttributesDialog = new EditAttributesDialog(selectedFeature);\n+\n+    // show the dialog and wait for the user response\n+    editAttributesDialog.showAndWait();\n+\n+    // update the selected feature's feature table\n+    updateAttributes(selectedFeature);\n+  }\n+\n+  /**\n+   * Updates the attributes of the selected feature.\n+   *\n+   * @param selectedFeature the feature to update\n+   */\n+  static void updateAttributes(Feature selectedFeature) {\n+\n+    // update feature in the feature table\n+    ListenableFuture<Void> editResultFuture = selectedFeature.getFeatureTable().updateFeatureAsync(selectedFeature);\n+    editResultFuture.addDoneListener(() -> {\n+        try {\n+            editResultFuture.get();\n+        } catch (InterruptedException | ExecutionException e) {\n+          new Alert(Alert.AlertType.ERROR, \"Error updating attributes.\").show();\n+        }\n+      }\n+    );\n+  }\n+\n+  /**\n+   * Moves the selected point feature to the given map point by updating the selected\n+   * feature's geometry and feature table.\n+   *\n+   * @param mapPoint the location to move point feature\n+   */\n+  private void movePoint(Point mapPoint) {\n+\n+    // set the selected features' geometry to a new map point\n+    selectedFeature.setGeometry(mapPoint);\n+\n+    // update the selected feature's feature table\n+    updateAttributes(selectedFeature);\n+\n+    // clear selection of the point\n+    clearSelection();\n+  }\n+\n+  /**\n+   * Moves the last of the vertex point of the currently selected polyline to the given map point by updating the\n+   * selected feature's geometry and feature table.\n+   *\n+   * @param mapPoint the location to move polyline feature\n+   */\n+  private void movePolylineVertex(Point mapPoint) {\n+\n+    // get the selected feature's geometry as a polyline\n+    Polyline polyline = (Polyline) selectedFeature.getGeometry();\n+\n+    // create a polyline builder to add and remove parts from the polyline\n+    PolylineBuilder polylineBuilder = new PolylineBuilder(polyline);\n+\n+    // get the nearest vertex to the map point on the polyline\n+    ProximityResult nearestVertex =\n+      GeometryEngine.nearestVertex(polyline, (Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));\n+\n+    // get the part of the polyline nearest to the map point\n+    Part part = polylineBuilder.getParts().get((int) nearestVertex.getPartIndex());", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0NDU1OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r484444559", "bodyText": "since we don't use the variable parts more than once, we can directly add the forEach like so:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  List<Part> parts = polylineBuilder.getParts();\n          \n          \n            \n                  parts.forEach(part -> {\n          \n          \n            \n                  polylineBuilder.getParts().forEach(part -> {", "author": "Rachael-E", "createdAt": "2020-09-07T13:52:38Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,350 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private FeatureLayer addressPointFeatureLayer;\n+  private FeatureLayer parcelLinesFeatureLayer;\n+  private AnnotationLayer addressPointsAnnotationLayer;\n+  private AnnotationLayer parcelLinesAnnotationLayer;\n+  private Feature selectedFeature = null;\n+  private boolean selectedFeatureIsPolyline = false;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+      \n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      Geodatabase geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          addressPointFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          parcelLinesFeatureLayer = new FeatureLayer(geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          addressPointsAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          parcelLinesAnnotationLayer = new AnnotationLayer(geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers to the map\n+          map.getOperationalLayers().add(addressPointFeatureLayer);\n+          map.getOperationalLayers().add(parcelLinesFeatureLayer);\n+\n+          // add the annotation layers to the map\n+          map.getOperationalLayers().add(addressPointsAnnotationLayer);\n+          map.getOperationalLayers().add(parcelLinesAnnotationLayer);\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+      geodatabase.loadAsync();\n+\n+      // set on click behaviour\n+      mapView.setOnMouseClicked(event -> {\n+        // check that the primary mouse button was clicked\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // call select or move method to move to the point\n+          selectOrMove(screenPoint);\n+        }\n+      });\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Selects the nearest feature, or move the point or polyline vertex to the given screen point.\n+   *\n+   * @param screenPoint the screen point at which to select a feature, or to move a feature to\n+   */\n+  private void selectOrMove(Point2D screenPoint) {\n+\n+    // if a feature hasn't been selected, select the feature\n+    if (selectedFeature == null) {\n+      identifyFeature(screenPoint);\n+    } else {\n+      // convert the screen point to a map point\n+      Point mapPoint = mapView.screenToLocation(screenPoint);\n+      // if the feature is a polyline, move the polyline\n+      if (selectedFeatureIsPolyline) {\n+        movePolylineVertex(mapPoint);\n+      } else {\n+        // if the feature is a point, move the point\n+        movePoint(mapPoint);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Identifies a feature near the given screen point.\n+   *\n+   * @param screenPoint the screen point at which to identify a feature\n+   */\n+  private void identifyFeature(Point2D screenPoint) {\n+\n+    // clear any previously selected features\n+    clearSelection();\n+\n+    // identify across all layers\n+    ListenableFuture<List<IdentifyLayerResult>> identifyLayerResultsFuture = mapView.identifyLayersAsync(screenPoint, 10, false);\n+    identifyLayerResultsFuture.addDoneListener(() -> {\n+      try {\n+        // get the list of results from the future\n+        List<IdentifyLayerResult> identifyLayerResults = identifyLayerResultsFuture.get();\n+        // for each layer from which an element was identified\n+        for (IdentifyLayerResult layerResult : identifyLayerResults) {\n+          // check if the layer is a feature layer, thereby excluding annotation layers\n+          if (layerResult.getLayerContent() instanceof FeatureLayer) {\n+            // get a reference to the identified feature\n+            selectedFeature = (Feature) layerResult.getElements().get(0);\n+            // check the geometry and select the feature\n+            selectFeature(layerResult);\n+            return;\n+          }\n+        }\n+      } catch (Exception e) {\n+        new Alert(Alert.AlertType.ERROR, \"Error identifying the clicked feature.\").show();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Checks if the identified feature is a straight polyline or a point, and select the feature.\n+   * For a point feature, show a dialog to edit attributes. Future clicks will call move functions.\n+   *\n+   * @param layerResult the identify layer result from which to select a feature\n+   */\n+  private void selectFeature(IdentifyLayerResult layerResult) {\n+\n+    // if the selected feature is a polyline\n+    if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+      // create a polyline builder from the selected feature\n+      PolylineBuilder polylineBuilder = new PolylineBuilder((Polyline) selectedFeature.getGeometry());\n+      // get a list of parts of the selected polyline\n+      List<Part> parts = polylineBuilder.getParts();\n+      parts.forEach(part -> {", "originalCommit": "a96616d1bf0b0e6b2cabb316cb505a714b85479a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "188058df5eefcfb694780105c693ca6df1139cd7", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/188058df5eefcfb694780105c693ca6df1139cd7", "message": "Add changes from PR", "committedDate": "2020-09-08T11:50:31Z", "type": "commit"}, {"oid": "9d311cdbbf34c867716d1e39046c9c6ddb26c027", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9d311cdbbf34c867716d1e39046c9c6ddb26c027", "message": "Remove single use methods", "committedDate": "2020-09-08T16:54:45Z", "type": "commit"}, {"oid": "747115aa8d1f7e9febacfaff50dd85f4b8272f00", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/747115aa8d1f7e9febacfaff50dd85f4b8272f00", "message": "Change comments", "committedDate": "2020-09-08T17:01:38Z", "type": "commit"}, {"oid": "924c240f55b27603be178aef26019340df599dc7", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/924c240f55b27603be178aef26019340df599dc7", "message": "Cast with toIntExact", "committedDate": "2020-09-08T17:09:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ4OTU2Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r485489566", "bodyText": "just some wordsmithing here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // add the feature layers and annotation layers to the map\n          \n          \n            \n                      // add the feature and annotation layers to the map", "author": "Rachael-E", "createdAt": "2020-09-09T09:57:05Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,288 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private Geodatabase geodatabase; // keep loadable in scope to avoid garbage collection\n+  private Feature selectedFeature = null;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+\n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.loadAsync();\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          var addressPointFeatureLayer = new FeatureLayer(\n+            geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          var parcelLinesFeatureLayer = new FeatureLayer(\n+            geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          var addressPointsAnnotationLayer = new AnnotationLayer(\n+            geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          var parcelLinesAnnotationLayer = new AnnotationLayer(\n+            geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers and annotation layers to the map", "originalCommit": "924c240f55b27603be178aef26019340df599dc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5MDM2Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r485490363", "bodyText": "correcting apostrophe\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          // set the selected features' geometry to a new map point\n          \n          \n            \n                          // set the selected feature's geometry to a new map point", "author": "Rachael-E", "createdAt": "2020-09-09T09:58:20Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,288 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private Geodatabase geodatabase; // keep loadable in scope to avoid garbage collection\n+  private Feature selectedFeature = null;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+\n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.loadAsync();\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          var addressPointFeatureLayer = new FeatureLayer(\n+            geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          var parcelLinesFeatureLayer = new FeatureLayer(\n+            geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          var addressPointsAnnotationLayer = new AnnotationLayer(\n+            geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          var parcelLinesAnnotationLayer = new AnnotationLayer(\n+            geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers and annotation layers to the map\n+          map.getOperationalLayers().addAll(Arrays.asList(\n+            addressPointFeatureLayer, parcelLinesFeatureLayer, addressPointsAnnotationLayer, parcelLinesAnnotationLayer));\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+\n+      // select the nearest feature from where the user clicked, or move the selected feature to the given screen point\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // if a feature hasn't been selected, select the feature\n+          if (selectedFeature == null) {\n+            identifyFeature(screenPoint);\n+          } else {\n+            // convert the screen point to a map point\n+            Point mapPoint = mapView.screenToLocation(screenPoint);\n+\n+            // if the feature is a polyline, move the polyline\n+            if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+              // get the selected feature's geometry as a polyline\n+              Polyline polyline = (Polyline) selectedFeature.getGeometry();\n+\n+              // create a polyline builder to add and remove parts from the polyline\n+              PolylineBuilder polylineBuilder = new PolylineBuilder(polyline);\n+\n+              // get the nearest vertex to the map point on the polyline\n+              ProximityResult nearestVertex =\n+                GeometryEngine.nearestVertex(polyline, (Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));\n+\n+              // get the part of the polyline nearest to the map point\n+              Part part = polylineBuilder.getParts().get(Math.toIntExact(nearestVertex.getPartIndex()));\n+\n+              // remove the nearest point to the map point from the part\n+              part.removePoint((int) nearestVertex.getPointIndex());\n+\n+              // add the map point as the new point on the part\n+              part.addPoint((Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));\n+\n+              // set the selected feature's geometry to the new polyline\n+              selectedFeature.setGeometry(polylineBuilder.toGeometry());\n+\n+              // if the feature is a point, move the point\n+            } else if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POINT) {\n+              // set the selected features' geometry to a new map point", "originalCommit": "924c240f55b27603be178aef26019340df599dc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5MTY1MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/543#discussion_r485491650", "bodyText": "just a suggestion: I think this might be a littler clearer, but up to you if you want to accept this change!\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // clear the selected feature\n          \n          \n            \n                        // remove the selection of the feature", "author": "Rachael-E", "createdAt": "2020-09-09T10:00:29Z", "path": "editing/edit-features-with-feature-linked-annotation/src/main/java/com.esri.samples.edit_features_with_feature_linked_annotation/EditFeaturesWithFeatureLinkedAnnotationSample.java", "diffHunk": "@@ -0,0 +1,288 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_features_with_feature_linked_annotation;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.Feature;\n+import com.esri.arcgisruntime.data.Geodatabase;\n+import com.esri.arcgisruntime.geometry.GeometryEngine;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Part;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.PolylineBuilder;\n+import com.esri.arcgisruntime.geometry.ProximityResult;\n+import com.esri.arcgisruntime.layers.AnnotationLayer;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+public class EditFeaturesWithFeatureLinkedAnnotationSample extends Application {\n+\n+  private MapView mapView;\n+  private Geodatabase geodatabase; // keep loadable in scope to avoid garbage collection\n+  private Feature selectedFeature = null;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add JavaFX scene to stage\n+      stage.setTitle(\"Edit Features With Feature-linked Annotation Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+\n+      // create the map with a light gray canvas basemap centered on Loudoun, Virginia\n+      ArcGISMap map = new ArcGISMap(Basemap.Type.LIGHT_GRAY_CANVAS_VECTOR, 39.0204, -77.4159, 18);\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // add the map view to stack pane\n+      stackPane.getChildren().addAll(mapView);\n+\n+      // create and load the geodatabase\n+      File geodatabaseFile = new File(System.getProperty(\"data.dir\"),\n+        \"./samples-data/loudon/loudoun_anno.geodatabase\");\n+      geodatabase = new Geodatabase(geodatabaseFile.getAbsolutePath());\n+\n+      geodatabase.loadAsync();\n+      geodatabase.addDoneLoadingListener(() -> {\n+        if (geodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+          // create feature layers from tables in the geodatabase\n+          var addressPointFeatureLayer = new FeatureLayer(\n+            geodatabase.getGeodatabaseFeatureTable(\"Loudoun_Address_Points_1\"));\n+          var parcelLinesFeatureLayer = new FeatureLayer(\n+            geodatabase.getGeodatabaseFeatureTable(\"ParcelLines_1\"));\n+          // create annotation layers from tables in the geodatabase\n+          var addressPointsAnnotationLayer = new AnnotationLayer(\n+            geodatabase.getGeodatabaseAnnotationTable(\"Loudoun_Address_PointsAnno_1\"));\n+          var parcelLinesAnnotationLayer = new AnnotationLayer(\n+            geodatabase.getGeodatabaseAnnotationTable(\"ParcelLinesAnno_1\"));\n+\n+          // add the feature layers and annotation layers to the map\n+          map.getOperationalLayers().addAll(Arrays.asList(\n+            addressPointFeatureLayer, parcelLinesFeatureLayer, addressPointsAnnotationLayer, parcelLinesAnnotationLayer));\n+        } else {\n+          // show alert if geodatabase fails to load\n+          new Alert(Alert.AlertType.ERROR, \"Error loading Geodatabase.\").show();\n+        }\n+      });\n+\n+      // select the nearest feature from where the user clicked, or move the selected feature to the given screen point\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // create a point where the user clicked\n+          Point2D screenPoint = new Point2D(event.getX(), event.getY());\n+          // if a feature hasn't been selected, select the feature\n+          if (selectedFeature == null) {\n+            identifyFeature(screenPoint);\n+          } else {\n+            // convert the screen point to a map point\n+            Point mapPoint = mapView.screenToLocation(screenPoint);\n+\n+            // if the feature is a polyline, move the polyline\n+            if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POLYLINE) {\n+              // get the selected feature's geometry as a polyline\n+              Polyline polyline = (Polyline) selectedFeature.getGeometry();\n+\n+              // create a polyline builder to add and remove parts from the polyline\n+              PolylineBuilder polylineBuilder = new PolylineBuilder(polyline);\n+\n+              // get the nearest vertex to the map point on the polyline\n+              ProximityResult nearestVertex =\n+                GeometryEngine.nearestVertex(polyline, (Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));\n+\n+              // get the part of the polyline nearest to the map point\n+              Part part = polylineBuilder.getParts().get(Math.toIntExact(nearestVertex.getPartIndex()));\n+\n+              // remove the nearest point to the map point from the part\n+              part.removePoint((int) nearestVertex.getPointIndex());\n+\n+              // add the map point as the new point on the part\n+              part.addPoint((Point) GeometryEngine.project(mapPoint, polyline.getSpatialReference()));\n+\n+              // set the selected feature's geometry to the new polyline\n+              selectedFeature.setGeometry(polylineBuilder.toGeometry());\n+\n+              // if the feature is a point, move the point\n+            } else if (selectedFeature.getGeometry().getGeometryType() == GeometryType.POINT) {\n+              // set the selected features' geometry to a new map point\n+              selectedFeature.setGeometry(mapPoint);\n+            }\n+            // update the selected feature's feature table\n+            updateAttributes(selectedFeature);\n+\n+            // clear the selected feature", "originalCommit": "924c240f55b27603be178aef26019340df599dc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ef9b0196876b28eccdee89e477c77a3d076e4971", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/ef9b0196876b28eccdee89e477c77a3d076e4971", "message": "Remove geodatabase and update comments", "committedDate": "2020-09-09T10:33:25Z", "type": "commit"}, {"oid": "8473b0ca058a92617d59550f44b2b7684420e098", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8473b0ca058a92617d59550f44b2b7684420e098", "message": "update api version", "committedDate": "2018-10-19T22:52:12Z", "type": "commit"}, {"oid": "51f7c3014feb39234cb167471e825c404f605cf7", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/51f7c3014feb39234cb167471e825c404f605cf7", "message": "change api version to 100.5.0", "committedDate": "2018-10-19T22:52:42Z", "type": "commit"}, {"oid": "63490089b63077091389a119b31a18444b9339d3", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/63490089b63077091389a119b31a18444b9339d3", "message": "Merge branch 'master' into dev", "committedDate": "2018-10-19T23:33:39Z", "type": "commit"}, {"oid": "b791ff8b7adda6a167ac5dc7ce53ccb56562b256", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b791ff8b7adda6a167ac5dc7ce53ccb56562b256", "message": "Merge branch 'dev' into 100.5.0", "committedDate": "2018-10-19T23:34:54Z", "type": "commit"}, {"oid": "6d1ba27648a36d1e4006d31d3d3dd7b73b41ccb1", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/6d1ba27648a36d1e4006d31d3d3dd7b73b41ccb1", "message": "change version to 100.5.0", "committedDate": "2018-10-19T23:35:03Z", "type": "commit"}, {"oid": "1f322ee826209edc3703bf324a3cf68c2ea822c7", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1f322ee826209edc3703bf324a3cf68c2ea822c7", "message": "Merge branch 'master' into dev", "committedDate": "2018-10-22T14:40:33Z", "type": "commit"}, {"oid": "a24082908d172ae9ce10ce0bf170b0b4b83b7fe4", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a24082908d172ae9ce10ce0bf170b0b4b83b7fe4", "message": "Merge branch 'master' into 100.5.0", "committedDate": "2018-10-22T14:41:52Z", "type": "commit"}, {"oid": "3d6ab90a06628db45beee22bc85b2391cdc5dbc9", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/3d6ab90a06628db45beee22bc85b2391cdc5dbc9", "message": "Merge branch 'master' into 100.5.0", "committedDate": "2018-10-23T17:55:44Z", "type": "commit"}, {"oid": "26a21ab89f2135e01a67677a059aff3d824f8056", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/26a21ab89f2135e01a67677a059aff3d824f8056", "message": "Merge branch '100.5.0' into dev", "committedDate": "2018-10-23T17:56:37Z", "type": "commit"}, {"oid": "e05b73e0f21be931f2f4b8fb41225b27156bb4f9", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e05b73e0f21be931f2f4b8fb41225b27156bb4f9", "message": "Merge branch 'master' into dev", "committedDate": "2018-10-23T22:26:17Z", "type": "commit"}, {"oid": "8f58533d61bd40c883bd54272a8aed0c965ffb0f", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8f58533d61bd40c883bd54272a8aed0c965ffb0f", "message": "Merge branch 'master' into dev", "committedDate": "2018-10-25T18:08:23Z", "type": "commit"}, {"oid": "75dc3a5f574e6ee37676ea02504a43bf847769c3", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/75dc3a5f574e6ee37676ea02504a43bf847769c3", "message": "start updates for java 11", "committedDate": "2018-11-02T17:55:32Z", "type": "commit"}, {"oid": "e0e545c52f2a5fb5fcb59d6d261817b648a80ac3", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e0e545c52f2a5fb5fcb59d6d261817b648a80ac3", "message": "Merge branch 'master' into dev", "committedDate": "2018-11-12T20:19:27Z", "type": "commit"}, {"oid": "81458358a94df036511b08c5d5009791592f4fd6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/81458358a94df036511b08c5d5009791592f4fd6", "message": "Merge pull request #288 from Esri/master\n\nMerge branch 'master' into dev", "committedDate": "2018-11-19T15:19:25Z", "type": "commit"}, {"oid": "a8903f0396167190e15aec74e773631751cb6224", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a8903f0396167190e15aec74e773631751cb6224", "message": "update java 11 parts", "committedDate": "2018-11-26T16:20:03Z", "type": "commit"}, {"oid": "82e7a94210ebbf9164dbde8378f8aa8e3612180f", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/82e7a94210ebbf9164dbde8378f8aa8e3612180f", "message": "add dependencies for all platforms", "committedDate": "2018-11-26T21:28:22Z", "type": "commit"}, {"oid": "2ce991faaf3fe520a18774b62402f6bd4cae4162", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2ce991faaf3fe520a18774b62402f6bd4cae4162", "message": "Delete module-info.java", "committedDate": "2018-11-26T22:30:37Z", "type": "commit"}, {"oid": "d99fad30bab4d4f7bb8d806a01ab27220b7c1168", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d99fad30bab4d4f7bb8d806a01ab27220b7c1168", "message": "Merge branch 'dev' into java-11", "committedDate": "2018-11-26T22:32:42Z", "type": "commit"}, {"oid": "c8e1c13ee088cc611c4a68a7fdcb0fdb4b4ee342", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c8e1c13ee088cc611c4a68a7fdcb0fdb4b4ee342", "message": "Merge branch 'master' into dev", "committedDate": "2018-11-30T22:38:38Z", "type": "commit"}, {"oid": "d45d1ae1a676c4c926a823bdc2be50dadb6ec40a", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d45d1ae1a676c4c926a823bdc2be50dadb6ec40a", "message": "Merge branch 'dev' into java-11", "committedDate": "2018-11-30T22:47:59Z", "type": "commit"}, {"oid": "56ed0d5c3a4cf037c5a92ff646bd7772602b2a4f", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/56ed0d5c3a4cf037c5a92ff646bd7772602b2a4f", "message": "Merge pull request #289 from Esri/java-11\n\nJava 11", "committedDate": "2018-11-30T22:48:33Z", "type": "commit"}, {"oid": "52fb4c967a6fa3ef886dac399fc19982bb85b2c0", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/52fb4c967a6fa3ef886dac399fc19982bb85b2c0", "message": "Merge pull request #293 from Esri/master\n\nMerge pull request master into dev (following sketch on map sample implementation)", "committedDate": "2018-12-12T11:10:40Z", "type": "commit"}, {"oid": "42f678b7a3f02395d83338a9a873fa486840e0e8", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/42f678b7a3f02395d83338a9a873fa486840e0e8", "message": "Merge branch 'master' into dev", "committedDate": "2018-12-14T00:26:55Z", "type": "commit"}, {"oid": "3a22cbb4f5190731fe074ecee10886adab23fe81", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/3a22cbb4f5190731fe074ecee10886adab23fe81", "message": "Merge pull request #298 from Esri/master\n\nMerge branch \"master\" into \"dev\"", "committedDate": "2018-12-18T10:08:29Z", "type": "commit"}, {"oid": "c43331e9391be9a7ad5f0ea374fabd3633b11eb1", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c43331e9391be9a7ad5f0ea374fabd3633b11eb1", "message": "Merge branch 'master' into dev", "committedDate": "2018-12-19T16:08:50Z", "type": "commit"}, {"oid": "db8110b41804c465cc835a044c79b836a7a7bec0", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/db8110b41804c465cc835a044c79b836a7a7bec0", "message": "Merge pull request #300 from Esri/master\n\nMerge master into dev following FeatureCollectionLayerQuery implementation", "committedDate": "2018-12-21T10:53:09Z", "type": "commit"}, {"oid": "9f2204bf6ba7d0d4409b9b95640491cefdcb4d5e", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9f2204bf6ba7d0d4409b9b95640491cefdcb4d5e", "message": "Update README\n\nUpdate README to alert Java 11 users to potential exceptions which may occur when running the project. Providing a suggested workaround from the OpenJavaFX docs.", "committedDate": "2018-12-21T14:50:44Z", "type": "commit"}, {"oid": "a56fbdd5bedd18af87ac4b693faa60ac70978f76", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a56fbdd5bedd18af87ac4b693faa60ac70978f76", "message": "Update README.md", "committedDate": "2018-12-21T16:35:36Z", "type": "commit"}, {"oid": "11285fdf7f4ddb7045a06e171d8852aca3b1c19c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/11285fdf7f4ddb7045a06e171d8852aca3b1c19c", "message": "Merge pull request #301 from Esri/Rachael-E-patch-1\n\nUpdate README.md", "committedDate": "2018-12-21T16:36:01Z", "type": "commit"}, {"oid": "894ed41ffbf5cec8f63ca0e8a25d429eb43a482d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/894ed41ffbf5cec8f63ca0e8a25d429eb43a482d", "message": "Merge branch 'master' into dev", "committedDate": "2018-12-21T16:37:32Z", "type": "commit"}, {"oid": "baa219828d5645194dfb69b8d34af00bcff4fdd6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/baa219828d5645194dfb69b8d34af00bcff4fdd6", "message": "add an integrated mesh layer sample", "committedDate": "2019-01-23T18:38:26Z", "type": "commit"}, {"oid": "b133f5862cd8238d6bced6d3e15b9521154a691b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b133f5862cd8238d6bced6d3e15b9521154a691b", "message": "update arcgis version", "committedDate": "2019-01-23T18:38:39Z", "type": "commit"}, {"oid": "5abbed51ab662ea0aa555f03ddd4e839b4753e1f", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/5abbed51ab662ea0aa555f03ddd4e839b4753e1f", "message": "use javafx plugin", "committedDate": "2019-01-23T18:50:07Z", "type": "commit"}, {"oid": "2757bb505d715c3d46dd0eb08c31252311010983", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2757bb505d715c3d46dd0eb08c31252311010983", "message": "Merge branch 'dev' into add-an-integrated-mesh-layer", "committedDate": "2019-01-23T18:51:18Z", "type": "commit"}, {"oid": "0709cbebace5d3409640a9a69a1b3354b1b18a1a", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/0709cbebace5d3409640a9a69a1b3354b1b18a1a", "message": "Merge branch 'master' into dev", "committedDate": "2019-01-23T18:51:46Z", "type": "commit"}, {"oid": "0da0c2924633e475e079d8b36333acfee627610f", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/0da0c2924633e475e079d8b36333acfee627610f", "message": "remove jar task config", "committedDate": "2019-01-23T19:27:13Z", "type": "commit"}, {"oid": "e1edbfe80880dec4337445577bb61b8ba260cb13", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e1edbfe80880dec4337445577bb61b8ba260cb13", "message": "Merge pull request #306 from Esri/add-an-integrated-mesh-layer\n\nAdd an integrated mesh layer", "committedDate": "2019-01-24T18:05:17Z", "type": "commit"}, {"oid": "f93980f4f6979a79e81897e1578d04b48a3caed0", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f93980f4f6979a79e81897e1578d04b48a3caed0", "message": "update arcgis version", "committedDate": "2019-01-31T16:20:44Z", "type": "commit"}, {"oid": "f3289a2e90bf8c96093c17c1194396c5e6cb39d6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f3289a2e90bf8c96093c17c1194396c5e6cb39d6", "message": "move stage show", "committedDate": "2019-01-31T16:20:55Z", "type": "commit"}, {"oid": "426642cd4937021b2c3e6ddca9c1567345a88f95", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/426642cd4937021b2c3e6ddca9c1567345a88f95", "message": "Merge pull request #309 from Esri/master\n\nMerge master into dev", "committedDate": "2019-02-01T10:02:28Z", "type": "commit"}, {"oid": "32f2a9cbc52ffcfe040faccb9c65133f9e9f25f9", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/32f2a9cbc52ffcfe040faccb9c65133f9e9f25f9", "message": "Merge pull request #312 from Esri/master\n\nMerge choose camera controller changes", "committedDate": "2019-02-05T10:52:18Z", "type": "commit"}, {"oid": "b7f9b3ed6f2891ff6d96faaf2dd85eec49eef995", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b7f9b3ed6f2891ff6d96faaf2dd85eec49eef995", "message": "Merge branch 'master' into dev", "committedDate": "2019-02-05T16:50:23Z", "type": "commit"}, {"oid": "1cb389baa14b42cd6ebed5592f578d56da1a7432", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1cb389baa14b42cd6ebed5592f578d56da1a7432", "message": "Merge branch 'master' into dev", "committedDate": "2019-02-05T17:12:55Z", "type": "commit"}, {"oid": "9c537862501106e1c04f73d730dca0fa5339caf0", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9c537862501106e1c04f73d730dca0fa5339caf0", "message": "add point cloud data to sample data downloads", "committedDate": "2019-02-05T18:36:46Z", "type": "commit"}, {"oid": "f75253d1a8aacf9490c329ab4cfa5c09b9499d35", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f75253d1a8aacf9490c329ab4cfa5c09b9499d35", "message": "view point cloud data offline sample", "committedDate": "2019-02-05T18:36:59Z", "type": "commit"}, {"oid": "52c3a6d8b7ff9c176ebdbb950f66f2d8f5187459", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/52c3a6d8b7ff9c176ebdbb950f66f2d8f5187459", "message": "Update build.gradle", "committedDate": "2019-02-05T18:38:54Z", "type": "commit"}, {"oid": "0a62a7d1238401a27e411719bc7b0befca7dc3a1", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/0a62a7d1238401a27e411719bc7b0befca7dc3a1", "message": "change camera viewpoint", "committedDate": "2019-02-05T18:42:31Z", "type": "commit"}, {"oid": "1273c6e4bfe5ab7555b33710fe1c5c721362adb5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1273c6e4bfe5ab7555b33710fe1c5c721362adb5", "message": "remove unused imports", "committedDate": "2019-02-05T18:48:24Z", "type": "commit"}, {"oid": "1b0a83627dd1e5931950140993091aae45c4dbda", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1b0a83627dd1e5931950140993091aae45c4dbda", "message": "update image", "committedDate": "2019-02-11T17:17:15Z", "type": "commit"}, {"oid": "d0776e409cfe4394377f13f492cf972bdf5fe310", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d0776e409cfe4394377f13f492cf972bdf5fe310", "message": "update api version", "committedDate": "2019-02-11T17:18:19Z", "type": "commit"}, {"oid": "6e783c566c9a2f447ef8b221c6b6e1235ad01c2c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/6e783c566c9a2f447ef8b221c6b6e1235ad01c2c", "message": "Merge pull request #316 from Esri/master\n\nMerge master into dev branch after camera controller minor edits", "committedDate": "2019-02-11T17:34:28Z", "type": "commit"}, {"oid": "e4458f602a80f5208147e019967cc3eca9378608", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e4458f602a80f5208147e019967cc3eca9378608", "message": "Merge branch 'master' into dev", "committedDate": "2019-02-12T16:22:33Z", "type": "commit"}, {"oid": "664f09a4d459b1404a14bd8b35209fc89cc0860c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/664f09a4d459b1404a14bd8b35209fc89cc0860c", "message": "edit about the data and additional info sections", "committedDate": "2019-02-12T16:31:41Z", "type": "commit"}, {"oid": "9cb7eae28221da860361b5565c8f32e9c643678c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9cb7eae28221da860361b5565c8f32e9c643678c", "message": "fix comment", "committedDate": "2019-02-12T16:31:51Z", "type": "commit"}, {"oid": "93ca670e74530c93e5dbac75960d3e80ee4151cc", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/93ca670e74530c93e5dbac75960d3e80ee4151cc", "message": "Merge pull request #315 from Esri/view-point-cloud-data-offline\n\nView point cloud data offline", "committedDate": "2019-02-12T16:32:22Z", "type": "commit"}, {"oid": "2c77dbed0c93b8c47f580761c4993c6140851a26", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2c77dbed0c93b8c47f580761c4993c6140851a26", "message": "Merge pull request #317 from Esri/master\n\nMerge master into dev after orbit camera controller sample", "committedDate": "2019-02-12T17:03:22Z", "type": "commit"}, {"oid": "dbd6a550d439991b980a290bfdc5b337ea2384ca", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/dbd6a550d439991b980a290bfdc5b337ea2384ca", "message": "Removed errant full stop", "committedDate": "2019-02-12T17:04:47Z", "type": "commit"}, {"oid": "1771bdb4f1b7339633b7455735e1ff559d2525e2", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1771bdb4f1b7339633b7455735e1ff559d2525e2", "message": "Open Mobile Scene Package (#318)\n\n* Gradle script includes path to download mspk file (further work required here) and implementation of sample in Java\r\n\r\n* Create README.md\r\n\r\n* Create OpenMobileScenePackage.png\r\n\r\n* Update typo in README\r\n\r\n* Updated gradle to point to correct data on AGOL\r\n\r\n* Update to sample code following review\r\n\r\n* Updates to ReadMe following review\r\n\r\n* Additional update to read me to include isDirectReadSupported.get\r\n\r\n* Updated from markdown to HTML\r\n\r\n* Remove id tags from HTML", "committedDate": "2019-02-20T17:53:30Z", "type": "commit"}, {"oid": "3b7f5fe800181ce169325a7e9a8921a7b1224055", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/3b7f5fe800181ce169325a7e9a8921a7b1224055", "message": "Merge branch 'master' into dev", "committedDate": "2019-02-25T17:17:50Z", "type": "commit"}, {"oid": "8f9cdcec6bed87b4224ffdff22c25c1c97b84068", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8f9cdcec6bed87b4224ffdff22c25c1c97b84068", "message": "Map reference scale (#319)\n\n* Create MapReferenceScaleSample.java\r\n\r\n* Set up MVC structure for sample\r\n\r\n* Set up basic map with MVC structure\r\n\r\n* Added label which updates scale of map as it changes\r\n\r\n* Set up means to change the map view to the selected reference scale\r\n\r\n* Set up check boxes for map layers\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Update MapReferenceScaleController.java\r\n\r\n* Allow string in combobox, split to return double to feed into map reference scale\r\n\r\n* Link checkbox with map layer to set reference scale\r\n\r\n* Method descriptions and remove unused imports\r\n\r\n* Fix indents\r\n\r\n* Create MapReferenceScale.png\r\n\r\n* Create README.md\r\n\r\n* Convert markdown to HTML\r\n\r\n* Addressed comments from review. ComboBox now double, vBoxes will load after map has loaded\r\n\r\n* Add a method to handle setting the reference scale when interacting with the combobox and the scale sync button.\r\n\r\n* Code updates following review\r\n\r\nremoved unneeded label, added if loaded statement, and refactored map reference scale. Also updated Readme to account for behavior change.\r\n\r\n* move checkbox logic in with instanceof check\r\n\r\n* Update MapReferenceScaleController.java", "committedDate": "2019-02-26T18:02:26Z", "type": "commit"}, {"oid": "8f95d99e01c79939293b9ba1a7b7e7ee080a507c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8f95d99e01c79939293b9ba1a7b7e7ee080a507c", "message": "Corrected title for sample", "committedDate": "2019-03-12T11:47:39Z", "type": "commit"}, {"oid": "a4b8182ad79a5cf86e3e8be69f373b30cb68a29d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a4b8182ad79a5cf86e3e8be69f373b30cb68a29d", "message": "Merge master into dev  (#322)\n\n* Camera controller US english update (#320)\r\n\r\n* Replace \"aeroplane\" with \"plane\" in README and code\r\n\r\n* Update image to show corrected spelling\r\n\r\n* Fix grammar\r\n\r\n* Updates to Tiled Layer to show support for .tkpx files (#321)\r\n\r\n* Updates to tiled layer, including .tpkx support\r\n\r\n* Update tile cache readme to include support .tpkx", "committedDate": "2019-03-12T17:04:53Z", "type": "commit"}, {"oid": "68e1108b2b18dc9e7d4e1e2be7bcf683eda31910", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/68e1108b2b18dc9e7d4e1e2be7bcf683eda31910", "message": "Allow downloading of non zip sample data (#324)\n\n* Allow downloading of non zip sample data", "committedDate": "2019-03-14T17:39:52Z", "type": "commit"}, {"oid": "e0061344ac4c6d7c0d46d703edd99859dfc579a1", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e0061344ac4c6d7c0d46d703edd99859dfc579a1", "message": "point scene layer sample (#323)\n\n* point scene layer sample", "committedDate": "2019-03-15T15:37:42Z", "type": "commit"}, {"oid": "f4d73242368e009f5347086ba9075f4968e75336", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f4d73242368e009f5347086ba9075f4968e75336", "message": "Merge master into Dev (#329)\n\n* Camera controller US english update (#320)\r\n\r\n* Replace \"aeroplane\" with \"plane\" in README and code\r\n\r\n* Update image to show corrected spelling\r\n\r\n* Fix grammar\r\n\r\n* Updates to Tiled Layer to show support for .tkpx files (#321)\r\n\r\n* Updates to tiled layer, including .tpkx support\r\n\r\n* Update tile cache readme to include support .tpkx\r\n\r\n* Update slider to show values from 1-5 rather than 0-5 (#328)", "committedDate": "2019-03-22T18:06:48Z", "type": "commit"}, {"oid": "d144362e9a4897bc7bd54aa9e692bc3b925850db", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d144362e9a4897bc7bd54aa9e692bc3b925850db", "message": "remove online elevation data source (#327)\n\n* remove online elevation data source\r\n\r\n* remove unneeded ArcGISScene object", "committedDate": "2019-03-22T18:15:31Z", "type": "commit"}, {"oid": "d3995bf66c094b5f81d4b758efe2622ea4b9ca42", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d3995bf66c094b5f81d4b758efe2622ea4b9ca42", "message": "View content beneath terrain surface (#325)\n\n* Initiating sample with Scene URL\r\n\r\n* add done loading listener for changes\r\n\r\n* portal item entry for data\r\n\r\n* Add readme and image\r\n\r\n* Update ViewContentBeneathTerrainSurfaceSample.java\r\n\r\n* update build and refactor float code\r\n\r\n* Update ViewContentBeneathTerrainSurfaceSample.java\r\n\r\n* Add layer view state changed listener\r\n\r\n* Update ViewContentBeneathTerrainSurface.png\r\n\r\n* Address comments following review\r\n\r\n* update comment for add done loading listener on to scene\r\n\r\n* Update README.md\r\n\r\n* remove unused imports", "committedDate": "2019-03-25T11:08:20Z", "type": "commit"}, {"oid": "4f2f4e4a485993b4ba783b814778867068f9c30a", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/4f2f4e4a485993b4ba783b814778867068f9c30a", "message": "group layers sample (#331)\n\ngroup layers sample", "committedDate": "2019-04-01T04:37:36Z", "type": "commit"}, {"oid": "cf7d52a4d721eedd7f0848d3dcd3bbbd8a21490b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/cf7d52a4d721eedd7f0848d3dcd3bbbd8a21490b", "message": "update version, delete extra copy of samples data", "committedDate": "2019-04-01T18:08:07Z", "type": "commit"}, {"oid": "904fb55b327c92fd920362607a9e1d6b7002477e", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/904fb55b327c92fd920362607a9e1d6b7002477e", "message": "Play kml tours (#332)\n\n* play a kml tour sample", "committedDate": "2019-04-02T17:56:55Z", "type": "commit"}, {"oid": "23e4ac27709b945ea796b8dc80d45677622bb0ee", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/23e4ac27709b945ea796b8dc80d45677622bb0ee", "message": "Generate offline map with local basemap (#330)\n\n* added dialog box for choosing which basemap to use\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update build.gradle\r\n\r\n* refactoring and neatening up the code\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Ensure that the file exists before prompting user to find local file\r\n\r\n* Move standard code into private methods to draw attention to new API functionality\r\n\r\n* Add image and README\r\n\r\n* Update GenerateOfflineMapWithLocalBasemap.java\r\n\r\n* Update build.gradle\r\n\r\n* code restructuring (#333)\r\n\r\n* code restructuring\r\n\r\n* comment edits\r\n\r\n* Update image and readme\r\n\r\n* update description of generateOfflineMapDialog class\r\n\r\n* convert fields to local variables\r\n\r\n* convert readme from md to html", "committedDate": "2019-04-03T17:30:18Z", "type": "commit"}, {"oid": "d0c154ecbb7b30b84de9a3b985849a5570cdc4f1", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d0c154ecbb7b30b84de9a3b985849a5570cdc4f1", "message": "Merge branch 'master' into dev", "committedDate": "2019-04-04T17:24:28Z", "type": "commit"}, {"oid": "3c7277f121b4ce501ea2ad984f4a82b5fc886da1", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/3c7277f121b4ce501ea2ad984f4a82b5fc886da1", "message": "pull master", "committedDate": "2019-04-19T22:44:06Z", "type": "commit"}, {"oid": "2aa00c08a3e73f6c4e95843da56ee3b84107b48c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2aa00c08a3e73f6c4e95843da56ee3b84107b48c", "message": "Merge branch 'master' into dev", "committedDate": "2019-04-23T14:53:01Z", "type": "commit"}, {"oid": "a49a3c3742fda773bb4c90c7cac3e2ac4c8b7182", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a49a3c3742fda773bb4c90c7cac3e2ac4c8b7182", "message": "Merge branch 'master' into dev", "committedDate": "2019-04-25T17:44:25Z", "type": "commit"}, {"oid": "ba8386675f4a99fa9ebc2732929f47a3f19b7ceb", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/ba8386675f4a99fa9ebc2732929f47a3f19b7ceb", "message": "Merging Master into Dev (#345)\n\n* Browse wfs layers (#336)\r\n\r\nbrowse wfs layers sample\r\n\r\n* Raster rendering rule (#343)\r\n\r\n* create class, bring in image service raster, display it\r\n\r\n* zoom to extent of raster service\r\n\r\n* add functionality to apply hard-coded raster rendering rule\r\n\r\n* build and populate renderingruleInfoListView\r\n\r\n* change rule ListView for DropDown\r\n\r\n* make raster rendering rule apply on selection in drop-down\r\n\r\n* refactor imageServiceUrl\r\n\r\n* refactor applying rendering rule into separate function\r\n\r\n* refactor populating drop down and building HashMaps into own functions\r\n\r\n* remove HashMap, find rule through list index@\r\n\r\n* improve comments\r\n\r\n* private final String imageServiceUrl\r\n\r\n* Add screenshot and update ReadMe\r\n\r\n* fix screenshot link in README\r\n\r\n* new screenshot\r\n\r\n* use string directly as argument for ImageServiceRaster\r\n\r\n* README from MD to HTML\r\n\r\n* bring methods back into start\r\n\r\n* use ComboBox<RenderingRuleInfo> and string converter\r\n\r\n* add vbox, label to show rendering rule descr.\r\n\r\n* rearrange imports\r\n\r\n* remove imageServiceRaster.loadAsync();\r\n\r\n* add newline to label, update screenshot\r\n\r\n* change indentation to 2 spaces\r\n\r\n* Update README.md - remove html IDs and img alt\r\n\r\n* add load status indicator\r\n\r\n* fix imports\r\n\r\n* make ArgGISMap local\r\n\r\n* remove ComboBox.setEditable(False);\r\n\r\n* syntax, adding stylesheet\r\n\r\n* variable for ImageServiceRaster uri, update readme\r\n\r\n* formatting terminology in 'how it works'\r\n\r\n* readme markdown formatting\r\n\r\n* remove unused imports\r\n\r\n* comment for auto select of first rule\r\n\r\n* default selection now shows description\r\n\r\n* variable naming, remove unused code, factoring, comments\r\n\r\n* revise readme\r\n\r\n* comments, uri variable instantiated at first use\r\n\r\n* improve readme use-case\r\n\r\n* readme formatting, typos\r\n\r\n* tag formatting, typos", "committedDate": "2019-05-09T13:17:20Z", "type": "commit"}, {"oid": "f84ee58718d32db54e06238d4b7ed769ed67c810", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f84ee58718d32db54e06238d4b7ed769ed67c810", "message": "Merge `master` into `dev` (#350)\n\n* Browse wfs layers (#336)\r\n\r\nbrowse wfs layers sample\r\n\r\n* Raster rendering rule (#343)\r\n\r\n* Get elevation at a point (#341)\r\n\r\n* GetElevationAtAPoint - update screenshot (#348)\r\n\r\n* Token authentication (#347)", "committedDate": "2019-05-17T10:00:06Z", "type": "commit"}, {"oid": "dcecafd94a1d6e1c00c385c3d28dac95c728f6f5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/dcecafd94a1d6e1c00c385c3d28dac95c728f6f5", "message": "merge master into dev", "committedDate": "2019-05-28T19:39:55Z", "type": "commit"}, {"oid": "573ae5a453414d6e6284f92c9707b70805cdd561", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/573ae5a453414d6e6284f92c9707b70805cdd561", "message": "Update build.gradle", "committedDate": "2019-05-28T19:40:58Z", "type": "commit"}, {"oid": "6cd0efc883e0d1fc6cb85cc9bfb1aa8c4721021d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/6cd0efc883e0d1fc6cb85cc9bfb1aa8c4721021d", "message": "Allows user to click a value on slider to change exaggeration (#351) (#353)\n\n* Allows user to click a value on slider to change exaggeration\r\n\r\n* remove value changed listener, move annotation to correct place, add space before bracket", "committedDate": "2019-05-31T10:07:14Z", "type": "commit"}, {"oid": "ca64f2f1f0f8107817ab9443c5aa5379a8f431c2", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/ca64f2f1f0f8107817ab9443c5aa5379a8f431c2", "message": "merge master into dev for ClosestFacilityStatic (#358)\n\n* Allows user to click a value on slider to change exaggeration (#351)\r\n* Closest facility static (#346)", "committedDate": "2019-06-06T10:21:08Z", "type": "commit"}, {"oid": "1e9a0e555242fdad9a8248f7e3d37db9901e91d6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1e9a0e555242fdad9a8248f7e3d37db9901e91d6", "message": "Merge branch 'master' into dev", "committedDate": "2019-06-07T23:19:57Z", "type": "commit"}, {"oid": "f876451bf90b30d4b17e1b663f9e057ac1220e74", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f876451bf90b30d4b17e1b663f9e057ac1220e74", "message": "merge master into dev (#362)\n\n* Clean up readme (#356)\r\n\r\n* fix/spatial-operations-reset-button (#359)\r\n\r\n* Edit and sync features (#352)", "committedDate": "2019-06-11T09:48:21Z", "type": "commit"}, {"oid": "a82995b439888f080d436910aab51065bfdaddd8", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a82995b439888f080d436910aab51065bfdaddd8", "message": "Merge branch 'master' into dev", "committedDate": "2019-06-12T20:41:30Z", "type": "commit"}, {"oid": "1098e898c417b05ac3a9fe56194047864c5849b3", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1098e898c417b05ac3a9fe56194047864c5849b3", "message": "merge master into dev (#368)\n\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)", "committedDate": "2019-06-19T08:21:56Z", "type": "commit"}, {"oid": "308013d5824a8780731092ffa906ddf3b5d29fb5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/308013d5824a8780731092ffa906ddf3b5d29fb5", "message": "merge master into dev - oAuth Sample patch (#369)", "committedDate": "2019-06-20T09:50:43Z", "type": "commit"}, {"oid": "f3fb3a4460f92f64ed4c047e02041c6ba24b11de", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f3fb3a4460f92f64ed4c047e02041c6ba24b11de", "message": "Tschie/split (#387)\n\nseparate samples into individual gradle projects, convert readmes to markdown, add readme metadata files", "committedDate": "2019-07-17T23:17:44Z", "type": "commit"}, {"oid": "2875d9975eef28eed0aba7515935753c9b00d483", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2875d9975eef28eed0aba7515935753c9b00d483", "message": "fix naming", "committedDate": "2019-07-18T20:48:48Z", "type": "commit"}, {"oid": "9aac5f2bd9c5cabbffbbf5d24f1f360e99effb6b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9aac5f2bd9c5cabbffbbf5d24f1f360e99effb6b", "message": "Routing around barriers (#354)\n\n* build class with scene\r\n\r\n* render street map and add controls panel\r\n\r\n* add ui elements\r\n\r\n* add stops with lables on mouse click\r\n\r\n* add toggle of checkboxes\r\n\r\n* create pin symbols, number the stops incrementally\r\n\r\n* solve route task and display it, display instructions\r\n\r\n* can add barriers to map, switch between adding stops and barriers\r\n\r\n* implement barriers in routing, implement reset button\r\n\r\n* set the mode to adding stops on sample start\r\n\r\n* clear routes / barriers on right click\r\n\r\n* clear previous route when calculating new route\r\n\r\n* rearrange code for readability\r\n\r\n* symbol colours, fix remove last barrier\r\n\r\n* improve deleting stops and barriers\r\n\r\n* ui improvements, comments\r\n\r\n* improve comments/code structure, pin design\r\n\r\n* split sample into MVC structure with fxml\r\n\r\n* edit ui and comments\r\n\r\n* arrange code, comments, ui improvements\r\n\r\n* add display of travel time and distance\r\n\r\n* ui tweaks, add screenshot\r\n\r\n* add how it works, add use case\r\n\r\n* move variables from class to function scope\r\n\r\n* variable naming\r\n\r\n* README to html\r\n\r\n* revise readme\r\n\r\n* revise readme\r\n\r\n* add code comments\r\n\r\n* tidy imports\r\n\r\n* show route length in miles\r\n\r\n* whitespace\r\n\r\n* improve return compositesymbol\r\n\r\n* improve string formatting in route info\r\n\r\n* remove TODO\r\n\r\n* route length shows in km\r\n\r\n* remove unneeded TODOs\r\n\r\n* comment formatting\r\n\r\n* comment wording\r\n\r\n* comment wording\r\n\r\n* var naming, refactoring\r\n\r\n* fix bad routing condition, remove unused imports\r\n\r\n* comments and refactoring\r\n\r\n* barrier/route symbols to instance variables\r\n\r\n* create route task at launch\r\n\r\n* improve route solving and UI\r\n\r\n* whitespace\r\n\r\n* functions -> in-line code\r\n\r\n* readme edits\r\n\r\n* variables to method scope\r\n\r\n* fxml formtting, commenting, ui improvements\r\n\r\n* fxml line breaks\r\n\r\n* change 2nd order lists to ul\r\n\r\n* add normalizing geometry code\r\n\r\n* fxml refactor\r\n\r\n* reset title pane, pin image to class var\r\n\r\n* improve route info fetch\r\n\r\n* route/stop lists -> linked lists\r\n\r\n* improve removing stops/barriers\r\n\r\n* refactor click handling\r\n\r\n* refactor click handling\r\n\r\n* improve deleting stops/barriers\r\n\r\n* refactor adding/deleting stops\r\n\r\n* fixes\r\n\r\n* comments\r\n\r\n* indentation\r\n\r\n* formatting sample file\r\n\r\n* update README.md, comments\r\n\r\n* determine route automatically\r\n\r\n* use renderer for route graphics\r\n\r\n* bug fixes, refactoring\r\n\r\n* formatting\r\n\r\n* README.md to MD\r\n\r\n* remove extra backtick\r\n\r\n* add gradle wrapper\r\n\r\n* set main class to launcher\r\n\r\n* update README.md", "committedDate": "2019-07-23T08:29:58Z", "type": "commit"}, {"oid": "23ec025f301740f51a0be97f8b21c37c870140bf", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/23ec025f301740f51a0be97f8b21c37c870140bf", "message": "Find service areas for multiple facilities (#367)\n\n* create basic class with ui elements, symbols\r\n\r\n* load in feature table, layer, and zoom to extent\r\n\r\n* solve service area task and display\r\n\r\n* UI improvements\r\n\r\n* imports\r\n\r\n* add facilities to task through featuretable\r\n\r\n* formatting\r\n\r\n* refactoring, ui fixes\r\n\r\n* comments and formatting\r\n\r\n* rm comment\r\n\r\n* add readme and screenshot\r\n\r\n* readme and comment edits\r\n\r\n* rename, remove reset button\r\n\r\n* rename, reduce service area\r\n\r\n* update readme to mirror design\r\n\r\n* comments\r\n\r\n* remove unused SimpleFillSymbol\r\n\r\n* graphics changes\r\n\r\n* change basemap to grey canvas\r\n\r\n* refactoring and variable naming\r\n\r\n* refactoring\r\n\r\n* readme wording\r\n\r\n* comments\r\n\r\n* screenshot\r\n\r\n* 3/5min service areas, yellow/red color\r\n\r\n* comments, bigger facility symbols\r\n\r\n* remove unneeded code, comment improvements, loop indices\r\n\r\n* describe both cutoffs in readme\r\n\r\n* service area comment\r\n\r\n* readme to html\r\n\r\n* smaller service areas, new screenshot\r\n\r\n* update readme for new service areas\r\n\r\n* update README.md, sample title\r\n\r\n* implement review changes\r\n\r\n* update settings.gradle\r\n\r\n* update build.gradle\r\n\r\n* package and folder names\r\n\r\n* Sample title: Area -> Areas\r\n\r\n* add gradle wrapper\r\n\r\n* fix main class name\r\n\r\n* implement review changes\r\n\r\n* update README.md, comments", "committedDate": "2019-07-23T10:01:36Z", "type": "commit"}, {"oid": "9bf071fb348490c808c3a867f5cbb270c277e72b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9bf071fb348490c808c3a867f5cbb270c277e72b", "message": "update screenshot", "committedDate": "2019-07-23T10:12:03Z", "type": "commit"}, {"oid": "02b7738609442037af82450c8951c2fc399da7d3", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/02b7738609442037af82450c8951c2fc399da7d3", "message": "Merge branch 'patch/routing-around-barriers-screenshot' into dev", "committedDate": "2019-07-23T10:13:54Z", "type": "commit"}, {"oid": "23866d2de2fdd824a19b2d67a589be94b20925f2", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/23866d2de2fdd824a19b2d67a589be94b20925f2", "message": "update screenshot", "committedDate": "2019-07-23T10:17:42Z", "type": "commit"}, {"oid": "7fbcda613be4e2dee5f7505b5a369116bd6e0090", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7fbcda613be4e2dee5f7505b5a369116bd6e0090", "message": "Fix comment in ColormapRendererSample.java (#391)", "committedDate": "2019-07-23T15:45:10Z", "type": "commit"}, {"oid": "43f8fa33d6e1fd09bd6c161040f3c630f44511fe", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/43f8fa33d6e1fd09bd6c161040f3c630f44511fe", "message": "Patch/create and save map - default challenge handler (#388)\n\n* implement default challenge handler\r\n\r\n* Update CreateAndSaveMapController.java\r\n\r\nfix typo\r\n\r\n* Update README.md\r\n\r\n* update README.md, code formatting\r\n\r\n* remove ShowMessage() method\r\n\r\n* review changes, update README to standard format\r\n\r\n* code formatting", "committedDate": "2019-07-24T08:58:20Z", "type": "commit"}, {"oid": "f2953250a6c9306fa7294b3b3e7c902e076d9aa6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f2953250a6c9306fa7294b3b3e7c902e076d9aa6", "message": "Read symbols from mobile style file (#357)\n\n* create basic sample class with stage and map\r\n\r\n* split into main class, controller, fxml\r\n\r\n* load and search stylx file\r\n\r\n* click adds symbol to map\r\n\r\n* add styles to preview\r\n\r\n* add style to combobox, build preview on select\r\n\r\n* auto-build symbol preview and add on click\r\n\r\n* add slider to control size\r\n\r\n* add color selection dropdown\r\n\r\n* preview symbols in combobox\r\n\r\n* color only affects first symbol layer\r\n\r\n* code formatting, change first color to yellow\r\n\r\n* fix symbol and graphic sizing bug\r\n\r\n* improve variables\r\n\r\n* comboboxes to listviews\r\n\r\n* UI improvements and comments\r\n\r\n* refactoring and comments\r\n\r\n* make preview not resize with slider\r\n\r\n* refactoring\r\n\r\n* add readme\r\n\r\n* allow empty symbol selection, resize preview, fix mouse clicks\r\n\r\n* fix size slider preview\r\n\r\n* add labels and reset button\r\n\r\n* ui improvements\r\n\r\n* formatting and comments\r\n\r\n* add red color option, add screenshot\r\n\r\n* fxml formatting\r\n\r\n* formatting\r\n\r\n* formatting\r\n\r\n* refactoring\r\n\r\n* comments and refactoring\r\n\r\n* fxml refactor\r\n\r\n* formatting\r\n\r\n* comments and refactoring\r\n\r\n* swap SymbolLayerInfo class for HashMap\r\n\r\n* comments\r\n\r\n* use SymbolStyleSearchResult directly to access symbols\r\n\r\n* comments and refactoring\r\n\r\n* implement slider functionality through fxml\r\n\r\n* formatting\r\n\r\n* improve use case\r\n\r\n* use case wording\r\n\r\n* improve updateSymbolSize()\r\n\r\n* Revert \"improve updateSymbolSize()\"\r\n\r\nThis reverts commit 372e73c09825265a016adfb59400ca849d3043c0.\r\n\r\n* refactor mouse click into fxml\r\n\r\n* add default switch case\r\n\r\n* inner classes to bottom of the file\r\n\r\n* reorder for consistency\r\n\r\n* whitespace\r\n\r\n* listview array instead of list\r\n\r\n* refactoring\r\n\r\n* ui improvements\r\n\r\n* readme improvements\r\n\r\n* review corrections\r\n\r\n* commen\r\n\r\n* change colour options\r\n\r\n* slider reacts to click and to drag\r\n\r\n* implement review changes\r\n\r\n* update README.md\r\n\r\n* inner classes to private, override methods\r\n\r\n* Update README.md\r\n\r\n* add gradle wrapper\r\n\r\n* fix data download\r\n\r\n* implement review changes\r\n\r\n* review changes, implement color picker\r\n\r\n* code formatting", "committedDate": "2019-07-25T08:28:37Z", "type": "commit"}, {"oid": "7b3ca501f54d4b8f5c5e9c53697ef0b3ef03b833", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7b3ca501f54d4b8f5c5e9c53697ef0b3ef03b833", "message": "Update geopackage sample (#374)\n\n* patch-closest-facility-static-readme (#363)\r\n\r\n* delete sample calculate distance 3D (#365)\r\n\r\n* Patch/ClosestFacilityStatic- Edit readme 'how to use' (#364)\r\n\r\n* patch oAuth sample custom challengehandler (#366)\r\n\r\n* implement fix for javafx webengine\r\n\r\n* formatting\r\n\r\n* add fix for create and save map sample\r\n\r\n* markdown to html formatting\r\n\r\n* update read geopackage design\r\n\r\n* update readme code snippets\r\n\r\n* improve comments\r\n\r\n* remove unneeded comments\r\n\r\n* comment wording\r\n\r\n* implement review corrections\r\n\r\n* whitespace\r\n\r\n* remove unrelated files\r\n\r\n* implement review changes\r\n\r\n* remove css stylesheet\r\n\r\n* clean up some comments", "committedDate": "2019-07-25T08:33:17Z", "type": "commit"}, {"oid": "27ad40b666b345ae51732b08d91870ef6a49956c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/27ad40b666b345ae51732b08d91870ef6a49956c", "message": "add readme metadata file", "committedDate": "2019-07-25T19:57:47Z", "type": "commit"}, {"oid": "38e3edfa6fdad554b92918b91133acd5b3f5813b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/38e3edfa6fdad554b92918b91133acd5b3f5813b", "message": "Patch/oauth default challenge handler (#375)\n\n* oauth with default challenge handler\r\n\r\n* code formatting and comments\r\n\r\n* correct redirect uri\r\n\r\n* remove fxml, formatting\r\n\r\n* revert gradle-wrapper.jar\r\n\r\n* comments\r\n\r\n* readme updated for def challenge handler\r\n\r\n* implement review changes\r\n\r\n* rename class file to match docsgst\r\n\r\n* rename package\r\n\r\n* implement default challenge handler\r\n\r\n* restore build.gradle\r\n\r\n* Revert \"restore build.gradle\"\r\n\r\nThis reverts commit 35c1df0c3df53e1748ee44db0cb388085fa066b6.\r\n\r\n* Revert \"implement default challenge handler\"\r\n\r\nThis reverts commit bd984783687fa1e2653f366fe9a99ff74bed6055.\r\n\r\n* fix screenshot file name\r\n\r\n* revert package and class name\r\n\r\n* update README.md\r\n\r\n* revert sample name, update README.metadata.json\r\n\r\n* implement review changes", "committedDate": "2019-07-30T07:54:07Z", "type": "commit"}, {"oid": "aa285f8b950138e70cce0be613a376a6f21e34d9", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/aa285f8b950138e70cce0be613a376a6f21e34d9", "message": "remove extra comma", "committedDate": "2019-07-31T17:16:28Z", "type": "commit"}]}