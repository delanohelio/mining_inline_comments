{"pr_number": 489, "pr_title": "Raster category readme updates 2", "pr_createdAt": "2020-04-21T18:52:05Z", "pr_url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/489", "timeline": [{"oid": "65fa2a87cecea9db520f0ec52e8fe373ee2e09a5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/65fa2a87cecea9db520f0ec52e8fe373ee2e09a5", "message": "update readmes", "committedDate": "2020-04-21T17:28:12Z", "type": "commit"}, {"oid": "99cce12718f86817a3d4841d6e60490ac2f82c11", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/99cce12718f86817a3d4841d6e60490ac2f82c11", "message": "remove extra spaces", "committedDate": "2020-04-21T18:51:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1MDc4NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/489#discussion_r412750785", "bodyText": "Should we be adding the parentheses here if they weren't there before?", "author": "JonLavi", "createdAt": "2020-04-22T07:46:56Z", "path": "raster/raster-layer-geopackage/README.md", "diffHunk": "@@ -1,23 +1,34 @@\n-# Raster Layer GeoPackage\n+# Raster layer (GeoPackage)", "originalCommit": "99cce12718f86817a3d4841d6e60490ac2f82c11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgwMzA0Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/489#discussion_r412803042", "bodyText": "yes: parentheses are ok to add here since they won't affect the samples names in code", "author": "Rachael-E", "createdAt": "2020-04-22T09:00:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1MDc4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1MjAxNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/489#discussion_r412752016", "bodyText": "Shuld these not say 'GeoPackage' since it's a named term? We're also writing 'GeoPackage' in all the sections above\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. When it is done loading, get the `GeoPackageRaster`s from the geopackage.\n          \n          \n            \n            3. Construct a `RasterLayer` with the geopackage raster you want to use.\n          \n          \n            \n            2. When it is done loading, get the `GeoPackageRaster`s from the GeoPackage.\n          \n          \n            \n            3. Construct a `RasterLayer` with the GeoPackage raster you want to use.", "author": "JonLavi", "createdAt": "2020-04-22T07:48:49Z", "path": "raster/raster-layer-geopackage/README.md", "diffHunk": "@@ -1,23 +1,34 @@\n-# Raster Layer GeoPackage\n+# Raster layer (GeoPackage)\n \n-Display raster data from a geopackage.\n+Display a raster contained in a GeoPackage.\n \n-![](RasterLayerGeopackage.png)\n+![Image of raster layer GeoPackage](RasterLayerGeopackage.png)\n \n-## How it works\n+## Use case\n+\n+GeoPackages are designed to simplify file management and transfer. They can store raster files (as well as other types of data). An end-user wishing to transfer rasters from ArcGIS Pro or between runtime apps might need to import raster files from GeoPackages into their map to view and analyze the data.\n+\n+## How to use the sample\n \n-To add a`RasterLayer` as an operational layer from a `GeoPackage`:\n+When the sample starts, a raster will be loaded from a GeoPackage and displayed in the map view.\n+\n+## How it works\n \n 1. Create and load a `GeoPackage`, specifying the path to the local .gpkg file.\n-2. When it is done loading, get the `GeoPackageRaster`s inside with `geoPackage.getGeoPackageRasters()`.\n-3. Construct a `RasterLayer` with the `GeoPackageRaster` in the list you want to use.\n-4. Add the raster layer to the map as an operational layer `map.getOperationalLayers().add(rasterLayer)`.\n+2. When it is done loading, get the `GeoPackageRaster`s from the geopackage.\n+3. Construct a `RasterLayer` with the geopackage raster you want to use.", "originalCommit": "99cce12718f86817a3d4841d6e60490ac2f82c11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1MjU4OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/489#discussion_r412752588", "bodyText": "Just to highlight, we're not using the parenteses here around 'URL', so whichever way we choose, perhaps we should keep it consistent.", "author": "JonLavi", "createdAt": "2020-04-22T07:49:38Z", "path": "raster/raster-layer-url/README.md", "diffHunk": "@@ -1,8 +1,16 @@\n-# Raster Layer URL\n+# Raster layer URL", "originalCommit": "99cce12718f86817a3d4841d6e60490ac2f82c11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1NDgyMA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/489#discussion_r412754820", "bodyText": "In our sample the button is called 'Update'. I also think it's more correct to say 'click' rather than 'select' when talking about buttons:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Choose one of the stretch parameter types. The other options will adjust based on the chosen type. Add your inputs and select the 'Render' button to update the renderer.\n          \n          \n            \n            Choose one of the stretch parameter types. The other options will adjust based on the chosen type. Add your inputs and click the 'Update' button to update the renderer.", "author": "JonLavi", "createdAt": "2020-04-22T07:52:46Z", "path": "raster/rgb-renderer/README.md", "diffHunk": "@@ -1,31 +1,37 @@\n-# Rgb Renderer\n+# RGB renderer\n \n-Apply an RGB renderer to a raster.\n+Apply an RGB renderer to a raster layer to enhance feature visibility.\n \n-An RGB renderer is used to adjust the color bands of a multispectral image.\n+![Image of RGB renderer](RgbRenderer.png)\n \n-![](RgbRenderer.png)\n+## Use case\n+\n+An RGB renderer is used to adjust the color bands of a multispectral image. Remote sensing images acquired from satellites often contain values representing the reflection of multiple spectrums of light. Changing the RGB renderer of such rasters can be used to differentiate and highlight particular features that reflect light differently, such as different vegetation types, or turbidity in water.\n \n ## How to use the sample\n \n-Choose one of the stretch parameter types. The other options will adjust based on the chosen type. Add your inputs and press the Update button to update the renderer.\n+Choose one of the stretch parameter types. The other options will adjust based on the chosen type. Add your inputs and select the 'Render' button to update the renderer.", "originalCommit": "99cce12718f86817a3d4841d6e60490ac2f82c11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1NTk5NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/489#discussion_r412755994", "bodyText": "We've put RGBRenderer in backticks in step 4, so it's probably fine to just write renderer regularly in this step. We do the same in Stretch Renderer\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            5. Set the `Renderer` on the raster layer with `rasterLayer.setRasterRenderer(renderer)`.\n          \n          \n            \n            5. Set the renderer on the raster layer with `rasterLayer.setRasterRenderer(renderer)`.", "author": "JonLavi", "createdAt": "2020-04-22T07:54:27Z", "path": "raster/rgb-renderer/README.md", "diffHunk": "@@ -1,31 +1,37 @@\n-# Rgb Renderer\n+# RGB renderer\n \n-Apply an RGB renderer to a raster.\n+Apply an RGB renderer to a raster layer to enhance feature visibility.\n \n-An RGB renderer is used to adjust the color bands of a multispectral image.\n+![Image of RGB renderer](RgbRenderer.png)\n \n-![](RgbRenderer.png)\n+## Use case\n+\n+An RGB renderer is used to adjust the color bands of a multispectral image. Remote sensing images acquired from satellites often contain values representing the reflection of multiple spectrums of light. Changing the RGB renderer of such rasters can be used to differentiate and highlight particular features that reflect light differently, such as different vegetation types, or turbidity in water.\n \n ## How to use the sample\n \n-Choose one of the stretch parameter types. The other options will adjust based on the chosen type. Add your inputs and press the Update button to update the renderer.\n+Choose one of the stretch parameter types. The other options will adjust based on the chosen type. Add your inputs and select the 'Render' button to update the renderer.\n \n ## How it works\n \n-To apply a `RgbRenderer` to a `RasterLayer`:\n-\n-1. Create a `Raster` from a multispectral raster file\n-2. Create a `RasterLayer` from the raster\n-3. Create a `Basemap` from the raster layer and set it to the map\n-4. Create a `RgbRenderer`, specifying the stretch parameters and other properties\n-5. Set the renderer on the raster layer with `rasterLayer.setRenderer(renderer)`\n+1. Create a `Raster` from a multispectral raster file.\n+2. Create a `RasterLayer` from the raster.\n+3. Create a `Basemap` from the raster layer and instantiate an ArcGISMap with it.\n+4. Create a `RGBRenderer`, specifying the `StretchParameters` and other properties.\n+5. Set the `Renderer` on the raster layer with `rasterLayer.setRasterRenderer(renderer)`.", "originalCommit": "99cce12718f86817a3d4841d6e60490ac2f82c11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1ODQ0Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/489#discussion_r412758446", "bodyText": "This sample uses the same data as RGB renderer so we can just steal the section from there:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This sample uses a raster imagery tile of an area of forested mountainous terrain and rivers.\n          \n          \n            \n            The raster used in this sample shows an area in the south of the Shasta-Trinity National Forest, California.", "author": "JonLavi", "createdAt": "2020-04-22T07:58:02Z", "path": "raster/stretch-renderer/README.md", "diffHunk": "@@ -1,31 +1,49 @@\n-# Stretch Renderer\n+# Stretch renderer\n \n-Apply a stretch renderer to a raster.\n+Use a stretch renderer to enhance the visual contrast of raster data for analysis.\n \n-A stretch renderer can be used to stretch tightly grouped values across the available value spectrum, creating more contrast between objects. This is useful for identifying objects in dark images.\n+![Image of stretch renderer](StretchRenderer.png)\n \n-![](StretchRenderer.png)\n+## Use case\n+\n+An appropriate stretch renderer can enhance the contrast of raster imagery, allowing the user to control how their data is displayed for efficient imagery analysis.\n \n ## How to use the sample\n \n-Choose one of the stretch parameter types. The other options will adjust based on the chosen type.\n+Choose one of the stretch parameter types from the drop down menu:\n \n-## How it works\n+* Std Deviation - a linear stretch defined by the standard deviation of the pixel values\n+* Min Max - a linear stretch based on minimum and maximum pixel values\n+* Percent Clip - a linear stretch between the defined percent clip minimum and percent clip maximum pixel values\n \n-To apply a `StretchRenderer` to a `RasterLayer`:\n+Then configure the parameters and click 'Update'.\n \n-1. Create a `Raster` from a raster file\n-2. Create a `RasterLayer` from the raster\n-3. Create a `Basemap` from the raster layer and set it to the map\n-4. Create a `StretchRenderer`, specifying the stretch parameters and other properties\n-5. Set the renderer on the raster layer with `rasterLayer.setRenderer(renderer)`\n+## How it works\n+\n+1. Create a `Raster` from a raster file.\n+2. Create a `RasterLayer` from the raster.\n+3. Create a `Basemap` from the raster layer with `Basemap(RasterLayer)` and set it to the map with `ArcGISMap(basemap)`.\n+4. Create a `StretchRenderer`, specifying the stretch parameters and other properties.\n+5. Set the stretch renderer on the raster layer with `rasterLayer.setRasterRenderer(stretchRenderer)`.\n \n ## Relevant API\n \n-* ArcGISMap\n-* Basemap\n-* MapView\n+* MinMaxStretchParameters\n+* PercentClipStretchParameters\n * Raster\n * RasterLayer\n+* StandardDeviationStretchParameters\n * StretchParameters\n * StretchRenderer\n+\n+## About the data\n+\n+This sample uses a raster imagery tile of an area of forested mountainous terrain and rivers.", "originalCommit": "99cce12718f86817a3d4841d6e60490ac2f82c11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5faef2993e3f036f06115d5dfd3e83e21bad809b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/5faef2993e3f036f06115d5dfd3e83e21bad809b", "message": "Update raster/raster-layer-geopackage/README.md\n\nCo-Authored-By: Jonathan Lavi <jonathan.lavi@gmail.com>", "committedDate": "2020-04-22T09:00:22Z", "type": "commit"}, {"oid": "8c63239fa72c701186fe02e4cee1ce7586f2e7ad", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8c63239fa72c701186fe02e4cee1ce7586f2e7ad", "message": "Update raster/rgb-renderer/README.md\n\nCo-Authored-By: Jonathan Lavi <jonathan.lavi@gmail.com>", "committedDate": "2020-04-22T09:04:11Z", "type": "commit"}, {"oid": "a57a158a1efa28542737f450f50aaab1ea10071e", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a57a158a1efa28542737f450f50aaab1ea10071e", "message": "Update raster/rgb-renderer/README.md\n\nCo-Authored-By: Jonathan Lavi <jonathan.lavi@gmail.com>", "committedDate": "2020-04-22T09:22:50Z", "type": "commit"}, {"oid": "b5475e9e44c4849c0eaab82962e1e812de64206e", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b5475e9e44c4849c0eaab82962e1e812de64206e", "message": "Update raster/stretch-renderer/README.md\n\nCo-Authored-By: Jonathan Lavi <jonathan.lavi@gmail.com>", "committedDate": "2020-04-22T09:23:15Z", "type": "commit"}, {"oid": "8f73f1007dbe91be78cbda13edffa539b480213c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8f73f1007dbe91be78cbda13edffa539b480213c", "message": "brackets and variable naming tidy", "committedDate": "2020-04-22T09:25:34Z", "type": "commit"}]}