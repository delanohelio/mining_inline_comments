{"pr_number": 453, "pr_title": "Update readmes to match common design (Feature Layers category) 3/x", "pr_createdAt": "2020-03-16T08:45:54Z", "pr_url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/453", "timeline": [{"oid": "c28e431388ea6664b3c48063d91dceec511e36c3", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c28e431388ea6664b3c48063d91dceec511e36c3", "message": "update readmes to match common design", "committedDate": "2020-03-16T08:37:15Z", "type": "commit"}, {"oid": "e61b2bbc5825112dc97bd8200a787a984b4712c5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e61b2bbc5825112dc97bd8200a787a984b4712c5", "message": "Update 'Relevant API'", "committedDate": "2020-03-18T15:35:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyNzQ5NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/453#discussion_r395527495", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Input the name of a U.S. state into the text field. When you click \"search\", a query is performed and the matching features are highlighted or an error is returned.\n          \n          \n            \n            Input the name of a U.S. state into the text field. When you click \"Search\", a query is performed and the matching features are highlighted or an error is returned.", "author": "Rachael-E", "createdAt": "2020-03-20T09:44:03Z", "path": "feature_layers/feature-layer-query/README.md", "diffHunk": "@@ -1,30 +1,35 @@\n-# Feature Layer Query\n+# Feature layer query\n \n-Find features matching a SQL query.\n+Find features in a feature table which match an SQL query.\n \n-![](FeatureLayerQuery.png)\n+![Image of feature layer query](FeatureLayerQuery.png)\n \n-## How to use the sample\n+## Use case\n+\n+Query expressions can be used in ArcGIS to select a subset of features from a feature table. This is most useful in large or complicated data sets. A possible use case might be on a feature table marking the location of street furniture through a city. A user may wish to query by a TYPE column to return \"benches\". In this sample, we query a U.S. state by STATE_NAME from a feature table containing all U.S. states.\n \n-Input the name of a U.S. state into search bar. When you hit search the application performs a query on the feature table and based on the result either highlights the state geometry or provides an error.\n+## How to use the sample\n \n-Note: The search is case sensitive.\n+Input the name of a U.S. state into the text field. When you click \"search\", a query is performed and the matching features are highlighted or an error is returned.", "originalCommit": "e61b2bbc5825112dc97bd8200a787a984b4712c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyOTkxNw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/453#discussion_r395529917", "bodyText": "Our sample doesn't have an animated zoom button: it just triggers the zoom animation on launching.", "author": "Rachael-E", "createdAt": "2020-03-20T09:48:56Z", "path": "feature_layers/feature-layer-rendering-mode-map/README.md", "diffHunk": "@@ -1,31 +1,34 @@\n-# Feature Layer Rendering Mode (Map)\n+# Feature layer rendering mode (map)\n \n-Render features statically or dynamically.\n+Render features statically or dynamically by setting the feature layer rendering mode.\n \n-![](FeatureLayerRenderingModeMap.gif)\n+![Image of feature layer rendering mode map](FeatureLayerRenderingModeMap.gif)\n \n-## How it works\n+## Use case\n+\n+In dynamic rendering mode, features and graphics are stored on the GPU. As a result, dynamic rendering mode is good for moving objects and for maintaining graphical fidelity during extent changes, since individual graphic changes can be efficiently applied directly to the GPU state. This gives the map or scene a seamless look and feel when interacting with it. The number of features and graphics has a direct impact on GPU resources, so large numbers of features or graphics can affect the responsiveness of maps or scenes to user interaction. Ultimately, the number and complexity of features and graphics that can be rendered in dynamic rendering mode is dependent on the power and memory of the device's GPU.\n+\n+In static rendering mode, features and graphics are rendered only when needed (for example, after an extent change) and offloads a significant portion of the graphical processing onto the CPU. As a result, less work is required by the GPU to draw the graphics, and the GPU can spend its resources on keeping the UI interactive. Use this mode for stationary graphics, complex geometries, and very large numbers of features or graphics. The number of features and graphics has little impact on frame render time, meaning it scales well, and pushes a constant GPU payload. However, rendering updates is CPU and system memory intensive, which can have an impact on device battery life.\n+\n+## How to use the sample\n \n-To change `FeatureLayer.RenderingMode` using `LoadSettings`:\n+Use the 'Animated Zoom' button to trigger the same zoom animation on both static and dynamically maps.", "originalCommit": "e61b2bbc5825112dc97bd8200a787a984b4712c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzNzkzMg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/453#discussion_r397937932", "bodyText": "Good catch, I've updated this section!", "author": "JonLavi", "createdAt": "2020-03-25T15:18:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyOTkxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzMDI2NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/453#discussion_r395530265", "bodyText": "I prefer our original instructions to make the API read clearer:\n\nSet preferred rendering mode to map, mapBottom.getLoadSettings().setPreferredPointFeatureRenderingMode(FeatureLayer.RenderingMode.DYNAMIC).\n\nCan set preferred rendering mode for Points, Polylines, or Polygons.", "author": "Rachael-E", "createdAt": "2020-03-20T09:49:40Z", "path": "feature_layers/feature-layer-rendering-mode-map/README.md", "diffHunk": "@@ -1,31 +1,34 @@\n-# Feature Layer Rendering Mode (Map)\n+# Feature layer rendering mode (map)\n \n-Render features statically or dynamically.\n+Render features statically or dynamically by setting the feature layer rendering mode.\n \n-![](FeatureLayerRenderingModeMap.gif)\n+![Image of feature layer rendering mode map](FeatureLayerRenderingModeMap.gif)\n \n-## How it works\n+## Use case\n+\n+In dynamic rendering mode, features and graphics are stored on the GPU. As a result, dynamic rendering mode is good for moving objects and for maintaining graphical fidelity during extent changes, since individual graphic changes can be efficiently applied directly to the GPU state. This gives the map or scene a seamless look and feel when interacting with it. The number of features and graphics has a direct impact on GPU resources, so large numbers of features or graphics can affect the responsiveness of maps or scenes to user interaction. Ultimately, the number and complexity of features and graphics that can be rendered in dynamic rendering mode is dependent on the power and memory of the device's GPU.\n+\n+In static rendering mode, features and graphics are rendered only when needed (for example, after an extent change) and offloads a significant portion of the graphical processing onto the CPU. As a result, less work is required by the GPU to draw the graphics, and the GPU can spend its resources on keeping the UI interactive. Use this mode for stationary graphics, complex geometries, and very large numbers of features or graphics. The number of features and graphics has little impact on frame render time, meaning it scales well, and pushes a constant GPU payload. However, rendering updates is CPU and system memory intensive, which can have an impact on device battery life.\n+\n+## How to use the sample\n \n-To change `FeatureLayer.RenderingMode` using `LoadSettings`:\n+Use the 'Animated Zoom' button to trigger the same zoom animation on both static and dynamically maps.\n \n-1. Create a `ArcGISMap`.\n-2. Set preferred rendering mode to map, `mapBottom.getLoadSettings().setPreferredPointFeatureRenderingMode(FeatureLayer.RenderingMode.DYNAMIC)`.\n-    * Can set preferred rendering mode for `Points`, `Polylines`, or `Polygons`.\n-    * `Multipoint` preferred rendering mode is the same as point.\n-3. Set map to `MapView`, `mapViewBottom.setMap(mapBottom)`.\n-4. Create a `ServiceFeatureTable` from a point service, `new ServiceFeatureTable(\"http://sampleserver6.arcgisonline.com/arcgis/rest/services/Energy/Geology/FeatureServer/0\");`.\n-5. Create `FeatureLayer` from table, `new FeatureLayer(poinServiceFeatureTable)`.\n-6. Add layer to map, `mapBottom.getOperationalLayers().add(pointFeatureLayer.copy())`\n-    * Now the point layer will be rendered dynamically to map view.\n+## How it works\n+\n+1. Create an `ArcGISMap` and call `getLoadSettings()` and then `setPreferred[Point/Polyline/Polygon]FeatureRenderingMode(...)`.", "originalCommit": "e61b2bbc5825112dc97bd8200a787a984b4712c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzNzUzNA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/453#discussion_r397937534", "bodyText": "I've had a go at restructuring this section a little. Let me know what you think?", "author": "JonLavi", "createdAt": "2020-03-25T15:18:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzMDI2NQ=="}], "type": "inlineReview"}, {"oid": "e89fa3ce04ac18e0c0f866deff48ca8d0a7b6881", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e89fa3ce04ac18e0c0f866deff48ca8d0a7b6881", "message": "Apply suggestions from code review\n\nCo-Authored-By: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>", "committedDate": "2020-03-25T15:06:58Z", "type": "commit"}, {"oid": "f2f6933bff2ec086085a819cccffe439e7a628e5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f2f6933bff2ec086085a819cccffe439e7a628e5", "message": "restructure 'how it works'", "committedDate": "2020-03-25T15:17:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1NDI1OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/453#discussion_r414454259", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. Set the `RenderingMode` for a specific type of Graphic by calling `arcGISMap.getLoadSettings().setPreferredPointFeatureRenderingMode(FeatureLayer.RenderingMode.DYNAMIC)`.\n          \n          \n            \n            2. Set the `RenderingMode` for a specific type of `Graphic` e.g. for a `Point` by calling `arcGISMap.getLoadSettings().setPreferredPointFeatureRenderingMode(FeatureLayer.RenderingMode.DYNAMIC)`.", "author": "Rachael-E", "createdAt": "2020-04-24T10:03:24Z", "path": "feature_layers/feature-layer-rendering-mode-map/README.md", "diffHunk": "@@ -12,15 +12,17 @@ In static rendering mode, features and graphics are rendered only when needed (f\n \n ## How to use the sample\n \n-Use the 'Animated Zoom' button to trigger the same zoom animation on both static and dynamically maps.\n+When the sample is launched, it will trigger the same zoom animation on both the static and dynamic maps.\n \n ## How it works\n \n-1. Create an `ArcGISMap` and call `getLoadSettings()` and then `setPreferred[Point/Polyline/Polygon]FeatureRenderingMode(...)`.\n-2. The `RenderingMode` can be set to `STATIC`, `DYNAMIC` or `AUTOMATIC`.\n-   * In Static rendering mode, the number of features and graphics has little impact on frame render time, meaning it scales well, however points don't stay screen-aligned and point/polyline/polygon objects are only redrawn once map view navigation is complete.\n-   * In Dynamic rendering mode, large numbers of features or graphics can affect the responsiveness of maps or scenes to user interaction, however points remain screen-aligned and point/polyline/polygon objects are continually redrawn while the map view is navigating.\n-3. When left to automatic rendering, points are drawn dynamically and polylines and polygons statically.\n+1. Create an `ArcGISMap`\n+2. Set the `RenderingMode` for a specific type of Graphic by calling `arcGISMap.getLoadSettings().setPreferredPointFeatureRenderingMode(FeatureLayer.RenderingMode.DYNAMIC)`.", "originalCommit": "f2f6933bff2ec086085a819cccffe439e7a628e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1NDQ4Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/453#discussion_r414454483", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * You can set the preferred rendering mode for `Point`, Polylines, or Polygons by using the appropriate method.    \n          \n          \n            \n                * You can set the preferred rendering mode for `Point`, `Polyline`, or `Polygon` by using the appropriate method.", "author": "Rachael-E", "createdAt": "2020-04-24T10:03:43Z", "path": "feature_layers/feature-layer-rendering-mode-map/README.md", "diffHunk": "@@ -12,15 +12,17 @@ In static rendering mode, features and graphics are rendered only when needed (f\n \n ## How to use the sample\n \n-Use the 'Animated Zoom' button to trigger the same zoom animation on both static and dynamically maps.\n+When the sample is launched, it will trigger the same zoom animation on both the static and dynamic maps.\n \n ## How it works\n \n-1. Create an `ArcGISMap` and call `getLoadSettings()` and then `setPreferred[Point/Polyline/Polygon]FeatureRenderingMode(...)`.\n-2. The `RenderingMode` can be set to `STATIC`, `DYNAMIC` or `AUTOMATIC`.\n-   * In Static rendering mode, the number of features and graphics has little impact on frame render time, meaning it scales well, however points don't stay screen-aligned and point/polyline/polygon objects are only redrawn once map view navigation is complete.\n-   * In Dynamic rendering mode, large numbers of features or graphics can affect the responsiveness of maps or scenes to user interaction, however points remain screen-aligned and point/polyline/polygon objects are continually redrawn while the map view is navigating.\n-3. When left to automatic rendering, points are drawn dynamically and polylines and polygons statically.\n+1. Create an `ArcGISMap`\n+2. Set the `RenderingMode` for a specific type of Graphic by calling `arcGISMap.getLoadSettings().setPreferredPointFeatureRenderingMode(FeatureLayer.RenderingMode.DYNAMIC)`.\n+    * You can set the preferred rendering mode for `Point`, Polylines, or Polygons by using the appropriate method.    ", "originalCommit": "f2f6933bff2ec086085a819cccffe439e7a628e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e053a21070edf20e552e03fceeb9e52f01965e76", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e053a21070edf20e552e03fceeb9e52f01965e76", "message": "Update feature_layers/feature-layer-rendering-mode-map/README.md", "committedDate": "2020-04-24T10:04:14Z", "type": "commit"}, {"oid": "72ac27caf728535c9fd1f4a9085f636454803890", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/72ac27caf728535c9fd1f4a9085f636454803890", "message": "Update feature_layers/feature-layer-rendering-mode-map/README.md", "committedDate": "2020-04-24T10:04:24Z", "type": "commit"}]}