{"pr_number": 267, "pr_title": "Hotfixes for YouTube and improve unavailable cases", "pr_createdAt": "2020-03-01T04:44:41Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/267", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4ODAxNA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/267#discussion_r386088014", "bodyText": "Are you sure this works? I had issues with using has() for JsonObjects, so I've been doing getObject() != null. Otherwise this PR looks fine to me.", "author": "wb9688", "createdAt": "2020-03-01T08:31:57Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamInfoItemExtractor.java", "diffHunk": "@@ -225,7 +255,26 @@ private boolean isPremium() {\n                     return true;\n                 }\n             }\n-        } catch (Exception ignored) {}\n+        } catch (Exception ignored) {\n+        }\n         return false;\n     }\n+\n+    private boolean isPremiere() {\n+        return videoInfo.has(\"upcomingEventData\");", "originalCommit": "7d3bb8a6f01ef08ce6d1c2dfd12d90b658ea7838", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5Njg3MQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/267#discussion_r386096871", "bodyText": "What issues did you have with has(String key)? I've looked at the source code of that method and it returns hashmap.contains(key); So there should not be issues with that.\nBtw. we use an outdated version of nanojson. We might want to update it as the new version promises to be faster.", "author": "TobiGr", "createdAt": "2020-03-01T10:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4ODAxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5NzI2NA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/267#discussion_r386097264", "bodyText": "It returning false when the object exists, but from a quick local test, that doesn't seem to happen, strange\u2026\nJsonObject o = JsonParser.object().from(\"{\\\"apple\\\": {}}\");\nSystem.out.println(o.has(\"apple\")); // prints true\nSystem.out.println(o.has(\"pear\")); // prints false", "author": "wb9688", "createdAt": "2020-03-01T10:49:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4ODAxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5ODMxOA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/267#discussion_r386098318", "bodyText": "Are there no other ways than relying on English?", "author": "B0pol", "createdAt": "2020-03-01T11:04:40Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamInfoItemExtractor.java", "diffHunk": "@@ -194,11 +213,22 @@ public long getViewCount() throws ParsingException {\n             if (videoInfo.getObject(\"topStandaloneBadge\") != null || isPremium()) {\n                 return -1;\n             }\n-            String viewCount = getTextFromObject(videoInfo.getObject(\"viewCountText\"));\n+\n+            final JsonObject viewCountObject = videoInfo.getObject(\"viewCountText\");\n+            if (viewCountObject == null) {\n+                // This object is null when a video has its views hidden.\n+                return -1;\n+            }\n+\n+            final String viewCount = getTextFromObject(viewCountObject);\n+\n+            if (viewCount.toLowerCase().contains(\"no views\")) {\n+                return 0;", "originalCommit": "7d3bb8a6f01ef08ce6d1c2dfd12d90b658ea7838", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5OTc2MA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/267#discussion_r386099760", "bodyText": "At the moment there is no other way. We might need to check whether the value contains specific words like \"no\" or \"you\", which should be quite similar in most languages. In that way, we do not need to make a list for all translations later, but can reduce that to a minimum of items to check. But that ca wait for a later PR.", "author": "TobiGr", "createdAt": "2020-03-01T11:27:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5ODMxOA=="}], "type": "inlineReview"}, {"oid": "3441946bea9c172a4c96dd6deae450cecab875a4", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/3441946bea9c172a4c96dd6deae450cecab875a4", "message": "Make test downloader return a response instead of throwing an exception\n\nThe test implementation was throwing an exception instead of just\nreturning the response and letting the caller handle it.", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "5edd774fc44b037608840e1e968aa72a581040a8", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5edd774fc44b037608840e1e968aa72a581040a8", "message": "Add latest url to the response to make detection of a redirect possible\n\nWill be latest one in this commit because there's need to check the\nhistory of redirects as of now.", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "f66c20de54418b464d529bebf0a49f66a1f27e74", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/f66c20de54418b464d529bebf0a49f66a1f27e74", "message": "Ignore null-keyed entries when iterating through the response headers", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "da2c562eb0fe5244e6078b8d6d038d0341dddd32", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/da2c562eb0fe5244e6078b8d6d038d0341dddd32", "message": "[YouTube] Take into account videos that have their views hidden\n\nAlso remove catch because it may hide bugs when the page changes.", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "2a470ac4f740f9232e8fe7a7ec0adab7b90bf659", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/2a470ac4f740f9232e8fe7a7ec0adab7b90bf659", "message": "[YouTube] Handle videos with no views or with \"Recommended to you\" text", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "e9644e6216c9aaa20a6fefa4a0c94b471c09b1bf", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/e9644e6216c9aaa20a6fefa4a0c94b471c09b1bf", "message": "[YouTube] Handle video premiere's date and duration", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "342bdbb85256a510a7c9b4aeeea148d8a34481bf", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/342bdbb85256a510a7c9b4aeeea148d8a34481bf", "message": "[YouTube] Avoid crashing by letting exceptions bubble up", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "408f0421276da45410af1206e7de761865829f84", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/408f0421276da45410af1206e7de761865829f84", "message": "[YouTube] Fix bug when url isn't present in the browseEndpoint object", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "98e359438a4bdcd252b7fa6bb5fe9a48fde5d0be", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/98e359438a4bdcd252b7fa6bb5fe9a48fde5d0be", "message": "[YouTube] Detect simple 404s in the standard fetch method", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "e65333c3cea86b6fa8197044b8969b21df47291e", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/e65333c3cea86b6fa8197044b8969b21df47291e", "message": "[YouTube] Detect deleted/nonexistent/invalid channels and playlists\n\n- Added tests for these cases.", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "5686a6f562619c50bed53904eaafbc2aa85c8dbe", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5686a6f562619c50bed53904eaafbc2aa85c8dbe", "message": "[YouTube] Detect when a stream is deleted or doesn't exist\n\nAdded a test case as well.", "committedDate": "2020-03-01T11:49:13Z", "type": "commit"}, {"oid": "5686a6f562619c50bed53904eaafbc2aa85c8dbe", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5686a6f562619c50bed53904eaafbc2aa85c8dbe", "message": "[YouTube] Detect when a stream is deleted or doesn't exist\n\nAdded a test case as well.", "committedDate": "2020-03-01T11:49:13Z", "type": "forcePushed"}]}