{"pr_number": 311, "pr_title": "Search: add isCorrectedSearch() and fix YoutubeSearchExtractor#getSea\u2026", "pr_createdAt": "2020-04-11T17:39:11Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5Mjc3Nw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r407192777", "bodyText": "Where is there no closing tag?", "author": "wb9688", "createdAt": "2020-04-12T12:41:02Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/search/SearchExtractor.java", "diffHunk": "@@ -37,4 +37,15 @@ public SearchQueryHandler getLinkHandler() {\n     public String getName() {\n         return getLinkHandler().getSearchString();\n     }\n+\n+    /**\n+     * When you search on some service, it can give you another and corrected request.\n+     * This method says if it's the case.\n+     * <p>\n+     * Example: on YouTube, if you search for \"pewdeipie\",\n+     * it will give you results for \"pewdiepie\", then isCorrectedSearch should return true.\n+     *", "originalCommit": "fb18df7243eec1dadadc4d142463e1f48d7bef0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5NzM0OA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r407197348", "bodyText": "HTML doesn't require to close p tag. The next one closes it.\nIt's the same thing for Javadoc. Look at Javadoc guidelines, getImage(), they didn't put a closing p tag. It's closed by @return, as mentionned in the guidelines:\n\n\nThe first line that begins with an \"@\" character ends the description. There is only one description block per doc comment; you cannot continue the description following block tags.\n\n\nPlus if you watch java source code, for example java.lang.String, you can see there are lots of paragraph but no closing tag.\nFinally, I didn't even add the p tag, intellij did it with autoformatting, and see this SO about p tag in javadoc.", "author": "B0pol", "createdAt": "2020-04-12T13:20:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5Mjc3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5ODQ2Nw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r407198467", "bodyText": "I didn't know that about Javadoc. Interesting\u2026", "author": "wb9688", "createdAt": "2020-04-12T13:29:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5Mjc3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5Mjg0Mw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r407192843", "bodyText": "Please use a setter", "author": "wb9688", "createdAt": "2020-04-12T12:41:43Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/search/SearchInfo.java", "diffHunk": "@@ -46,6 +47,11 @@ public static SearchInfo getInfo(SearchExtractor extractor) throws ExtractionExc\n         } catch (Exception e) {\n             info.addError(e);\n         }\n+        try {\n+            info.isCorrectedSearch = extractor.isCorrectedSearch();", "originalCommit": "fb18df7243eec1dadadc4d142463e1f48d7bef0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5Mjg5Mg==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r407192892", "bodyText": "final", "author": "wb9688", "createdAt": "2020-04-12T12:42:10Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeMusicSearchExtractor.java", "diffHunk": "@@ -141,6 +141,19 @@ public String getSearchSuggestion() throws ParsingException {\n         return getTextFromObject(didYouMeanRenderer.getObject(\"correctedQuery\"));\n     }\n \n+    @Override\n+    public boolean isCorrectedSearch() {\n+        final JsonObject itemSectionRenderer = initialData.getObject(\"contents\").getObject(\"sectionListRenderer\")\n+                .getArray(\"contents\").getObject(0).getObject(\"itemSectionRenderer\");\n+        if (itemSectionRenderer == null) {\n+            return false;\n+        }\n+\n+        JsonObject showingResultsForRenderer = itemSectionRenderer.getArray(\"contents\").getObject(0)", "originalCommit": "fb18df7243eec1dadadc4d142463e1f48d7bef0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5MzIzMg==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r407193232", "bodyText": "Why no expected search suggestion here?", "author": "wb9688", "createdAt": "2020-04-12T12:44:46Z", "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/search/YoutubeSearchExtractorTest.java", "diffHunk": "@@ -132,8 +132,30 @@ public static void setUp() throws Exception {\n         @Override public String expectedOriginalUrlContains() { return \"youtube.com/results?search_query=\" + QUERY; }\n         @Override public String expectedSearchString() { return QUERY; }\n         @Nullable @Override public String expectedSearchSuggestion() { return EXPECTED_SUGGESTION; }\n+        @Override public InfoItem.InfoType expectedInfoItemType() { return InfoItem.InfoType.STREAM; }\n+    }\n+\n+    public static class CorrectedSearch extends DefaultSearchExtractorTest {\n+        private static SearchExtractor extractor;\n+        private static final String QUERY = \"pewdeipie\";\n \n+        @BeforeClass\n+        public static void setUp() throws Exception {\n+            NewPipe.init(DownloaderTestImpl.getInstance());\n+            extractor = YouTube.getSearchExtractor(QUERY, singletonList(VIDEOS), \"\");\n+            extractor.fetchPage();\n+        }\n+\n+        @Override public SearchExtractor extractor() { return extractor; }\n+        @Override public StreamingService expectedService() { return YouTube; }\n+        @Override public String expectedName() { return QUERY; }\n+        @Override public String expectedId() { return QUERY; }\n+        @Override public String expectedUrlContains() { return \"youtube.com/results?search_query=\" + QUERY; }\n+        @Override public String expectedOriginalUrlContains() { return \"youtube.com/results?search_query=\" + QUERY; }\n+        @Override public String expectedSearchString() { return QUERY; }\n+        @Nullable @Override public String expectedSearchSuggestion() { return null; }", "originalCommit": "fb18df7243eec1dadadc4d142463e1f48d7bef0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5NzY0NA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r407197644", "bodyText": "As you can see in the class name, CorrectedSearch, this query pewdeipie is automatically corrected by youtube, youtube gives us results for pewdiepie, it's not the same as suggestion, and it's the point of the pr.\nMaybe here it's better explained TeamNewPipe/NewPipe#3419 (comment)", "author": "B0pol", "createdAt": "2020-04-12T13:22:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5MzIzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5ODU4OA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r407198588", "bodyText": "It isn't the same indeed, but it should still return what it's correcting it to.", "author": "wb9688", "createdAt": "2020-04-12T13:30:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5MzIzMg=="}], "type": "inlineReview"}, {"oid": "ff8354680e1c43146f628ccd0d289bd8cef3ff4e", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/ff8354680e1c43146f628ccd0d289bd8cef3ff4e", "message": "Use setters in SearchInfo", "committedDate": "2020-04-12T13:36:04Z", "type": "forcePushed"}, {"oid": "6d177e995c101df5cb7f367d5fc5fed6aa8bd800", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/6d177e995c101df5cb7f367d5fc5fed6aa8bd800", "message": "getSearchSuggestion now returns the corrected query if isCorrectedSearch() is true", "committedDate": "2020-04-12T14:06:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2MjE2MQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r409062161", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    isCorrectedSearch = correctedSearch;\n          \n          \n            \n                    this.isCorrectedSearch = correctedSearch;\n          \n      \n    \n    \n  \n\nUse this here too, for consistency's sake", "author": "Stypox", "createdAt": "2020-04-15T18:53:17Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/search/SearchInfo.java", "diffHunk": "@@ -70,4 +76,16 @@ public String getSearchString() {\n     public String getSearchSuggestion() {\n         return searchSuggestion;\n     }\n+\n+    public boolean isCorrectedSearch() {\n+        return this.isCorrectedSearch;\n+    }\n+\n+    public void setCorrectedSearch(boolean correctedSearch) {\n+        isCorrectedSearch = correctedSearch;", "originalCommit": "6d177e995c101df5cb7f367d5fc5fed6aa8bd800", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NzU3MQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r409077571", "bodyText": "For even more consistency, change that correctedSearch to isCorrectedSearch", "author": "wb9688", "createdAt": "2020-04-15T19:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2MjE2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ5ODA0Mw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/311#discussion_r421498043", "bodyText": "That works, however you could just do .isEmpty() instead, which would be slightly faster, but mainly is more readable imho", "author": "wb9688", "createdAt": "2020-05-07T13:21:10Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeMusicSearchExtractor.java", "diffHunk": "@@ -133,7 +133,7 @@ public String getUrl() throws ParsingException {\n     public String getSearchSuggestion() throws ParsingException {\n         final JsonObject itemSectionRenderer = initialData.getObject(\"contents\").getObject(\"sectionListRenderer\")\n                 .getArray(\"contents\").getObject(0).getObject(\"itemSectionRenderer\");\n-        if (itemSectionRenderer == null) {\n+        if (itemSectionRenderer.equals(JsonUtils.EMPTY_OBJECT)) {", "originalCommit": "f79819e7526f3c436a01896ee2626d7389e0633d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6fca13e84ce80bfe189458644107ede96f7ce6cf", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/6fca13e84ce80bfe189458644107ede96f7ce6cf", "message": "renaming methods for consistency", "committedDate": "2020-05-07T13:38:41Z", "type": "forcePushed"}, {"oid": "29b639b454ce38f29d9dcc4c9fe054d581005bbe", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/29b639b454ce38f29d9dcc4c9fe054d581005bbe", "message": "Search: add isCorrectedSearch() and fix YoutubeSearchExtractor#getSearchSuggestion()\n\nisCorrectedSearch: see the javadoc\ngetSearchSuggestion: in YoutubeSearchExtractor, it was giving the corrected search query. It now gives the suggested query, as it should", "committedDate": "2020-05-07T13:39:57Z", "type": "commit"}, {"oid": "5d1c3b3fa2f9a28e6caf91621b3a88eff0e81a3c", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5d1c3b3fa2f9a28e6caf91621b3a88eff0e81a3c", "message": "Use setters in SearchInfo", "committedDate": "2020-05-07T13:39:57Z", "type": "commit"}, {"oid": "e8d58e09c9be249bfa430357c059443cebda6989", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/e8d58e09c9be249bfa430357c059443cebda6989", "message": "getSearchSuggestion now returns the corrected query if isCorrectedSearch() is true", "committedDate": "2020-05-07T13:40:41Z", "type": "commit"}, {"oid": "79483a6dc04a1d37e1e9e661b113632ddb420bf7", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/79483a6dc04a1d37e1e9e661b113632ddb420bf7", "message": "\u00abUse this in SearchInfo, for consistency's sake\u00bb @Stypox order xD", "committedDate": "2020-05-07T13:40:41Z", "type": "commit"}, {"oid": "3757541a9c8223d4ffce261faddee95112f125b5", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/3757541a9c8223d4ffce261faddee95112f125b5", "message": "adapt new nanojson version", "committedDate": "2020-05-07T13:40:41Z", "type": "commit"}, {"oid": "93e868634e1f3ab0fbfaf3724555c3c496108c21", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/93e868634e1f3ab0fbfaf3724555c3c496108c21", "message": "clarified javadoc for isCorrectedSearch and getSearchSuggestions in SearchExtractor", "committedDate": "2020-05-07T13:40:41Z", "type": "commit"}, {"oid": "5760366d70ca5c6413f759af5b9be2c7e36c919a", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5760366d70ca5c6413f759af5b9be2c7e36c919a", "message": "use JsonObject#isEmpty instead of JsonObject#equals(JsonUtils.EMPTY_OBJECT)", "committedDate": "2020-05-07T13:40:41Z", "type": "commit"}, {"oid": "6cff5de400f33f9e93c79efbf60cc0b7011b3027", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/6cff5de400f33f9e93c79efbf60cc0b7011b3027", "message": "renaming methods for consistency", "committedDate": "2020-05-07T13:40:41Z", "type": "commit"}, {"oid": "6cff5de400f33f9e93c79efbf60cc0b7011b3027", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/6cff5de400f33f9e93c79efbf60cc0b7011b3027", "message": "renaming methods for consistency", "committedDate": "2020-05-07T13:40:41Z", "type": "forcePushed"}]}