{"pr_number": 297, "pr_title": "KOGITO-2558: Navigation Fix", "pr_createdAt": "2020-06-26T09:20:34Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/297", "timeline": [{"oid": "2e30ed4fdd3b9b10e965bbd2cde88700aa53ce7a", "url": "https://github.com/kiegroup/kogito-apps/commit/2e30ed4fdd3b9b10e965bbd2cde88700aa53ce7a", "message": "KOGITO-2558: Navigation Fix", "committedDate": "2020-06-26T09:22:34Z", "type": "forcePushed"}, {"oid": "d2e004a8cd3fa792b9a344465ae6f7b6ed3dcb17", "url": "https://github.com/kiegroup/kogito-apps/commit/d2e004a8cd3fa792b9a344465ae6f7b6ed3dcb17", "message": "- More testing", "committedDate": "2020-06-26T11:04:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1OTkxOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/297#discussion_r446159919", "bodyText": "I think we can mock the KogitoPageLayout from '@kogito-apps/common' here and just check the props passed to the mock. The rendering of those should be tested in KogitoPageLayout tests - we'll reduce the snapshot size here.", "author": "jstastny-cz", "createdAt": "2020-06-26T12:42:51Z", "path": "ui-packages/packages/task-console/src/components/Templates/PageLayout/tests/PageLayout.test.tsx", "diffHunk": "@@ -0,0 +1,61 @@\n+import React from 'react';\n+import PageLayout from '../PageLayout';\n+import { getWrapper } from '@kogito-apps/common';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+\n+const props: any = {\n+  location: {\n+    pathname: '/'\n+  },\n+  history: []\n+};\n+\n+jest.mock('../../DataListContainerExpandable/DataListContainerExpandable.tsx');", "originalCommit": "d2e004a8cd3fa792b9a344465ae6f7b6ed3dcb17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg3ODEwNg==", "url": "https://github.com/kiegroup/kogito-apps/pull/297#discussion_r446878106", "bodyText": "I would maybe argue for sticking to following way of mocking - so that we don't depend on inner structure of the imported package:\nconst MockedComponent = (): React.ReactElement => {\n  return <></>;\n};\njest.mock('@kogito-apps/common', () => ({\n  ...jest.requireActual('@kogito-apps/common'),\n  KogitoPageLayout: () => {\n    return <MockedComponent />;\n  }\n}));", "author": "jstastny-cz", "createdAt": "2020-06-29T09:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1OTkxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2MTgwMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/297#discussion_r446161800", "bodyText": "if you do the mock above this won't work anymore - easiest solution might be creating a second file in tests where we could test the navigation with real KogitoPageLayout impl.", "author": "jstastny-cz", "createdAt": "2020-06-26T12:46:29Z", "path": "ui-packages/packages/task-console/src/components/Templates/PageLayout/tests/PageLayout.test.tsx", "diffHunk": "@@ -0,0 +1,61 @@\n+import React from 'react';\n+import PageLayout from '../PageLayout';\n+import { getWrapper } from '@kogito-apps/common';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+\n+const props: any = {\n+  location: {\n+    pathname: '/'\n+  },\n+  history: []\n+};\n+\n+jest.mock('../../DataListContainerExpandable/DataListContainerExpandable.tsx');\n+\n+function testRoute(route: string) {\n+  props.location.pathname = route;\n+\n+  const wrapper = getWrapper(\n+    <Router keyLength={0}>\n+      <PageLayout {...props} />\n+    </Router>,\n+    'PageLayout'\n+  );\n+\n+  expect(wrapper).toMatchSnapshot();\n+\n+  return wrapper;\n+}\n+\n+describe('PageLayout tests', () => {\n+  it('test default route', () => {\n+    testRoute('/');\n+  });\n+\n+  it('test UserTasks route', () => {\n+    testRoute('/UserTasks');\n+  });\n+\n+  it('test UserTasksFilters route', () => {\n+    testRoute('/UserTasksFilters');\n+  });\n+\n+  it('test TaskDetails route', () => {\n+    testRoute('/Task/taskID');\n+  });\n+\n+  it('test UserTasksTable route', () => {\n+    testRoute('/UserTasksTable');\n+  });\n+\n+  it('Brand click testing', () => {", "originalCommit": "d2e004a8cd3fa792b9a344465ae6f7b6ed3dcb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c37b4462589069432db655081c5722b29f8120fb", "url": "https://github.com/kiegroup/kogito-apps/commit/c37b4462589069432db655081c5722b29f8120fb", "message": "KOGITO-2558: Navigation Fix", "committedDate": "2020-06-29T10:10:11Z", "type": "commit"}, {"oid": "73f0d22e03fb91cd8f02ac42b13f1bd566952184", "url": "https://github.com/kiegroup/kogito-apps/commit/73f0d22e03fb91cd8f02ac42b13f1bd566952184", "message": "- More testing", "committedDate": "2020-06-29T10:10:11Z", "type": "commit"}, {"oid": "dd9797ef8e23f890b406d7100a7b110e1aed8919", "url": "https://github.com/kiegroup/kogito-apps/commit/dd9797ef8e23f890b406d7100a7b110e1aed8919", "message": "- Improving testing", "committedDate": "2020-06-29T10:10:11Z", "type": "commit"}, {"oid": "30a59364fa7071a3d5b5278fe512807b4294d3f9", "url": "https://github.com/kiegroup/kogito-apps/commit/30a59364fa7071a3d5b5278fe512807b4294d3f9", "message": "- Improving testing", "committedDate": "2020-06-29T10:10:11Z", "type": "commit"}, {"oid": "30a59364fa7071a3d5b5278fe512807b4294d3f9", "url": "https://github.com/kiegroup/kogito-apps/commit/30a59364fa7071a3d5b5278fe512807b4294d3f9", "message": "- Improving testing", "committedDate": "2020-06-29T10:10:11Z", "type": "forcePushed"}]}