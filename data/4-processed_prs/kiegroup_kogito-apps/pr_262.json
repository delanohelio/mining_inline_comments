{"pr_number": 262, "pr_title": "KOGITO-2299: Refactor Domain Explorer related components", "pr_createdAt": "2020-06-10T10:07:41Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/262", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MjExNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438642117", "bodyText": "@Sara4994 process descriptor should only be used for when we are listing processes, we shouldnt change this compoment to try to adpat to display task related data.\nI think what we discuss was to try to make the table more generic, see #242 (comment)", "author": "cristianonicolai", "createdAt": "2020-06-11T08:57:57Z", "path": "packages/common/src/components/Molecules/ProcessDescriptor/ProcessDescriptor.tsx", "diffHunk": "@@ -6,16 +6,11 @@ import {\n   Text,\n   TextVariants\n } from '@patternfly/react-core';\n-import { GraphQL } from '../../../graphql/types';\n-import ProcessInstance = GraphQL.ProcessInstance;\n \n interface IOwnProps {\n-  processInstanceData: Pick<\n-    ProcessInstance,\n-    'id' | 'processName' | 'businessKey'\n-  >;\n+  instanceData: any;\n }\n-const ProcessDescriptor: React.FC<IOwnProps> = ({ processInstanceData }) => {\n+const ProcessDescriptor: React.FC<IOwnProps> = ({ instanceData }) => {", "originalCommit": "ea4b149476af7176b82e9eda85fefb3a3b041574", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2MDU5MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438660591", "bodyText": "@cristianonicolai ok i will revert those changes on ProcessDescriptor.", "author": "Sara4994", "createdAt": "2020-06-11T09:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MjExNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Njk4NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438696985", "bodyText": "this is done", "author": "Sara4994", "createdAt": "2020-06-11T10:42:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MjExNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438643251", "bodyText": "@Sara4994 please look in how can we handle this using child components as discussed in #242 (comment)", "author": "cristianonicolai", "createdAt": "2020-06-11T08:59:49Z", "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -147,10 +153,10 @@ const DomainExplorerTable = ({\n           if (rest !== '__typename' && !rest.match('/ __typename')) {\n             !tempKeys.includes(k + rest) && tempKeys.push(k + rest);\n             if (rest.hasOwnProperty) {\n-              if (rest === 'processName') {\n+              if (rest === metaDataArray[1]) {", "originalCommit": "ea4b149476af7176b82e9eda85fefb3a3b041574", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NzMwOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438657308", "bodyText": "@cristianonicolai Yes i have plans to create a child component. Would you mind if i work on that in a separate JIRA, considering we dont have DE on task console yet and focused on management-console alone. now that DE components are moved into common and working fine with MC, i can make some enhancements by considering task-console. Also i would need some more details of how DE will look like on TC, based on that i can enhance DE. wdyt?", "author": "Sara4994", "createdAt": "2020-06-11T09:25:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3Nzg4Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438677887", "bodyText": "np, but then I suggest to simply move the DE component to common without any changes, then look again to refactor once TC uses it.", "author": "cristianonicolai", "createdAt": "2020-06-11T10:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4MzY1MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438683650", "bodyText": "@cristianonicolai  The current state of this PR supports MC only. So we can merge as it is and changes for TC wouldnt take much long, will create a PR as soon as possible", "author": "Sara4994", "createdAt": "2020-06-11T10:14:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNDkzOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438734938", "bodyText": "I have reverted these changes from DomainExplorerTable.tsx", "author": "Sara4994", "createdAt": "2020-06-11T12:06:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ=="}], "type": "inlineReview"}, {"oid": "651374e891f216ae28d9a1e7f1add7d24b9a8435", "url": "https://github.com/kiegroup/kogito-apps/commit/651374e891f216ae28d9a1e7f1add7d24b9a8435", "message": "KOGITO-2299: Refactor Domain Explorer related components", "committedDate": "2020-06-11T10:29:53Z", "type": "forcePushed"}, {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4", "url": "https://github.com/kiegroup/kogito-apps/commit/87719a9f8a5679361194bbc50b07c66db96ddba4", "message": "KOGITO-2299: Refactor Domain Explorer related components", "committedDate": "2020-06-11T10:41:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMDI3NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438700274", "bodyText": "just checking - this is the generalization, right? to prepare the component for use in tasks too?", "author": "jstastny-cz", "createdAt": "2020-06-11T10:49:30Z", "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -147,10 +153,10 @@ const DomainExplorerTable = ({\n           if (rest !== '__typename' && !rest.match('/ __typename')) {\n             !tempKeys.includes(k + rest) && tempKeys.push(k + rest);\n             if (rest.hasOwnProperty) {\n-              if (rest === 'processName') {\n+              if (rest === metaDataArray[1]) {\n                 const tempObj = {\n                   id: data.id,\n-                  processName: data.processName,\n+                  name: data[metaDataArray[1]],", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNDA2Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438734066", "bodyText": "This is removed now", "author": "Sara4994", "createdAt": "2020-06-11T12:04:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMDI3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMjQ1MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438702450", "bodyText": "The description still mentions the Landing Page.", "author": "jstastny-cz", "createdAt": "2020-06-11T10:54:13Z", "path": "packages/common/src/components/Organisms/DomainExplorer/tests/DomainExplorer.test.tsx", "diffHunk": "@@ -0,0 +1,100 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import DomainExplorer from '../DomainExplorer';\n+import { GraphQL } from '../../../../graphql/types';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+\n+jest.mock('../../../../graphql/types');\n+describe('Domain Explorer Landing Page Component', () => {", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxOTAzOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438719039", "bodyText": "This can be changed", "author": "Sara4994", "createdAt": "2020-06-11T11:31:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMjQ1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczMzk5MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438733991", "bodyText": "done", "author": "Sara4994", "createdAt": "2020-06-11T12:04:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMjQ1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMzEyNA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438703124", "bodyText": "get rid of the router in snapshots either by using getWrapper instead of mount, or wrapper.find(DomainExplorer) when using mount", "author": "jstastny-cz", "createdAt": "2020-06-11T10:55:37Z", "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,260 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Landing Page Component Assertions 1`] = `\n+<MemoryRouter", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTQ3Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729476", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMzEyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMzQyNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438703427", "bodyText": "I would mock EmptyStateIcon", "author": "jstastny-cz", "createdAt": "2020-06-11T10:56:14Z", "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,260 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Landing Page Component Assertions 1`] = `\n+<MemoryRouter\n+  keyLength={0}\n+>\n+  <Router\n+    history={\n+      Object {\n+        \"action\": \"POP\",\n+        \"block\": [Function],\n+        \"canGo\": [Function],\n+        \"createHref\": [Function],\n+        \"entries\": Array [\n+          Object {\n+            \"hash\": \"\",\n+            \"pathname\": \"/\",\n+            \"search\": \"\",\n+            \"state\": undefined,\n+          },\n+        ],\n+        \"go\": [Function],\n+        \"goBack\": [Function],\n+        \"goForward\": [Function],\n+        \"index\": 0,\n+        \"length\": 1,\n+        \"listen\": [Function],\n+        \"location\": Object {\n+          \"hash\": \"\",\n+          \"pathname\": \"/\",\n+          \"search\": \"\",\n+          \"state\": undefined,\n+        },\n+        \"push\": [Function],\n+        \"replace\": [Function],\n+      }\n+    }\n+  >\n+    <DomainExplorer>\n+      <EmptyState\n+        variant=\"full\"\n+      >\n+        <div\n+          className=\"pf-c-empty-state\"\n+        >\n+          <EmptyStateIcon", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTUxOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729518", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMzQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNDM1MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438704351", "bodyText": "why is here just visa and not the Travels that are supposed to be returned too?", "author": "jstastny-cz", "createdAt": "2020-06-11T10:58:09Z", "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,260 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Landing Page Component Assertions 1`] = `\n+<MemoryRouter\n+  keyLength={0}\n+>\n+  <Router\n+    history={\n+      Object {\n+        \"action\": \"POP\",\n+        \"block\": [Function],\n+        \"canGo\": [Function],\n+        \"createHref\": [Function],\n+        \"entries\": Array [\n+          Object {\n+            \"hash\": \"\",\n+            \"pathname\": \"/\",\n+            \"search\": \"\",\n+            \"state\": undefined,\n+          },\n+        ],\n+        \"go\": [Function],\n+        \"goBack\": [Function],\n+        \"goForward\": [Function],\n+        \"index\": 0,\n+        \"length\": 1,\n+        \"listen\": [Function],\n+        \"location\": Object {\n+          \"hash\": \"\",\n+          \"pathname\": \"/\",\n+          \"search\": \"\",\n+          \"state\": undefined,\n+        },\n+        \"push\": [Function],\n+        \"replace\": [Function],\n+      }\n+    }\n+  >\n+    <DomainExplorer>\n+      <EmptyState\n+        variant=\"full\"\n+      >\n+        <div\n+          className=\"pf-c-empty-state\"\n+        >\n+          <EmptyStateIcon\n+            icon={[Function]}\n+          >\n+            <CubesIcon\n+              aria-hidden=\"true\"\n+              className=\"pf-c-empty-state__icon\"\n+              color=\"currentColor\"\n+              noVerticalAlign={false}\n+              size=\"sm\"\n+              title={null}\n+            >\n+              <svg\n+                aria-hidden=\"true\"\n+                aria-labelledby={null}\n+                className=\"pf-c-empty-state__icon\"\n+                fill=\"currentColor\"\n+                height=\"1em\"\n+                role=\"img\"\n+                style={\n+                  Object {\n+                    \"verticalAlign\": \"-0.125em\",\n+                  }\n+                }\n+                viewBox=\"0 0 512 512\"\n+                width=\"1em\"\n+              >\n+                <path\n+                  d=\"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"\n+                  transform=\"\"\n+                />\n+              </svg>\n+            </CubesIcon>\n+          </EmptyStateIcon>\n+          <TextContent>\n+            <div\n+              className=\"pf-c-content\"\n+            >\n+              <Text\n+                component=\"h2\"\n+              >\n+                <h2\n+                  className=\"\"\n+                  data-pf-content={true}\n+                >\n+                  No domains available\n+                </h2>\n+              </Text>\n+            </div>\n+          </TextContent>\n+        </div>\n+      </EmptyState>\n+    </DomainExplorer>\n+  </Router>\n+</MemoryRouter>\n+`;\n+\n+exports[`Domain Explorer Landing Page Component Snapshot test 1`] = `\n+<MemoryRouter\n+  keyLength={0}\n+>\n+  <Router\n+    history={\n+      Object {\n+        \"action\": \"POP\",\n+        \"block\": [Function],\n+        \"canGo\": [Function],\n+        \"createHref\": [Function],\n+        \"entries\": Array [\n+          Object {\n+            \"hash\": \"\",\n+            \"pathname\": \"/\",\n+            \"search\": \"\",\n+            \"state\": undefined,\n+          },\n+        ],\n+        \"go\": [Function],\n+        \"goBack\": [Function],\n+        \"goForward\": [Function],\n+        \"index\": 0,\n+        \"length\": 1,\n+        \"listen\": [Function],\n+        \"location\": Object {\n+          \"hash\": \"\",\n+          \"pathname\": \"/\",\n+          \"search\": \"\",\n+          \"state\": undefined,\n+        },\n+        \"push\": [Function],\n+        \"replace\": [Function],\n+      }\n+    }\n+  >\n+    <DomainExplorer>\n+      <EmptyState\n+        variant=\"full\"\n+      >\n+        <div\n+          className=\"pf-c-empty-state\"\n+        >\n+          <EmptyStateIcon\n+            icon={[Function]}\n+          >\n+            <CubesIcon\n+              aria-hidden=\"true\"\n+              className=\"pf-c-empty-state__icon\"\n+              color=\"currentColor\"\n+              noVerticalAlign={false}\n+              size=\"sm\"\n+              title={null}\n+            >\n+              <svg\n+                aria-hidden=\"true\"\n+                aria-labelledby={null}\n+                className=\"pf-c-empty-state__icon\"\n+                fill=\"currentColor\"\n+                height=\"1em\"\n+                role=\"img\"\n+                style={\n+                  Object {\n+                    \"verticalAlign\": \"-0.125em\",\n+                  }\n+                }\n+                viewBox=\"0 0 512 512\"\n+                width=\"1em\"\n+              >\n+                <path\n+                  d=\"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"\n+                  transform=\"\"\n+                />\n+              </svg>\n+            </CubesIcon>\n+          </EmptyStateIcon>\n+          <Title\n+            headingLevel=\"h5\"\n+            size=\"lg\"\n+          >\n+            <h5\n+              className=\"pf-c-title pf-m-lg\"\n+            >\n+              Domains List\n+            </h5>\n+          </Title>\n+          <EmptyStateBody>\n+            <div\n+              className=\"pf-c-empty-state__body\"\n+            >\n+              Select a domain below\n+            </div>\n+          </EmptyStateBody>\n+          <EmptyStateSecondaryActions>\n+            <div\n+              className=\"pf-c-empty-state__secondary\"\n+            >\n+              <Link", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTU0Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729543", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:54:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNDM1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzE2MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438707161", "bodyText": "What is puzzling me is the naming of DomainExplorer and DomainExplorerContainer -> I would expect DomainExplorerContainer to contain the DomainExplorer, but it is not the case.", "author": "jstastny-cz", "createdAt": "2020-06-11T11:04:22Z", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/DomainExplorerContainer.tsx", "diffHunk": "@@ -0,0 +1,228 @@\n+import React, { useState, useEffect } from 'react';\n+import {\n+  DataToolbar,\n+  DataToolbarContent,\n+  DataToolbarToggleGroup,\n+  DataToolbarGroup,\n+  Card,\n+  Bullseye\n+} from '@patternfly/react-core';\n+import { FilterIcon } from '@patternfly/react-icons';\n+import DomainExplorerColumnPicker from '../../Molecules/DomainExplorerColumnPicker/DomainExplorerColumnPicker';\n+import DomainExplorerTable from '../../Molecules/DomainExplorerTable/DomainExplorerTable';\n+import KogitoSpinner from '../../Atoms/KogitoSpinner/KogitoSpinner';\n+import LoadMore from '../../Atoms/LoadMore/LoadMore';\n+import ServerErrors from '../../Molecules/ServerErrors/ServerErrors';\n+import './DomainExplorerContainer.css';\n+\n+import { GraphQL } from '../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+\n+interface IOwnProps {\n+  domainName: string;\n+  rememberedParams: any;\n+  rememberedSelections: any;\n+  metaData: any;\n+}\n+\n+const DomainExplorerContainer: React.FC<IOwnProps> = ({", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4NTUwNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r439985507", "bodyText": "@Sara4994 @jstastny-cz  Perhaps a better naming could be:\n\nRename DomainExplorer to DomainExplorerListDomains\nRename DomainExplorerContainer to DomainExplorer", "author": "cristianonicolai", "createdAt": "2020-06-15T07:41:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzE2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzcwOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438707709", "bodyText": "aren't we redoing what the MockedProvider can do for us? What is the benefit of this approach?", "author": "jstastny-cz", "createdAt": "2020-06-11T11:05:40Z", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/DomainExplorerContainer.test.tsx", "diffHunk": "@@ -0,0 +1,286 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import { BrowserRouter } from 'react-router-dom';\n+import DomainExplorerContainer from '../DomainExplorerContainer';\n+import { MockedProvider, wait } from '@apollo/react-testing';\n+import { getWrapper } from '../../../../utils/OuiaUtils';\n+import { GraphQL } from '../../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+jest.mock('react-apollo');\n+\n+const props = {\n+  domains: ['Travels', 'VisaApplications'],\n+  loadingState: false,\n+  rememberedParams: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {\n+    metadata: [\n+      {\n+        processInstances: [\n+          'id',\n+          'processName',\n+          'state',\n+          'start',\n+          'lastUpdate',\n+          'businessKey'\n+        ]\n+      }\n+    ]\n+  }\n+};\n+\n+const routeComponentPropsMock = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }]\n+    },\n+    key: 'ugubul'\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const routeComponentPropsMock2 = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const props2 = {\n+  domains: ['Travels', 'VisaApplications'],\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  },\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  },\n+  rememberedParams: [],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {}\n+};\n+\n+jest.mock('../../../../graphql/types');\n+\n+describe('Domain Explorer Container component', () => {\n+  it('Snapshot test', async () => {\n+    // @ts-ignore\n+    useGetColumnPickerAttributesQuery.mockReturnValue({", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwOTcyMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438709720", "bodyText": "all the snapshots are failing with:\n An error occurred while accessing data. so the mocking needs to be fixed still.\n\nI assume you're moving the tests only, so it is fine just to create a Jira for fixing this test and moving on with the PR.", "author": "jstastny-cz", "createdAt": "2020-06-11T11:10:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTI5OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729299", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:54:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzcwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwODM4OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438708388", "bodyText": "getWrapperAsync is a great help here ->\nit('', async()=>{\n  const wrapper = await getWrapperAsync(<></>, 'DomainExplorerContainer')\n  expect(wrapper).toMatchSnapshot();\n}", "author": "jstastny-cz", "createdAt": "2020-06-11T11:07:14Z", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/DomainExplorerContainer.test.tsx", "diffHunk": "@@ -0,0 +1,286 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import { BrowserRouter } from 'react-router-dom';\n+import DomainExplorerContainer from '../DomainExplorerContainer';\n+import { MockedProvider, wait } from '@apollo/react-testing';\n+import { getWrapper } from '../../../../utils/OuiaUtils';\n+import { GraphQL } from '../../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+jest.mock('react-apollo');\n+\n+const props = {\n+  domains: ['Travels', 'VisaApplications'],\n+  loadingState: false,\n+  rememberedParams: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {\n+    metadata: [\n+      {\n+        processInstances: [\n+          'id',\n+          'processName',\n+          'state',\n+          'start',\n+          'lastUpdate',\n+          'businessKey'\n+        ]\n+      }\n+    ]\n+  }\n+};\n+\n+const routeComponentPropsMock = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }]\n+    },\n+    key: 'ugubul'\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const routeComponentPropsMock2 = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const props2 = {\n+  domains: ['Travels', 'VisaApplications'],\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  },\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  },\n+  rememberedParams: [],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {}\n+};\n+\n+jest.mock('../../../../graphql/types');\n+\n+describe('Domain Explorer Container component', () => {\n+  it('Snapshot test', async () => {\n+    // @ts-ignore\n+    useGetColumnPickerAttributesQuery.mockReturnValue({\n+      loading: false,\n+      data: {\n+        __type: {\n+          fields: [\n+            {\n+              name: 'flight',\n+              type: {\n+                name: 'Flight',\n+                kind: 'OBJECT',\n+                fields: [\n+                  {\n+                    name: 'arrival',\n+                    type: {\n+                      name: 'String',\n+                      kind: 'SCALAR'\n+                    }\n+                  }\n+                ]\n+              }\n+            },\n+            {\n+              name: 'id',\n+              type: {\n+                name: 'String',\n+                kind: 'SCALAR',\n+                fields: null\n+              }\n+            }\n+          ]\n+        }\n+      }\n+    });\n+    // @ts-ignore\n+    useGetQueryFieldsQuery.mockReturnValue({\n+      loading: false,\n+      data: {\n+        __type: {\n+          fields: [\n+            {\n+              name: 'Travels'\n+            },\n+            {\n+              name: 'visaApplication'\n+            },\n+            {\n+              name: 'Jobs'\n+            }\n+          ]\n+        }\n+      }\n+    });\n+    // @ts-ignore\n+    useGetQueryTypesQuery.mockReturnValue({\n+      loading: false,\n+      data: {}\n+    });\n+    const wrapper = mount(", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTI0NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729245", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:53:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwODM4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwODYyNg==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438708626", "bodyText": "remove router from the snapshots", "author": "jstastny-cz", "createdAt": "2020-06-11T11:07:47Z", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/__snapshots__/DomainExplorerContainer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,1706 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Container component Check error response for getPicker query 1`] = `\n+<BrowserRouter>", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTE3MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729171", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:53:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwODYyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMDMxNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438710317", "bodyText": "if using getWrapper no need to use find here.", "author": "jstastny-cz", "createdAt": "2020-06-11T11:11:38Z", "path": "packages/management-console/src/components/Templates/DomainExplorerLandingPage/tests/DomainExplorerLandingPage.test.tsx", "diffHunk": "@@ -13,93 +12,13 @@ describe('Domain Explorer Landing Page Component', () => {\n     } as any\n   };\n   it('Snapshot test', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Jobs',\n-              args: []\n-            },\n-            {\n-              name: 'Travels',\n-              args: []\n-            },\n-            {\n-              name: 'visaApplication',\n-              args: []\n-            }\n-          ]\n-        }\n-      }\n-    });\n     const wrapper = mount(\n-      <Router keyLength={0}>\n-        <DomainExplorerLandingPage {...props} />\n-      </Router>\n+      <MockedProvider mocks={[]} addTypename={false}>\n+        <Router keyLength={0}>\n+          <DomainExplorerLandingPage {...props} />\n+        </Router>\n+      </MockedProvider>\n     );\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(wrapper).toMatchSnapshot();\n-  });\n-  it('Assertions', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels',\n-              args: [\n-                {\n-                  name: 'where',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'TravelsArgument'\n-                  }\n-                },\n-                {\n-                  name: 'orderBy',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'TravelsOrderBy'\n-                  }\n-                }\n-              ],\n-              type: { ofType: { name: 'Travels' } }\n-            },\n-            {\n-              name: 'visaApplication',\n-              args: [\n-                {\n-                  name: 'where',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'VisaApplicationsArgument'\n-                  }\n-                },\n-                {\n-                  name: 'orderBy',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'VisaApplicationsOrderBy'\n-                  }\n-                }\n-              ],\n-              type: { ofType: { name: 'VisaApplications' } }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    const wrapper = mount(\n-      <Router keyLength={0}>\n-        <DomainExplorerLandingPage {...props} />\n-      </Router>\n-    );\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(wrapper).toMatchSnapshot();\n+    expect(wrapper.find(DomainExplorerLandingPage)).toMatchSnapshot();", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMDcxMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438710710", "bodyText": "Plus since the component is wrapper in ouia, we need to stick to getWrapper to have shorter snapshot (omitting the ouia wrapper part)", "author": "jstastny-cz", "createdAt": "2020-06-11T11:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMDMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTEwMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729102", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:53:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMDMxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMjI0Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438712247", "bodyText": "getWrapperAsync is to be used together with MockedProvider", "author": "jstastny-cz", "createdAt": "2020-06-11T11:16:08Z", "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -67,87 +45,25 @@ const props2 = {\n     params: {\n       domainName: 'Travels'\n     }\n-  }\n+  },\n+  loadingState: false\n };\n \n-jest.mock('@kogito-apps/common/src/graphql/types');\n describe('Domain Explorer Dashboard component', () => {\n   it('Snapshot test', () => {\n-    // @ts-ignore\n-    GraphQL.useGetColumnPickerAttributesQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'flight',\n-              type: {\n-                name: 'Flight',\n-                kind: 'OBJECT',\n-                fields: [\n-                  {\n-                    name: 'arrival',\n-                    type: {\n-                      name: 'String',\n-                      kind: 'SCALAR'\n-                    }\n-                  }\n-                ]\n-              }\n-            },\n-            {\n-              name: 'id',\n-              type: {\n-                name: 'String',\n-                kind: 'SCALAR',\n-                fields: null\n-              }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels'\n-            },\n-            {\n-              name: 'visaApplication'\n-            },\n-            {\n-              name: 'Jobs'\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetQueryTypesQuery.mockReturnValue({\n-      loading: false,\n-      data: {}\n-    });\n     const wrapper = mount(\n-      <BrowserRouter>\n-        <DomainExplorerPage {...props} {...routeComponentPropsMock} />\n-      </BrowserRouter>\n+      <MockedProvider mocks={[]} addTypename={false}>", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTAxNg==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729016", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:53:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMjI0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMzM1Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438713357", "bodyText": "not getting anything interesting in snapshots when using shallow due to the wrapping router.", "author": "jstastny-cz", "createdAt": "2020-06-11T11:18:39Z", "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -160,112 +76,19 @@ describe('Domain Explorer Dashboard component', () => {\n     expect(wrapper.find(DomainExplorerPage)).toMatchSnapshot();\n   });\n   it('Mock query testing', async () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels'\n-            },\n-            {\n-              name: 'visaApplication'\n-            },\n-            {\n-              name: 'Jobs'\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetColumnPickerAttributesQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'flight',\n-              type: {\n-                name: 'Flight',\n-                kind: 'OBJECT',\n-                fields: [\n-                  {\n-                    name: 'arrival',\n-                    type: {\n-                      name: 'String',\n-                      kind: 'SCALAR'\n-                    }\n-                  }\n-                ]\n-              }\n-            },\n-            {\n-              name: 'id',\n-              type: {\n-                name: 'String',\n-                kind: 'SCALAR',\n-                fields: null\n-              }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetQueryTypesQuery.mockReturnValue({\n-      loading: false,\n-      data: {}\n-    });\n-    const mocks = [\n-      {\n-        request: {\n-          query: GET_QUERY_FIELDS\n-        },\n-        result: {\n-          loading: false,\n-          data: {\n-            __type: {\n-              fields: [\n-                {\n-                  name: 'Travels'\n-                },\n-                {\n-                  name: 'visaApplication'\n-                },\n-                {\n-                  name: 'Jobs'\n-                }\n-              ]\n-            }\n-          }\n-        }\n-      }\n-    ];\n     const wrapper = mount(\n       <BrowserRouter>\n-        <MockedProvider mocks={mocks} addTypename={false}>\n+        <MockedProvider mocks={[]} addTypename={false}>\n           <DomainExplorerPage {...props} {...routeComponentPropsMock} />\n         </MockedProvider>\n       </BrowserRouter>\n     );\n     wrapper.update();\n     wrapper.setProps({});\n     expect(wrapper.find(DomainExplorerPage)).toMatchSnapshot();\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(GraphQL.useGetQueryTypesQuery).toHaveBeenCalled();\n-    expect(GraphQL.useGetColumnPickerAttributesQuery).toBeCalledWith({\n-      variables: { columnPickerType: 'Travels' }\n-    });\n   });\n   it('Check error response for getPicker query', () => {\n-    // @ts-ignore\n-    GraphQL.useGetColumnPickerAttributesQuery.mockReturnValue({\n-      loading: false,\n-      error: {}\n-    });\n-    const wrapper = mount(\n+    const wrapper = shallow(", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyODkzOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438728939", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:53:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMzM1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNDQ5NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438714494", "bodyText": "again, nothing interesting in snapshots.", "author": "jstastny-cz", "createdAt": "2020-06-11T11:21:01Z", "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -275,13 +98,7 @@ describe('Domain Explorer Dashboard component', () => {\n     expect(wrapper).toMatchSnapshot();\n   });\n   it('Check error response for getQueryTypes', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryTypesQuery.mockReturnValue({\n-      loading: false,\n-      data: null,\n-      error: {}\n-    });\n-    const wrapper = mount(\n+    const wrapper = shallow(", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyODg1OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438728858", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:53:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNDQ5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNTE2MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438715160", "bodyText": "this should be async test otherwise we get just loading spinner in snapshots. Use getWrapperAsync for the loading to finish.", "author": "jstastny-cz", "createdAt": "2020-06-11T11:22:21Z", "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -293,7 +110,9 @@ describe('Domain Explorer Dashboard component', () => {\n   it('check assertions on rememberedParams', () => {\n     const wrapper = mount(\n       <BrowserRouter>\n-        <DomainExplorerPage {...props2} {...routeComponentPropsMock2} />\n+        <MockedProvider mocks={[]} addTypename={false}>", "originalCommit": "87719a9f8a5679361194bbc50b07c66db96ddba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyODc1MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438728750", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "author": "jstastny-cz", "createdAt": "2020-06-11T11:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNTE2MA=="}], "type": "inlineReview"}, {"oid": "557583df7c0d81c979a72161b114e976fe9d5d28", "url": "https://github.com/kiegroup/kogito-apps/commit/557583df7c0d81c979a72161b114e976fe9d5d28", "message": "KOGITO-2299: Refactor Domain Explorer related components", "committedDate": "2020-06-11T11:53:20Z", "type": "forcePushed"}, {"oid": "5e5e72eb095c13bf7e5c8dee48fd30f62abcea04", "url": "https://github.com/kiegroup/kogito-apps/commit/5e5e72eb095c13bf7e5c8dee48fd30f62abcea04", "message": "KOGITO-2299: Refactor Domain Explorer related components", "committedDate": "2020-06-11T12:03:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNTMzNQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438815335", "bodyText": "why does this have both \"common\" and \"domain-explorer\" in the name?", "author": "srambach", "createdAt": "2020-06-11T14:09:46Z", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/DomainExplorerContainer.css", "diffHunk": "@@ -0,0 +1,3 @@\n+.kogito-common--domain-explorer__table-OverFlow {", "originalCommit": "5e5e72eb095c13bf7e5c8dee48fd30f62abcea04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0MjkzOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438842939", "bodyText": "it is domain explorer component on common package", "author": "Sara4994", "createdAt": "2020-06-11T14:49:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNTMzNQ=="}], "type": "inlineReview"}, {"oid": "d58b22098117e895dd5089fb08ef40079e78d595", "url": "https://github.com/kiegroup/kogito-apps/commit/d58b22098117e895dd5089fb08ef40079e78d595", "message": "KOGITO-2299: Refactor Domain Explorer related components", "committedDate": "2020-06-11T14:56:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NTE1NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r439955155", "bodyText": "@Sara4994 are these changes below needed?", "author": "cristianonicolai", "createdAt": "2020-06-15T06:30:09Z", "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -170,14 +172,14 @@ const DomainExplorerTable = ({\n                   )\n                 };\n                 tempValue.push(ele);\n-              } else if (rest === 'start') {", "originalCommit": "d58b22098117e895dd5089fb08ef40079e78d595", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MTMwNg==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440541306", "bodyText": "@Sara4994 still not sure why these changes are introduced, could we avoid/revert it?", "author": "cristianonicolai", "createdAt": "2020-06-16T01:53:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU3MDE3MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440570170", "bodyText": "@cristianonicolai this one just changed the order of if-else statements to appear same order as on table, just for readability atleast for me when I do changes, I do on right place...", "author": "Sara4994", "createdAt": "2020-06-16T03:48:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU4MTI1OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440581258", "bodyText": "that's ok then", "author": "cristianonicolai", "createdAt": "2020-06-16T04:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NTE1NQ=="}], "type": "inlineReview"}, {"oid": "08d01bbcc4df7446525da942ffc78c7a13b7c459", "url": "https://github.com/kiegroup/kogito-apps/commit/08d01bbcc4df7446525da942ffc78c7a13b7c459", "message": "KOGITO-2299: Refactor Domain Explorer related components", "committedDate": "2020-06-15T11:29:59Z", "type": "forcePushed"}, {"oid": "f707dabbc51cadb174b008c7c0f93097893fdb43", "url": "https://github.com/kiegroup/kogito-apps/commit/f707dabbc51cadb174b008c7c0f93097893fdb43", "message": "KOGITO-2299: Refactor Domain Explorer related components", "committedDate": "2020-06-15T17:12:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MDg4NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440540885", "bodyText": "@Sara4994 shoulod this be named ProcessListTable instead?", "author": "cristianonicolai", "createdAt": "2020-06-16T01:52:07Z", "path": "packages/management-console/src/components/Organisms/ProcessListTable/__mocks__/ProcessListTable.tsx", "diffHunk": "@@ -1,7 +1,7 @@\n import React from 'react';\n \n-const DataListComponent = (): React.ReactElement => {\n+const ProcessListComponent = (): React.ReactElement => {", "originalCommit": "f707dabbc51cadb174b008c7c0f93097893fdb43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU3MDQyMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440570420", "bodyText": "@cristianonicolai oopps that's my bad... Will change this", "author": "Sara4994", "createdAt": "2020-06-16T03:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MDg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MTcyMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440541722", "bodyText": "can you provide a more meaningful description for the tests, please.", "author": "cristianonicolai", "createdAt": "2020-06-16T01:55:17Z", "path": "packages/common/src/components/Organisms/DomainExplorerListDomains/tests/DomainExplorerListDomains.test.tsx", "diffHunk": "@@ -0,0 +1,100 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import DomainExplorerListDomains from '../DomainExplorerListDomains';\n+import { GraphQL } from '../../../../graphql/types';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+\n+jest.mock('../../../../graphql/types');\n+describe('DomainExplorerListDomains Component', () => {\n+  it('Snapshot test', () => {", "originalCommit": "f707dabbc51cadb174b008c7c0f93097893fdb43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU4NDQ4NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440584484", "bodyText": "done", "author": "Sara4994", "createdAt": "2020-06-16T04:50:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MTcyMg=="}], "type": "inlineReview"}, {"oid": "afdd0927211f392888bc343933d0cdb03d7af71e", "url": "https://github.com/kiegroup/kogito-apps/commit/afdd0927211f392888bc343933d0cdb03d7af71e", "message": "KOGITO-2299: Refactor Domain Explorer related components", "committedDate": "2020-06-16T04:50:05Z", "type": "commit"}, {"oid": "afdd0927211f392888bc343933d0cdb03d7af71e", "url": "https://github.com/kiegroup/kogito-apps/commit/afdd0927211f392888bc343933d0cdb03d7af71e", "message": "KOGITO-2299: Refactor Domain Explorer related components", "committedDate": "2020-06-16T04:50:05Z", "type": "forcePushed"}]}