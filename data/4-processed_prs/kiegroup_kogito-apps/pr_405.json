{"pr_number": 405, "pr_title": "KOGITO-2022: Update feature on process variables", "pr_createdAt": "2020-08-20T09:47:39Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/405", "timeline": [{"oid": "174a93516980a8dd53076cfd462270be5ba35e9e", "url": "https://github.com/kiegroup/kogito-apps/commit/174a93516980a8dd53076cfd462270be5ba35e9e", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-20T12:53:53Z", "type": "forcePushed"}, {"oid": "3d69d3efb01b3bb4b596bceb5be7b210069505c2", "url": "https://github.com/kiegroup/kogito-apps/commit/3d69d3efb01b3bb4b596bceb5be7b210069505c2", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-20T13:57:49Z", "type": "forcePushed"}, {"oid": "c10bbc2e31607ead373d958008d2710835b1ff5f", "url": "https://github.com/kiegroup/kogito-apps/commit/c10bbc2e31607ead373d958008d2710835b1ff5f", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-20T14:31:07Z", "type": "forcePushed"}, {"oid": "77b4c3acaa3bf7bf0e7a56fb8a32323869e8978e", "url": "https://github.com/kiegroup/kogito-apps/commit/77b4c3acaa3bf7bf0e7a56fb8a32323869e8978e", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-23T08:06:23Z", "type": "forcePushed"}, {"oid": "d2ddb303081c9dd33f65494f2b6081dcb9833ac5", "url": "https://github.com/kiegroup/kogito-apps/commit/d2ddb303081c9dd33f65494f2b6081dcb9833ac5", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-23T14:49:03Z", "type": "forcePushed"}, {"oid": "9989234ce3e00ec8c5a8bc8ed3201f14d575a607", "url": "https://github.com/kiegroup/kogito-apps/commit/9989234ce3e00ec8c5a8bc8ed3201f14d575a607", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-23T14:51:14Z", "type": "forcePushed"}, {"oid": "824b499982352dd133267b8b55af71c54de0bc7f", "url": "https://github.com/kiegroup/kogito-apps/commit/824b499982352dd133267b8b55af71c54de0bc7f", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-24T05:51:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQwMDYwMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475400603", "bodyText": "@Sara4994 just a minor comment about this Save button. Does here make sense the button duplication just for disabling the button?", "author": "nmirasch", "createdAt": "2020-08-24T07:42:24Z", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -96,6 +110,119 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<MatchProps, {}, {}> &\n         )\n     );\n   };\n+\n+  useEffect(() => {\n+    if (data) {\n+      setUpdateJson(JSON.parse(data.ProcessInstances[0].variables));\n+    }\n+  }, [data]);\n+\n+  useEffect(() => {\n+    if (variableError && variableError.length > 0) {\n+      setErrorModalOpen(true);\n+    }\n+  }, [variableError]);\n+\n+  const handleSave = async () => {\n+    setDisplaySuccess(false);\n+    await handleVariableUpdate(\n+      data.ProcessInstances[0],\n+      updateJson,\n+      setDisplayLabel,\n+      setDisplaySuccess,\n+      setVariableError\n+    );\n+  };\n+\n+  const handleRefresh = () => {\n+    window.location.reload();\n+  };\n+\n+  const handleErrorModal = () => {\n+    setErrorModalOpen(!errorModalOpen);\n+  };\n+\n+  const handleRetry = () => {\n+    setErrorModalOpen(!errorModalOpen);\n+    setVariableError(null);\n+    // tslint:disable-next-line: no-floating-promises\n+    handleSave();\n+  };\n+\n+  const handleDiscard = () => {\n+    setErrorModalOpen(!errorModalOpen);\n+    handleRefresh();\n+  };\n+\n+  const errorModal = () => {\n+    return (\n+      <Modal\n+        title=\"\"\n+        header={\n+          <>\n+            <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>\n+              <InfoCircleIcon\n+                className=\"pf-u-mr-sm\"\n+                color=\"var(--pf-global--danger-color--100)\"\n+              />\n+              Error\n+            </Title>\n+          </>\n+        }\n+        variant={ModalVariant.small}\n+        isOpen={errorModalOpen}\n+        onClose={handleErrorModal}\n+        actions={[\n+          <Button\n+            key=\"Retry\"\n+            variant=\"primary\"\n+            id=\"retry-button\"\n+            onClick={handleRetry}\n+          >\n+            Retry\n+          </Button>,\n+          <Button\n+            key=\"Discard\"\n+            variant=\"link\"\n+            id=\"discard-button\"\n+            onClick={handleDiscard}\n+          >\n+            Discard\n+          </Button>\n+        ]}\n+        aria-label=\"Error modal\"\n+        aria-labelledby=\"Error modal\"\n+      >\n+        {variableError}\n+      </Modal>\n+    );\n+  };\n+\n+  const updateVariables = () => {\n+    if (data.ProcessInstances[0].serviceUrl !== null && displayLabel) {", "originalCommit": "824b499982352dd133267b8b55af71c54de0bc7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ3NzQ1OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475477458", "bodyText": "@nmirasch done. Thanks", "author": "Sara4994", "createdAt": "2020-08-24T09:45:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQwMDYwMw=="}], "type": "inlineReview"}, {"oid": "3900b0e1d0ec7c164457a6345e4d82cec03f1169", "url": "https://github.com/kiegroup/kogito-apps/commit/3900b0e1d0ec7c164457a6345e4d82cec03f1169", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-24T09:39:28Z", "type": "forcePushed"}, {"oid": "289d257efe301e27652059ff09ee10f19e2c4743", "url": "https://github.com/kiegroup/kogito-apps/commit/289d257efe301e27652059ff09ee10f19e2c4743", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-24T09:44:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU3ODA1Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475578056", "bodyText": "I understand you need mount for the function invocation? It is resulting in quite long snapshot. Could you check if the lenght can be reduced? (I think at least using find() and mocking react-icons might help a bit)", "author": "jstastny-cz", "createdAt": "2020-08-24T12:54:06Z", "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessDetailsProcessVariables/tests/ProcessDetailsProcessVariables.test.tsx", "diffHunk": "@@ -1,32 +1,69 @@\n import React from 'react';\n-import { shallow } from 'enzyme';\n+import { shallow, mount } from 'enzyme';\n import ProcessDetailsProcessVariables from '../ProcessDetailsProcessVariables';\n-\n+// tslint:disable: no-string-literal\n+// tslint:disable: no-unexpected-multiline\n const props = {\n-  loading: true,\n-  data: {\n-    ProcessInstances: []\n-  }\n+  setUpdateJson: jest.fn(),\n+  displayLabel: false,\n+  updateJson: {\n+    trip: {\n+      begin: '2019-10-22T22:00:00Z[UTC]',\n+      city: 'Berlin',\n+      country: 'Germany',\n+      end: '2019-10-30T22:00:00Z[UTC]',\n+      visaRequired: false\n+    }\n+  },\n+  setDisplayLabel: jest.fn(),\n+  displaySuccess: false\n };\n \n const props2 = {\n-  loading: false,\n-  data: {\n-    ProcessInstances: [\n-      {\n-        variables:\n-          '{\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}'\n-      }\n-    ]\n-  }\n+  setUpdateJson: jest.fn(),\n+  displayLabel: true,\n+  updateJson: {\n+    trip: {\n+      begin: '2019-10-22T22:00:00Z[UTC]',\n+      city: 'Berlin',\n+      country: 'Germany',\n+      end: '2019-10-30T22:00:00Z[UTC]',\n+      visaRequired: false\n+    }\n+  },\n+  setDisplayLabel: jest.fn(),\n+  displaySuccess: true\n };\n describe('ProcessVariables component tests', () => {\n   it('snapshot testing without variables', () => {\n     const wrapper = shallow(<ProcessDetailsProcessVariables {...props} />);\n     expect(wrapper).toMatchSnapshot();\n   });\n   it('snapshot testing with variables', () => {\n-    const wrapper = shallow(<ProcessDetailsProcessVariables {...props2} />);\n+    const wrapper = mount(<ProcessDetailsProcessVariables {...props2} />);\n     expect(wrapper).toMatchSnapshot();\n+    const onEdit = () => {\n+      return null;\n+    };\n+    const obj = {\n+      name: false,\n+      onEdit,\n+      src: {\n+        trip: {\n+          begin: '2019-10-22T22:00:00Z[UTC]',\n+          city: 'Berlin',\n+          country: 'Germany',\n+          end: '2019-10-30T22:00:00Z[UTC]',\n+          visaRequired: false\n+        }\n+      }\n+    };\n+    wrapper", "originalCommit": "289d257efe301e27652059ff09ee10f19e2c4743", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY0NTY2Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475645666", "bodyText": "@jstastny-cz  I have mocked the react-icons as suggested, but the reason for having lengthy snapshot is because of this third party component 'react-json-view'. I cannot mock this component completely because that is the only thing we are displaying on the UI as part of process variables, but at the same time it generates a lengthy snapshot", "author": "Sara4994", "createdAt": "2020-08-24T14:17:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU3ODA1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1NjI0MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r476356240", "bodyText": "ok, thanks.", "author": "jstastny-cz", "createdAt": "2020-08-25T10:50:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU3ODA1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU4NzU2Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475587563", "bodyText": "discard->discards ?", "author": "jstastny-cz", "createdAt": "2020-08-24T13:09:25Z", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -96,6 +111,170 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<MatchProps, {}, {}> &\n         )\n     );\n   };\n+\n+  useEffect(() => {\n+    if (data) {\n+      setUpdateJson(JSON.parse(data.ProcessInstances[0].variables));\n+    }\n+  }, [data]);\n+\n+  useEffect(() => {\n+    if (variableError && variableError.length > 0) {\n+      setErrorModalOpen(true);\n+    }\n+  }, [variableError]);\n+\n+  const handleSave = async () => {\n+    setDisplaySuccess(false);\n+    await handleVariableUpdate(\n+      data.ProcessInstances[0],\n+      updateJson,\n+      setDisplayLabel,\n+      setDisplaySuccess,\n+      setVariableError\n+    );\n+  };\n+\n+  const handleRefresh = () => {\n+    if (displayLabel === true) {\n+      setConfirmationModal(true);\n+    } else {\n+      window.location.reload();\n+    }\n+  };\n+\n+  const handleConfirmationModal = () => {\n+    setConfirmationModal(!confirmationModal);\n+  };\n+\n+  const handleConfirm = () => {\n+    window.location.reload();\n+    handleConfirmationModal();\n+  };\n+\n+  const handleCancel = () => {\n+    handleConfirmationModal();\n+  };\n+\n+  const RenderConfirmationModal = () => {\n+    return (\n+      <Modal\n+        title=\"\"\n+        header={\n+          <>\n+            <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>\n+              <InfoCircleIcon\n+                className=\"pf-u-mr-sm\"\n+                color=\"var(--pf-global--warning-color--100)\"\n+              />\n+              Refresh\n+            </Title>\n+          </>\n+        }\n+        variant={ModalVariant.small}\n+        isOpen={confirmationModal}\n+        onClose={handleConfirmationModal}\n+        actions={[\n+          <Button\n+            key=\"Ok\"\n+            variant=\"primary\"\n+            id=\"confirm-button\"\n+            onClick={handleConfirm}\n+          >\n+            Ok\n+          </Button>,\n+          <Button\n+            key=\"Cancel\"\n+            variant=\"link\"\n+            id=\"cancel-button\"\n+            onClick={handleCancel}\n+          >\n+            Cancel\n+          </Button>\n+        ]}\n+        aria-label=\"Confirmation modal\"\n+        aria-labelledby=\"Confirmation modal\"\n+      >\n+        This action discard changes made on process variables.", "originalCommit": "289d257efe301e27652059ff09ee10f19e2c4743", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5MTAzMQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475591031", "bodyText": "updateVariables->updateVariablesButton", "author": "jstastny-cz", "createdAt": "2020-08-24T13:15:24Z", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -96,6 +111,170 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<MatchProps, {}, {}> &\n         )\n     );\n   };\n+\n+  useEffect(() => {\n+    if (data) {\n+      setUpdateJson(JSON.parse(data.ProcessInstances[0].variables));\n+    }\n+  }, [data]);\n+\n+  useEffect(() => {\n+    if (variableError && variableError.length > 0) {\n+      setErrorModalOpen(true);\n+    }\n+  }, [variableError]);\n+\n+  const handleSave = async () => {\n+    setDisplaySuccess(false);\n+    await handleVariableUpdate(\n+      data.ProcessInstances[0],\n+      updateJson,\n+      setDisplayLabel,\n+      setDisplaySuccess,\n+      setVariableError\n+    );\n+  };\n+\n+  const handleRefresh = () => {\n+    if (displayLabel === true) {\n+      setConfirmationModal(true);\n+    } else {\n+      window.location.reload();\n+    }\n+  };\n+\n+  const handleConfirmationModal = () => {\n+    setConfirmationModal(!confirmationModal);\n+  };\n+\n+  const handleConfirm = () => {\n+    window.location.reload();\n+    handleConfirmationModal();\n+  };\n+\n+  const handleCancel = () => {\n+    handleConfirmationModal();\n+  };\n+\n+  const RenderConfirmationModal = () => {\n+    return (\n+      <Modal\n+        title=\"\"\n+        header={\n+          <>\n+            <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>\n+              <InfoCircleIcon\n+                className=\"pf-u-mr-sm\"\n+                color=\"var(--pf-global--warning-color--100)\"\n+              />\n+              Refresh\n+            </Title>\n+          </>\n+        }\n+        variant={ModalVariant.small}\n+        isOpen={confirmationModal}\n+        onClose={handleConfirmationModal}\n+        actions={[\n+          <Button\n+            key=\"Ok\"\n+            variant=\"primary\"\n+            id=\"confirm-button\"\n+            onClick={handleConfirm}\n+          >\n+            Ok\n+          </Button>,\n+          <Button\n+            key=\"Cancel\"\n+            variant=\"link\"\n+            id=\"cancel-button\"\n+            onClick={handleCancel}\n+          >\n+            Cancel\n+          </Button>\n+        ]}\n+        aria-label=\"Confirmation modal\"\n+        aria-labelledby=\"Confirmation modal\"\n+      >\n+        This action discard changes made on process variables.\n+      </Modal>\n+    );\n+  };\n+\n+  const handleErrorModal = () => {\n+    setErrorModalOpen(!errorModalOpen);\n+  };\n+\n+  const handleRetry = () => {\n+    handleErrorModal();\n+    setVariableError(null);\n+    // tslint:disable-next-line: no-floating-promises\n+    handleSave();\n+  };\n+\n+  const handleDiscard = () => {\n+    handleErrorModal();\n+    handleRefresh();\n+  };\n+\n+  const errorModal = () => {\n+    return (\n+      <Modal\n+        title=\"\"\n+        header={\n+          <>\n+            <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>\n+              <InfoCircleIcon\n+                className=\"pf-u-mr-sm\"\n+                color=\"var(--pf-global--danger-color--100)\"\n+              />\n+              Error\n+            </Title>\n+          </>\n+        }\n+        variant={ModalVariant.small}\n+        isOpen={errorModalOpen}\n+        onClose={handleErrorModal}\n+        actions={[\n+          <Button\n+            key=\"Retry\"\n+            variant=\"primary\"\n+            id=\"retry-button\"\n+            onClick={handleRetry}\n+          >\n+            Retry\n+          </Button>,\n+          <Button\n+            key=\"Discard\"\n+            variant=\"link\"\n+            id=\"discard-button\"\n+            onClick={handleDiscard}\n+          >\n+            Discard\n+          </Button>\n+        ]}\n+        aria-label=\"Error modal\"\n+        aria-labelledby=\"Error modal\"\n+      >\n+        {variableError}\n+      </Modal>\n+    );\n+  };\n+\n+  const updateVariables = () => {", "originalCommit": "289d257efe301e27652059ff09ee10f19e2c4743", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5MTUyMQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475591521", "bodyText": "can we introduce a function here similarly to the other buttons above?", "author": "jstastny-cz", "createdAt": "2020-08-24T13:16:13Z", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -245,7 +424,20 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<MatchProps, {}, {}> &\n                       <OverflowMenu breakpoint=\"lg\">\n                         <OverflowMenuContent isPersistent>\n                           <OverflowMenuGroup groupType=\"button\" isPersistent>\n-                            {abortButton()}\n+                            <>\n+                              {updateVariables()}\n+                              {abortButton()}\n+                              <Button\n+                                variant=\"plain\"\n+                                onClick={() => {\n+                                  handleRefresh();\n+                                }}\n+                                id=\"refresh-button\"\n+                                aria-label={'Refresh list'}\n+                              >\n+                                <SyncIcon />\n+                              </Button>", "originalCommit": "289d257efe301e27652059ff09ee10f19e2c4743", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5MzEwNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475593107", "bodyText": "What's the target here? Do we want to just provide option to edit the existing variables? There's no expectation of us allowing adding or removing variables? Cause here, we're not displaying the component unless there's at least one variable ...\nI'd rather display the component all the time, and leave up to the component rendering how that's presented.", "author": "jstastny-cz", "createdAt": "2020-08-24T13:18:45Z", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -257,12 +449,22 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<MatchProps, {}, {}> &\n                     <ProcessDetails data={data} from={currentPage} />\n                   </GridItem>\n                 )}\n-                <GridItem>\n-                  <ProcessDetailsProcessVariables data={data} />\n-                </GridItem>\n+                {Object.keys(updateJson).length > 0 && (", "originalCommit": "289d257efe301e27652059ff09ee10f19e2c4743", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYyMzY4Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475623687", "bodyText": "@jstastny-cz\n\nIdea of this PR is just to add update functionality on process variables, Add and Delete functionalities will be part of the next PR.\n\"updateJson\" always has a variable object in it, on page load updateJson state would be added with variable object and since it is an async process I am just delaying the render until updateJson state is updated. The component is displayed all the time.", "author": "Sara4994", "createdAt": "2020-08-24T13:52:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5MzEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5Mzc0Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475593746", "bodyText": "I would expect all variable-related functions and modals to be in the ProcessDetailsProcessVariables component", "author": "jstastny-cz", "createdAt": "2020-08-24T13:19:49Z", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -96,6 +111,170 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<MatchProps, {}, {}> &\n         )\n     );\n   };\n+\n+  useEffect(() => {\n+    if (data) {\n+      setUpdateJson(JSON.parse(data.ProcessInstances[0].variables));\n+    }\n+  }, [data]);\n+\n+  useEffect(() => {\n+    if (variableError && variableError.length > 0) {\n+      setErrorModalOpen(true);\n+    }\n+  }, [variableError]);\n+\n+  const handleSave = async () => {", "originalCommit": "289d257efe301e27652059ff09ee10f19e2c4743", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYzNTU2MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/405#discussion_r475635560", "bodyText": "@jstastny-cz If you check the UI, the save and refresh buttons are placed above the panels they are not placed inside processVariables panel. Even on code the buttons are placed in the container component(ProcessDetailsPage.tsx), so I feel its better to keep those handler functions on the container component itself. This would also avoid passing too many props  to the child component", "author": "Sara4994", "createdAt": "2020-08-24T14:02:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5Mzc0Ng=="}], "type": "inlineReview"}, {"oid": "62baaf346517d255bbd38d849266c17112a367ec", "url": "https://github.com/kiegroup/kogito-apps/commit/62baaf346517d255bbd38d849266c17112a367ec", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-24T14:12:55Z", "type": "forcePushed"}, {"oid": "ab1a08748416eefff6e60eefce17b0c3387c9b98", "url": "https://github.com/kiegroup/kogito-apps/commit/ab1a08748416eefff6e60eefce17b0c3387c9b98", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-25T07:13:19Z", "type": "forcePushed"}, {"oid": "f56d5f153017277fda71c04d9cc78f4cade13152", "url": "https://github.com/kiegroup/kogito-apps/commit/f56d5f153017277fda71c04d9cc78f4cade13152", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-25T10:43:30Z", "type": "forcePushed"}, {"oid": "e6c9c6f63905511ce8388671e4cb9634bc1942d1", "url": "https://github.com/kiegroup/kogito-apps/commit/e6c9c6f63905511ce8388671e4cb9634bc1942d1", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-26T08:19:44Z", "type": "commit"}, {"oid": "e6c9c6f63905511ce8388671e4cb9634bc1942d1", "url": "https://github.com/kiegroup/kogito-apps/commit/e6c9c6f63905511ce8388671e4cb9634bc1942d1", "message": "KOGITO-2022: Update feature on process variables", "committedDate": "2020-08-26T08:19:44Z", "type": "forcePushed"}]}