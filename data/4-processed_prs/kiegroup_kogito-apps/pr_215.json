{"pr_number": 215, "pr_title": "KOGITO-1166 Unable to execute a job with expiration time in past", "pr_createdAt": "2020-05-12T16:31:22Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/215", "timeline": [{"oid": "d3e4eaf617793a216cba89a6e7548e75ddf964c7", "url": "https://github.com/kiegroup/kogito-apps/commit/d3e4eaf617793a216cba89a6e7548e75ddf964c7", "message": "KOGITO-1166 Unable to execute a job with expiration time in past\n\nAdd javadoc to the config property", "committedDate": "2020-05-12T16:28:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4MDgxOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424280818", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Flag to allow anf force a job with expirationTime in the past to be executed immediately. If false and\n          \n          \n            \n                 * exception will be thrown.\n          \n          \n            \n                 * Flag to allow and force a job with expirationTime in the past to be executed immediately. If false an\n          \n          \n            \n                 * exception will be thrown.", "author": "radtriste", "createdAt": "2020-05-13T08:56:30Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -55,6 +55,13 @@\n     @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\")\n     long maxIntervalLimitToRetryMillis;\n \n+    /**\n+     * Flag to allow anf force a job with expirationTime in the past to be executed immediately. If false and\n+     * exception will be thrown.", "originalCommit": "d3e4eaf617793a216cba89a6e7548e75ddf964c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4MzAxMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424283012", "bodyText": "should we enable it by default ?", "author": "radtriste", "createdAt": "2020-05-13T09:00:01Z", "path": "jobs-service/src/main/resources/application.properties", "diffHunk": "@@ -60,6 +60,7 @@ kogito.jobs-service.backoffRetryMillis=1000\n kogito.service.url=http://localhost:8080\n kogito.jobs-service.schedulerChunkInMinutes=10\n kogito.jobs-service.loadJobIntervalInMinutes=10\n+kogito.jobs-service.forceExecuteExpiredJobs=true", "originalCommit": "d3e4eaf617793a216cba89a6e7548e75ddf964c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM4MjU3MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424382570", "bodyText": "we need to decide it, to keep the jbpm behavior it should be true, but we can change with configuration, so up to us to define the default value, wdyt?", "author": "tiagodolphine", "createdAt": "2020-05-13T12:02:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4MzAxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzOTc0MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424539740", "bodyText": "let's keep jbpm behavior so we don't confuse the users", "author": "radtriste", "createdAt": "2020-05-13T15:42:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4MzAxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NDk4MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424284981", "bodyText": "only minus one day ? this is quite arbitrary ... shouldn't that be also configurable ?", "author": "radtriste", "createdAt": "2020-05-13T09:03:06Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/JobSchedulerManager.java", "diffHunk": "@@ -99,7 +99,8 @@ void loadScheduledJobs() {\n     }\n \n     private PublisherBuilder<ScheduledJob> loadJobsInCurrentChunk() {\n-        return repository.findByStatusBetweenDatesOrderByPriority(DateUtil.now(), DateUtil.now().plusMinutes(schedulerChunkInMinutes),\n+        return repository.findByStatusBetweenDatesOrderByPriority(DateUtil.now().minusDays(1),", "originalCommit": "d3e4eaf617793a216cba89a6e7548e75ddf964c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM4MTk2NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424381965", "bodyText": "yep, I agree, in fact I added this during the tests to allow when loading persisted jobs, to schedule \"expired\" ones when the force configuration set, but it should be a configuration parameter indeed. Any suggestion for the default value/time for instance minutes, hours, days, etc.", "author": "tiagodolphine", "createdAt": "2020-05-13T12:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NDk4MQ=="}], "type": "inlineReview"}, {"oid": "17287f3ed9ea4df659e78fd6d8b8012281f7400a", "url": "https://github.com/kiegroup/kogito-apps/commit/17287f3ed9ea4df659e78fd6d8b8012281f7400a", "message": "Update jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java\n\nCo-authored-by: Tristan Radisson <tristan.radisson@gmail.com>", "committedDate": "2020-05-13T12:03:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxODM2Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424418362", "bodyText": "Is there any specific reason to use Optional here?\nThe property is specified in application.properties anyway.", "author": "sutaakar", "createdAt": "2020-05-13T13:02:02Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -55,6 +55,13 @@\n     @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\")\n     long maxIntervalLimitToRetryMillis;\n \n+    /**\n+     * Flag to allow and force a job with expirationTime in the past to be executed immediately. If false an\n+     * exception will be thrown.\n+     */\n+    @ConfigProperty(name = \"kogito.jobs-service.forceExecuteExpiredJobs\")\n+    Optional<Boolean> forceExecuteExpiredJobs;", "originalCommit": "17287f3ed9ea4df659e78fd6d8b8012281f7400a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyNDMzOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424424339", "bodyText": "The property is used on the calculateInterval method where I prefer to use a functional approach there, otherwise, I would need to use Optional.of()... anyway any specific reason to not use Optional?", "author": "tiagodolphine", "createdAt": "2020-05-13T13:11:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxODM2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ3MTA0Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424471047", "bodyText": "I was just curious what is the rationale behind.\nOk to be kept like that.", "author": "sutaakar", "createdAt": "2020-05-13T14:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxODM2Mg=="}], "type": "inlineReview"}, {"oid": "04be9ce94ddb16a3dd44e8f7771de8d568f8f4c4", "url": "https://github.com/kiegroup/kogito-apps/commit/04be9ce94ddb16a3dd44e8f7771de8d568f8f4c4", "message": "Adding configuration property to be used on load jobs method on the date parameter from", "committedDate": "2020-05-13T13:58:33Z", "type": "commit"}]}