{"pr_number": 443, "pr_title": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)", "pr_createdAt": "2020-09-04T19:16:54Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/443", "timeline": [{"oid": "06abee37ad65117df11e64e0aeb3cbbf08f4b726", "url": "https://github.com/kiegroup/kogito-apps/commit/06abee37ad65117df11e64e0aeb3cbbf08f4b726", "message": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)\n\nInserting topic config into test properties", "committedDate": "2020-09-04T19:35:12Z", "type": "forcePushed"}, {"oid": "5222e30a194acab82d32b24b2872f49c75522867", "url": "https://github.com/kiegroup/kogito-apps/commit/5222e30a194acab82d32b24b2872f49c75522867", "message": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)\n\nInserting topic config into test properties\n\nFix JobRepositoryDelegate", "committedDate": "2020-09-05T11:34:33Z", "type": "commit"}, {"oid": "5222e30a194acab82d32b24b2872f49c75522867", "url": "https://github.com/kiegroup/kogito-apps/commit/5222e30a194acab82d32b24b2872f49c75522867", "message": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)\n\nInserting topic config into test properties\n\nFix JobRepositoryDelegate", "committedDate": "2020-09-05T11:34:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNDI5OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484204299", "bodyText": "I think this is a leftover.", "author": "Sgitario", "createdAt": "2020-09-07T06:19:21Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/impl/InMemoryJobRepository.java", "diffHunk": "@@ -27,6 +27,7 @@\n import java.util.stream.Stream;\n \n import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Default;", "originalCommit": "5222e30a194acab82d32b24b2872f49c75522867", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNDUzMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484204530", "bodyText": "The import \"Default\" has to be deleted as it's not used any longer.", "author": "Sgitario", "createdAt": "2020-09-07T06:20:04Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/impl/JobRepositoryDelegate.java", "diffHunk": "@@ -36,7 +37,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-@Default", "originalCommit": "5222e30a194acab82d32b24b2872f49c75522867", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3MzczOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r485373739", "bodyText": "@tiagodolphine remove Default import?", "author": "cristianonicolai", "createdAt": "2020-09-09T06:42:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNDUzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTUwNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484205507", "bodyText": "I think it's clearer using the .orElse() method:\n.orElse(() -> HealthCheckResponse.up(\"Default persistence\"));", "author": "Sgitario", "createdAt": "2020-09-07T06:22:40Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/infinispan/InfinispanConfiguration.java", "diffHunk": "@@ -46,12 +48,12 @@ private Caches() {\n \n     @Produces\n     @Readiness\n-    public InfinispanHealthCheck infinispanHealthCheck(@ConfigProperty(name = PERSISTENCE_CONFIG_KEY)\n-                                                               Optional<String> persistence,\n-                                                       Instance<RemoteCacheManager> cacheManagerInstance) {\n+    public HealthCheck infinispanHealthCheck(@ConfigProperty(name = PERSISTENCE_CONFIG_KEY)\n+                                                     Optional<String> persistence,\n+                                             Instance<RemoteCacheManager> cacheManagerInstance) {\n         return persistence\n                 .filter(\"infinispan\"::equals)\n-                .map(p -> new InfinispanHealthCheck(cacheManagerInstance))\n-                .orElse(null);\n+                .<HealthCheck>map(p -> new InfinispanHealthCheck(cacheManagerInstance))\n+                .orElseGet(() -> () -> HealthCheckResponse.up(\"Default persistence\"));", "originalCommit": "5222e30a194acab82d32b24b2872f49c75522867", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIxMTMyMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484211323", "bodyText": "Also, maybe it should say \"In Memory Persistence\"? What do you think?", "author": "Sgitario", "createdAt": "2020-09-07T06:38:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTUwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTYyMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484205620", "bodyText": "The format added some whitespaces here.", "author": "Sgitario", "createdAt": "2020-09-07T06:22:57Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/infinispan/InfinispanConfiguration.java", "diffHunk": "@@ -46,12 +48,12 @@ private Caches() {\n \n     @Produces\n     @Readiness\n-    public InfinispanHealthCheck infinispanHealthCheck(@ConfigProperty(name = PERSISTENCE_CONFIG_KEY)\n-                                                               Optional<String> persistence,\n-                                                       Instance<RemoteCacheManager> cacheManagerInstance) {", "originalCommit": "5222e30a194acab82d32b24b2872f49c75522867", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTc0NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484205744", "bodyText": "Leftover", "author": "Sgitario", "createdAt": "2020-09-07T06:23:16Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/infinispan/InfinispanJobRepository.java", "diffHunk": "@@ -22,6 +22,7 @@\n import java.util.stream.Collectors;\n \n import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Default;", "originalCommit": "5222e30a194acab82d32b24b2872f49c75522867", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNjg3MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484206871", "bodyText": "I was told that if we enable the events, then the topics must be created in Data Index (see comment).\nSo, as I understood, we don't need to create any topic here, just to wait until data index component creates it.", "author": "Sgitario", "createdAt": "2020-09-07T06:26:20Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/stream/KafkaConfiguration.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.kogito.jobs.service.stream;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.enterprise.inject.Instance;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import io.quarkus.runtime.Startup;\n+import io.quarkus.runtime.StartupEvent;\n+import io.vertx.kafka.admin.NewTopic;\n+import io.vertx.mutiny.core.Vertx;\n+import io.vertx.mutiny.kafka.admin.KafkaAdminClient;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.kie.kogito.jobs.service.stream.KafkaJobStreams.PUBLISH_EVENTS_CONFIG_KEY;\n+\n+@Startup\n+@ApplicationScoped\n+public class KafkaConfiguration {", "originalCommit": "5222e30a194acab82d32b24b2872f49c75522867", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyMDg3NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484220875", "bodyText": "But IMHO the Data index component is not mandatory for Jobs service. So I think that topic creation is ok in this case.", "author": "sutaakar", "createdAt": "2020-09-07T07:02:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNjg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyMTkzMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484221932", "bodyText": "If so, then we should add some unit tests to cover this functionality. cc @tiagodolphine", "author": "Sgitario", "createdAt": "2020-09-07T07:04:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNjg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1MjE5Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484852193", "bodyText": "IMO since the topic is an infrastructure requirement it should be created by the operator, this method is just to make things easier to test and a kind of fallback in case the topic is not yet created. And in this case, job service is the producer, it is not coupled with data-index, I mean it could produce events even if data-index is not up and running or even not present on the architecture.\n@Sgitario yeah, it would be great to add some unit tests, I'll provide it.", "author": "tiagodolphine", "createdAt": "2020-09-08T11:42:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNjg3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNzI2MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484207260", "bodyText": "Is this correct? I would say that the correct property is \"quarkus.kafka.bootstrap-servers\"", "author": "Sgitario", "createdAt": "2020-09-07T06:27:22Z", "path": "jobs-service/src/main/resources/application.properties", "diffHunk": "@@ -67,18 +67,23 @@ kogito.jobs-service.loadJobIntervalInMinutes=10\n kogito.jobs-service.loadJobFromCurrentTimeIntervalInMinutes=60\n kogito.jobs-service.forceExecuteExpiredJobs=true\n \n+#Removing beans related to Kafka from CDI when eventing is not enabled\n+quarkus.arc.exclude-types=io.smallrye.reactive.messaging.health.*,org.kie.kogito.jobs.service.stream.KafkaConfiguration\n+\n #Configure Events Publishing on Job Service using profile\n #disabled by default\n kogito.jobs-service.events-support=false\n+kogito.jobs-events-topic=kogito-jobs-events\n \n #enabled with the profile: 'events-support' (-Dquarkus.profile=events-support)\n %events-support.quarkus.kafka.health.enabled=true\n-%events-support.quarkus.kafka.bootstrap-servers=localhost:9092\n+%events-support.kafka.bootstrap-servers=localhost:9092", "originalCommit": "5222e30a194acab82d32b24b2872f49c75522867", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5MTc3Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r485091773", "bodyText": "The config parameter that is used on the health check is kafka.bootstrap.servers, so to make it work I updated the parameter.\nSee\n\n\nhttps://quarkus.io/guides/kafka#configuring-the-kafka-connector\n\n\nhttps://github.com/smallrye/smallrye-reactive-messaging/blob/1363208592737dc196a655176c807696e27f6111/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/KafkaConnector.java#L50", "author": "tiagodolphine", "createdAt": "2020-09-08T17:43:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNzI2MA=="}], "type": "inlineReview"}, {"oid": "41e13119f42419f57431d73696740e73902776a6", "url": "https://github.com/kiegroup/kogito-apps/commit/41e13119f42419f57431d73696740e73902776a6", "message": "Applying PR comments + IT for KafkaConfiguration", "committedDate": "2020-09-08T17:41:46Z", "type": "commit"}, {"oid": "8efc3c2ea83aff5be52b3e1267b044e598147c3e", "url": "https://github.com/kiegroup/kogito-apps/commit/8efc3c2ea83aff5be52b3e1267b044e598147c3e", "message": "Removing used import from JobRepositoryDelegate", "committedDate": "2020-09-09T13:15:51Z", "type": "commit"}]}