{"pr_number": 131, "pr_title": "KOGITO-1299: added fallback UI when server unavailable", "pr_createdAt": "2020-03-30T07:31:53Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/131", "timeline": [{"oid": "8276d2e58daf47e0eb772f536fddaff7f3ad40bf", "url": "https://github.com/kiegroup/kogito-apps/commit/8276d2e58daf47e0eb772f536fddaff7f3ad40bf", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-03-30T07:48:13Z", "type": "forcePushed"}, {"oid": "7e7d017a3893581c8fed48b1d308c8251fbfcf9a", "url": "https://github.com/kiegroup/kogito-apps/commit/7e7d017a3893581c8fed48b1d308c8251fbfcf9a", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-03-30T07:56:56Z", "type": "forcePushed"}, {"oid": "8457cccbaa53bc1452d71e2a96d635380614feb4", "url": "https://github.com/kiegroup/kogito-apps/commit/8457cccbaa53bc1452d71e2a96d635380614feb4", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-03-30T12:09:56Z", "type": "forcePushed"}, {"oid": "45c4d9cd0187c5bbe8eadf996b8a97340180b0c2", "url": "https://github.com/kiegroup/kogito-apps/commit/45c4d9cd0187c5bbe8eadf996b8a97340180b0c2", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-03-30T13:46:45Z", "type": "forcePushed"}, {"oid": "dbae9c62ce73bde4a349a4c8f9de7c3df1c46000", "url": "https://github.com/kiegroup/kogito-apps/commit/dbae9c62ce73bde4a349a4c8f9de7c3df1c46000", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-03-31T10:30:58Z", "type": "forcePushed"}, {"oid": "60fccf0aadc92a7aa2fa2d9dd43a9d8d1391e48e", "url": "https://github.com/kiegroup/kogito-apps/commit/60fccf0aadc92a7aa2fa2d9dd43a9d8d1391e48e", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-03-31T10:41:40Z", "type": "forcePushed"}, {"oid": "2ca94767fba6c47cbd7323b9e00409a78ac1a215", "url": "https://github.com/kiegroup/kogito-apps/commit/2ca94767fba6c47cbd7323b9e00409a78ac1a215", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-03-31T11:35:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAwMjgyMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401002820", "bodyText": "Please change this text to An error occurred while accessing data.", "author": "srambach", "createdAt": "2020-03-31T15:24:31Z", "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,59 @@\n+import React from 'react';\n+\n+import {\n+    DataToolbar,\n+    DataToolbarContent,\n+    DataToolbarToggleGroup,\n+    DataToolbarGroup,\n+    PageSection,\n+    Breadcrumb,\n+    BreadcrumbItem,\n+    Card,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover, PopoverPosition,\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const history = useHistory();\n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        Below error occured on graphql while accessing data. ", "originalCommit": "2ca94767fba6c47cbd7323b9e00409a78ac1a215", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAwNTMwMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401005303", "bodyText": "@srambach done", "author": "Sara4994", "createdAt": "2020-03-31T15:27:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAwMjgyMA=="}], "type": "inlineReview"}, {"oid": "0d84b68f4a795f61876568cc6a7dc8cc5368b99c", "url": "https://github.com/kiegroup/kogito-apps/commit/0d84b68f4a795f61876568cc6a7dc8cc5368b99c", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-03-31T15:26:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2NjAxOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401366019", "bodyText": "@Sara4994 would it be something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            <Link to={{pathname:'/ProcessInstances/Process/' + processInstanceData.id, state:{ prev: location.pathname}}}>\n          \n          \n            \n                            <Link to={{pathname:'/Process/' + processInstanceData.id, state:{ prev: location.pathname}}}>", "author": "cristianonicolai", "createdAt": "2020-04-01T05:36:53Z", "path": "packages/management-console/src/components/Molecules/DataListItemComponent/DataListItemComponent.tsx", "diffHunk": "@@ -526,7 +526,7 @@ const DataListItemComponent: React.FC<IOwnProps> = ({\n           <DataListItemCells\n             dataListCells={[\n               <DataListCell key={1}>\n-                <Link to={'/ProcessInstances/' + processInstanceData.id}>\n+                <Link to={{pathname:'/ProcessInstances/Process/' + processInstanceData.id, state:{ prev: location.pathname}}}>", "originalCommit": "0d84b68f4a795f61876568cc6a7dc8cc5368b99c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2NzE5Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401367192", "bodyText": "that would also mean that we need to add a line here https://github.com/kiegroup/kogito-apps/blob/master/management-console/src/main/java/org/kie/kogito/mgmt/VertxRouter.java#L43\nto handle the new path in the UI.\nAs well as updating this test https://github.com/kiegroup/kogito-apps/blob/master/management-console/src/test/java/org/kie/kogito/mgmt/VertxRouterTest.java#L17", "author": "cristianonicolai", "createdAt": "2020-04-01T05:41:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2NjAxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUyODI1NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401528255", "bodyText": "@cristianonicolai done", "author": "Sara4994", "createdAt": "2020-04-01T10:55:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2NjAxOQ=="}], "type": "inlineReview"}, {"oid": "14aad5112405d40590d6f467a2eea8f08c1957fc", "url": "https://github.com/kiegroup/kogito-apps/commit/14aad5112405d40590d6f467a2eea8f08c1957fc", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-01T07:28:04Z", "type": "forcePushed"}, {"oid": "295539042c2135c1178617aa621f2c99a32554ad", "url": "https://github.com/kiegroup/kogito-apps/commit/295539042c2135c1178617aa621f2c99a32554ad", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-01T10:48:20Z", "type": "forcePushed"}, {"oid": "94682dcccf4001d025e003a3561191ceaf24d7ea", "url": "https://github.com/kiegroup/kogito-apps/commit/94682dcccf4001d025e003a3561191ceaf24d7ea", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-01T10:49:18Z", "type": "forcePushed"}, {"oid": "08b4d0c558fccc11e1a891c372c357c439a8701c", "url": "https://github.com/kiegroup/kogito-apps/commit/08b4d0c558fccc11e1a891c372c357c439a8701c", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-01T10:50:44Z", "type": "forcePushed"}, {"oid": "a264bb7235673c9360ce62a5892c6b446b83bd83", "url": "https://github.com/kiegroup/kogito-apps/commit/a264bb7235673c9360ce62a5892c6b446b83bd83", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-01T10:54:25Z", "type": "forcePushed"}, {"oid": "e0f284c48cca2e76e74a33443999ae45dd64e98f", "url": "https://github.com/kiegroup/kogito-apps/commit/e0f284c48cca2e76e74a33443999ae45dd64e98f", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-01T11:04:31Z", "type": "forcePushed"}, {"oid": "12e05c89571cfafeef494ffe26f43d0d30cfef69", "url": "https://github.com/kiegroup/kogito-apps/commit/12e05c89571cfafeef494ffe26f43d0d30cfef69", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-02T15:17:31Z", "type": "forcePushed"}, {"oid": "d6e0a5d3a5cfe777e26925bb321045febe4d3c38", "url": "https://github.com/kiegroup/kogito-apps/commit/d6e0a5d3a5cfe777e26925bb321045febe4d3c38", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-02T15:30:35Z", "type": "forcePushed"}, {"oid": "85a76a59c65d7c6202197ea2b4cf7c9725582836", "url": "https://github.com/kiegroup/kogito-apps/commit/85a76a59c65d7c6202197ea2b4cf7c9725582836", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-02T15:31:47Z", "type": "forcePushed"}, {"oid": "7719fd3fbbb7efc8dd5a822b9e234e5f29c54ec4", "url": "https://github.com/kiegroup/kogito-apps/commit/7719fd3fbbb7efc8dd5a822b9e234e5f29c54ec4", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-02T15:33:56Z", "type": "forcePushed"}, {"oid": "bcd5ae856f299811876c81836046f142a035c520", "url": "https://github.com/kiegroup/kogito-apps/commit/bcd5ae856f299811876c81836046f142a035c520", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-03T04:51:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5Mzc4NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r402793785", "bodyText": "@Sara4994 shouldn't this stay for when users hit url directly without a previous state?", "author": "cristianonicolai", "createdAt": "2020-04-03T07:42:59Z", "path": "packages/management-console/src/components/Molecules/NoDataComponent/NoDataComponent.tsx", "diffHunk": "@@ -18,8 +18,6 @@ const NoDataComponent = (props) => {\n     let prevPath;\n     if (props.location.state !== undefined) {\n         prevPath = props.location.state.prev;\n-    } else {\n-        prevPath = '/ProcessInstances'", "originalCommit": "bcd5ae856f299811876c81836046f142a035c520", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNDE4OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403004189", "bodyText": "@cristianonicolai yep removed by mistake, added it back. thanks", "author": "Sara4994", "createdAt": "2020-04-03T13:27:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5Mzc4NQ=="}], "type": "inlineReview"}, {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73", "url": "https://github.com/kiegroup/kogito-apps/commit/421db7e105d66363e3a1c75f1a805aadb0137e73", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-03T08:00:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNDcxNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r402824717", "bodyText": "@Sara4994 The new route \"/Process*\" includes \"/ProcessInstances*. Here I think we have to remove the line: router.route(\"/ProcessInstances*\").handler(ctx -> handle(ctx)); and let just the new route.", "author": "nmirasch", "createdAt": "2020-04-03T08:21:54Z", "path": "management-console/src/main/java/org/kie/kogito/mgmt/VertxRouter.java", "diffHunk": "@@ -41,6 +41,7 @@ public void init() {\n     void setupRouter(@Observes Router router) {\n         router.route(\"/\").handler(ctx -> ctx.response().putHeader(\"location\", \"/ProcessInstances/\").setStatusCode(302).end());\n         router.route(\"/ProcessInstances*\").handler(ctx -> handle(ctx));\n+        router.route(\"/Process*\").handler(ctx -> handle(ctx));", "originalCommit": "421db7e105d66363e3a1c75f1a805aadb0137e73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMDIzNg==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403010236", "bodyText": "@nmirasch but actually these two are different routes that directs us to two different pages, '/ProcessInstances' will take us to process list page and '/Process' will take us to process details page. should we still remove the line: router.route(\"/ProcessInstances*\").handler(ctx -> handle(ctx));?", "author": "Sara4994", "createdAt": "2020-04-03T13:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNDcxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg1MjIwMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403852203", "bodyText": "@Sara4994 point is that /Process* will also match the same urls, because of the pattern matching, so the line with /ProcessInstances* should be removed or you can simply update that one.", "author": "cristianonicolai", "createdAt": "2020-04-06T06:19:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNDcxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNTY2Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r402825667", "bodyText": "@Sara4994 maybe remove the comment :)", "author": "nmirasch", "createdAt": "2020-04-03T08:23:02Z", "path": "packages/management-console/src/index.tsx", "diffHunk": "@@ -1,15 +1,36 @@\n import '@patternfly/patternfly/patternfly.css';\n import React from 'react';\n import ReactDOM from 'react-dom';\n-import ApolloClient from 'apollo-boost';\n+import { ApolloClient } from 'apollo-client';\n+// import ApolloClient from 'apollo-boost';", "originalCommit": "421db7e105d66363e3a1c75f1a805aadb0137e73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMDY0OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403010648", "bodyText": "@nmirasch this is done :)", "author": "Sara4994", "createdAt": "2020-04-03T13:37:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNTY2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMzgxMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403003813", "bodyText": "We can left align the text and make it more readable by adding className=\"pf-u-text-align-left\" to the ClipboardCopy.", "author": "srambach", "createdAt": "2020-04-03T13:26:55Z", "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,51 @@\n+import React,{useState} from 'react';\n+\n+import {\n+    PageSection,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover,\n+    ClipboardCopy,\n+    ClipboardCopyVariant\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const [displayError, setDisplayError] = useState(false)\n+    const history = useHistory();\n+    \n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        An error occured while accessing data. <strong className=\"kogito-management-console--Server-Errors__text-color\" onClick={() => setDisplayError(!displayError)}> See more details</strong>\n+                    </EmptyStateBody>\n+                    {displayError &&<EmptyStateBody>\n+                        <ClipboardCopy isCode variant={ClipboardCopyVariant.expansion} isExpanded={true}>{JSON.stringify(props.message)}</ClipboardCopy>             ", "originalCommit": "421db7e105d66363e3a1c75f1a805aadb0137e73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0ODAxNQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403048015", "bodyText": "@srambach done:)", "author": "Sara4994", "createdAt": "2020-04-03T14:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMzgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1NTYzOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403055639", "bodyText": "Sorry, one more thing - I missed that \"occurred\" is still spelled incorrectly. 2 rs.", "author": "srambach", "createdAt": "2020-04-03T14:42:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMzgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1ODgxOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403058819", "bodyText": "@srambach done )", "author": "Sara4994", "createdAt": "2020-04-03T14:47:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMzgxMw=="}], "type": "inlineReview"}, {"oid": "46789bd7c8743ef9baea8ec6ac1e8e2f13c85820", "url": "https://github.com/kiegroup/kogito-apps/commit/46789bd7c8743ef9baea8ec6ac1e8e2f13c85820", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-03T13:40:29Z", "type": "forcePushed"}, {"oid": "f23e3fe1dc0de4e09ad09c1ccc34532325ab47f1", "url": "https://github.com/kiegroup/kogito-apps/commit/f23e3fe1dc0de4e09ad09c1ccc34532325ab47f1", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-03T14:30:57Z", "type": "forcePushed"}, {"oid": "a97d9cda0a730c115ab9616c1947de99d95f256a", "url": "https://github.com/kiegroup/kogito-apps/commit/a97d9cda0a730c115ab9616c1947de99d95f256a", "message": "KOGITO-1299: added fallback UI when server unavailable\n\nplease enter the commit message for your changes. Lines starting", "committedDate": "2020-04-03T14:47:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MzA1MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403073050", "bodyText": "The \"See more details\" needs to be coded as a link or button. Otherwise, it is not accessible using the keyboard. <Button variant=\"link\" isInline onClick={() => setDisplayError(!displayError)}>See more details</Button> should work for you I think. We don't need the <strong> tag and don't need to set the text color or cursor with a new class since that will come from the link. So that CSS can also be removed.", "author": "srambach", "createdAt": "2020-04-03T15:08:03Z", "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,51 @@\n+import React,{useState} from 'react';\n+\n+import {\n+    PageSection,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover,\n+    ClipboardCopy,\n+    ClipboardCopyVariant\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const [displayError, setDisplayError] = useState(false)\n+    const history = useHistory();\n+    \n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        An error occurred while accessing data. <strong className=\"kogito-management-console--Server-Errors__text-color\" onClick={() => setDisplayError(!displayError)}> See more details</strong>", "originalCommit": "a97d9cda0a730c115ab9616c1947de99d95f256a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4Njg1MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403686851", "bodyText": "@srambach done. Thanks \ud83d\udc4d", "author": "Sara4994", "createdAt": "2020-04-05T11:16:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MzA1MA=="}], "type": "inlineReview"}, {"oid": "ec6737121ceaa4d164027c98c42bd2a4837ebb15", "url": "https://github.com/kiegroup/kogito-apps/commit/ec6737121ceaa4d164027c98c42bd2a4837ebb15", "message": "KOGITO-1299: added fallback UI when server unavailable", "committedDate": "2020-04-05T11:12:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyNTAwOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403825009", "bodyText": "@Sara4994 remove comment out code please", "author": "cristianonicolai", "createdAt": "2020-04-06T04:34:52Z", "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "diffHunk": "@@ -122,7 +124,8 @@ const DomainExplorerColumnPicker: React.FC<IOwnProps> = ({\n             }\n           });\n       } catch (error) {\n-        return error;\n+        setError(error)\n+        // return error;", "originalCommit": "ec6737121ceaa4d164027c98c42bd2a4837ebb15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgzNzI4Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403837287", "bodyText": "@cristianonicolai done", "author": "Sara4994", "createdAt": "2020-04-06T05:28:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyNTAwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyNTExMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403825110", "bodyText": "please remove comment out code", "author": "cristianonicolai", "createdAt": "2020-04-06T04:35:31Z", "path": "packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -128,94 +140,162 @@ const ProcessDetailsPage = ({ match }) => {\n \n   return (\n     <>\n-      <PageSection variant=\"light\">\n-        <ProcessBulkModalComponent\n-          isModalLarge={false}\n-          isModalOpen={isAbortModalOpen}\n-          handleModalToggle={handleAbortModalToggle}\n-          checkedArray={data && [data.ProcessInstances[0].state]}\n-          modalTitle={\n-            titleType === 'success'\n-              ? setTitle('success', 'Abort operation')\n-              : setTitle('failure', 'Abort operation')\n-          }\n-          isSingleAbort={true}\n-          abortedMessageObj={\n-            data && {\n-              [data.ProcessInstances[0].id]: data.ProcessInstances[0]\n-            }\n-          }\n-          completedMessageObj={{}}\n-          isAbortModalOpen={isAbortModalOpen}\n-        />\n-        <PageTitleComponent title=\"Process Details\" />\n-        {!loading ? (\n-          <Grid gutter=\"md\" span={12} lg={6} xl={4}>\n-            <GridItem span={12}>\n-              <Breadcrumb>\n-                <BreadcrumbItem>\n-                  <Link to={'/'}>Home</Link>\n-                </BreadcrumbItem>\n-                <BreadcrumbItem>\n-                  <Link to={'/ProcessInstances/'}>Process Instances</Link>\n-                </BreadcrumbItem>\n-                <BreadcrumbItem isActive>\n-                  {data.ProcessInstances[0].processName}\n-                </BreadcrumbItem>\n-              </Breadcrumb>\n-            </GridItem>\n-          </Grid>\n-        ) : (\n-          ''\n-        )}\n-      </PageSection>\n-      <PageSection>\n-        {!loading ? (\n-          <Grid gutter=\"md\" span={12} lg={6} xl={4}>\n-            <GridItem span={12}>\n-              <Split\n-                gutter={'md'}\n-                component={'div'}\n-                className=\"pf-u-align-items-center\"\n-              >\n-                <SplitItem isFilled={true}>\n-                  <Title headingLevel=\"h1\" size=\"4xl\">\n-                    <ProcessDescriptor\n-                      processInstanceData={data.ProcessInstances[0]}\n+      {!error ?\n+        (<>\n+          <PageSection variant=\"light\">\n+            <ProcessBulkModalComponent\n+              isModalLarge={false}\n+              isModalOpen={isAbortModalOpen}\n+              handleModalToggle={handleAbortModalToggle}\n+              checkedArray={data && [data.ProcessInstances[0].state]}\n+              modalTitle={\n+                titleType === 'success'\n+                  ? setTitle('success', 'Abort operation')\n+                  : setTitle('failure', 'Abort operation')\n+              }\n+              isSingleAbort={true}\n+              abortedMessageObj={\n+                data && {\n+                  [data.ProcessInstances[0].id]: data.ProcessInstances[0]\n+                }\n+              }\n+              completedMessageObj={{}}\n+              isAbortModalOpen={isAbortModalOpen}\n+            />\n+            <PageTitleComponent title=\"Process Details\" />\n+            {!loading ?\n+              (<Grid gutter=\"md\" span={12} lg={6} xl={4}>\n+                <GridItem span={12}>\n+                  <Breadcrumb>\n+                    <BreadcrumbItem>\n+                      <Link to={'/'}>Home</Link>\n+                    </BreadcrumbItem>\n+                    {BreadCrumb.map((item, index) => {\n+                      return (\n+                        <BreadcrumbItem key={index}>\n+                          <Link to={BreadCrumbRoute[index]}>\n+                            {item.replace(/([A-Z])/g, ' $1').trim()}\n+                          </Link>\n+                        </BreadcrumbItem>\n+                      );\n+                      // }\n+                    })}\n+                    <BreadcrumbItem isActive>\n+                      {data.ProcessInstances[0].processName}\n+                    </BreadcrumbItem>\n+                  </Breadcrumb>\n+                </GridItem>\n+              </Grid>\n+              ) : ''}\n+          </PageSection>\n+          <PageSection>\n+            {!loading ? (\n+              <Grid gutter=\"md\" span={12} lg={6} xl={4}>\n+                <GridItem span={12}>\n+                  <Split\n+                    gutter={'md'}\n+                    component={'div'}\n+                    className=\"pf-u-align-items-center\"\n+                  >\n+                    <SplitItem isFilled={true}>\n+                      <Title headingLevel=\"h1\" size=\"4xl\">\n+                        <ProcessDescriptor\n+                          processInstanceData={data.ProcessInstances[0]}\n+                        />\n+                      </Title>\n+                    </SplitItem>\n+                    <SplitItem>\n+                      <OverflowMenu breakpoint=\"lg\">\n+                        <OverflowMenuContent isPersistent>\n+                          <OverflowMenuGroup groupType=\"button\" isPersistent>\n+                            {abortButton()}\n+                          </OverflowMenuGroup>\n+                        </OverflowMenuContent>\n+                      </OverflowMenu>\n+                    </SplitItem>\n+                  </Split>\n+                </GridItem>\n+                {currentPage && <GridItem>\n+                  <ProcessDetails data={data} from={currentPage} />\n+                </GridItem>}\n+                <GridItem>\n+                  <ProcessDetailsProcessVariables data={data} />\n+                </GridItem>\n+                <GridItem>\n+                  <ProcessDetailsTimeline data={data.ProcessInstances} />\n+                </GridItem>\n+              </Grid>\n+            ) : (\n+                <Card>\n+                  <Bullseye>\n+                    <SpinnerComponent spinnerText=\"Loading process details...\" />\n+                  </Bullseye>\n+                </Card>\n+              )}\n+          </PageSection>\n+          </>):(<ServerErrorsComponent message={error.message} />)}\n+      </>);\n+      {/* {!error ?", "originalCommit": "ec6737121ceaa4d164027c98c42bd2a4837ebb15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgzNzM2MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403837361", "bodyText": "@cristianonicolai  done", "author": "Sara4994", "createdAt": "2020-04-06T05:28:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyNTExMA=="}], "type": "inlineReview"}, {"oid": "bd035c239e17bd73f0fadb524df9ad51e7ce244b", "url": "https://github.com/kiegroup/kogito-apps/commit/bd035c239e17bd73f0fadb524df9ad51e7ce244b", "message": "KOGITO-1299: added fallback UI when server unavailable", "committedDate": "2020-04-06T05:27:08Z", "type": "forcePushed"}, {"oid": "d47c00cd80404cc91279abc781478ac9f75cd1a1", "url": "https://github.com/kiegroup/kogito-apps/commit/d47c00cd80404cc91279abc781478ac9f75cd1a1", "message": "KOGITO-1299: added fallback UI when server unavailable", "committedDate": "2020-04-06T06:23:48Z", "type": "forcePushed"}, {"oid": "f52969a11f4cc45853e69ef057bfb05a8509b93e", "url": "https://github.com/kiegroup/kogito-apps/commit/f52969a11f4cc45853e69ef057bfb05a8509b93e", "message": "KOGITO-1299: added fallback UI when server unavailable", "committedDate": "2020-04-06T12:08:04Z", "type": "commit"}, {"oid": "f52969a11f4cc45853e69ef057bfb05a8509b93e", "url": "https://github.com/kiegroup/kogito-apps/commit/f52969a11f4cc45853e69ef057bfb05a8509b93e", "message": "KOGITO-1299: added fallback UI when server unavailable", "committedDate": "2020-04-06T12:08:04Z", "type": "forcePushed"}]}