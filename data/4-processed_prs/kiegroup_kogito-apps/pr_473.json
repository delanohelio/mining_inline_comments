{"pr_number": 473, "pr_title": "KOGITO-3139: Job reschedule", "pr_createdAt": "2020-10-05T11:20:22Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/473", "timeline": [{"oid": "5e84a1beef8ffd75ee30cbeeb1d64b71b87ea61b", "url": "https://github.com/kiegroup/kogito-apps/commit/5e84a1beef8ffd75ee30cbeeb1d64b71b87ea61b", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-05T17:44:40Z", "type": "forcePushed"}, {"oid": "845dff5ffedc794e634f37b64abb44b26d6d8e49", "url": "https://github.com/kiegroup/kogito-apps/commit/845dff5ffedc794e634f37b64abb44b26d6d8e49", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-06T16:58:36Z", "type": "forcePushed"}, {"oid": "2b155af241583a5bc15866e882356677776b9ac0", "url": "https://github.com/kiegroup/kogito-apps/commit/2b155af241583a5bc15866e882356677776b9ac0", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-07T06:45:50Z", "type": "forcePushed"}, {"oid": "944c0d8d17e7fb6fc940ffb5733e0c45991610f6", "url": "https://github.com/kiegroup/kogito-apps/commit/944c0d8d17e7fb6fc940ffb5733e0c45991610f6", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-07T08:22:00Z", "type": "forcePushed"}, {"oid": "4e3980d61abeb9c6e312dcab96dd0de9c778dd23", "url": "https://github.com/kiegroup/kogito-apps/commit/4e3980d61abeb9c6e312dcab96dd0de9c778dd23", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-07T09:55:07Z", "type": "forcePushed"}, {"oid": "f452780c03f5407d4c3d9a81f21736bde1575d14", "url": "https://github.com/kiegroup/kogito-apps/commit/f452780c03f5407d4c3d9a81f21736bde1575d14", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-07T11:32:53Z", "type": "forcePushed"}, {"oid": "10e43381bbcb1de49ceccab3c5ce3944fcf50be8", "url": "https://github.com/kiegroup/kogito-apps/commit/10e43381bbcb1de49ceccab3c5ce3944fcf50be8", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-07T11:40:36Z", "type": "forcePushed"}, {"oid": "b9af28be27535b1dc1a294fae873c2fb0b37d4e1", "url": "https://github.com/kiegroup/kogito-apps/commit/b9af28be27535b1dc1a294fae873c2fb0b37d4e1", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-07T11:43:30Z", "type": "forcePushed"}, {"oid": "7561bf12231d448ef1435e57d2e6d7d5b60436fd", "url": "https://github.com/kiegroup/kogito-apps/commit/7561bf12231d448ef1435e57d2e6d7d5b60436fd", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-07T14:15:10Z", "type": "forcePushed"}, {"oid": "70f768ac73e370bb857882e65ed3899a59ebb0ef", "url": "https://github.com/kiegroup/kogito-apps/commit/70f768ac73e370bb857882e65ed3899a59ebb0ef", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-07T14:30:49Z", "type": "forcePushed"}, {"oid": "2aa3856d36ea3fde25a533ac9554b8cd9133ec89", "url": "https://github.com/kiegroup/kogito-apps/commit/2aa3856d36ea3fde25a533ac9554b8cd9133ec89", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-08T04:39:27Z", "type": "forcePushed"}, {"oid": "4b6a32c79fc94d3eb029daba44662c9c53170a09", "url": "https://github.com/kiegroup/kogito-apps/commit/4b6a32c79fc94d3eb029daba44662c9c53170a09", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-08T07:05:49Z", "type": "forcePushed"}, {"oid": "b85ae3d9226a72e4837cc9c190f07adf069451e9", "url": "https://github.com/kiegroup/kogito-apps/commit/b85ae3d9226a72e4837cc9c190f07adf069451e9", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-08T09:05:36Z", "type": "forcePushed"}, {"oid": "65684c3720af0612adfc2348d9540b63866b43e4", "url": "https://github.com/kiegroup/kogito-apps/commit/65684c3720af0612adfc2348d9540b63866b43e4", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-08T09:54:21Z", "type": "forcePushed"}, {"oid": "db2858e9d710b6872a0358edcd6b7faa77e386c4", "url": "https://github.com/kiegroup/kogito-apps/commit/db2858e9d710b6872a0358edcd6b7faa77e386c4", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-08T15:03:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0MTk2Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r502241962", "bodyText": "@Sara4994 I think we shouldn't have anything linked with the domain specific model, regarding the management console is general purpose and need to be able to handle different domains.", "author": "nmirasch", "createdAt": "2020-10-09T07:35:29Z", "path": "ui-packages/packages/common/src/graphql/types.tsx", "diffHunk": "@@ -320,6 +418,9 @@ export namespace GraphQL {\n     ProcessInstances?: Maybe<Array<Maybe<ProcessInstance>>>;\n     UserTaskInstances?: Maybe<Array<Maybe<UserTaskInstance>>>;\n     Jobs?: Maybe<Array<Maybe<Job>>>;\n+    Travels?: Maybe<Array<Maybe<Travels>>>;", "originalCommit": "db2858e9d710b6872a0358edcd6b7faa77e386c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMyMDcxOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r502320719", "bodyText": "oops, thats my bad. I have just corrected these.", "author": "Sara4994", "createdAt": "2020-10-09T09:58:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0MTk2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0ODk4Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r502248986", "bodyText": "@Sara4994 we need to avoid this domain specific at the schema regarding the MC need to handle general purpose process", "author": "nmirasch", "createdAt": "2020-10-09T07:49:33Z", "path": "ui-packages/packages/common/src/graphql/graphql.schema.json", "diffHunk": "@@ -153,6 +153,147 @@\n             },\n             \"isDeprecated\": false,\n             \"deprecationReason\": null\n+          },\n+          {", "originalCommit": "db2858e9d710b6872a0358edcd6b7faa77e386c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI1NDQ4OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r502254489", "bodyText": "@Sara4994 I'm not sure about this are the only jobs status that could be rescheduled.  To me makes sense to cancel a job and reschedule it once the admin see is possible. I'm thinking in provide some way to retake the job from the management console.  The only ones that I see couldn't be rescheduled should be the 'EXECUTED'. Could you confirm this with @tiagodolphine?", "author": "nmirasch", "createdAt": "2020-10-09T08:00:01Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobActionsKebab/JobActionsKebab.tsx", "diffHunk": "@@ -15,35 +19,94 @@ const JobActionsKebab: React.FC<JobActionsProps & OUIAProps> = ({\n }) => {\n   const [isKebabOpen, setIsKebabOpen] = useState<boolean>(false);\n   const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n+  const [rescheduleClicked, setRescheduleClicked] = useState<boolean>(false);\n \n-  const handleModalToggle = () => {\n+  const RescheduleJobs: string[] = ['SCHEDULED', 'ERROR'];", "originalCommit": "db2858e9d710b6872a0358edcd6b7faa77e386c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMyMDIyNQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r502320225", "bodyText": "@nmirasch  I remember when we discussed with Tiago, he said that jobs with status error and executed can be rescheduled. I made a note of it. Anyway will check one more time with him", "author": "Sara4994", "createdAt": "2020-10-09T09:57:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI1NDQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2NjQwMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r502266400", "bodyText": "@Sara4994 Does it makes sense put the two modal ( for details and reschedule ) in the same component when they don't share too much and add this checks over the whole component ? I see here we need different component for each one at least to include the modal content.", "author": "nmirasch", "createdAt": "2020-10-09T08:20:49Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobsPanelDetailsModal/JobsPanelDetailsModal.tsx", "diffHunk": "@@ -4,155 +4,267 @@ import {\n   Modal,\n   Title,\n   TitleSizes,\n-  Button,\n   TextContent,\n   Flex,\n   FlexItem,\n   Split,\n   SplitItem,\n   Text,\n-  TextVariants\n+  TextVariants,\n+  ModalBoxBody,\n+  TextInput,\n+  ModalVariant,\n+  Form,\n+  FormGroup,\n+  Button\n } from '@patternfly/react-core';\n+import { OutlinedClockIcon } from '@patternfly/react-icons';\n import Moment from 'react-moment';\n+import DateTimePicker from 'react-datetime-picker';\n+import './JobsPanelDetailsModal.css';\n+import { handleJobReschedule } from '../../../utils/Utils';\n+import { refetchContext } from '../../contexts';\n interface JobsPanelDetailsModalProps {\n+  actionType: string;\n   modalTitle: JSX.Element;\n   isModalOpen: boolean;\n   handleModalToggle: () => void;\n+  modalAction: JSX.Element[];\n   job: GraphQL.Job;\n+  rescheduleClicked?: boolean;\n+  setRescheduleClicked?: (rescheduleClicked: boolean) => void;\n }\n const JobsPanelDetailsModal: React.FC<JobsPanelDetailsModalProps &\n   OUIAProps> = ({\n+  actionType,\n   modalTitle,\n   isModalOpen,\n+  modalAction,\n   handleModalToggle,\n   job,\n+  rescheduleClicked,\n+  setRescheduleClicked,\n   ouiaId,\n   ouiaSafe\n }) => {\n-  return (\n-    <Modal\n-      variant=\"large\"\n-      aria-labelledby=\"Job details modal\"\n-      aria-label=\"Job details modal\"\n-      title=\"\"\n-      header={\n-        <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>\n-          {modalTitle}\n-        </Title>\n-      }\n-      isOpen={isModalOpen}\n-      onClose={handleModalToggle}\n-      actions={[\n-        <Button\n-          key=\"confirm-selection\"\n-          variant=\"primary\"\n-          onClick={handleModalToggle}\n-        >\n-          OK\n-        </Button>\n-      ]}\n-      {...componentOuiaProps(ouiaId, 'job-details-modal', ouiaSafe)}\n+  const [scheduleDate, setScheduleDate] = React.useState<Date>(\n+    new Date(job.expirationTime)\n+  );\n+  const [repeatInterval, setRepeatInterval] = React.useState<number>(\n+    job.repeatInterval\n+  );\n+  const [repeatLimit, setRepeatLimit] = React.useState<number>(job.repeatLimit);\n+\n+  const handleIntervalChange = (e): void => {\n+    setRepeatInterval(e);\n+  };\n+\n+  const handleLimitChange = (e): void => {\n+    setRepeatLimit(e);\n+  };\n+\n+  const handleDateChange = (value): void => {\n+    setScheduleDate(value);\n+  };\n+\n+  const handleTimeNow = (): void => {\n+    setScheduleDate(new Date());\n+  };\n+  const refetch = React.useContext(refetchContext);\n+  const onApplyReschedule = async (): Promise<any> => {\n+    await handleJobReschedule(\n+      job,\n+      repeatInterval,\n+      repeatLimit,\n+      rescheduleClicked,\n+      setRescheduleClicked,\n+      scheduleDate,\n+      refetch\n+    );\n+  };\n+  const applyAction: JSX.Element[] = [\n+    <Button\n+      key=\"apply-selection\"\n+      variant=\"primary\"\n+      id=\"apply-button\"\n+      onClick={onApplyReschedule}\n     >\n-      <div style={{ padding: '30px' }}>\n-        <TextContent>\n-          <Flex direction={{ default: 'column' }}>\n-            <FlexItem>\n-              <Split hasGutter>\n-                <SplitItem>\n-                  <Text component={TextVariants.h6}>Process Id: </Text>{' '}\n-                </SplitItem>\n-                <SplitItem>{job.processId}</SplitItem>\n-              </Split>\n-            </FlexItem>\n-            <FlexItem>\n-              <Split hasGutter>\n-                <SplitItem>\n-                  {' '}\n-                  <Text component={TextVariants.h6}>\n-                    Process Instance Id:{' '}\n-                  </Text>{' '}\n-                </SplitItem>\n-                <SplitItem>{job.processInstanceId}</SplitItem>\n-              </Split>\n-            </FlexItem>\n-            <FlexItem>\n-              <Split hasGutter>\n-                <SplitItem>\n-                  <Text component={TextVariants.h6}>Status: </Text>{' '}\n-                </SplitItem>\n-                <SplitItem>{job.status}</SplitItem>\n-              </Split>\n-            </FlexItem>\n-            <FlexItem>\n-              <Split hasGutter>\n-                <SplitItem>\n-                  <Text component={TextVariants.h6}>Priority: </Text>{' '}\n-                </SplitItem>\n-                <SplitItem>{job.priority}</SplitItem>\n-              </Split>\n-            </FlexItem>\n-            {job.repeatInterval && (\n+      Apply\n+    </Button>\n+  ];\n+  const modalContent = (): JSX.Element => {\n+    if (actionType === 'Job Details') {", "originalCommit": "db2858e9d710b6872a0358edcd6b7faa77e386c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwOTEwNQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r502509105", "bodyText": "@Sara4994 Does it makes sense put the two modal ( for details and reschedule ) in the same component when they don't share too much and add this checks over the whole component ? I see here we need different component for each one at least to include the modal content.\n\n@nmirasch  this is done", "author": "Sara4994", "createdAt": "2020-10-09T15:28:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2NjQwMA=="}], "type": "inlineReview"}, {"oid": "8e20a801ce1a157bc264a10c08527771d118f61a", "url": "https://github.com/kiegroup/kogito-apps/commit/8e20a801ce1a157bc264a10c08527771d118f61a", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-09T09:59:26Z", "type": "forcePushed"}, {"oid": "99df3bee70a3c0df26a0496315146d34ef155213", "url": "https://github.com/kiegroup/kogito-apps/commit/99df3bee70a3c0df26a0496315146d34ef155213", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-09T15:24:02Z", "type": "forcePushed"}, {"oid": "2d0052a8abfd2723e5c8c4b5dddfa5af69ab604c", "url": "https://github.com/kiegroup/kogito-apps/commit/2d0052a8abfd2723e5c8c4b5dddfa5af69ab604c", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-11T17:29:45Z", "type": "forcePushed"}, {"oid": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "url": "https://github.com/kiegroup/kogito-apps/commit/c36f61a347244f475f5cfc9d73a2529676db0bc2", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-12T11:02:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIxMjY0Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503212642", "bodyText": "whitespace formatting after if", "author": "jstastny-cz", "createdAt": "2020-10-12T10:55:28Z", "path": "ui-packages/packages/management-console/server/MockData/controllers.js", "diffHunk": "@@ -98,5 +96,18 @@ module.exports = controller = {\n       nodeObject[0].exit = new Date().toISOString();\n       res.status(200).send(data[0]);\n     }\n+  },\n+  handleJobReschedule: (req, res) => {\n+    const data = graphData.JobsData.find(data => {\n+      return data.id === req.params.id;\n+    });\n+    if(req.body.repeatInterval && req.body.repeatLimit) {", "originalCommit": "2d0052a8abfd2723e5c8c4b5dddfa5af69ab604c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIxOTA4MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503219080", "bodyText": "missing check for what happens after the click here.", "author": "jstastny-cz", "createdAt": "2020-10-12T11:07:29Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobActionsKebab/tests/JobActionsKebab.test.tsx", "diffHunk": "@@ -55,4 +94,66 @@ describe('job actions kebab tests', () => {\n     wrapper = wrapper.update();\n     expect(wrapper.find(Dropdown).prop('isOpen')).toBeFalsy();\n   });\n+  it('test reschedule option', async () => {\n+    let wrapper = mount(<JobActionsKebab {...prop2} />);\n+\n+    await act(async () => {\n+      wrapper\n+        .find(Dropdown)\n+        .find(KebabToggle)\n+        .find('#kebab-toggle')\n+        .at(2)\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find(DropdownItem)\n+        .at(1)\n+        .find('button')\n+        .children()\n+        .contains('Reschedule')\n+    ).toBeTruthy();\n+    await act(async () => {\n+      wrapper\n+        .find(DropdownItem)\n+        .at(1)\n+        .find('button')\n+        .simulate('click');\n+    });", "originalCommit": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM0OTUxOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503349518", "bodyText": "@jstastny-cz check added \ud83d\udc4d", "author": "Sara4994", "createdAt": "2020-10-12T14:51:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIxOTA4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIxOTMxOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503219318", "bodyText": "again, what happens now?", "author": "jstastny-cz", "createdAt": "2020-10-12T11:07:58Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobActionsKebab/tests/JobActionsKebab.test.tsx", "diffHunk": "@@ -55,4 +94,66 @@ describe('job actions kebab tests', () => {\n     wrapper = wrapper.update();\n     expect(wrapper.find(Dropdown).prop('isOpen')).toBeFalsy();\n   });\n+  it('test reschedule option', async () => {\n+    let wrapper = mount(<JobActionsKebab {...prop2} />);\n+\n+    await act(async () => {\n+      wrapper\n+        .find(Dropdown)\n+        .find(KebabToggle)\n+        .find('#kebab-toggle')\n+        .at(2)\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find(DropdownItem)\n+        .at(1)\n+        .find('button')\n+        .children()\n+        .contains('Reschedule')\n+    ).toBeTruthy();\n+    await act(async () => {\n+      wrapper\n+        .find(DropdownItem)\n+        .at(1)\n+        .find('button')\n+        .simulate('click');\n+    });\n+  });\n+  it('trigger/test apply reschedule method', async () => {\n+    let wrapper = mount(<JobActionsKebab {...prop2} />);\n+\n+    await act(async () => {\n+      wrapper\n+        .find(Dropdown)\n+        .find(KebabToggle)\n+        .find('#kebab-toggle')\n+        .at(2)\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find(DropdownItem)\n+        .at(1)\n+        .find('button')\n+        .children()\n+        .contains('Reschedule')\n+    ).toBeTruthy();\n+    await act(async () => {\n+      wrapper\n+        .find('#reschedule-option')\n+        .at(0)\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-button')\n+        .at(0)\n+        .simulate('click');\n+    });", "originalCommit": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM0ODExOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503348118", "bodyText": "@jstastny-cz actually we don't need this button simulation here, as it is moved to JobsRescheduleModal later on. I have removed it now", "author": "Sara4994", "createdAt": "2020-10-12T14:49:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIxOTMxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyMjI5Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503222297", "bodyText": "What issues do these 2 overrides solve?", "author": "jstastny-cz", "createdAt": "2020-10-12T11:13:42Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobsPanelDetailsModal/tests/JobsPanelDetailsModal.test.tsx", "diffHunk": "@@ -2,8 +2,12 @@ import React from 'react';\n import JobsPanelDetailsModal from '../JobsPanelDetailsModal';\n import { GraphQL, getWrapper } from '@kogito-apps/common';\n import { InfoCircleIcon } from '@patternfly/react-icons';\n-\n+import { Button } from '@patternfly/react-core';\n+// tslint:disable: no-string-literal", "originalCommit": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyMzY4OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503223688", "bodyText": "add space in both aria attributes so that we don't have\naria-label=\"Job Detailsmodal\"\naria-labelledby=\"pf-modal-part-0 Job Detailsmodal\"\n\nin snapshot", "author": "jstastny-cz", "createdAt": "2020-10-12T11:16:12Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobsPanelDetailsModal/JobsPanelDetailsModal.tsx", "diffHunk": "@@ -153,6 +135,25 @@ const JobsPanelDetailsModal: React.FC<JobsPanelDetailsModalProps &\n           </Flex>\n         </TextContent>\n       </div>\n+    );\n+  };\n+  return (\n+    <Modal\n+      variant={'large'}\n+      aria-labelledby={actionType + 'modal'}", "originalCommit": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyNDM4Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503224386", "bodyText": "component type does not reflect component name.", "author": "jstastny-cz", "createdAt": "2020-10-12T11:17:24Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobsRescheduleModal/JobsRescheduleModal.tsx", "diffHunk": "@@ -0,0 +1,159 @@\n+import React from 'react';\n+import {\n+  Modal,\n+  Title,\n+  TitleSizes,\n+  ModalVariant,\n+  Button,\n+  ModalBoxBody,\n+  Form,\n+  FormGroup,\n+  TextInput\n+} from '@patternfly/react-core';\n+import { OUIAProps, componentOuiaProps, GraphQL } from '@kogito-apps/common';\n+import { OutlinedClockIcon } from '@patternfly/react-icons';\n+import DateTimePicker from 'react-datetime-picker';\n+import { handleJobReschedule } from '../../../utils/Utils';\n+import { refetchContext } from '../../contexts';\n+import './JobsRescheduleModal.css';\n+\n+interface IOwnProps {\n+  actionType: string;\n+  modalTitle: JSX.Element;\n+  isModalOpen: boolean;\n+  handleModalToggle: () => void;\n+  modalAction: JSX.Element[];\n+  job: GraphQL.Job;\n+  rescheduleClicked?: boolean;\n+  setRescheduleClicked?: (rescheduleClicked: boolean) => void;\n+}\n+\n+const JobsRescheduleModal: React.FC<IOwnProps & OUIAProps> = ({\n+  job,\n+  rescheduleClicked,\n+  setRescheduleClicked,\n+  actionType,\n+  modalAction,\n+  modalTitle,\n+  isModalOpen,\n+  handleModalToggle,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  const [scheduleDate, setScheduleDate] = React.useState<Date>(\n+    new Date(job.expirationTime)\n+  );\n+  const [repeatInterval, setRepeatInterval] = React.useState<number | string>(\n+    job.repeatInterval\n+  );\n+  const [repeatLimit, setRepeatLimit] = React.useState<number | string>(\n+    job.repeatLimit\n+  );\n+\n+  const handleIntervalChange = (value: number | string): void => {\n+    setRepeatInterval(value);\n+  };\n+\n+  const handleLimitChange = (value: number | string): void => {\n+    setRepeatLimit(value);\n+  };\n+\n+  const handleDateChange = (value: Date): void => {\n+    setScheduleDate(value);\n+  };\n+\n+  const handleTimeNow = (): void => {\n+    setScheduleDate(new Date());\n+  };\n+  const refetch = React.useContext(refetchContext);\n+\n+  const onApplyReschedule = async (): Promise<any> => {\n+    await handleJobReschedule(\n+      job,\n+      repeatInterval,\n+      repeatLimit,\n+      rescheduleClicked,\n+      setRescheduleClicked,\n+      scheduleDate,\n+      refetch\n+    );\n+  };\n+  const applyAction: JSX.Element[] = [\n+    <Button\n+      key=\"apply-selection\"\n+      variant=\"primary\"\n+      id=\"apply-button\"\n+      onClick={onApplyReschedule}\n+    >\n+      Apply\n+    </Button>\n+  ];\n+  const modalContent = (): JSX.Element => {\n+    return (\n+      <ModalBoxBody className=\"kogito-management-console--jobsModal__ModalBody\">\n+        <Form isHorizontal>\n+          <FormGroup label=\"Expiration Time\" fieldId=\"horizontal-form-name\">\n+            {scheduleDate && scheduleDate !== undefined && (\n+              <DateTimePicker\n+                value={scheduleDate}\n+                minDate={new Date()}\n+                onChange={handleDateChange}\n+              />\n+            )}\n+            <Button\n+              className=\"kogito-management-console--jobsModal__TimeNow\"\n+              id=\"Time-now\"\n+              onClick={handleTimeNow}\n+            >\n+              <OutlinedClockIcon /> Now\n+            </Button>\n+          </FormGroup>\n+          <FormGroup label=\"Repeat Interval\" fieldId=\"repeat-interval\">\n+            <TextInput\n+              type=\"text\"\n+              id=\"repeat-interval-input\"\n+              name=\"repeat-interval-input\"\n+              aria-describedby=\"repeat-interval\"\n+              value={repeatInterval || 0}\n+              onChange={handleIntervalChange}\n+              isDisabled={repeatInterval === null}\n+            />\n+          </FormGroup>\n+          <FormGroup label=\"Repeat Limit\" fieldId=\"repeat-limit\">\n+            <TextInput\n+              type=\"text\"\n+              id=\"repeat-limit-input\"\n+              name=\"repeat-limit-input\"\n+              aria-describedby=\"repeat-limit\"\n+              value={repeatLimit || 0}\n+              onChange={handleLimitChange}\n+              isDisabled={repeatLimit === null}\n+            />\n+          </FormGroup>\n+        </Form>\n+      </ModalBoxBody>\n+    );\n+  };\n+\n+  return (\n+    <Modal\n+      variant={ModalVariant.small}\n+      aria-labelledby={actionType + 'modal'}\n+      aria-label={actionType + 'modal'}\n+      title=\"\"\n+      header={\n+        <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>\n+          {modalTitle}\n+        </Title>\n+      }\n+      isOpen={isModalOpen}\n+      onClose={handleModalToggle}\n+      actions={[...applyAction, ...modalAction]}\n+      {...componentOuiaProps(ouiaId, 'job-details-modal', ouiaSafe)}", "originalCommit": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyNTIzOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503225238", "bodyText": "can you again explain what issues these 2 overrides are solving?", "author": "jstastny-cz", "createdAt": "2020-10-12T11:19:01Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobsRescheduleModal/tests/JobsRescheduleModal.test.tsx", "diffHunk": "@@ -0,0 +1,139 @@\n+import React from 'react';\n+import JobsRescheduleModal from '../JobsRescheduleModal';\n+import { GraphQL, getWrapper } from '@kogito-apps/common';\n+import { InfoCircleIcon } from '@patternfly/react-icons';\n+import { Button } from '@patternfly/react-core';\n+import { act } from 'react-dom/test-utils';\n+jest.mock('react-datetime-picker');\n+// tslint:disable: no-string-literal", "originalCommit": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI2NjkzMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503266932", "bodyText": "These overrides are intended to avoid error appears on lines 111, 118, and 125  with ['onChange']. One of the errors is \"object access via string literals is disallowed (no-string-literal)\"", "author": "Sara4994", "createdAt": "2020-10-12T12:39:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyNTIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyNjYyMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503226622", "bodyText": "I think we should check what happens after the onChange  ... otherwise I am not sure what we're actually testing here.", "author": "jstastny-cz", "createdAt": "2020-10-12T11:21:37Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobsRescheduleModal/tests/JobsRescheduleModal.test.tsx", "diffHunk": "@@ -0,0 +1,139 @@\n+import React from 'react';\n+import JobsRescheduleModal from '../JobsRescheduleModal';\n+import { GraphQL, getWrapper } from '@kogito-apps/common';\n+import { InfoCircleIcon } from '@patternfly/react-icons';\n+import { Button } from '@patternfly/react-core';\n+import { act } from 'react-dom/test-utils';\n+jest.mock('react-datetime-picker');\n+// tslint:disable: no-string-literal\n+// tslint:disable: no-unexpected-multiline\n+const props = {\n+  actionType: 'Job Reschedule',\n+  job: {\n+    id: '6e74a570-31c8-4020-bd70-19be2cb625f3_0',\n+    processId: 'travels',\n+    processInstanceId: '5c56eeff-4cbf-3313-a325-4c895e0afced',\n+    rootProcessId: '5c56eeff-4cbf-3313-a325-4c895e0afced',\n+    status: GraphQL.JobStatus.Executed,\n+    priority: 0,\n+    callbackEndpoint:\n+      'http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0',\n+    repeatInterval: 1,\n+    repeatLimit: 3,\n+    scheduledId: '0',\n+    retries: 0,\n+    lastUpdate: '2020-08-27T03:35:50.147Z',\n+    expirationTime: '2020-08-27T03:35:50.147Z'\n+  },\n+  modalTitle: (\n+    <>\n+      <InfoCircleIcon\n+        className=\"pf-u-mr-sm\"\n+        color=\"var(--pf-global--info-color--100)\"\n+      />\n+      {'Jobs Reschedule'}\n+    </>\n+  ),\n+  isModalOpen: true,\n+  handleModalToggle: jest.fn(),\n+  modalAction: [\n+    <Button key=\"cancel-reschedule\" variant=\"secondary\">\n+      Cancel\n+    </Button>\n+  ]\n+};\n+const props2 = {\n+  actionType: 'Job Reschedule',\n+  job: {\n+    id: '6e74a570-31c8-4020-bd70-19be2cb625f3_0',\n+    processId: 'travels',\n+    processInstanceId: '5c56eeff-4cbf-3313-a325-4c895e0afced',\n+    rootProcessId: '5c56eeff-4cbf-3313-a325-4c895e0afced',\n+    status: GraphQL.JobStatus.Executed,\n+    priority: 0,\n+    callbackEndpoint:\n+      'http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0',\n+    repeatInterval: null,\n+    repeatLimit: null,\n+    scheduledId: '0',\n+    retries: 0,\n+    lastUpdate: '2020-08-27T03:35:50.147Z',\n+    expirationTime: '2020-08-27T03:35:50.147Z'\n+  },\n+  modalTitle: (\n+    <>\n+      <InfoCircleIcon\n+        className=\"pf-u-mr-sm\"\n+        color=\"var(--pf-global--info-color--100)\"\n+      />\n+      {'Jobs Reschedule'}\n+    </>\n+  ),\n+  isModalOpen: true,\n+  handleModalToggle: jest.fn(),\n+  modalAction: [\n+    <Button key=\"confirm-selection\" variant=\"primary\">\n+      OK\n+    </Button>\n+  ]\n+};\n+\n+Date.now = jest.fn(() => 1592000000000); // UTC Fri Jun 12 2020 22:13:20\n+describe('Job details modal tests', () => {\n+  beforeEach(() => {\n+    const DATE_TO_USE = new Date('2017-02-02T12:54:59.218Z');\n+    const _Date = Date;\n+    const MockDate: any = (...args) => {\n+      switch (args.length) {\n+        case 0:\n+          return DATE_TO_USE;\n+        default:\n+          // @ts-ignore\n+          return new _Date(...args);\n+      }\n+    };\n+    MockDate.UTC = _Date.UTC;\n+    MockDate.now = () => DATE_TO_USE.getTime();\n+    global.Date = MockDate;\n+  });\n+  it('test job reschedule modal', async () => {\n+    const wrapper = getWrapper(\n+      <JobsRescheduleModal {...props} />,\n+      'JobsRescheduleModal'\n+    );\n+    expect(wrapper).toMatchSnapshot();\n+    wrapper\n+      .find('#Time-now')\n+      .first()\n+      .simulate('click');\n+    const value: any = '2020-08-27T03:35:50.147Z';\n+    await act(async () => {\n+      wrapper\n+        .find('DateTimePicker')\n+        .props()\n+        ['onChange'](value);", "originalCommit": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMxNTk5OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503315998", "bodyText": "@jstastny-cz done", "author": "Sara4994", "createdAt": "2020-10-12T13:59:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyNjYyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyNzEwMA==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503227100", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            describe('Job details modal tests', () => {\n          \n          \n            \n            describe('Job reschedule modal tests', () => {", "author": "jstastny-cz", "createdAt": "2020-10-12T11:22:27Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobsRescheduleModal/tests/JobsRescheduleModal.test.tsx", "diffHunk": "@@ -0,0 +1,139 @@\n+import React from 'react';\n+import JobsRescheduleModal from '../JobsRescheduleModal';\n+import { GraphQL, getWrapper } from '@kogito-apps/common';\n+import { InfoCircleIcon } from '@patternfly/react-icons';\n+import { Button } from '@patternfly/react-core';\n+import { act } from 'react-dom/test-utils';\n+jest.mock('react-datetime-picker');\n+// tslint:disable: no-string-literal\n+// tslint:disable: no-unexpected-multiline\n+const props = {\n+  actionType: 'Job Reschedule',\n+  job: {\n+    id: '6e74a570-31c8-4020-bd70-19be2cb625f3_0',\n+    processId: 'travels',\n+    processInstanceId: '5c56eeff-4cbf-3313-a325-4c895e0afced',\n+    rootProcessId: '5c56eeff-4cbf-3313-a325-4c895e0afced',\n+    status: GraphQL.JobStatus.Executed,\n+    priority: 0,\n+    callbackEndpoint:\n+      'http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0',\n+    repeatInterval: 1,\n+    repeatLimit: 3,\n+    scheduledId: '0',\n+    retries: 0,\n+    lastUpdate: '2020-08-27T03:35:50.147Z',\n+    expirationTime: '2020-08-27T03:35:50.147Z'\n+  },\n+  modalTitle: (\n+    <>\n+      <InfoCircleIcon\n+        className=\"pf-u-mr-sm\"\n+        color=\"var(--pf-global--info-color--100)\"\n+      />\n+      {'Jobs Reschedule'}\n+    </>\n+  ),\n+  isModalOpen: true,\n+  handleModalToggle: jest.fn(),\n+  modalAction: [\n+    <Button key=\"cancel-reschedule\" variant=\"secondary\">\n+      Cancel\n+    </Button>\n+  ]\n+};\n+const props2 = {\n+  actionType: 'Job Reschedule',\n+  job: {\n+    id: '6e74a570-31c8-4020-bd70-19be2cb625f3_0',\n+    processId: 'travels',\n+    processInstanceId: '5c56eeff-4cbf-3313-a325-4c895e0afced',\n+    rootProcessId: '5c56eeff-4cbf-3313-a325-4c895e0afced',\n+    status: GraphQL.JobStatus.Executed,\n+    priority: 0,\n+    callbackEndpoint:\n+      'http://localhost:8080/management/jobs/travels/instances/5c56eeff-4cbf-3313-a325-4c895e0afced/timers/6e74a570-31c8-4020-bd70-19be2cb625f3_0',\n+    repeatInterval: null,\n+    repeatLimit: null,\n+    scheduledId: '0',\n+    retries: 0,\n+    lastUpdate: '2020-08-27T03:35:50.147Z',\n+    expirationTime: '2020-08-27T03:35:50.147Z'\n+  },\n+  modalTitle: (\n+    <>\n+      <InfoCircleIcon\n+        className=\"pf-u-mr-sm\"\n+        color=\"var(--pf-global--info-color--100)\"\n+      />\n+      {'Jobs Reschedule'}\n+    </>\n+  ),\n+  isModalOpen: true,\n+  handleModalToggle: jest.fn(),\n+  modalAction: [\n+    <Button key=\"confirm-selection\" variant=\"primary\">\n+      OK\n+    </Button>\n+  ]\n+};\n+\n+Date.now = jest.fn(() => 1592000000000); // UTC Fri Jun 12 2020 22:13:20\n+describe('Job details modal tests', () => {", "originalCommit": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIzMDMzOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/473#discussion_r503230339", "bodyText": "do we need this function considering the one we call actually? Wouldn't be just calling handleRescheduleAction in right place do the trick?", "author": "jstastny-cz", "createdAt": "2020-10-12T11:28:23Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobActionsKebab/JobActionsKebab.tsx", "diffHunk": "@@ -1,49 +1,114 @@\n import React, { useState } from 'react';\n-import { DropdownItem, Dropdown, KebabToggle } from '@patternfly/react-core';\n+import {\n+  DropdownItem,\n+  Dropdown,\n+  KebabToggle,\n+  Button\n+} from '@patternfly/react-core';\n import JobsPanelDetailsModal from '../JobsPanelDetailsModal/JobsPanelDetailsModal';\n+import JobsRescheduleModal from '../JobsRescheduleModal/JobsRescheduleModal';\n import { OUIAProps, componentOuiaProps, GraphQL } from '@kogito-apps/common';\n import { setTitle } from '../../../utils/Utils';\n-\n-interface JobActionsProps {\n+interface IOwnProps {\n   job: GraphQL.Job;\n }\n \n-const JobActionsKebab: React.FC<JobActionsProps & OUIAProps> = ({\n+const JobActionsKebab: React.FC<IOwnProps & OUIAProps> = ({\n   job,\n   ouiaId,\n   ouiaSafe\n }) => {\n   const [isKebabOpen, setIsKebabOpen] = useState<boolean>(false);\n   const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n+  const [rescheduleClicked, setRescheduleClicked] = useState<boolean>(false);\n \n-  const handleModalToggle = () => {\n+  const RescheduleJobs: string[] = ['SCHEDULED', 'ERROR'];\n+  const handleModalToggle = (): void => {\n     setIsModalOpen(!isModalOpen);\n   };\n \n-  const onSelect = () => {\n+  const onSelect = (): void => {\n     setIsKebabOpen(!isKebabOpen);\n   };\n \n-  const onToggle = isOpen => {\n+  const onToggle = (isOpen): void => {\n     setIsKebabOpen(isOpen);\n   };\n \n-  const onDetailsClick = () => {\n+  const onDetailsClick = (): void => {\n     handleModalToggle();\n   };\n-  const dropdownItems = [\n-    <DropdownItem key=\"details\" component=\"button\" onClick={onDetailsClick}>\n-      Details\n-    </DropdownItem>\n+\n+  const handleRescheduleAction = (): void => {\n+    setRescheduleClicked(!rescheduleClicked);\n+  };\n+\n+  const onRescheduleClick = (): void => {", "originalCommit": "c36f61a347244f475f5cfc9d73a2529676db0bc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f68cf6d3210bb95ccb506c370ce5ea79c2077fe2", "url": "https://github.com/kiegroup/kogito-apps/commit/f68cf6d3210bb95ccb506c370ce5ea79c2077fe2", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-12T14:46:47Z", "type": "forcePushed"}, {"oid": "3dba505cb1b46ea8554cc47b5c4774bc0059d743", "url": "https://github.com/kiegroup/kogito-apps/commit/3dba505cb1b46ea8554cc47b5c4774bc0059d743", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-12T14:51:43Z", "type": "forcePushed"}, {"oid": "29eb90c2d2cc905a13c60f279d907204da00320b", "url": "https://github.com/kiegroup/kogito-apps/commit/29eb90c2d2cc905a13c60f279d907204da00320b", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-13T08:06:08Z", "type": "forcePushed"}, {"oid": "eb85b846de95d02a073b52dd8701333fae5c52b6", "url": "https://github.com/kiegroup/kogito-apps/commit/eb85b846de95d02a073b52dd8701333fae5c52b6", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-13T12:54:40Z", "type": "forcePushed"}, {"oid": "136f19ec95efaa943b69eb67ebeb9ae4b3becf90", "url": "https://github.com/kiegroup/kogito-apps/commit/136f19ec95efaa943b69eb67ebeb9ae4b3becf90", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-13T14:02:25Z", "type": "commit"}, {"oid": "136f19ec95efaa943b69eb67ebeb9ae4b3becf90", "url": "https://github.com/kiegroup/kogito-apps/commit/136f19ec95efaa943b69eb67ebeb9ae4b3becf90", "message": "KOGITO-3139: Job reschedule", "committedDate": "2020-10-13T14:02:25Z", "type": "forcePushed"}]}