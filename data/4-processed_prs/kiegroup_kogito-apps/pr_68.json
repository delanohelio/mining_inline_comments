{"pr_number": 68, "pr_title": "KOGITO-789 Bulk abort operations for process instance list", "pr_createdAt": "2020-02-17T10:18:06Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/68", "timeline": [{"oid": "c05da028d80cadb8b55fa971fdf6668613270700", "url": "https://github.com/kiegroup/kogito-apps/commit/c05da028d80cadb8b55fa971fdf6668613270700", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-19T05:55:35Z", "type": "forcePushed"}, {"oid": "fe3f0a39e9e97d9b04612971a79429d79cf7fb40", "url": "https://github.com/kiegroup/kogito-apps/commit/fe3f0a39e9e97d9b04612971a79429d79cf7fb40", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-19T14:01:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwOTI3MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r381309270", "bodyText": "@srambach - is this how I should add the abort button in Datatoolbar", "author": "AjayJagan", "createdAt": "2020-02-19T14:03:52Z", "path": "packages/management-console/src/components/Molecules/DataToolbarComponent/DataToolbarComponent.tsx", "diffHunk": "@@ -158,16 +170,58 @@ const DataToolbarComponent: React.FC<IOwnProps> = ({\n   );\n \n   return (\n-    <DataToolbar\n-      id=\"data-toolbar-with-filter\"\n-      className=\"pf-m-toggle-group-container\"\n-      collapseListedFiltersBreakpoint=\"xl\"\n-      clearAllFilters={() => clearAll()}\n-      clearFiltersButtonText=\"Reset to default\"\n-    >\n-      <DataToolbarContent>{toolbarItems}</DataToolbarContent>\n-    </DataToolbar>\n+    <Split>\n+      <SplitItem>\n+        {' '}\n+        <DataToolbar\n+          id=\"data-toolbar-with-filter\"\n+          className=\"pf-m-toggle-group-container\"\n+          collapseListedFiltersBreakpoint=\"xl\"\n+          clearAllFilters={() => clearAll()}\n+          clearFiltersButtonText=\"Reset to default\"\n+        >\n+          <DataToolbarContent>{toolbarItems}</DataToolbarContent>\n+        </DataToolbar>\n+      </SplitItem>\n+      <SplitItem isFilled/>\n+      <SplitItem>\n+        {Object.keys(abortedObj).length !== 0 ? (\n+          <div className=\"pf-u-pr-md pf-u-pb-md pf-u-pt-lg\">\n+            <Button className=\"pf-u-float-right\" onClick={handleAbortAll}>\n+              Abort all\n+            </Button>\n+          </div>\n+        ) : (\n+          <div className=\"pf-u-pr-md pf-u-pb-md pf-u-pt-lg\">\n+            <Button variant=\"primary\" className=\"pf-u-float-right\" isDisabled>\n+              Abort all\n+            </Button>\n+          </div>\n+        )}\n+      </SplitItem>\n+    </Split>", "originalCommit": "fe3f0a39e9e97d9b04612971a79429d79cf7fb40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM2MDI1Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r381360253", "bodyText": "I attempted to make a PR of that one file to your branch but that failed :P\nThis moves it to the left of the reload button. Also, I think we said to make it a secondary button in the meeting earlier.\nI also renamed it to \"Abort selected\" instead of \"Abort all\" but we should check with @cristianonicolai - but to me that looks like it's functionality.\nThe file is at https://github.com/srambach/kogito-apps/blob/KOGITO-789-new/packages/management-console/src/components/Molecules/DataToolbarComponent/DataToolbarComponent.tsx and here's the piece I edited:\n  const toolbarItems = (\n    <React.Fragment>\n      <DataToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"xl\">\n        {toggleGroupItems}\n      </DataToolbarToggleGroup>\n      <DataToolbarGroup>\n        <DataToolbarItem>\n          {Object.keys(abortedObj).length !== 0 ? (\n            <Button variant=\"secondary\" onClick={handleAbortAll}>\n              Abort selected\n            </Button>\n          ) : (\n            <Button variant=\"secondary\" isDisabled>\n              Abort selected\n            </Button>\n          )}\n        </DataToolbarItem>\n      </DataToolbarGroup>\n      <DataToolbarGroup variant=\"icon-button-group\">\n        <DataToolbarItem>\n          <Button variant=\"plain\" onClick={onRefreshClick}>\n            <SyncIcon />\n          </Button>\n        </DataToolbarItem>\n      </DataToolbarGroup>\n    </React.Fragment>\n  );\n\n  return (\n    <DataToolbar\n      id=\"data-toolbar-with-filter\"\n      className=\"pf-m-toggle-group-container\"\n      collapseListedFiltersBreakpoint=\"xl\"\n      clearAllFilters={() => clearAll()}\n      clearFiltersButtonText=\"Reset to default\"\n    >\n      <DataToolbarContent>{toolbarItems}</DataToolbarContent>\n    </DataToolbar>\n  );\n};", "author": "srambach", "createdAt": "2020-02-19T15:41:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwOTI3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM2MDgyOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r381360828", "bodyText": "One other question - I don't actually know but I'm guessing it might be better to just add the isDisabled to the button or not rather than to repeat the whole button.", "author": "srambach", "createdAt": "2020-02-19T15:49:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwOTI3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY4Njk0NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r381686944", "bodyText": "+1 to abort selected.", "author": "cristianonicolai", "createdAt": "2020-02-20T02:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwOTI3MA=="}], "type": "inlineReview"}, {"oid": "1da170fda63a629eebb2346d81c117bef1008281", "url": "https://github.com/kiegroup/kogito-apps/commit/1da170fda63a629eebb2346d81c117bef1008281", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-19T14:08:46Z", "type": "forcePushed"}, {"oid": "dbcb27e1b7ab2cb45dad65050112abc17a3205af", "url": "https://github.com/kiegroup/kogito-apps/commit/dbcb27e1b7ab2cb45dad65050112abc17a3205af", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-19T14:18:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3ODE2NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r381478165", "bodyText": "Here you can use pf-u-my-xl instead of pf-u-mt-xl pf-u-mb-xl. It will margin both the top and bottom at once.", "author": "srambach", "createdAt": "2020-02-19T18:57:09Z", "path": "packages/management-console/src/components/Atoms/ListComponent/ListComponent.tsx", "diffHunk": "@@ -0,0 +1,115 @@\n+import React from 'react';\n+import {\n+  TextContent,\n+  TextVariants,\n+  List,\n+  ListItem,\n+  Text,\n+  Divider\n+} from '@patternfly/react-core';\n+\n+interface IOwnProps {\n+  abortedMessageObj: any;\n+  completedMessageObj: any;\n+}\n+const ListComponent: React.FC<IOwnProps> = ({\n+  abortedMessageObj,\n+  completedMessageObj\n+}) => {\n+  return (\n+    <>\n+      {' '}\n+      {Object.keys(abortedMessageObj).length !== 0 &&\n+        Object.keys(completedMessageObj).length !== 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                The following processes were aborted :\n+              </Text>\n+            </TextContent>\n+            <List>\n+              {Object.entries(abortedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+            <Divider component=\"div\" className=\"pf-u-mt-xl pf-u-mb-xl\" />", "originalCommit": "dbcb27e1b7ab2cb45dad65050112abc17a3205af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3ODI2Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r381478263", "bodyText": "Here you can use pf-u-my-xl instead of pf-u-mt-xl pf-u-mb-xl. It will margin both the top and bottom at once.", "author": "srambach", "createdAt": "2020-02-19T18:57:20Z", "path": "packages/management-console/src/components/Atoms/ListComponent/ListComponent.tsx", "diffHunk": "@@ -0,0 +1,115 @@\n+import React from 'react';\n+import {\n+  TextContent,\n+  TextVariants,\n+  List,\n+  ListItem,\n+  Text,\n+  Divider\n+} from '@patternfly/react-core';\n+\n+interface IOwnProps {\n+  abortedMessageObj: any;\n+  completedMessageObj: any;\n+}\n+const ListComponent: React.FC<IOwnProps> = ({\n+  abortedMessageObj,\n+  completedMessageObj\n+}) => {\n+  return (\n+    <>\n+      {' '}\n+      {Object.keys(abortedMessageObj).length !== 0 &&\n+        Object.keys(completedMessageObj).length !== 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                The following processes were aborted :\n+              </Text>\n+            </TextContent>\n+            <List>\n+              {Object.entries(abortedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+            <Divider component=\"div\" className=\"pf-u-mt-xl pf-u-mb-xl\" />\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                The following processes were skipped because they were either\n+                completed or aborted :\n+              </Text>\n+            </TextContent>\n+\n+            <List>\n+              {Object.entries(completedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+          </>\n+        )}\n+      {Object.keys(abortedMessageObj).length === 0 &&\n+        Object.keys(completedMessageObj).length !== 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                No processes were aborted\n+              </Text>\n+            </TextContent>\n+            <Divider component=\"div\" className=\"pf-u-mt-xl pf-u-mb-xl\" />", "originalCommit": "dbcb27e1b7ab2cb45dad65050112abc17a3205af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3ODM1OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r381478359", "bodyText": "Here you can use pf-u-my-xl instead of pf-u-mt-xl pf-u-mb-xl. It will margin both the top and bottom at once.", "author": "srambach", "createdAt": "2020-02-19T18:57:33Z", "path": "packages/management-console/src/components/Atoms/ListComponent/ListComponent.tsx", "diffHunk": "@@ -0,0 +1,115 @@\n+import React from 'react';\n+import {\n+  TextContent,\n+  TextVariants,\n+  List,\n+  ListItem,\n+  Text,\n+  Divider\n+} from '@patternfly/react-core';\n+\n+interface IOwnProps {\n+  abortedMessageObj: any;\n+  completedMessageObj: any;\n+}\n+const ListComponent: React.FC<IOwnProps> = ({\n+  abortedMessageObj,\n+  completedMessageObj\n+}) => {\n+  return (\n+    <>\n+      {' '}\n+      {Object.keys(abortedMessageObj).length !== 0 &&\n+        Object.keys(completedMessageObj).length !== 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                The following processes were aborted :\n+              </Text>\n+            </TextContent>\n+            <List>\n+              {Object.entries(abortedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+            <Divider component=\"div\" className=\"pf-u-mt-xl pf-u-mb-xl\" />\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                The following processes were skipped because they were either\n+                completed or aborted :\n+              </Text>\n+            </TextContent>\n+\n+            <List>\n+              {Object.entries(completedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+          </>\n+        )}\n+      {Object.keys(abortedMessageObj).length === 0 &&\n+        Object.keys(completedMessageObj).length !== 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                No processes were aborted\n+              </Text>\n+            </TextContent>\n+            <Divider component=\"div\" className=\"pf-u-mt-xl pf-u-mb-xl\" />\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                The following processes were skipped because they were either\n+                completed or aborted :\n+              </Text>\n+            </TextContent>\n+\n+            <List>\n+              {Object.entries(completedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+          </>\n+        )}\n+      {Object.keys(abortedMessageObj).length !== 0 &&\n+        Object.keys(completedMessageObj).length === 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                The following processes were aborted :\n+              </Text>\n+            </TextContent>\n+            <List>\n+              {Object.entries(abortedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+            <Divider component=\"div\" className=\"pf-u-mt-xl pf-u-mb-xl\" />", "originalCommit": "dbcb27e1b7ab2cb45dad65050112abc17a3205af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a1ff320dfec959945aec16811347fc3cf32fa79b", "url": "https://github.com/kiegroup/kogito-apps/commit/a1ff320dfec959945aec16811347fc3cf32fa79b", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-20T02:35:46Z", "type": "forcePushed"}, {"oid": "ee3c65de263a1cf22cea1d5257cc61d22f395488", "url": "https://github.com/kiegroup/kogito-apps/commit/ee3c65de263a1cf22cea1d5257cc61d22f395488", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-20T04:14:39Z", "type": "forcePushed"}, {"oid": "90068fe404c6fa5ed7b0afbf78f5171c316e0901", "url": "https://github.com/kiegroup/kogito-apps/commit/90068fe404c6fa5ed7b0afbf78f5171c316e0901", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-25T09:07:17Z", "type": "forcePushed"}, {"oid": "7d754b8b0ff94e9f98605e00aedc6c1b0dcaaff9", "url": "https://github.com/kiegroup/kogito-apps/commit/7d754b8b0ff94e9f98605e00aedc6c1b0dcaaff9", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-25T09:09:37Z", "type": "forcePushed"}, {"oid": "abe88fceebc3c2ccdff23ec91fd45b63bd268a26", "url": "https://github.com/kiegroup/kogito-apps/commit/abe88fceebc3c2ccdff23ec91fd45b63bd268a26", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-25T09:17:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIxODA2MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r384218060", "bodyText": "@AjayJagan have you synced with @tiagodolphine to check the actual endpoint that needs to be called?", "author": "cristianonicolai", "createdAt": "2020-02-26T00:55:37Z", "path": "packages/management-console/server/server.js", "diffHunk": "@@ -54,6 +54,11 @@ app.post(\n   controller.callAbort\n );\n \n+app.post(\n+  '/management/processes/instances/:processInstanceIds/abortAll',", "originalCommit": "abe88fceebc3c2ccdff23ec91fd45b63bd268a26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNDg0MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r385504841", "bodyText": "@cristianonicolai - I will do it today. Sorry for the delay.", "author": "AjayJagan", "createdAt": "2020-02-28T04:41:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIxODA2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMDA2Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r384220067", "bodyText": "@AjayJagan @srambach I feel that having the Abort Selected button next to the filters is mixing two really different things. Should we move it to the right end side instead?", "author": "cristianonicolai", "createdAt": "2020-02-26T01:01:16Z", "path": "packages/management-console/src/components/Molecules/DataToolbarComponent/DataToolbarComponent.tsx", "diffHunk": "@@ -163,6 +173,19 @@ const DataToolbarComponent: React.FC<IOwnProps> = ({\n       <DataToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"xl\">\n         {toggleGroupItems}\n       </DataToolbarToggleGroup>\n+      <DataToolbarGroup>\n+        <DataToolbarItem>", "originalCommit": "abe88fceebc3c2ccdff23ec91fd45b63bd268a26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyNTE1NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r384225155", "bodyText": "@AjayJagan we should also include Skip selected and Retry selected, here", "author": "cristianonicolai", "createdAt": "2020-02-26T01:16:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMDA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyNTU4Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r384225586", "bodyText": "@srambach wdyt about adding selected to all of these buttons? I starting to think that will be just too big for the toolbar group.", "author": "cristianonicolai", "createdAt": "2020-02-26T01:18:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMDA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwOTQxNg==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r385509416", "bodyText": "This is how it looks", "author": "AjayJagan", "createdAt": "2020-02-28T05:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMDA2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTE2NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r384221164", "bodyText": "@AjayJagan @srambach We need to find an alternative way to display the process data. Showing the complete id String is really unnecessary to the end-user. The issue is that we can have multiple processes aborted with the same name.", "author": "cristianonicolai", "createdAt": "2020-02-26T01:05:18Z", "path": "packages/management-console/src/components/Atoms/ListComponent/ListComponent.tsx", "diffHunk": "@@ -0,0 +1,115 @@\n+import React from 'react';\n+import {\n+  TextContent,\n+  TextVariants,\n+  List,\n+  ListItem,\n+  Text,\n+  Divider\n+} from '@patternfly/react-core';\n+\n+interface IOwnProps {\n+  abortedMessageObj: any;\n+  completedMessageObj: any;\n+}\n+const ListComponent: React.FC<IOwnProps> = ({\n+  abortedMessageObj,\n+  completedMessageObj\n+}) => {\n+  return (\n+    <>\n+      {' '}\n+      {Object.keys(abortedMessageObj).length !== 0 &&\n+        Object.keys(completedMessageObj).length !== 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                The following processes were aborted :\n+              </Text>\n+            </TextContent>\n+            <List>\n+              {Object.entries(abortedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}", "originalCommit": "abe88fceebc3c2ccdff23ec91fd45b63bd268a26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyNjIxOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r384226218", "bodyText": "Perhaps use Text component={TextVariants.small} for the id after the name could help.", "author": "cristianonicolai", "createdAt": "2020-02-26T01:20:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTUzMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r384221533", "bodyText": "Can we name this some more context, like ProcessBulkListComponent?", "author": "cristianonicolai", "createdAt": "2020-02-26T01:06:38Z", "path": "packages/management-console/src/components/Atoms/ListComponent/ListComponent.tsx", "diffHunk": "@@ -0,0 +1,115 @@\n+import React from 'react';\n+import {\n+  TextContent,\n+  TextVariants,\n+  List,\n+  ListItem,\n+  Text,\n+  Divider\n+} from '@patternfly/react-core';\n+\n+interface IOwnProps {\n+  abortedMessageObj: any;\n+  completedMessageObj: any;\n+}\n+const ListComponent: React.FC<IOwnProps> = ({\n+  abortedMessageObj,\n+  completedMessageObj\n+}) => {\n+  return (\n+    <>\n+      {' '}\n+      {Object.keys(abortedMessageObj).length !== 0 &&\n+        Object.keys(completedMessageObj).length !== 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                The following processes were aborted :\n+              </Text>\n+            </TextContent>\n+            <List>\n+              {Object.entries(abortedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+            <Divider component=\"div\" className=\"pf-u-my-xl\" />\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                The following processes were skipped because they were either\n+                completed or aborted :\n+              </Text>\n+            </TextContent>\n+\n+            <List>\n+              {Object.entries(completedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+          </>\n+        )}\n+      {Object.keys(abortedMessageObj).length === 0 &&\n+        Object.keys(completedMessageObj).length !== 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                No processes were aborted\n+              </Text>\n+            </TextContent>\n+            <Divider component=\"div\" className=\"pf-u-my-xl\" />\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                The following processes were skipped because they were either\n+                completed or aborted :\n+              </Text>\n+            </TextContent>\n+\n+            <List>\n+              {Object.entries(completedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+          </>\n+        )}\n+      {Object.keys(abortedMessageObj).length !== 0 &&\n+        Object.keys(completedMessageObj).length === 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                The following processes were aborted :\n+              </Text>\n+            </TextContent>\n+            <List>\n+              {Object.entries(abortedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>\n+                    {process[0]} : {process[1]}\n+                  </ListItem>\n+                );\n+              })}\n+            </List>\n+            <Divider component=\"div\" className=\"pf-u-my-xl\" />\n+            <TextContent>\n+              <Text component={TextVariants.h2}>No processes were skipped</Text>\n+            </TextContent>\n+          </>\n+        )}\n+    </>\n+  );\n+};\n+\n+export default ListComponent;", "originalCommit": "abe88fceebc3c2ccdff23ec91fd45b63bd268a26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNTU3NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r385505574", "bodyText": "done", "author": "AjayJagan", "createdAt": "2020-02-28T04:45:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTUzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTczOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r384221738", "bodyText": "ProcessBulkModalComponent?", "author": "cristianonicolai", "createdAt": "2020-02-26T01:07:20Z", "path": "packages/management-console/src/components/Atoms/ModalboxComponent/ModalboxComponent.tsx", "diffHunk": "@@ -0,0 +1,123 @@\n+import React from 'react';\n+import {\n+  Modal,\n+  Title,\n+  TitleLevel,\n+  BaseSizes,\n+  Button,\n+  TextContent,\n+  Text\n+} from '@patternfly/react-core';\n+import ListComponent from '../ListComponent/ListComponent';\n+\n+interface IOwnProps {\n+  isModalLarge: any;\n+  modalTitle: any;\n+  modalContent?: string;\n+  handleModalToggle: any;\n+  abortedMessageObj?: any;\n+  completedMessageObj?: any;\n+  isModalOpen: boolean;\n+  checkedArray: string[];\n+  handleSkip?: any;\n+  handleRetry?: any;\n+  isAddonPresent?: boolean;\n+  isAbortModalOpen?: boolean;\n+  handleSkipModalToggle?: any;\n+  handleRetryModalToggle?: any;\n+}\n+const Modalbox: React.FC<IOwnProps> = ({\n+  modalContent,\n+  modalTitle,\n+  abortedMessageObj,\n+  completedMessageObj,\n+  isModalLarge,\n+  isModalOpen,\n+  checkedArray,\n+  handleModalToggle,\n+  handleSkip,\n+  handleRetry,\n+  isAddonPresent,\n+  isAbortModalOpen,\n+  handleSkipModalToggle,\n+  handleRetryModalToggle\n+}) => {\n+  return (\n+    <Modal\n+      isLarge={isModalLarge}\n+      isSmall={!isModalLarge}\n+      title=\"\"\n+      header={\n+        <Title headingLevel={TitleLevel.h1} size={BaseSizes['2xl']}>\n+          {modalTitle}\n+        </Title>\n+      }\n+      isOpen={isModalOpen}\n+      onClose={handleModalToggle}\n+      actions={\n+        isModalLarge && isAddonPresent\n+          ? [\n+              <Button\n+                key=\"confirm1\"\n+                variant=\"secondary\"\n+                onClick={() => {\n+                  handleSkip();\n+                  handleSkipModalToggle();\n+                }}\n+              >\n+                Skip\n+              </Button>,\n+              <Button\n+                key=\"confirm2\"\n+                variant=\"secondary\"\n+                onClick={() => {\n+                  handleRetry();\n+                  handleSkipModalToggle();\n+                }}\n+              >\n+                Retry\n+              </Button>,\n+              <Button\n+                key=\"confirm3\"\n+                variant=\"primary\"\n+                onClick={handleModalToggle}\n+              >\n+                Close\n+              </Button>\n+            ]\n+          : [\n+              <Button\n+                key=\"confirm3\"\n+                variant=\"primary\"\n+                onClick={handleModalToggle}\n+              >\n+                OK\n+              </Button>\n+            ]\n+      }\n+      isFooterLeftAligned={false}\n+    >\n+      {abortedMessageObj !== undefined &&\n+        completedMessageObj !== undefined &&\n+        isAbortModalOpen && (\n+          <ListComponent\n+            abortedMessageObj={abortedMessageObj}\n+            completedMessageObj={completedMessageObj}\n+          />\n+        )}\n+      <TextContent>\n+        <Text>\n+          <strong>{modalContent}</strong>\n+        </Text>\n+        {!checkedArray.includes('ABORTED') && isAbortModalOpen && (\n+          <Text>\n+            Note: The process status has been updated. The list may appear\n+            inconsistent until you refresh any applied filters.\n+          </Text>\n+        )}\n+      </TextContent>\n+    </Modal>\n+  );\n+};\n+\n+export default Modalbox;", "originalCommit": "abe88fceebc3c2ccdff23ec91fd45b63bd268a26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNTU4NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r385505585", "bodyText": "done", "author": "AjayJagan", "createdAt": "2020-02-28T04:45:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyNjQyMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r384226422", "bodyText": "Maybe use a https://www.patternfly.org/v4/documentation/react/components/simplelist instead?", "author": "cristianonicolai", "createdAt": "2020-02-26T01:21:02Z", "path": "packages/management-console/src/components/Atoms/ListComponent/ListComponent.tsx", "diffHunk": "@@ -0,0 +1,115 @@\n+import React from 'react';\n+import {\n+  TextContent,\n+  TextVariants,\n+  List,\n+  ListItem,\n+  Text,\n+  Divider\n+} from '@patternfly/react-core';\n+\n+interface IOwnProps {\n+  abortedMessageObj: any;\n+  completedMessageObj: any;\n+}\n+const ListComponent: React.FC<IOwnProps> = ({\n+  abortedMessageObj,\n+  completedMessageObj\n+}) => {\n+  return (\n+    <>\n+      {' '}\n+      {Object.keys(abortedMessageObj).length !== 0 &&\n+        Object.keys(completedMessageObj).length !== 0 && (\n+          <>\n+            <TextContent>\n+              <Text component={TextVariants.h2}>\n+                {' '}\n+                The following processes were aborted :\n+              </Text>\n+            </TextContent>\n+            <List>\n+              {Object.entries(abortedMessageObj).map(process => {\n+                return (\n+                  <ListItem key={process[0]}>", "originalCommit": "abe88fceebc3c2ccdff23ec91fd45b63bd268a26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5Mzc1Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r385193753", "bodyText": "I'm looking at maybe even just a content list. Is there any reason for it to have a hover or to be clickable?\n            <TextContent>\n              <Text component={TextVariants.h2}>\n                {' '}\n                The following processes were aborted:\n              </Text>\n              <TextList>\n                {Object.entries(abortedMessageObj).map(process => {\n                  return (\n                    <TextListItem key={process[0]}>\n                      {process[1]} <Text component={TextVariants.small} className=\"pf-u-display-inline\">{stringModifier(process[0])}</Text>\n                    </TextListItem>\n                  );\n                })}\n              </TextList>\n            </TextContent>", "author": "srambach", "createdAt": "2020-02-27T15:43:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyNjQyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxOTQxNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r385219417", "bodyText": "That also puts the id into \"small\" text.", "author": "srambach", "createdAt": "2020-02-27T16:25:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyNjQyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwODk2Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r385508962", "bodyText": "yup, done these . please have a look", "author": "AjayJagan", "createdAt": "2020-02-28T05:04:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyNjQyMg=="}], "type": "inlineReview"}, {"oid": "767215dbb533abb815769fea801d7c935b4ac167", "url": "https://github.com/kiegroup/kogito-apps/commit/767215dbb533abb815769fea801d7c935b4ac167", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-27T08:18:01Z", "type": "forcePushed"}, {"oid": "361ac9dfcc9f5f46a0083d1c4e8e1b9b761f63ad", "url": "https://github.com/kiegroup/kogito-apps/commit/361ac9dfcc9f5f46a0083d1c4e8e1b9b761f63ad", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-27T09:20:50Z", "type": "forcePushed"}, {"oid": "67a51d2108226a6173c05fe0848dc23db377ece2", "url": "https://github.com/kiegroup/kogito-apps/commit/67a51d2108226a6173c05fe0848dc23db377ece2", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-28T05:03:36Z", "type": "forcePushed"}, {"oid": "8085ce799a7a57398ed3ea3a7ab12947e1a80ae0", "url": "https://github.com/kiegroup/kogito-apps/commit/8085ce799a7a57398ed3ea3a7ab12947e1a80ae0", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-02-28T05:59:59Z", "type": "forcePushed"}, {"oid": "6ec19753b8cc9713ad7f17478bbb1b36e324e69b", "url": "https://github.com/kiegroup/kogito-apps/commit/6ec19753b8cc9713ad7f17478bbb1b36e324e69b", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-02T05:51:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2MzEwOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r387263109", "bodyText": "I don't think the variant is necessary.", "author": "srambach", "createdAt": "2020-03-03T20:05:18Z", "path": "packages/management-console/src/components/Molecules/DataToolbarComponent/DataToolbarComponent.tsx", "diffHunk": "@@ -170,6 +195,12 @@ const DataToolbarComponent: React.FC<IOwnProps> = ({\n           </Button>\n         </DataToolbarItem>\n       </DataToolbarGroup>\n+      <DataToolbarGroup\n+        variant=\"pagination\"", "originalCommit": "6ec19753b8cc9713ad7f17478bbb1b36e324e69b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MzE1OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r391383159", "bodyText": "removed", "author": "AjayJagan", "createdAt": "2020-03-12T03:27:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2MzEwOQ=="}], "type": "inlineReview"}, {"oid": "b0fcbe1bd025c696c211135a92f911ca414e94d8", "url": "https://github.com/kiegroup/kogito-apps/commit/b0fcbe1bd025c696c211135a92f911ca414e94d8", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-05T06:45:48Z", "type": "forcePushed"}, {"oid": "daae9642fbee750133f35e851a0c860657854a44", "url": "https://github.com/kiegroup/kogito-apps/commit/daae9642fbee750133f35e851a0c860657854a44", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-05T10:42:20Z", "type": "forcePushed"}, {"oid": "32f0c32374644467dd412dea3ff77becfa8023a3", "url": "https://github.com/kiegroup/kogito-apps/commit/32f0c32374644467dd412dea3ff77becfa8023a3", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-05T14:22:15Z", "type": "forcePushed"}, {"oid": "f985d96a181c20a235036b0e813c873135b62188", "url": "https://github.com/kiegroup/kogito-apps/commit/f985d96a181c20a235036b0e813c873135b62188", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-06T07:04:31Z", "type": "forcePushed"}, {"oid": "905fdfab4669d79820ef7169596e34caf199a04d", "url": "https://github.com/kiegroup/kogito-apps/commit/905fdfab4669d79820ef7169596e34caf199a04d", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-09T05:53:57Z", "type": "forcePushed"}, {"oid": "832d1cc9e0c14234093a4202a360b365169793ec", "url": "https://github.com/kiegroup/kogito-apps/commit/832d1cc9e0c14234093a4202a360b365169793ec", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-09T15:56:58Z", "type": "forcePushed"}, {"oid": "4d9bc4d7603f469361444573f541fd8e9d63900d", "url": "https://github.com/kiegroup/kogito-apps/commit/4d9bc4d7603f469361444573f541fd8e9d63900d", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-10T05:07:43Z", "type": "forcePushed"}, {"oid": "20cf198cebff0e4371fcada9cf36314913ca149f", "url": "https://github.com/kiegroup/kogito-apps/commit/20cf198cebff0e4371fcada9cf36314913ca149f", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-12T06:01:32Z", "type": "forcePushed"}, {"oid": "2475d9c6cca9e5ba44e6fb7c4107bc0e784cecc8", "url": "https://github.com/kiegroup/kogito-apps/commit/2475d9c6cca9e5ba44e6fb7c4107bc0e784cecc8", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-12T09:17:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4OTE3MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r391489171", "bodyText": "@srambach - Sarah, how do I align the \"abort selected\" button to the right . Should I use flexbox?", "author": "AjayJagan", "createdAt": "2020-03-12T09:19:53Z", "path": "packages/management-console/src/components/Molecules/DataToolbarComponent/DataToolbarComponent.tsx", "diffHunk": "@@ -168,6 +191,12 @@ const DataToolbarComponent: React.FC<IOwnProps> = ({\n           </Button>\n         </DataToolbarItem>\n       </DataToolbarGroup>\n+      <DataToolbarGroup\n+      >\n+        <DataToolbarItem>\n+          {buttonItems}\n+        </DataToolbarItem>\n+      </DataToolbarGroup>", "originalCommit": "2475d9c6cca9e5ba44e6fb7c4107bc0e784cecc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY4MzgyNA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r391683824", "bodyText": "You can add a utility class to that group to give it a left margin of auto, which pushes it to the right. Also, there's an extra layer of DataToolbarItems because there's one added here and also in buttonItems\n      <DataToolbarGroup  className=\"pf-u-ml-auto\"\n      >\n          {buttonItems}\n      </DataToolbarGroup>", "author": "srambach", "createdAt": "2020-03-12T15:03:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4OTE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY4NjEzOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r391686138", "bodyText": "Thanks \ud83d\udc4d", "author": "AjayJagan", "createdAt": "2020-03-12T15:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4OTE3MQ=="}], "type": "inlineReview"}, {"oid": "ba73c5b231d0b411130ed64a29abdd13c026d1c5", "url": "https://github.com/kiegroup/kogito-apps/commit/ba73c5b231d0b411130ed64a29abdd13c026d1c5", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-12T09:50:46Z", "type": "forcePushed"}, {"oid": "d8930e655d75508b85002ee2b0b31e648ca84a19", "url": "https://github.com/kiegroup/kogito-apps/commit/d8930e655d75508b85002ee2b0b31e648ca84a19", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-12T15:05:54Z", "type": "forcePushed"}, {"oid": "7b001cdd3acc5ca5c84440e5a2cc4858d5583e54", "url": "https://github.com/kiegroup/kogito-apps/commit/7b001cdd3acc5ca5c84440e5a2cc4858d5583e54", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-12T15:17:40Z", "type": "forcePushed"}, {"oid": "4f8cfe0e111e6ecd2953a72e5b6d3281457dba4f", "url": "https://github.com/kiegroup/kogito-apps/commit/4f8cfe0e111e6ecd2953a72e5b6d3281457dba4f", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-13T06:48:47Z", "type": "forcePushed"}, {"oid": "40f3ae6291466579f52f72c13bb2d03af9974423", "url": "https://github.com/kiegroup/kogito-apps/commit/40f3ae6291466579f52f72c13bb2d03af9974423", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-13T15:28:50Z", "type": "forcePushed"}, {"oid": "78d3b5883d53b0daec799dc5bbeedfbeea2e69c4", "url": "https://github.com/kiegroup/kogito-apps/commit/78d3b5883d53b0daec799dc5bbeedfbeea2e69c4", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-15T15:59:15Z", "type": "forcePushed"}, {"oid": "0f5b1ff8387125635cbbbd6b8dabea20fdce09af", "url": "https://github.com/kiegroup/kogito-apps/commit/0f5b1ff8387125635cbbbd6b8dabea20fdce09af", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-16T04:07:22Z", "type": "commit"}, {"oid": "0f5b1ff8387125635cbbbd6b8dabea20fdce09af", "url": "https://github.com/kiegroup/kogito-apps/commit/0f5b1ff8387125635cbbbd6b8dabea20fdce09af", "message": "KOGITO-789 Bulk abort operations for process instance list", "committedDate": "2020-03-16T04:07:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3NDE2NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/68#discussion_r393874165", "bodyText": "I think just \"top\", \"right\", \"bottom\" is good.", "author": "srambach", "createdAt": "2020-03-17T18:08:45Z", "path": "packages/management-console/src/components/Molecules/DataListItemComponent/tests/__snapshots__/DataListItemComponent.test.tsx.snap", "diffHunk": "@@ -2,86 +2,132 @@\n \n exports[`DataListItem component tests Snapshot tests 1`] = `\n <Fragment>\n-  <Modal\n-    actions={\n+  <Modalbox\n+    abortedMessageObj={\n+      Object {\n+        \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\": Object {\n+          \"addons\": Array [],\n+          \"childProcessInstances\": Array [\n+            Object {\n+              \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21eaccd\",\n+              \"processName\": \"FlightBooking test 1\",\n+            },\n+          ],\n+          \"end\": \"2019-10-22T05:40:44.089Z\",\n+          \"endpoint\": \"http://localhost:4000\",\n+          \"error\": Object {\n+            \"message\": \"Something went wrong\",\n+            \"nodeDefinitionId\": \"a1e139d5-81c77-48c9-84ae-34578e90433n\",\n+          },\n+          \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\",\n+          \"isChecked\": false,\n+          \"lastUpdate\": \"2019-10-22T03:40:44.089Z\",\n+          \"nodes\": Array [\n+            Object {\n+              \"definitionId\": \"EndEvent_1\",\n+              \"enter\": \"2019-10-22T04:43:01.144Z\",\n+              \"exit\": \"2019-10-22T04:43:01.144Z\",\n+              \"id\": \"7244ba1b-75ec-4789-8c65-499a0c5b1a6f\",\n+              \"name\": \"End Event 1\",\n+              \"type\": \"EndNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"ServiceTask_1\",\n+              \"enter\": \"2019-10-22T04:43:01.144Z\",\n+              \"exit\": \"2019-10-22T04:43:01.144Z\",\n+              \"id\": \"2f588da5-a323-4111-9017-3093ef9319d1\",\n+              \"name\": \"Book flight\",\n+              \"type\": \"WorkItemNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"StartEvent_1\",\n+              \"enter\": \"2019-10-22T04:43:01.144Z\",\n+              \"exit\": \"2019-10-22T04:43:01.144Z\",\n+              \"id\": \"6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2\",\n+              \"name\": \"StartProcess\",\n+              \"type\": \"StartNode\",\n+            },\n+          ],\n+          \"parentProcessInstance\": Object {\n+            \"id\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n+            \"processName\": \"travels\",\n+          },\n+          \"parentProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n+          \"processId\": \"flightBooking\",\n+          \"processName\": \"FlightBooking\",\n+          \"roles\": Array [],\n+          \"rootProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n+          \"start\": \"2019-10-22T03:40:44.089Z\",\n+          \"state\": \"COMPLETED\",\n+          \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n+        },\n+      }\n+    }\n+    checkedArray={\n       Array [\n-        <Unknown\n-          onClick={[Function]}\n-          variant=\"primary\"\n-        >\n-          OK\n-        </Unknown>,\n+        \"ACTIVE\",\n       ]\n     }\n-    appendTo={<body />}\n-    ariaDescribedById=\"\"\n-    className=\"\"\n-    header={\n-      <Title\n-        headingLevel=\"h1\"\n-        size=\"2xl\"\n-      >\n-        <FontAwesomeIcon\n-          border={false}\n-          className=\"pf-u-mr-md\"\n-          color=\"var(--pf-global--danger-color--100)\"\n-          fixedWidth={false}\n-          flip={null}\n-          icon={\n-            Object {\n-              \"icon\": Array [\n-                512,\n-                512,\n-                Array [],\n-                \"f057\",\n-                \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\",\n-              ],\n-              \"iconName\": \"times-circle\",\n-              \"prefix\": \"fas\",\n-            }\n-          }\n-          inverse={false}\n-          listItem={false}\n-          mask={null}\n-          pull={null}\n-          pulse={false}\n-          rotation={null}\n-          size=\"sm\"\n-          spin={false}\n-          swapOpacity={false}\n-          symbol={false}\n-          title=\"\"\n-          transform={null}\n-        />\n-        \n-      </Title>\n+    completedMessageObj={Object {}}\n+    handleModalToggle={[Function]}\n+    isAbortModalOpen={false}\n+    isModalLarge={false}\n+    isModalOpen={false}\n+    isSingleAbort={true}\n+  />\n+  <Modalbox\n+    checkedArray={\n+      Array [\n+        \"ACTIVE\",\n+      ]\n     }\n-    hideTitle={false}\n-    isFooterLeftAligned={false}\n-    isLarge={false}\n-    isOpen={false}\n-    isSmall={true}\n-    onClose={[Function]}\n-    showClose={true}\n-    title=\"\"\n-  >\n-    <TextContent>\n-      <Text>\n-        <strong />\n-      </Text>\n-    </TextContent>\n-  </Modal>\n+    handleModalToggle={null}\n+    isModalLarge={false}\n+    isModalOpen={false}\n+    modalContent=\"\"\n+  />\n   <DataListItem\n     aria-labelledby=\"kie-datalist-item\"\n     isExpanded={false}\n   >\n     <DataListItemRow>\n-      <DataListCheck\n-        aria-labelledby=\"width-kie-datalist-item\"\n-        checked={false}\n-        name=\"width-kie-datalist-item\"\n-        onChange={[Function]}\n-      />\n+      <Tooltip\n+        appendTo={[Function]}\n+        aria=\"describedby\"\n+        boundary=\"window\"\n+        className=\"\"\n+        content=\"Management add-on capability not enabled. Contact your administrator to set up.\"\n+        distance={-15}\n+        enableFlip={true}\n+        entryDelay={500}\n+        exitDelay={500}\n+        flipBehavior={\n+          Array [\n+            \"top\",\n+            \"right\",\n+            \"bottom\",\n+            \"left\",\n+            \"top\",\n+            \"right\",\n+            \"bottom\",", "originalCommit": "0f5b1ff8387125635cbbbd6b8dabea20fdce09af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}