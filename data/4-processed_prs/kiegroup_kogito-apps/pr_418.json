{"pr_number": 418, "pr_title": "KOGITO-3137 add jobs panel to process details", "pr_createdAt": "2020-08-27T07:41:07Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/418", "timeline": [{"oid": "1b204253f2b24e34de3b22b1b750540ad7fddb0b", "url": "https://github.com/kiegroup/kogito-apps/commit/1b204253f2b24e34de3b22b1b750540ad7fddb0b", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-27T07:58:23Z", "type": "forcePushed"}, {"oid": "630e88015054dfd61ac83774f53bb1be329ea01f", "url": "https://github.com/kiegroup/kogito-apps/commit/630e88015054dfd61ac83774f53bb1be329ea01f", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-27T09:21:29Z", "type": "forcePushed"}, {"oid": "2956d618eeac7051d1bd4c6da391a1f983fe44a8", "url": "https://github.com/kiegroup/kogito-apps/commit/2956d618eeac7051d1bd4c6da391a1f983fe44a8", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-27T10:05:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg4NDQxNQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r478884415", "bodyText": "@AjayJagan GET_JOBS_BY_PROC_INST_ID and  getJobsByProcessInstanceId just to be able to differentiate in a future", "author": "nmirasch", "createdAt": "2020-08-28T07:28:59Z", "path": "ui-packages/packages/common/src/graphql/queries.tsx", "diffHunk": "@@ -271,3 +271,24 @@ const GET_USER_TASK = gql`\n     }\n   }\n `;\n+\n+const GET_JOBS = gql`", "originalCommit": "2956d618eeac7051d1bd4c6da391a1f983fe44a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0MTE5Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479141196", "bodyText": "done :)", "author": "AjayJagan", "createdAt": "2020-08-28T11:10:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg4NDQxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA4MTk1Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479081956", "bodyText": "@AjayJagan  the rest of Job fields should be Capitalized as 'Process Id'", "author": "nmirasch", "createdAt": "2020-08-28T10:19:38Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobsPanelDetailsModal/JobsPanelDetailsModal.tsx", "diffHunk": "@@ -0,0 +1,169 @@\n+import React from 'react';\n+import { OUIAProps, componentOuiaProps, GraphQL } from '@kogito-apps/common';\n+import {\n+  Modal,\n+  Title,\n+  TitleSizes,\n+  Button,\n+  TextContent,\n+  Flex,\n+  FlexItem,\n+  Split,\n+  SplitItem,\n+  Text,\n+  TextVariants,\n+  ClipboardCopyVariant,\n+  ClipboardCopy\n+} from '@patternfly/react-core';\n+import Moment from 'react-moment';\n+interface JobsPanelDetailsModalProps {\n+  modalTitle: JSX.Element;\n+  isModalOpen: boolean;\n+  handleModalToggle: () => void;\n+  job: GraphQL.Job;\n+}\n+const JobsPanelDetailsModal: React.FC<JobsPanelDetailsModalProps &\n+  OUIAProps> = ({\n+  modalTitle,\n+  isModalOpen,\n+  handleModalToggle,\n+  job,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  return (\n+    <Modal\n+      variant=\"large\"\n+      aria-labelledby=\"Job details modal\"\n+      aria-label=\"Job details modal\"\n+      title=\"\"\n+      header={\n+        <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>\n+          {modalTitle}\n+        </Title>\n+      }\n+      isOpen={isModalOpen}\n+      onClose={handleModalToggle}\n+      actions={[\n+        <Button\n+          key=\"confirm-selection\"\n+          variant=\"primary\"\n+          onClick={handleModalToggle}\n+        >\n+          OK\n+        </Button>\n+      ]}\n+      {...componentOuiaProps(ouiaId, 'job-details-modal', ouiaSafe)}\n+    >\n+      <div style={{ padding: '30px' }}>\n+        <TextContent>\n+          <Flex direction={{ default: 'column' }}>\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  <Text component={TextVariants.h6}>Process Id: </Text>{' '}\n+                </SplitItem>\n+                <SplitItem>{job.processId}</SplitItem>\n+              </Split>\n+            </FlexItem>\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  {' '}\n+                  <Text component={TextVariants.h6}>\n+                    processInstance Id:{' '}", "originalCommit": "2956d618eeac7051d1bd4c6da391a1f983fe44a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0MTY0NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479141644", "bodyText": "Capitalized all keys \ud83d\udc4d", "author": "AjayJagan", "createdAt": "2020-08-28T11:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA4MTk1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA4OTAyNQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479089025", "bodyText": "@AjayJagan I'm not sure if we  need  this ClipboardCopy to work with the callbackEndpoinf, if it's something expected that the user tries the call directly and,  in that case, if we need to make it easier.", "author": "nmirasch", "createdAt": "2020-08-28T10:25:42Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobsPanelDetailsModal/JobsPanelDetailsModal.tsx", "diffHunk": "@@ -0,0 +1,169 @@\n+import React from 'react';\n+import { OUIAProps, componentOuiaProps, GraphQL } from '@kogito-apps/common';\n+import {\n+  Modal,\n+  Title,\n+  TitleSizes,\n+  Button,\n+  TextContent,\n+  Flex,\n+  FlexItem,\n+  Split,\n+  SplitItem,\n+  Text,\n+  TextVariants,\n+  ClipboardCopyVariant,\n+  ClipboardCopy\n+} from '@patternfly/react-core';\n+import Moment from 'react-moment';\n+interface JobsPanelDetailsModalProps {\n+  modalTitle: JSX.Element;\n+  isModalOpen: boolean;\n+  handleModalToggle: () => void;\n+  job: GraphQL.Job;\n+}\n+const JobsPanelDetailsModal: React.FC<JobsPanelDetailsModalProps &\n+  OUIAProps> = ({\n+  modalTitle,\n+  isModalOpen,\n+  handleModalToggle,\n+  job,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  return (\n+    <Modal\n+      variant=\"large\"\n+      aria-labelledby=\"Job details modal\"\n+      aria-label=\"Job details modal\"\n+      title=\"\"\n+      header={\n+        <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>\n+          {modalTitle}\n+        </Title>\n+      }\n+      isOpen={isModalOpen}\n+      onClose={handleModalToggle}\n+      actions={[\n+        <Button\n+          key=\"confirm-selection\"\n+          variant=\"primary\"\n+          onClick={handleModalToggle}\n+        >\n+          OK\n+        </Button>\n+      ]}\n+      {...componentOuiaProps(ouiaId, 'job-details-modal', ouiaSafe)}\n+    >\n+      <div style={{ padding: '30px' }}>\n+        <TextContent>\n+          <Flex direction={{ default: 'column' }}>\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  <Text component={TextVariants.h6}>Process Id: </Text>{' '}\n+                </SplitItem>\n+                <SplitItem>{job.processId}</SplitItem>\n+              </Split>\n+            </FlexItem>\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  {' '}\n+                  <Text component={TextVariants.h6}>\n+                    processInstance Id:{' '}\n+                  </Text>{' '}\n+                </SplitItem>\n+                <SplitItem>{job.processInstanceId}</SplitItem>\n+              </Split>\n+            </FlexItem>\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  <Text component={TextVariants.h6}>status: </Text>{' '}\n+                </SplitItem>\n+                <SplitItem>{job.status}</SplitItem>\n+              </Split>\n+            </FlexItem>\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  <Text component={TextVariants.h6}>priority: </Text>{' '}\n+                </SplitItem>\n+                <SplitItem>{job.priority}</SplitItem>\n+              </Split>\n+            </FlexItem>\n+            {job.repeatInterval && (\n+              <FlexItem>\n+                <Split hasGutter>\n+                  <SplitItem>\n+                    <Text component={TextVariants.h6}>repeatInterval: </Text>\n+                  </SplitItem>\n+                  <SplitItem>{job.repeatInterval}</SplitItem>\n+                </Split>\n+              </FlexItem>\n+            )}\n+            {job.repeatLimit && (\n+              <FlexItem>\n+                <Split hasGutter>\n+                  <SplitItem>\n+                    <Text component={TextVariants.h6}>repeatLimit: </Text>\n+                  </SplitItem>\n+                  <SplitItem>{job.repeatLimit}</SplitItem>\n+                </Split>\n+              </FlexItem>\n+            )}\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  <Text component={TextVariants.h6}>scheduledId: </Text>\n+                </SplitItem>\n+                <SplitItem>{job.scheduledId}</SplitItem>\n+              </Split>\n+            </FlexItem>\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  <Text component={TextVariants.h6}>retries: </Text>\n+                </SplitItem>\n+                <SplitItem>{job.retries}</SplitItem>\n+              </Split>\n+            </FlexItem>\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  <Text component={TextVariants.h6}>lastUpdate: </Text>\n+                </SplitItem>\n+                <SplitItem>\n+                  <Moment fromNow>{new Date(`${job.lastUpdate}`)}</Moment>\n+                </SplitItem>\n+              </Split>\n+            </FlexItem>\n+            <FlexItem>\n+              <Split hasGutter>\n+                <SplitItem>\n+                  <Text\n+                    component={TextVariants.h6}\n+                    style={{ whiteSpace: 'nowrap' }}\n+                  >\n+                    callbackEndpoint:{' '}\n+                  </Text>\n+                </SplitItem>\n+                <SplitItem>\n+                  <ClipboardCopy", "originalCommit": "2956d618eeac7051d1bd4c6da391a1f983fe44a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0MTkzNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479141937", "bodyText": "Removed clipboard copy", "author": "AjayJagan", "createdAt": "2020-08-28T11:11:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA4OTAyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA5NDg2Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479094863", "bodyText": "@AjayJagan To be aligned with Process instance list and how the status are showed,  here we can add an icon depending on the status, before status", "author": "nmirasch", "createdAt": "2020-08-28T10:30:37Z", "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessDetailsJobsPanel/ProcessDetailsJobsPanel.tsx", "diffHunk": "@@ -0,0 +1,126 @@\n+import React, { useState, useEffect } from 'react';\n+import {\n+  Card,\n+  CardHeader,\n+  Title,\n+  CardBody,\n+  Tooltip\n+} from '@patternfly/react-core';\n+import {\n+  Table,\n+  TableVariant,\n+  TableHeader,\n+  TableBody\n+} from '@patternfly/react-table';\n+import Moment from 'react-moment';\n+import JobActionsKebab from '../../Atoms/JobActionsKebab/JobActionsKebab';\n+import { OUIAProps, componentOuiaProps, GraphQL } from '@kogito-apps/common';\n+interface JobsPanelProps {\n+  processInstanceId: string;\n+}\n+const ProcessDetailsJobsPanel: React.FC<JobsPanelProps & OUIAProps> = ({\n+  processInstanceId,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  const [rows, setRows] = useState([]);\n+\n+  const columns = [\n+    {\n+      title: 'Job id'\n+    },\n+    {\n+      title: 'Status'\n+    },\n+    {\n+      title: 'Expiration time'\n+    },\n+    {\n+      title: 'Actions'\n+    }\n+  ];\n+\n+  const { data, loading } = GraphQL.useGetJobsQuery({\n+    variables: {\n+      processInstanceId\n+    }\n+  });\n+\n+  const createRows = jobsArray => {\n+    const jobRows = [];\n+    jobsArray.forEach(job => {\n+      jobRows.push({\n+        id: job.id,\n+        cells: [\n+          {\n+            title: (\n+              <Tooltip content={job.id}>\n+                <span>{job.id.substring(0, 7)}</span>\n+              </Tooltip>\n+            )\n+          },\n+          {\n+            title: job.status", "originalCommit": "2956d618eeac7051d1bd4c6da391a1f983fe44a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE1MDM0OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479150349", "bodyText": "@nmirasch - I have added Icons for the status .. it would be great if you have a look :)", "author": "AjayJagan", "createdAt": "2020-08-28T11:18:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA5NDg2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzNTg0Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479135843", "bodyText": "@AjayJagan  we need  prepare this component to handle other actions, something like:\n\nDetails\n..\nand onDetailsClick would be the one that opens the modal", "author": "nmirasch", "createdAt": "2020-08-28T11:06:11Z", "path": "ui-packages/packages/management-console/src/components/Atoms/JobActionsKebab/JobActionsKebab.tsx", "diffHunk": "@@ -0,0 +1,63 @@\n+import React, { useState } from 'react';\n+import { DropdownItem, Dropdown, KebabToggle } from '@patternfly/react-core';\n+import JobsPanelDetailsModal from '../JobsPanelDetailsModal/JobsPanelDetailsModal';\n+import { OUIAProps, componentOuiaProps, GraphQL } from '@kogito-apps/common';\n+import { setTitle } from '../../../utils/Utils';\n+\n+interface JobActionsProps {\n+  job: GraphQL.Job;\n+}\n+\n+const JobActionsKebab: React.FC<JobActionsProps & OUIAProps> = ({\n+  job,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  const [isKebabOpen, setIsKebabOpen] = useState<boolean>(false);\n+  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n+\n+  const handleModalToggle = () => {\n+    setIsModalOpen(!isModalOpen);\n+  };\n+\n+  const onSelect = event => {\n+    /* istanbul ignore else */\n+    if (event.target.innerHTML === 'Details') {\n+      handleModalToggle();\n+    }\n+    setIsKebabOpen(!isKebabOpen);\n+  };\n+\n+  const onToggle = isOpen => {\n+    setIsKebabOpen(isOpen);\n+  };\n+\n+  const dropdownItems = [\n+    <DropdownItem key=\"action\" component=\"button\">", "originalCommit": "2956d618eeac7051d1bd4c6da391a1f983fe44a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0NzcwMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479147702", "bodyText": "I swear the code was there :-)", "author": "nmirasch", "createdAt": "2020-08-28T11:16:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzNTg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0OTA1Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479149053", "bodyText": "hehe!! no problem Nieves :)", "author": "AjayJagan", "createdAt": "2020-08-28T11:17:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzNTg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE1MjY0OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479152648", "bodyText": "done", "author": "AjayJagan", "createdAt": "2020-08-28T11:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzNTg0Mw=="}], "type": "inlineReview"}, {"oid": "643f7003f968acd22627d8ff4579cf1870660fbf", "url": "https://github.com/kiegroup/kogito-apps/commit/643f7003f968acd22627d8ff4579cf1870660fbf", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-28T11:09:28Z", "type": "forcePushed"}, {"oid": "068a72045be03ed15fc8ac81919d64bde8bfb61f", "url": "https://github.com/kiegroup/kogito-apps/commit/068a72045be03ed15fc8ac81919d64bde8bfb61f", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-28T11:19:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2OTEyOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479969128", "bodyText": "@AjayJagan Make sense to have   two different function here, one for jobsStatusIcons and one for Process Instances icons.. I guess in future we will need other functions to show icons related with milestones status..", "author": "nmirasch", "createdAt": "2020-08-31T08:13:33Z", "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "diffHunk": "@@ -6,17 +6,22 @@ import {\n   BanIcon,\n   PausedIcon,\n   ErrorCircleOIcon,\n-  InfoCircleIcon\n+  InfoCircleIcon,\n+  UndoIcon,\n+  ClockIcon\n } from '@patternfly/react-icons';\n import { GraphQL } from '@kogito-apps/common';\n import ProcessInstanceState = GraphQL.ProcessInstanceState;\n import ProcessInstance = GraphQL.ProcessInstance;\n+import JobStatus = GraphQL.JobStatus;\n import {\n   ProcessInstanceBulkList,\n   OperationType\n } from '../components/Molecules/ProcessListToolbar/ProcessListToolbar';\n \n-export const stateIconCreator = (state: ProcessInstanceState): JSX.Element => {\n+export const stateIconCreator = (", "originalCommit": "068a72045be03ed15fc8ac81919d64bde8bfb61f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk4NDEzMQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r479984131", "bodyText": "changed to 2 different functions:\n1.ProcessInstanceIconCreator\n2.JobsIconCreator", "author": "AjayJagan", "createdAt": "2020-08-31T08:42:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2OTEyOA=="}], "type": "inlineReview"}, {"oid": "65224f8f7ae570210dac072bd84ebd2c0626ca9d", "url": "https://github.com/kiegroup/kogito-apps/commit/65224f8f7ae570210dac072bd84ebd2c0626ca9d", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-31T08:42:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAwNTI1Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r480005252", "bodyText": "the formatting above is different - no commas, each property on separate line, please keep this in sync.", "author": "jstastny-cz", "createdAt": "2020-08-31T09:23:58Z", "path": "ui-packages/packages/management-console/server/MockData/types.js", "diffHunk": "@@ -28,6 +28,7 @@ module.exports = typeDefs = gql`\n       orderBy: VisaApplicationsOrderBy\n       pagination: Pagination\n     ): [VisaApplications]\n+    Jobs(where: JobArgument, orderBy: JobOrderBy, pagination: Pagination):  [Job]", "originalCommit": "65224f8f7ae570210dac072bd84ebd2c0626ca9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA1ODM4Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r480058387", "bodyText": "formatted \ud83d\udc4d", "author": "AjayJagan", "createdAt": "2020-08-31T11:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAwNTI1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxMDI4Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r480010287", "bodyText": "whitespace formatting", "author": "jstastny-cz", "createdAt": "2020-08-31T09:33:55Z", "path": "ui-packages/packages/management-console/server/server.js", "diffHunk": "@@ -140,6 +140,15 @@ const resolvers = {\n       }\n       console.log('result length: ' + result.length);\n       return result;\n+    },\n+    Jobs:async (parent,args)=>{", "originalCommit": "65224f8f7ae570210dac072bd84ebd2c0626ca9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA1ODQ0OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r480058449", "bodyText": "formatted \ud83d\udc4d", "author": "AjayJagan", "createdAt": "2020-08-31T11:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxMDI4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0MDY4Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r480040682", "bodyText": "add types please (both this variable and function return value)", "author": "jstastny-cz", "createdAt": "2020-08-31T10:39:49Z", "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessDetailsJobsPanel/ProcessDetailsJobsPanel.tsx", "diffHunk": "@@ -0,0 +1,127 @@\n+import React, { useState, useEffect } from 'react';\n+import {\n+  Card,\n+  CardHeader,\n+  Title,\n+  CardBody,\n+  Tooltip\n+} from '@patternfly/react-core';\n+import {\n+  Table,\n+  TableVariant,\n+  TableHeader,\n+  TableBody\n+} from '@patternfly/react-table';\n+import Moment from 'react-moment';\n+import JobActionsKebab from '../../Atoms/JobActionsKebab/JobActionsKebab';\n+import { OUIAProps, componentOuiaProps, GraphQL } from '@kogito-apps/common';\n+import { JobsIconCreator } from '../../../utils/Utils';\n+interface JobsPanelProps {\n+  processInstanceId: string;\n+}\n+const ProcessDetailsJobsPanel: React.FC<JobsPanelProps & OUIAProps> = ({\n+  processInstanceId,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  const [rows, setRows] = useState([]);\n+\n+  const columns = [\n+    {\n+      title: 'Job id'\n+    },\n+    {\n+      title: 'Status'\n+    },\n+    {\n+      title: 'Expiration time'\n+    },\n+    {\n+      title: 'Actions'\n+    }\n+  ];\n+\n+  const { data, loading } = GraphQL.useGetJobsByProcessInstanceIdQuery({\n+    variables: {\n+      processInstanceId\n+    }\n+  });\n+\n+  const createRows = jobsArray => {\n+    const jobRows = [];", "originalCommit": "65224f8f7ae570210dac072bd84ebd2c0626ca9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA1ODUzMQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r480058531", "bodyText": "added types :)", "author": "AjayJagan", "createdAt": "2020-08-31T11:08:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0MDY4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0MTE1Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r480041152", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    {...componentOuiaProps(ouiaId, 'process-details-jobs-panel', ouiaSafe)}\n          \n          \n            \n                    {...componentOuiaProps(ouiaId, 'process-details-jobs-panel', ouiaSafe?ouiaSafe:!loading)}", "author": "jstastny-cz", "createdAt": "2020-08-31T10:40:54Z", "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessDetailsJobsPanel/ProcessDetailsJobsPanel.tsx", "diffHunk": "@@ -0,0 +1,127 @@\n+import React, { useState, useEffect } from 'react';\n+import {\n+  Card,\n+  CardHeader,\n+  Title,\n+  CardBody,\n+  Tooltip\n+} from '@patternfly/react-core';\n+import {\n+  Table,\n+  TableVariant,\n+  TableHeader,\n+  TableBody\n+} from '@patternfly/react-table';\n+import Moment from 'react-moment';\n+import JobActionsKebab from '../../Atoms/JobActionsKebab/JobActionsKebab';\n+import { OUIAProps, componentOuiaProps, GraphQL } from '@kogito-apps/common';\n+import { JobsIconCreator } from '../../../utils/Utils';\n+interface JobsPanelProps {\n+  processInstanceId: string;\n+}\n+const ProcessDetailsJobsPanel: React.FC<JobsPanelProps & OUIAProps> = ({\n+  processInstanceId,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  const [rows, setRows] = useState([]);\n+\n+  const columns = [\n+    {\n+      title: 'Job id'\n+    },\n+    {\n+      title: 'Status'\n+    },\n+    {\n+      title: 'Expiration time'\n+    },\n+    {\n+      title: 'Actions'\n+    }\n+  ];\n+\n+  const { data, loading } = GraphQL.useGetJobsByProcessInstanceIdQuery({\n+    variables: {\n+      processInstanceId\n+    }\n+  });\n+\n+  const createRows = jobsArray => {\n+    const jobRows = [];\n+    jobsArray.forEach(job => {\n+      jobRows.push({\n+        id: job.id,\n+        cells: [\n+          {\n+            title: (\n+              <Tooltip content={job.id}>\n+                <span>{job.id.substring(0, 7)}</span>\n+              </Tooltip>\n+            )\n+          },\n+          {\n+            title: JobsIconCreator(job.status)\n+          },\n+          {\n+            title: (\n+              <React.Fragment>\n+                {job.expirationTime ? (\n+                  <>\n+                    {' '}\n+                    expires in{' '}\n+                    <Moment fromNow ago>\n+                      {job.expirationTime}\n+                    </Moment>\n+                  </>\n+                ) : (\n+                  'N/A'\n+                )}\n+              </React.Fragment>\n+            )\n+          },\n+          {\n+            title: <JobActionsKebab job={job} />\n+          }\n+        ]\n+      });\n+    });\n+    return jobRows;\n+  };\n+\n+  useEffect(() => {\n+    if (!loading && data) {\n+      setRows(createRows(data.Jobs));\n+    }\n+  }, [data]);\n+\n+  if (!loading && data && data.Jobs.length > 0) {\n+    return (\n+      <Card\n+        {...componentOuiaProps(ouiaId, 'process-details-jobs-panel', ouiaSafe)}", "originalCommit": "65224f8f7ae570210dac072bd84ebd2c0626ca9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA1ODYyNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/418#discussion_r480058627", "bodyText": "changes added \ud83d\udc4d", "author": "AjayJagan", "createdAt": "2020-08-31T11:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0MTE1Mg=="}], "type": "inlineReview"}, {"oid": "92e4cb06266cb240a912d23b546dd3502a58ad67", "url": "https://github.com/kiegroup/kogito-apps/commit/92e4cb06266cb240a912d23b546dd3502a58ad67", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-31T11:06:19Z", "type": "forcePushed"}, {"oid": "73376f1063291f07f79d72f2c41e934043993be4", "url": "https://github.com/kiegroup/kogito-apps/commit/73376f1063291f07f79d72f2c41e934043993be4", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-31T11:12:20Z", "type": "forcePushed"}, {"oid": "66f6363a9a052f801740ac3e0c6d0e13b7d23499", "url": "https://github.com/kiegroup/kogito-apps/commit/66f6363a9a052f801740ac3e0c6d0e13b7d23499", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-31T11:30:04Z", "type": "forcePushed"}, {"oid": "195e4a583f54dd35c9d199dcddff4e1a48a9036d", "url": "https://github.com/kiegroup/kogito-apps/commit/195e4a583f54dd35c9d199dcddff4e1a48a9036d", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-31T11:58:56Z", "type": "forcePushed"}, {"oid": "b0ddc696bf85fb352c94160611d98ff55052e173", "url": "https://github.com/kiegroup/kogito-apps/commit/b0ddc696bf85fb352c94160611d98ff55052e173", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-31T12:01:31Z", "type": "forcePushed"}, {"oid": "04b21a07ad34909620940da6c8a1dc6d3090c508", "url": "https://github.com/kiegroup/kogito-apps/commit/04b21a07ad34909620940da6c8a1dc6d3090c508", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-08-31T12:11:49Z", "type": "forcePushed"}, {"oid": "9f5187c3c9ca5a57a7a814e5c51c2bfb1f007cb8", "url": "https://github.com/kiegroup/kogito-apps/commit/9f5187c3c9ca5a57a7a814e5c51c2bfb1f007cb8", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-09-02T04:08:58Z", "type": "forcePushed"}, {"oid": "b62ffc7e0865f88f351e1848c9498eed29717881", "url": "https://github.com/kiegroup/kogito-apps/commit/b62ffc7e0865f88f351e1848c9498eed29717881", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-09-02T04:12:53Z", "type": "forcePushed"}, {"oid": "46baa7293536ce5a37bc7a0a23bb82b04c75f24a", "url": "https://github.com/kiegroup/kogito-apps/commit/46baa7293536ce5a37bc7a0a23bb82b04c75f24a", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-09-02T10:47:38Z", "type": "forcePushed"}, {"oid": "9a711afcd8f3a2de055129ec12cfeb60b82fdf4b", "url": "https://github.com/kiegroup/kogito-apps/commit/9a711afcd8f3a2de055129ec12cfeb60b82fdf4b", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-09-02T10:50:59Z", "type": "forcePushed"}, {"oid": "d76a4d4fd0535158e452556a3cfebcd9ef8a0027", "url": "https://github.com/kiegroup/kogito-apps/commit/d76a4d4fd0535158e452556a3cfebcd9ef8a0027", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-09-02T10:51:39Z", "type": "commit"}, {"oid": "d76a4d4fd0535158e452556a3cfebcd9ef8a0027", "url": "https://github.com/kiegroup/kogito-apps/commit/d76a4d4fd0535158e452556a3cfebcd9ef8a0027", "message": "KOGITO-3137 add jobs panel to process details", "committedDate": "2020-09-02T10:51:39Z", "type": "forcePushed"}]}