{"pr_number": 147, "pr_title": "[0.9.x] KOGITO-1614 - Review process details timeline style including abort and retry operations", "pr_createdAt": "2020-04-03T05:06:49Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/147", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0MTk4MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/147#discussion_r402841980", "bodyText": "just needs adjusting the format here.", "author": "cristianonicolai", "createdAt": "2020-04-03T08:42:01Z", "path": "packages/management-console/src/components/Organisms/ProcessDetailsTimeline/ProcessDetailsTimeline.css", "diffHunk": "@@ -1,5 +1,16 @@\n-.processdetailstimetine-iconstyle {\n-    position: relative;\n-    top: 3px;\n-    left: 3px;\n-}\n\\ No newline at end of file\n+/* This adds the line extending the length of the timeline, while the items are pushed left to overlap it halfway. The first child is pushed up to hide the top of the dashed line. The status icon must be given a background so that the line doesn't show through the icon. */\n+.kogito-management-console--timeline {\n+    border-left: var(--pf-global--BorderWidth--md) dashed var(--pf-global--BorderColor--300);\n+    margin-left: var(--pf-global--spacer--sm);\n+    margin-top: var(--pf-global--spacer--sm);\n+  }\n+  .kogito-management-console--timeline-item {", "originalCommit": "840c6635fe8b9da2e714337d33ce0e7be3a4899b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyMjY4OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/147#discussion_r403822688", "bodyText": "done \ud83d\udc4d", "author": "AjayJagan", "createdAt": "2020-04-06T04:23:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0MTk4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1MTk3OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/147#discussion_r402851978", "bodyText": "@AjayJagan any chance this could be made into a reusable component shared across process list and details?", "author": "cristianonicolai", "createdAt": "2020-04-03T08:53:15Z", "path": "packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -20,14 +20,104 @@ import { useGetProcessInstanceByIdQuery } from '../../../graphql/types';\n import ProcessDescriptor from '../../Molecules/ProcessDescriptor/ProcessDescriptor';\n import SpinnerComponent from '../../Atoms/SpinnerComponent/SpinnerComponent';\n import PageTitleComponent from '../../Molecules/PageTitleComponent/PageTitleComponent';\n+import ProcessBulkModalComponent from '../../Atoms/ProcessBulkModalComponent/ProcessBulkModalComponent';\n+import axios from 'axios';\n+import { InfoCircleIcon } from '@patternfly/react-icons';\n \n const ProcessDetailsPage = ({ match }) => {\n+  const [isSkipModalOpen, setIsSkipModalOpen] = useState<boolean>(false);\n+  const [isRetryModalOpen, setIsRetryModalOpen] = useState<boolean>(false);\n+  const [modalTitle, setModalTitle] = useState<string>('');\n+  const [titleType, setTitleType] = useState<string>('');\n+  const [modalContent, setModalContent] = useState<string>('');\n   const id = match.params.instanceID;\n \n   const { loading, error, data } = useGetProcessInstanceByIdQuery({\n     variables: { id }\n   });\n \n+  const handleSkipModalToggle = () => {\n+    setIsSkipModalOpen(!isSkipModalOpen);\n+  };\n+\n+  const handleRetryModalToggle = () => {\n+    setIsRetryModalOpen(!isRetryModalOpen);\n+  };\n+\n+  const handleSkip = () => {", "originalCommit": "840c6635fe8b9da2e714337d33ce0e7be3a4899b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyMjEyMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/147#discussion_r403822123", "bodyText": "sure, since there are other methods which can be reusable, I will create a utils.tsx on top level so that it can be used across components. Also i will do it in a separate pr.", "author": "AjayJagan", "createdAt": "2020-04-06T04:20:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1MTk3OA=="}], "type": "inlineReview"}, {"oid": "93fd022ea3353fa3eaefb6ce377fbebb26922bf8", "url": "https://github.com/kiegroup/kogito-apps/commit/93fd022ea3353fa3eaefb6ce377fbebb26922bf8", "message": "KOGITO-1614 - Review process details timeline style including abort and retry operations", "committedDate": "2020-04-06T04:22:33Z", "type": "forcePushed"}, {"oid": "92863cfbc44344ab0890092ab902fa678d0ff4aa", "url": "https://github.com/kiegroup/kogito-apps/commit/92863cfbc44344ab0890092ab902fa678d0ff4aa", "message": "KOGITO-1614 - Review process details timeline style including abort and retry operations", "committedDate": "2020-04-06T06:46:24Z", "type": "forcePushed"}, {"oid": "7f8c63f4283b9743e76b5a0c2a10fae2ad230f16", "url": "https://github.com/kiegroup/kogito-apps/commit/7f8c63f4283b9743e76b5a0c2a10fae2ad230f16", "message": "KOGITO-1614 - Review process details timeline style including abort and retry operations", "committedDate": "2020-04-06T06:48:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1NTcwMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/147#discussion_r404155703", "bodyText": "ids need to be unique on the page", "author": "srambach", "createdAt": "2020-04-06T14:54:03Z", "path": "packages/management-console/src/components/Organisms/ProcessDetailsTimeline/ProcessDetailsTimeline.tsx", "diffHunk": "@@ -17,29 +66,104 @@ const ProcessDetailsTimeline: React.FC<IOwnProps> = ({ data }) => {\n         </Title>\n       </CardHeader>\n       <CardBody>\n-        <div className=\"timeline-container\">\n-          {\n-            data[0].nodes.map(content => {\n+        <Stack gutter=\"md\" className=\"kogito-management-console--timeline\">\n+          {data.nodes &&\n+            data.nodes.map(content => {\n               return (\n-                <div className=\"timeline-item\" key={content.id}>\n-                  <div className=\"timeline-item-content\">\n-                    {content.exit === null ? <small>Active</small> : <Moment fromNow>{new Date(`${content.exit}`)}</Moment>}\n-\n-\n-                    <p>{content.name}</p>\n-                    <span className=\"circle\">\n-                      {content.type === 'HumanTaskNode' ? (\n-                        <UserIcon className=\"processdetailstimetine-iconstyle\" />\n-                      ) : (\n-                          <ServicesIcon className=\"processdetailstimetine-iconstyle\" />\n-                        )}{' '}\n-                    </span>\n-                  </div>\n-                </div>\n+                <Split\n+                  gutter={'sm'}\n+                  className={'kogito-management-console--timeline-item'}\n+                  key={content.id}\n+                >\n+                  <SplitItem>\n+                    {\n+                      <>\n+                        {data.error &&\n+                        content.definitionId === data.error.nodeDefinitionId ? (\n+                          <Tooltip content={data.error.message}>\n+                            <ErrorCircleOIcon\n+                              color=\"var(--pf-global--danger-color--100)\"\n+                              className=\"kogito-management-console--timeline-status\"\n+                            />\n+                          </Tooltip>\n+                        ) : content.exit === null ? (\n+                          <Tooltip content={'Active'}>\n+                            <OnRunningIcon className=\"kogito-management-console--timeline-status\" />\n+                          </Tooltip>\n+                        ) : (\n+                          <Tooltip content={'Completed'}>\n+                            <CheckCircleIcon\n+                              color=\"var(--pf-global--success-color--100)\"\n+                              className=\"kogito-management-console--timeline-status\"\n+                            />\n+                          </Tooltip>\n+                        )}\n+                      </>\n+                    }\n+                  </SplitItem>\n+                  <SplitItem isFilled>\n+                    <TextContent>\n+                      <Text component={TextVariants.p}>\n+                        {content.name}\n+                        <span>\n+                          {content.type === 'HumanTaskNode' && (\n+                            <Tooltip content={'Human task'}>\n+                              <UserIcon\n+                                className=\"pf-u-ml-sm\"\n+                                color=\"var(--pf-global--icon--Color--light)\"\n+                              />\n+                            </Tooltip>\n+                          )}\n+                        </span>\n+                        <Text component={TextVariants.small}>\n+                          {content.exit === null ? (\n+                            'Active'\n+                          ) : (\n+                            <Moment fromNow>\n+                              {new Date(`${content.exit}`)}\n+                            </Moment>\n+                          )}\n+                        </Text>\n+                      </Text>\n+                    </TextContent>\n+                  </SplitItem>\n+                  <SplitItem>\n+                    {\n+                      <>\n+                        {data.addons.includes('process-management') &&\n+                        data.serviceUrl !== null &&\n+                        data.error &&\n+                        content.definitionId === data.error.nodeDefinitionId ? (\n+                          <Dropdown\n+                            onSelect={onDropdownSelect}\n+                            toggle={\n+                              <KebabToggle\n+                                onToggle={onKebabToggle}\n+                                id=\"kebab-toggle\"\n+                              />\n+                            }\n+                            isOpen={isKebabOpen}\n+                            isPlain\n+                            dropdownItems={dropdownItems}\n+                          />\n+                        ) : (\n+                          <Dropdown\n+                            toggle={\n+                              <KebabToggle\n+                                isDisabled\n+                                id=\"kebab-toggle-disabled\"", "originalCommit": "7f8c63f4283b9743e76b5a0c2a10fae2ad230f16", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1NjAyMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/147#discussion_r404156023", "bodyText": "ids need to be unique on the page. Can you append the unique id?", "author": "srambach", "createdAt": "2020-04-06T14:54:27Z", "path": "packages/management-console/src/components/Organisms/ProcessDetailsTimeline/ProcessDetailsTimeline.tsx", "diffHunk": "@@ -17,29 +66,104 @@ const ProcessDetailsTimeline: React.FC<IOwnProps> = ({ data }) => {\n         </Title>\n       </CardHeader>\n       <CardBody>\n-        <div className=\"timeline-container\">\n-          {\n-            data[0].nodes.map(content => {\n+        <Stack gutter=\"md\" className=\"kogito-management-console--timeline\">\n+          {data.nodes &&\n+            data.nodes.map(content => {\n               return (\n-                <div className=\"timeline-item\" key={content.id}>\n-                  <div className=\"timeline-item-content\">\n-                    {content.exit === null ? <small>Active</small> : <Moment fromNow>{new Date(`${content.exit}`)}</Moment>}\n-\n-\n-                    <p>{content.name}</p>\n-                    <span className=\"circle\">\n-                      {content.type === 'HumanTaskNode' ? (\n-                        <UserIcon className=\"processdetailstimetine-iconstyle\" />\n-                      ) : (\n-                          <ServicesIcon className=\"processdetailstimetine-iconstyle\" />\n-                        )}{' '}\n-                    </span>\n-                  </div>\n-                </div>\n+                <Split\n+                  gutter={'sm'}\n+                  className={'kogito-management-console--timeline-item'}\n+                  key={content.id}\n+                >\n+                  <SplitItem>\n+                    {\n+                      <>\n+                        {data.error &&\n+                        content.definitionId === data.error.nodeDefinitionId ? (\n+                          <Tooltip content={data.error.message}>\n+                            <ErrorCircleOIcon\n+                              color=\"var(--pf-global--danger-color--100)\"\n+                              className=\"kogito-management-console--timeline-status\"\n+                            />\n+                          </Tooltip>\n+                        ) : content.exit === null ? (\n+                          <Tooltip content={'Active'}>\n+                            <OnRunningIcon className=\"kogito-management-console--timeline-status\" />\n+                          </Tooltip>\n+                        ) : (\n+                          <Tooltip content={'Completed'}>\n+                            <CheckCircleIcon\n+                              color=\"var(--pf-global--success-color--100)\"\n+                              className=\"kogito-management-console--timeline-status\"\n+                            />\n+                          </Tooltip>\n+                        )}\n+                      </>\n+                    }\n+                  </SplitItem>\n+                  <SplitItem isFilled>\n+                    <TextContent>\n+                      <Text component={TextVariants.p}>\n+                        {content.name}\n+                        <span>\n+                          {content.type === 'HumanTaskNode' && (\n+                            <Tooltip content={'Human task'}>\n+                              <UserIcon\n+                                className=\"pf-u-ml-sm\"\n+                                color=\"var(--pf-global--icon--Color--light)\"\n+                              />\n+                            </Tooltip>\n+                          )}\n+                        </span>\n+                        <Text component={TextVariants.small}>\n+                          {content.exit === null ? (\n+                            'Active'\n+                          ) : (\n+                            <Moment fromNow>\n+                              {new Date(`${content.exit}`)}\n+                            </Moment>\n+                          )}\n+                        </Text>\n+                      </Text>\n+                    </TextContent>\n+                  </SplitItem>\n+                  <SplitItem>\n+                    {\n+                      <>\n+                        {data.addons.includes('process-management') &&\n+                        data.serviceUrl !== null &&\n+                        data.error &&\n+                        content.definitionId === data.error.nodeDefinitionId ? (\n+                          <Dropdown\n+                            onSelect={onDropdownSelect}\n+                            toggle={\n+                              <KebabToggle\n+                                onToggle={onKebabToggle}\n+                                id=\"kebab-toggle\"", "originalCommit": "7f8c63f4283b9743e76b5a0c2a10fae2ad230f16", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b38314e2fce6f980044e0c208c7d484fe7b1ecd5", "url": "https://github.com/kiegroup/kogito-apps/commit/b38314e2fce6f980044e0c208c7d484fe7b1ecd5", "message": "KOGITO-1614 - Review process details timeline style including abort and retry operations", "committedDate": "2020-04-07T03:47:26Z", "type": "forcePushed"}, {"oid": "4f6635bdb519b1ec25c6f4cdfbf17e8b725e9827", "url": "https://github.com/kiegroup/kogito-apps/commit/4f6635bdb519b1ec25c6f4cdfbf17e8b725e9827", "message": "KOGITO-1614 - Review process details timeline style including abort and retry operations", "committedDate": "2020-04-07T03:50:32Z", "type": "forcePushed"}, {"oid": "6261349c98196ea1e46d9f528bdb7cb5641ad20b", "url": "https://github.com/kiegroup/kogito-apps/commit/6261349c98196ea1e46d9f528bdb7cb5641ad20b", "message": "KOGITO-1614 - Review process details timeline style including abort and retry operations", "committedDate": "2020-04-07T04:14:25Z", "type": "commit"}, {"oid": "6261349c98196ea1e46d9f528bdb7cb5641ad20b", "url": "https://github.com/kiegroup/kogito-apps/commit/6261349c98196ea1e46d9f528bdb7cb5641ad20b", "message": "KOGITO-1614 - Review process details timeline style including abort and retry operations", "committedDate": "2020-04-07T04:14:25Z", "type": "forcePushed"}]}