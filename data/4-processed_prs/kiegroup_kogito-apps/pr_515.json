{"pr_number": 515, "pr_title": "KOGITO-3618: Jobs management filters", "pr_createdAt": "2020-11-02T13:51:20Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/515", "timeline": [{"oid": "7c3f5dbda73592e6dce8b9bb0f4855ebc29305cf", "url": "https://github.com/kiegroup/kogito-apps/commit/7c3f5dbda73592e6dce8b9bb0f4855ebc29305cf", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-02T14:02:09Z", "type": "forcePushed"}, {"oid": "767479ca4e0840f2de27d524358b2a3ea0102b78", "url": "https://github.com/kiegroup/kogito-apps/commit/767479ca4e0840f2de27d524358b2a3ea0102b78", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-02T14:03:27Z", "type": "forcePushed"}, {"oid": "add168b51caf9610abcc52266e3539feaca5ff10", "url": "https://github.com/kiegroup/kogito-apps/commit/add168b51caf9610abcc52266e3539feaca5ff10", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-02T14:13:31Z", "type": "forcePushed"}, {"oid": "8ecd538da84745b09ef6d494434b00d6accd48db", "url": "https://github.com/kiegroup/kogito-apps/commit/8ecd538da84745b09ef6d494434b00d6accd48db", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-03T11:37:23Z", "type": "forcePushed"}, {"oid": "f4799dc0b79cfcd3b3f557f50cff5cc7a0fc95ad", "url": "https://github.com/kiegroup/kogito-apps/commit/f4799dc0b79cfcd3b3f557f50cff5cc7a0fc95ad", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-03T12:46:13Z", "type": "forcePushed"}, {"oid": "496049cca2b28e790eac09f814279c9ea248c9d5", "url": "https://github.com/kiegroup/kogito-apps/commit/496049cca2b28e790eac09f814279c9ea248c9d5", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-04T12:19:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3MTAyMQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517371021", "bodyText": "please also add OUIAProps interface and component attributes.", "author": "jstastny-cz", "createdAt": "2020-11-04T14:11:45Z", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/JobsManagementFilters.tsx", "diffHunk": "@@ -0,0 +1,118 @@\n+import React, { useState } from 'react';\n+import {\n+  Button,\n+  Select,\n+  SelectOption,\n+  SelectVariant,\n+  ToolbarFilter,\n+  ToolbarGroup,\n+  ToolbarItem\n+} from '@patternfly/react-core';\n+import { GraphQL } from '@kogito-apps/common';\n+interface IOwnProps {\n+  selectedStatus: GraphQL.JobStatus[];\n+  setSelectedStatus: (\n+    selectedStatus: (status: GraphQL.JobStatus[]) => GraphQL.JobStatus[]\n+  ) => void;\n+  chips: GraphQL.JobStatus[];\n+  setChips: (\n+    chips:\n+      | ((chip: GraphQL.JobStatus[]) => GraphQL.JobStatus[])\n+      | GraphQL.JobStatus[]\n+  ) => void;\n+  setValues: (\n+    values:\n+      | ((value: GraphQL.JobStatus[]) => GraphQL.JobStatus[])\n+      | GraphQL.JobStatus[]\n+  ) => void;\n+}\n+\n+const JobsManagementFilters: React.FC<IOwnProps> = ({", "originalCommit": "496049cca2b28e790eac09f814279c9ea248c9d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3MzIyOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517373228", "bodyText": "can we also check that the chip was deleted? by checking bouth count before and after deletion and also by looking for the chip here?", "author": "jstastny-cz", "createdAt": "2020-11-04T14:14:52Z", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "diffHunk": "@@ -0,0 +1,143 @@\n+import { GraphQL } from '@kogito-apps/common';\n+import { Toolbar, ToolbarContent } from '@patternfly/react-core';\n+import { mount } from 'enzyme';\n+import React from 'react';\n+import { act } from 'react-dom/test-utils';\n+import JobsManagementFilters from '../JobsManagementFilters';\n+\n+describe('Jobs management filters component tests', () => {\n+  const props = {\n+    selectedStatus: [GraphQL.JobStatus.Scheduled],\n+    setSelectedStatus: jest.fn(),\n+    chips: [GraphQL.JobStatus.Scheduled],\n+    setChips: jest.fn(),\n+    setValues: jest.fn()\n+  };\n+  it('Snapshot with default props', () => {\n+    const wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+  it('test toolbarFilter props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const type = 'Status';\n+    const id = GraphQL.JobStatus.Scheduled;\n+    await act(async () => {\n+      wrapper\n+        .find('ToolbarFilter')\n+        .props()\n+        ['deleteChip'](type, id);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();", "originalCommit": "496049cca2b28e790eac09f814279c9ea248c9d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3Mzk5Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517373993", "bodyText": "again, can we check the result here?", "author": "jstastny-cz", "createdAt": "2020-11-04T14:15:59Z", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "diffHunk": "@@ -0,0 +1,143 @@\n+import { GraphQL } from '@kogito-apps/common';\n+import { Toolbar, ToolbarContent } from '@patternfly/react-core';\n+import { mount } from 'enzyme';\n+import React from 'react';\n+import { act } from 'react-dom/test-utils';\n+import JobsManagementFilters from '../JobsManagementFilters';\n+\n+describe('Jobs management filters component tests', () => {\n+  const props = {\n+    selectedStatus: [GraphQL.JobStatus.Scheduled],\n+    setSelectedStatus: jest.fn(),\n+    chips: [GraphQL.JobStatus.Scheduled],\n+    setChips: jest.fn(),\n+    setValues: jest.fn()\n+  };\n+  it('Snapshot with default props', () => {\n+    const wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+  it('test toolbarFilter props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const type = 'Status';\n+    const id = GraphQL.JobStatus.Scheduled;\n+    await act(async () => {\n+      wrapper\n+        .find('ToolbarFilter')\n+        .props()\n+        ['deleteChip'](type, id);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+  });\n+  it('test apply filter button', () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    wrapper\n+      .find('#apply-filter')\n+      .first()\n+      .simulate('click');\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+    expect(props.setValues).toHaveBeenCalled();\n+  });\n+  it('test select component props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onToggle']();\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()['isOpen']\n+    ).toEqual(true);\n+    const event: any = { target: { innerText: GraphQL.JobStatus.Scheduled } };\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onSelect'](event);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setSelectedStatus).toHaveBeenCalled();", "originalCommit": "496049cca2b28e790eac09f814279c9ea248c9d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3NDE4MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517374180", "bodyText": "can we check that the filter is shown?", "author": "jstastny-cz", "createdAt": "2020-11-04T14:16:15Z", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "diffHunk": "@@ -0,0 +1,143 @@\n+import { GraphQL } from '@kogito-apps/common';\n+import { Toolbar, ToolbarContent } from '@patternfly/react-core';\n+import { mount } from 'enzyme';\n+import React from 'react';\n+import { act } from 'react-dom/test-utils';\n+import JobsManagementFilters from '../JobsManagementFilters';\n+\n+describe('Jobs management filters component tests', () => {\n+  const props = {\n+    selectedStatus: [GraphQL.JobStatus.Scheduled],\n+    setSelectedStatus: jest.fn(),\n+    chips: [GraphQL.JobStatus.Scheduled],\n+    setChips: jest.fn(),\n+    setValues: jest.fn()\n+  };\n+  it('Snapshot with default props', () => {\n+    const wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+  it('test toolbarFilter props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const type = 'Status';\n+    const id = GraphQL.JobStatus.Scheduled;\n+    await act(async () => {\n+      wrapper\n+        .find('ToolbarFilter')\n+        .props()\n+        ['deleteChip'](type, id);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+  });\n+  it('test apply filter button', () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    wrapper\n+      .find('#apply-filter')\n+      .first()\n+      .simulate('click');\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+    expect(props.setValues).toHaveBeenCalled();", "originalCommit": "496049cca2b28e790eac09f814279c9ea248c9d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3NDQ0Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517374447", "bodyText": "can we check that applied filter is shown?", "author": "jstastny-cz", "createdAt": "2020-11-04T14:16:39Z", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "diffHunk": "@@ -0,0 +1,143 @@\n+import { GraphQL } from '@kogito-apps/common';\n+import { Toolbar, ToolbarContent } from '@patternfly/react-core';\n+import { mount } from 'enzyme';\n+import React from 'react';\n+import { act } from 'react-dom/test-utils';\n+import JobsManagementFilters from '../JobsManagementFilters';\n+\n+describe('Jobs management filters component tests', () => {\n+  const props = {\n+    selectedStatus: [GraphQL.JobStatus.Scheduled],\n+    setSelectedStatus: jest.fn(),\n+    chips: [GraphQL.JobStatus.Scheduled],\n+    setChips: jest.fn(),\n+    setValues: jest.fn()\n+  };\n+  it('Snapshot with default props', () => {\n+    const wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+  it('test toolbarFilter props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const type = 'Status';\n+    const id = GraphQL.JobStatus.Scheduled;\n+    await act(async () => {\n+      wrapper\n+        .find('ToolbarFilter')\n+        .props()\n+        ['deleteChip'](type, id);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+  });\n+  it('test apply filter button', () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    wrapper\n+      .find('#apply-filter')\n+      .first()\n+      .simulate('click');\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+    expect(props.setValues).toHaveBeenCalled();\n+  });\n+  it('test select component props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onToggle']();\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()['isOpen']\n+    ).toEqual(true);\n+    const event: any = { target: { innerText: GraphQL.JobStatus.Scheduled } };\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onSelect'](event);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setSelectedStatus).toHaveBeenCalled();\n+  });\n+  it('test select component props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const event2: any = { target: { innerText: GraphQL.JobStatus.Executed } };\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onSelect'](event2);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setSelectedStatus).toHaveBeenCalled();", "originalCommit": "496049cca2b28e790eac09f814279c9ea248c9d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3ODI0Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517378247", "bodyText": "could we make this array rather a function or constant that can be reused in all three places? To prevent any potential issue when changing the default array.", "author": "jstastny-cz", "createdAt": "2020-11-04T14:21:41Z", "path": "ui-packages/packages/management-console/src/components/Templates/JobsManagementPage/JobsManagementPage.tsx", "diffHunk": "@@ -43,6 +42,22 @@ const JobsManagementPage: React.FC<OUIAProps> = ({ ouiaId, ouiaSafe }) => {\n   const [modalTitle, setModalTitle] = useState<JSX.Element>(null);\n   const [modalContent, setModalContent] = useState<string>('');\n   const [selectedJob, setSelectedJob] = useState<any>({});\n+  const [selectedStatus, setSelectedStatus] = useState<GraphQL.JobStatus[]>([\n+    GraphQL.JobStatus.Scheduled", "originalCommit": "496049cca2b28e790eac09f814279c9ea248c9d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3ODc3MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517378771", "bodyText": "here again a function or constant can be used instead of explicit array (to be sure we're consistent across usages)", "author": "jstastny-cz", "createdAt": "2020-11-04T14:22:22Z", "path": "ui-packages/packages/management-console/src/components/Templates/JobsManagementPage/JobsManagementPage.tsx", "diffHunk": "@@ -83,14 +98,29 @@ const JobsManagementPage: React.FC<OUIAProps> = ({ ouiaId, ouiaSafe }) => {\n     window.location.reload();\n   };\n \n+  const onReset = (): void => {\n+    setSelectedStatus([GraphQL.JobStatus.Scheduled]);", "originalCommit": "496049cca2b28e790eac09f814279c9ea248c9d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bc8b1ed1903380d057fa3930ba931fdbcbf0a4c7", "url": "https://github.com/kiegroup/kogito-apps/commit/bc8b1ed1903380d057fa3930ba931fdbcbf0a4c7", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T06:18:47Z", "type": "forcePushed"}, {"oid": "824b4ac75b8e2f93eb916e7af83fa4b9500204fd", "url": "https://github.com/kiegroup/kogito-apps/commit/824b4ac75b8e2f93eb916e7af83fa4b9500204fd", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T06:24:53Z", "type": "forcePushed"}, {"oid": "5c4027a5d26f19881013e2f05a0c74b89579c4f0", "url": "https://github.com/kiegroup/kogito-apps/commit/5c4027a5d26f19881013e2f05a0c74b89579c4f0", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T06:28:38Z", "type": "forcePushed"}, {"oid": "009e77b702b6c1eb1ad945c7c5fcc6b530595a2a", "url": "https://github.com/kiegroup/kogito-apps/commit/009e77b702b6c1eb1ad945c7c5fcc6b530595a2a", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T07:56:31Z", "type": "forcePushed"}, {"oid": "d7fde49fa651af04450feafae26aab6e96f81912", "url": "https://github.com/kiegroup/kogito-apps/commit/d7fde49fa651af04450feafae26aab6e96f81912", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T08:00:54Z", "type": "forcePushed"}, {"oid": "c5269f40dc73fdf99bad0b0dee64995f9ada88ab", "url": "https://github.com/kiegroup/kogito-apps/commit/c5269f40dc73fdf99bad0b0dee64995f9ada88ab", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T08:01:41Z", "type": "forcePushed"}, {"oid": "c9d94674e937927395bb57f2024299601bc8a543", "url": "https://github.com/kiegroup/kogito-apps/commit/c9d94674e937927395bb57f2024299601bc8a543", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T08:18:29Z", "type": "forcePushed"}, {"oid": "c276ef623b73f732e98e0ddb324aebfa62680422", "url": "https://github.com/kiegroup/kogito-apps/commit/c276ef623b73f732e98e0ddb324aebfa62680422", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T08:21:44Z", "type": "forcePushed"}, {"oid": "aa08aa0101fb018feb817e4f4b4f78b6503fc97d", "url": "https://github.com/kiegroup/kogito-apps/commit/aa08aa0101fb018feb817e4f4b4f78b6503fc97d", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T08:28:22Z", "type": "forcePushed"}, {"oid": "878dc00d26f69cf430cd258b594d5bb050933a39", "url": "https://github.com/kiegroup/kogito-apps/commit/878dc00d26f69cf430cd258b594d5bb050933a39", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T13:06:41Z", "type": "commit"}, {"oid": "878dc00d26f69cf430cd258b594d5bb050933a39", "url": "https://github.com/kiegroup/kogito-apps/commit/878dc00d26f69cf430cd258b594d5bb050933a39", "message": "KOGITO-3618: Jobs management filters", "committedDate": "2020-11-05T13:06:41Z", "type": "forcePushed"}]}