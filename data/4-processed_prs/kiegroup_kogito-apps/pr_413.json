{"pr_number": 413, "pr_title": "KOGITO-3179 - create trusty ui app ", "pr_createdAt": "2020-08-25T13:38:30Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/413", "timeline": [{"oid": "f553c132770fedfd46183e837aef9d51a3e7a8dc", "url": "https://github.com/kiegroup/kogito-apps/commit/f553c132770fedfd46183e837aef9d51a3e7a8dc", "message": "add trusty-ui java application", "committedDate": "2020-08-25T13:37:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2NDg4Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r476464882", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-08-25T13:51:45Z", "path": "trusty-ui/src/main/java/org/kie/kogito/trusty/ui/VertxRouter.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package org.kie.kogito.trusty.ui;", "originalCommit": "f553c132770fedfd46183e837aef9d51a3e7a8dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2NDk5Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r476464997", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-08-25T13:51:55Z", "path": "trusty-ui/src/test/java/org/kie/kogito/StaticContentTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.kie.kogito;", "originalCommit": "f553c132770fedfd46183e837aef9d51a3e7a8dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2NTA4OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r476465089", "bodyText": "License", "author": "danielezonca", "createdAt": "2020-08-25T13:52:03Z", "path": "trusty-ui/src/test/java/org/kie/kogito/StaticContentTestIT.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package org.kie.kogito;", "originalCommit": "f553c132770fedfd46183e837aef9d51a3e7a8dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2NTg3MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r476465870", "bodyText": "Are you sure we need this dep?", "author": "danielezonca", "createdAt": "2020-08-25T13:53:02Z", "path": "trusty-ui/pom.xml", "diffHunk": "@@ -0,0 +1,143 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-apps</artifactId>\n+    <version>1.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+  \n+  <artifactId>trusty-ui</artifactId>\n+  <name>Kogito :: Trusty UI</name>\n+\n+  <properties>\n+    <path.to.frontend.app>../ui-packages/packages/trusty</path.to.frontend.app>\n+  </properties>\n+  \n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-bom</artifactId>\n+        <version>${version.io.quarkus}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-vertx-web</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>", "originalCommit": "f553c132770fedfd46183e837aef9d51a3e7a8dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2ODM2NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r476468364", "bodyText": "Can you please create a ticket to cover this TODO?", "author": "danielezonca", "createdAt": "2020-08-25T13:56:16Z", "path": "trusty-ui/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# trusty-ui project\n+\n+This project uses Quarkus, the Supersonic Subatomic Java Framework.\n+\n+If you want to learn more about Quarkus, please visit its website: https://quarkus.io/ .\n+\n+## Running the application in dev mode\n+\n+You can run your application in dev mode that enables live coding using:\n+```\n+mvn quarkus:dev\n+```\n+Note: Live coding of the React JS frontend application is not yet in place.\n+\n+## Packaging and running the application\n+\n+The application is packageable using:\n+```\n+mvn package\n+```\n+It produces the executable `trusty-ui-1.0.0-SNAPSHOT-runner.jar` file in `/target` directory.\n+Be aware that it\u2019s not an _\u00fcber-jar_ as the dependencies are copied into the `target/lib` directory.\n+\n+The application is now runnable using:\n+```\n+java -jar target/trusty-ui-1.0.0-SNAPSHOT-runner.jar\n+```\n+\n+## Creating a native executable\n+\n+You can create a native executable using: \n+```\n+mvn package -Dnative\n+```\n+\n+Or you can use Docker to build the native executable using:\n+```\n+mvn package -Dnative -Dquarkus.native.container-build=true\n+```\n+\n+You can then execute your binary: `./target/trusty-ui-1.0.0-SNAPSHOT-runner`\n+\n+If you want to learn more about building native executables, please consult https://quarkus.io/guides/building-native-image-guide .\n+\n+## Packaging together with the React app\n+\n+The application makes use of a separately developed [React UI application](../ui-packages/packages/trusty/package.json). The JS based frontend can be built as part of the build of this project by using the profile defined in dependency [ui-packages](../ui-packages/pom.xml), invoked by default. Using the property `-Dskip.ui.build` as in following command you can skip the build of UI and use what is already built in the respective package:\n+```\n+mvn package -Dskip.ui.build\n+```\n+\n+To prepare all the dependencies needed for the build of UI, there's a maven profile activated by default. Using the `-Dskip.ui.deps` property you can skip the profile.\n+\n+\n+The single command to disable both UI build related profiles is:\n+```\n+mvn package -Dskip.ui.deps -Dskip.ui.build\n+```\n+\n+## Creating a native executable\n+The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n+```\n+mvn package -Dui -Dnative\n+```\n+\n+## Working with trusty-ui features\n+\n+# TODO ", "originalCommit": "f553c132770fedfd46183e837aef9d51a3e7a8dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ade81b45267b783a1c06d0b2be9c5f01a55a04d3", "url": "https://github.com/kiegroup/kogito-apps/commit/ade81b45267b783a1c06d0b2be9c5f01a55a04d3", "message": "add licence headers, fix comments", "committedDate": "2020-08-25T14:11:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyNjQxMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477226412", "bodyText": "Does it make sense to an update here? UBI image should be up to date in registry.", "author": "jiripetrlik", "createdAt": "2020-08-26T11:23:18Z", "path": "trusty-ui/src/main/docker/Dockerfile.jvm", "diffHunk": "@@ -0,0 +1,47 @@\n+####\n+# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode\n+#\n+# Before building the docker image run:\n+#\n+# mvn package\n+#\n+# Then, build the image with:\n+#\n+# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/trusty-ui-jvm .\n+#\n+# Then run the container using:\n+#\n+# docker run -i --rm -p 8080:8080 quarkus/trusty-ui-jvm\n+#\n+###\n+FROM registry.access.redhat.com/ubi8/ubi-minimal:8.1\n+\n+ARG JAVA_PACKAGE=java-1.8.0-openjdk-headless\n+ARG RUN_JAVA_VERSION=1.3.5\n+\n+ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\n+\n+# Install java and the run-java script\n+# Also set up permissions for user `1001`\n+RUN microdnf install openssl curl ca-certificates ${JAVA_PACKAGE} \\\n+    && microdnf update \\", "originalCommit": "ade81b45267b783a1c06d0b2be9c5f01a55a04d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI0MzgzMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477243832", "bodyText": "Hi @jiripetrlik , this is the standard dockerfile provided by quarkus. I think this is necessary in order to use always the latest packages at every build.", "author": "r00ta", "createdAt": "2020-08-26T11:57:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyNjQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyNjk2Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477226966", "bodyText": "Is it ok with Kogito? I think we should use Java 11?", "author": "jiripetrlik", "createdAt": "2020-08-26T11:24:24Z", "path": "trusty-ui/src/main/docker/Dockerfile.jvm", "diffHunk": "@@ -0,0 +1,47 @@\n+####\n+# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode\n+#\n+# Before building the docker image run:\n+#\n+# mvn package\n+#\n+# Then, build the image with:\n+#\n+# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/trusty-ui-jvm .\n+#\n+# Then run the container using:\n+#\n+# docker run -i --rm -p 8080:8080 quarkus/trusty-ui-jvm\n+#\n+###\n+FROM registry.access.redhat.com/ubi8/ubi-minimal:8.1\n+\n+ARG JAVA_PACKAGE=java-1.8.0-openjdk-headless", "originalCommit": "ade81b45267b783a1c06d0b2be9c5f01a55a04d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyNzI5MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477227291", "bodyText": "Can you please provide me some info about this parameter?", "author": "jiripetrlik", "createdAt": "2020-08-26T11:25:01Z", "path": "trusty-ui/src/main/docker/Dockerfile.jvm", "diffHunk": "@@ -0,0 +1,47 @@\n+####\n+# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode\n+#\n+# Before building the docker image run:\n+#\n+# mvn package\n+#\n+# Then, build the image with:\n+#\n+# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/trusty-ui-jvm .\n+#\n+# Then run the container using:\n+#\n+# docker run -i --rm -p 8080:8080 quarkus/trusty-ui-jvm\n+#\n+###\n+FROM registry.access.redhat.com/ubi8/ubi-minimal:8.1\n+\n+ARG JAVA_PACKAGE=java-1.8.0-openjdk-headless\n+ARG RUN_JAVA_VERSION=1.3.5", "originalCommit": "ade81b45267b783a1c06d0b2be9c5f01a55a04d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI1MDMxMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477250313", "bodyText": "Hi @jiripetrlik , this is a standard dockerfile provided by quarkus. in particular RUN_JAVA_VERSION is used to select the right version of a sh script (https://repo1.maven.org/maven2/io/fabric8/run-java-sh/run-java-sh-1.3.8-sh.sh). This is a generic startup script for running arbitrary Java applications with being optimized for running in containers", "author": "r00ta", "createdAt": "2020-08-26T12:09:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyNzI5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyODUyNg==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477228526", "bodyText": "Shouldn't we make this property private?", "author": "jiripetrlik", "createdAt": "2020-08-26T11:27:24Z", "path": "trusty-ui/src/main/java/org/kie/kogito/trusty/ui/VertxRouter.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.kogito.trusty.ui;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpHeaders;\n+import io.vertx.ext.web.Router;\n+import io.vertx.ext.web.RoutingContext;\n+import io.vertx.ext.web.handler.StaticHandler;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n+@ApplicationScoped\n+public class VertxRouter {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(VertxRouter.class);\n+\n+    @Inject\n+    @ConfigProperty(name = \"kogito.trusty.http.url\")\n+    String trustyHttpURL;", "originalCommit": "ade81b45267b783a1c06d0b2be9c5f01a55a04d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI0Nzc3MA==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477247770", "bodyText": "Hi @jiripetrlik , if we set this private quarkus would need to use reflection https://quarkus.io/guides/cdi-reference#native-executables-and-private-members . And this is an issue for the native image. imo there is no real need to make this private, nothing is going to extend this class and do weird stuff.. let me know what you think", "author": "r00ta", "createdAt": "2020-08-26T12:04:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyODUyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyODc3OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477228779", "bodyText": "Can we make this private?", "author": "jiripetrlik", "createdAt": "2020-08-26T11:27:54Z", "path": "trusty-ui/src/test/java/org/kie/kogito/StaticContentTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.kogito;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n+\n+import io.quarkus.test.common.http.TestHTTPResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+@QuarkusTest\n+public class StaticContentTest {\n+\n+    @TestHTTPResource(\"index.html\")\n+    URL url;", "originalCommit": "ade81b45267b783a1c06d0b2be9c5f01a55a04d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIzMTAxNA==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477231014", "bodyText": "Is this PR meant as scaffold? Because otherwise it seems that we have quite a limited test coverage with this only one test.", "author": "jiripetrlik", "createdAt": "2020-08-26T11:32:18Z", "path": "trusty-ui/src/test/java/org/kie/kogito/StaticContentTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.kogito;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n+\n+import io.quarkus.test.common.http.TestHTTPResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+@QuarkusTest\n+public class StaticContentTest {\n+\n+    @TestHTTPResource(\"index.html\")\n+    URL url;\n+\n+    private static String readStream(InputStream in) throws IOException {\n+        byte[] data = new byte[1024];\n+        int r;\n+        ByteArrayOutputStream out = new ByteArrayOutputStream();\n+        while ((r = in.read(data)) > 0) {\n+            out.write(data, 0, r);\n+        }\n+        return new String(out.toByteArray(), StandardCharsets.UTF_8);\n+    }\n+\n+    @Test", "originalCommit": "ade81b45267b783a1c06d0b2be9c5f01a55a04d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI0NTIwMQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/413#discussion_r477245201", "bodyText": "Hi @jiripetrlik , this application is just supposed to host the frontend. There is no more logic in it. From a testing perspective, I think the UI should be tested in its module and not here, since this is just the hosting application.\nWe just test that the frontend application is properly exposed, if you'd like to put some more tests let me know!", "author": "r00ta", "createdAt": "2020-08-26T12:00:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIzMTAxNA=="}], "type": "inlineReview"}, {"oid": "bb1a9f76789e21d250f2804acd10f935f6d1f2fd", "url": "https://github.com/kiegroup/kogito-apps/commit/bb1a9f76789e21d250f2804acd10f935f6d1f2fd", "message": "Update application.properties", "committedDate": "2020-08-26T11:53:22Z", "type": "commit"}, {"oid": "ec5c20d513bbbbe7d9e35c3aaa4e76f6ae9a4c65", "url": "https://github.com/kiegroup/kogito-apps/commit/ec5c20d513bbbbe7d9e35c3aaa4e76f6ae9a4c65", "message": "Update Dockerfile.jvm\n\nUpdate java version", "committedDate": "2020-08-26T11:56:20Z", "type": "commit"}, {"oid": "f70788fdc1e6efa74e8e44be393d1a09c3694d6b", "url": "https://github.com/kiegroup/kogito-apps/commit/f70788fdc1e6efa74e8e44be393d1a09c3694d6b", "message": "Update StaticContentTest.java", "committedDate": "2020-08-26T12:19:37Z", "type": "commit"}, {"oid": "b46c8faaa9a7f8435aa33fd982a6b9706e3300c9", "url": "https://github.com/kiegroup/kogito-apps/commit/b46c8faaa9a7f8435aa33fd982a6b9706e3300c9", "message": "add test", "committedDate": "2020-08-26T14:45:13Z", "type": "commit"}, {"oid": "5d529dc1ad0863e8ba3d765c5c4397ff6053997c", "url": "https://github.com/kiegroup/kogito-apps/commit/5d529dc1ad0863e8ba3d765c5c4397ff6053997c", "message": "Merge branch 'KOGITO-3179-create-trusty-ui-app' of https://github.com/r00ta/kogito-apps into KOGITO-3179-create-trusty-ui-app", "committedDate": "2020-08-26T14:45:38Z", "type": "commit"}]}