{"pr_number": 245, "pr_title": "KOGITO-2299 - Move ProcessDescriptor and GraphQL types to common module", "pr_createdAt": "2020-06-03T14:24:34Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/245", "timeline": [{"oid": "31d888bc93ab0dfe11c2bc1c1c5df5cf67de4d51", "url": "https://github.com/kiegroup/kogito-apps/commit/31d888bc93ab0dfe11c2bc1c1c5df5cf67de4d51", "message": "KOGITO-2299 - Move ProcessDescriptor and GraphQL types to common module", "committedDate": "2020-06-03T14:38:31Z", "type": "forcePushed"}, {"oid": "4b1d8d95ce29a0fcd124bbb8c9d6221af7997175", "url": "https://github.com/kiegroup/kogito-apps/commit/4b1d8d95ce29a0fcd124bbb8c9d6221af7997175", "message": "KOGITO-2299 - Move ProcessDescriptor and GraphQL types to common module", "committedDate": "2020-06-03T14:43:29Z", "type": "commit"}, {"oid": "4b1d8d95ce29a0fcd124bbb8c9d6221af7997175", "url": "https://github.com/kiegroup/kogito-apps/commit/4b1d8d95ce29a0fcd124bbb8c9d6221af7997175", "message": "KOGITO-2299 - Move ProcessDescriptor and GraphQL types to common module", "committedDate": "2020-06-03T14:43:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMTc2OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/245#discussion_r435031768", "bodyText": "can we prefix the types somehow? Cause then in imports it's not obvious it is a graphql type, seems just like another component. So if we could sth like import { ProcessDescriptor, graphql.ProcessInstance } from '@kogito-apps/common' instead of import { ProcessDescriptor, ProcessInstance } from '@kogito-apps/common'`\nPossibly by exporting as namespace in graphql/types ?", "author": "jstastny-cz", "createdAt": "2020-06-04T06:57:21Z", "path": "packages/common/index.ts", "diffHunk": "@@ -1,13 +1,27 @@\n-export { default as PageToolbar } from './src/components/Molecules/PageToolbar/PageToolbar';\n-export { default as PageLayout } from './src/components/Templates/PageLayout/PageLayout';\n+export {\n+  default as PageToolbar\n+} from './src/components/Molecules/PageToolbar/PageToolbar';\n+export {\n+  default as PageLayout\n+} from './src/components/Templates/PageLayout/PageLayout';\n export {\n   default as AboutModalBox\n } from './src/components/Molecules/AboutModalBox/AboutModalBox';\n-export { default as BrandLogo } from './src/components/Atoms/BrandLogo/BrandLogo';\n-export { default as PageNotFound } from './src/components/Molecules/PageNotFound/PageNotFound';\n+export {\n+  default as BrandLogo\n+} from './src/components/Atoms/BrandLogo/BrandLogo';\n+export {\n+  default as PageNotFound\n+} from './src/components/Molecules/PageNotFound/PageNotFound';\n export {\n   default as ServerUnavailable\n } from './src/components/Molecules/ServerUnavailable/ServerUnavailable';\n export { default as NoData } from './src/components/Molecules/NoData/NoData';\n-export { default as ServerErrors } from './src/components/Molecules/ServerErrors/ServerErrors';\n-export * from './src/utils/OuiaUtils'\n\\ No newline at end of file\n+export {\n+  default as ServerErrors\n+} from './src/components/Molecules/ServerErrors/ServerErrors';\n+export {\n+  default as ProcessDescriptor\n+} from './src/components/Molecules/ProcessDescriptor/ProcessDescriptor';\n+export * from './src/utils/OuiaUtils';\n+export * from './src/graphql/types';", "originalCommit": "4b1d8d95ce29a0fcd124bbb8c9d6221af7997175", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3NjQyMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/245#discussion_r435076422", "bodyText": "@jstastny-cz agree that is a nice improvement. Do you mind if I look into that on a follow up PR?", "author": "cristianonicolai", "createdAt": "2020-06-04T08:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMTc2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA4NTQ3Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/245#discussion_r435085476", "bodyText": "Sure.", "author": "jstastny-cz", "createdAt": "2020-06-04T08:35:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMTc2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMzU5NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/245#discussion_r435033595", "bodyText": "Here the changes are quite funny - one line is expanded, others are shrunk. I would expect the format to allow shorter lines rather than trying optimal fit. It just might help readability to split also shorter lines.", "author": "jstastny-cz", "createdAt": "2020-06-04T07:01:05Z", "path": "packages/task-console/src/components/Templates/PageLayoutComponent/PageLayoutComponent.tsx", "diffHunk": "@@ -50,14 +65,13 @@ const PageLayoutComponent: React.FC<IOwnProps & InjectedOuiaProps> = ({\n       BrandAltText=\"Task Console Logo\"\n       BrandClick={BrandClick}\n     >\n-\n       <Switch>\n+        <Route exact path=\"/\" render={() => <Redirect to=\"/UserTasks\" />} />", "originalCommit": "4b1d8d95ce29a0fcd124bbb8c9d6221af7997175", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA4MTQ3NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/245#discussion_r435081474", "bodyText": "@jstastny-cz our prettier config is following a 80 column width rule, see https://prettier.io/docs/en/options.html#print-width. If we want to fine tune that that's fine, although it seems to be the recommended anyway. It would need another PR to change config and then run format again.", "author": "cristianonicolai", "createdAt": "2020-06-04T08:28:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMzU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA4NTE4NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/245#discussion_r435085184", "bodyText": "No need probably - once the code stabilizes no such surprises should appear anymore.", "author": "jstastny-cz", "createdAt": "2020-06-04T08:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMzU5NQ=="}], "type": "inlineReview"}]}