{"pr_number": 395, "pr_title": "KOGITO-3102 - refactored type handling in explainability-core", "pr_createdAt": "2020-08-17T13:10:59Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/395", "timeline": [{"oid": "304d5c429d340bd8f478c2bce5d15de2c060d4e8", "url": "https://github.com/kiegroup/kogito-apps/commit/304d5c429d340bd8f478c2bce5d15de2c060d4e8", "message": "KOGITO-3102 - refactored type handling in explainability-core", "committedDate": "2020-08-17T13:08:16Z", "type": "commit"}, {"oid": "1609987306c2e93380849ae63fdbb936bcca630b", "url": "https://github.com/kiegroup/kogito-apps/commit/1609987306c2e93380849ae63fdbb936bcca630b", "message": "KOGITO-3102 - minor fixes", "committedDate": "2020-08-17T14:45:53Z", "type": "commit"}, {"oid": "109c868bc42b2fc92598f6b751bf3830bec63d95", "url": "https://github.com/kiegroup/kogito-apps/commit/109c868bc42b2fc92598f6b751bf3830bec63d95", "message": "KOGITO-3102 - restored wrongly suppressed numeric encoding, Sonar suggested fixes", "committedDate": "2020-08-17T15:35:00Z", "type": "commit"}, {"oid": "645df85fa389f297713db894e38e90aa9b2fb041", "url": "https://github.com/kiegroup/kogito-apps/commit/645df85fa389f297713db894e38e90aa9b2fb041", "message": "KOGITO-3102 - Sonar suggested fixes", "committedDate": "2020-08-17T15:42:21Z", "type": "commit"}, {"oid": "94876bf761ba6007d9e199ace9605fd6d47207df", "url": "https://github.com/kiegroup/kogito-apps/commit/94876bf761ba6007d9e199ace9605fd6d47207df", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into KOGITO-3102", "committedDate": "2020-08-18T07:23:00Z", "type": "commit"}, {"oid": "ceb79a8e905f8da8ba9029f27d118304164af192", "url": "https://github.com/kiegroup/kogito-apps/commit/ceb79a8e905f8da8ba9029f27d118304164af192", "message": "KOGITO-3102 - better test coverage, minor fixes", "committedDate": "2020-08-18T08:24:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYxMTcwNg==", "url": "https://github.com/kiegroup/kogito-apps/pull/395#discussion_r471611706", "bodyText": "Please split this line, it is hard to read :)", "author": "danielezonca", "createdAt": "2020-08-17T16:55:22Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetEncoder.java", "diffHunk": "@@ -93,99 +97,15 @@\n         return trainingSet;\n     }\n \n-    private List<List<Double>> getColumnData(List<PredictionInput> perturbedInputs) {\n-        List<List<Double>> columnData = new LinkedList<>();\n+    private List<List<double[]>> getColumnData(List<PredictionInput> perturbedInputs) {\n+        List<List<double[]>> columnData = new LinkedList<>();\n \n         for (int t = 0; t < targetInput.getFeatures().size(); t++) {\n             Feature originalFeature = targetInput.getFeatures().get(t);\n-            switch (originalFeature.getType()) {\n-                case NUMBER:\n-                    encodeNumbers(perturbedInputs, targetInput, columnData, t);\n-                    break;\n-                case TEXT:\n-                    encodeText(perturbedInputs, columnData, originalFeature);\n-                    break;\n-                case CATEGORICAL:\n-                case BINARY:\n-                case TIME:\n-                case URI:\n-                case DURATION:\n-                case VECTOR:\n-                case CURRENCY:\n-                case UNDEFINED:\n-                    encodeEquals(perturbedInputs, columnData, t, originalFeature);\n-                    break;\n-                case BOOLEAN:\n-                    // boolean are automatically encoded as 1s or 0s\n-                    List<Double> featureValues = new LinkedList<>();\n-                    for (PredictionInput pi : perturbedInputs) {\n-                        featureValues.add(pi.getFeatures().get(t).getValue().asNumber());\n-                    }\n-                    columnData.add(featureValues);\n-                    break;\n-                default:\n-                    throw new LocalExplanationException(\"could not encoded features of type \" + originalFeature.getType());\n-            }\n+            int finalT = t;\n+            List<double[]> encode = originalFeature.getType().encode(originalFeature.getValue(), perturbedInputs.stream().map(predictionInput -> predictionInput.getFeatures().get(finalT).getValue()).toArray(Value<?>[]::new));", "originalCommit": "645df85fa389f297713db894e38e90aa9b2fb041", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYxMzU1MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/395#discussion_r471613551", "bodyText": "Can you please add an explicit if( instanceof) to improve readability?", "author": "danielezonca", "createdAt": "2020-08-17T16:58:31Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/model/Value.java", "diffHunk": "@@ -34,6 +36,11 @@ public Value(S underlyingObject) {\n     }\n \n     public String asString() {\n+        try {\n+            List<Feature> composite = (List<Feature>) underlyingObject;\n+            return composite.stream().map(f -> f.getValue().asString()).collect(Collectors.joining(\" \"));\n+        } catch (ClassCastException ignored) {", "originalCommit": "645df85fa389f297713db894e38e90aa9b2fb041", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYyMTc0OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/395#discussion_r471621749", "bodyText": "javadoc?", "author": "danielezonca", "createdAt": "2020-08-17T17:07:52Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/model/Type.java", "diffHunk": "@@ -55,4 +374,9 @@ public String toString() {\n         return String.valueOf(value);\n     }\n \n+    public abstract Value<?> drop(Value<?> value);\n+\n+    public abstract Value<?> perturb(Value<?> value, PerturbationContext perturbationContext);\n+\n+    public abstract List<double[]> encode(Value<?> target, Value<?>... values);", "originalCommit": "645df85fa389f297713db894e38e90aa9b2fb041", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNTUyNA==", "url": "https://github.com/kiegroup/kogito-apps/pull/395#discussion_r472135524", "bodyText": "Can you please clarify this change?\nThe logic seems to be quite different so I do not understand if it was broken before or what :)", "author": "danielezonca", "createdAt": "2020-08-18T12:21:43Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/utils/ExplainabilityMetrics.java", "diffHunk": "@@ -70,14 +72,42 @@ public static double quantifyExplainability(int inputCognitiveChunks, int output\n      * @return the saliency impact\n      */\n     public static double impactScore(PredictionProvider model, Prediction prediction, List<FeatureImportance> topFeatures) {\n-        List<String> importantFeatureNames = topFeatures.stream().map(f -> f.getFeature().getName()).collect(Collectors.toList());\n \n-        List<Feature> newFeatures = new LinkedList<>();\n-        for (Feature feature : prediction.getInput().getFeatures()) {\n-            Feature newFeature = DataUtils.dropFeature(feature, importantFeatureNames);\n-            newFeatures.add(newFeature);\n+        List<Feature> copy = List.copyOf(prediction.getInput().getFeatures());\n+\n+        for (FeatureImportance featureImportance : topFeatures) {\n+            Feature topFeature = featureImportance.getFeature();\n+            String name = topFeature.getName();\n+            Value<?> value = topFeature.getValue();\n+            Feature droppedFeature = null;\n+            for (Feature feature : copy) {\n+                if (name.equals(feature.getName())) {\n+                    if (value.equals(feature.getValue())) {\n+                        droppedFeature = FeatureFactory.copyOf(feature, feature.getType().drop(value));\n+                    } else {\n+                        List<Feature> linearizedFeatures = DataUtils.getLinearizedFeatures(List.of(feature));\n+                        int i = 0;\n+                        for (Feature linearizedFeature : linearizedFeatures) {\n+                            if (value.equals(linearizedFeature.getValue())) {\n+                                Feature e = linearizedFeatures.get(i);\n+                                linearizedFeatures.set(i, FeatureFactory.copyOf(e, e.getType().drop(value)));\n+                                droppedFeature = FeatureFactory.newCompositeFeature(name, linearizedFeatures);\n+                                break;\n+                            } else {\n+                                i++;\n+                            }\n+                        }\n+                    }\n+                    break;\n+                }", "originalCommit": "ceb79a8e905f8da8ba9029f27d118304164af192", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1MTg0OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/395#discussion_r472251848", "bodyText": "the change looks more verbose than previous version because previously the longish feature dropping procedure was encapsulated inside DataUtils#dropFeature which was relying on a not so nice switch statement.\nI'll move the above mentioned code inside a new DataUtils#dropFeature method.", "author": "tteofili", "createdAt": "2020-08-18T14:44:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNTUyNA=="}], "type": "inlineReview"}, {"oid": "5ac6412b845c9939eea50961ea8041e2f02d6dd3", "url": "https://github.com/kiegroup/kogito-apps/commit/5ac6412b845c9939eea50961ea8041e2f02d6dd3", "message": "KOGITO-3102 - resolved review comments", "committedDate": "2020-08-18T15:07:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI3NDcyMw==", "url": "https://github.com/kiegroup/kogito-apps/pull/395#discussion_r472274723", "bodyText": "Why this? The whole repo is already configured to use jdk 11 ( see here )", "author": "danielezonca", "createdAt": "2020-08-18T15:14:43Z", "path": "explainability/explainability-core/pom.xml", "diffHunk": "@@ -10,6 +10,18 @@\n \n   <artifactId>explainability-core</artifactId>\n   <name>Kogito :: Explainability Core</name>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>10</source>\n+          <target>10</target>\n+        </configuration>", "originalCommit": "5ac6412b845c9939eea50961ea8041e2f02d6dd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI3ODAyNA==", "url": "https://github.com/kiegroup/kogito-apps/pull/395#discussion_r472278024", "bodyText": "it is indeed an error, not sure how it got in.", "author": "tteofili", "createdAt": "2020-08-18T15:19:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI3NDcyMw=="}], "type": "inlineReview"}, {"oid": "4b0c036c5a90263b5d0d5f12f8732484b249df92", "url": "https://github.com/kiegroup/kogito-apps/commit/4b0c036c5a90263b5d0d5f12f8732484b249df92", "message": "KOGITO-3102 - resolved review comments", "committedDate": "2020-08-18T15:19:51Z", "type": "commit"}, {"oid": "10ddd9347b9da380acf0b625c27df0b57ea817f3", "url": "https://github.com/kiegroup/kogito-apps/commit/10ddd9347b9da380acf0b625c27df0b57ea817f3", "message": "Update pom.xml", "committedDate": "2020-08-18T20:30:36Z", "type": "commit"}, {"oid": "d0e60c00d5bd3a892622e7357160c92f9f3b1b15", "url": "https://github.com/kiegroup/kogito-apps/commit/d0e60c00d5bd3a892622e7357160c92f9f3b1b15", "message": "Update DataUtils.java", "committedDate": "2020-08-19T07:09:20Z", "type": "commit"}, {"oid": "b9eb45d2a907649eb4d36d64f7959520b40e0c18", "url": "https://github.com/kiegroup/kogito-apps/commit/b9eb45d2a907649eb4d36d64f7959520b40e0c18", "message": "Update ExplainabilityMetrics.java", "committedDate": "2020-08-19T07:10:15Z", "type": "commit"}]}