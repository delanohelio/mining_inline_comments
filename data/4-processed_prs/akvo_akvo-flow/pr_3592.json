{"pr_number": 3592, "pr_title": "[#3591] Datascript to delete specified iterations for a survey instance", "pr_createdAt": "2020-05-28T19:01:16Z", "pr_url": "https://github.com/akvo/akvo-flow/pull/3592", "timeline": [{"oid": "f475ac8e5d7045a3ae8260d081fcec7e4d5c62c4", "url": "https://github.com/akvo/akvo-flow/commit/f475ac8e5d7045a3ae8260d081fcec7e4d5c62c4", "message": "[#3591] Datascript to delete specified iterations for a survey instance\n\n* Delete one or more iterations by specifying at the command line\n* Update the iteration index in the responses if needed (not strictly necessary)\n* Update the dependency libraries", "committedDate": "2020-05-28T18:58:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExNDkwOA==", "url": "https://github.com/akvo/akvo-flow/pull/3592#discussion_r432114908", "bodyText": "So in order to delete and update, you need to run the script twice? you cannot have both d and u?", "author": "valllllll2000", "createdAt": "2020-05-28T20:49:27Z", "path": "scripts/data/delete-repeat-iterations.sh", "diffHunk": "@@ -0,0 +1,17 @@\n+#!/bin/sh\n+\n+# USAGE: ./delete-repeat-iterations.sh akvoflow-uat1 [surveyInstanceId] [group name] [1,2,4] [d | u]", "originalCommit": "f475ac8e5d7045a3ae8260d081fcec7e4d5c62c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxMTQ3OQ==", "url": "https://github.com/akvo/akvo-flow/pull/3592#discussion_r432411479", "bodyText": "yes. thats the idea. I figured that if anything happens and there is a crash midway, then it will cause inconsistencies and delete unwanted data. e.g. if we delete iteration 3 and as we are updating the remaining ones i.e. 4 and 5 then something goes wrong, if we run the script again, we will then delete the updated ones from 4 and 5.", "author": "muloem", "createdAt": "2020-05-29T11:02:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExNDkwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyMDgzOQ==", "url": "https://github.com/akvo/akvo-flow/pull/3592#discussion_r432120839", "bodyText": "what happens is formId is null?", "author": "valllllll2000", "createdAt": "2020-05-28T21:00:57Z", "path": "scripts/data/src/org/akvo/gae/remoteapi/DeleteRepeatQuestionGroupIteration.java", "diffHunk": "@@ -0,0 +1,315 @@\n+/*\n+ *  Copyright (C) 2020 Stichting Akvo (Akvo Foundation)\n+ *\n+ *  This file is part of Akvo FLOW.\n+ *\n+ *  Akvo FLOW is free software: you can redistribute it and modify it under the terms of\n+ *  the GNU Affero General Public License (AGPL) as published by the Free Software Foundation,\n+ *  either version 3 of the License or any later version.\n+ *\n+ *  Akvo FLOW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+ *  See the GNU Affero General Public License included below for more details.\n+ *\n+ *  The full license text can also be seen at <http://www.gnu.org/licenses/agpl.html>.\n+ */\n+\n+package org.akvo.gae.remoteapi;\n+\n+import com.google.appengine.api.datastore.DatastoreService;\n+import com.google.appengine.api.datastore.Entity;\n+import com.google.appengine.api.datastore.EntityNotFoundException;\n+import com.google.appengine.api.datastore.FetchOptions;\n+import com.google.appengine.api.datastore.Key;\n+import com.google.appengine.api.datastore.KeyFactory;\n+import com.google.appengine.api.datastore.PreparedQuery;\n+import com.google.appengine.api.datastore.Query;\n+import com.google.appengine.api.datastore.Query.Filter;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.SortedMap;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+public class DeleteRepeatQuestionGroupIteration implements Process {\n+\n+    private static long NON_EXISTENT_ID = -1L;\n+\n+    private Long surveyInstanceId;\n+\n+    private Long formId;\n+\n+    private String questionGroupName;\n+\n+    private List<Long> iterationsToDelete;\n+\n+    private boolean deleteIterations;\n+\n+    private boolean updateIterations;\n+\n+    @Override\n+    public void execute(DatastoreService ds, String[] args) throws Exception {\n+        System.out.println(\"##############################################################\");\n+        System.out.printf(\n+                        \"#      Arguments: survey instance id, current question group name between quotes, %n\" +\n+                        \"#      comma-separated list of iterations (as they appear in data  %n\" +\n+                        \"#      cleaning report i.e. starting at number 1...) to delete %n\" +\n+                        \"#      d to confirm deletion of iterations %n\");\n+        System.out.printf(\"##############################################################%n%n%n\");\n+\n+        parseArgs(args, ds);\n+\n+        List<Long> repeatGroupQuestionIds = retrieveRepeatGroupQuestionIds(ds);\n+        if (repeatGroupQuestionIds.isEmpty()) {\n+            System.out.println(\"No questions found for group: *\" + questionGroupName + \"*\");\n+            System.exit(0);\n+        }\n+\n+        List<Entity> responses = retrieveResponses(ds, this.surveyInstanceId, repeatGroupQuestionIds);\n+\n+        if (deleteIterations) {\n+            deleteRepeatGroupIterations(ds, responses, this.iterationsToDelete);\n+        } else {\n+            System.out.println(\"No delete request made\");\n+        }\n+\n+        if (updateIterations) {\n+            updateResponseIterations(ds, responses, this.iterationsToDelete);\n+        } else {\n+            System.out.println(\"No iterations to update\");\n+        }\n+    }\n+\n+    private void parseArgs(String[] args, DatastoreService ds) {\n+        Long surveyInstanceId = parseSurveyInstanceId(args);\n+        if (surveyInstanceId.equals(-1L)) {\n+            System.out.println(\"No survey instance id found. Exiting\");\n+            System.exit(1);\n+        } else {\n+            this.surveyInstanceId = surveyInstanceId;\n+        }\n+\n+        this.formId = retrieveFormId(surveyInstanceId, ds);", "originalCommit": "f475ac8e5d7045a3ae8260d081fcec7e4d5c62c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxMjIzOQ==", "url": "https://github.com/akvo/akvo-flow/pull/3592#discussion_r432412239", "bodyText": "if we have only one question group matching then the data is deleted correctly but if for example we have two forms with the same question group, then we get an exception and cannot perform any updates.", "author": "muloem", "createdAt": "2020-05-29T11:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyMDgzOQ=="}], "type": "inlineReview"}]}