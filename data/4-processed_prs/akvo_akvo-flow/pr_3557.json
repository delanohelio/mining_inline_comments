{"pr_number": 3557, "pr_title": "Issue 3556/track user interactions in flow", "pr_createdAt": "2020-05-04T10:16:12Z", "pr_url": "https://github.com/akvo/akvo-flow/pull/3557", "timeline": [{"oid": "732ed2ef444537b17243975b9c313510e94c7a66", "url": "https://github.com/akvo/akvo-flow/commit/732ed2ef444537b17243975b9c313510e94c7a66", "message": "[#3556] - format file with prettier", "committedDate": "2020-05-04T08:35:59Z", "type": "commit"}, {"oid": "c6fd2f53a1d7caf7000658f7f7321bbf6c6fd467", "url": "https://github.com/akvo/akvo-flow/commit/c6fd2f53a1d7caf7000658f7f7321bbf6c6fd467", "message": "[#3556] - add event tracking for data exports", "committedDate": "2020-05-04T09:03:31Z", "type": "commit"}, {"oid": "f26c025fa3807e972b9efd954051097fd59a1451", "url": "https://github.com/akvo/akvo-flow/commit/f26c025fa3807e972b9efd954051097fd59a1451", "message": "[#3556] - format inspect data table file", "committedDate": "2020-05-04T09:09:17Z", "type": "commit"}, {"oid": "8ed773ec57622f2b4e2a018c1c0fb16a03dbaa91", "url": "https://github.com/akvo/akvo-flow/commit/8ed773ec57622f2b4e2a018c1c0fb16a03dbaa91", "message": "[#3556] - add tracking for data view - inspect data", "committedDate": "2020-05-04T10:04:24Z", "type": "commit"}, {"oid": "b9235e21a6c5e3ab355c2c2b2c2f2158775628de", "url": "https://github.com/akvo/akvo-flow/commit/b9235e21a6c5e3ab355c2c2b2c2f2158775628de", "message": "[#3556] - format monitoring data table view file", "committedDate": "2020-05-04T10:05:35Z", "type": "commit"}, {"oid": "39d11092e258a81409108fb1ae3b09cdf07f1596", "url": "https://github.com/akvo/akvo-flow/commit/39d11092e258a81409108fb1ae3b09cdf07f1596", "message": "[#3556] - track monitoring data view", "committedDate": "2020-05-04T10:07:34Z", "type": "commit"}, {"oid": "2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "url": "https://github.com/akvo/akvo-flow/commit/2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "message": "[#3556] - track stats usage", "committedDate": "2020-05-04T10:11:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzNzY4NQ==", "url": "https://github.com/akvo/akvo-flow/pull/3557#discussion_r419337685", "bodyText": "Non-formatting change", "author": "marvinkome", "createdAt": "2020-05-04T10:17:23Z", "path": "Dashboard/app/js/lib/views/data/inspect-data-table-views.js", "diffHunk": "@@ -1,262 +1,283 @@\n+/* eslint-disable import/no-unresolved */\n+import { trackEvent } from 'akvo-flow/analytics';\n import { isNaN } from 'lodash';\n import observe from '../../mixins/observe';\n \n-FLOW.inspectDataTableView = FLOW.View.extend(observe({\n-  'FLOW.selectedControl.selectedSurvey': 'watchSurveySelection',\n-}), {\n-  selectedSurvey: null,\n-  surveyInstanceId: null,\n-  surveyId: null,\n-  deviceId: null,\n-  submitterName: null,\n-  beginDate: null,\n-  endDate: null,\n-  since: null,\n-  alreadyLoaded: [],\n-  selectedCountryCode: null,\n-  selectedLevel1: null,\n-  selectedLevel2: null,\n-  showEditSurveyInstanceWindowBool: false,\n-  selectedSurveyInstanceId: null,\n-  selectedSurveyInstanceNum: null,\n-  siString: null,\n-  missingSurvey: false,\n-\n-  form: Ember.computed(() => {\n-    if (FLOW.selectedControl.get('selectedSurvey')) {\n-      return FLOW.selectedControl.get('selectedSurvey');\n-    }\n-  }).property('FLOW.selectedControl.selectedSurvey'),\n-\n-  init() {\n-    this._super();\n-    FLOW.selectedControl.set('selectedSurveyGroup', null);\n-    FLOW.selectedControl.set('selectedSurvey', null);\n-    FLOW.dateControl.set('toDate', null);\n-    FLOW.dateControl.set('fromDate', null);\n-    FLOW.surveyInstanceControl.set('pageNumber', 0);\n-    FLOW.surveyInstanceControl.set('currentContents', null);\n-    FLOW.locationControl.set('selectedLevel1', null);\n-    FLOW.locationControl.set('selectedLevel2', null);\n-  },\n-\n-  // do a new query\n-  doFindSurveyInstances() {\n-    // check first that survey is selected before performing find action\n-    if (FLOW.selectedControl.get('selectedSurvey') === null) {\n-      this.set('missingSurvey', true);\n-      return;\n-    }\n-\n-    FLOW.surveyInstanceControl.get('sinceArray').clear();\n-    FLOW.surveyInstanceControl.set('pageNumber', -1);\n-    FLOW.metaControl.set('since', null);\n-    this.doNextPage();\n-  },\n-\n-  watchSurveySelection() {\n-    if (FLOW.selectedControl.get('selectedSurvey') !== null) {\n-      this.set('missingSurvey', false);\n-    }\n-  },\n-\n-  doInstanceQuery() {\n-    this.set('beginDate', Date.parse(FLOW.dateControl.get('fromDate')));\n-    // we add 24 hours to the date, in order to make the date search inclusive.\n-    const dayInMilliseconds = 24 * 60 * 60 * 1000;\n-    this.set('endDate', Date.parse(FLOW.dateControl.get('toDate')) + dayInMilliseconds);\n-\n-    // we shouldn't be sending NaN\n-    if (isNaN(this.get('beginDate'))) {\n-      this.set('beginDate', null);\n-    }\n-    if (isNaN(this.get('endDate'))) {\n-      this.set('endDate', null);\n-    }\n-\n-    if (FLOW.selectedControl.get('selectedSurvey')) {\n-      this.set('surveyId', FLOW.selectedControl.selectedSurvey.get('keyId'));\n-    } else {\n-      this.set('surveyId', null);\n-    }\n-\n-    if (!Ember.none(FLOW.locationControl.get('selectedCountry'))) {\n-      this.set('selectedCountryCode', FLOW.locationControl.selectedCountry.get('iso'));\n-    } else {\n-      this.set('selectedCountryCode', null);\n-    }\n-\n-    if (!Ember.none(FLOW.locationControl.get('selectedLevel1'))) {\n-      this.set('selectedLevel1', FLOW.locationControl.selectedLevel1.get('name'));\n-    } else {\n-      this.set('selectedLevel1', null);\n-    }\n+FLOW.inspectDataTableView = FLOW.View.extend(\n+  observe({\n+    'FLOW.selectedControl.selectedSurvey': 'watchSurveySelection',\n+  }),\n+  {\n+    selectedSurvey: null,\n+    surveyInstanceId: null,\n+    surveyId: null,\n+    deviceId: null,\n+    submitterName: null,\n+    beginDate: null,\n+    endDate: null,\n+    since: null,\n+    alreadyLoaded: [],\n+    selectedCountryCode: null,\n+    selectedLevel1: null,\n+    selectedLevel2: null,\n+    showEditSurveyInstanceWindowBool: false,\n+    selectedSurveyInstanceId: null,\n+    selectedSurveyInstanceNum: null,\n+    siString: null,\n+    missingSurvey: false,\n+\n+    form: Ember.computed(() => {\n+      if (FLOW.selectedControl.get('selectedSurvey')) {\n+        return FLOW.selectedControl.get('selectedSurvey');\n+      }\n+    }).property('FLOW.selectedControl.selectedSurvey'),\n+\n+    init() {\n+      this._super();\n+      FLOW.selectedControl.set('selectedSurveyGroup', null);\n+      FLOW.selectedControl.set('selectedSurvey', null);\n+      FLOW.dateControl.set('toDate', null);\n+      FLOW.dateControl.set('fromDate', null);\n+      FLOW.surveyInstanceControl.set('pageNumber', 0);\n+      FLOW.surveyInstanceControl.set('currentContents', null);\n+      FLOW.locationControl.set('selectedLevel1', null);\n+      FLOW.locationControl.set('selectedLevel2', null);\n+    },\n+\n+    // do a new query\n+    doFindSurveyInstances() {\n+      // check first that survey is selected before performing find action\n+      if (FLOW.selectedControl.get('selectedSurvey') === null) {\n+        this.set('missingSurvey', true);\n+        return;\n+      }\n \n-    if (!Ember.none(FLOW.locationControl.get('selectedLevel2'))) {\n-      this.set('selectedLevel2', FLOW.locationControl.selectedLevel2.get('name'));\n-    } else {\n-      this.set('selectedLevel2', null);\n-    }\n+      trackEvent('Data table view', 'Used \"Inspect data\" table view');", "originalCommit": "2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzNzg1NA==", "url": "https://github.com/akvo/akvo-flow/pull/3557#discussion_r419337854", "bodyText": "Non-formatting change", "author": "marvinkome", "createdAt": "2020-05-04T10:17:45Z", "path": "Dashboard/app/js/lib/views/data/inspect-data-table-views.js", "diffHunk": "@@ -1,262 +1,283 @@\n+/* eslint-disable import/no-unresolved */\n+import { trackEvent } from 'akvo-flow/analytics';", "originalCommit": "2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzNzk5MQ==", "url": "https://github.com/akvo/akvo-flow/pull/3557#discussion_r419337991", "bodyText": "Non-formatting change", "author": "marvinkome", "createdAt": "2020-05-04T10:18:03Z", "path": "Dashboard/app/js/lib/views/data/monitoring-data-table-view.js", "diffHunk": "@@ -1,209 +1,243 @@\n+/* eslint-disable import/no-unresolved */\n+import { trackEvent } from 'akvo-flow/analytics';", "originalCommit": "2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzODExOQ==", "url": "https://github.com/akvo/akvo-flow/pull/3557#discussion_r419338119", "bodyText": "Non-formatting change", "author": "marvinkome", "createdAt": "2020-05-04T10:18:23Z", "path": "Dashboard/app/js/lib/views/data/monitoring-data-table-view.js", "diffHunk": "@@ -1,209 +1,243 @@\n+/* eslint-disable import/no-unresolved */\n+import { trackEvent } from 'akvo-flow/analytics';\n import observe from '../../mixins/observe';\n import template from '../../mixins/template';\n \n-FLOW.MonitoringDataTableView = FLOW.View.extend(observe({\n-  'FLOW.selectedControl.selectedSurveyGroup': 'watchSurveySelection',\n-}), {\n-  showingDetailsDialog: false,\n-  cursorStart: null,\n-  missingSurvey: false,\n-\n-  pageNumber: Ember.computed(() => FLOW.router.surveyedLocaleController.get('pageNumber')).property('FLOW.router.surveyedLocaleController.pageNumber'),\n-\n-  showDetailsDialog(evt) {\n-    FLOW.surveyInstanceControl.set('content', FLOW.store.findQuery(FLOW.SurveyInstance, {\n-      surveyedLocaleId: evt.context.get('keyId'),\n-    }));\n-    this.toggleProperty('showingDetailsDialog');\n-  },\n-\n-  showApprovalStatusColumn: Ember.computed(() => FLOW.Env.enableDataApproval).property(),\n-\n-  closeDetailsDialog() {\n-    this.toggleProperty('showingDetailsDialog');\n-  },\n-\n-  showSurveyInstanceDetails(evt) {\n-    FLOW.questionAnswerControl.doQuestionAnswerQuery(evt.context);\n-    $('.si_details').hide();\n-    $(`tr[data-flow-id=\"si_details_${evt.context.get('keyId')}\"]`).show();\n-  },\n-\n-  watchSurveySelection() {\n-    if (FLOW.selectedControl.get('selectedSurveyGroup') !== null) {\n-      this.set('missingSurvey', false);\n-    }\n-  },\n+FLOW.MonitoringDataTableView = FLOW.View.extend(\n+  observe({\n+    'FLOW.selectedControl.selectedSurveyGroup': 'watchSurveySelection',\n+  }),\n+  {\n+    showingDetailsDialog: false,\n+    cursorStart: null,\n+    missingSurvey: false,\n+\n+    pageNumber: Ember.computed(() =>\n+      FLOW.router.surveyedLocaleController.get('pageNumber')\n+    ).property('FLOW.router.surveyedLocaleController.pageNumber'),\n+\n+    showDetailsDialog(evt) {\n+      FLOW.surveyInstanceControl.set(\n+        'content',\n+        FLOW.store.findQuery(FLOW.SurveyInstance, {\n+          surveyedLocaleId: evt.context.get('keyId'),\n+        })\n+      );\n+      this.toggleProperty('showingDetailsDialog');\n+    },\n+\n+    showApprovalStatusColumn: Ember.computed(() => FLOW.Env.enableDataApproval).property(),\n+\n+    closeDetailsDialog() {\n+      this.toggleProperty('showingDetailsDialog');\n+    },\n+\n+    showSurveyInstanceDetails(evt) {\n+      FLOW.questionAnswerControl.doQuestionAnswerQuery(evt.context);\n+      $('.si_details').hide();\n+      $(`tr[data-flow-id=\"si_details_${evt.context.get('keyId')}\"]`).show();\n+    },\n+\n+    watchSurveySelection() {\n+      if (FLOW.selectedControl.get('selectedSurveyGroup') !== null) {\n+        this.set('missingSurvey', false);\n+      }\n+    },\n+\n+    findSurveyedLocale() {\n+      const ident = this.get('identifier');\n+      const displayName = this.get('displayName');\n+      const sgId = FLOW.selectedControl.get('selectedSurveyGroup');\n+      const criteria = {};\n+      // check if the survey is not selected, then highlight the dropdown\n+      if (FLOW.selectedControl.get('selectedSurveyGroup') === null) {\n+        this.set('missingSurvey', true);\n+        return;\n+      }\n \n-  findSurveyedLocale() {\n-    const ident = this.get('identifier');\n-    const displayName = this.get('displayName');\n-    const sgId = FLOW.selectedControl.get('selectedSurveyGroup');\n-    const criteria = {};\n-    // check if the survey is not selected, then highlight the dropdown\n-    if (FLOW.selectedControl.get('selectedSurveyGroup') === null) {\n-      this.set('missingSurvey', true);\n-      return;\n-    }\n+      trackEvent('Data table view', 'Used \"Monitoring data\" table view');", "originalCommit": "2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzODI4NQ==", "url": "https://github.com/akvo/akvo-flow/pull/3557#discussion_r419338285", "bodyText": "Non-formatting change", "author": "marvinkome", "createdAt": "2020-05-04T10:18:44Z", "path": "Dashboard/app/js/lib/views/reports/export-reports-views.js", "diffHunk": "@@ -1,6 +1,7 @@\n+/* eslint-disable import/no-unresolved */\n+import { trackEvent } from 'akvo-flow/analytics';", "originalCommit": "2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzODM3MQ==", "url": "https://github.com/akvo/akvo-flow/pull/3557#discussion_r419338371", "bodyText": "Non-formatting change", "author": "marvinkome", "createdAt": "2020-05-04T10:18:55Z", "path": "Dashboard/app/js/lib/views/reports/export-reports-views.js", "diffHunk": "@@ -41,6 +39,8 @@ FLOW.ReportLoader = Ember.Object.create({\n       Ember.String.loc('_we_will_notify_via_email'),\n       'reports'\n     );\n+\n+    trackEvent('Data exported', `Export Type`, exportType);", "originalCommit": "2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzODY4OQ==", "url": "https://github.com/akvo/akvo-flow/pull/3557#discussion_r419338689", "bodyText": "Non-formatting change", "author": "marvinkome", "createdAt": "2020-05-04T10:19:30Z", "path": "Dashboard/app/js/lib/views/stats/new-stats.jsx", "diffHunk": "@@ -1,6 +1,7 @@\n /* eslint-disable import/no-unresolved */\n import React from 'react';\n import NewStats from 'akvo-flow/components/stats/NewStats';\n+import { trackEvent } from 'akvo-flow/analytics';", "originalCommit": "2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzODg1MQ==", "url": "https://github.com/akvo/akvo-flow/pull/3557#discussion_r419338851", "bodyText": "Non-formatting change", "author": "marvinkome", "createdAt": "2020-05-04T10:19:48Z", "path": "Dashboard/app/js/lib/views/stats/new-stats.jsx", "diffHunk": "@@ -46,6 +44,7 @@ FLOW.NewStatsReactView = FLOW.ReactComponentView.extend({\n     newReport.set('filename', '');\n     newReport.set('state', 'QUEUED');\n \n+    trackEvent('Stats Usage', 'Exported Stats in flow');", "originalCommit": "2fa8e3baeeaed0b00a5a366bb210a04153a29f59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}