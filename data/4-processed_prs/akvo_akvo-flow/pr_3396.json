{"pr_number": 3396, "pr_title": "[#3168] - save datapoints in api", "pr_createdAt": "2020-01-17T14:34:16Z", "pr_url": "https://github.com/akvo/akvo-flow/pull/3396", "timeline": [{"oid": "98b86aaf97380627d7ea9d1d73635269e141dc95", "url": "https://github.com/akvo/akvo-flow/commit/98b86aaf97380627d7ea9d1d73635269e141dc95", "message": "[#3168] - integrate model for storing data points assignments", "committedDate": "2019-12-20T14:36:49Z", "type": "commit"}, {"oid": "0ff082cde1f2df642880a51361a97c955f186971", "url": "https://github.com/akvo/akvo-flow/commit/0ff082cde1f2df642880a51361a97c955f186971", "message": "[#3168] - rename datapoints to datapointsResults, and other formatting changes", "committedDate": "2019-12-20T14:45:42Z", "type": "commit"}, {"oid": "23c38367e6274de8e69863288e4458c8442d6c98", "url": "https://github.com/akvo/akvo-flow/commit/23c38367e6274de8e69863288e4458c8442d6c98", "message": "[#3168] - populate datapoints assignments\n\nP.S Happy holidays", "committedDate": "2019-12-20T15:53:21Z", "type": "commit"}, {"oid": "39a985ff99144b1f34d5a392d550de6ddd9e673b", "url": "https://github.com/akvo/akvo-flow/commit/39a985ff99144b1f34d5a392d550de6ddd9e673b", "message": "Merge branch 'develop' into issue-3168/save-datapoints-in-api", "committedDate": "2020-01-15T14:55:07Z", "type": "commit"}, {"oid": "a517d52d2ea773af135b4d45a269e1b4fadff148", "url": "https://github.com/akvo/akvo-flow/commit/a517d52d2ea773af135b4d45a269e1b4fadff148", "message": "Merge branch 'develop' into issue-3168/save-datapoints-in-api", "committedDate": "2020-01-16T11:24:51Z", "type": "commit"}, {"oid": "7ac05557ae0e6e7d288936d2ec4c27e33015c507", "url": "https://github.com/akvo/akvo-flow/commit/7ac05557ae0e6e7d288936d2ec4c27e33015c507", "message": "[#3168] - load datapoints when setting up assignments", "committedDate": "2020-01-17T13:28:28Z", "type": "commit"}, {"oid": "dccb8e504b36063acddea48751174f173a283490", "url": "https://github.com/akvo/akvo-flow/commit/dccb8e504b36063acddea48751174f173a283490", "message": "[#3168] - search for datapoints without using controller", "committedDate": "2020-01-17T14:28:46Z", "type": "commit"}, {"oid": "41a92bb58fe48eae936a6060426a6cfa15f61cd2", "url": "https://github.com/akvo/akvo-flow/commit/41a92bb58fe48eae936a6060426a6cfa15f61cd2", "message": "Merge branch 'develop' into issue-3168/save-datapoints-in-api", "committedDate": "2020-01-28T16:59:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4MjQ1MA==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372282450", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const filteredDevices = devices.filter(device => !selectedDeviceIds.includes(device.id));\n          \n          \n            \n                const unSelectedDevices = devices.filter(device => !selectedDeviceIds.includes(device.id));", "author": "muloem", "createdAt": "2020-01-29T09:50:02Z", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AddDevices.jsx", "diffHunk": "@@ -16,9 +16,7 @@ export default class AddDevice extends React.Component {\n     // filter out selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(\n-      device => !selectedDeviceIds.includes(device.id)\n-    );\n+    const filteredDevices = devices.filter(device => !selectedDeviceIds.includes(device.id));", "originalCommit": "41a92bb58fe48eae936a6060426a6cfa15f61cd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NDUwMA==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372284500", "bodyText": "or something more descriptive of why the filtering is happening", "author": "muloem", "createdAt": "2020-01-29T09:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4MjQ1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NTc5NA==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372285794", "bodyText": "Did you merge the code from the previous PR? I thought this one had changed...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const filteredDevices = devices.filter(device => selectedDeviceIds.includes(device.id));\n          \n          \n            \n                const selectedDevices = devices.filter(device => selectedDeviceIds.includes(device.id));", "author": "muloem", "createdAt": "2020-01-29T09:56:23Z", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "diffHunk": "@@ -16,9 +16,7 @@ export default class EditDevices extends React.Component {\n     // filter out selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(device =>\n-      selectedDeviceIds.includes(device.id)\n-    );\n+    const filteredDevices = devices.filter(device => selectedDeviceIds.includes(device.id));", "originalCommit": "41a92bb58fe48eae936a6060426a6cfa15f61cd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNjI0MA==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372316240", "bodyText": "This is different", "author": "marvinkome", "createdAt": "2020-01-29T10:58:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NTc5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NjgxNA==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372286814", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  newSelectedDevices = selectedDevices.filter(device => !ids.includes(device));\n          \n          \n            \n                  newSelectedDeviceIds = selectedDevicesIds.filter(deviceId => !ids.includes(deviceId));", "author": "muloem", "createdAt": "2020-01-29T09:58:18Z", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "diffHunk": "@@ -43,9 +41,7 @@ export default class EditDevices extends React.Component {\n     if (checked) {\n       newSelectedDevices = selectedDevices.concat(ids);\n     } else {\n-      newSelectedDevices = selectedDevices.filter(\n-        device => !ids.includes(device)\n-      );\n+      newSelectedDevices = selectedDevices.filter(device => !ids.includes(device));", "originalCommit": "41a92bb58fe48eae936a6060426a6cfa15f61cd2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354", "url": "https://github.com/akvo/akvo-flow/commit/d4ff0201ff9f74cd746dfa1253fd77ca081fa354", "message": "[#3168] - update variable names to be more contextual", "committedDate": "2020-01-29T11:54:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372894689", "bodyText": "I suspect this may be a bit problematic in terms of slowing down the loading of assignments but also loading possibly unnecessary dataPointAssignments that the user is not going to look at. What's your motivation for wanting to load the datapoint assignments already?", "author": "muloem", "createdAt": "2020-01-30T11:24:36Z", "path": "Dashboard/app/js/lib/router/router.js", "diffHunk": "@@ -231,9 +227,15 @@ FLOW.Router = Ember.Router.extend({\n       editSurveysAssignment: Ember.Route.extend({\n         route: '/assign-surveys',\n         connectOutlets(router) {\n-          router\n-            .get('navDevicesController')\n-            .connectOutlet('editSurveyAssignment');\n+          router.get('navDevicesController').connectOutlet('editSurveyAssignment');\n+\n+          // if editing fetch datapoints assignments,\n+          // else well, no need for datapoints assignments in a new assignments\n+          const assignmentId = FLOW.selectedControl.selectedSurveyAssignment.get('keyId');\n+          if (assignmentId) {\n+            FLOW.dataPointAssignmentControl.populate(assignmentId);", "originalCommit": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk3MzU3NQ==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372973575", "bodyText": "I'm loading them here to be able to get each data point assignment when it's needed rather than making another API request when in the assignment. And also other checks like, when changing survey folder the datapoints assignments need to be removed, If they're not loaded it wouldn't know what to remove.", "author": "marvinkome", "createdAt": "2020-01-30T14:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk3ODYxNA==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372978614", "bodyText": "Then maybe its enough to skip them if there is nothing to remove. and remove if there is something.  So right now you go to the assignments page, select an assignment to edit and there you see a form and a list of devices that are part of that assignment.  however, its only relevant to have information on the datapoint assignment if you actually select a specific device to look at. if you never select a device then we have spent resources and time loading up datapoint assignments which will not be used.  So I can understand the reasoning but I think it will slow down the performance unnecessarily.", "author": "muloem", "createdAt": "2020-01-30T14:26:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk4NjU0MQ==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372986541", "bodyText": "True, I see your point. So that means, only load datapoint related to a device when the user clicks on it.", "author": "marvinkome", "createdAt": "2020-01-30T14:39:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk4NzA2MA==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372987060", "bodyText": "Yes exactly \ud83d\udc4d", "author": "muloem", "createdAt": "2020-01-30T14:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDM1OQ==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372900359", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              if (!Ember.none(value)) {\n          \n          \n            \n              if (value) {\n          \n      \n    \n    \n  \n\nLets try to get rid of Ember where we can.", "author": "muloem", "createdAt": "2020-01-30T11:37:45Z", "path": "Dashboard/app/js/lib/utils/index.js", "diffHunk": "@@ -21,3 +21,10 @@ export function ArrNoDupe(a) {\n   }\n   return tempa;\n }\n+\n+export function formatDate(value) {\n+  if (!Ember.none(value)) {", "originalCommit": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMTExMg==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372901112", "bodyText": "this function is already defined on L44 right?", "author": "muloem", "createdAt": "2020-01-30T11:39:47Z", "path": "Dashboard/app/js/lib/views/devices/assignment-edit-views.jsx", "diffHunk": "@@ -43,8 +37,15 @@ FLOW.AssignmentEditView = FLOW.ReactComponentView.extend(\n       this.addDevicesCheckedOption = this.addDevicesCheckedOption.bind(this);\n       this.addDevicesToAssignment = this.addDevicesToAssignment.bind(this);\n       this.removeDevicesFromAssignment = this.removeDevicesFromAssignment.bind(this);\n-      this.findDatapoints = this.findDatapoints.bind(this);\n+\n+      // datapoints methods\n+      this.saveDatapoints = this.saveDatapoints.bind(this);\n+      this.setupDatapoints = this.setupDatapoints.bind(this);\n+      this.getDeviceDatapoints = this.getDeviceDatapoints.bind(this);\n       this.detectDatapointsLoaded = this.detectDatapointsLoaded.bind(this);\n+      this.findDatapoints = this.findDatapoints.bind(this);\n+      this.detectSearchedDatapointLoaded = this.detectSearchedDatapointLoaded.bind(this);\n+      this.getDeviceDatapoints = this.getDeviceDatapoints.bind(this);", "originalCommit": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "01e9a3545900ec7d4cf8282b409901f3cb6a9c6a", "url": "https://github.com/akvo/akvo-flow/commit/01e9a3545900ec7d4cf8282b409901f3cb6a9c6a", "message": "[#3168] - remove duplicate code", "committedDate": "2020-01-30T14:21:50Z", "type": "commit"}, {"oid": "5b0172800e6063c4e38f25140ba0ae1a050d3f5c", "url": "https://github.com/akvo/akvo-flow/commit/5b0172800e6063c4e38f25140ba0ae1a050d3f5c", "message": "[#3168] - fetch datapoint details only when device is viewed", "committedDate": "2020-01-31T11:33:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUyMTc2Nw==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r373521767", "bodyText": "Dont you think this may end up tripping up people in the long run?  it works but its not clear which of the two is a number or string.  Can this be converted to all numbers without too much trouble?", "author": "muloem", "createdAt": "2020-01-31T14:58:03Z", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AssignDatapoints/index.jsx", "diffHunk": "@@ -19,8 +19,8 @@ export default class AssignDatapoints extends React.Component {\n     const { selectedDeviceId } = this.props;\n     const { devices, datapointAssignments } = this.context.data;\n \n-    const deviceData = devices.find(device => device.id === selectedDeviceId);\n-    const datapointAssignment = datapointAssignments.find(dp => dp.deviceId === selectedDeviceId);\n+    const deviceData = devices.find(device => device.id == selectedDeviceId);\n+    const datapointAssignment = datapointAssignments.find(dp => dp.deviceId == selectedDeviceId);", "originalCommit": "5b0172800e6063c4e38f25140ba0ae1a050d3f5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUyMjMwNA==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r373522304", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  newSelectedDevicesIds = selectedDevicesIds.filter(device => device !== id);\n          \n          \n            \n                  newSelectedDevicesIds = selectedDevicesIds.filter(deviceId => deviceId !== id);", "author": "muloem", "createdAt": "2020-01-31T14:58:53Z", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "diffHunk": "@@ -9,64 +9,60 @@ import DeviceEmpty from '../__partials/DeviceEmpty';\n \n export default class EditDevices extends React.Component {\n   state = {\n-    selectedDevices: [],\n+    selectedDevicesIds: [],\n   };\n \n   getDeviceGroups() {\n-    // filter out selected devices\n+    // filter selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(device =>\n-      selectedDeviceIds.includes(device.id)\n-    );\n+    const selectedDevices = devices.filter(device => selectedDeviceIds.includes(device.id));\n \n-    return _groupBy(filteredDevices, device => device.deviceGroup.id);\n+    return _groupBy(selectedDevices, device => device.deviceGroup.id);\n   }\n \n   onSelectDevice = (id, checked) => {\n-    const { selectedDevices } = this.state;\n-    let newSelectedDevices = [];\n+    const { selectedDevicesIds } = this.state;\n+    let newSelectedDevicesIds = [];\n \n     if (checked) {\n-      newSelectedDevices = selectedDevices.concat(id);\n+      newSelectedDevicesIds = selectedDevicesIds.concat(id);\n     } else {\n-      newSelectedDevices = selectedDevices.filter(device => device !== id);\n+      newSelectedDevicesIds = selectedDevicesIds.filter(device => device !== id);", "originalCommit": "5b0172800e6063c4e38f25140ba0ae1a050d3f5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUyMjU4MQ==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r373522581", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  newSelectedDevicesIds = selectedDevicesIds.filter(device => !ids.includes(device));\n          \n          \n            \n                  newSelectedDevicesIds = selectedDevicesIds.filter(deviceId => !ids.includes(deviceId));", "author": "muloem", "createdAt": "2020-01-31T14:59:22Z", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "diffHunk": "@@ -9,64 +9,60 @@ import DeviceEmpty from '../__partials/DeviceEmpty';\n \n export default class EditDevices extends React.Component {\n   state = {\n-    selectedDevices: [],\n+    selectedDevicesIds: [],\n   };\n \n   getDeviceGroups() {\n-    // filter out selected devices\n+    // filter selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(device =>\n-      selectedDeviceIds.includes(device.id)\n-    );\n+    const selectedDevices = devices.filter(device => selectedDeviceIds.includes(device.id));\n \n-    return _groupBy(filteredDevices, device => device.deviceGroup.id);\n+    return _groupBy(selectedDevices, device => device.deviceGroup.id);\n   }\n \n   onSelectDevice = (id, checked) => {\n-    const { selectedDevices } = this.state;\n-    let newSelectedDevices = [];\n+    const { selectedDevicesIds } = this.state;\n+    let newSelectedDevicesIds = [];\n \n     if (checked) {\n-      newSelectedDevices = selectedDevices.concat(id);\n+      newSelectedDevicesIds = selectedDevicesIds.concat(id);\n     } else {\n-      newSelectedDevices = selectedDevices.filter(device => device !== id);\n+      newSelectedDevicesIds = selectedDevicesIds.filter(device => device !== id);\n     }\n \n-    this.setState({ selectedDevices: newSelectedDevices });\n+    this.setState({ selectedDevicesIds: newSelectedDevicesIds });\n   };\n \n   onSelectMultipleDevices = (ids, checked) => {\n-    const { selectedDevices } = this.state;\n-    let newSelectedDevices = [...selectedDevices];\n+    const { selectedDevicesIds } = this.state;\n+    let newSelectedDevicesIds = [...selectedDevicesIds];\n \n     if (checked) {\n-      newSelectedDevices = selectedDevices.concat(ids);\n+      newSelectedDevicesIds = selectedDevicesIds.concat(ids);\n     } else {\n-      newSelectedDevices = selectedDevices.filter(\n-        device => !ids.includes(device)\n-      );\n+      newSelectedDevicesIds = selectedDevicesIds.filter(device => !ids.includes(device));", "originalCommit": "5b0172800e6063c4e38f25140ba0ae1a050d3f5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6b2b7b605fe296d221d1ce6f7d01f7657a645ec6", "url": "https://github.com/akvo/akvo-flow/commit/6b2b7b605fe296d221d1ce6f7d01f7657a645ec6", "message": "[#3168] - update variables names", "committedDate": "2020-01-31T15:37:09Z", "type": "commit"}, {"oid": "e8fad92952347f12b6384239a33285c748b7f500", "url": "https://github.com/akvo/akvo-flow/commit/e8fad92952347f12b6384239a33285c748b7f500", "message": "[#3168] - fix bug with js coercion", "committedDate": "2020-02-01T08:26:57Z", "type": "commit"}, {"oid": "b89f97b56e1a312220f456bea88764316df1b341", "url": "https://github.com/akvo/akvo-flow/commit/b89f97b56e1a312220f456bea88764316df1b341", "message": "[#3168] -  fix JS coercion errors", "committedDate": "2020-02-03T09:49:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0NjQ3Nw==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r374046477", "bodyText": "Instead of doing this I think its much clearer to set the property to a number. i.e.\nAssignDatapoints.propTypes = {\n  selectedDeviceId: PropTypes.number.isRequired,\n};", "author": "muloem", "createdAt": "2020-02-03T11:15:29Z", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AssignDatapoints/index.jsx", "diffHunk": "@@ -20,7 +20,9 @@ export default class AssignDatapoints extends React.Component {\n     const { devices, datapointAssignments } = this.context.data;\n \n     const deviceData = devices.find(device => device.id === selectedDeviceId);\n-    const datapointAssignment = datapointAssignments.find(dp => dp.deviceId === selectedDeviceId);\n+    const datapointAssignment = datapointAssignments.find(\n+      dp => dp.deviceId === parseInt(selectedDeviceId, 10)", "originalCommit": "b89f97b56e1a312220f456bea88764316df1b341", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0ODkyOA==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r374048928", "bodyText": "Yeah, But in #3404 it's already converted to a number, this is like a minor hack to make sure this PR works", "author": "marvinkome", "createdAt": "2020-02-03T11:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0NjQ3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0NzU1Nw==", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r374047557", "bodyText": "Same here regarding setting the PropType", "author": "muloem", "createdAt": "2020-02-03T11:18:08Z", "path": "Dashboard/app/js/lib/views/devices/assignment-edit-views.jsx", "diffHunk": "@@ -706,7 +706,10 @@ FLOW.AssignmentEditView = FLOW.ReactComponentView.extend(\n       this.renderReactSide();\n     },\n \n-    assignDataPointsToDevice(datapoints, deviceId) {\n+    assignDataPointsToDevice(datapoints, deviceIdInString) {\n+      // convert devieId to number\n+      const deviceId = parseInt(deviceIdInString, 10);", "originalCommit": "b89f97b56e1a312220f456bea88764316df1b341", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}