{"pr_number": 627, "pr_title": "Added documentation on the properties for Avro", "pr_createdAt": "2020-06-25T13:57:35Z", "pr_url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627", "timeline": [{"oid": "813cf7cee540b6718061fc269a9a972dc3f4fd3f", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/813cf7cee540b6718061fc269a9a972dc3f4fd3f", "message": "Added documentation on the properties for Avro\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-25T13:56:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NDQ0OA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445594448", "bodyText": "you need CC Compat even on the confluent registry?", "author": "cescoffier", "createdAt": "2020-06-25T14:19:17Z", "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"", "originalCommit": "813cf7cee540b6718061fc269a9a972dc3f4fd3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5ODk1Mw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445598953", "bodyText": "O, Yes this is when you use Apicurio but confluent compatible. Let me fix that.", "author": "phillip-kruger", "createdAt": "2020-06-25T14:25:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NDQ0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NDkzOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445594939", "bodyText": "Reactive Messaging does not use this format.\nIt should be:\nmp.messaging.incoming.[channel].value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer\nmp.messaging.incoming.[channel].schema.registry.url=http://<your_host>:<your_port>/api/ccompat\nmp.messaging.incoming.[channel].specific.avro.reader=true", "author": "cescoffier", "createdAt": "2020-06-25T14:20:01Z", "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+| \"specific.avro.reader\" | true\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroDeserializer.class.getName()); ", "originalCommit": "813cf7cee540b6718061fc269a9a972dc3f4fd3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NTM1NQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445595355", "bodyText": "mp.messaging.outgoing.[channel].value.serializer=io.confluent.kafka.serializers. KafkaAvroSerializer\nmp.messaging.outgoing.[channel].schema.registry.url=http://<your_host>:<your_port>/api/ccompat", "author": "cescoffier", "createdAt": "2020-06-25T14:20:35Z", "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+| \"specific.avro.reader\" | true\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroDeserializer.class.getName()); \n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+props.put(io.confluent.kafka.serializers.KafkaAvroDeserializerConfig.SPECIFIC_AVRO_READER_CONFIG, true);\n+----\n+\n+==== Producer\n+\n+[options=\"header\"]\n+|===\n+| \"value.serializer\" | \"io.confluent.kafka.serializers.KafkaAvroSerializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"", "originalCommit": "813cf7cee540b6718061fc269a9a972dc3f4fd3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NjI4OQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445596289", "bodyText": "Same format as mentioned in my other comment", "author": "cescoffier", "createdAt": "2020-06-25T14:21:46Z", "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+| \"specific.avro.reader\" | true\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroDeserializer.class.getName()); \n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+props.put(io.confluent.kafka.serializers.KafkaAvroDeserializerConfig.SPECIFIC_AVRO_READER_CONFIG, true);\n+----\n+\n+==== Producer\n+\n+[options=\"header\"]\n+|===\n+| \"value.serializer\" | \"io.confluent.kafka.serializers.KafkaAvroSerializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.producer.ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroSerializer.class.getName());\n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+----\n+\n+=== For https://github.com/Apicurio/apicurio-registry[Apicurio] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.apicurio.registry.utils.serde.AvroKafkaDeserializer\"\n+| \"apicurio.registry.url\" | \"http://<your_host>:<your_port>/api\"\n+| \"apicurio.registry.avro-datum-provider\" | \"io.apicurio.registry.utils.serde.avro.ReflectAvroDatumProvider\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.apicurio.registry.utils.serde.AvroKafkaDeserializer.class.getName());", "originalCommit": "813cf7cee540b6718061fc269a9a972dc3f4fd3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NjQzMw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/627#discussion_r445596433", "bodyText": "SAme format as mentioned in my other comment", "author": "cescoffier", "createdAt": "2020-06-25T14:21:56Z", "path": "documentation/src/main/doc/modules/kafka/pages/avro-configuration.adoc", "diffHunk": "@@ -0,0 +1,77 @@\n+[#kafka-avro-configuration]\n+== Using Apache Avro serializer/deserializer\n+\n+If you are using https://avro.apache.org/[Apache Avro] serializer/deserializer, please note the following properties:\n+\n+=== For https://docs.confluent.io/current/schema-registry/serdes-develop/serdes-avro.html[Confluent] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.confluent.kafka.serializers.KafkaAvroDeserializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+| \"specific.avro.reader\" | true\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroDeserializer.class.getName()); \n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+props.put(io.confluent.kafka.serializers.KafkaAvroDeserializerConfig.SPECIFIC_AVRO_READER_CONFIG, true);\n+----\n+\n+==== Producer\n+\n+[options=\"header\"]\n+|===\n+| \"value.serializer\" | \"io.confluent.kafka.serializers.KafkaAvroSerializer\"\n+| \"schema.registry.url\" | \"http://<your_host>:<your_port>/api/ccompat\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.producer.ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, io.confluent.kafka.serializers.KafkaAvroSerializer.class.getName());\n+props.put(io.confluent.kafka.serializers.AbstractKafkaSchemaSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, \"http://localhost:8080/api/ccompat\"); // Or whatever your host and port is\n+----\n+\n+=== For https://github.com/Apicurio/apicurio-registry[Apicurio] Schema Registry\n+\n+==== Consumer\n+\n+[options=\"header\"]\n+|===\n+| \"value.deserializer\" | \"io.apicurio.registry.utils.serde.AvroKafkaDeserializer\"\n+| \"apicurio.registry.url\" | \"http://<your_host>:<your_port>/api\"\n+| \"apicurio.registry.avro-datum-provider\" | \"io.apicurio.registry.utils.serde.avro.ReflectAvroDatumProvider\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+props.put(org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, io.apicurio.registry.utils.serde.AvroKafkaDeserializer.class.getName());\n+props.put(io.apicurio.registry.utils.serde.AbstractKafkaSerDe.REGISTRY_URL_CONFIG_PARAM, \"http://localhost:8080/api\"); // Or whatever your host and port is\n+props.put(io.apicurio.registry.utils.serde.avro.AvroDatumProvider.REGISTRY_AVRO_DATUM_PROVIDER_CONFIG_PARAM, io.apicurio.registry.utils.serde.avro.ReflectAvroDatumProvider.class.getName());\n+----\n+\n+==== Producer\n+\n+[options=\"header\"]\n+|===\n+| \"value.serializer\" | \"io.apicurio.registry.utils.serde.AvroKafkaSerializer\"\n+| \"apicurio.registry.url\" | \"http://<your_host>:<your_port>/api\"\n+| \"apicurio.registry.avro-datum-provider\" | \"io.apicurio.registry.utils.serde.avro.ReflectAvroDatumProvider\"\n+| \"apicurio.registry.global-id\" | \"io.apicurio.registry.utils.serde.strategy.GetOrCreateIdStrategy\"\n+| \"apicurio.registry.artifact-id\" | \"io.apicurio.registry.utils.serde.strategy.SimpleTopicIdStrategy\"\n+|===\n+\n+Example:\n+[source, java]\n+----\n+\n+props.put(io.apicurio.registry.utils.serde.AbstractKafkaSerializer.REGISTRY_ARTIFACT_ID_STRATEGY_CONFIG_PARAM, io.apicurio.registry.utils.serde.strategy.SimpleTopicIdStrategy.class.getName());", "originalCommit": "813cf7cee540b6718061fc269a9a972dc3f4fd3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "70a2090e189fd98c7588a741b3fc0106cb8f4a3a", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/70a2090e189fd98c7588a741b3fc0106cb8f4a3a", "message": "Added documentation on the properties for Avro\nSigned-off-by:Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-06-25T18:18:05Z", "type": "commit"}]}