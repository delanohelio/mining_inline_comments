{"pr_number": 857, "pr_title": "Implement deserialization failure handler", "pr_createdAt": "2020-11-07T18:16:59Z", "pr_url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/857", "timeline": [{"oid": "1d0bf32c3c74e49de4d1ad417226579b2d9713ba", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/1d0bf32c3c74e49de4d1ad417226579b2d9713ba", "message": "Implement deserialization failure handler support", "committedDate": "2020-11-07T18:20:39Z", "type": "forcePushed"}, {"oid": "cf5bad54cd6888e0fb5a5be4ff0c91f18cd82719", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/cf5bad54cd6888e0fb5a5be4ff0c91f18cd82719", "message": "Fix back-pressure issue in tests", "committedDate": "2020-11-08T08:15:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg0MzU4NA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/857#discussion_r519843584", "bodyText": "\"is be applied\" -> could you remove the \"be\"?", "author": "kenfinnigan", "createdAt": "2020-11-09T14:14:11Z", "path": "documentation/src/main/doc/modules/connectors/partials/META-INF/connector/smallrye-kafka-incoming.adoc", "diffHunk": "@@ -109,7 +109,15 @@ Type: _int_ | false | `1`\n \n Type: _boolean_ | false | `true`\n \n-| *consumer-rebalance-listener.name* | The name set in `javax.inject.Named` of a bean that implements `io.smallrye.reactive.messaging.kafka.KafkaConsumerRebalanceListener`. If set the listener will be applied to the consumer.\n+| *consumer-rebalance-listener.name* | The name set in `javax.inject.Named` of a bean that implements `io.smallrye.reactive.messaging.kafka.KafkaConsumerRebalanceListener`. If set, this rebalance listener is be applied to the consumer.", "originalCommit": "cf5bad54cd6888e0fb5a5be4ff0c91f18cd82719", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg0NDc3Mw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/857#discussion_r519844773", "bodyText": "Not huge, but maybe switch the ordering of the config keys to have the \"key\" first as it's mentioned first in other situations", "author": "kenfinnigan", "createdAt": "2020-11-09T14:15:41Z", "path": "documentation/src/main/doc/modules/kafka/pages/inbound.adoc", "diffHunk": "@@ -137,6 +137,40 @@ The record written on the dead letter queue contains a set of additional headers\n * `dead-letter-partition` - the original partition of the record (integer mapped to String)\n * `dead-letter-offset` - the original offset of the record (long mapped to String)\n \n+=== Handling deserialization failures\n+\n+Because deserialization happens before creating a `Message`, the failure strategy presented above cannot be applied.\n+However, when a deserialization failure occurs, you can intercept it and provide a fallback value.\n+If you don't, `null` will be used as fallback value.\n+\n+To achieve this, create a CDI bean implementing the {javadoc-base}/io/smallrye/reactive/messaging/kafka/DeserializationFailureHandler.html[DeserializationFailureHandler<T>] interface:\n+\n+[source, java]\n+----\n+@ApplicationScoped\n+@Named(\"failure-fallback\") // Set the name of the failure handler\n+public static class MyDeserializationFailureHandler\n+    implements DeserializationFailureHandler<JsonObject> { // Specify the expected type\n+\n+    @Override\n+    public JsonObject handleDeserializationFailure(String topic, boolean isKey,\n+            String deserializer, byte[] data,\n+            Exception exception, Headers headers) {\n+        return fallback;\n+    }\n+}\n+----\n+\n+The bean must be exposed with the `@Named` qualifier specifying the name of the bean.\n+Then, in the connector configuration, specify the following attribute:\n+\n+* `mp.messaging.incoming.$channel.value-deserialization-failure-handler`: name of the bean handling deserialization failures happening for the record's value,", "originalCommit": "cf5bad54cd6888e0fb5a5be4ff0c91f18cd82719", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg1NDI1OA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/857#discussion_r519854258", "bodyText": "Good point!", "author": "cescoffier", "createdAt": "2020-11-09T14:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg0NDc3Mw=="}], "type": "inlineReview"}, {"oid": "b6b9f354d0f4dcf062067abe921fbfca681cb362", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/b6b9f354d0f4dcf062067abe921fbfca681cb362", "message": "Initial support of the deserialisation failure handler", "committedDate": "2020-11-09T14:33:56Z", "type": "commit"}, {"oid": "aa56828477ef46c7138632fc461a472abb8267a3", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/aa56828477ef46c7138632fc461a472abb8267a3", "message": "Move the broker creation to a junit 5 extension\n\nThat avoid many broker creations.", "committedDate": "2020-11-09T14:33:56Z", "type": "commit"}, {"oid": "61a2961c556dfb1d45d5a7ce83e6458823673e0e", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/61a2961c556dfb1d45d5a7ce83e6458823673e0e", "message": "Use mock instances in tests to avoid creating CDI containers.", "committedDate": "2020-11-09T14:33:56Z", "type": "commit"}, {"oid": "65282a8212f9811ad6aded976d71919f5a3c6b7e", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/65282a8212f9811ad6aded976d71919f5a3c6b7e", "message": "Implement deserialization failure handler support", "committedDate": "2020-11-09T14:33:56Z", "type": "commit"}, {"oid": "52bfccda519e183918949a7871f8af379f18312a", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/52bfccda519e183918949a7871f8af379f18312a", "message": "Fix back-pressure issue in tests", "committedDate": "2020-11-09T14:33:56Z", "type": "commit"}, {"oid": "52bfccda519e183918949a7871f8af379f18312a", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/52bfccda519e183918949a7871f8af379f18312a", "message": "Fix back-pressure issue in tests", "committedDate": "2020-11-09T14:33:56Z", "type": "forcePushed"}]}