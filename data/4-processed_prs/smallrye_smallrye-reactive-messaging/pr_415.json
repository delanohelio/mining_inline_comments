{"pr_number": 415, "pr_title": "Change default for retry-attempts to infinite retries", "pr_createdAt": "2020-02-11T19:55:32Z", "pr_url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTY0MA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r381105640", "bodyText": "Minor - I generally use -1 for infinite, but null is ok.", "author": "cescoffier", "createdAt": "2020-02-19T06:55:24Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -65,11 +65,17 @@ public KafkaSource(Vertx vertx, Config config, String servers) {\n                 .doOnError(t -> LOGGER.error(\"Unable to read a record from Kafka topic '{}'\", topic, t));\n \n         if (config.getOptionalValue(\"retry\", Boolean.class).orElse(true)) {\n-            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(5);\n-            flowable = flowable\n+            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(null);", "originalCommit": "291fdb9d910ba7e2d71310da8ed552ad94350c48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMjAxNg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r382202016", "bodyText": "Noted! Will change it to -1", "author": "thescouser89", "createdAt": "2020-02-20T19:12:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTgwOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r381105809", "bodyText": "Wondering if we should implement some kind of exponential backoff. WDYT?", "author": "cescoffier", "createdAt": "2020-02-19T06:55:54Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -65,11 +65,17 @@ public KafkaSource(Vertx vertx, Config config, String servers) {\n                 .doOnError(t -> LOGGER.error(\"Unable to read a record from Kafka topic '{}'\", topic, t));\n \n         if (config.getOptionalValue(\"retry\", Boolean.class).orElse(true)) {\n-            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(5);\n-            flowable = flowable\n+            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(null);\n+\n+            if (max == null) {\n+                // always retry\n+                flowable = flowable.retryWhen(attempts -> attempts.flatMap(i -> Flowable.timer(10, TimeUnit.SECONDS)));", "originalCommit": "291fdb9d910ba7e2d71310da8ed552ad94350c48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMTkxMQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r382201911", "bodyText": "Exponential backoff sounds good! Do you think it makes sense to backing off up to a max level?", "author": "thescouser89", "createdAt": "2020-02-20T19:12:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTgwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExMjIxNg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r383112216", "bodyText": "Yes, something like 30 seconds max between attempt.", "author": "cescoffier", "createdAt": "2020-02-24T07:28:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNTgwOQ=="}], "type": "inlineReview"}, {"oid": "c0da59e68b955346dbe06c86c2cfc2dcc086fcd9", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/c0da59e68b955346dbe06c86c2cfc2dcc086fcd9", "message": "Change default for retry-attempts to infinite retries\n\nIf not specified by the user, the default retry behaviour is to always\nretry, with an exponential backoff wait time, up to the retry max wait\ntime (30 seconds by default).\n\nIf the user specify a retry-attempts, then the nubmer of retries will be\nlimited to that number.\n\nA new env var is also introduced, 'retry-max-wait'. It is used to set\nthe max wait time in seconds between retries, with a default of 30\nseconds.", "committedDate": "2020-02-25T20:40:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMzk0OA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/415#discussion_r384313948", "bodyText": "Should be an AtomicInteger.", "author": "cescoffier", "createdAt": "2020-02-26T07:32:15Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/impl/KafkaSource.java", "diffHunk": "@@ -65,11 +65,30 @@ public KafkaSource(Vertx vertx, Config config, String servers) {\n                 .doOnError(t -> LOGGER.error(\"Unable to read a record from Kafka topic '{}'\", topic, t));\n \n         if (config.getOptionalValue(\"retry\", Boolean.class).orElse(true)) {\n-            Integer max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(5);\n-            flowable = flowable\n-                    .retryWhen(attempts -> attempts\n-                            .zipWith(Flowable.range(1, max), (n, i) -> i)\n-                            .flatMap(i -> Flowable.timer(i, TimeUnit.SECONDS)));\n+            int max = config.getOptionalValue(\"retry-attempts\", Integer.class).orElse(-1);\n+            int retryMaxWait = config.getOptionalValue(\"retry-max-wait\", Integer.class).orElse(30);\n+\n+            if (max == -1) {\n+                // always retry\n+                final int[] CURRENT_WAIT_SECOND = { 1 };", "originalCommit": "c0da59e68b955346dbe06c86c2cfc2dcc086fcd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6a14cc705a77fab6d08d8da737641c1c012c0e4f", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/6a14cc705a77fab6d08d8da737641c1c012c0e4f", "message": "Change default for retry-attempts to infinite retries\n\nIf not specified by the user, the default retry behaviour is to always\nretry, with an exponential backoff wait time, up to the retry max wait\ntime (30 seconds by default).\n\nIf the user specify a retry-attempts, then the nubmer of retries will be\nlimited to that number.\n\nA new env var is also introduced, 'retry-max-wait'. It is used to set\nthe max wait time in seconds between retries, with a default of 30\nseconds.", "committedDate": "2020-02-26T20:18:25Z", "type": "forcePushed"}, {"oid": "eb76ab8c09e171ca562f93281076494ec4131a3a", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/eb76ab8c09e171ca562f93281076494ec4131a3a", "message": "Change default for retry-attempts to infinite retries\n\nIf not specified by the user, the default retry behaviour is to always\nretry, with an exponential backoff wait time, up to the retry max wait\ntime (30 seconds by default).\n\nIf the user specify a retry-attempts, then the nubmer of retries will be\nlimited to that number.\n\nA new env var is also introduced, 'retry-max-wait'. It is used to set\nthe max wait time in seconds between retries, with a default of 30\nseconds.", "committedDate": "2020-02-26T20:21:28Z", "type": "commit"}, {"oid": "eb76ab8c09e171ca562f93281076494ec4131a3a", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/eb76ab8c09e171ca562f93281076494ec4131a3a", "message": "Change default for retry-attempts to infinite retries\n\nIf not specified by the user, the default retry behaviour is to always\nretry, with an exponential backoff wait time, up to the retry max wait\ntime (30 seconds by default).\n\nIf the user specify a retry-attempts, then the nubmer of retries will be\nlimited to that number.\n\nA new env var is also introduced, 'retry-max-wait'. It is used to set\nthe max wait time in seconds between retries, with a default of 30\nseconds.", "committedDate": "2020-02-26T20:21:28Z", "type": "forcePushed"}]}