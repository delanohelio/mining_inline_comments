{"pr_number": 12432, "pr_title": "Sort plugin search results with better text matches higher in search results", "pr_createdAt": "2020-09-01T19:52:43Z", "pr_url": "https://github.com/runelite/runelite/pull/12432", "timeline": [{"oid": "0cab51f789c11d9dc0f2eaddfcecc74d4b9aa8c9", "url": "https://github.com/runelite/runelite/commit/0cab51f789c11d9dc0f2eaddfcecc74d4b9aa8c9", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins", "committedDate": "2020-09-01T19:59:10Z", "type": "forcePushed"}, {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "url": "https://github.com/runelite/runelite/commit/e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins", "committedDate": "2020-09-01T20:03:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1ODUzMw==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486658533", "bodyText": "Don't static import", "author": "abextm", "createdAt": "2020-09-10T22:02:44Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/PluginHubPanel.java", "diffHunk": "@@ -87,8 +86,8 @@\n import net.runelite.client.util.ImageUtil;\n import net.runelite.client.util.LinkBrowser;\n import net.runelite.client.util.SwingUtil;\n-import net.runelite.client.util.Text;\n import net.runelite.client.util.VerificationException;\n+import static java.util.stream.Collectors.toList;", "originalCommit": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MDQ2NQ==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486660465", "bodyText": "These should be to methods on the PluginListItem/PHP.PluginItem and those classes made private again.\nIt would probably better for this to become an interface and make those classes implement it", "author": "abextm", "createdAt": "2020-09-10T22:07:45Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/SearchablePlugin.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import java.util.List;\n+import java.util.function.Supplier;\n+import lombok.Getter;\n+\n+public class SearchablePlugin<T>\n+{\n+\n+\tprivate final T plugin;\n+\t@Getter\n+\tprivate final String name;\n+\t@Getter\n+\tprivate final List<String> keywords;\n+\tprivate final Supplier<Boolean> isPinnedSupplier;\n+\n+\t@VisibleForTesting\n+\tSearchablePlugin(T plugin, String name, List<String> keywords, Supplier<Boolean> isPinnedSupplier)\n+\t{\n+\t\tthis.plugin = plugin;\n+\t\tthis.name = name;\n+\t\tthis.keywords = keywords;\n+\t\tthis.isPinnedSupplier = isPinnedSupplier;\n+\t}\n+\n+\tpublic static SearchablePlugin<PluginListItem> from(PluginListItem pluginListItem)", "originalCommit": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyODg2Ng==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r493028866", "bodyText": "Went for the interface in the end. One wart is that getName already exists on one of the implementers so I had to call the method getSearchableName, but it's still better than the original proposal", "author": "jrhodkinson", "createdAt": "2020-09-22T20:56:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MDQ2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MTY3Ng==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486661676", "bodyText": "the comparator should be cached in a final field. Most of these methods are single use and should be inlined (+ a comment if its not otherwise obvious what they do)", "author": "abextm", "createdAt": "2020-09-10T22:10:53Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/SearchablePluginComparator.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.commons.lang3.StringUtils;\n+import static java.util.Comparator.comparing;\n+import static java.util.Comparator.naturalOrder;\n+import static java.util.Comparator.nullsLast;\n+import static java.util.Comparator.reverseOrder;\n+\n+public class SearchablePluginComparator implements Comparator<SearchablePlugin<?>>\n+{\n+\n+\tprivate final String query;\n+\tprivate final List<String> queryPieces;\n+\n+\tpublic SearchablePluginComparator(String query)\n+\t{\n+\t\tthis.query = query.trim().toLowerCase();\n+\t\tthis.queryPieces = Arrays.asList(this.query.split(\" \"));\n+\t}\n+\n+\t@Override\n+\tpublic int compare(SearchablePlugin<?> plugin1, SearchablePlugin<?> plugin2)\n+\t{\n+\t\treturn comparator().compare(plugin1, plugin2);\n+\t}\n+\n+\tpublic Comparator<SearchablePlugin<?>> comparator()\n+\t{\n+\t\tif (StringUtils.isBlank(query))\n+\t\t{\n+\t\t\treturn nullsLast(isPinned()).thenComparing(name());\n+\t\t}\n+\t\treturn nullsLast(exactMatch())", "originalCommit": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MjQ5OA==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486662498", "bodyText": "maybe use a guava Splitter so you can filter empties", "author": "abextm", "createdAt": "2020-09-10T22:13:05Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/SearchablePluginComparator.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.commons.lang3.StringUtils;\n+import static java.util.Comparator.comparing;\n+import static java.util.Comparator.naturalOrder;\n+import static java.util.Comparator.nullsLast;\n+import static java.util.Comparator.reverseOrder;\n+\n+public class SearchablePluginComparator implements Comparator<SearchablePlugin<?>>\n+{\n+\n+\tprivate final String query;\n+\tprivate final List<String> queryPieces;\n+\n+\tpublic SearchablePluginComparator(String query)\n+\t{\n+\t\tthis.query = query.trim().toLowerCase();\n+\t\tthis.queryPieces = Arrays.asList(this.query.split(\" \"));", "originalCommit": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MjYwOQ==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486662609", "bodyText": "current year", "author": "abextm", "createdAt": "2020-09-10T22:13:25Z", "path": "runelite-client/src/test/java/net/runelite/client/plugins/config/PluginSearchTest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright (c) 2018, Jack Hodkinson <https://github.com/jrhodkinson>", "originalCommit": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2NDE2NA==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486664164", "bodyText": "this can probably just be a static method on the comparator", "author": "abextm", "createdAt": "2020-09-10T22:17:06Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/PluginSearch.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import net.runelite.client.util.Text;\n+import static java.util.stream.Collectors.toList;\n+\n+public class PluginSearch<T>\n+{\n+\n+\tprivate final List<SearchablePlugin<T>> searchablePlugins;\n+\n+\tpublic PluginSearch(List<SearchablePlugin<T>> searchablePlugins)\n+\t{\n+\t\tthis.searchablePlugins = new ArrayList<>(searchablePlugins);\n+\t}\n+\n+\tpublic List<T> query(String query)", "originalCommit": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyOTQ2Mw==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r493029463", "bodyText": "Decided to merge the old PluginSearch and PluginSearchComparator, making this a static method and making the comparator constructor private", "author": "jrhodkinson", "createdAt": "2020-09-22T20:58:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2NDE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2NDMxMw==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486664313", "bodyText": "why do you need a copy?", "author": "abextm", "createdAt": "2020-09-10T22:17:17Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/PluginSearch.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import net.runelite.client.util.Text;\n+import static java.util.stream.Collectors.toList;\n+\n+public class PluginSearch<T>\n+{\n+\n+\tprivate final List<SearchablePlugin<T>> searchablePlugins;\n+\n+\tpublic PluginSearch(List<SearchablePlugin<T>> searchablePlugins)\n+\t{\n+\t\tthis.searchablePlugins = new ArrayList<>(searchablePlugins);", "originalCommit": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2NTM0NQ==", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486665345", "bodyText": "don't static import", "author": "abextm", "createdAt": "2020-09-10T22:19:44Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/SearchablePluginComparator.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.commons.lang3.StringUtils;\n+import static java.util.Comparator.comparing;", "originalCommit": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9cc9e304cd97769152b2ef98fa7375f7712f5aaa", "url": "https://github.com/runelite/runelite/commit/9cc9e304cd97769152b2ef98fa7375f7712f5aaa", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins\n\n\u00a3Resolve PR comments", "committedDate": "2020-09-22T20:54:50Z", "type": "forcePushed"}, {"oid": "22144b8ca8a4b9d23865d4682d658e73627eeaab", "url": "https://github.com/runelite/runelite/commit/22144b8ca8a4b9d23865d4682d658e73627eeaab", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins", "committedDate": "2020-09-22T21:00:46Z", "type": "forcePushed"}, {"oid": "4d5090713aca16cd70335299c70deb914031cac1", "url": "https://github.com/runelite/runelite/commit/4d5090713aca16cd70335299c70deb914031cac1", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins", "committedDate": "2020-09-22T21:11:09Z", "type": "forcePushed"}, {"oid": "69f1dfad6ef6ae5ff0ac25f1444268e4dba182b0", "url": "https://github.com/runelite/runelite/commit/69f1dfad6ef6ae5ff0ac25f1444268e4dba182b0", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins", "committedDate": "2020-09-22T21:14:36Z", "type": "commit"}, {"oid": "69f1dfad6ef6ae5ff0ac25f1444268e4dba182b0", "url": "https://github.com/runelite/runelite/commit/69f1dfad6ef6ae5ff0ac25f1444268e4dba182b0", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins", "committedDate": "2020-09-22T21:14:36Z", "type": "forcePushed"}]}