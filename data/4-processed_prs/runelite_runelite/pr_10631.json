{"pr_number": 10631, "pr_title": "Shift-Click to Withdraw-All/Deposit-All", "pr_createdAt": "2020-01-22T00:31:46Z", "pr_url": "https://github.com/runelite/runelite/pull/10631", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzAwOA==", "url": "https://github.com/runelite/runelite/pull/10631#discussion_r371027008", "bodyText": "I think you 's/'d these comments somehow?", "author": "Adam-", "createdAt": "2020-01-26T20:26:12Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/menuentryswapper/MenuEntrySwapperPlugin.java", "diffHunk": "@@ -307,34 +307,52 @@ public void onMenuEntryAdded(MenuEntryAdded menuEntryAdded)\n \t\t// widget ticking and prior to our client tick event. This is because drag start\n \t\t// is what builds the context menu row which is what the eventual click will use\n \n-\t\t// Deposit- op 2 is the current withdraw amount 1/5/10/x\n-\t\tif (shiftModifier && menuEntryAdded.getType() == MenuAction.CC_OP.getId() && menuEntryAdded.getIdentifier() == 2\n-\t\t\t&& config.swapBankOp() && menuEntryAdded.getOption().startsWith(\"Deposit-\"))\n+\t\t// Swap to shift-click deposit behavior\n+\t\t// Deposit-/CC_OP/id 2 is the current withdraw amount 1/5/10/x", "originalCommit": "5c2dcf47583fc33c07f96a2f0f34ffb94a5b2387", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQ3Ng==", "url": "https://github.com/runelite/runelite/pull/10631#discussion_r371027476", "bodyText": "With @Getter is it not necessary to make your own", "author": "Adam-", "createdAt": "2020-01-26T20:34:32Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/menuentryswapper/ShiftDepositMode.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020, Zach <https://github.com/zacharydwaller>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.menuentryswapper;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import net.runelite.api.MenuAction;\n+\n+@Getter\n+@RequiredArgsConstructor\n+public enum ShiftDepositMode\n+{\n+\tDEPOSIT_1(\"Deposit-1\", MenuAction.CC_OP, 3),\n+\tDEPOSIT_5(\"Deposit-5\", MenuAction.CC_OP, 4),\n+\tDEPOSIT_10(\"Deposit-10\", MenuAction.CC_OP, 5),\n+\tDEPOSIT_X_CUSTOM(\"Deposit Custom X\", MenuAction.CC_OP_LOW_PRIORITY, 6),\n+\tDEPOSIT_X(\"Deposit-X\", MenuAction.CC_OP_LOW_PRIORITY, 7),\n+\tDEPOSIT_ALL(\"Deposit-All\", MenuAction.CC_OP_LOW_PRIORITY, 8),\n+\tEXTRA_OP(\"Eat/Wield/Etc.\", MenuAction.CC_OP_LOW_PRIORITY, 9),\n+\tOFF(\"Off\", MenuAction.UNKNOWN, 0);\n+\n+\tprivate final String name;\n+\tprivate final MenuAction menuAction;\n+\tprivate final int identifier;\n+\n+\t@Override\n+\tpublic String toString()\n+\t{\n+\t\treturn name;\n+\t}\n+\n+\tpublic MenuAction getMenuAction()", "originalCommit": "5c2dcf47583fc33c07f96a2f0f34ffb94a5b2387", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyODMxMw==", "url": "https://github.com/runelite/runelite/pull/10631#discussion_r371028313", "bodyText": "This is the setter for x right? This probably isn't useful and would confuse people more than anything.", "author": "Adam-", "createdAt": "2020-01-26T20:49:16Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/menuentryswapper/ShiftDepositMode.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020, Zach <https://github.com/zacharydwaller>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.menuentryswapper;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import net.runelite.api.MenuAction;\n+\n+@Getter\n+@RequiredArgsConstructor\n+public enum ShiftDepositMode\n+{\n+\tDEPOSIT_1(\"Deposit-1\", MenuAction.CC_OP, 3),\n+\tDEPOSIT_5(\"Deposit-5\", MenuAction.CC_OP, 4),\n+\tDEPOSIT_10(\"Deposit-10\", MenuAction.CC_OP, 5),\n+\tDEPOSIT_X_CUSTOM(\"Deposit Custom X\", MenuAction.CC_OP_LOW_PRIORITY, 6),\n+\tDEPOSIT_X(\"Deposit-X\", MenuAction.CC_OP_LOW_PRIORITY, 7),", "originalCommit": "5c2dcf47583fc33c07f96a2f0f34ffb94a5b2387", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzMTcyNw==", "url": "https://github.com/runelite/runelite/pull/10631#discussion_r371431727", "bodyText": "The original comment here is correct. Deposit op 2 is the current withdraw amount. We just have the op called \"identifier\". The \"op\" also implies CC_OP.", "author": "Adam-", "createdAt": "2020-01-27T19:18:50Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/menuentryswapper/MenuEntrySwapperPlugin.java", "diffHunk": "@@ -307,34 +307,52 @@ public void onMenuEntryAdded(MenuEntryAdded menuEntryAdded)\n \t\t// widget ticking and prior to our client tick event. This is because drag start\n \t\t// is what builds the context menu row which is what the eventual click will use\n \n-\t\t// Deposit- op 2 is the current withdraw amount 1/5/10/x\n-\t\tif (shiftModifier && menuEntryAdded.getType() == MenuAction.CC_OP.getId() && menuEntryAdded.getIdentifier() == 2\n-\t\t\t&& config.swapBankOp() && menuEntryAdded.getOption().startsWith(\"Deposit-\"))\n+\t\t// Swap to shift-click deposit behavior\n+\t\t// Deposit-, CC_OP, and id 2 is the current withdraw amount 1/5/10/x", "originalCommit": "999f1be2c9a7f3386a2fd77a71d9527ac400e3bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0MjAyNA==", "url": "https://github.com/runelite/runelite/pull/10631#discussion_r371442024", "bodyText": "You only need @Getter on the enum", "author": "raiyni", "createdAt": "2020-01-27T19:39:00Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/menuentryswapper/ShiftDepositMode.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2020, Zach <https://github.com/zacharydwaller>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.menuentryswapper;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import net.runelite.api.MenuAction;\n+\n+@Getter\n+@RequiredArgsConstructor\n+public enum ShiftDepositMode\n+{\n+\tDEPOSIT_1(\"Deposit-1\", MenuAction.CC_OP, 3),\n+\tDEPOSIT_5(\"Deposit-5\", MenuAction.CC_OP, 4),\n+\tDEPOSIT_10(\"Deposit-10\", MenuAction.CC_OP, 5),\n+\tDEPOSIT_X_CUSTOM(\"Deposit Custom X\", MenuAction.CC_OP_LOW_PRIORITY, 6),\n+\tDEPOSIT_ALL(\"Deposit-All\", MenuAction.CC_OP_LOW_PRIORITY, 8),\n+\tEXTRA_OP(\"Eat/Wield/Etc.\", MenuAction.CC_OP_LOW_PRIORITY, 9),\n+\tOFF(\"Off\", MenuAction.UNKNOWN, 0);\n+\n+\tprivate final String name;\n+\n+\t@Getter", "originalCommit": "62f0bf58a03e162f18257ccbace90d7b50b51f34", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "79960890f3d2ca7ce39d39a8383104d4dec1d472", "url": "https://github.com/runelite/runelite/commit/79960890f3d2ca7ce39d39a8383104d4dec1d472", "message": "menu swapper: add bank deposit/withdraw shift click\n\nCo-authored-by: Adam <Adam@sigterm.info>", "committedDate": "2020-01-27T20:36:14Z", "type": "forcePushed"}, {"oid": "0e15cfb5f606d7c436a66da113e100ae5f86cf7c", "url": "https://github.com/runelite/runelite/commit/0e15cfb5f606d7c436a66da113e100ae5f86cf7c", "message": "menu swapper: add bank deposit/withdraw shift click\n\nCo-authored-by: Adam <Adam@sigterm.info>", "committedDate": "2020-01-27T23:34:32Z", "type": "forcePushed"}, {"oid": "33380f7ddea2596fac5bfec0fc3c38cc25b37a02", "url": "https://github.com/runelite/runelite/commit/33380f7ddea2596fac5bfec0fc3c38cc25b37a02", "message": "menu swapper: add bank deposit/withdraw shift click\n\nCo-authored-by: Adam <Adam@sigterm.info>", "committedDate": "2020-01-28T00:40:54Z", "type": "commit"}, {"oid": "33380f7ddea2596fac5bfec0fc3c38cc25b37a02", "url": "https://github.com/runelite/runelite/commit/33380f7ddea2596fac5bfec0fc3c38cc25b37a02", "message": "menu swapper: add bank deposit/withdraw shift click\n\nCo-authored-by: Adam <Adam@sigterm.info>", "committedDate": "2020-01-28T00:40:54Z", "type": "forcePushed"}]}