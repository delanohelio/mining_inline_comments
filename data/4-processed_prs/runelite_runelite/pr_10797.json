{"pr_number": 10797, "pr_title": "client: add sessionfile and config arguments", "pr_createdAt": "2020-02-14T17:33:10Z", "pr_url": "https://github.com/runelite/runelite/pull/10797", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzOTg3Mg==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r379939872", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tparser.accepts(\"sessionfile\", \"Use a specified session file\").withRequiredArg();\n          \n          \n            \n            \t\tArgumentAcceptingOptionSpec<String>  sessionFileOp = parser.accepts(\"sessionfile\", \"Use a specified session file\")\n          \n          \n            \n            \t\t.withRequiredArg()\n          \n          \n            \n            \t\t.defaultsTo(\"session\");\n          \n      \n    \n    \n  \n\nthen use you can just do\nString sessionFile = options.valueOf(sessionFileOp)", "author": "abextm", "createdAt": "2020-02-16T22:38:36Z", "path": "runelite-client/src/main/java/net/runelite/client/RuneLite.java", "diffHunk": "@@ -172,6 +178,8 @@ public static void main(String[] args) throws Exception\n \t\tfinal OptionParser parser = new OptionParser();\n \t\tparser.accepts(\"developer-mode\", \"Enable developer tools\");\n \t\tparser.accepts(\"debug\", \"Show extra debugging output\");\n+\t\tparser.accepts(\"sessionfile\", \"Use a specified session file\").withRequiredArg();", "originalCommit": "7442ec301bcf7a5939216781ef2cfbabbfbec326", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzOTk1Ng==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r379939956", "bodyText": "also imo these should be Files", "author": "abextm", "createdAt": "2020-02-16T22:40:14Z", "path": "runelite-client/src/main/java/net/runelite/client/RuneLiteModule.java", "diffHunk": "@@ -61,17 +61,23 @@\n \n \tprivate final Supplier<Applet> clientLoader;\n \tprivate final boolean developerMode;\n+\tprivate final String sessionfile;", "originalCommit": "7442ec301bcf7a5939216781ef2cfbabbfbec326", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2MDc3Ng==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r379960776", "bodyText": "Maybe I was doing something wrong but bindConstant did not like Files", "author": "Trevor159", "createdAt": "2020-02-17T02:14:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzOTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEyNDg4MA==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r380124880", "bodyText": "Yeah because File is not constant", "author": "deathbeam", "createdAt": "2020-02-17T11:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzOTk1Ng=="}], "type": "inlineReview"}, {"oid": "c0e973fe2de3d839f7a55369e696863e9e42e501", "url": "https://github.com/runelite/runelite/commit/c0e973fe2de3d839f7a55369e696863e9e42e501", "message": "client: add sessionfile and config arguments", "committedDate": "2020-02-17T02:07:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEyNjA2MQ==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r380126061", "bodyText": "What if someone is doing ./my-session-file what is relative path and completely valid use-case? Pretty sure then this check will be incorrect", "author": "deathbeam", "createdAt": "2020-02-17T11:22:28Z", "path": "runelite-client/src/main/java/net/runelite/client/account/SessionManager.java", "diffHunk": "@@ -52,35 +55,49 @@\n @Slf4j\n public class SessionManager\n {\n-\tprivate static final File SESSION_FILE = new File(RuneLite.RUNELITE_DIR, \"session\");\n-\n \t@Getter\n \tprivate AccountSession accountSession;\n \n \tprivate final EventBus eventBus;\n \tprivate final ConfigManager configManager;\n \tprivate final WSClient wsClient;\n+\tprivate final File sessionFile;\n \n \t@Inject\n-\tprivate SessionManager(ConfigManager configManager, EventBus eventBus, WSClient wsClient)\n+\tprivate SessionManager(\n+\t\t@Named(\"sessionfile\") String sessionfile,\n+\t\tConfigManager configManager,\n+\t\tEventBus eventBus,\n+\t\tWSClient wsClient)\n \t{\n \t\tthis.configManager = configManager;\n \t\tthis.eventBus = eventBus;\n \t\tthis.wsClient = wsClient;\n+\n+\t\tPath path = Paths.get(sessionfile);\n+\t\tif (path.isAbsolute())", "originalCommit": "c0e973fe2de3d839f7a55369e696863e9e42e501", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d93cdac37479c85e2e391c27655c414356e5e61f", "url": "https://github.com/runelite/runelite/commit/d93cdac37479c85e2e391c27655c414356e5e61f", "message": "client: add sessionfile and config arguments", "committedDate": "2020-02-23T21:25:39Z", "type": "forcePushed"}, {"oid": "bfb78aee8ce3251ff0ad1a499cc81bae5a512093", "url": "https://github.com/runelite/runelite/commit/bfb78aee8ce3251ff0ad1a499cc81bae5a512093", "message": "client: add sessionfile and config arguments", "committedDate": "2020-03-02T00:23:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU0NTkzMA==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r386545930", "bodyText": "Did you try ofType(File.class);? Does that work?", "author": "Adam-", "createdAt": "2020-03-02T17:44:19Z", "path": "runelite-client/src/main/java/net/runelite/client/RuneLite.java", "diffHunk": "@@ -172,6 +176,10 @@ public static void main(String[] args) throws Exception\n \t\tfinal OptionParser parser = new OptionParser();\n \t\tparser.accepts(\"developer-mode\", \"Enable developer tools\");\n \t\tparser.accepts(\"debug\", \"Show extra debugging output\");\n+\t\tparser.accepts(\"sessionfile\", \"Use a specified session file\")\n+\t\t\t.withRequiredArg().defaultsTo(DEFAULT_SESSION_FILE);\n+\t\tparser.accepts(\"config\", \"Use a specified config file\")", "originalCommit": "bfb78aee8ce3251ff0ad1a499cc81bae5a512093", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcwNzc5Mg==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r386707792", "bodyText": "I wanted the input as a string so I can change the directory to the RL directory. The most common usecase will be args in the launcher with users that will not understand that the file is going into the cwd. My current implementation also lets users use the cwd or an absolute path if they want.", "author": "Trevor159", "createdAt": "2020-03-02T23:12:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU0NTkzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0MjAwMw==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r386742003", "bodyText": "You can just store this as local variable so you can get File from it without casting (see updateMode)", "author": "deathbeam", "createdAt": "2020-03-03T00:59:31Z", "path": "runelite-client/src/main/java/net/runelite/client/RuneLite.java", "diffHunk": "@@ -177,9 +178,11 @@ public static void main(String[] args) throws Exception\n \t\tparser.accepts(\"developer-mode\", \"Enable developer tools\");\n \t\tparser.accepts(\"debug\", \"Show extra debugging output\");\n \t\tparser.accepts(\"sessionfile\", \"Use a specified session file\")", "originalCommit": "324f4be3d948f50af5fcc35d946a2a95ff1d254e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0MjIwNA==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r386742204", "bodyText": "I dont think you need to actually override this and valuePattern", "author": "deathbeam", "createdAt": "2020-03-03T01:00:18Z", "path": "runelite-client/src/main/java/net/runelite/client/RuneLite.java", "diffHunk": "@@ -358,6 +374,37 @@ public void shutdown()\n \t\tdiscordService.close();\n \t}\n \n+\tprivate static class FileConverter implements ValueConverter<File>\n+\t{\n+\t\t@Override\n+\t\tpublic File convert(String fileName)\n+\t\t{\n+\t\t\tPath path = Paths.get(fileName);\n+\t\t\tif (path.isAbsolute()\n+\t\t\t\t|| fileName.startsWith(\"./\")\n+\t\t\t\t|| fileName.startsWith(\".\\\\\"))\n+\t\t\t{\n+\t\t\t\treturn new File(fileName);\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\treturn new File(RuneLite.RUNELITE_DIR, fileName);\n+\t\t\t}\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic Class<? extends File> valueType()", "originalCommit": "324f4be3d948f50af5fcc35d946a2a95ff1d254e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4NDExNQ==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387084115", "bodyText": "By not overriding it I meant those methods should not need to be there", "author": "deathbeam", "createdAt": "2020-03-03T15:09:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0MjIwNA=="}], "type": "inlineReview"}, {"oid": "aa6b88e23d7f00e8134cfdcfc451980a4e52e189", "url": "https://github.com/runelite/runelite/commit/aa6b88e23d7f00e8134cfdcfc451980a4e52e189", "message": "Cleanup + add some validation\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-03-03T20:04:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2NjIxNg==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387266216", "bodyText": "Should the file have to exist? With the current config/session implementation it will generate the file if it does not exist.", "author": "Trevor159", "createdAt": "2020-03-03T20:11:30Z", "path": "runelite-client/src/main/java/net/runelite/client/util/JoptFileConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * Copyright (c) 2020, Tomas Slusny <slusnucky@gmail.com>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.util;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import joptsimple.ValueConversionException;\n+import joptsimple.ValueConverter;\n+import net.runelite.client.RuneLite;\n+\n+public class JoptFileConverter implements ValueConverter<File>\n+{\n+\t@Override\n+\tpublic File convert(String fileName)\n+\t{\n+\t\tfinal File file;\n+\n+\t\tif (Paths.get(fileName).isAbsolute()\n+\t\t\t|| fileName.startsWith(\"./\")\n+\t\t\t|| fileName.startsWith(\".\\\\\"))\n+\t\t{\n+\t\t\tfile = new File(fileName);\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tfile = new File(RuneLite.RUNELITE_DIR, fileName);\n+\t\t}\n+\n+\t\tfinal Path path = Paths.get(file.getAbsolutePath());\n+\n+\t\tif (!Files.exists(path) || !Files.isRegularFile(path) || !Files.isWritable(path)) {", "originalCommit": "aa6b88e23d7f00e8134cfdcfc451980a4e52e189", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2ODM2MA==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387268360", "bodyText": "Oh, right. Yeah i guess, I will change the check", "author": "deathbeam", "createdAt": "2020-03-03T20:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2NjIxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2ODY0MQ==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387268641", "bodyText": "This should have a name that describes what it is doing", "author": "abextm", "createdAt": "2020-03-03T20:15:59Z", "path": "runelite-client/src/main/java/net/runelite/client/util/JoptFileConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * Copyright (c) 2020, Tomas Slusny <slusnucky@gmail.com>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.util;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import joptsimple.ValueConversionException;\n+import joptsimple.ValueConverter;\n+import net.runelite.client.RuneLite;\n+\n+public class JoptFileConverter implements ValueConverter<File>", "originalCommit": "aa6b88e23d7f00e8134cfdcfc451980a4e52e189", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "55d5cb6bce086a1078edc8c373acd127dd73ec8f", "url": "https://github.com/runelite/runelite/commit/55d5cb6bce086a1078edc8c373acd127dd73ec8f", "message": "Cleanup + add some validation\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-03-03T20:17:35Z", "type": "forcePushed"}, {"oid": "a1c3b16de711389fce1b3d9d043b05b0f8e3d3df", "url": "https://github.com/runelite/runelite/commit/a1c3b16de711389fce1b3d9d043b05b0f8e3d3df", "message": "Cleanup + add some validation\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-03-03T20:18:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MDQwMQ==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387270401", "bodyText": "thats even worse", "author": "abextm", "createdAt": "2020-03-03T20:19:28Z", "path": "runelite-client/src/main/java/net/runelite/client/util/JoptValueToFileConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * Copyright (c) 2020, Tomas Slusny <slusnucky@gmail.com>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.util;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import joptsimple.ValueConversionException;\n+import joptsimple.ValueConverter;\n+import net.runelite.client.RuneLite;\n+\n+public class JoptValueToFileConverter implements ValueConverter<File>", "originalCommit": "a1c3b16de711389fce1b3d9d043b05b0f8e3d3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MDc1MQ==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387270751", "bodyText": "Well its literally what it is doing", "author": "deathbeam", "createdAt": "2020-03-03T20:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MDQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MTI1Nw==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387271257", "bodyText": "The classname should tell my why its not JOptSimple's FileConverter", "author": "abextm", "createdAt": "2020-03-03T20:21:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MDQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MjE3NA==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387272174", "bodyText": "Hmm? jopt does not have FileConverter", "author": "deathbeam", "createdAt": "2020-03-03T20:23:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MDQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MjY3Mg==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387272672", "bodyText": "It creates a ValueConverter<File> internally, which is what I was referencing, which is different than this. Also don't prefix it with Jopt", "author": "abextm", "createdAt": "2020-03-03T20:24:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MDQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3NDM1OQ==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387274359", "bodyText": "Its not prefix its simply converting jopt value to file. If you have any ideas for name instead of just not liking current name then that would be a bit more helpful :d", "author": "deathbeam", "createdAt": "2020-03-03T20:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MDQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3NjM1OA==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387276358", "bodyText": "it should probably be ConfigFileConverter or something and be private to n.r.c.RuneLite since nothing else has a use for it", "author": "abextm", "createdAt": "2020-03-03T20:31:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MDQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3NzQ2Nw==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387277467", "bodyText": "Alright updated", "author": "deathbeam", "createdAt": "2020-03-03T20:34:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MDQwMQ=="}], "type": "inlineReview"}, {"oid": "1bf55feb359eef78f04572ace2c1f39e37d2f9a1", "url": "https://github.com/runelite/runelite/commit/1bf55feb359eef78f04572ace2c1f39e37d2f9a1", "message": "Cleanup + add some validation\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-03-03T20:33:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4MTE2Nw==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387281167", "bodyText": "Why do we convert to nio just for this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (Files.exists(path) && (!Files.isRegularFile(path) || !Files.isWritable(path)))\n          \n          \n            \n            \t\t\tif (file.exists() && (!file.isFile() || !file.canWrite()))", "author": "abextm", "createdAt": "2020-03-03T20:41:50Z", "path": "runelite-client/src/main/java/net/runelite/client/RuneLite.java", "diffHunk": "@@ -373,38 +375,50 @@ public void shutdown()\n \t\tdiscordService.close();\n \t}\n \n-\tprivate static class FileConverter implements ValueConverter<File>\n+\t@VisibleForTesting\n+\tpublic static void setInjector(Injector injector)\n+\t{\n+\t\tRuneLite.injector = injector;\n+\t}\n+\n+\tprivate static class ConfigFileConverter implements ValueConverter<File>\n \t{\n \t\t@Override\n \t\tpublic File convert(String fileName)\n \t\t{\n-\t\t\tPath path = Paths.get(fileName);\n-\t\t\tif (path.isAbsolute()\n+\t\t\tfinal File file;\n+\n+\t\t\tif (Paths.get(fileName).isAbsolute()\n \t\t\t\t|| fileName.startsWith(\"./\")\n \t\t\t\t|| fileName.startsWith(\".\\\\\"))\n \t\t\t{\n-\t\t\t\treturn new File(fileName);\n+\t\t\t\tfile = new File(fileName);\n \t\t\t}\n \t\t\telse\n \t\t\t{\n-\t\t\t\treturn new File(RuneLite.RUNELITE_DIR, fileName);\n+\t\t\t\tfile = new File(RuneLite.RUNELITE_DIR, fileName);\n \t\t\t}\n+\n+\t\t\tfinal Path path = Paths.get(file.getAbsolutePath());\n+\n+\t\t\tif (Files.exists(path) && (!Files.isRegularFile(path) || !Files.isWritable(path)))", "originalCommit": "1bf55feb359eef78f04572ace2c1f39e37d2f9a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4MjEwOQ==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r387282109", "bodyText": "Because I was trying file.isWrite and it wasnt there, lol. Updated", "author": "deathbeam", "createdAt": "2020-03-03T20:43:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4MTE2Nw=="}], "type": "inlineReview"}, {"oid": "d5eeffc4c3c5edc96414516aa64fd85ccf41df62", "url": "https://github.com/runelite/runelite/commit/d5eeffc4c3c5edc96414516aa64fd85ccf41df62", "message": "Cleanup + add some validation\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-03-03T20:43:21Z", "type": "forcePushed"}, {"oid": "701a4748c4e8faa1c182fb089fbddd9769d92083", "url": "https://github.com/runelite/runelite/commit/701a4748c4e8faa1c182fb089fbddd9769d92083", "message": "client: add sessionfile and config arguments", "committedDate": "2020-03-03T21:12:19Z", "type": "commit"}, {"oid": "c6dbda55e4bf3f961d1da7174c4f7bcf4df627e4", "url": "https://github.com/runelite/runelite/commit/c6dbda55e4bf3f961d1da7174c4f7bcf4df627e4", "message": "test withValuesConvertedBy", "committedDate": "2020-03-03T21:12:19Z", "type": "commit"}, {"oid": "e1910861e64e9937dc68e85ad62419da7a6767cd", "url": "https://github.com/runelite/runelite/commit/e1910861e64e9937dc68e85ad62419da7a6767cd", "message": "feedback", "committedDate": "2020-03-03T21:12:19Z", "type": "commit"}, {"oid": "6ca0e573e5f3c15b5815b54091facf5a2f9f2f25", "url": "https://github.com/runelite/runelite/commit/6ca0e573e5f3c15b5815b54091facf5a2f9f2f25", "message": "Cleanup + add some validation\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-03-03T21:12:19Z", "type": "commit"}, {"oid": "f5a2a5ef0d4d62f8e16fcd3ed31e5895ae965b0b", "url": "https://github.com/runelite/runelite/commit/f5a2a5ef0d4d62f8e16fcd3ed31e5895ae965b0b", "message": "use immediate deps for tests", "committedDate": "2020-03-03T21:12:19Z", "type": "forcePushed"}, {"oid": "76174f72580376e9e628ca30f3edd6a7d42839dd", "url": "https://github.com/runelite/runelite/commit/76174f72580376e9e628ca30f3edd6a7d42839dd", "message": "use immediate deps for tests", "committedDate": "2020-03-03T21:15:43Z", "type": "forcePushed"}, {"oid": "72f95aedb1bb90b6f0a5435c5564da572cb2c1f9", "url": "https://github.com/runelite/runelite/commit/72f95aedb1bb90b6f0a5435c5564da572cb2c1f9", "message": "use immediate deps for tests", "committedDate": "2020-03-03T21:21:45Z", "type": "commit"}, {"oid": "72f95aedb1bb90b6f0a5435c5564da572cb2c1f9", "url": "https://github.com/runelite/runelite/commit/72f95aedb1bb90b6f0a5435c5564da572cb2c1f9", "message": "use immediate deps for tests", "committedDate": "2020-03-03T21:21:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAxMzk0Ng==", "url": "https://github.com/runelite/runelite/pull/10797#discussion_r389013946", "bodyText": "This is probably not less-correct than before, but I think the config writing code still has races since it does an open+truncate and then lock. So, I think it could truncate a file while another RL is holding a lock and writing to it.", "author": "Adam-", "createdAt": "2020-03-06T16:43:11Z", "path": "runelite-client/src/main/java/net/runelite/client/config/ConfigManager.java", "diffHunk": "@@ -331,7 +335,7 @@ private void saveToFile(final File propertiesFile) throws IOException\n \n \t\tparent.mkdirs();\n \n-\t\tFile tempFile = new File(parent, SETTINGS_FILE_NAME + \".tmp\");\n+\t\tFile tempFile = new File(parent, RuneLite.DEFAULT_CONFIG_FILE + \".tmp\");", "originalCommit": "72f95aedb1bb90b6f0a5435c5564da572cb2c1f9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}