{"pr_number": 12399, "pr_title": "DevTools: Add Movement Flags DevTools Plugin.", "pr_createdAt": "2020-08-26T18:33:30Z", "pr_url": "https://github.com/runelite/runelite/pull/12399", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2OTkwMw==", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477569903", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\ttoolTipManager.add(new Tooltip(\"No flags\"));\n          \n          \n            \n            \t\t\t\t\ttoolTipManager.add(new Tooltip(\"No movement flags\"));", "author": "Nightfirecat", "createdAt": "2020-08-26T20:28:54Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/DevToolsOverlay.java", "diffHunk": "@@ -249,6 +255,34 @@ private void renderTileTooltip(Graphics2D graphics, Tile tile)\n \t\t}\n \t}\n \n+\tprivate void renderMovementInfo(Graphics2D graphics, Tile tile)\n+\t{\n+\t\tPolygon poly = Perspective.getCanvasTilePoly(client, tile.getLocalLocation());\n+\n+\t\tif (poly != null && poly.contains(client.getMouseCanvasPosition().getX(), client.getMouseCanvasPosition().getY()))\n+\t\t{\n+\t\t\t// We can only get CollisionMaps only for instanced regions.\n+\t\t\tif (client.isInInstancedRegion() && client.getCollisionMaps() != null)\n+\t\t\t{\n+\t\t\t\tint flags[][] = client.getCollisionMaps()[client.getPlane()].getFlags();\n+\t\t\t\tint data = flags[tile.getSceneLocation().getX()][tile.getSceneLocation().getY()];\n+\n+\t\t\t\tSet<MovementFlag> movementFlags = MovementFlag.getSetFlags(data);\n+\n+\t\t\t\tif (movementFlags.isEmpty())\n+\t\t\t\t{\n+\t\t\t\t\ttoolTipManager.add(new Tooltip(\"No flags\"));", "originalCommit": "89ac38b87023f76f712765e445c061607250d101", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MDY5Ng==", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477570696", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tint flag;\n          \n          \n            \n            \tprivate int flag;", "author": "Nightfirecat", "createdAt": "2020-08-26T20:30:24Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/MovementFlag.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Pratted <https://github.com/Pratted>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import net.runelite.api.CollisionDataFlag;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An enum that binds a name to each movement flag.\n+ *\n+ * @see CollisionDataFlag\n+ */\n+@AllArgsConstructor\n+public enum MovementFlag\n+{\n+\tBLOCK_MOVEMENT_NORTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_WEST),\n+\tBLOCK_MOVEMENT_NORTH(CollisionDataFlag.BLOCK_MOVEMENT_NORTH),\n+\tBLOCK_MOVEMENT_NORTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_EAST),\n+\tBLOCK_MOVEMENT_EAST(CollisionDataFlag.BLOCK_MOVEMENT_EAST),\n+\tBLOCK_MOVEMENT_SOUTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_EAST),\n+\tBLOCK_MOVEMENT_SOUTH(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH),\n+\tBLOCK_MOVEMENT_SOUTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_WEST),\n+\tBLOCK_MOVEMENT_WEST(CollisionDataFlag.BLOCK_MOVEMENT_WEST),\n+\n+\tBLOCK_MOVEMENT_OBJECT(CollisionDataFlag.BLOCK_MOVEMENT_OBJECT),\n+\tBLOCK_MOVEMENT_FLOOR_DECORATION(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR_DECORATION),\n+\tBLOCK_MOVEMENT_FLOOR(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR),\n+\tBLOCK_MOVEMENT_FULL(CollisionDataFlag.BLOCK_MOVEMENT_FULL);\n+\n+\t@Getter\n+\tint flag;", "originalCommit": "89ac38b87023f76f712765e445c061607250d101", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MDg2NA==", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477570864", "bodyText": "Dedent these lines by one level.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t.filter(movementFlag -> (movementFlag.flag & collisionData) > 0)\n          \n          \n            \n            \t\t\t\t.collect(Collectors.toSet());\n          \n          \n            \n            \t\t\t.filter(movementFlag -> (movementFlag.flag & collisionData) > 0)\n          \n          \n            \n            \t\t\t.collect(Collectors.toSet());", "author": "Nightfirecat", "createdAt": "2020-08-26T20:30:44Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/MovementFlag.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Pratted <https://github.com/Pratted>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import net.runelite.api.CollisionDataFlag;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An enum that binds a name to each movement flag.\n+ *\n+ * @see CollisionDataFlag\n+ */\n+@AllArgsConstructor\n+public enum MovementFlag\n+{\n+\tBLOCK_MOVEMENT_NORTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_WEST),\n+\tBLOCK_MOVEMENT_NORTH(CollisionDataFlag.BLOCK_MOVEMENT_NORTH),\n+\tBLOCK_MOVEMENT_NORTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_EAST),\n+\tBLOCK_MOVEMENT_EAST(CollisionDataFlag.BLOCK_MOVEMENT_EAST),\n+\tBLOCK_MOVEMENT_SOUTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_EAST),\n+\tBLOCK_MOVEMENT_SOUTH(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH),\n+\tBLOCK_MOVEMENT_SOUTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_WEST),\n+\tBLOCK_MOVEMENT_WEST(CollisionDataFlag.BLOCK_MOVEMENT_WEST),\n+\n+\tBLOCK_MOVEMENT_OBJECT(CollisionDataFlag.BLOCK_MOVEMENT_OBJECT),\n+\tBLOCK_MOVEMENT_FLOOR_DECORATION(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR_DECORATION),\n+\tBLOCK_MOVEMENT_FLOOR(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR),\n+\tBLOCK_MOVEMENT_FULL(CollisionDataFlag.BLOCK_MOVEMENT_FULL);\n+\n+\t@Getter\n+\tint flag;\n+\n+\t/**\n+\t * @param collisionData The tile collision flags.\n+\t * @return The set of {@link MovementFlag}s that have been set.\n+\t */\n+\tpublic static Set<MovementFlag> getSetFlags(int collisionData)\n+\t{\n+\t\treturn Arrays.stream(values())\n+\t\t\t\t.filter(movementFlag -> (movementFlag.flag & collisionData) > 0)\n+\t\t\t\t.collect(Collectors.toSet());", "originalCommit": "89ac38b87023f76f712765e445c061607250d101", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MTM2MA==", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477571360", "bodyText": "I believe we have reversed this behavior, so this should be available in non-instanced areas now.", "author": "Nightfirecat", "createdAt": "2020-08-26T20:31:45Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/DevToolsOverlay.java", "diffHunk": "@@ -249,6 +255,34 @@ private void renderTileTooltip(Graphics2D graphics, Tile tile)\n \t\t}\n \t}\n \n+\tprivate void renderMovementInfo(Graphics2D graphics, Tile tile)\n+\t{\n+\t\tPolygon poly = Perspective.getCanvasTilePoly(client, tile.getLocalLocation());\n+\n+\t\tif (poly != null && poly.contains(client.getMouseCanvasPosition().getX(), client.getMouseCanvasPosition().getY()))\n+\t\t{\n+\t\t\t// We can only get CollisionMaps only for instanced regions.", "originalCommit": "89ac38b87023f76f712765e445c061607250d101", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU5NjM2Nw==", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477596367", "bodyText": "Ok. I removed the isInInstancedRegion() check below and tested it in a few non-instanced regions. It worked in all of the regions I tested so i'll keep that way.", "author": "Pratted", "createdAt": "2020-08-26T21:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MTM2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MjczOQ==", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477572739", "bodyText": "Use a guard clause instead of a large nested if statement.\neg.\nif (poly == null || !poly.contains(client.getMousePosition().getX(), client.getMousePosition().getY())\n{\n\treturn;\n}\n\n// continue method code here", "author": "Nightfirecat", "createdAt": "2020-08-26T20:34:30Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/DevToolsOverlay.java", "diffHunk": "@@ -249,6 +255,34 @@ private void renderTileTooltip(Graphics2D graphics, Tile tile)\n \t\t}\n \t}\n \n+\tprivate void renderMovementInfo(Graphics2D graphics, Tile tile)\n+\t{\n+\t\tPolygon poly = Perspective.getCanvasTilePoly(client, tile.getLocalLocation());\n+\n+\t\tif (poly != null && poly.contains(client.getMouseCanvasPosition().getX(), client.getMouseCanvasPosition().getY()))", "originalCommit": "89ac38b87023f76f712765e445c061607250d101", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MzU3MQ==", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477573571", "bodyText": "We prefer Type[][] varName over Type varName[][]", "author": "Nightfirecat", "createdAt": "2020-08-26T20:35:56Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/DevToolsOverlay.java", "diffHunk": "@@ -249,6 +255,34 @@ private void renderTileTooltip(Graphics2D graphics, Tile tile)\n \t\t}\n \t}\n \n+\tprivate void renderMovementInfo(Graphics2D graphics, Tile tile)\n+\t{\n+\t\tPolygon poly = Perspective.getCanvasTilePoly(client, tile.getLocalLocation());\n+\n+\t\tif (poly != null && poly.contains(client.getMouseCanvasPosition().getX(), client.getMouseCanvasPosition().getY()))\n+\t\t{\n+\t\t\t// We can only get CollisionMaps only for instanced regions.\n+\t\t\tif (client.isInInstancedRegion() && client.getCollisionMaps() != null)\n+\t\t\t{\n+\t\t\t\tint flags[][] = client.getCollisionMaps()[client.getPlane()].getFlags();", "originalCommit": "89ac38b87023f76f712765e445c061607250d101", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4abbed7f1d701ce7456609d3854f32180c6b7017", "url": "https://github.com/runelite/runelite/commit/4abbed7f1d701ce7456609d3854f32180c6b7017", "message": "Add MovementFlags devtools plugin.", "committedDate": "2020-08-26T21:22:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYyNDUxOA==", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477624518", "bodyText": "This should be package private\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public enum MovementFlag\n          \n          \n            \n            enum MovementFlag", "author": "Nightfirecat", "createdAt": "2020-08-26T22:29:09Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/MovementFlag.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Pratted <https://github.com/Pratted>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import net.runelite.api.CollisionDataFlag;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An enum that binds a name to each movement flag.\n+ *\n+ * @see CollisionDataFlag\n+ */\n+@AllArgsConstructor\n+public enum MovementFlag", "originalCommit": "4abbed7f1d701ce7456609d3854f32180c6b7017", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "abf636929062fb4b72382b7aefb942a003ffc307", "url": "https://github.com/runelite/runelite/commit/abf636929062fb4b72382b7aefb942a003ffc307", "message": "Add MovementFlags devtools plugin.", "committedDate": "2020-08-26T23:27:51Z", "type": "commit"}, {"oid": "abf636929062fb4b72382b7aefb942a003ffc307", "url": "https://github.com/runelite/runelite/commit/abf636929062fb4b72382b7aefb942a003ffc307", "message": "Add MovementFlags devtools plugin.", "committedDate": "2020-08-26T23:27:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5MjcyOA==", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r495592728", "bodyText": "This does work, but note if a flag was 0x80000000 it would not work due to ints in Java being signed. Normally you would use !=", "author": "Adam-", "createdAt": "2020-09-27T16:57:54Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/MovementFlag.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Pratted <https://github.com/Pratted>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import net.runelite.api.CollisionDataFlag;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An enum that binds a name to each movement flag.\n+ *\n+ * @see CollisionDataFlag\n+ */\n+@AllArgsConstructor\n+enum MovementFlag\n+{\n+\tBLOCK_MOVEMENT_NORTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_WEST),\n+\tBLOCK_MOVEMENT_NORTH(CollisionDataFlag.BLOCK_MOVEMENT_NORTH),\n+\tBLOCK_MOVEMENT_NORTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_EAST),\n+\tBLOCK_MOVEMENT_EAST(CollisionDataFlag.BLOCK_MOVEMENT_EAST),\n+\tBLOCK_MOVEMENT_SOUTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_EAST),\n+\tBLOCK_MOVEMENT_SOUTH(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH),\n+\tBLOCK_MOVEMENT_SOUTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_WEST),\n+\tBLOCK_MOVEMENT_WEST(CollisionDataFlag.BLOCK_MOVEMENT_WEST),\n+\n+\tBLOCK_MOVEMENT_OBJECT(CollisionDataFlag.BLOCK_MOVEMENT_OBJECT),\n+\tBLOCK_MOVEMENT_FLOOR_DECORATION(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR_DECORATION),\n+\tBLOCK_MOVEMENT_FLOOR(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR),\n+\tBLOCK_MOVEMENT_FULL(CollisionDataFlag.BLOCK_MOVEMENT_FULL);\n+\n+\t@Getter\n+\tprivate int flag;\n+\n+\t/**\n+\t * @param collisionData The tile collision flags.\n+\t * @return The set of {@link MovementFlag}s that have been set.\n+\t */\n+\tpublic static Set<MovementFlag> getSetFlags(int collisionData)\n+\t{\n+\t\treturn Arrays.stream(values())\n+\t\t\t.filter(movementFlag -> (movementFlag.flag & collisionData) > 0)", "originalCommit": "abf636929062fb4b72382b7aefb942a003ffc307", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "208369127bc86e869b0943104e7c6f7f5cf2e8bf", "url": "https://github.com/runelite/runelite/commit/208369127bc86e869b0943104e7c6f7f5cf2e8bf", "message": "Update MovementFlag.java", "committedDate": "2020-09-27T17:03:05Z", "type": "commit"}]}