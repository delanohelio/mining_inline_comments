{"pr_number": 2341, "pr_title": "HADOOP-17287. Support new Instance by non default constructor by ReflectionUtils", "pr_createdAt": "2020-09-26T15:58:46Z", "pr_url": "https://github.com/apache/hadoop/pull/2341", "timeline": [{"oid": "c892a6402e252558eb9023b4524f3ba5864ed179", "url": "https://github.com/apache/hadoop/commit/c892a6402e252558eb9023b4524f3ba5864ed179", "message": "HADOOP-17287. Support new Instance by non default constructor by ReflectionUtils", "committedDate": "2020-09-26T15:56:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODAxNw==", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495478017", "bodyText": "nit: argsType -> argTypes", "author": "sunchao", "createdAt": "2020-09-26T17:30:10Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argsType the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,\n+      Class<?>[] argsType, Object ... values) {", "originalCommit": "c892a6402e252558eb9023b4524f3ba5864ed179", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MzkyOQ==", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495583929", "bodyText": "Done", "author": "maobaolong", "createdAt": "2020-09-27T15:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODAxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODE1Mw==", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495478153", "bodyText": "Could you add a test in TestReflectionUtils?", "author": "sunchao", "createdAt": "2020-09-26T17:31:49Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argsType the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,", "originalCommit": "c892a6402e252558eb9023b4524f3ba5864ed179", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4MzkyMA==", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r495583920", "bodyText": "Done", "author": "maobaolong", "createdAt": "2020-09-27T15:25:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3ODE1Mw=="}], "type": "inlineReview"}, {"oid": "ec16bc59787aa5453dae9d0944bdc43373b2867d", "url": "https://github.com/apache/hadoop/commit/ec16bc59787aa5453dae9d0944bdc43373b2867d", "message": "Add a test for non default constructor", "committedDate": "2020-09-27T02:23:15Z", "type": "commit"}, {"oid": "ac1010a0eabac3426d6ed9d59327ecbf1f6411ed", "url": "https://github.com/apache/hadoop/commit/ac1010a0eabac3426d6ed9d59327ecbf1f6411ed", "message": "Address comment, fix nit", "committedDate": "2020-09-27T02:26:57Z", "type": "commit"}, {"oid": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e", "url": "https://github.com/apache/hadoop/commit/bd0e4455bae4a4caaf09751f0a1ebfa846092e8e", "message": "Update ReflectionUtils.java", "committedDate": "2020-09-27T02:28:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NTg4OA==", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r496095888", "bodyText": "One more thing we can do here is perhaps checking whether argTypes.length == values.length, and throw IllegalArgumentException like: \"1 parameters are required but 0 arguments are provided\". This will be more informative than the default exception message.", "author": "sunchao", "createdAt": "2020-09-28T16:53:32Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java", "diffHunk": "@@ -124,15 +124,29 @@ private static void setJobConf(Object theObject, Configuration conf) {\n    */\n   @SuppressWarnings(\"unchecked\")\n   public static <T> T newInstance(Class<T> theClass, Configuration conf) {\n+    return newInstance(theClass, conf, EMPTY_ARRAY);\n+  }\n+\n+  /** Create an object for the given class and initialize it from conf\n+   *\n+   * @param theClass class of which an object is created\n+   * @param conf Configuration\n+   * @param argTypes the types of the arguments\n+   * @param values the values of the arguments\n+   * @return a new object\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T newInstance(Class<T> theClass, Configuration conf,\n+      Class<?>[] argTypes, Object ... values) {", "originalCommit": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0ODcwMA==", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r497248700", "bodyText": "Good idea, done.", "author": "maobaolong", "createdAt": "2020-09-30T05:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NTg4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NjIwMg==", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r496096202", "bodyText": "I think Assert is not imported and compilation will fail. Also can we test the cases when number of parameter and argument doesn't match?", "author": "sunchao", "createdAt": "2020-09-28T16:54:07Z", "path": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestReflectionUtils.java", "diffHunk": "@@ -168,6 +168,13 @@ public void testLogThreadInfo() throws Exception {\n         containsString(\"Process Thread Dump: \" + title));\n   }\n \n+  @Test\n+  public void testNewInstanceForNonDefaultConstructor() {\n+    Object x = ReflectionUtils.newInstance(\n+        NoDefaultCtor.class, null, new Class[] {int.class}, 1);\n+    Assert.assertTrue(x instanceof NoDefaultCtor);", "originalCommit": "bd0e4455bae4a4caaf09751f0a1ebfa846092e8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0ODgwOA==", "url": "https://github.com/apache/hadoop/pull/2341#discussion_r497248808", "bodyText": "Thanks for check this for me, done", "author": "maobaolong", "createdAt": "2020-09-30T05:20:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NjIwMg=="}], "type": "inlineReview"}, {"oid": "f96ecf781c73dd71b9b52db5b7cf443cb2d2e78e", "url": "https://github.com/apache/hadoop/commit/f96ecf781c73dd71b9b52db5b7cf443cb2d2e78e", "message": "add argument length check, add a new test case.", "committedDate": "2020-09-30T05:18:37Z", "type": "commit"}]}