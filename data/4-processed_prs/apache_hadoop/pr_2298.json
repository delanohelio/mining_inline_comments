{"pr_number": 2298, "pr_title": "HDFS-15532: listFiles on root/InternalDir will fail if fallback root has file.", "pr_createdAt": "2020-09-11T03:00:40Z", "pr_url": "https://github.com/apache/hadoop/pull/2298", "timeline": [{"oid": "af0b261fee2d6148c23da8f4e1b02b3390779b3b", "url": "https://github.com/apache/hadoop/commit/af0b261fee2d6148c23da8f4e1b02b3390779b3b", "message": "HDFS-15532: listFiles on root/InternalDir will fail if fallback root has file", "committedDate": "2020-09-11T02:58:41Z", "type": "commit"}, {"oid": "cdd0932e33244d928c5e5682addc5146c064d6e7", "url": "https://github.com/apache/hadoop/commit/cdd0932e33244d928c5e5682addc5146c064d6e7", "message": "Fixed a checkstyle warning.", "committedDate": "2020-09-11T17:48:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM2ODUyMA==", "url": "https://github.com/apache/hadoop/pull/2298#discussion_r487368520", "bodyText": "(InodeTree.SlashPath.equals(fs.getPath()))\nIn which case this would be true? Provided there is a check in the if condition", "author": "ayushtkn", "createdAt": "2020-09-12T04:58:38Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java", "diffHunk": "@@ -1263,6 +1263,26 @@ public boolean delete(final Path f)\n     public BlockLocation[] getFileBlockLocations(final FileStatus fs,\n         final long start, final long len) throws\n         FileNotFoundException, IOException {\n+\n+      // When application calls listFiles on internalDir, it would return\n+      // RemoteIterator from InternalDirOfViewFs. If there is a fallBack, there\n+      // is a chance of files exists under that internalDir in fallback.\n+      // Iterator#next will call getFileBlockLocations with that files. So, we\n+      // should return getFileBlockLocations on fallback. See HDFS-15532.\n+      if (fs.getPath() != InodeTree.SlashPath && this.fsState\n+          .getRootFallbackLink() != null) {\n+        FileSystem linkedFallbackFs =\n+            this.fsState.getRootFallbackLink().getTargetFileSystem();\n+        Path parent = Path.getPathWithoutSchemeAndAuthority(\n+            new Path(theInternalDir.fullPath));\n+        String leafChild = (InodeTree.SlashPath.equals(fs.getPath())) ?\n+            InodeTree.SlashPath.toString() :\n+            fs.getPath().getName();", "originalCommit": "cdd0932e33244d928c5e5682addc5146c064d6e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM3NTY4Ng==", "url": "https://github.com/apache/hadoop/pull/2298#discussion_r487375686", "bodyText": "Thanks @ayushtkn for review! I have removed this redundant condition.\nI realized that, this bug exist in ViewFs as well. I fixed and added a test case for it. Thanks", "author": "umamaheswararao", "createdAt": "2020-09-12T06:26:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM2ODUyMA=="}], "type": "inlineReview"}, {"oid": "271b8b5efbe8a959d26129fd295d618909048fa0", "url": "https://github.com/apache/hadoop/commit/271b8b5efbe8a959d26129fd295d618909048fa0", "message": "Fixed a review comment and also fixed the issue for ViewFs flow as well", "committedDate": "2020-09-12T06:24:45Z", "type": "commit"}]}