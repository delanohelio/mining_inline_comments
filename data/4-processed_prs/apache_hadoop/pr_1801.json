{"pr_number": 1801, "pr_title": "HADOOP-16797. Add Dockerfile for ARM builds", "pr_createdAt": "2020-01-09T12:08:59Z", "pr_url": "https://github.com/apache/hadoop/pull/1801", "timeline": [{"oid": "994661cf6b099dcd367e5569a8c84a3b017c9a2d", "url": "https://github.com/apache/hadoop/commit/994661cf6b099dcd367e5569a8c84a3b017c9a2d", "message": "HADOOP-16797. Add Dockerfile for ARM builds", "committedDate": "2020-01-09T10:57:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg1NTUzOA==", "url": "https://github.com/apache/hadoop/pull/1801#discussion_r364855538", "bodyText": "Does the X86 one works for ARM too?", "author": "ayushtkn", "createdAt": "2020-01-09T17:01:30Z", "path": "dev-support/docker/Dockerfile_aarch64", "diffHunk": "@@ -0,0 +1,244 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# Dockerfile for installing the necessary dependencies for building Hadoop.\n+# See BUILDING.txt.\n+\n+FROM ubuntu:xenial\n+\n+WORKDIR /root\n+\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+#####\n+# Disable suggests/recommends\n+#####\n+RUN echo APT::Install-Recommends \"0\"\\; > /etc/apt/apt.conf.d/10disableextras\n+RUN echo APT::Install-Suggests \"0\"\\; >>  /etc/apt/apt.conf.d/10disableextras\n+\n+ENV DEBIAN_FRONTEND noninteractive\n+ENV DEBCONF_TERSE true\n+\n+######\n+# Install common dependencies from packages. Versions here are either\n+# sufficient or irrelevant.\n+#\n+# WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n+# Ubuntu Java.  See Java section below!\n+######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends \\\n+        apt-utils \\\n+        build-essential \\\n+        bzip2 \\\n+        clang \\\n+        curl \\\n+        doxygen \\\n+        fuse \\\n+        g++ \\\n+        gcc \\\n+        git \\\n+        gnupg-agent \\\n+        libbz2-dev \\\n+        libcurl4-openssl-dev \\\n+        libfuse-dev \\\n+        libprotobuf-dev \\\n+        libprotoc-dev \\\n+        libsasl2-dev \\\n+        libsnappy-dev \\\n+        libssl-dev \\\n+        libtool \\\n+        libzstd1-dev \\\n+        locales \\\n+        make \\\n+        pinentry-curses \\\n+        pkg-config \\\n+        python \\\n+        python2.7 \\\n+        python-pip \\\n+        python-pkg-resources \\\n+        python-setuptools \\\n+        python-wheel \\\n+        rsync \\\n+        software-properties-common \\\n+        snappy \\\n+        sudo \\\n+        valgrind \\\n+        zlib1g-dev \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+\n+#######\n+# OpenJDK 8\n+#######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends openjdk-8-jdk libbcprov-java \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+\n+######\n+# Install cmake 3.1.0 (3.5.1 ships with Xenial)\n+# There is no cmake binary available for aarch64. Build from source.\n+######\n+RUN mkdir -p /opt/cmake/src \\\n+    && curl -L -s -S \\\n+      https://cmake.org/files/v3.1/cmake-3.1.0-1-src.tar.bz2 \\\n+      -o /opt/cmake/cmake-src.tar.bz2 \\\n+    && tar xvjf /opt/cmake/cmake-src.tar.bz2 -C /opt/cmake/src \\\n+    && cd /opt/cmake/src \\\n+    && tar xvjf cmake-3.1.0.tar.bz2 \\\n+    && cd cmake-3.1.0 && patch -p0 -i ../cmake-3.1.0-1.patch && mkdir .build && cd .build \\\n+    && ../bootstrap --parallel=2 \\\n+    && make -j2 && ./bin/cpack \\\n+    && tar xzf cmake-3.1.0-Linux-aarch64.tar.gz --strip-components 1 -C /opt/cmake \\\n+    && cd /opt/cmake && rm -rf /opt/cmake/src\n+ENV CMAKE_HOME /opt/cmake\n+ENV PATH \"${PATH}:/opt/cmake/bin\"\n+\n+######\n+# Install Google Protobuf 3.7.1 (2.6.0 ships with Xenial)\n+######\n+# hadolint ignore=DL3003\n+RUN mkdir -p /opt/protobuf-src \\\n+    && curl -L -s -S \\\n+      https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/protobuf-java-3.7.1.tar.gz \\\n+      -o /opt/protobuf.tar.gz \\\n+    && tar xzf /opt/protobuf.tar.gz --strip-components 1 -C /opt/protobuf-src \\\n+    && cd /opt/protobuf-src \\\n+    && ./configure --prefix=/opt/protobuf \\\n+    && make install \\\n+    && cd /root \\\n+    && rm -rf /opt/protobuf-src\n+ENV PROTOBUF_HOME /opt/protobuf\n+ENV PATH \"${PATH}:/opt/protobuf/bin\"\n+\n+######\n+# Install Apache Maven 3.3.9 (3.3.9 ships with Xenial)\n+######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends maven \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+ENV MAVEN_HOME /usr\n+\n+######\n+# Install findbugs 3.0.1 (3.0.1 ships with Xenial)\n+# Ant is needed for findbugs\n+######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends findbugs ant \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+ENV FINDBUGS_HOME /usr\n+\n+####\n+# Install shellcheck (0.4.6, the latest as of 2017-09-26)\n+####\n+# hadolint ignore=DL3008\n+RUN add-apt-repository -y ppa:hvr/ghc \\\n+    && apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends shellcheck \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+####\n+# Install bats (0.4.0, the latest as of 2017-09-26, ships with Xenial)\n+####\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends bats \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+####\n+# Install pylint at fixed version (2.0.0 removed python2 support)\n+# https://github.com/PyCQA/pylint/issues/2294\n+####\n+RUN pip2 install pylint==1.9.2\n+\n+####\n+# Install dateutil.parser\n+####\n+RUN pip2 install python-dateutil==2.7.3\n+\n+###\n+# Install node.js 8.17.0 for web UI framework (4.2.6 ships with Xenial)\n+###\n+RUN curl -L -s -S https://deb.nodesource.com/setup_8.x | bash - \\\n+    && apt-get install -y --no-install-recommends nodejs=8.17.0-1nodesource1 \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/* \\\n+    && npm install -g bower@1.8.8\n+\n+###\n+## Install Yarn 1.12.1 for web UI framework\n+####\n+RUN curl -s -S https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n+    && echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list \\\n+    && apt-get -q update \\\n+    && apt-get install -y --no-install-recommends yarn=1.21.1-1 \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+###\n+# Install hadolint\n+####\n+#RUN curl -L -s -S \\\n+#        https://github.com/hadolint/hadolint/releases/download/v1.11.1/hadolint-Linux-x86_64 \\", "originalCommit": "994661cf6b099dcd367e5569a8c84a3b017c9a2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4NDcwNA==", "url": "https://github.com/apache/hadoop/pull/1801#discussion_r365084704", "bodyText": "These lines are copied from x86 docker file and since there was no alternative available for aarch64 just commented the line.\nThis will be required when precommit builds are configured to run on aarch64.\nSo these lines will be ingored while creating the image.", "author": "vinayakumarb", "createdAt": "2020-01-10T06:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg1NTUzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2MjEzMA==", "url": "https://github.com/apache/hadoop/pull/1801#discussion_r364862130", "bodyText": "Need not to mention ozone here.", "author": "ayushtkn", "createdAt": "2020-01-09T17:15:13Z", "path": "dev-support/docker/Dockerfile_aarch64", "diffHunk": "@@ -0,0 +1,244 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# Dockerfile for installing the necessary dependencies for building Hadoop.\n+# See BUILDING.txt.\n+\n+FROM ubuntu:xenial\n+\n+WORKDIR /root\n+\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+#####\n+# Disable suggests/recommends\n+#####\n+RUN echo APT::Install-Recommends \"0\"\\; > /etc/apt/apt.conf.d/10disableextras\n+RUN echo APT::Install-Suggests \"0\"\\; >>  /etc/apt/apt.conf.d/10disableextras\n+\n+ENV DEBIAN_FRONTEND noninteractive\n+ENV DEBCONF_TERSE true\n+\n+######\n+# Install common dependencies from packages. Versions here are either\n+# sufficient or irrelevant.\n+#\n+# WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n+# Ubuntu Java.  See Java section below!\n+######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends \\\n+        apt-utils \\\n+        build-essential \\\n+        bzip2 \\\n+        clang \\\n+        curl \\\n+        doxygen \\\n+        fuse \\\n+        g++ \\\n+        gcc \\\n+        git \\\n+        gnupg-agent \\\n+        libbz2-dev \\\n+        libcurl4-openssl-dev \\\n+        libfuse-dev \\\n+        libprotobuf-dev \\\n+        libprotoc-dev \\\n+        libsasl2-dev \\\n+        libsnappy-dev \\\n+        libssl-dev \\\n+        libtool \\\n+        libzstd1-dev \\\n+        locales \\\n+        make \\\n+        pinentry-curses \\\n+        pkg-config \\\n+        python \\\n+        python2.7 \\\n+        python-pip \\\n+        python-pkg-resources \\\n+        python-setuptools \\\n+        python-wheel \\\n+        rsync \\\n+        software-properties-common \\\n+        snappy \\\n+        sudo \\\n+        valgrind \\\n+        zlib1g-dev \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+\n+#######\n+# OpenJDK 8\n+#######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends openjdk-8-jdk libbcprov-java \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+\n+######\n+# Install cmake 3.1.0 (3.5.1 ships with Xenial)\n+# There is no cmake binary available for aarch64. Build from source.\n+######\n+RUN mkdir -p /opt/cmake/src \\\n+    && curl -L -s -S \\\n+      https://cmake.org/files/v3.1/cmake-3.1.0-1-src.tar.bz2 \\\n+      -o /opt/cmake/cmake-src.tar.bz2 \\\n+    && tar xvjf /opt/cmake/cmake-src.tar.bz2 -C /opt/cmake/src \\\n+    && cd /opt/cmake/src \\\n+    && tar xvjf cmake-3.1.0.tar.bz2 \\\n+    && cd cmake-3.1.0 && patch -p0 -i ../cmake-3.1.0-1.patch && mkdir .build && cd .build \\\n+    && ../bootstrap --parallel=2 \\\n+    && make -j2 && ./bin/cpack \\\n+    && tar xzf cmake-3.1.0-Linux-aarch64.tar.gz --strip-components 1 -C /opt/cmake \\\n+    && cd /opt/cmake && rm -rf /opt/cmake/src\n+ENV CMAKE_HOME /opt/cmake\n+ENV PATH \"${PATH}:/opt/cmake/bin\"\n+\n+######\n+# Install Google Protobuf 3.7.1 (2.6.0 ships with Xenial)\n+######\n+# hadolint ignore=DL3003\n+RUN mkdir -p /opt/protobuf-src \\\n+    && curl -L -s -S \\\n+      https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/protobuf-java-3.7.1.tar.gz \\\n+      -o /opt/protobuf.tar.gz \\\n+    && tar xzf /opt/protobuf.tar.gz --strip-components 1 -C /opt/protobuf-src \\\n+    && cd /opt/protobuf-src \\\n+    && ./configure --prefix=/opt/protobuf \\\n+    && make install \\\n+    && cd /root \\\n+    && rm -rf /opt/protobuf-src\n+ENV PROTOBUF_HOME /opt/protobuf\n+ENV PATH \"${PATH}:/opt/protobuf/bin\"\n+\n+######\n+# Install Apache Maven 3.3.9 (3.3.9 ships with Xenial)\n+######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends maven \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+ENV MAVEN_HOME /usr\n+\n+######\n+# Install findbugs 3.0.1 (3.0.1 ships with Xenial)\n+# Ant is needed for findbugs\n+######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends findbugs ant \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+ENV FINDBUGS_HOME /usr\n+\n+####\n+# Install shellcheck (0.4.6, the latest as of 2017-09-26)\n+####\n+# hadolint ignore=DL3008\n+RUN add-apt-repository -y ppa:hvr/ghc \\\n+    && apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends shellcheck \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+####\n+# Install bats (0.4.0, the latest as of 2017-09-26, ships with Xenial)\n+####\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends bats \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+####\n+# Install pylint at fixed version (2.0.0 removed python2 support)\n+# https://github.com/PyCQA/pylint/issues/2294\n+####\n+RUN pip2 install pylint==1.9.2\n+\n+####\n+# Install dateutil.parser\n+####\n+RUN pip2 install python-dateutil==2.7.3\n+\n+###\n+# Install node.js 8.17.0 for web UI framework (4.2.6 ships with Xenial)\n+###\n+RUN curl -L -s -S https://deb.nodesource.com/setup_8.x | bash - \\\n+    && apt-get install -y --no-install-recommends nodejs=8.17.0-1nodesource1 \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/* \\\n+    && npm install -g bower@1.8.8\n+\n+###\n+## Install Yarn 1.12.1 for web UI framework\n+####\n+RUN curl -s -S https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n+    && echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list \\\n+    && apt-get -q update \\\n+    && apt-get install -y --no-install-recommends yarn=1.21.1-1 \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+###\n+# Install hadolint\n+####\n+#RUN curl -L -s -S \\\n+#        https://github.com/hadolint/hadolint/releases/download/v1.11.1/hadolint-Linux-x86_64 \\\n+#        -o /bin/hadolint \\\n+#   && chmod a+rx /bin/hadolint \\\n+#   && shasum -a 512 /bin/hadolint | \\\n+#        awk '$1!=\"734e37c1f6619cbbd86b9b249e69c9af8ee1ea87a2b1ff71dccda412e9dac35e63425225a95d71572091a3f0a11e9a04c2fc25d9e91b840530c26af32b9891ca\" {exit(1)}'\n+\n+###\n+# Install phantomjs built for aarch64\n+####\n+RUN mkdir -p /opt/phantomjs \\\n+  && curl -L -s -S \\\n+    https://github.com/liusheng/phantomjs/releases/download/2.1.1/phantomjs-2.1.1-linux-aarch64.tar.bz2 \\\n+   -o /opt/phantomjs/phantomjs-2.1.1-linux-aarch64.tar.bz2 \\\n+  && tar xvjf /opt/phantomjs/phantomjs-2.1.1-linux-aarch64.tar.bz2 --strip-components 1 -C /opt/phantomjs \\\n+  && cp /opt/phantomjs/bin/phantomjs /usr/bin/ \\\n+  && rm -rf /opt/phantomjs\n+\n+###\n+# Avoid out of memory errors in builds\n+###\n+ENV MAVEN_OPTS -Xms256m -Xmx1536m\n+\n+###\n+# Everything past this point is either not needed for testing or breaks Yetus.\n+# So tell Yetus not to read the rest of the file:\n+# YETUS CUT HERE\n+###\n+\n+# Hugo static website generator (for new hadoop site and Ozone docs)", "originalCommit": "994661cf6b099dcd367e5569a8c84a3b017c9a2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4NTIzMA==", "url": "https://github.com/apache/hadoop/pull/1801#discussion_r365085230", "bodyText": "sure", "author": "vinayakumarb", "createdAt": "2020-01-10T06:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2MjEzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4Mzg5Mw==", "url": "https://github.com/apache/hadoop/pull/1801#discussion_r365083893", "bodyText": "Can we use cmake 3.5.1 that Xenial ships?", "author": "aajisaka", "createdAt": "2020-01-10T06:03:39Z", "path": "dev-support/docker/Dockerfile_aarch64", "diffHunk": "@@ -0,0 +1,244 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# Dockerfile for installing the necessary dependencies for building Hadoop.\n+# See BUILDING.txt.\n+\n+FROM ubuntu:xenial\n+\n+WORKDIR /root\n+\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+#####\n+# Disable suggests/recommends\n+#####\n+RUN echo APT::Install-Recommends \"0\"\\; > /etc/apt/apt.conf.d/10disableextras\n+RUN echo APT::Install-Suggests \"0\"\\; >>  /etc/apt/apt.conf.d/10disableextras\n+\n+ENV DEBIAN_FRONTEND noninteractive\n+ENV DEBCONF_TERSE true\n+\n+######\n+# Install common dependencies from packages. Versions here are either\n+# sufficient or irrelevant.\n+#\n+# WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n+# Ubuntu Java.  See Java section below!\n+######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends \\\n+        apt-utils \\\n+        build-essential \\\n+        bzip2 \\\n+        clang \\\n+        curl \\\n+        doxygen \\\n+        fuse \\\n+        g++ \\\n+        gcc \\\n+        git \\\n+        gnupg-agent \\\n+        libbz2-dev \\\n+        libcurl4-openssl-dev \\\n+        libfuse-dev \\\n+        libprotobuf-dev \\\n+        libprotoc-dev \\\n+        libsasl2-dev \\\n+        libsnappy-dev \\\n+        libssl-dev \\\n+        libtool \\\n+        libzstd1-dev \\\n+        locales \\\n+        make \\\n+        pinentry-curses \\\n+        pkg-config \\\n+        python \\\n+        python2.7 \\\n+        python-pip \\\n+        python-pkg-resources \\\n+        python-setuptools \\\n+        python-wheel \\\n+        rsync \\\n+        software-properties-common \\\n+        snappy \\\n+        sudo \\\n+        valgrind \\\n+        zlib1g-dev \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+\n+#######\n+# OpenJDK 8\n+#######\n+# hadolint ignore=DL3008\n+RUN apt-get -q update \\\n+    && apt-get -q install -y --no-install-recommends openjdk-8-jdk libbcprov-java \\\n+    && apt-get clean \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+\n+######\n+# Install cmake 3.1.0 (3.5.1 ships with Xenial)\n+# There is no cmake binary available for aarch64. Build from source.\n+######\n+RUN mkdir -p /opt/cmake/src \\\n+    && curl -L -s -S \\\n+      https://cmake.org/files/v3.1/cmake-3.1.0-1-src.tar.bz2 \\\n+      -o /opt/cmake/cmake-src.tar.bz2 \\\n+    && tar xvjf /opt/cmake/cmake-src.tar.bz2 -C /opt/cmake/src \\\n+    && cd /opt/cmake/src \\\n+    && tar xvjf cmake-3.1.0.tar.bz2 \\\n+    && cd cmake-3.1.0 && patch -p0 -i ../cmake-3.1.0-1.patch && mkdir .build && cd .build \\\n+    && ../bootstrap --parallel=2 \\\n+    && make -j2 && ./bin/cpack \\\n+    && tar xzf cmake-3.1.0-Linux-aarch64.tar.gz --strip-components 1 -C /opt/cmake \\\n+    && cd /opt/cmake && rm -rf /opt/cmake/src\n+ENV CMAKE_HOME /opt/cmake\n+ENV PATH \"${PATH}:/opt/cmake/bin\"\n+", "originalCommit": "994661cf6b099dcd367e5569a8c84a3b017c9a2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4NTYyNw==", "url": "https://github.com/apache/hadoop/pull/1801#discussion_r365085627", "bodyText": "I am not sure about it. I will give a check.\nx86 docker also uses 3.1.0 CMake itself.\nCould be fixed in both places in a separate jira?", "author": "vinayakumarb", "createdAt": "2020-01-10T06:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4Mzg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTEwNDEzMA==", "url": "https://github.com/apache/hadoop/pull/1801#discussion_r365104130", "bodyText": "Could be fixed in both places in a separate jira?\n\nYes, it could be fixed in a separate jira. Thanks.", "author": "aajisaka", "createdAt": "2020-01-10T07:38:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA4Mzg5Mw=="}], "type": "inlineReview"}, {"oid": "1e20e9c1c35511034caf91abdf7f47a93bfba90c", "url": "https://github.com/apache/hadoop/commit/1e20e9c1c35511034caf91abdf7f47a93bfba90c", "message": "HADOOP-16797. Add Dockerfile for ARM builds. Addendum", "committedDate": "2020-01-10T08:23:52Z", "type": "commit"}, {"oid": "1e20e9c1c35511034caf91abdf7f47a93bfba90c", "url": "https://github.com/apache/hadoop/commit/1e20e9c1c35511034caf91abdf7f47a93bfba90c", "message": "HADOOP-16797. Add Dockerfile for ARM builds. Addendum", "committedDate": "2020-01-10T08:23:52Z", "type": "forcePushed"}]}