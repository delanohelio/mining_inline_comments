{"pr_number": 539, "pr_title": "Add :topdown selector to match hierarchically", "pr_createdAt": "2020-08-23T03:36:05Z", "pr_url": "https://github.com/awslabs/smithy/pull/539", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2NzYxMQ==", "url": "https://github.com/awslabs/smithy/pull/539#discussion_r478767611", "bodyText": "Nit: rm .", "author": "kstich", "createdAt": "2020-08-28T00:35:35Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/selector/TopDownSelector.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.model.selector;\n+\n+import java.util.List;\n+import software.amazon.smithy.model.neighbor.Relationship;\n+import software.amazon.smithy.model.neighbor.RelationshipType;\n+import software.amazon.smithy.model.shapes.Shape;\n+\n+final class TopDownSelector implements InternalSelector {\n+    private final InternalSelector qualifier;\n+    private final InternalSelector disqualifier;\n+\n+    TopDownSelector(List<InternalSelector> selectors) {\n+        this.qualifier = selectors.get(0);\n+        disqualifier = selectors.size() > 1 ? selectors.get(1) : null;\n+    }\n+\n+    @Override\n+    public boolean push(Context context, Shape shape, Receiver next) {\n+        if (shape.isServiceShape() || shape.isResourceShape() || shape.isOperationShape()) {\n+            return pushMatch(false, context, shape, next);\n+        }\n+\n+        return true;\n+    }\n+\n+    private boolean pushMatch(boolean qualified, Context context, Shape shape, Receiver next) {\n+        // If the flag isn't set, then check if this shape sets it to true.\n+        if (!qualified && context.receivedShapes(shape, qualifier)) {\n+            qualified = true;\n+        }\n+\n+        // If the flag is set, then check if any predicates unset it.\n+        if (qualified && disqualifier != null && context.receivedShapes(shape, disqualifier)) {\n+            qualified = false;\n+        }\n+\n+        // If the shape is matched, then it's sent to the next receiver.\n+        if (qualified && !next.apply(context, shape)) {\n+            return false; // fast-fail if the receiver fast-fails.\n+        }\n+\n+        // Recursively. check each nested resource/operation.", "originalCommit": "0808e7b201b7a9e6ce536cf37c9fafa80769e237", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQwMDE1OA==", "url": "https://github.com/awslabs/smithy/pull/539#discussion_r479400158", "bodyText": "\"of the shape for the current shape\" is worded oddly. Any way to clear it up?", "author": "kstich", "createdAt": "2020-08-28T16:08:36Z", "path": "docs/source/1.0/spec/core/selectors.rst", "diffHunk": "@@ -1359,6 +1359,50 @@ trait applied to it:\n     service :not(-[trait]-> [trait|protocolDefinition])\n \n \n+``:topdown``\n+------------\n+\n+The ``:topdown`` function performs a directed traversal of the binding\n+hierarchy of services, resources, and operations to find shapes that match a\n+predicate selector or that inherit the match from a binding. Exactly one or\n+two selectors can be provided to the ``:topdown`` selector:\n+\n+1. The first selector is used to mark a shape as a match. If the selector\n+   yields any results, then it is considered a match.\n+2. If provided, the second selector is used to remove the match of the shape", "originalCommit": "0808e7b201b7a9e6ce536cf37c9fafa80769e237", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "661c3164822c94b9dec9cc367f31017d18a6faf6", "url": "https://github.com/awslabs/smithy/commit/661c3164822c94b9dec9cc367f31017d18a6faf6", "message": "Add :topdown selector to match hierarchically\n\nThe topdown selector is used to match shapes hierarchically based on a\n\"qualifier\" selector and optional \"disqualifier\" selector. This can be\nused to match shapes that are marked as controlPlane or dataPlane using\ninheritance from resource/service bindings, match shapes that use\nhttpBasic auth, etc.", "committedDate": "2020-09-09T05:56:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0MzUzMQ==", "url": "https://github.com/awslabs/smithy/pull/539#discussion_r485843531", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               selector matches again. Resource and operation binding traversal continues\n          \n          \n            \n               regardless of if the second selector removes the match flag because the\n          \n          \n            \n               first selector could return results in contained resource and operation\n          \n          \n            \n               shapes.\n          \n          \n            \n               selector matches again. Resource and operation binding traversal continues\n          \n          \n            \n               regardless of if the second selector removes the match flag for the current shape\n          \n          \n            \n               because resource and operation shapes bound to the current shape could yield\n          \n          \n            \n               matching results.", "author": "kstich", "createdAt": "2020-09-09T18:58:15Z", "path": "docs/source/1.0/spec/core/selectors.rst", "diffHunk": "@@ -1359,6 +1359,93 @@ trait applied to it:\n     service :not(-[trait]-> [trait|protocolDefinition])\n \n \n+``:topdown``\n+------------\n+\n+The ``:topdown`` function matches service, resource, and operation shapes\n+and resource and operation shapes within their containment hierarchy. The\n+``:topdown`` function starts at each given shape and forward-traverses\n+the containment hierarchy of the shape by following ``operation`` and\n+``resource`` :ref:`relationships <selector-relationships>` from the shape\n+to its neighbors; this function *does not* traverse *up* the containment\n+hierarchy of a given shape to check if the shape is within the containment\n+hierarchy of a qualified service or resource shape. This function essentially\n+allows shapes to be matched by inheriting from the resource or service they\n+are bound to.\n+\n+.. rubric:: Selector arguments\n+\n+Exactly one or two selectors MUST be provided to the ``:topdown`` selector:\n+\n+1. The first selector is the \"qualifier\". It is used to mark a shape as a\n+   match. If the selector yields any results, then it is considered a match.\n+2. If provided, the second selector is called the \"disqualifier\". It is used\n+   to remove the match flag for the current shape before traversing any\n+   resource and operation bindings of the current shape. If this selector\n+   yields any results, then the shape is not considered a match, and bound\n+   resources and operations are not considered a match until the qualifier\n+   selector matches again. Resource and operation binding traversal continues\n+   regardless of if the second selector removes the match flag because the\n+   first selector could return results in contained resource and operation\n+   shapes.", "originalCommit": "661c3164822c94b9dec9cc367f31017d18a6faf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0NjA4MQ==", "url": "https://github.com/awslabs/smithy/pull/539#discussion_r485846081", "bodyText": "Thanks! I committed this change locally to ensure it doesn't exceed 80 chars.", "author": "mtdowling", "createdAt": "2020-09-09T19:03:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0MzUzMQ=="}], "type": "inlineReview"}, {"oid": "3e2139374919b5309cb571dad6988e640d818995", "url": "https://github.com/awslabs/smithy/commit/3e2139374919b5309cb571dad6988e640d818995", "message": "Add :topdown selector to match hierarchically\n\nThe topdown selector is used to match shapes hierarchically based on a\n\"qualifier\" selector and optional \"disqualifier\" selector. This can be\nused to match shapes that are marked as controlPlane or dataPlane using\ninheritance from resource/service bindings, match shapes that use\nhttpBasic auth, etc.", "committedDate": "2020-09-09T19:02:29Z", "type": "forcePushed"}, {"oid": "27acf7de4efde27062faa09734b79ac2c637cb03", "url": "https://github.com/awslabs/smithy/commit/27acf7de4efde27062faa09734b79ac2c637cb03", "message": "Add :topdown selector to match hierarchically\n\nThe topdown selector is used to match shapes hierarchically based on a\n\"qualifier\" selector and optional \"disqualifier\" selector. This can be\nused to match shapes that are marked as controlPlane or dataPlane using\ninheritance from resource/service bindings, match shapes that use\nhttpBasic auth, etc.", "committedDate": "2020-09-09T19:51:05Z", "type": "forcePushed"}, {"oid": "8a624c1886360a8a354fea6658047c9597b0ea1f", "url": "https://github.com/awslabs/smithy/commit/8a624c1886360a8a354fea6658047c9597b0ea1f", "message": "Add :topdown selector to match hierarchically\n\nThe topdown selector is used to match shapes hierarchically based on a\n\"qualifier\" selector and optional \"disqualifier\" selector. This can be\nused to match shapes that are marked as controlPlane or dataPlane using\ninheritance from resource/service bindings, match shapes that use\nhttpBasic auth, etc.", "committedDate": "2020-09-09T19:52:56Z", "type": "commit"}, {"oid": "8a624c1886360a8a354fea6658047c9597b0ea1f", "url": "https://github.com/awslabs/smithy/commit/8a624c1886360a8a354fea6658047c9597b0ea1f", "message": "Add :topdown selector to match hierarchically\n\nThe topdown selector is used to match shapes hierarchically based on a\n\"qualifier\" selector and optional \"disqualifier\" selector. This can be\nused to match shapes that are marked as controlPlane or dataPlane using\ninheritance from resource/service bindings, match shapes that use\nhttpBasic auth, etc.", "committedDate": "2020-09-09T19:52:56Z", "type": "forcePushed"}]}