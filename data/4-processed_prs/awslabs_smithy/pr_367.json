{"pr_number": 367, "pr_title": "Clean up and document OpenAPI conversion", "pr_createdAt": "2020-04-10T23:59:01Z", "pr_url": "https://github.com/awslabs/smithy/pull/367", "timeline": [{"oid": "52633f1e5e1cc8e72a593f61c68ecc34fab3d4cf", "url": "https://github.com/awslabs/smithy/commit/52633f1e5e1cc8e72a593f61c68ecc34fab3d4cf", "message": "Clean up and document OpenAPI conversion\n\n- Filled in lots of details in OpenAPI docs\n- Added apiGatewayType to filter mappers based on the kind of API being\n  created.\n- Added filtering to API Gateway OpenAPI mappers based on apiGatewayType\n  using a decorator.\n- Extensions now are loaded at the top-level in JSON schema\n  configuration in a flat keyspace\n- Added a missing feature in the API Gateway converter that forced the\n  used of alphanumeric JSON schema type names.\n- Added the ability to inject default configuration settings in OpenAPI\n  mappers prior to using the configuration. This allowed injecting the\n  default alphanumeric properties value.", "committedDate": "2020-04-11T19:40:13Z", "type": "forcePushed"}, {"oid": "96aa9a07cbcb36669e78c56b43b2a5286cd708bb", "url": "https://github.com/awslabs/smithy/commit/96aa9a07cbcb36669e78c56b43b2a5286cd708bb", "message": "Clean up and document OpenAPI conversion\n\n- Filled in lots of details in OpenAPI docs\n- Added apiGatewayType to filter mappers based on the kind of API being\n  created.\n- Added filtering to API Gateway OpenAPI mappers based on apiGatewayType\n  using a decorator.\n- Extensions now are loaded at the top-level in JSON schema\n  configuration in a flat keyspace\n- Added a missing feature in the API Gateway converter that forced the\n  used of alphanumeric JSON schema type names.\n- Added the ability to inject default configuration settings in OpenAPI\n  mappers prior to using the configuration. This allowed injecting the\n  default alphanumeric properties value.", "committedDate": "2020-04-12T20:02:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4ODM4MA==", "url": "https://github.com/awslabs/smithy/pull/367#discussion_r407588380", "bodyText": "This should link down to the section on AWS CloudFormation Substitutions.", "author": "kstich", "createdAt": "2020-04-13T16:59:57Z", "path": "docs/source/guides/converting-to-openapi.rst", "diffHunk": "@@ -529,8 +639,54 @@ dependency on ``software.amazon.smithy:smithy-aws-apigateway-openapi``.\n     }\n \n \n+Amazon API Gateway configuration settings\n+=========================================\n+\n+apiGatewayType (``string``)\n+    Defines the type of API Gateway to define in the generated OpenAPI model.\n+    This setting influences which API Gateway specific plugins apply\n+    to the generated OpenAPI model.\n+\n+    This setting can be set to one of the following:\n+\n+    * ``REST``: Generates a `REST API`_. This is the default setting if not\n+      configured.\n+    * ``HTTP``: Generates an `HTTP API`_.\n+    * ``DISABLED``: Disables all API Gateway modifications made to the\n+      OpenAPI model. This is useful if ``software.amazon.smithy:smithy-aws-apigateway-openapi``\n+      is inadvertently placed on the classpath by a dependency.\n+\n+    .. code-block:: json\n+\n+        {\n+            \"version\": \"1.0\",\n+            \"plugins\": {\n+                \"openapi\": {\n+                    \"service\": \"smithy.example#Weather\",\n+                    \"apiGatewayType\": \"REST\"\n+                }\n+            }\n+        }\n+\n+disableCloudFormationSubstitution (``boolean``)\n+    Disables automatically converting ``${}`` templates in specific properties", "originalCommit": "96aa9a07cbcb36669e78c56b43b2a5286cd708bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4ODU5OQ==", "url": "https://github.com/awslabs/smithy/pull/367#discussion_r407588599", "bodyText": "s/trait/traits", "author": "kstich", "createdAt": "2020-04-13T17:00:24Z", "path": "docs/source/guides/converting-to-openapi.rst", "diffHunk": "@@ -596,28 +752,29 @@ OpenAPI extension.\n .. _apigateway-integrations:\n \n Integrations\n-------------\n+============\n \n Smithy models can specify the backend integration configuration that\n Amazon API Gateway uses to for an operation.\n \n-* ``aws.apigateway#integration`` trait defines an API Gateway integration\n-  that calls an actual backend.\n-* ``aws.apigateway#mockIntegration`` defines an API Gateway mock integration\n-  that doesn't call a backend.\n+* The :ref:`aws.apigateway#integration-trait` defines an API Gateway\n+  integration that calls an actual backend.\n+* The :ref:`aws.apigateway#mockIntegration-trait` defines an API Gateway mock\n+  integration that doesn't call a backend.\n \n-If the trait is applied to a service shape, then all operations in the service\n-use the integration. If the trait is defined on a resource shape, then all\n-operations of the resource and all child resources use the integration. If\n-the trait is applied to an operation, then the operation uses a specific\n-integration that overrides any integration inherited from a resource or\n-service.\n+If either of the above trait is applied to a service shape, then all", "originalCommit": "96aa9a07cbcb36669e78c56b43b2a5286cd708bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4da5e1cd3f5d0264de1f73314f895bc7e612de7b", "url": "https://github.com/awslabs/smithy/commit/4da5e1cd3f5d0264de1f73314f895bc7e612de7b", "message": "Clean up and document OpenAPI conversion\n\n- Filled in lots of details in OpenAPI docs\n- Added apiGatewayType to filter mappers based on the kind of API being\n  created.\n- Added filtering to API Gateway OpenAPI mappers based on apiGatewayType\n  using a decorator.\n- Extensions now are loaded at the top-level in JSON schema\n  configuration in a flat keyspace\n- Added a missing feature in the API Gateway converter that forced the\n  used of alphanumeric JSON schema type names.\n- Added the ability to inject default configuration settings in OpenAPI\n  mappers prior to using the configuration. This allowed injecting the\n  default alphanumeric properties value.", "committedDate": "2020-04-13T17:14:06Z", "type": "commit"}, {"oid": "4da5e1cd3f5d0264de1f73314f895bc7e612de7b", "url": "https://github.com/awslabs/smithy/commit/4da5e1cd3f5d0264de1f73314f895bc7e612de7b", "message": "Clean up and document OpenAPI conversion\n\n- Filled in lots of details in OpenAPI docs\n- Added apiGatewayType to filter mappers based on the kind of API being\n  created.\n- Added filtering to API Gateway OpenAPI mappers based on apiGatewayType\n  using a decorator.\n- Extensions now are loaded at the top-level in JSON schema\n  configuration in a flat keyspace\n- Added a missing feature in the API Gateway converter that forced the\n  used of alphanumeric JSON schema type names.\n- Added the ability to inject default configuration settings in OpenAPI\n  mappers prior to using the configuration. This allowed injecting the\n  default alphanumeric properties value.", "committedDate": "2020-04-13T17:14:06Z", "type": "forcePushed"}]}