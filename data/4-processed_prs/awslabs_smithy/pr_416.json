{"pr_number": 416, "pr_title": "Add prioritized least recently added ShapeId cache", "pr_createdAt": "2020-05-04T02:27:54Z", "pr_url": "https://github.com/awslabs/smithy/pull/416", "timeline": [{"oid": "df8fb1342d8b82527619dcc0879edc5e9c73b500", "url": "https://github.com/awslabs/smithy/commit/df8fb1342d8b82527619dcc0879edc5e9c73b500", "message": "Add prioritized least recently added ShapeId cache", "committedDate": "2020-05-04T02:27:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU1NTE0MA==", "url": "https://github.com/awslabs/smithy/pull/416#discussion_r419555140", "bodyText": "I think the fromParts functions should route through this cache as well. It's used in LoaderVisitor  for prelude loading.", "author": "kstich", "createdAt": "2020-05-04T16:14:57Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/shapes/ShapeId.java", "diffHunk": "@@ -59,32 +67,12 @@ private ShapeId(String namespace, String name, String member) {\n     /**\n      * Creates an absolute shape ID from the given string.\n      *\n-     * @param absoluteShapeId Shape ID to parse.\n+     * @param id Shape ID to parse.\n      * @return The parsed ID.\n      * @throws ShapeIdSyntaxException when the ID is malformed.\n      */\n-    public static ShapeId from(String absoluteShapeId) {\n-        int namespacePosition = absoluteShapeId.indexOf('#');\n-        if (namespacePosition <= 0 || namespacePosition == absoluteShapeId.length() - 1) {\n-            throw new ShapeIdSyntaxException(\"Invalid shape ID: \" + absoluteShapeId);\n-        }\n-\n-        String namespace = absoluteShapeId.substring(0, namespacePosition);\n-        String name;\n-        String memberName = null;\n-\n-        int memberPosition = absoluteShapeId.indexOf('$');\n-        if (memberPosition == -1) {\n-            name = absoluteShapeId.substring(namespacePosition + 1);\n-        } else if (memberPosition < namespacePosition) {\n-            throw new ShapeIdSyntaxException(\"Invalid shape ID: \" + absoluteShapeId);\n-        } else {\n-            name = absoluteShapeId.substring(namespacePosition + 1, memberPosition);\n-            memberName = absoluteShapeId.substring(memberPosition + 1);\n-        }\n-\n-        validateParts(absoluteShapeId, namespace, name, memberName);\n-        return new ShapeId(absoluteShapeId, namespace, name, memberName);\n+    public static ShapeId from(String id) {", "originalCommit": "df8fb1342d8b82527619dcc0879edc5e9c73b500", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU4MjQyNA==", "url": "https://github.com/awslabs/smithy/pull/416#discussion_r419582424", "bodyText": "Using the cache for that would probably be suboptimal since the check is a guess that a shape might be in the prelude, and many will not. I will add a method to shape ID called withNamespace to optimize this though.", "author": "mtdowling", "createdAt": "2020-05-04T16:56:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU1NTE0MA=="}], "type": "inlineReview"}, {"oid": "7a76c05e13cc14843a22f61ab8ea16a4f4c65e63", "url": "https://github.com/awslabs/smithy/commit/7a76c05e13cc14843a22f61ab8ea16a4f4c65e63", "message": "Add ShapeId#withNamespace", "committedDate": "2020-05-04T17:04:08Z", "type": "commit"}]}