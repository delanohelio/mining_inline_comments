{"pr_number": 590, "pr_title": "Optimize reverse neighbors for memory", "pr_createdAt": "2020-10-05T18:33:50Z", "pr_url": "https://github.com/awslabs/smithy/pull/590", "timeline": [{"oid": "7de890467e57a78a02218bb885926ed14b618870", "url": "https://github.com/awslabs/smithy/commit/7de890467e57a78a02218bb885926ed14b618870", "message": "Optimize reverse neighbors for memory\n\nThis method previously needed lots of intermediate representations\nstored in memory to create a Map<ShapeId, List<RelationShip>> that\ncontains only unique relationships. It was done using Stream,\ndistinct, and groupingBy. However, when trying to load ridiculously\nlarge models, that approach consume tons of heap. This approach\nallocates as little as possible (I think), but does require creating\nan ArrayList copy of a Set each time neighbors are returned.", "committedDate": "2020-10-05T18:31:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5NTkxMA==", "url": "https://github.com/awslabs/smithy/pull/590#discussion_r499795910", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // however, when trying to load ridiculously large models, that approach consume\n          \n          \n            \n                    // However, when trying to load ridiculously large models, that approach consumes", "author": "srchase", "createdAt": "2020-10-05T18:38:20Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/neighbor/NeighborProvider.java", "diffHunk": "@@ -122,13 +124,24 @@ static NeighborProvider reverse(Model model) {\n      * @return Returns the reverse neighbor provider.\n      */\n     static NeighborProvider reverse(Model model, NeighborProvider forwardProvider) {\n-        Map<ShapeId, List<Relationship>> targetedFrom = model.shapes()\n-                .map(forwardProvider::getNeighbors)\n-                .flatMap(List::stream)\n-                .distinct()\n-                .collect(Collectors.groupingBy(Relationship::getNeighborShapeId, ListUtils.toUnmodifiableList()));\n+        // Note: this method previously needed lots of intermediate representations\n+        // stored in memory to create a Map<ShapeId, List<RelationShip>> that contains\n+        // only unique relationships. It was done using Stream, distinct, and groupingBy.\n+        // however, when trying to load ridiculously large models, that approach consume", "originalCommit": "7de890467e57a78a02218bb885926ed14b618870", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9f5ae002509c6ee9d9edfda3662000a829e1644e", "url": "https://github.com/awslabs/smithy/commit/9f5ae002509c6ee9d9edfda3662000a829e1644e", "message": "Fix typo\n\nCo-authored-by: Chase Coalwell <chasecoa@amazon.com>", "committedDate": "2020-10-05T18:49:14Z", "type": "commit"}]}