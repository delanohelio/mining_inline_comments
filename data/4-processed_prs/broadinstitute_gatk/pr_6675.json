{"pr_number": 6675, "pr_title": "Make VCFCodec the default for query streams from GenomicsDB", "pr_createdAt": "2020-06-24T05:25:25Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6675", "timeline": [{"oid": "d7840b93b3131498c2d1769118fa1d3dd02b7b56", "url": "https://github.com/broadinstitute/gatk/commit/d7840b93b3131498c2d1769118fa1d3dd02b7b56", "message": "Make VCFCodec the default for query streams from GenomicsDB and other minor changes", "committedDate": "2020-06-24T03:37:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk5OTU2Ng==", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r444999566", "bodyText": "Perhaps you should just normalize the workspace to end with a slash on tool startup?", "author": "droazen", "createdAt": "2020-06-24T15:55:17Z", "path": "src/main/java/org/broadinstitute/hellbender/engine/FeatureDataSource.java", "diffHunk": "@@ -387,8 +387,8 @@ final void printCacheStats() {\n     protected static FeatureReader<VariantContext> getGenomicsDBFeatureReader(final GATKPath path, final File reference, final GenomicsDBOptions genomicsDBOptions) {\n         final String workspace = IOUtils.getGenomicsDBAbsolutePath(path) ;\n         if (workspace == null) {\n-            throw new IllegalArgumentException(\"Trying to create a GenomicsDBReader from  non-GenomicsDB inputpath \" + path);\n-        } else if (Files.notExists(IOUtils.getPath(workspace))) {\n+            throw new IllegalArgumentException(\"Trying to create a GenomicsDBReader from  non-GenomicsDB input path \" + path);\n+        } else if (Files.notExists(IOUtils.getPath(workspace.endsWith(\"/\")?workspace:workspace+\"/\"))) {", "originalCommit": "d7840b93b3131498c2d1769118fa1d3dd02b7b56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAxODQxNg==", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r445018416", "bodyText": "Sure, I can remove the check here.", "author": "nalinigans", "createdAt": "2020-06-24T16:24:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk5OTU2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMTAxOA==", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r445901018", "bodyText": "Done.", "author": "nalinigans", "createdAt": "2020-06-26T00:00:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk5OTU2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwNzU0Mg==", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r445007542", "bodyText": "I notice that this argument does not control which codec is used in GenomicsDBImport.getReaderFromPath(), which is hardcoded to use a VCFCodec. Should this argument affect the codec used in GenomicsDBImport?", "author": "droazen", "createdAt": "2020-06-24T16:07:27Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBArgumentCollection.java", "diffHunk": "@@ -8,11 +8,11 @@\n \n public class GenomicsDBArgumentCollection implements Serializable {\n   private static final long serialVersionUID = 1L;\n-  public static final String USE_VCF_CODEC_LONG_NAME = \"genomicsdb-use-vcf-codec\";\n+  public static final String USE_BCF_CODEC_LONG_NAME = \"genomicsdb-use-bcf-codec\";", "originalCommit": "d7840b93b3131498c2d1769118fa1d3dd02b7b56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNzAwNQ==", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r445037005", "bodyText": "This does not apply to GenomicsDBImport as VCFCodec is hardcoded there - see GenomicsDBImport.java#L833 as you mention. I am guessing this is because the --variant/-V option for GenomicsDBImport mentions only vcf files as inputs. However, GenomicsDB itself can accept either vcf/bcf files and if we allow bcf files as inputs in the future, it will be the tool deciding the Codec and not the user.", "author": "nalinigans", "createdAt": "2020-06-24T16:55:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwNzU0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwOTc0NQ==", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r445009745", "bodyText": "Can you add at least one integration test for GenotypeGVCFs that uses the BCF codec?\nAlso for GenotypeGVCFs, do you have a simple test case with a 64-bit value that fails with BCF and passes with VCF? If so, it would be good to have both a positive test case with VCF that passes and a negative test case with BCF that fails with an expected exception.", "author": "droazen", "createdAt": "2020-06-24T16:10:55Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/GnarlyGenotyperIntegrationTest.java", "diffHunk": "@@ -37,28 +37,28 @@\n                 //No variants outside requested intervals; no SNPs with QUAL < 60, no INDELs with QUAL < 69?; has star alleles after deletion at chr20:263497; has AC, AF, AN, DP, ExcessHet, FS, MQ, (MQRankSum), (ReadPosRankSum), SOR, QD; has called genotypes\n                 {new File[]{getTestFile(\"sample1.vcf\"), getTestFile(\"sample2.vcf\"), getTestFile(\"sample3.vcf\"), getTestFile(\"sample4.vcf\"), getTestFile(\"sample5.vcf\")},\n                          getTestFile(\"fiveSampleTest.vcf\"), null, Arrays.asList(new SimpleInterval(\"chr20\", 251370, 252000), new SimpleInterval(\"chr20\", 263000, 265600)), Arrays.asList(\"--merge-input-intervals\", \"--only-output-calls-starting-in-intervals\"), b38_reference_20_21},\n-                // Same as above, but with GenomicsDB using VCFCodec for interchange\n+                // Same as above, but with GenomicsDB using BCF2Codec for interchange\n                 {new File[]{getTestFile(\"sample1.vcf\"), getTestFile(\"sample2.vcf\"), getTestFile(\"sample3.vcf\"), getTestFile(\"sample4.vcf\"), getTestFile(\"sample5.vcf\")},\n-                         getTestFile(\"fiveSampleTest.vcf\"), null, Arrays.asList(new SimpleInterval(\"chr20\", 251370, 252000), new SimpleInterval(\"chr20\", 263000, 265600)), Arrays.asList(\"--merge-input-intervals\", \"--only-output-calls-starting-in-intervals\", \"--genomicsdb-use-vcf-codec\"), b38_reference_20_21},\n+                         getTestFile(\"fiveSampleTest.vcf\"), null, Arrays.asList(new SimpleInterval(\"chr20\", 251370, 252000), new SimpleInterval(\"chr20\", 263000, 265600)), Arrays.asList(\"--merge-input-intervals\", \"--only-output-calls-starting-in-intervals\", \"--genomicsdb-use-bcf-codec\"), b38_reference_20_21},", "originalCommit": "d7840b93b3131498c2d1769118fa1d3dd02b7b56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMTA5Mw==", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r445901093", "bodyText": "Done.", "author": "nalinigans", "createdAt": "2020-06-26T00:00:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwOTc0NQ=="}], "type": "inlineReview"}, {"oid": "20c2dcd11c2c1eca60c67bd14c6f584924c73133", "url": "https://github.com/broadinstitute/gatk/commit/20c2dcd11c2c1eca60c67bd14c6f584924c73133", "message": "Add GenotypeGVCFs integration test for both VCF and BCF2 codecs. Also add test to check that a  combined INFO field resulting in a 64-bit value is handled by VCFCodec, but not by BCF2Codec", "committedDate": "2020-06-25T21:56:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI0OTUzOA==", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r446249538", "bodyText": "I wasn't actually suggesting that you remove this check completely, as I think it's a necessary check -- just that it might be better to normalize the workspace name to end with a slash at an earlier point in the code, if we can't handle lack of a trailing slash.\nSince time is short and the rest of the PR looks good, I am going to restore the previous version of this line via a separate commit.", "author": "droazen", "createdAt": "2020-06-26T15:21:10Z", "path": "src/main/java/org/broadinstitute/hellbender/engine/FeatureDataSource.java", "diffHunk": "@@ -387,9 +387,7 @@ final void printCacheStats() {\n     protected static FeatureReader<VariantContext> getGenomicsDBFeatureReader(final GATKPath path, final File reference, final GenomicsDBOptions genomicsDBOptions) {\n         final String workspace = IOUtils.getGenomicsDBAbsolutePath(path) ;\n         if (workspace == null) {\n-            throw new IllegalArgumentException(\"Trying to create a GenomicsDBReader from  non-GenomicsDB inputpath \" + path);\n-        } else if (Files.notExists(IOUtils.getPath(workspace))) {", "originalCommit": "20c2dcd11c2c1eca60c67bd14c6f584924c73133", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI4MDY4Nw==", "url": "https://github.com/broadinstitute/gatk/pull/6675#discussion_r446280687", "bodyText": "I will move the normalization to IOUtils.getGenomicsDBAbsolutePath() in a future PR. Thanks.", "author": "nalinigans", "createdAt": "2020-06-26T16:17:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI0OTUzOA=="}], "type": "inlineReview"}, {"oid": "2cc80ad16e4230c70bf7f2424565707ef798d1a0", "url": "https://github.com/broadinstitute/gatk/commit/2cc80ad16e4230c70bf7f2424565707ef798d1a0", "message": "Restore workspace existence check", "committedDate": "2020-06-26T15:30:53Z", "type": "commit"}]}