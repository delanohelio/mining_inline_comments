{"pr_number": 2765, "pr_title": "Fixes for issues in FileEncrypt, TestFileSystem.testConcurrent() and with PAGE_SIZE", "pr_createdAt": "2020-07-18T07:46:51Z", "pr_url": "https://github.com/h2database/h2database/pull/2765", "timeline": [{"oid": "b4ee3f182d7a10a4227cf17d7b4f1563b02a745e", "url": "https://github.com/h2database/h2database/commit/b4ee3f182d7a10a4227cf17d7b4f1563b02a745e", "message": "Fix race in FileEncrypt.init()", "committedDate": "2020-07-18T05:46:06Z", "type": "commit"}, {"oid": "ffba3a683baca82959e4e14ca82917d6d69b0c8b", "url": "https://github.com/h2database/h2database/commit/ffba3a683baca82959e4e14ca82917d6d69b0c8b", "message": "Chain some methods in FileEncrypt and simplify writeFully()", "committedDate": "2020-07-18T06:32:46Z", "type": "commit"}, {"oid": "fd8c0e3c299f7e3aea093b22ea6ffbfbd9bfc780", "url": "https://github.com/h2database/h2database/commit/fd8c0e3c299f7e3aea093b22ea6ffbfbd9bfc780", "message": "Synchronize page access in TestFileSystem.testConcurrent()", "committedDate": "2020-07-18T06:43:05Z", "type": "commit"}, {"oid": "58a9940542f44abd39515ce67b21c636dc00ddcd", "url": "https://github.com/h2database/h2database/commit/58a9940542f44abd39515ce67b21c636dc00ddcd", "message": "Really test visibility of concurrent changes in testConcurrent()", "committedDate": "2020-07-18T06:49:29Z", "type": "commit"}, {"oid": "db1a6e57426b25edcb11c0b998a46d36ad5d4c2c", "url": "https://github.com/h2database/h2database/commit/db1a6e57426b25edcb11c0b998a46d36ad5d4c2c", "message": "Require PAGE_SIZE to be a multiple of 4096 for encrypted databases", "committedDate": "2020-07-18T07:17:52Z", "type": "commit"}, {"oid": "c2e27868ae2e47dd7e14a8a5ee944dd11363eadf", "url": "https://github.com/h2database/h2database/commit/c2e27868ae2e47dd7e14a8a5ee944dd11363eadf", "message": "Update changelog", "committedDate": "2020-07-18T07:43:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4MjQ0Mg==", "url": "https://github.com/h2database/h2database/pull/2765#discussion_r456782442", "bodyText": "why XTS instance has to be passed on as result / local variable? existing field will do just fine", "author": "andreitokar", "createdAt": "2020-07-18T11:52:43Z", "path": "h2/src/main/org/h2/store/fs/encrypt/FileEncrypt.java", "diffHunk": "@@ -73,9 +73,19 @@ public FileEncrypt(String name, byte[] encryptionKey, FileChannel base) {\n         this.encryptionKey = encryptionKey;\n     }\n \n-    private void init() throws IOException {\n+    private XTS init() throws IOException {", "originalCommit": "c2e27868ae2e47dd7e14a8a5ee944dd11363eadf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4MjY2NQ==", "url": "https://github.com/h2database/h2database/pull/2765#discussion_r456782665", "bodyText": "never mind, i got it, it saves one volatile read", "author": "andreitokar", "createdAt": "2020-07-18T11:55:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4MjQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4MzUxOA==", "url": "https://github.com/h2database/h2database/pull/2765#discussion_r456783518", "bodyText": "Actually IMHO, @little-pan change (final field) is more appropriate. How often this object is created? How likely, that it won't be used afterwards, so lazy initialization pays off?", "author": "andreitokar", "createdAt": "2020-07-18T12:06:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4MjQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4NDczMg==", "url": "https://github.com/h2database/h2database/pull/2765#discussion_r456784732", "bodyText": "In some virtual environments (but not on Travis CI) file locks don't work as expected and alternative locking mechanisms are really necessary (I have such VPS provided by web hosting company). Initialization of XTS performs some I/O, but file can be not yet really locked, therefore FileEncrypt intentionally delays its initialization and this is documented in its constructor. I'm not the author of this code and I have no idea whether this logic is still required by PageStore and MVStore backends and, unfortunately, I can't test it now. But I'm sure that we need to perform real tests in these environments first, otherwise we can create a regression in sensitive area of H2.", "author": "katzyn", "createdAt": "2020-07-18T12:21:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4MjQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4NTYwMA==", "url": "https://github.com/h2database/h2database/pull/2765#discussion_r456785600", "bodyText": "Actually I don't want to test anything on production servers for oblivious reasons and I don't have testing systems with this problem.\nThese VPS work in OpenVZ containers, but I don't know is it a problem of OpenVZ or a problem of underlying file system (possibly distributed one, I don't have any information about it).", "author": "katzyn", "createdAt": "2020-07-18T12:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4MjQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4NTYwOA==", "url": "https://github.com/h2database/h2database/pull/2765#discussion_r456785608", "bodyText": "sometimes it pays off to read comments \ud83d\ude04", "author": "andreitokar", "createdAt": "2020-07-18T12:32:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc4MjQ0Mg=="}], "type": "inlineReview"}]}