{"pr_number": 1034, "pr_title": "Added query to get all roles for principal", "pr_createdAt": "2020-07-09T20:38:47Z", "pr_url": "https://github.com/AthenZ/athenz/pull/1034", "timeline": [{"oid": "9b8a0a00b65b5ea30b2bb1a43dc2eb3ea7b91387", "url": "https://github.com/AthenZ/athenz/commit/9b8a0a00b65b5ea30b2bb1a43dc2eb3ea7b91387", "message": "Added query to get all roles for principal", "committedDate": "2020-07-12T07:00:55Z", "type": "forcePushed"}, {"oid": "a1697bca4b235edda3115f8342530765ac38c87f", "url": "https://github.com/AthenZ/athenz/commit/a1697bca4b235edda3115f8342530765ac38c87f", "message": "Added query to get all roles for principal", "committedDate": "2020-07-12T08:18:02Z", "type": "forcePushed"}, {"oid": "6eaaab108dea843fcc122fa854b2d01426f46a05", "url": "https://github.com/AthenZ/athenz/commit/6eaaab108dea843fcc122fa854b2d01426f46a05", "message": "Added query to get all roles for principal", "committedDate": "2020-07-12T12:26:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM4MDQyMA==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453380420", "bodyText": "can we also extend this to include an optional domainName attribute where I would only return the role names from the given domain name if specified. We don't have an API that just returns the role names that a given principal is member  in a domain so we don't want them to get the full list and then parse and filter out the domain they're interested in.", "author": "havetisyan", "createdAt": "2020-07-13T00:05:39Z", "path": "core/zms/src/main/rdl/Role.rdli", "diffHunk": "@@ -129,6 +129,19 @@ resource DomainRoleMembers GET \"/domain/{domainName}/member\" {\n     }\n }\n \n+// Fetch all the roles across domains by either calling or specified principal\n+resource DomainRoleMember GET \"/all_roles?principal={principal}\" (name=GetAllRoles) {", "originalCommit": "6eaaab108dea843fcc122fa854b2d01426f46a05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0NTI1NQ==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453445255", "bodyText": "Sure thing.", "author": "OferLevi85", "createdAt": "2020-07-13T05:39:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM4MDQyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU2MzU2Mw==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453563563", "bodyText": "Done", "author": "OferLevi85", "createdAt": "2020-07-13T10:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM4MDQyMA=="}], "type": "inlineReview"}, {"oid": "06aa599d510acef180213cf293282194938d59c7", "url": "https://github.com/AthenZ/athenz/commit/06aa599d510acef180213cf293282194938d59c7", "message": "Added query to get all roles for principal", "committedDate": "2020-07-13T10:43:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczMzc2Ng==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453733766", "bodyText": "we should remove the previous line", "author": "havetisyan", "createdAt": "2020-07-13T15:27:36Z", "path": "clients/java/zms/pom.xml", "diffHunk": "@@ -28,6 +28,7 @@\n \n   <properties>\n     <code.coverage.min>0.42</code.coverage.min>\n+    <code.coverage.min>0.95</code.coverage.min>", "originalCommit": "06aa599d510acef180213cf293282194938d59c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkyNzg1Nw==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453927857", "bodyText": "Done", "author": "OferLevi85", "createdAt": "2020-07-13T20:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczMzc2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczNjMyMg==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453736322", "bodyText": "we should also return the system disabled flag if we're return all the other attributes", "author": "havetisyan", "createdAt": "2020-07-13T15:31:15Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/file/FileConnection.java", "diffHunk": "@@ -1639,6 +1640,51 @@ public DomainRoleMembers listDomainRoleMembers(String domainName) {\n         return listReviewRoleMembersWithFilter(domainName, (roleMember -> true), \"listDomainRoleMembers\");\n     }\n \n+    @Override\n+    public DomainRoleMember getAllRoles(String principal, String domainName) {\n+        DomainRoleMember domainRoleMember = new DomainRoleMember();\n+        domainRoleMember.setMemberName(principal);\n+        domainRoleMember.setMemberRoles(new ArrayList<>());\n+\n+        if (!StringUtil.isEmpty(domainName)) {\n+            getDomainRolesForPrincipal(principal, domainRoleMember, domainName);\n+        } else {\n+            String[] fnames = getDomainList();\n+            for (String domain : fnames) {\n+                getDomainRolesForPrincipal(principal, domainRoleMember, domain);\n+            }\n+        }\n+\n+        return domainRoleMember;\n+    }\n+\n+    private void getDomainRolesForPrincipal(String principal, DomainRoleMember domainRoleMember, String domain) {\n+        DomainStruct dom = getDomainStruct(domain);\n+        if (dom == null) {\n+            return;\n+        }\n+\n+        for (Role role: dom.getRoles().values()) {\n+            List<RoleMember> roleMembers = role.getRoleMembers();\n+            if (roleMembers == null) {\n+                continue;\n+            }\n+            for (RoleMember roleMember : roleMembers) {\n+                if (!roleMember.getMemberName().equals(principal)) {\n+                    continue;\n+                }\n+\n+                MemberRole memberRole = new MemberRole();", "originalCommit": "06aa599d510acef180213cf293282194938d59c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkyODE1NQ==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453928155", "bodyText": "Done", "author": "OferLevi85", "createdAt": "2020-07-13T20:57:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczNjMyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczODE5NA==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453738194", "bodyText": "we should. handle the case where we have an invalid domain:\n    if (domainId == 0) {\n        throw notFoundError(caller, ZMSConsts.OBJECT_DOMAIN, domainName);\n    }\n\nand we should have a unit test case for this as well.", "author": "havetisyan", "createdAt": "2020-07-13T15:33:57Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -3751,6 +3765,65 @@ public DomainRoleMembers listDomainRoleMembers(String domainName) {\n         return listDomainRoleMembersWithQuery(domainName, SQL_GET_DOMAIN_ROLE_MEMBERS, \"listDomainRoleMembers\");\n     }\n \n+    @Override\n+    public DomainRoleMember getAllRoles(String principal, String domainName) {\n+        final String caller = \"getAllRoles\";\n+\n+        int principalId = getPrincipalId(principal);\n+        if (principalId == 0) {\n+            throw notFoundError(caller, ZMSConsts.OBJECT_PRINCIPAL, principal);\n+        }\n+\n+        DomainRoleMember roleMember = new DomainRoleMember();\n+        roleMember.setMemberRoles(new ArrayList<>());\n+        roleMember.setMemberName(principal);\n+        if (StringUtil.isEmpty(domainName)) {\n+            try (PreparedStatement ps = con.prepareStatement(SQL_GET_ALL_ROLES)) {\n+                ps.setInt(1, principalId);\n+                return getRolesForPrincipal(caller, roleMember, ps);\n+            } catch (SQLException ex) {\n+                throw sqlError(ex, caller);\n+            }\n+        } else {\n+            int domainId = getDomainId(domainName);", "originalCommit": "06aa599d510acef180213cf293282194938d59c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkyODMzOQ==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453928339", "bodyText": "Done", "author": "OferLevi85", "createdAt": "2020-07-13T20:57:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczODE5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc0NDM5MA==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453744390", "bodyText": "if domainName is specified, we need to validate its value as well", "author": "havetisyan", "createdAt": "2020-07-13T15:40:57Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -2956,6 +2957,34 @@ public DomainRoleMembers getDomainRoleMembers(ResourceContext ctx, String domain\n         return roleMembers;\n     }\n \n+    @Override\n+    public DomainRoleMember getAllRoles(ResourceContext context, String principal, String domainName) {\n+        final String caller = \"getallroles\";\n+        metric.increment(ZMSConsts.HTTP_GET);\n+        logPrincipal(context);\n+\n+        if (StringUtil.isEmpty(principal)) {\n+            // If principal not specified, get roles for current user\n+            principal = ((RsrcCtxWrapper) context).principal().getFullName();\n+        }\n+        validateRequest(context.request(), caller);\n+        validate(principal, TYPE_ENTITY_NAME, caller);", "originalCommit": "06aa599d510acef180213cf293282194938d59c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkyODA0Mg==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453928042", "bodyText": "Done", "author": "OferLevi85", "createdAt": "2020-07-13T20:57:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc0NDM5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1MTc1MA==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453751750", "bodyText": "for the uri should be consistent with others and use the first component as the object type, e.g. /domain, /resource,e tc.\nwe should just call it /role instead of /all_roles and instead of getAllRoles, let's call the API as getPrincipalRoles", "author": "havetisyan", "createdAt": "2020-07-13T15:51:28Z", "path": "core/zms/src/main/rdl/Role.rdli", "diffHunk": "@@ -129,6 +129,20 @@ resource DomainRoleMembers GET \"/domain/{domainName}/member\" {\n     }\n }\n \n+// Fetch all the roles across domains by either calling or specified principal\n+resource DomainRoleMember GET \"/all_roles?principal={principal}&domain={domainName}\" (name=GetAllRoles) {", "originalCommit": "06aa599d510acef180213cf293282194938d59c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkyOTY2Ng==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r453929666", "bodyText": "Done", "author": "OferLevi85", "createdAt": "2020-07-13T21:00:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1MTc1MA=="}], "type": "inlineReview"}, {"oid": "d5a953a08431ef099c98c3c44b9d5cd9bdc1d6fb", "url": "https://github.com/AthenZ/athenz/commit/d5a953a08431ef099c98c3c44b9d5cd9bdc1d6fb", "message": "Added query to get all roles for principal", "committedDate": "2020-07-13T20:54:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgwNjU4Nw==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r454806587", "bodyText": "we should also lowercase the domainname here", "author": "havetisyan", "createdAt": "2020-07-15T05:47:58Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -2956,6 +2957,38 @@ public DomainRoleMembers getDomainRoleMembers(ResourceContext ctx, String domain\n         return roleMembers;\n     }\n \n+    @Override\n+    public DomainRoleMember getPrincipalRoles(ResourceContext context, String principal, String domainName) {\n+        final String caller = \"getPrincipalRoles\";\n+        metric.increment(ZMSConsts.HTTP_GET);\n+        logPrincipal(context);\n+\n+        if (StringUtil.isEmpty(principal)) {\n+            // If principal not specified, get roles for current user\n+            principal = ((RsrcCtxWrapper) context).principal().getFullName();\n+        }\n+        validateRequest(context.request(), caller);\n+        validate(principal, TYPE_ENTITY_NAME, caller);\n+\n+        if (!StringUtil.isEmpty(domainName)) {\n+            validate(domainName, TYPE_DOMAIN_NAME, caller);", "originalCommit": "d5a953a08431ef099c98c3c44b9d5cd9bdc1d6fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg5NDU0NA==", "url": "https://github.com/AthenZ/athenz/pull/1034#discussion_r454894544", "bodyText": "Fixed", "author": "OferLevi85", "createdAt": "2020-07-15T08:49:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgwNjU4Nw=="}], "type": "inlineReview"}, {"oid": "e9c85590254678b9f0d0a71c618592d010dd5d79", "url": "https://github.com/AthenZ/athenz/commit/e9c85590254678b9f0d0a71c618592d010dd5d79", "message": "Added query to get all roles for principal", "committedDate": "2020-07-15T08:49:05Z", "type": "commit"}, {"oid": "e9c85590254678b9f0d0a71c618592d010dd5d79", "url": "https://github.com/AthenZ/athenz/commit/e9c85590254678b9f0d0a71c618592d010dd5d79", "message": "Added query to get all roles for principal", "committedDate": "2020-07-15T08:49:05Z", "type": "forcePushed"}]}