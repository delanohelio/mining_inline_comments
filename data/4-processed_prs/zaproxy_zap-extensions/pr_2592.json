{"pr_number": 2592, "pr_title": "Allow to ignore cookies in same site and loosely scoped scan rules", "pr_createdAt": "2020-10-28T20:29:34Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2592", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1NTEyNA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r513755124", "bodyText": "There's a typo in scoped (also in the commit message/PR description).", "author": "thc202", "createdAt": "2020-10-28T20:57:19Z", "path": "addOns/pscanrules/CHANGELOG.md", "diffHunk": "@@ -10,6 +10,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n - Maintenance changes.\n - Changed ViewState and XFrameOption rules to return example alerts for the docs\n - Handle an IllegalArgumentException that could occur in the CSP scan rule if multiple CSP headers were present and one (or more) had a report-uri directive when trying to merge them.\n+- Extend support for cookie ignore rule to same site and loosely scopped scan rules.", "originalCommit": "ccfe3b32ae86a7f722f011f2c52754df8b315bd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1NTI2OQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r513755269", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void cookieOnIgnoreList() throws HttpMalformedHeaderException {\n          \n          \n            \n                public void shouldNotAlertWhenCookieOnIgnoreList() throws HttpMalformedHeaderException {", "author": "kingthorin", "createdAt": "2020-10-28T20:57:34Z", "path": "addOns/pscanrules/src/test/java/org/zaproxy/zap/extension/pscanrules/CookieLooselyScopedScanRuleUnitTest.java", "diffHunk": "@@ -198,4 +216,39 @@ public void shouldScanHostWithoutTld() throws Exception {\n         // When / Then\n         assertDoesNotThrow(() -> scanHttpResponseReceive(msg));\n     }\n+\n+    @Test\n+    public void cookieOnIgnoreList() throws HttpMalformedHeaderException {", "originalCommit": "ccfe3b32ae86a7f722f011f2c52754df8b315bd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1NTQ2MQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r513755461", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void cookieNotOnIgnoreList() throws HttpMalformedHeaderException {\n          \n          \n            \n                public void shouldAlertWhenCookieNotOnIgnoreList() throws HttpMalformedHeaderException {", "author": "kingthorin", "createdAt": "2020-10-28T20:57:57Z", "path": "addOns/pscanrules/src/test/java/org/zaproxy/zap/extension/pscanrules/CookieLooselyScopedScanRuleUnitTest.java", "diffHunk": "@@ -198,4 +216,39 @@ public void shouldScanHostWithoutTld() throws Exception {\n         // When / Then\n         assertDoesNotThrow(() -> scanHttpResponseReceive(msg));\n     }\n+\n+    @Test\n+    public void cookieOnIgnoreList() throws HttpMalformedHeaderException {\n+        // Given\n+        HttpMessage msg = createBasicMessage();\n+        msg.setRequestHeader(\"GET http://test.example.com/admin/roles HTTP/1.1\");\n+        msg.getResponseHeader()\n+                .setHeader(HttpResponseHeader.SET_COOKIE, \"aaaa=b;domain=.example.com\");\n+        model.getOptionsParam()\n+                .getConfig()\n+                .setProperty(RuleConfigParam.RULE_COOKIE_IGNORE_LIST, \"aaaa,bbb,ccc\");\n+\n+        // When\n+        scanHttpResponseReceive(msg);\n+\n+        // Then\n+        assertThat(alertsRaised.size(), equalTo(0));\n+    }\n+\n+    @Test\n+    public void cookieNotOnIgnoreList() throws HttpMalformedHeaderException {", "originalCommit": "ccfe3b32ae86a7f722f011f2c52754df8b315bd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1NTg2MA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r513755860", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void cookieOnIgnoreList() throws HttpMalformedHeaderException {\n          \n          \n            \n                public void shouldNotAlertWhenCookieOnIgnoreList() throws HttpMalformedHeaderException {", "author": "kingthorin", "createdAt": "2020-10-28T20:58:38Z", "path": "addOns/pscanrules/src/test/java/org/zaproxy/zap/extension/pscanrules/CookieSameSiteScanRuleUnitTest.java", "diffHunk": "@@ -307,4 +324,52 @@ public void secondCookieNoSameSiteAttributeFirstExpired() throws HttpMalformedHe\n         assertThat(alertsRaised.get(0).getParam(), equalTo(\"test\"));\n         assertThat(alertsRaised.get(0).getEvidence(), equalTo(\"Set-Cookie: test\"));\n     }\n+\n+    @Test\n+    public void cookieOnIgnoreList() throws HttpMalformedHeaderException {", "originalCommit": "ccfe3b32ae86a7f722f011f2c52754df8b315bd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1NjQxOA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r513756418", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void cookieNotOnIgnoreList() throws HttpMalformedHeaderException {\n          \n          \n            \n                public void shouldAlertWhenCookieNotOnIgnoreList() throws HttpMalformedHeaderException {", "author": "kingthorin", "createdAt": "2020-10-28T20:59:33Z", "path": "addOns/pscanrules/src/test/java/org/zaproxy/zap/extension/pscanrules/CookieSameSiteScanRuleUnitTest.java", "diffHunk": "@@ -307,4 +324,52 @@ public void secondCookieNoSameSiteAttributeFirstExpired() throws HttpMalformedHe\n         assertThat(alertsRaised.get(0).getParam(), equalTo(\"test\"));\n         assertThat(alertsRaised.get(0).getEvidence(), equalTo(\"Set-Cookie: test\"));\n     }\n+\n+    @Test\n+    public void cookieOnIgnoreList() throws HttpMalformedHeaderException {\n+        model.getOptionsParam()\n+                .getConfig()\n+                .setProperty(RuleConfigParam.RULE_COOKIE_IGNORE_LIST, \"aaaa,test,bbb\");\n+\n+        HttpMessage msg = new HttpMessage();\n+        msg.setRequestHeader(\"GET https://www.example.com/test/ HTTP/1.1\");\n+\n+        msg.setResponseBody(\"<html></html>\");\n+        msg.setResponseHeader(\n+                \"HTTP/1.1 200 OK\\r\\n\"\n+                        + \"Server: Apache-Coyote/1.1\\r\\n\"\n+                        + \"Set-Cookie: test=123; Path=/; HttpOnly\\r\\n\"\n+                        + \"Content-Type: text/html;charset=ISO-8859-1\\r\\n\"\n+                        + \"Content-Length: \"\n+                        + msg.getResponseBody().length()\n+                        + \"\\r\\n\");\n+        scanHttpResponseReceive(msg);\n+\n+        assertThat(alertsRaised.size(), equalTo(0));\n+    }\n+\n+    @Test\n+    public void cookieNotOnIgnoreList() throws HttpMalformedHeaderException {", "originalCommit": "ccfe3b32ae86a7f722f011f2c52754df8b315bd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc2NDYyOA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r513764628", "bodyText": "This should be done in the above if and before calling isLooselyScopedCookie, avoids doing all the work if the cookie is ignored.", "author": "thc202", "createdAt": "2020-10-28T21:13:59Z", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieLooselyScopedScanRule.java", "diffHunk": "@@ -58,11 +63,15 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n         // name of a host from which the response has been sent from\n         String host = msg.getRequestHeader().getHostName();\n \n+        Set<String> ignoreList = CookieUtils.getCookieIgnoreList(getModel());\n+\n         // find all loosely scoped cookies\n         List<HttpCookie> looselyScopedCookies = new LinkedList<HttpCookie>();\n         for (HttpCookie cookie : cookies) {\n             if (isLooselyScopedCookie(cookie, host)) {\n-                looselyScopedCookies.add(cookie);\n+                if (!ignoreList.contains(cookie.getName())) {", "originalCommit": "ccfe3b32ae86a7f722f011f2c52754df8b315bd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODk2OA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r514068968", "bodyText": "Could you add the condition to the above if instead of nesting? (Same comment for the other scan rule.)", "author": "thc202", "createdAt": "2020-10-29T08:06:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc2NDYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5NTIyMg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r514095222", "bodyText": "Done.\nThe other rule has if-elif nested structure. I'd suggest to not merge conditionals there.", "author": "dhruvil-93", "createdAt": "2020-10-29T08:53:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc2NDYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5NjkyMw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r514096923", "bodyText": "I was suggesting adding to the if that continues, it does not add additional nesting and is straightforward to read.", "author": "thc202", "createdAt": "2020-10-29T08:56:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc2NDYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEwMDQ4MA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r514100480", "bodyText": "Makes sense. Updated.", "author": "dhruvil-93", "createdAt": "2020-10-29T09:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc2NDYyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc2NTI3Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r513765277", "bodyText": "This should be done in the above if, same reason as the previous comment.", "author": "thc202", "createdAt": "2020-10-28T21:15:07Z", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieSameSiteScanRule.java", "diffHunk": "@@ -62,19 +66,30 @@ private void checkCookies(HttpMessage msg, int id, String cookieHeader) {\n         if (cookies.isEmpty()) {\n             return;\n         }\n+\n+        Set<String> ignoreList = CookieUtils.getCookieIgnoreList(getModel());\n+\n         for (String cookie : cookies) {\n             if (CookieUtils.isExpired(cookie)) {\n                 continue;\n             }\n+            boolean isInIgnoreList = ignoreList.contains(CookieUtils.getCookieName(cookie));", "originalCommit": "ccfe3b32ae86a7f722f011f2c52754df8b315bd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg4MTgwNA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2592#discussion_r514881804", "bodyText": "Updated PR", "author": "dhruvil-93", "createdAt": "2020-10-30T05:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc2NTI3Nw=="}], "type": "inlineReview"}, {"oid": "7490ab8bdd2fd08e6475477c96c459fe1dc0e719", "url": "https://github.com/zaproxy/zap-extensions/commit/7490ab8bdd2fd08e6475477c96c459fe1dc0e719", "message": "Allow to ignore cookies in same site and loosely scoped scan rules\n\nSigned-off-by: Dhruvilsinh Vaghela <dhruvil.vaghela@outlook.com>", "committedDate": "2020-10-28T21:17:06Z", "type": "commit"}, {"oid": "14af706386098966e34279087bf2470ccd80a532", "url": "https://github.com/zaproxy/zap-extensions/commit/14af706386098966e34279087bf2470ccd80a532", "message": "Fix typo in changelog. Rename newly added tests appropriately.\n\nSigned-off-by: Dhruvilsinh Vaghela <dhruvil.vaghela@outlook.com>", "committedDate": "2020-10-28T21:20:41Z", "type": "commit"}, {"oid": "3a8723e4c582b3b08b77a876e8b6f5026d166dcc", "url": "https://github.com/zaproxy/zap-extensions/commit/3a8723e4c582b3b08b77a876e8b6f5026d166dcc", "message": "Simplify condition check for ignore cookie list to avoid unnecessary processing\n\nSigned-off-by: Dhruvilsinh Vaghela <dhruvil.vaghela@outlook.com>", "committedDate": "2020-10-28T21:27:33Z", "type": "commit"}, {"oid": "e34782d66624b99aa8eba5a6390fb35540e8dc6d", "url": "https://github.com/zaproxy/zap-extensions/commit/e34782d66624b99aa8eba5a6390fb35540e8dc6d", "message": "Code formatting\n\nSigned-off-by: Dhruvilsinh Vaghela <dhruvil.vaghela@outlook.com>", "committedDate": "2020-10-28T21:35:22Z", "type": "commit"}, {"oid": "c37a0f6377d17b6cd6aba6f0240bb80f13534243", "url": "https://github.com/zaproxy/zap-extensions/commit/c37a0f6377d17b6cd6aba6f0240bb80f13534243", "message": "Reduce nesting in conditionals as per feedback\n\nSigned-off-by: Dhruvilsinh Vaghela <dhruvil.vaghela@outlook.com>", "committedDate": "2020-10-29T08:49:43Z", "type": "commit"}, {"oid": "94824e8d10df0fea2ed51e238995cc3568daafd7", "url": "https://github.com/zaproxy/zap-extensions/commit/94824e8d10df0fea2ed51e238995cc3568daafd7", "message": "Merge conditionals for readability\n\nSigned-off-by: Dhruvilsinh Vaghela <dhruvil.vaghela@outlook.com>", "committedDate": "2020-10-29T08:59:17Z", "type": "commit"}, {"oid": "56a857ae7a70f9a264604a3301405aa650b68fc8", "url": "https://github.com/zaproxy/zap-extensions/commit/56a857ae7a70f9a264604a3301405aa650b68fc8", "message": "Code formatting\n\nSigned-off-by: Dhruvilsinh Vaghela <dhruvil.vaghela@outlook.com>", "committedDate": "2020-10-29T09:05:14Z", "type": "commit"}]}