{"pr_number": 2364, "pr_title": "Use OpenAPI examples to generate Values in Requests on behalf of SDA SE", "pr_createdAt": "2020-04-06T16:50:17Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2364", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzU3OA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083578", "bodyText": "This should be done before instantiating the above StringBuilder.", "author": "thc202", "createdAt": "2020-04-25T15:21:57Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/BodyGenerator.java", "diffHunk": "@@ -100,8 +102,23 @@ public String generate(Schema<?> schema) {\n     }\n \n     private String generateFromArraySchema(ArraySchema schema) {\n+        if (schema.getExample() instanceof String) {\n+            return (String) schema.getExample();\n+        }\n+\n         StringBuilder json = new StringBuilder();\n+\n+        if (schema.getExample() instanceof Iterable) {", "originalCommit": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTExMTY1Ng==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415111656", "bodyText": "I've now remove the StringBuilder completely (as suggested by IntelliJ) as it unnecessary. (413785c)", "author": "J12934", "createdAt": "2020-04-25T17:58:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzU3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzU4Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083587", "bodyText": "The exception (at least the message) should be included.", "author": "thc202", "createdAt": "2020-04-25T15:22:01Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/BodyGenerator.java", "diffHunk": "@@ -100,8 +102,23 @@ public String generate(Schema<?> schema) {\n     }\n \n     private String generateFromArraySchema(ArraySchema schema) {\n+        if (schema.getExample() instanceof String) {\n+            return (String) schema.getExample();\n+        }\n+\n         StringBuilder json = new StringBuilder();\n+\n+        if (schema.getExample() instanceof Iterable) {\n+            try {\n+                return Json.mapper().writeValueAsString(schema.getExample());\n+            } catch (JsonProcessingException e) {\n+                LOG.warn(\n+                        \"Failed to encode Example Object. Falling back to default example generation\");", "originalCommit": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzYwMQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083601", "bodyText": "private static (although could be inlined).", "author": "thc202", "createdAt": "2020-04-25T15:22:05Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -203,6 +207,14 @@ public String getEnumValue(Schema<?> schema) {\n         return value;\n     }\n \n+    public boolean hasExample(Schema<?> schema) {", "originalCommit": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzYxNg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083616", "bodyText": "This seems unnecessary, the getter can be called directly like in BodyGenerator.", "author": "thc202", "createdAt": "2020-04-25T15:22:09Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -203,6 +207,14 @@ public String getEnumValue(Schema<?> schema) {\n         return value;\n     }\n \n+    public boolean hasExample(Schema<?> schema) {\n+        return schema.getExample() != null;\n+    }\n+\n+    public Object getExample(Schema<?> schema) {", "originalCommit": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzYyNg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083626", "bodyText": "I'd suggest reverting this, it avoids generating a value when not needed (header parameters).", "author": "thc202", "createdAt": "2020-04-25T15:22:14Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/PathGenerator.java", "diffHunk": "@@ -38,11 +38,10 @@ public String generateFullPath(OperationModel operationModel) {\n                     continue;\n                 }\n                 String parameterType = parameter.getIn();\n+                String value = dataGenerator.generate(parameter.getName(), parameter);", "originalCommit": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzYzNA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083634", "bodyText": "Better remove the example fields than change the tests, these should not test the example logic.", "author": "thc202", "createdAt": "2020-04-25T15:22:19Z", "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/AbstractServerTest.java", "diffHunk": "@@ -59,11 +59,11 @@ protected static void checkPetStoreRequests(\n         // Check all of the expected URLs have been accessed and with the right data\n         assertTrue(accessedUrls.containsKey(\"POST \" + baseUrl + \"/pet\"));\n         assertEquals(\n-                \"{\\\"id\\\":10,\\\"category\\\":{\\\"id\\\":10,\\\"name\\\":\\\"John Doe\\\"},\\\"name\\\":\\\"John Doe\\\",\\\"photoUrls\\\":[\\\"John Doe\\\"],\\\"tags\\\":[{\\\"id\\\":10,\\\"name\\\":\\\"John Doe\\\"}],\\\"status\\\":\\\"available\\\"}\",\n+                \"{\\\"id\\\":10,\\\"category\\\":{\\\"id\\\":10,\\\"name\\\":\\\"John Doe\\\"},\\\"name\\\":\\\"doggie\\\",\\\"photoUrls\\\":[\\\"John Doe\\\"],\\\"tags\\\":[{\\\"id\\\":10,\\\"name\\\":\\\"John Doe\\\"}],\\\"status\\\":\\\"available\\\"}\",", "originalCommit": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY1Mw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083653", "bodyText": "FromSchema or InSchema?", "author": "thc202", "createdAt": "2020-04-25T15:22:23Z", "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/v3/BodyGeneratorUnitTest.java", "diffHunk": "@@ -301,6 +301,79 @@ public void shouldReadAdditionalMapObject() throws IOException {\n                 request);\n     }\n \n+    @Test\n+    public void shouldUseExampleFromRequest() throws IOException {", "originalCommit": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEyNTE5Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415125197", "bodyText": "Did you mean Request instead of Schema?\nI've renamed the Method to ...InRequest which is more fitting \ud83d\udc4d", "author": "J12934", "createdAt": "2020-04-25T19:14:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3MjM5MA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415672390", "bodyText": "I thought that was referring to where the examples were (following tests are named like that), not where they will be used(?). Technically they are all in the request so seems redundant.", "author": "thc202", "createdAt": "2020-04-27T09:52:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3Nzk0Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415677947", "bodyText": "Oh yeah that a good point. Removed the part.", "author": "J12934", "createdAt": "2020-04-27T10:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4MzY2NQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r415083665", "bodyText": "Debug?", "author": "thc202", "createdAt": "2020-04-25T15:22:26Z", "path": "addOns/openapi/src/test/java/org/zaproxy/zap/extension/openapi/v3/OpenApiUnitTest.java", "diffHunk": "@@ -152,6 +152,55 @@ public void handleMessage(HttpMessage message, int initiator) {\n         checkPetStoreRequests(accessedUrls, altHost);\n     }\n \n+    @Test\n+    public void shouldExplorePetStoreYamlWithExamples()\n+            throws NullPointerException, IOException, SwaggerException {\n+        String test = \"/PetStoreYamlExamples/\";\n+        String defnName = \"defn.yaml\";\n+\n+        this.nano.addHandler(\n+                new DefnServerHandler(test, defnName, \"PetStore_defn_with_examples.yaml\"));\n+\n+        Requestor requestor = new Requestor(HttpSender.MANUAL_REQUEST_INITIATOR);\n+        HttpMessage defnMsg = this.getHttpMessage(test + defnName);\n+        SwaggerConverter converter =\n+                new SwaggerConverter(\n+                        requestor.getResponseBody(defnMsg.getRequestHeader().getURI()), null);\n+        // No parsing errors\n+        assertThat(converter.getErrorMessages(), is(empty()));\n+\n+        final Map<String, String> accessedUrls = new HashMap<String, String>();\n+        RequesterListener listener =\n+                new RequesterListener() {\n+                    @Override\n+                    public void handleMessage(HttpMessage message, int initiator) {\n+                        accessedUrls.put(\n+                                message.getRequestHeader().getMethod()\n+                                        + \" \"\n+                                        + message.getRequestHeader().getURI().toString(),\n+                                message.getRequestBody().toString());\n+                    }\n+                };\n+        requestor.addListener(listener);\n+        requestor.run(converter.getRequestModels());\n+\n+        System.out.println(accessedUrls.keySet());", "originalCommit": "7f29f05d3007ad6ef5ccd83ed9080cd51af24be0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "501bd766a9e2b657712a992254d329b85b4fb612", "url": "https://github.com/zaproxy/zap-extensions/commit/501bd766a9e2b657712a992254d329b85b4fb612", "message": "Use OpenAPI 3 example in URL Path & Query", "committedDate": "2020-04-25T19:16:22Z", "type": "commit"}, {"oid": "51d2ebc5145bb8e91d736b56f20958715d4261fe", "url": "https://github.com/zaproxy/zap-extensions/commit/51d2ebc5145bb8e91d736b56f20958715d4261fe", "message": "Duplicate PetStore OpenAPI Spec to add example to", "committedDate": "2020-04-25T19:16:23Z", "type": "commit"}, {"oid": "62686acf09062a54f8cfc3e2b1551a663d95f0ff", "url": "https://github.com/zaproxy/zap-extensions/commit/62686acf09062a54f8cfc3e2b1551a663d95f0ff", "message": "Add example values to OpenAPI Spec", "committedDate": "2020-04-25T19:16:23Z", "type": "commit"}, {"oid": "10df8d9791c27c1241a2177ffa34fbdbab4be508", "url": "https://github.com/zaproxy/zap-extensions/commit/10df8d9791c27c1241a2177ffa34fbdbab4be508", "message": "Add test to check behaviour of crawler for OpenAPI Specs using examples\n\nThis test is a bit different to the others in the test file,\nas these use the same assertion helper function which asserts\nthat **ALL** the urls are right.\nThis doesn't really work here as the point of the test is that\nthe urls are supposed to be different.", "committedDate": "2020-04-25T19:16:23Z", "type": "commit"}, {"oid": "a237b68699a581ab4e2a51288c1998096fdc50b6", "url": "https://github.com/zaproxy/zap-extensions/commit/a237b68699a581ab4e2a51288c1998096fdc50b6", "message": "Formatting fix", "committedDate": "2020-04-25T19:16:28Z", "type": "forcePushed"}, {"oid": "b8a207febba93c5c31090ad3e260767b8ba6f7dd", "url": "https://github.com/zaproxy/zap-extensions/commit/b8a207febba93c5c31090ad3e260767b8ba6f7dd", "message": "Use example from object schema as values", "committedDate": "2020-05-05T10:18:18Z", "type": "commit"}, {"oid": "3654e18d60cd4f00ff5e00d3596f292ac04ba59f", "url": "https://github.com/zaproxy/zap-extensions/commit/3654e18d60cd4f00ff5e00d3596f292ac04ba59f", "message": "Update PetStore test which contains an example property", "committedDate": "2020-05-05T10:18:18Z", "type": "commit"}, {"oid": "179d77d0a5291bc75c64ef3daa5df0ce2ce0f9e6", "url": "https://github.com/zaproxy/zap-extensions/commit/179d77d0a5291bc75c64ef3daa5df0ce2ce0f9e6", "message": "Use example value in complex form data string", "committedDate": "2020-05-05T10:18:19Z", "type": "commit"}, {"oid": "9b02c3cee4d9d94ce656cb00973db2b21182ceb6", "url": "https://github.com/zaproxy/zap-extensions/commit/9b02c3cee4d9d94ce656cb00973db2b21182ceb6", "message": "Add expected response for OpenAPI v2 Test", "committedDate": "2020-05-05T10:18:19Z", "type": "commit"}, {"oid": "a78b16e8d7cbd823bbdd241d41f33f2d9160ea13", "url": "https://github.com/zaproxy/zap-extensions/commit/a78b16e8d7cbd823bbdd241d41f33f2d9160ea13", "message": "Update Expected Response in Abstract Test Class", "committedDate": "2020-05-05T10:18:19Z", "type": "commit"}, {"oid": "950743cd3da2938a382450bc5feb899b8956a228", "url": "https://github.com/zaproxy/zap-extensions/commit/950743cd3da2938a382450bc5feb899b8956a228", "message": "Add test case for examples in arrays", "committedDate": "2020-05-05T10:18:19Z", "type": "commit"}, {"oid": "d412f45608c281d95f3c8466077c1c485b4c6461", "url": "https://github.com/zaproxy/zap-extensions/commit/d412f45608c281d95f3c8466077c1c485b4c6461", "message": "Allow to specify full examples for arrays", "committedDate": "2020-05-05T10:18:19Z", "type": "commit"}, {"oid": "fe532ca405f9a944d1cb50e1447666f57c0061d8", "url": "https://github.com/zaproxy/zap-extensions/commit/fe532ca405f9a944d1cb50e1447666f57c0061d8", "message": "Update comments in Example OpenAPI Specs", "committedDate": "2020-05-05T10:18:19Z", "type": "commit"}, {"oid": "108d5c084960a58d51b97977f7e4243beb534ae8", "url": "https://github.com/zaproxy/zap-extensions/commit/108d5c084960a58d51b97977f7e4243beb534ae8", "message": "Remove unnecessary StringBuilder", "committedDate": "2020-05-05T10:18:19Z", "type": "commit"}, {"oid": "41d8e628686a3f9222c59510fbd0a44e89333ee8", "url": "https://github.com/zaproxy/zap-extensions/commit/41d8e628686a3f9222c59510fbd0a44e89333ee8", "message": "Include exception in warning log", "committedDate": "2020-05-05T10:18:19Z", "type": "commit"}, {"oid": "ed6b994728f9595f3f0d0c4f1eefb1a9b0077aeb", "url": "https://github.com/zaproxy/zap-extensions/commit/ed6b994728f9595f3f0d0c4f1eefb1a9b0077aeb", "message": "Inline get and has example methods", "committedDate": "2020-05-05T10:18:19Z", "type": "commit"}, {"oid": "6928d4c1ca2a6125302ca98ee950822ca4610d97", "url": "https://github.com/zaproxy/zap-extensions/commit/6928d4c1ca2a6125302ca98ee950822ca4610d97", "message": "Move value generation one level lower", "committedDate": "2020-05-05T10:18:20Z", "type": "commit"}, {"oid": "273e54f2bd1e586644e4c87251166163924695b3", "url": "https://github.com/zaproxy/zap-extensions/commit/273e54f2bd1e586644e4c87251166163924695b3", "message": "Remove example from general OpenAPI tests", "committedDate": "2020-05-05T10:19:09Z", "type": "commit"}, {"oid": "050a3b5faeece7b422c774e84da6b7ea8bce0c10", "url": "https://github.com/zaproxy/zap-extensions/commit/050a3b5faeece7b422c774e84da6b7ea8bce0c10", "message": "Add for OpenAPI 2.0 using x-example attributes", "committedDate": "2020-05-05T10:19:10Z", "type": "commit"}, {"oid": "6895afa94379bf53a0bb3de4f80a9a71e3a7751f", "url": "https://github.com/zaproxy/zap-extensions/commit/6895afa94379bf53a0bb3de4f80a9a71e3a7751f", "message": "Clarify method name", "committedDate": "2020-05-05T10:30:30Z", "type": "commit"}, {"oid": "780df02c1cfa32ec6d312e435813f1d8e81e7a1c", "url": "https://github.com/zaproxy/zap-extensions/commit/780df02c1cfa32ec6d312e435813f1d8e81e7a1c", "message": "Remove forgotten debug log", "committedDate": "2020-05-05T10:30:48Z", "type": "commit"}, {"oid": "cfff900e39a69f2df1545645ceec2c0c783b1b75", "url": "https://github.com/zaproxy/zap-extensions/commit/cfff900e39a69f2df1545645ceec2c0c783b1b75", "message": "Add note to changelog", "committedDate": "2020-05-05T10:31:09Z", "type": "commit"}, {"oid": "56c148b414eb0f61758c196f5c691d4d001058bb", "url": "https://github.com/zaproxy/zap-extensions/commit/56c148b414eb0f61758c196f5c691d4d001058bb", "message": "Remove redundant part from test name", "committedDate": "2020-05-05T10:31:09Z", "type": "commit"}, {"oid": "9212b49fc99830415285907ff3a87a8b54200ac5", "url": "https://github.com/zaproxy/zap-extensions/commit/9212b49fc99830415285907ff3a87a8b54200ac5", "message": "Add SDA SE to OpenAPI Extension Author List", "committedDate": "2020-05-05T10:31:09Z", "type": "commit"}, {"oid": "9212b49fc99830415285907ff3a87a8b54200ac5", "url": "https://github.com/zaproxy/zap-extensions/commit/9212b49fc99830415285907ff3a87a8b54200ac5", "message": "Add SDA SE to OpenAPI Extension Author List", "committedDate": "2020-05-05T10:31:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0NzgwMw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r420047803", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    author.set(\"ZAP Dev Team plus Joanna Bona, Nathalie Bouchahine, Artur Grzesica, Mohammad Kamar, Markus Kiss, Michal Materniak, Marcin Spiewak and SDA SE Open Industry Solutions\")\n          \n          \n            \n                    author.set(\"ZAP Dev Team plus Joanna Bona, Nathalie Bouchahine, Artur Grzesica, Mohammad Kamar, Markus Kiss, Michal Materniak, Marcin Spiewak, and SDA SE Open Industry Solutions\")", "author": "kingthorin", "createdAt": "2020-05-05T11:46:35Z", "path": "addOns/openapi/openapi.gradle.kts", "diffHunk": "@@ -9,7 +9,7 @@ zapAddOn {\n     zapVersion.set(\"2.9.0\")\n \n     manifest {\n-        author.set(\"ZAP Dev Team plus Joanna Bona, Nathalie Bouchahine, Artur Grzesica, Mohammad Kamar, Markus Kiss, Michal Materniak and Marcin Spiewak\")\n+        author.set(\"ZAP Dev Team plus Joanna Bona, Nathalie Bouchahine, Artur Grzesica, Mohammad Kamar, Markus Kiss, Michal Materniak, Marcin Spiewak and SDA SE Open Industry Solutions\")", "originalCommit": "9212b49fc99830415285907ff3a87a8b54200ac5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MTczNQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r420051735", "bodyText": "Is there a problem handling this? Will it fail if a v2 defn with examples is encountered in the wild?", "author": "kingthorin", "createdAt": "2020-05-05T11:54:20Z", "path": "addOns/openapi/src/test/resources/org/zaproxy/zap/extension/openapi/v2/PetStore_defn.json", "diffHunk": "@@ -983,8 +983,7 @@\n                \"$ref\":\"#/definitions/Category\"\n             },\n             \"name\":{\n-               \"type\":\"string\",\n-               \"example\":\"doggie\"\n+               \"type\":\"string\"", "originalCommit": "9212b49fc99830415285907ff3a87a8b54200ac5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MjEyOA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2364#discussion_r420052128", "bodyText": "Same comment, can this not be handled gracefully somehow?", "author": "kingthorin", "createdAt": "2020-05-05T11:55:09Z", "path": "addOns/openapi/src/test/resources/org/zaproxy/zap/extension/openapi/v2/PetStore_defn.yaml", "diffHunk": "@@ -667,7 +667,6 @@ definitions:\n         $ref: \"#/definitions/Category\"\n       name:\n         type: \"string\"\n-        example: \"doggie\"", "originalCommit": "9212b49fc99830415285907ff3a87a8b54200ac5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cd2f85e212a984e9124b74a2e099019d43fefd14", "url": "https://github.com/zaproxy/zap-extensions/commit/cd2f85e212a984e9124b74a2e099019d43fefd14", "message": "Use Oxford Comma\n\nCo-authored-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-05-05T12:16:30Z", "type": "commit"}]}