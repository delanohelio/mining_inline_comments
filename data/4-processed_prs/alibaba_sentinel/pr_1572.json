{"pr_number": 1572, "pr_title": "Polish Dubbo 2.6.x adapter", "pr_createdAt": "2020-06-29T07:21:01Z", "pr_url": "https://github.com/alibaba/Sentinel/pull/1572", "timeline": [{"oid": "f7a0501f6c59e2ed13bb4ce2d67d99adf09fa234", "url": "https://github.com/alibaba/Sentinel/commit/f7a0501f6c59e2ed13bb4ce2d67d99adf09fa234", "message": "Polish code of Dubbo 2.6.x adapter\n\n- Unify Dubbo callback registry into DubboAdapterGlobalConfig\n- Polish default fallback implementation\n\nSigned-off-by: Eric Zhao <sczyh16@gmail.com>", "committedDate": "2020-06-29T07:13:36Z", "type": "commit"}, {"oid": "0d7ec4306020e0e2ec905d0fbc7b425144053c8e", "url": "https://github.com/alibaba/Sentinel/commit/0d7ec4306020e0e2ec905d0fbc7b425144053c8e", "message": "Update README.md of sentinel-dubbo-adapter\n\nSigned-off-by: Eric Zhao <sczyh16@gmail.com>", "committedDate": "2020-06-29T07:13:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwNzM4Nw==", "url": "https://github.com/alibaba/Sentinel/pull/1572#discussion_r458907387", "bodyText": "If provider prefix is configured, the methodResourceName has a prefix which is marked for provider, it's useful when searching with prefix in dashboard menu(one scene is that only want to view all provider resources), but the interfaceResourceName has no prefix. How about also adding prefix for interface resource?\nMaybe getInterfaceResourceName can be added in AbstractDubboFilter.Same  for consumer Filter.\nBesides, is there a need to distinguish between interface and method via another prefix, a little tangled.\n@sczyh30 @jasonjoo2010", "author": "cdfive", "createdAt": "2020-07-22T16:07:13Z", "path": "sentinel-adapter/sentinel-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/SentinelDubboProviderFilter.java", "diffHunk": "@@ -56,19 +53,20 @@ public SentinelDubboProviderFilter() {\n     @Override\n     public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {\n         // Get origin caller.\n-        String origin = DubboOriginParserRegistry.getDubboOriginParser().parse(invoker, invocation);\n+        String origin = DubboAdapterGlobalConfig.getOriginParser().parse(invoker, invocation);\n         if (null == origin) {\n             origin = \"\";\n         }\n \n         Entry interfaceEntry = null;\n         Entry methodEntry = null;\n         try {\n-            String resourceName = getResourceName(invoker, invocation, DubboConfig.getDubboProviderPrefix());\n+            String methodResourceName = getMethodResourceName(invoker, invocation,\n+                DubboAdapterGlobalConfig.getDubboProviderPrefix());\n             String interfaceName = invoker.getInterface().getName();\n-            ContextUtil.enter(resourceName, origin);\n+            ContextUtil.enter(methodResourceName, origin);\n             interfaceEntry = SphU.entry(interfaceName, ResourceTypeConstants.COMMON_RPC, EntryType.IN);\n-            methodEntry = SphU.entry(resourceName, ResourceTypeConstants.COMMON_RPC,\n+            methodEntry = SphU.entry(methodResourceName, ResourceTypeConstants.COMMON_RPC,\n                 EntryType.IN, invocation.getArguments());", "originalCommit": "0d7ec4306020e0e2ec905d0fbc7b425144053c8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4MDgyNQ==", "url": "https://github.com/alibaba/Sentinel/pull/1572#discussion_r459180825", "bodyText": "Yes, the interface resource name may be appended by the same prefix (if set).", "author": "sczyh30", "createdAt": "2020-07-23T02:13:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwNzM4Nw=="}], "type": "inlineReview"}, {"oid": "2131e8dc6c887e4466db479c905279ec13aa9434", "url": "https://github.com/alibaba/Sentinel/commit/2131e8dc6c887e4466db479c905279ec13aa9434", "message": "Append interface resource name with configured prefix in Dubbo 2.6.x adapter\n\nSigned-off-by: Eric Zhao <sczyh16@gmail.com>", "committedDate": "2020-07-28T06:15:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4MzE2Mw==", "url": "https://github.com/alibaba/Sentinel/pull/1572#discussion_r461683163", "bodyText": "It seems that normally when overloading methods, the method which has less parameters call the method which has more. This is the opposite, but it is okay.", "author": "cdfive", "createdAt": "2020-07-28T15:43:49Z", "path": "sentinel-adapter/sentinel-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/AbstractDubboFilter.java", "diffHunk": "@@ -43,15 +43,24 @@ protected String getResourceName(Invoker<?> invoker, Invocation invocation) {\n         return buf.toString();\n     }\n \n-    protected String getResourceName(Invoker<?> invoker, Invocation invocation, String prefix) {\n+    protected String getMethodResourceName(Invoker<?> invoker, Invocation invocation, String prefix) {\n         if (StringUtil.isBlank(prefix)) {\n-            return getResourceName(invoker, invocation);\n+            return getMethodResourceName(invoker, invocation);\n         }\n         StringBuilder buf = new StringBuilder(64);\n         return buf.append(prefix)\n-                .append(getResourceName(invoker, invocation))\n-                .toString();\n+            .append(getMethodResourceName(invoker, invocation))\n+            .toString();\n+    }\n \n+    protected String getInterfaceName(Invoker<?> invoker) {\n+        return invoker.getInterface().getName();\n+    }\n \n+    protected String getInterfaceName(Invoker<?> invoker, String prefix) {\n+        if (StringUtil.isBlank(prefix)) {\n+            return getInterfaceName(invoker);\n+        }\n+        return prefix + getInterfaceName(invoker);", "originalCommit": "2131e8dc6c887e4466db479c905279ec13aa9434", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4NzYwOQ==", "url": "https://github.com/alibaba/Sentinel/pull/1572#discussion_r461687609", "bodyText": "Besides, I found that dubbo-adapter of 2.7.x has a useGroupAndVersion setting.\nString getMethodResourceName(Invoker<?> invoker, Invocation invocation, Boolean useGroupAndVersion).\nDubboConfig.getDubboInterfaceGroupAndVersionEnabled(), csp.sentinel.dubbo.interface.group.version.enabled\nDo we need to add this in 2.6.x?\nAnother setting is csp.sentinel.dubbo.trace.biz.exception.enabled in 2.7.x, and it is unused.", "author": "cdfive", "createdAt": "2020-07-28T15:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4MzE2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY5NTYyNw==", "url": "https://github.com/alibaba/Sentinel/pull/1572#discussion_r462695627", "bodyText": "Besides, I found that dubbo-adapter of 2.7.x has a useGroupAndVersion setting.\nString getMethodResourceName(Invoker<?> invoker, Invocation invocation, Boolean useGroupAndVersion).\nDubboConfig.getDubboInterfaceGroupAndVersionEnabled(), csp.sentinel.dubbo.interface.group.version.enabled\nDo we need to add this in 2.6.x?\n\nYes, we could add this in the future. We may open another issue to address this.\n\nAnother setting is csp.sentinel.dubbo.trace.biz.exception.enabled in 2.7.x, and it is unused.\n\nActually I don't think it's useful.", "author": "sczyh30", "createdAt": "2020-07-30T02:22:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4MzE2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1OTMyNw==", "url": "https://github.com/alibaba/Sentinel/pull/1572#discussion_r463359327", "bodyText": "OK, I agree with you. IMHO the prefix is more useful, maybe enough at present.", "author": "cdfive", "createdAt": "2020-07-31T01:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4MzE2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2NzYxMA==", "url": "https://github.com/alibaba/Sentinel/pull/1572#discussion_r463367610", "bodyText": "OK, I agree with you. IMHO the prefix is more useful, maybe enough at present.\n\nThe group and version info can be useful. This could be contributed by community later.", "author": "sczyh30", "createdAt": "2020-07-31T02:06:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4MzE2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM5MDY2Ng==", "url": "https://github.com/alibaba/Sentinel/pull/1572#discussion_r463390666", "bodyText": "Thanks for detail description, group and version are useful indeed, got it : )", "author": "cdfive", "createdAt": "2020-07-31T03:48:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4MzE2Mw=="}], "type": "inlineReview"}]}