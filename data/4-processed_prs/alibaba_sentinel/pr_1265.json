{"pr_number": 1265, "pr_title": "Add SPI for logger", "pr_createdAt": "2020-01-18T15:48:46Z", "pr_url": "https://github.com/alibaba/Sentinel/pull/1265", "timeline": [{"oid": "986117abce6b7a69f0fa4b079281bd65a78edce1", "url": "https://github.com/alibaba/Sentinel/commit/986117abce6b7a69f0fa4b079281bd65a78edce1", "message": "Fix hardcoded file separator", "committedDate": "2020-01-13T02:44:06Z", "type": "commit"}, {"oid": "baffb93b837e17aa4dcfa2bce0955003d6e27e51", "url": "https://github.com/alibaba/Sentinel/commit/baffb93b837e17aa4dcfa2bce0955003d6e27e51", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-01-18T13:18:00Z", "type": "commit"}, {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4", "url": "https://github.com/alibaba/Sentinel/commit/7124a6178738ade54615754e8afb338cc3d28bc4", "message": "Add SPI for logger", "committedDate": "2020-01-18T15:38:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368286214", "bodyText": "Because types in LogType share the same interface is it necessary enabling users specify the same implementation and merging all the logs?\nSomething like LogType[] value() and new type ALL in LogType.", "author": "jasonjoo2010", "createdAt": "2020-01-19T11:22:11Z", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/LogTarget.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+import java.lang.annotation.*;\n+\n+/**\n+ * @author xue8\n+ */\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+@Documented\n+public @interface LogTarget {\n+    LogType value() default LogType.RECORD_LOG;", "originalCommit": "7124a6178738ade54615754e8afb338cc3d28bc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NzUwMQ==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368287501", "bodyText": "And maybe we should add a new property something like order to specify the priority because of we may implement several extensions for general logger like log4j/log4j2, logback, slf4j, commons-logging, etc.", "author": "jasonjoo2010", "createdAt": "2020-01-19T11:43:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDQ1MA==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368294450", "bodyText": "Ok, i will do it as soon as possible.", "author": "xue8", "createdAt": "2020-01-19T13:34:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwNjY1NQ==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368306655", "bodyText": "Because types in LogType share the same interface is it necessary enabling users specify the same implementation and merging all the logs?\nSomething like LogType[] value() and new type ALL in LogType.\n\nBecause the log and logger are one-to-one, if all the logs use the same implementation, they will be using the same logger, then it is impossible to configure the logger configuration different in XML.", "author": "xue8", "createdAt": "2020-01-19T16:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0MTExNw==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368341117", "bodyText": "Because types in LogType share the same interface is it necessary enabling users specify the same implementation and merging all the logs?\nSomething like LogType[] value() and new type ALL in LogType.\n\nBecause the log and logger are one-to-one, if all the logs use the same implementation, they will be using the same logger, then it is impossible to configure the logger configuration different in XML.\n\nOkay i know. So they are stateful. That's fine.", "author": "jasonjoo2010", "createdAt": "2020-01-20T01:18:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjI3MA==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368286270", "bodyText": "Is it necessary for us adding more levels like error, debug?", "author": "jasonjoo2010", "createdAt": "2020-01-19T11:23:11Z", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+/**\n+ * Provide logger SPI interface\n+ * @author xue8\n+ */\n+public interface Logger {", "originalCommit": "7124a6178738ade54615754e8afb338cc3d28bc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYwNDgwNQ==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368604805", "bodyText": "@sczyh30 How to resolve the compatibility between different loggers?\nOne proposal is that we can clarify to use one and adapt it in actually implementations.", "author": "jasonjoo2010", "createdAt": "2020-01-20T15:26:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4Njk2MQ==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368286961", "bodyText": "And don't forget to add license to new files.", "author": "jasonjoo2010", "createdAt": "2020-01-19T11:34:39Z", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.alibaba.csp.sentinel.log;", "originalCommit": "7124a6178738ade54615754e8afb338cc3d28bc4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NzEzNQ==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368287135", "bodyText": "I think it's better placing this kind of module into sentinel-log folder instead of treating it just as a demo.\nHow do you think about, @sczyh30", "author": "jasonjoo2010", "createdAt": "2020-01-19T11:37:43Z", "path": "sentinel-demo/sentinel-demo-log-logback/pom.xml", "diffHunk": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "originalCommit": "7124a6178738ade54615754e8afb338cc3d28bc4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NzMxOQ==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368287319", "bodyText": "May be the modifier should be clear as private and same as another implementation.", "author": "jasonjoo2010", "createdAt": "2020-01-19T11:40:52Z", "path": "sentinel-demo/sentinel-demo-log-logback/src/main/java/com/alibaba/csp/sentinel/demo/log/logback/CommandCenterLogLoggerImpl.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.alibaba.csp.sentinel.demo.log.logback;\n+\n+import com.alibaba.csp.sentinel.log.LogTarget;\n+import com.alibaba.csp.sentinel.log.LogType;\n+import com.alibaba.csp.sentinel.log.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@LogTarget(value = LogType.COMMAND_CENTER_LOG)\n+public class CommandCenterLogLoggerImpl implements Logger {\n+    org.slf4j.Logger logger = LoggerFactory.getLogger(\"commandCenterLogLogger\");", "originalCommit": "7124a6178738ade54615754e8afb338cc3d28bc4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NzU2MQ==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368287561", "bodyText": "Shall we add some assertion in this unit test?", "author": "jasonjoo2010", "createdAt": "2020-01-19T11:45:10Z", "path": "sentinel-demo/sentinel-demo-log-logback/src/test/java/com/alibaba/csp/sentinel/demo/log/logback/CommandCenterLogTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.alibaba.csp.sentinel.demo.log.logback;\n+\n+import com.alibaba.csp.sentinel.log.CommandCenterLog;\n+import org.junit.Test;\n+\n+/**\n+ * @author xue8\n+ */\n+public class CommandCenterLogTest {\n+    @Test\n+    public void testLogException() {\n+        Exception e = new Exception(\"ex\");\n+        CommandCenterLog.info(\"Error\", e);", "originalCommit": "7124a6178738ade54615754e8afb338cc3d28bc4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4ODExNA==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368288114", "bodyText": "Because we will not use it statically any more the handler can be non-static.", "author": "jasonjoo2010", "createdAt": "2020-01-19T11:55:40Z", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/RecordLogLogging.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+import java.util.logging.Handler;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+/**\n+ * Default logger implementation.\n+ * @author xue8\n+ */\n+public class RecordLogLogging extends LogBase implements com.alibaba.csp.sentinel.log.Logger {\n+    private static final Logger heliumRecordLog = Logger.getLogger(\"cspSentinelRecordLog\");\n+    private static final String FILE_NAME = \"sentinel-record.log\";\n+    private static Handler logHandler = null;\n+\n+    static {", "originalCommit": "7124a6178738ade54615754e8afb338cc3d28bc4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4ODMzMw==", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368288333", "bodyText": "Because there maybe different implementation for placeholder in different logging system we'd better to clarify what kind of placeholder we use.\nFor example {}.", "author": "jasonjoo2010", "createdAt": "2020-01-19T11:59:11Z", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+/**\n+ * Provide logger SPI interface\n+ * @author xue8\n+ */\n+public interface Logger {\n+    void info(String detail, Object... params);", "originalCommit": "7124a6178738ade54615754e8afb338cc3d28bc4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "da0551109b490a77a0abadb8a7635ab86afa405c", "url": "https://github.com/alibaba/Sentinel/commit/da0551109b490a77a0abadb8a7635ab86afa405c", "message": "code fix", "committedDate": "2020-01-20T04:40:19Z", "type": "commit"}, {"oid": "effad14ecc74e3683d9df8dc6f5c661891d84b9d", "url": "https://github.com/alibaba/Sentinel/commit/effad14ecc74e3683d9df8dc6f5c661891d84b9d", "message": "fix line separator hard-coded", "committedDate": "2020-01-20T06:19:31Z", "type": "commit"}, {"oid": "604898e5303e650cfc4183711fd5c7ab4612722d", "url": "https://github.com/alibaba/Sentinel/commit/604898e5303e650cfc4183711fd5c7ab4612722d", "message": "create adapters compatible with placeholders \u2018'{}'", "committedDate": "2020-01-22T07:06:54Z", "type": "commit"}, {"oid": "971b127edfb7af29bbd572fb8ba7c7c6f2699e14", "url": "https://github.com/alibaba/Sentinel/commit/971b127edfb7af29bbd572fb8ba7c7c6f2699e14", "message": "add {}", "committedDate": "2020-01-22T07:19:09Z", "type": "commit"}]}