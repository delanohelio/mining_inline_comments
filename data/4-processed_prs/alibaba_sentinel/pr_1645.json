{"pr_number": 1645, "pr_title": "Refactor the flow of request to fix #1638 for circuit breakers", "pr_createdAt": "2020-08-04T09:34:00Z", "pr_url": "https://github.com/alibaba/Sentinel/pull/1645", "timeline": [{"oid": "7c99c460b257f0201567745389d84f8bfd085c62", "url": "https://github.com/alibaba/Sentinel/commit/7c99c460b257f0201567745389d84f8bfd085c62", "message": "Refactor the flow of request to fix #1638 of circuit breakers", "committedDate": "2020-08-04T10:40:42Z", "type": "commit"}, {"oid": "b2a78be9dfd4cc69783f95e584482d4b703db772", "url": "https://github.com/alibaba/Sentinel/commit/b2a78be9dfd4cc69783f95e584482d4b703db772", "message": "fix unit tests related", "committedDate": "2020-08-04T10:40:42Z", "type": "commit"}, {"oid": "b2a78be9dfd4cc69783f95e584482d4b703db772", "url": "https://github.com/alibaba/Sentinel/commit/b2a78be9dfd4cc69783f95e584482d4b703db772", "message": "fix unit tests related", "committedDate": "2020-08-04T10:40:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTI5OA==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r467051298", "bodyText": "Thread-safe forwhenComplete.\nOther requests blocked by half-open state also can transform half-open to open, so the one request allowed by half-state maybe not  transform half-open to close.", "author": "wavesZh", "createdAt": "2020-08-07T13:47:25Z", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/slots/block/degrade/circuitbreaker/AbstractCircuitBreaker.java", "diffHunk": "@@ -99,11 +103,24 @@ protected boolean fromCloseToOpen(double snapshotValue) {\n         return false;\n     }\n \n-    protected boolean fromOpenToHalfOpen() {\n+    protected boolean fromOpenToHalfOpen(Context context) {\n         if (currentState.compareAndSet(State.OPEN, State.HALF_OPEN)) {\n             for (CircuitBreakerStateChangeObserver observer : observerRegistry.getStateChangeObservers()) {\n                 observer.onStateChange(State.OPEN, State.HALF_OPEN, rule, null);\n             }\n+            Entry entry = context.getCurEntry();\n+            entry.whenComplete(new BiConsumer<Context, Entry>() {", "originalCommit": "b2a78be9dfd4cc69783f95e584482d4b703db772", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1NzU3MA==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r467057570", "bodyText": "Thread-safe forwhenComplete.\nOther requests blocked by half-open state also can transform half-open to open, so the one request allowed by half-state maybe not  transform half-open to close.\n\n\nPlease refer to the workflow chart above.\nI think the design of Entry is non-thread-safe because it stores information of single request. One request cannot be paralleled, right?\nTalk to this piece of code the mutex between entries(requests) is ensured by CAS operation (from OPEN to HALF-OPEN). So only one request can perform open -> half -> open or open -> half -> closed.\nOr is there any other scenario I missed?", "author": "jasonjoo2010", "createdAt": "2020-08-07T13:57:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTI5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA2NTEwMw==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r467065103", "bodyText": "my mistake, no problem.", "author": "wavesZh", "createdAt": "2020-08-07T14:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTI5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3MjA4Nw==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r467072087", "bodyText": "\ud83d\ude00", "author": "jasonjoo2010", "createdAt": "2020-08-07T14:21:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTI5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxODQ3NA==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r469918474", "bodyText": "Actually IMHO \"complete\" might be more concrete. In Sentinel, \"pass\" means allowed by Sentinel (not started but pending), and \"complete\" means an invocation has completed (the blocked requests never started, so never completed).", "author": "sczyh30", "createdAt": "2020-08-13T12:36:38Z", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/slots/block/degrade/circuitbreaker/CircuitBreaker.java", "diffHunk": "@@ -46,13 +50,12 @@\n     State currentState();\n \n     /**\n-     * Record a completed request with the given response time and error (if present) and\n-     * handle state transformation of the circuit breaker.\n+     * Called when a passed invocation finished.\n      *\n-     * @param rt the response time of this entry\n-     * @param error the error of this entry (if present)\n+     * @param context context of current invocation\n+     * @param wrapper current resource\n      */\n-    void onRequestComplete(long rt, Throwable error);\n+    void afterRequestPassed(Context context, ResourceWrapper wrapper);", "originalCommit": "b2a78be9dfd4cc69783f95e584482d4b703db772", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxOTc0MQ==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r469919741", "bodyText": "And the ResourceWrapper seems unused? (it could be taken from Entry in Context)", "author": "sczyh30", "createdAt": "2020-08-13T12:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxODQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkzNDc3Ng==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r469934776", "bodyText": "pending\n\nYeah naming issues often have more than one answer mostly. I tried to make it clear for requests passed by sentinel(passed) and it will be invoked as it completed(after). Surely we can have other picks. Is onRequestComplete implicit whether sentinel guarantees it would be called no matter whether it was blocked?\nTalk to the parameters in definition it just follows similar designs in related logics and try to make it more stable in future iterations. ResourceWrapper will contains the resource information which it's useful especially in implementations in future. My opinion is more like to keep it as stability of interface.", "author": "jasonjoo2010", "createdAt": "2020-08-13T13:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxODQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3ODk2OA==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r471878968", "bodyText": "Yeah naming issues often have more than one answer mostly. I tried to make it clear for requests passed by sentinel(passed) and it will be invoked as it completed(after). Surely we can have other picks. Is onRequestComplete implicit whether sentinel guarantees it would be called no matter whether it was blocked?\n\nOriginally the semantics of onComplete means the invocation has completed, so it MUST have passed Sentinel's checking. The rejected invocations never passed, so it would never complete.\n\nTalk to the parameters in definition it just follows similar designs in related logics and try to make it more stable in future iterations. ResourceWrapper will contains the resource information which it's useful especially in implementations in future. My opinion is more like to keep it as stability of interface.\n\nOkay for me. Actually I'd like the circuit breaker to be a more generic design (e.g. the context could be generic, and metadata could be retrieved from it).", "author": "sczyh30", "createdAt": "2020-08-18T02:36:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxODQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg4MTY5NA==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r471881694", "bodyText": "Okay for me. Actually I'd like the circuit breaker to be a more generic design (e.g. the context could be generic, and metadata could be retrieved from it).\n\nNaming of callback has been reverted and it has more comments on it.\nTalk to the generic context the idea makes sense but it also may introduce more memory footprints. Maybe it can be decided in future.", "author": "jasonjoo2010", "createdAt": "2020-08-18T02:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxODQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg4MzQzMQ==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r471883431", "bodyText": "Yes we may discuss it later in a new issue.", "author": "sczyh30", "createdAt": "2020-08-18T02:53:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxODQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk3MzA3OA==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r469973078", "bodyText": "Maybe the state change need to notify CircuitBreakerStateChangeObserver.", "author": "louyuting", "createdAt": "2020-08-13T14:00:06Z", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/slots/block/degrade/circuitbreaker/AbstractCircuitBreaker.java", "diffHunk": "@@ -99,11 +103,24 @@ protected boolean fromCloseToOpen(double snapshotValue) {\n         return false;\n     }\n \n-    protected boolean fromOpenToHalfOpen() {\n+    protected boolean fromOpenToHalfOpen(Context context) {\n         if (currentState.compareAndSet(State.OPEN, State.HALF_OPEN)) {\n             for (CircuitBreakerStateChangeObserver observer : observerRegistry.getStateChangeObservers()) {\n                 observer.onStateChange(State.OPEN, State.HALF_OPEN, rule, null);\n             }\n+            Entry entry = context.getCurEntry();\n+            entry.whenComplete(new BiConsumer<Context, Entry>() {\n+                \n+                @Override\n+                public void accept(Context context, Entry entry) {\n+                    if (entry.getBlockError() != null) {\n+                        // blocked\n+                        currentState.compareAndSet(State.HALF_OPEN, State.OPEN);", "originalCommit": "b2a78be9dfd4cc69783f95e584482d4b703db772", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4NTM1NA==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r469985354", "bodyText": "Maybe the state changes need to notify CircuitBreakerStateChangeObserver.\n\nYes, absolutely.\nIt has been updated.", "author": "jasonjoo2010", "createdAt": "2020-08-13T14:16:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk3MzA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2ODIzNw==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r470368237", "bodyText": "It's required, but this could be confusing for users (as the internal reverting is not expected for users)\ud83d\ude02", "author": "sczyh30", "createdAt": "2020-08-14T01:55:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk3MzA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM3MDk0MQ==", "url": "https://github.com/alibaba/Sentinel/pull/1645#discussion_r470370941", "bodyText": "It's required, but this could be confusing for users (as the internal reverting is not expected for users)\ud83d\ude02\n\nYeah indeed but the conditions would be hard to met.", "author": "jasonjoo2010", "createdAt": "2020-08-14T02:06:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk3MzA3OA=="}], "type": "inlineReview"}, {"oid": "ddd62dd68b34e9bcea1c495fdabb0fb62f29bf50", "url": "https://github.com/alibaba/Sentinel/commit/ddd62dd68b34e9bcea1c495fdabb0fb62f29bf50", "message": "Notify observers in abandoned detecting request", "committedDate": "2020-08-13T14:15:41Z", "type": "commit"}, {"oid": "a39d44027b46a2f8693227e191bce5f9804d1455", "url": "https://github.com/alibaba/Sentinel/commit/a39d44027b46a2f8693227e191bce5f9804d1455", "message": "Rename onRequestComplete back", "committedDate": "2020-08-13T16:42:22Z", "type": "commit"}]}