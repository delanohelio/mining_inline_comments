{"pr_number": 8984, "pr_title": "Enabling custom URL for APIM Publisher", "pr_createdAt": "2020-07-15T13:03:12Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8984", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4MzkwOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8984#discussion_r458583908", "bodyText": "slight formatting issue.", "author": "ruks", "createdAt": "2020-07-22T07:16:39Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/login/idp.jag", "diffHunk": "@@ -45,8 +45,16 @@\n     var erroLogin = serverUrl + app.context +\"/error-pages?code=\"\n \n     var dcrUrl = appUtils.getLoopbackOrigin() + DCR_URL_SUFFIX;\n-    var loginCallbackUrl = serverUrl + app.context + LOGIN_CALLBACK_URL_SUFFIX;\n-    var logoutCallbackUrl = serverUrl + app.context + LOGOUT_CALLBACK_URL_SUFFIX;\n+    var loginCallbackUrl = appUtils.getTenantBasedLoginCallBack();\n+    if (loginCallbackUrl == null) {\n+\t    loginCallbackUrl = serverUrl + app.context + LOGIN_CALLBACK_URL_SUFFIX;\n+    }\n+\n+    var logoutCallbackUrl = appUtils.getTenantBasedLogoutCallBack();\n+    if (logoutCallbackUrl == null) {\n+         logoutCallbackUrl = serverUrl + app.context + LOGOUT_CALLBACK_URL_SUFFIX;\n+     }", "originalCommit": "245720d90aaae7b3e5d3f6a2b5ff5371d7b98b9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NDc1OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8984#discussion_r458584759", "bodyText": "better to add spaces", "author": "ruks", "createdAt": "2020-07-22T07:18:24Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "diffHunk": "@@ -31,10 +32,72 @@ var getLoopbackOrigin = function() {\n     return origin; // Unless there is a port offset this is https://localhost:9443\n };\n \n-function getIDPOrigin(){\n+function getIDPOrigin() {\n     return utils.getExternalIDPOrigin();\n }\n \n-function getIDPCheckSessionEndpoint(){\n+function getIDPCheckSessionEndpoint() {\n     return utils.getExternalIDPCheckSessionEndpoint();\n }\n+\n+var getTenantBasePublisherContext = function() {\n+    var tenantDomain = getTenantDomain();\n+    var tenantContext = utils.getTenantBasedPublisherContext(tenantDomain);\n+    if (tenantContext != null && tenantContext != \" \") {\n+        return tenantContext\n+    } else {\n+        return app.context;\n+    }\n+};\n+\n+var getTenantBasedLoginCallBack = function() {\n+    var tenantDomain = getTenantDomain();\n+    var publisherDomainMapping = utils.getTenantBasedPublisherDomainMapping(tenantDomain);\n+    if (publisherDomainMapping != null) {\n+        if (publisherDomainMapping.get('login') != null) {\n+            return publisherDomainMapping.get('login');\n+        }\n+        return \"https://\"+publisherDomainMapping.get('customUrl') + LOGIN_CALLBACK_URL_SUFFIX;\n+    }else{\n+        return null;\n+    }\n+};\n+\n+var getTenantBasedLogoutCallBack = function() {\n+    var tenantDomain = getTenantDomain();\n+    var publisherDomainMapping = utils.getTenantBasedPublisherDomainMapping(tenantDomain);\n+    if (publisherDomainMapping != null) {\n+        if (publisherDomainMapping.get('logout') != null) {\n+            return publisherDomainMapping.get('logout');\n+        }\n+        return \"https://\"+publisherDomainMapping.get('customUrl') + LOGOUT_CALLBACK_URL_SUFFIX;", "originalCommit": "245720d90aaae7b3e5d3f6a2b5ff5371d7b98b9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NTQ3Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8984#discussion_r458585477", "bodyText": "Better not to catch ClassCastException. Ideally, you should check the instance type and continue.", "author": "ruks", "createdAt": "2020-07-22T07:19:47Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -10557,6 +10557,69 @@ public static Map getTenantBasedStoreDomainMapping(String tenantDomain) throws A\n         return null;\n     }\n \n+    public static Map getTenantBasedPublisherDomainMapping(String tenantDomain) throws APIManagementException {\n+\n+        try {\n+            Registry registry = ServiceReferenceHolder.getInstance().getRegistryService().\n+                    getGovernanceSystemRegistry();\n+            String resourcePath = APIConstants.API_DOMAIN_MAPPINGS.replace(APIConstants.API_DOMAIN_MAPPING_TENANT_ID_IDENTIFIER, tenantDomain);\n+            if (registry.resourceExists(resourcePath)) {\n+                Resource resource = registry.get(resourcePath);\n+                String content = new String((byte[]) resource.getContent(), Charset.defaultCharset());\n+                JSONParser parser = new JSONParser();\n+                JSONObject mappings = (JSONObject) parser.parse(content);\n+                if (mappings.containsKey(APIConstants.API_DOMAIN_MAPPINGS_PUBLISHER)) {\n+                    return (Map) mappings.get(APIConstants.API_DOMAIN_MAPPINGS_PUBLISHER);\n+                }\n+            }\n+        } catch (RegistryException e) {\n+            String msg = \"Error while retrieving publisher domain mappings from registry\";\n+            throw new APIManagementException(msg, e);\n+        } catch (ClassCastException e) {", "originalCommit": "245720d90aaae7b3e5d3f6a2b5ff5371d7b98b9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5f711741d2e3a555ec96c725a24db78d28533f61", "url": "https://github.com/wso2/carbon-apimgt/commit/5f711741d2e3a555ec96c725a24db78d28533f61", "message": "APIUtil implementation for Publisher Custom URl", "committedDate": "2020-07-22T09:50:52Z", "type": "commit"}, {"oid": "1c4855c6aca049dec1f2c1772ae954c710c2cb8f", "url": "https://github.com/wso2/carbon-apimgt/commit/1c4855c6aca049dec1f2c1772ae954c710c2cb8f", "message": "Publisher custom url jaggery changes", "committedDate": "2020-07-22T09:50:52Z", "type": "commit"}, {"oid": "469259fd743af41bf0fb4f7f3aaab35ae035a093", "url": "https://github.com/wso2/carbon-apimgt/commit/469259fd743af41bf0fb4f7f3aaab35ae035a093", "message": "Publisher custom url jaggery changes", "committedDate": "2020-07-22T09:50:52Z", "type": "commit"}, {"oid": "aebea8c1cba81bb8b649e266aef8c4f3f441ac9d", "url": "https://github.com/wso2/carbon-apimgt/commit/aebea8c1cba81bb8b649e266aef8c4f3f441ac9d", "message": "Fixing review comments", "committedDate": "2020-07-22T09:50:53Z", "type": "commit"}, {"oid": "b012dcd48f9ee083067cffcd38390049127b5f10", "url": "https://github.com/wso2/carbon-apimgt/commit/b012dcd48f9ee083067cffcd38390049127b5f10", "message": "Fixing publisher custom url mapping", "committedDate": "2020-07-22T09:50:53Z", "type": "commit"}, {"oid": "d4b625fbc36f5a8d6896d40490e4a8822fd707c0", "url": "https://github.com/wso2/carbon-apimgt/commit/d4b625fbc36f5a8d6896d40490e4a8822fd707c0", "message": "Fix formatting issues in cherry-picked commits", "committedDate": "2020-07-22T09:50:53Z", "type": "commit"}, {"oid": "d4b625fbc36f5a8d6896d40490e4a8822fd707c0", "url": "https://github.com/wso2/carbon-apimgt/commit/d4b625fbc36f5a8d6896d40490e4a8822fd707c0", "message": "Fix formatting issues in cherry-picked commits", "committedDate": "2020-07-22T09:50:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcwNDk3OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8984#discussion_r458704978", "bodyText": "Shall we remove the duplicate entry?", "author": "Arshardh", "createdAt": "2020-07-22T10:49:59Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/site/public/pages/index.jag", "diffHunk": "@@ -25,6 +25,10 @@\n     var swaggerKey = 'swaggerWorkerInit.js';\n     var indexBundle = manifest[indexKey].split(\"dist/\")[1];\n     var swaggerBundle = manifest[swaggerKey].split(\"dist/\")[1];\n+    var appUtils = require(\"/services/utils.js\");\n+    app.context = appUtils.getTenantBasePublisherContext();\n+    var appUtils = require(\"/services/utils.js\");", "originalCommit": "d4b625fbc36f5a8d6896d40490e4a8822fd707c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxMzE4OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8984#discussion_r458713188", "bodyText": "Sure", "author": "wasuradananjith", "createdAt": "2020-07-22T11:06:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcwNDk3OA=="}], "type": "inlineReview"}, {"oid": "4508d94313e2a62e9bcbf832a060624a7fac357d", "url": "https://github.com/wso2/carbon-apimgt/commit/4508d94313e2a62e9bcbf832a060624a7fac357d", "message": "Remove duplicate code segments in cherry-picked code", "committedDate": "2020-07-22T11:05:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI2MzYyNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8984#discussion_r556263625", "bodyText": "fix formatting", "author": "praminda", "createdAt": "2021-01-13T05:01:41Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "diffHunk": "@@ -38,3 +39,65 @@ function getIDPOrigin() {\n function getIDPCheckSessionEndpoint() {\n     return utils.getExternalIDPCheckSessionEndpoint();\n }\n+\n+var getTenantBasePublisherContext = function() {\n+    var tenantDomain = getTenantDomain();\n+    var tenantContext = utils.getTenantBasedPublisherContext(tenantDomain);\n+    if (tenantContext != null && tenantContext != \" \") {\n+        return tenantContext\n+    } else {\n+        return app.context;\n+    }\n+};\n+\n+var getTenantBasedLoginCallBack = function() {\n+    var tenantDomain = getTenantDomain();\n+    var publisherDomainMapping = utils.getTenantBasedPublisherDomainMapping(tenantDomain);\n+    if (publisherDomainMapping != null) {\n+        if (publisherDomainMapping.get('login') != null) {\n+            return publisherDomainMapping.get('login');\n+        }\n+        return \"https://\"+publisherDomainMapping.get('customUrl') + LOGIN_CALLBACK_URL_SUFFIX;\n+    }else{", "originalCommit": "4508d94313e2a62e9bcbf832a060624a7fac357d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTE2NjE0NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8984#discussion_r561166144", "bodyText": "Fixed via bcfd5cf", "author": "wasuradananjith", "createdAt": "2021-01-20T18:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI2MzYyNQ=="}], "type": "inlineReview"}]}