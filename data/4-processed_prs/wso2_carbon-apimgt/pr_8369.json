{"pr_number": 8369, "pr_title": "add span related properties", "pr_createdAt": "2020-03-17T16:11:47Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8369", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODI5Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8369#discussion_r393798296", "bodyText": "formatting issue", "author": "ruks", "createdAt": "2020-03-17T16:13:21Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "diffHunk": "@@ -869,4 +873,34 @@ public static String retrieveJWKSConfiguration(String jwksEndpoint) throws IOExc\n             }\n         }\n     }\n+\n+    public static void setAPIRelatedTags(TracingSpan tracingSpan, org.apache.synapse.MessageContext messageContext) {\n+        org.apache.axis2.context.MessageContext axis2MessageContext =\n+                ((Axis2MessageContext) messageContext).getAxis2MessageContext();\n+        Object restUrlPostfix = axis2MessageContext.getProperty(APIMgtGatewayConstants.REST_URL_POSTFIX);\n+        Object httpMethod = axis2MessageContext.getProperty(Constants.Configuration.HTTP_METHOD);\n+        if (restUrlPostfix != null){\n+            Util.setTag(tracingSpan,APIMgtGatewayConstants.SPAN_REQUEST_PATH, (String) restUrlPostfix);\n+        }\n+        if (httpMethod != null) {\n+            Util.setTag(tracingSpan, APIMgtGatewayConstants.SPAN_REQUEST_METHOD, (String) httpMethod);\n+        }\n+        Object electedResource = messageContext.getProperty(APIMgtGatewayConstants.API_ELECTED_RESOURCE);\n+        if (electedResource != null){\n+            Util.setTag(tracingSpan, APIMgtGatewayConstants.SPAN_RESOURCE, (String) electedResource);\n+        }\n+\n+        setTracingId(tracingSpan, axis2MessageContext);\n+    }\n+\n+    private static void setTracingId(TracingSpan tracingSpan, MessageContext axis2MessageContext) {\n+        Map headersMap =\n+                (Map) axis2MessageContext.getProperty(org.apache.axis2.context.MessageContext.TRANSPORT_HEADERS);\n+        if (headersMap.containsKey(APIConstants.ACTIVITY_ID)){\n+            Util.setTag(tracingSpan, APIMgtGatewayConstants.SPAN_ACTIVITY_ID,\n+                    (String) headersMap.get(APIConstants.ACTIVITY_ID));\n+        }else{", "originalCommit": "6e8df9314bc8b27fe284be2325b03c4e71e0b214", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5ODk5Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8369#discussion_r393798997", "bodyText": "seems these new imports are not using", "author": "ruks", "createdAt": "2020-03-17T16:14:18Z", "path": "components/apimgt/org.wso2.carbon.apimgt.tracing/src/main/java/org/wso2/carbon/apimgt/tracing/Util.java", "diffHunk": "@@ -25,6 +25,8 @@\n import io.opentracing.propagation.TextMapExtractAdapter;\n import io.opentracing.propagation.TextMapInjectAdapter;\n import io.opentracing.util.GlobalTracer;\n+import org.apache.axis2.context.MessageContext;\n+import org.wso2.carbon.apimgt.impl.APIConstants;", "originalCommit": "6e8df9314bc8b27fe284be2325b03c4e71e0b214", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5OTQ1MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8369#discussion_r393799450", "bodyText": "there are multiple formatting issues in this method", "author": "ruks", "createdAt": "2020-03-17T16:14:57Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/utils/GatewayUtils.java", "diffHunk": "@@ -869,4 +873,34 @@ public static String retrieveJWKSConfiguration(String jwksEndpoint) throws IOExc\n             }\n         }\n     }\n+\n+    public static void setAPIRelatedTags(TracingSpan tracingSpan, org.apache.synapse.MessageContext messageContext) {", "originalCommit": "6e8df9314bc8b27fe284be2325b03c4e71e0b214", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f2b109347d7e7a7499f56a869c015d05a8f25cb0", "url": "https://github.com/wso2/carbon-apimgt/commit/f2b109347d7e7a7499f56a869c015d05a8f25cb0", "message": "add span related properties", "committedDate": "2020-03-17T16:19:01Z", "type": "commit"}, {"oid": "f2b109347d7e7a7499f56a869c015d05a8f25cb0", "url": "https://github.com/wso2/carbon-apimgt/commit/f2b109347d7e7a7499f56a869c015d05a8f25cb0", "message": "add span related properties", "committedDate": "2020-03-17T16:19:01Z", "type": "forcePushed"}]}