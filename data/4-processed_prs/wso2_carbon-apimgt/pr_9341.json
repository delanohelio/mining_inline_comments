{"pr_number": 9341, "pr_title": "Reposition the Global Nav Bar elements with a drawer in Publisher", "pr_createdAt": "2020-10-27T11:57:38Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/9341", "timeline": [{"oid": "086bd15f8332bb70bcc8fa8b5e1c3245eb6958b6", "url": "https://github.com/wso2/carbon-apimgt/commit/086bd15f8332bb70bcc8fa8b5e1c3245eb6958b6", "message": "Initial nav bar change", "committedDate": "2020-10-26T11:03:03Z", "type": "commit"}, {"oid": "2322a188a2a5d0c863b32f21c0b97e1db2a29c7a", "url": "https://github.com/wso2/carbon-apimgt/commit/2322a188a2a5d0c863b32f21c0b97e1db2a29c7a", "message": "Add styling to navbar", "committedDate": "2020-10-27T05:06:57Z", "type": "commit"}, {"oid": "1a12d8eeaf1379ea0e2fb3e8689ea46c435468ef", "url": "https://github.com/wso2/carbon-apimgt/commit/1a12d8eeaf1379ea0e2fb3e8689ea46c435468ef", "message": "Alter positioning of UI elements for the Drawer", "committedDate": "2020-10-27T11:46:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg0MTg4MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9341#discussion_r514841881", "bodyText": "Shall we remove this empty container and use an <Box/> element for alignment", "author": "tmkasun", "createdAt": "2020-10-30T04:35:34Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Base/Header/headersearch/HeaderSearch.jsx", "diffHunk": "@@ -236,6 +236,7 @@ class HeaderSearch extends React.Component {\n         }\n         return (\n             <>\n+                <div className={classes.emptyContainer} />", "originalCommit": "1a12d8eeaf1379ea0e2fb3e8689ea46c435468ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg3MDM2NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9341#discussion_r514870364", "bodyText": "Do we need smallView property here, what is the effect or usage of that ?", "author": "tmkasun", "createdAt": "2020-10-30T05:13:33Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Base/Header/navbar/GlobalNavLinks.jsx", "diffHunk": "@@ -90,86 +126,176 @@ function GlobalNavLinks(props) {\n         ditectCurrentMenu(location);\n     });\n     let strokeColor = theme.palette.getContrastText(theme.palette.background.leftMenu);\n-    let iconWidth = 32;\n+    let iconWidth = 24;\n     if (smallView) {\n         iconWidth = 16;\n         strokeColor = theme.palette.getContrastText(theme.palette.background.appBar);\n     }\n     return (\n-        <List className={classes.listRoot}>\n-            <Link to='/apis' className={classNames({ [classes.selected]: selected === 'apis', [classes.links]: true })}>\n-                <ListItem button>\n-                    <ListItemIcon classes={{ root: classNames({ [classes.smallIcon]: smallView }) }}>\n-                        <CustomIcon width={iconWidth} height={iconWidth} icon='api' strokeColor={strokeColor} />\n-                    </ListItemIcon>\n-                    <ListItemText\n-                        classes={{\n-                            primary: classNames({\n-                                [classes.selectedText]: selected === 'apis',\n-                                [classes.listText]: selected !== 'apis' && !smallView,\n-                                [classes.listTextSmall]: selected !== 'apis' && smallView,\n-                            }),\n-                        }}\n-                        primary={<FormattedMessage id='Base.Header.navbar.GlobalNavBar.apis' defaultMessage='APIs' />}\n-                    />\n-                </ListItem>\n-            </Link>\n-            <Link\n-                to='/scopes'\n-                className={classNames({ [classes.selected]: selected === 'scopes', [classes.links]: true })}\n-            >\n-                <ListItem button>\n-                    <ListItemIcon classes={{ root: classNames({ [classes.smallIcon]: smallView }) }}>\n-                        <ScopesIcon className={classes.scopeIconColor} />\n-                    </ListItemIcon>\n-                    <ListItemText\n-                        classes={{\n-                            primary: classNames({\n-                                [classes.selectedText]: selected === 'scopes',\n-                                [classes.listText]: selected !== 'scopes' && !smallView,\n-                                [classes.listTextSmall]: selected !== 'scopes' && smallView,\n-                            }),\n-                        }}\n-                        primary={\n-                            <FormattedMessage id='Base.Header.navbar.GlobalNavBar.scopes' defaultMessage='Scopes' />\n-                        }\n-                    />\n-                </ListItem>\n-            </Link>\n-            { publisherUser\n-            && (\n+        <>\n+            <ListItem className={classes.categoryHeader} button onClick={handleAPIsClick}>\n+                <ListItemText\n+                    classes={{\n+                        primary: classes.categoryHeaderPrimary,\n+                    }}\n+                >\n+                    <FormattedMessage id='Base.Header.navbar.GlobalNavBar.APIs' defaultMessage='APIs' />\n+                </ListItemText>\n+                {openAPIs ? <ExpandLess /> : <ExpandMore />}\n+            </ListItem>\n+            <Collapse in={openAPIs} timeout='auto' unmountOnExit>\n                 <Link\n-                    to='/api-products'\n-                    className={classNames({ [classes.selected]: selected === 'api-products', [classes.links]: true })}\n+                    to='/apis'\n+                    className={classNames({ [classes.selected]: selected === 'apis', [classes.links]: true })}\n                 >\n-                    <ListItem button>\n-                        <ListItemIcon classes={{ root: classNames({ [classes.smallIcon]: smallView }) }}>\n-                            <CustomIcon\n-                                width={iconWidth}\n-                                height={iconWidth}\n-                                icon='api-product'\n-                                strokeColor={strokeColor}\n-                            />\n+                    <ListItem button onClick={toggleGlobalNavBar}>\n+                        <ListItemIcon\n+                            classes={{ root: classNames({ [classes.smallIcon]: smallView }) }}\n+                            className={classes.itemIcon}\n+                        >\n+                            <CustomIcon width={iconWidth} height={iconWidth} icon='api' strokeColor={strokeColor} />\n                         </ListItemIcon>\n                         <ListItemText\n                             classes={{\n                                 primary: classNames({\n-                                    [classes.selectedText]: selected === 'api-products',\n-                                    [classes.listText]: selected !== 'api-products' && !smallView,\n-                                    [classes.listTextSmall]: selected !== 'api-products' && smallView,\n+                                    [classes.selectedText]: selected === 'apis',\n+                                    [classes.listText]: selected !== 'apis' && !smallView,\n+                                    [classes.listTextSmall]: selected !== 'apis' && smallView,\n                                 }),\n                             }}\n                             primary={(\n                                 <FormattedMessage\n-                                    id='Base.Header.navbar.GlobalNavBar.api.products'\n-                                    defaultMessage='API Products'\n+                                    id='Base.Header.navbar.GlobalNavBar.apis'\n+                                    defaultMessage='API Listing'\n                                 />\n                             )}\n                         />\n                     </ListItem>\n                 </Link>\n-            )}\n-        </List>\n+                { publisherUser\n+                && (\n+                    <Link\n+                        to='/api-products'\n+                        className={classNames({\n+                            [classes.selected]: selected === 'api-products',\n+                            [classes.links]: true,\n+                        })}\n+                    >\n+                        <ListItem button onClick={toggleGlobalNavBar}>\n+                            <ListItemIcon\n+                                classes={{ root: classNames({ [classes.smallIcon]: smallView }) }}\n+                                className={classes.itemIcon}\n+                            >\n+                                <CustomIcon\n+                                    width={iconWidth}\n+                                    height={iconWidth}\n+                                    icon='api-product'\n+                                    strokeColor={strokeColor}\n+                                />\n+                            </ListItemIcon>\n+                            <ListItemText\n+                                classes={{\n+                                    primary: classNames({\n+                                        [classes.selectedText]: selected === 'api-products',\n+                                        [classes.listText]: selected !== 'api-products' && !smallView,", "originalCommit": "1a12d8eeaf1379ea0e2fb3e8689ea46c435468ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg3OTA2MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9341#discussion_r514879060", "bodyText": "Shall we remove this empty container and use an <Box/> element for alignment", "author": "tmkasun", "createdAt": "2020-10-30T05:27:33Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Base/Header/headersearch/HeaderSearch.jsx", "diffHunk": "@@ -236,6 +236,7 @@ class HeaderSearch extends React.Component {\n         }\n         return (\n             <>\n+                <div className={classes.emptyContainer} />", "originalCommit": "1a12d8eeaf1379ea0e2fb3e8689ea46c435468ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg3OTA4NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9341#discussion_r514879084", "bodyText": "Shall we use a color from theme here ?", "author": "tmkasun", "createdAt": "2020-10-30T05:27:34Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/source/src/app/components/Base/Header/navbar/GlobalNavLinks.jsx", "diffHunk": "@@ -57,6 +62,27 @@ const styles = (theme) => ({\n     scopeIconColor: {\n         fill: theme.palette.getContrastText(theme.palette.background.leftMenu),\n     },\n+    alertIconColor: {\n+        fill: theme.palette.getContrastText(theme.palette.background.leftMenu),\n+    },\n+    divider: {\n+        marginTop: theme.spacing(1),\n+        backgroundColor: 'black',", "originalCommit": "1a12d8eeaf1379ea0e2fb3e8689ea46c435468ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1a12d8eeaf1379ea0e2fb3e8689ea46c435468ef", "url": "https://github.com/wso2/carbon-apimgt/commit/1a12d8eeaf1379ea0e2fb3e8689ea46c435468ef", "message": "Alter positioning of UI elements for the Drawer", "committedDate": "2020-10-27T11:46:35Z", "type": "forcePushed"}, {"oid": "7456e5873dcae0e17d631f06c4673c404b3fb12e", "url": "https://github.com/wso2/carbon-apimgt/commit/7456e5873dcae0e17d631f06c4673c404b3fb12e", "message": "Add review fixes", "committedDate": "2020-11-02T06:36:09Z", "type": "forcePushed"}, {"oid": "f46f80406765b98b250efe610383c68b2e9f90fd", "url": "https://github.com/wso2/carbon-apimgt/commit/f46f80406765b98b250efe610383c68b2e9f90fd", "message": "Add review fixes", "committedDate": "2020-11-02T13:03:28Z", "type": "commit"}, {"oid": "f46f80406765b98b250efe610383c68b2e9f90fd", "url": "https://github.com/wso2/carbon-apimgt/commit/f46f80406765b98b250efe610383c68b2e9f90fd", "message": "Add review fixes", "committedDate": "2020-11-02T13:03:28Z", "type": "forcePushed"}]}