{"pr_number": 8492, "pr_title": "[Admin portal revamp] Application Owner Change", "pr_createdAt": "2020-05-12T12:03:18Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8492", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4MDk0MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8492#discussion_r423680940", "bodyText": "Do we need to create new promise here?\nWe can do restApi.updateApplicationOwner(id, owner).then() directly, since it's a promise itself", "author": "Krishanx92", "createdAt": "2020-05-12T12:07:54Z", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/ApplicationSettings/EditApplication.jsx", "diffHunk": "@@ -0,0 +1,202 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React, { useReducer } from 'react';\n+import API from 'AppData/api';\n+import PropTypes from 'prop-types';\n+import TextField from '@material-ui/core/TextField';\n+import DialogContentText from '@material-ui/core/DialogContentText';\n+import { FormattedMessage } from 'react-intl';\n+import { makeStyles } from '@material-ui/core/styles';\n+import FormDialogBase from 'AppComponents/AdminPages/Addons/FormDialogBase';\n+import Alert from 'AppComponents/Shared/Alert';\n+\n+const useStyles = makeStyles((theme) => ({\n+    error: {\n+        color: theme.palette.error.dark,\n+    },\n+}));\n+\n+let initialState = {\n+    name: '',\n+    owner: '',\n+};\n+\n+/**\n+ * Reducer\n+ * @param {JSON} state State\n+ * @returns {Promise}.\n+ */\n+function reducer(state, { field, value }) {\n+    return {\n+        ...state,\n+        [field]: value,\n+    };\n+}\n+\n+/**\n+ * Render a pop-up dialog to change ownership of an Application\n+ * @param {JSON} props props passed from parent\n+ * @returns {JSX}.\n+ */\n+function Edit(props) {\n+    const classes = useStyles();\n+    const {\n+        updateList, dataRow, icon, triggerButtonText, title, applicationList,\n+    } = props;\n+    let id = null;\n+\n+    if (dataRow) {\n+        const { name: originalName, owner: originalOwner } = dataRow;\n+        id = dataRow.applicationId;\n+\n+        initialState = {\n+            name: originalName,\n+            owner: originalOwner,\n+        };\n+    }\n+    const [state, dispatch] = useReducer(reducer, initialState);\n+    const { name, owner } = state;\n+\n+    const onChange = (e) => {\n+        dispatch({ field: e.target.name, value: e.target.value });\n+    };\n+\n+    const validateOwner = () => {\n+        const valid = { invalid: false, error: '' };\n+\n+        const applicationsWithSameName = applicationList.filter(\n+            (app) => app.name === name && app.owner === owner,\n+        );\n+        if (applicationsWithSameName.length > 0) {\n+            valid.error = `${owner} already has an application with name: ${name}`;\n+            valid.invalid = true;\n+        }\n+        // todo: Validate whether the owner is an existing subscriber or not.\n+\n+        return valid;\n+    };\n+\n+\n+    const getAllFormErrors = () => {\n+        let errorText = '';\n+        const valid = validateOwner(applicationList);\n+        if (valid.invalid) {\n+            errorText += valid.error;\n+        }\n+\n+        return errorText;\n+    };\n+    const formSaveCallback = () => {\n+        const formErrors = getAllFormErrors();\n+        if (formErrors !== '') {\n+            Alert.error(formErrors);\n+            return false;\n+        }\n+        const restApi = new API();\n+        let promiseAPICall = restApi.updateApplicationOwner(id, owner);\n+\n+        promiseAPICall = new Promise((resolve, reject) => {", "originalCommit": "112381533ccd0cdb28ed344dcd63ceb80fc19e5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4NjIxNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8492#discussion_r423686216", "bodyText": "Fixed with commit: 707ae1e", "author": "chathuranga95", "createdAt": "2020-05-12T12:17:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4MDk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwMTI3NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8492#discussion_r423701274", "bodyText": "Please note that creating new Promise is necessary here, since the original promise we get from the restApi.updateApplicationOwner() is not giving the resolve to be compatible with the  FormDialogBase, ListBase components, which are supposed to be universal to the admin portal.\nThis is same for creating new promise in ListApplications component as well.", "author": "chathuranga95", "createdAt": "2020-05-12T12:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4MDk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4MTM3Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8492#discussion_r423681377", "bodyText": "Same here", "author": "Krishanx92", "createdAt": "2020-05-12T12:08:40Z", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/admin_new/source/src/app/components/ApplicationSettings/ListApplications.jsx", "diffHunk": "@@ -0,0 +1,173 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React, { useState } from 'react';\n+import API from 'AppData/api';\n+import { useIntl, FormattedMessage } from 'react-intl';\n+import List from '@material-ui/core/List';\n+import ListItem from '@material-ui/core/ListItem';\n+import ListItemIcon from '@material-ui/core/ListItemIcon';\n+import ListItemText from '@material-ui/core/ListItemText';\n+import Typography from '@material-ui/core/Typography';\n+import HelpBase from 'AppComponents/AdminPages/Addons/HelpBase';\n+import ListBase from 'AppComponents/AdminPages/Addons/ListBase';\n+import EditApplication from 'AppComponents/ApplicationSettings/EditApplication';\n+import DescriptionIcon from '@material-ui/icons/Description';\n+import Link from '@material-ui/core/Link';\n+import Configurations from 'Config';\n+import EditIcon from '@material-ui/icons/Edit';\n+\n+/**\n+ * Render a list\n+ * @returns {JSX} Header AppBar components.\n+ */\n+export default function ListApplications() {\n+    const intl = useIntl();\n+    const [applicationList, setApplicationList] = useState([]);\n+    /**\n+    * API call to get application list\n+    * @returns {Promise}.\n+    */\n+    function apiCall() {\n+        return new Promise((resolve, reject) => {\n+            const restApi = new API();\n+            restApi", "originalCommit": "112381533ccd0cdb28ed344dcd63ceb80fc19e5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4OTgxOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8492#discussion_r423689819", "bodyText": "Do you mean the variable, const restApi = new API(); (Line 48)?\nShould we make it as follows?\n(new API()).\n    .getApplicationList()\n    .....", "author": "chathuranga95", "createdAt": "2020-05-12T12:23:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4MTM3Nw=="}], "type": "inlineReview"}, {"oid": "c6622d036c121a229c8d08a43a394e290ddbff9f", "url": "https://github.com/wso2/carbon-apimgt/commit/c6622d036c121a229c8d08a43a394e290ddbff9f", "message": "Add Application Listing", "committedDate": "2020-05-18T13:07:05Z", "type": "commit"}, {"oid": "7a581240618fdeb5d463dc2333a136209c4a8cab", "url": "https://github.com/wso2/carbon-apimgt/commit/7a581240618fdeb5d463dc2333a136209c4a8cab", "message": "Listing implement", "committedDate": "2020-05-18T13:07:45Z", "type": "commit"}, {"oid": "99ed118c7e9d5f426425f4b21fd19c483611d511", "url": "https://github.com/wso2/carbon-apimgt/commit/99ed118c7e9d5f426425f4b21fd19c483611d511", "message": "Implement Edit Application Owner", "committedDate": "2020-05-18T13:07:45Z", "type": "commit"}, {"oid": "c08714d6c9c30450f460f52f82d9ed1527320a6d", "url": "https://github.com/wso2/carbon-apimgt/commit/c08714d6c9c30450f460f52f82d9ed1527320a6d", "message": "Update locales", "committedDate": "2020-05-18T13:07:52Z", "type": "commit"}, {"oid": "f2d7014610a86791af20d84f959930e914a08f2e", "url": "https://github.com/wso2/carbon-apimgt/commit/f2d7014610a86791af20d84f959930e914a08f2e", "message": "Remove unnecessary variable", "committedDate": "2020-05-18T13:07:52Z", "type": "commit"}, {"oid": "f07c29311d8f3d5e9bfb049c02357123799cc0ea", "url": "https://github.com/wso2/carbon-apimgt/commit/f07c29311d8f3d5e9bfb049c02357123799cc0ea", "message": "Update locales", "committedDate": "2020-05-18T13:14:09Z", "type": "commit"}, {"oid": "f07c29311d8f3d5e9bfb049c02357123799cc0ea", "url": "https://github.com/wso2/carbon-apimgt/commit/f07c29311d8f3d5e9bfb049c02357123799cc0ea", "message": "Update locales", "committedDate": "2020-05-18T13:14:09Z", "type": "forcePushed"}]}