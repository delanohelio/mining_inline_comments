{"pr_number": 8431, "pr_title": "Fixed external idp iframe issue.", "pr_createdAt": "2020-04-25T16:38:18Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8431", "timeline": [{"oid": "327935da157afd232d14aac4278a793f3f4cd045", "url": "https://github.com/wso2/carbon-apimgt/commit/327935da157afd232d14aac4278a793f3f4cd045", "message": "Fixed external idp iframe issue.", "committedDate": "2020-04-25T16:29:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA4MzQ1Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r450083456", "bodyText": "Remove empty line", "author": "rmsamitha", "createdAt": "2020-07-06T09:02:24Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -2196,6 +2196,44 @@ private static boolean isWSDL2Resource(byte[] wsdl) throws APIManagementExceptio\n         return wsdlContent.indexOf(wsdl2NameSpace) > 0;\n     }\n \n+    /**\n+     * Get the External IDP host name when UIs use an external IDP for SSO or other purpose\n+     * By default this is equal to $ref{server.base_path} (i:e https://localhost:9443)\n+     *\n+     * @return Origin string of the external IDP\n+     */\n+\n+    public static String getExternalIDPOrigin() throws APIManagementException {\n+\n+        APIManagerConfiguration config = ServiceReferenceHolder.getInstance().\n+                getAPIManagerConfigurationService().getAPIManagerConfiguration();\n+        String idpEndpoint = config.getFirstProperty(APIConstants.IDENTITY_PROVIDER_SERVER_URL);\n+        if (idpEndpoint == null) {\n+            return getServerURL();\n+        } else {\n+            return idpEndpoint;\n+        }\n+    }\n+\n+    /**\n+     * Get the check session URL to load in the session management iframe\n+     *\n+     * @return URL to be used in iframe source for the check session with IDP\n+     */\n+", "originalCommit": "327935da157afd232d14aac4278a793f3f4cd045", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMTM1OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r450331359", "bodyText": "Fixed with 6578fa6", "author": "Meruja", "createdAt": "2020-07-06T16:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA4MzQ1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5NDkxOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r450094918", "bodyText": "Can we use a constant for \"/oidc/checksession\"", "author": "Sarangan0219", "createdAt": "2020-07-06T09:22:45Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -2196,6 +2196,44 @@ private static boolean isWSDL2Resource(byte[] wsdl) throws APIManagementExceptio\n         return wsdlContent.indexOf(wsdl2NameSpace) > 0;\n     }\n \n+    /**\n+     * Get the External IDP host name when UIs use an external IDP for SSO or other purpose\n+     * By default this is equal to $ref{server.base_path} (i:e https://localhost:9443)\n+     *\n+     * @return Origin string of the external IDP\n+     */\n+\n+    public static String getExternalIDPOrigin() throws APIManagementException {\n+\n+        APIManagerConfiguration config = ServiceReferenceHolder.getInstance().\n+                getAPIManagerConfigurationService().getAPIManagerConfiguration();\n+        String idpEndpoint = config.getFirstProperty(APIConstants.IDENTITY_PROVIDER_SERVER_URL);\n+        if (idpEndpoint == null) {\n+            return getServerURL();\n+        } else {\n+            return idpEndpoint;\n+        }\n+    }\n+\n+    /**\n+     * Get the check session URL to load in the session management iframe\n+     *\n+     * @return URL to be used in iframe source for the check session with IDP\n+     */\n+\n+    public static String getExternalIDPCheckSessionEndpoint() throws APIManagementException {\n+\n+        APIManagerConfiguration config = ServiceReferenceHolder.getInstance().\n+                getAPIManagerConfigurationService().getAPIManagerConfiguration();\n+        String oidcCheckSessionEndpoint = config.getFirstProperty(\n+                APIConstants.IDENTITY_PROVIDER_OIDC_CHECK_SESSION_ENDPOINT);\n+        if (oidcCheckSessionEndpoint == null) {\n+            return getServerURL() + \"/oidc/checksession\";", "originalCommit": "327935da157afd232d14aac4278a793f3f4cd045", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMTQyOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r450331428", "bodyText": "Fixed with 6578fa6 & 847da4e", "author": "Meruja", "createdAt": "2020-07-06T16:14:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5NDkxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDE2NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r454824164", "bodyText": "Formatting issue", "author": "mushthaq33", "createdAt": "2020-07-15T06:37:30Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "diffHunk": "@@ -30,3 +30,11 @@ var getLoopbackOrigin = function() {\n     var origin = 'https://' + app.origin.host + \":\" + mgtTransportPort;\n     return origin; // Unless there is a port offset this is https://localhost:9443\n };\n+\n+function getIDPOrigin(){", "originalCommit": "327935da157afd232d14aac4278a793f3f4cd045", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1ODkwNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r457058904", "bodyText": "Fixed with a8a6b41", "author": "Meruja", "createdAt": "2020-07-20T05:16:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDI5NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r454824295", "bodyText": "Formatting issue", "author": "mushthaq33", "createdAt": "2020-07-15T06:37:45Z", "path": "features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/services/utils.js", "diffHunk": "@@ -30,3 +30,11 @@ var getLoopbackOrigin = function() {\n     var origin = 'https://' + app.origin.host + \":\" + mgtTransportPort;\n     return origin; // Unless there is a port offset this is https://localhost:9443\n };\n+\n+function getIDPOrigin(){\n+    return utils.getExternalIDPOrigin();\n+}\n+\n+function getIDPCheckSessionEndpoint(){", "originalCommit": "327935da157afd232d14aac4278a793f3f4cd045", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1OTAwNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r457059007", "bodyText": "Fixed with a8a6b41", "author": "Meruja", "createdAt": "2020-07-20T05:16:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDI5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDQwNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r454824405", "bodyText": "Formatting issue", "author": "mushthaq33", "createdAt": "2020-07-15T06:38:03Z", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js", "diffHunk": "@@ -28,6 +28,14 @@ var getLoopbackOrigin = function() {\n     return origin;\n };\n \n+function getIDPOrigin(){", "originalCommit": "327935da157afd232d14aac4278a793f3f4cd045", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1OTA1MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r457059050", "bodyText": "Fixed with a8a6b41", "author": "Meruja", "createdAt": "2020-07-20T05:16:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDQwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDQ5NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r454824495", "bodyText": "Formatting issue", "author": "mushthaq33", "createdAt": "2020-07-15T06:38:16Z", "path": "features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js", "diffHunk": "@@ -28,6 +28,14 @@ var getLoopbackOrigin = function() {\n     return origin;\n };\n \n+function getIDPOrigin(){\n+    return utils.getExternalIDPOrigin();\n+}\n+\n+function getIDPCheckSessionEndpoint(){", "originalCommit": "327935da157afd232d14aac4278a793f3f4cd045", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1OTA4OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8431#discussion_r457059088", "bodyText": "Fixed with a8a6b41", "author": "Meruja", "createdAt": "2020-07-20T05:16:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyNDQ5NQ=="}], "type": "inlineReview"}]}