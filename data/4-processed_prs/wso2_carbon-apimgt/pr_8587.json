{"pr_number": 8587, "pr_title": "Add Condition Status to Blacklist Policies", "pr_createdAt": "2020-05-27T11:42:07Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8587", "timeline": [{"oid": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "url": "https://github.com/wso2/carbon-apimgt/commit/cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "message": "Add Condition Status to Blacklist Policies", "committedDate": "2020-05-27T11:39:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2OTQwNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431069407", "bodyText": "Why we define this policyList  variable outside the promise lambda function? I think it's better to move it inside the lambda function scope and refer it", "author": "tmkasun", "createdAt": "2020-05-27T12:12:58Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;", "originalCommit": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5MDkyNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431090925", "bodyText": "fixed", "author": "kavishkafernando", "createdAt": "2020-05-27T12:49:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2OTQwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2OTc0NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431069744", "bodyText": "Same as above , no need to declare the variable outside the lambda function scope right ? incrementId", "author": "tmkasun", "createdAt": "2020-05-27T12:13:36Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;", "originalCommit": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5MTAyNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431091025", "bodyText": "fixed", "author": "kavishkafernando", "createdAt": "2020-05-27T12:49:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2OTc0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3MjYwNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431072606", "bodyText": "Why we use Object constructor here ?\nThis will convert null or undefined values to objects ?\nThe Object constructor creates an object wrapper for the given value.\n\nIf the value is null or undefined, it will create and return an empty object.\nOtherwise, it will return an object of a Type that corresponds to the given value.\nIf the value is an object already, it will return the value.", "author": "tmkasun", "createdAt": "2020-05-27T12:18:37Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {\n+            restApi.blacklistPoliciesGet().then((result) => {\n+                policyList = result.body.list;\n+                const blacklistPolicies = policyList.map((obj) => {\n+                    let array = [];\n+                    incrementId++;\n+                    if (obj.conditionValue === Object(obj.conditionValue)) {", "originalCommit": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4Mzg1OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431083859", "bodyText": "This helps us identify which conditional values need to be converted to an array.", "author": "kavishkafernando", "createdAt": "2020-05-27T12:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3MjYwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3NDQxNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431074416", "bodyText": "This is no-op , What is the purpose of these 2 lines? Object.keys", "author": "tmkasun", "createdAt": "2020-05-27T12:21:43Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {\n+            restApi.blacklistPoliciesGet().then((result) => {\n+                policyList = result.body.list;\n+                const blacklistPolicies = policyList.map((obj) => {\n+                    let array = [];\n+                    incrementId++;\n+                    if (obj.conditionValue === Object(obj.conditionValue)) {\n+                        Object.keys(obj.conditionValue);\n+                        Object.values(obj.conditionValue);", "originalCommit": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3ODczNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431078736", "bodyText": "There will be multiple condition values when it comes to IP range and IP. To display these multiple values in the MUI data table we need to create a key, value array since we can't parse an object to the MUI data table.", "author": "kavishkafernando", "createdAt": "2020-05-27T12:29:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3NDQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5MDA1MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431190051", "bodyText": "Ok but these\nObject.values(obj.conditionValue)\nObject.keys(obj.conditionValue)\ntwo lines doesn't make any effect unless you use their returned values , It's like console.log(obj.conditionValue) statments", "author": "tmkasun", "createdAt": "2020-05-27T14:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3NDQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NDE2Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431574163", "bodyText": "Only Object.entries(obj.conditionValue); does the task.\nFixed with commit", "author": "kavishkafernando", "createdAt": "2020-05-28T04:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3NDQxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3OTE5OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431079199", "bodyText": "Do we need to create a new Promise here?, Is this because of that Alert message issue ?", "author": "tmkasun", "createdAt": "2020-05-27T12:30:10Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {", "originalCommit": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4OTA4Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431089083", "bodyText": "Nope not for the alert.\nWe need to send a new promise for it to get resolved in the ListBase", "author": "kavishkafernando", "createdAt": "2020-05-27T12:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3OTE5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE4Nzk1NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431187954", "bodyText": "It's not good to add additional async operations unless it's absolutely needed, I don't see any requirement to create a promise object here ?", "author": "tmkasun", "createdAt": "2020-05-27T14:37:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3OTE5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYwMjYxOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431602619", "bodyText": "Fixed with commit a0b7e46", "author": "kavishkafernando", "createdAt": "2020-05-28T06:12:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA3OTE5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MDAxMQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431080011", "bodyText": "If you only return the res.conditionStatus what is the purpose of setting other res properties in above if condition ?", "author": "tmkasun", "createdAt": "2020-05-27T12:31:35Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {\n+            restApi.blacklistPoliciesGet().then((result) => {\n+                policyList = result.body.list;\n+                const blacklistPolicies = policyList.map((obj) => {\n+                    let array = [];\n+                    incrementId++;\n+                    if (obj.conditionValue === Object(obj.conditionValue)) {\n+                        Object.keys(obj.conditionValue);\n+                        Object.values(obj.conditionValue);\n+                        array = Object.entries(obj.conditionValue);\n+                    } else {\n+                        array.push(obj.conditionValue);\n+                    }\n+                    return {\n+                        conditionId: incrementId,\n+                        conditionUUID: obj.conditionId,\n+                        conditionType: obj.conditionType,\n+                        conditionValue: array,\n+                        conditionStatus: obj.conditionStatus,\n+                    };\n+                });\n+                setBlacklistPolicyList(blacklistPolicies);\n+                resolve(blacklistPolicies);\n+            }).catch((error) => {\n+                reject(error);\n+            });\n+        }));\n+    }\n+\n+    const handleConditionStatus = (conditionUUID, event) => {\n+        let editedConditionId;\n+        let editedConditionStatus;\n+        const blacklistPolicyListNew = cloneDeep(blacklistPolicyList);\n+        blacklistPolicyListNew.map((res) => {\n+            if (res.conditionUUID === conditionUUID) {\n+                res.conditionStatus = event.target.checked;\n+                editedConditionId = conditionUUID;\n+                editedConditionStatus = event.target.checked;\n+            }\n+            return res.conditionStatus;", "originalCommit": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDcxMA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431084710", "bodyText": "editedConditionId and editedConditionStatus are needed to identify the conditionID and Condition Status of the edited Policy. These two values are passed to the API call.", "author": "kavishkafernando", "createdAt": "2020-05-27T12:39:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MDAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYwMDU4Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431600582", "bodyText": "fixed with commit ddbed19", "author": "kavishkafernando", "createdAt": "2020-05-28T06:05:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MDAxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MjE0NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431082144", "bodyText": "I think, If you want to change the elements in the blacklistPolicyListNew  using the event data, It's better to return modified element in the map and use the return value from the map and set it to state, by that way you might not need to cloneDeep it beforehand", "author": "tmkasun", "createdAt": "2020-05-27T12:35:04Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin_new/source/src/app/components/Throttling/Blacklist/List.jsx", "diffHunk": "@@ -95,6 +98,77 @@ export default function ListBlacklistThrottlingPolicies() {\n         }),\n     };\n \n+    /**\n+ * Mock API call\n+ * @returns {Promise}.\n+ */\n+    function apiCall() {\n+        let policyList;\n+        let incrementId = 0;\n+        return new Promise(((resolve, reject) => {\n+            restApi.blacklistPoliciesGet().then((result) => {\n+                policyList = result.body.list;\n+                const blacklistPolicies = policyList.map((obj) => {\n+                    let array = [];\n+                    incrementId++;\n+                    if (obj.conditionValue === Object(obj.conditionValue)) {\n+                        Object.keys(obj.conditionValue);\n+                        Object.values(obj.conditionValue);\n+                        array = Object.entries(obj.conditionValue);\n+                    } else {\n+                        array.push(obj.conditionValue);\n+                    }\n+                    return {\n+                        conditionId: incrementId,\n+                        conditionUUID: obj.conditionId,\n+                        conditionType: obj.conditionType,\n+                        conditionValue: array,\n+                        conditionStatus: obj.conditionStatus,\n+                    };\n+                });\n+                setBlacklistPolicyList(blacklistPolicies);\n+                resolve(blacklistPolicies);\n+            }).catch((error) => {\n+                reject(error);\n+            });\n+        }));\n+    }\n+\n+    const handleConditionStatus = (conditionUUID, event) => {\n+        let editedConditionId;\n+        let editedConditionStatus;\n+        const blacklistPolicyListNew = cloneDeep(blacklistPolicyList);\n+        blacklistPolicyListNew.map((res) => {", "originalCommit": "cff0ca2255a0ec4c11f4e0319fb7a9767b939223", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEwNzQ1MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8587#discussion_r431107450", "bodyText": "If i do it as mentioned above then all the Switch items flickers when I change one, but if I clone deep this doesnt happen", "author": "kavishkafernando", "createdAt": "2020-05-27T13:07:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MjE0NA=="}], "type": "inlineReview"}, {"oid": "b554e8337119f5651ab8e837f9fc2327d3288801", "url": "https://github.com/wso2/carbon-apimgt/commit/b554e8337119f5651ab8e837f9fc2327d3288801", "message": "Fix variable issues", "committedDate": "2020-05-27T12:48:57Z", "type": "commit"}, {"oid": "645581c8a3b682d6d2392bc04c91782500058619", "url": "https://github.com/wso2/carbon-apimgt/commit/645581c8a3b682d6d2392bc04c91782500058619", "message": "change Switch name", "committedDate": "2020-05-27T14:41:47Z", "type": "commit"}, {"oid": "ddbed194cd342fa368d595a9fbde8889dd803ab8", "url": "https://github.com/wso2/carbon-apimgt/commit/ddbed194cd342fa368d595a9fbde8889dd803ab8", "message": "Remove unnecessary code line", "committedDate": "2020-05-28T04:23:50Z", "type": "commit"}, {"oid": "77e53a09363218abf84e454992de67200ea98fe5", "url": "https://github.com/wso2/carbon-apimgt/commit/77e53a09363218abf84e454992de67200ea98fe5", "message": "Use event components for api call", "committedDate": "2020-05-28T06:04:44Z", "type": "commit"}, {"oid": "a0b7e46816c4849ef381ec5aefa78d2afa220758", "url": "https://github.com/wso2/carbon-apimgt/commit/a0b7e46816c4849ef381ec5aefa78d2afa220758", "message": "Remove unnecessary new promise", "committedDate": "2020-05-28T06:10:41Z", "type": "commit"}]}