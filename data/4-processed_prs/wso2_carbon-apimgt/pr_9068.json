{"pr_number": 9068, "pr_title": "Introduce Cache to keep ParsedSignedJWT", "pr_createdAt": "2020-07-27T17:37:01Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/9068", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1OTU1Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9068#discussion_r461059557", "bodyText": "Formatting issue", "author": "mushthaq33", "createdAt": "2020-07-27T17:41:35Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/oauth/OAuthAuthenticator.java", "diffHunk": "@@ -279,9 +283,9 @@ public AuthenticationResponse authenticate(MessageContext synCtx) {\n             info = new APIKeyValidationInfoDTO();\n             info.setAuthorized(false);\n             info.setValidationStatus(900906);\n-        } else if (apiKey == null || apiContext == null || apiVersion == null) {\n+        } else if (accessToken == null || apiContext == null || apiVersion == null) {\n             if(log.isDebugEnabled()){\n-                if(apiKey == null){\n+                if(accessToken == null){", "originalCommit": "93f68f016e7d3f0f325edc16b14f45be14f611ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1OTY2NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9068#discussion_r461059664", "bodyText": "Formatting issue", "author": "mushthaq33", "createdAt": "2020-07-27T17:41:47Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/oauth/OAuthAuthenticator.java", "diffHunk": "@@ -577,4 +581,23 @@ protected APIKeyValidator getAPIKeyValidator() {\n     public int getPriority() {\n         return 10;\n     }\n+\n+    private SignedJWT getSignedJwt(String accessToken) throws ParseException {\n+\n+        String signature = accessToken.split(\"\\\\.\")[2];\n+        SignedJWT signedJWT = null;\n+        Cache gatewaySignedJWTParseCache = CacheProvider.getGatewaySignedJWTParseCache();\n+        if (gatewaySignedJWTParseCache != null) {\n+            Object cachedEntry = gatewaySignedJWTParseCache.get(signature);\n+            if (cachedEntry != null) {\n+                signedJWT = (SignedJWT) cachedEntry;\n+            }else{", "originalCommit": "93f68f016e7d3f0f325edc16b14f45be14f611ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "39b43f9166980ff6d6cda46be1851e6d3f3f0353", "url": "https://github.com/wso2/carbon-apimgt/commit/39b43f9166980ff6d6cda46be1851e6d3f3f0353", "message": "Introduce Cache to keep ParsedSignedJWT", "committedDate": "2020-07-27T17:41:39Z", "type": "forcePushed"}, {"oid": "8e339c737b78b5669f404ea9873da4ddd1819a8f", "url": "https://github.com/wso2/carbon-apimgt/commit/8e339c737b78b5669f404ea9873da4ddd1819a8f", "message": "Introduce Cache to keep ParsedSignedJWT", "committedDate": "2020-07-27T17:42:27Z", "type": "commit"}, {"oid": "8e339c737b78b5669f404ea9873da4ddd1819a8f", "url": "https://github.com/wso2/carbon-apimgt/commit/8e339c737b78b5669f404ea9873da4ddd1819a8f", "message": "Introduce Cache to keep ParsedSignedJWT", "committedDate": "2020-07-27T17:42:27Z", "type": "forcePushed"}]}