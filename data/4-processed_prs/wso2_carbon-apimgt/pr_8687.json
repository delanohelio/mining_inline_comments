{"pr_number": 8687, "pr_title": "Add Subscription Throttling Policy", "pr_createdAt": "2020-06-09T05:38:10Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8687", "timeline": [{"oid": "9df221366caecb2f8a4e39951b4d0b28f7cbafd2", "url": "https://github.com/wso2/carbon-apimgt/commit/9df221366caecb2f8a4e39951b4d0b28f7cbafd2", "message": "Add custom attributes to subscription policy UI", "committedDate": "2020-06-10T00:13:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg4NTU4MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8687#discussion_r437885581", "bodyText": "we don't  need to use lambda here right? component accept just component class/function.\ncomponent: SubscriptionThrottlingPolicies", "author": "kavishkafernando", "createdAt": "2020-06-10T06:23:36Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/Base/RouteMenuMapping.jsx", "diffHunk": "@@ -214,7 +215,7 @@ const RouteMenuMapping = (intl) => [\n                     defaultMessage: 'Subscription Policies',\n                 }),\n                 path: '/throttling/subscription',\n-                component: () => <DemoTable />,\n+                component: () => <SubscriptionThrottlingPolicies />,", "originalCommit": "9df221366caecb2f8a4e39951b4d0b28f7cbafd2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg4NTkwNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8687#discussion_r437885904", "bodyText": "we don't need this prop validation right?", "author": "kavishkafernando", "createdAt": "2020-06-10T06:24:32Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/Throttling/Subscription/Delete.jsx", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React from 'react';\n+import PropTypes from 'prop-types';\n+import DialogContentText from '@material-ui/core/DialogContentText';\n+import DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n+import FormDialogBase from 'AppComponents/AdminPages/Addons/FormDialogBase';\n+import { FormattedMessage } from 'react-intl';\n+import API from 'AppData/api';\n+\n+/**\n+ * Render delete dialog box.\n+ * @param {JSON} props component props.\n+ * @returns {JSX} Loading animation.\n+ */\n+function Delete(props) {\n+    const restApi = new API();\n+    const {\n+        dataRow, updateList,\n+    } = props;\n+\n+    const formSaveCallback = () => {\n+        const policyId = dataRow[6];\n+        const promiseAPICall = restApi\n+            .deleteSubscriptionPolicy(policyId)\n+            .then(() => {\n+                updateList();\n+                return (\n+                    <FormattedMessage\n+                        id='Throttling.Subscription.Policy.policy.delete.success'\n+                        defaultMessage='Subscription Rate Limiting Policy successfully deleted.'\n+                    />\n+                );\n+            })\n+            .catch(() => {\n+                return (\n+                    <FormattedMessage\n+                        id='Throttling.Subscription.Policy.policy.delete.error'\n+                        defaultMessage='Subscription Rate Limiting Policy could not be deleted.'\n+                    />\n+                );\n+            });\n+\n+        return (promiseAPICall);\n+    };\n+\n+    return (\n+        <FormDialogBase\n+            title='Delete Subscription Policy?'\n+            saveButtonText='Delete'\n+            icon={<DeleteForeverIcon />}\n+            formSaveCallback={formSaveCallback}\n+        >\n+            <DialogContentText>\n+                <FormattedMessage\n+                    id='Throttling.Subscription.Policy.policy.dialog.delete.error'\n+                    defaultMessage='Subscription Rate Limiting Policy will be deleted.'\n+                />\n+            </DialogContentText>\n+        </FormDialogBase>\n+    );\n+}\n+Delete.defaultProps = {\n+    dataRow: null,\n+};\n+\n+Delete.propTypes = {\n+    updateList: PropTypes.number.isRequired,\n+    dataRow: PropTypes.shape({\n+        id: PropTypes.string.isRequired,\n+        description: PropTypes.string.isRequired,\n+        label: PropTypes.string.isRequired,\n+    }),\n+    selectedPolicyName: PropTypes.shape({", "originalCommit": "9df221366caecb2f8a4e39951b4d0b28f7cbafd2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "246c936091a28b048f22da01d28c147af865d58d", "url": "https://github.com/wso2/carbon-apimgt/commit/246c936091a28b048f22da01d28c147af865d58d", "message": "Add subscription throttling", "committedDate": "2020-06-10T11:34:11Z", "type": "commit"}, {"oid": "db4e385d952e56abe380acfd139a828c574692f2", "url": "https://github.com/wso2/carbon-apimgt/commit/db4e385d952e56abe380acfd139a828c574692f2", "message": "Fix Add and Delete functionality for Subscription Throttling", "committedDate": "2020-06-10T11:34:17Z", "type": "commit"}, {"oid": "d12e6b88391b820f68637ea2c7b797ebfb5a9f77", "url": "https://github.com/wso2/carbon-apimgt/commit/d12e6b88391b820f68637ea2c7b797ebfb5a9f77", "message": "Add Edit functionality for subscription policy", "committedDate": "2020-06-10T11:40:20Z", "type": "commit"}, {"oid": "07f9c42261d5222a3de64f72a03d59c33386742c", "url": "https://github.com/wso2/carbon-apimgt/commit/07f9c42261d5222a3de64f72a03d59c33386742c", "message": "Fix minor issues", "committedDate": "2020-06-10T11:41:08Z", "type": "commit"}, {"oid": "07043b38ce122d432fb328769de6c1f518b859ae", "url": "https://github.com/wso2/carbon-apimgt/commit/07043b38ce122d432fb328769de6c1f518b859ae", "message": "Add custom attributes to subscription policy UI", "committedDate": "2020-06-10T11:41:12Z", "type": "commit"}, {"oid": "fb78bce706f59091e8ea485bad1c8fca1f1dfd27", "url": "https://github.com/wso2/carbon-apimgt/commit/fb78bce706f59091e8ea485bad1c8fca1f1dfd27", "message": "Add review fixes", "committedDate": "2020-06-10T11:41:12Z", "type": "commit"}, {"oid": "fb78bce706f59091e8ea485bad1c8fca1f1dfd27", "url": "https://github.com/wso2/carbon-apimgt/commit/fb78bce706f59091e8ea485bad1c8fca1f1dfd27", "message": "Add review fixes", "committedDate": "2020-06-10T11:41:12Z", "type": "forcePushed"}, {"oid": "c4bbe7594e574f8d87600cd895ae7e7bf87bc579", "url": "https://github.com/wso2/carbon-apimgt/commit/c4bbe7594e574f8d87600cd895ae7e7bf87bc579", "message": "Add validation fixes", "committedDate": "2020-06-10T13:09:22Z", "type": "commit"}, {"oid": "d1f2bac317f2f4a922471ed2d8c572067036042b", "url": "https://github.com/wso2/carbon-apimgt/commit/d1f2bac317f2f4a922471ed2d8c572067036042b", "message": "Merge branch 'admin_portal_revamp' into admin_portal_revamp", "committedDate": "2020-06-11T04:02:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIzNzg5MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8687#discussion_r439237890", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .map((obj) => {\n          \n          \n            \n                            .map(Object.values)", "author": "tmkasun", "createdAt": "2020-06-12T06:47:49Z", "path": "features/apimgt/org.wso2.carbon.apimgt.admin.feature/src/main/resources/admin/source/src/app/components/Throttling/Subscription/List.jsx", "diffHunk": "@@ -0,0 +1,296 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React from 'react';\n+import { useIntl, FormattedMessage } from 'react-intl';\n+import List from '@material-ui/core/List';\n+import ListItem from '@material-ui/core/ListItem';\n+import ListItemIcon from '@material-ui/core/ListItemIcon';\n+import ListItemText from '@material-ui/core/ListItemText';\n+import Typography from '@material-ui/core/Typography';\n+import HelpBase from 'AppComponents/AdminPages/Addons/HelpBase';\n+import ListBase from 'AppComponents/AdminPages/Addons/ListBase';\n+import DescriptionIcon from '@material-ui/icons/Description';\n+import Link from '@material-ui/core/Link';\n+import Configurations from 'Config';\n+import Delete from 'AppComponents/Throttling/Subscription/Delete';\n+import API from 'AppData/api';\n+import EditIcon from '@material-ui/icons/Edit';\n+import { Link as RouterLink } from 'react-router-dom';\n+import Button from '@material-ui/core/Button';\n+\n+/**\n+ * Render a list\n+ * @returns {JSX} Header AppBar components.\n+ */\n+export default function ListSubscriptionThrottlingPolicies() {\n+    const intl = useIntl();\n+    const restApi = new API();\n+\n+    const searchProps = {\n+        searchPlaceholder: intl.formatMessage({\n+            id: 'Throttling.Subscription.Policy..List.search.default',\n+            defaultMessage: 'Search by Subscription Policy name',\n+        }),\n+        active: true,\n+    };\n+    const pageProps = {\n+        help: (\n+            <HelpBase>\n+                <List component='nav' aria-label='main mailbox folders'>\n+                    <ListItem button>\n+                        <ListItemIcon>\n+                            <DescriptionIcon />\n+                        </ListItemIcon>\n+                        <Link\n+                            target='_blank'\n+                            href={Configurations.app.docUrl\n+            + 'learn/rate-limiting/adding-new-throttling-policies/#adding-a-new-subscription-level-throttling-tier'}\n+                        >\n+                            <ListItemText primary={(\n+                                <FormattedMessage\n+                                    id='Throttling.Subscription.Policy.List.help.link.one'\n+                                    defaultMessage='Creating a Subscription Rate Limiting Policy'\n+                                />\n+                            )}\n+                            />\n+\n+                        </Link>\n+                    </ListItem>\n+                    <ListItem button>\n+                        <ListItemIcon>\n+                            <DescriptionIcon />\n+                        </ListItemIcon>\n+                        <Link\n+                            target='_blank'\n+                            href={Configurations.app.docUrl\n+                + 'learn/rate-limiting/setting-throttling-limits/#subscription-level-throttling-api-publisher'}\n+                        >\n+                            <ListItemText primary={(\n+                                <FormattedMessage\n+                                    id='Throttling.Subscription.Policy.List.help.link.two'\n+                                    defaultMessage='Setting a Subscription Rate Limiting Policy as an API Publisher'\n+                                />\n+                            )}\n+                            />\n+\n+                        </Link>\n+                    </ListItem>\n+                    <ListItem button>\n+                        <ListItemIcon>\n+                            <DescriptionIcon />\n+                        </ListItemIcon>\n+                        <Link\n+                            target='_blank'\n+                            href={Configurations.app.docUrl\n+                + 'learn/rate-limiting/setting-throttling-limits/#subscription-level-throttling-api-subscriber'}\n+                        >\n+                            <ListItemText primary={(\n+                                <FormattedMessage\n+                                    id='Throttling.Subscription.Policy.List.help.link.three'\n+                                    defaultMessage='Setting a Subscription Rate Limiting Policy as an API Subscriber'\n+                                />\n+                            )}\n+                            />\n+\n+                        </Link>\n+                    </ListItem>\n+                </List>\n+            </HelpBase>),\n+        pageStyle: 'half',\n+        title: intl.formatMessage({\n+            id: 'Throttling.Subscription.Policy.search.default',\n+            defaultMessage: 'Subscription Rate Limiting Policies',\n+        }),\n+        EditTitle: intl.formatMessage({\n+            id: 'Throttling.Subscription.Policy.search.default',\n+            defaultMessage: 'Subscription Rate Limiting Policies',\n+        }),\n+    };\n+\n+    const columProps = [\n+        {\n+            name: 'name',\n+            label: intl.formatMessage({\n+                id: 'Admin.Throttling.Subscription.Throttling.policy.table.header.name',\n+                defaultMessage: 'Name',\n+            }),\n+            options: {\n+                filter: true,\n+                sort: true,\n+            },\n+        },\n+        {\n+            name: 'quotaPolicy',\n+            label: intl.formatMessage({\n+                id: 'Admin.Throttling.Subscription.Throttling.policy.table.header.quota.policy',\n+                defaultMessage: 'Quota Policy',\n+            }),\n+            options: {\n+                filter: true,\n+                sort: false,\n+            },\n+        },\n+        {\n+            name: 'quota',\n+            label: intl.formatMessage({\n+                id: 'Admin.Throttling.Subscription.Throttling.policy.table.header.quota',\n+                defaultMessage: 'Quota',\n+            }),\n+            options: {\n+                filter: true,\n+                sort: false,\n+            },\n+        },\n+        {\n+            name: 'unitTime',\n+            label: intl.formatMessage({\n+                id: 'Admin.Throttling.Subscription.Throttling.policy.table.header.unit.time',\n+                defaultMessage: 'Unit Time',\n+            }),\n+            options: {\n+                filter: true,\n+                sort: false,\n+            },\n+        },\n+        {\n+            name: 'rateLimit',\n+            label: intl.formatMessage({\n+                id: 'Admin.Throttling.Subscription.Throttling.policy.table.header.rate.limit',\n+                defaultMessage: 'Rate Limit',\n+            }),\n+            options: {\n+                filter: true,\n+                sort: false,\n+            },\n+        },\n+        {\n+            name: 'timeUnit',\n+            label: intl.formatMessage({\n+                id: 'Admin.Throttling.Subscription.Throttling.policy.table.header.time.unit',\n+                defaultMessage: 'Time Unit',\n+            }),\n+            options: {\n+                filter: true,\n+                sort: false,\n+            },\n+        },\n+        { // Id column has to be always the last.\n+            name: 'policyId',\n+            options: {\n+                display: false,\n+            },\n+        },\n+    ];\n+\n+    const emptyBoxProps = {\n+        content: (\n+            <Typography variant='body2' color='textSecondary' component='p'>\n+                <FormattedMessage\n+                    id='Throttling.Subsription.Policy.List.empty.content.subscription.policies'\n+                    defaultMessage={'Subscription-level throttling policies are applicable per access '\n+                    + 'token generated for an application.'}\n+                />\n+            </Typography>),\n+        title: (\n+            <Typography gutterBottom variant='h5' component='h2'>\n+                <FormattedMessage\n+                    id='Throttling.Subscription.Policy.List.empty.title.subscription.policies'\n+                    defaultMessage='Subscription Policies'\n+                />\n+\n+            </Typography>),\n+    };\n+\n+    const addButtonOverride = (\n+        <RouterLink to='/throttling/subscription/add'>\n+            <Button variant='contained' color='primary'>\n+                <FormattedMessage\n+                    id='Throttling.Subscription.Policy.List.addButtonProps.title'\n+                    defaultMessage='Add Policy'\n+                />\n+            </Button>\n+        </RouterLink>\n+    );\n+\n+    /**\n+     * Populate subscription policies\n+     * @returns {Promise} The list of subscription policies\n+     */\n+    function apiCall() {\n+        let subscriptionThrottlingvalues;\n+        return restApi.getSubscritionPolicyList().then((result) => {\n+            const subscriptionPolicies = result.body.list.map((obj) => {\n+                if (obj.defaultLimit.requestCount !== null) {\n+                    return {\n+                        policyName: obj.policyName,\n+                        quotaPolicy: 'Request Count',\n+                        quota: obj.defaultLimit.requestCount.requestCount,\n+                        unitTime: obj.defaultLimit.requestCount.unitTime + ' '\n+                        + obj.defaultLimit.requestCount.timeUnit,\n+                        rateLimit: (obj.rateLimitCount === 0) ? 'NA' : obj.rateLimitCount,\n+                        timeUnit: (obj.rateLimitCount === 0) ? 'NA' : obj.rateLimitTimeUnit,\n+                        policyId: obj.policyId,\n+                    };\n+                } else {\n+                    return {\n+                        policyName: obj.policyName,\n+                        quotaPolicy: 'Bandwidth Volume',\n+                        quota: obj.defaultLimit.bandwidth.dataAmount + ' '\n+                        + obj.defaultLimit.bandwidth.dataUnit,\n+                        unitTime: obj.defaultLimit.bandwidth.unitTime + ' '\n+                        + obj.defaultLimit.bandwidth.timeUnit,\n+                        rateLimit: (obj.rateLimitCount === 0) ? 'NA' : obj.rateLimitCount,\n+                        timeUnit: (obj.rateLimitCount === 0) ? 'NA' : obj.rateLimitTimeUnit,\n+                        policyId: obj.policyId,\n+                    };\n+                }\n+            });\n+\n+            subscriptionThrottlingvalues = subscriptionPolicies\n+                .filter((policy) => policy.policyName !== 'Unlimited')\n+                .map((obj) => {", "originalCommit": "d1f2bac317f2f4a922471ed2d8c572067036042b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}