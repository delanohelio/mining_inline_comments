{"pr_number": 8914, "pr_title": "Generate backend jwt using claims from external rest api", "pr_createdAt": "2020-07-03T07:00:54Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8914", "timeline": [{"oid": "7e5ab7eb47f2f96d480ad3f165eca139cc3d89fc", "url": "https://github.com/wso2/carbon-apimgt/commit/7e5ab7eb47f2f96d480ad3f165eca139cc3d89fc", "message": "Add feign client to retrieve claim", "committedDate": "2020-07-03T01:54:30Z", "type": "commit"}, {"oid": "dcd710cf8d3b1ed7e2bd31118135ee278fe910d4", "url": "https://github.com/wso2/carbon-apimgt/commit/dcd710cf8d3b1ed7e2bd31118135ee278fe910d4", "message": "Update client", "committedDate": "2020-07-03T02:07:58Z", "type": "commit"}, {"oid": "29a03bd78e977613a326b3520dec826d087d7850", "url": "https://github.com/wso2/carbon-apimgt/commit/29a03bd78e977613a326b3520dec826d087d7850", "message": "Add method to retrieve claims", "committedDate": "2020-07-03T02:37:48Z", "type": "commit"}, {"oid": "db57f90de4f70bc997e62c59a7342208a661a0e2", "url": "https://github.com/wso2/carbon-apimgt/commit/db57f90de4f70bc997e62c59a7342208a661a0e2", "message": "Add generator", "committedDate": "2020-07-03T02:57:16Z", "type": "commit"}, {"oid": "9537e1997c13ed841386a48d5f6654b809c2891e", "url": "https://github.com/wso2/carbon-apimgt/commit/9537e1997c13ed841386a48d5f6654b809c2891e", "message": "Remove unncessary teset", "committedDate": "2020-07-03T04:10:24Z", "type": "commit"}, {"oid": "b1ae292ac5a3d9174aad64bc13edc006f04bc086", "url": "https://github.com/wso2/carbon-apimgt/commit/b1ae292ac5a3d9174aad64bc13edc006f04bc086", "message": "Refactor logic", "committedDate": "2020-07-03T05:51:59Z", "type": "commit"}, {"oid": "6e6082b1c73538a29b09bebca03aa010905245f7", "url": "https://github.com/wso2/carbon-apimgt/commit/6e6082b1c73538a29b09bebca03aa010905245f7", "message": "Fix bug", "committedDate": "2020-07-03T06:56:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ0NjI2NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8914#discussion_r449446265", "bodyText": "this line doesn't needed", "author": "tharindu1st", "createdAt": "2020-07-03T08:19:32Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/AMDefaultKeyManagerImpl.java", "diffHunk": "@@ -965,5 +987,38 @@ private void addKeyManagerConfigsAsSystemProperties(String serviceUrl) {\n             log.error(\"Exception While resolving KeyManager Server URL or Port \" + e.getMessage(), e);\n         }\n     }\n+    \n+    @Override\n+    public Map<String, String> getUserClaims(String username, Map<String, Object> properties)\n+            throws APIManagementException {\n \n+        Map<String, String> map = new HashMap<String, String>();\n+        String tenantAwareUserName = MultitenantUtils.getTenantAwareUsername(username);\n+        UserInfoDTO userinfo = new UserInfoDTO();\n+        userinfo.setUsername(tenantAwareUserName);\n+        if (tenantAwareUserName.contains(APIConstants.DOMAIN_SEPARATOR)) {\n+            userinfo.setDomain(tenantAwareUserName.split(APIConstants.DOMAIN_SEPARATOR)[0]);\n+        }\n+        if (properties.containsKey(APIConstants.KeyManager.AUTH_CODE)) {\n+            userinfo.setAuthCode(properties.get(APIConstants.KeyManager.AUTH_CODE).toString());", "originalCommit": "6e6082b1c73538a29b09bebca03aa010905245f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3MjgxNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8914#discussion_r449472817", "bodyText": "removed", "author": "chamilaadhi", "createdAt": "2020-07-03T09:11:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ0NjI2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ0Nzc1NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8914#discussion_r449447755", "bodyText": "this one doesn't need since done in webapp", "author": "tharindu1st", "createdAt": "2020-07-03T08:22:35Z", "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/token/JWTGenerator.java", "diffHunk": "@@ -126,75 +130,43 @@\n     public Map<String, String> populateCustomClaims(TokenValidationContext validationContext)\n             throws APIManagementException {\n \n-        ClaimsRetriever claimsRetriever = getClaimsRetriever();\n-        if (claimsRetriever != null) {\n-            Map<ClaimMapping, String> customClaimsWithMapping = new HashMap<>();\n-            Map<String, String> customClaims;\n-            //fix for https://github.com/wso2/product-apim/issues/4112\n-            String accessToken = validationContext.getAccessToken();\n-            String authCode = validationContext.getAuthorizationCode();\n-            if (accessToken != null) {\n-                AuthorizationGrantCacheEntry cacheEntry = AuthorizationGrantCache.getInstance()\n-                        .getValueFromCacheByToken(new AuthorizationGrantCacheKey(accessToken));\n-                if (cacheEntry != null) {\n-                    customClaimsWithMapping.putAll(cacheEntry.getUserAttributes());\n-                }\n-            } else if (authCode != null) {\n-                AuthorizationGrantCacheEntry cacheEntry = AuthorizationGrantCache.getInstance()\n-                        .getValueFromCacheByCode(new AuthorizationGrantCacheKey(authCode));\n-                if (cacheEntry != null) {\n-                    customClaimsWithMapping.putAll(cacheEntry.getUserAttributes());\n-                }\n-            } else {\n-                customClaimsWithMapping.putAll(validationContext.getUser().getUserAttributes());\n-            }\n-            String username = validationContext.getValidationInfoDTO().getEndUserName();\n-            int tenantId = APIUtil.getTenantId(username);\n-\n-            customClaims = convertClaimMap(customClaimsWithMapping, username);\n-\n-            if (isNotEmpty(customClaims)) {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"The custom claims are retrieved from AuthorizationGrantCache for user : \" +\n-                            validationContext.getValidationInfoDTO().getEndUserName());\n-                }\n-            } else {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Custom claims are not available in the AuthorizationGrantCache. Hence will be \" +\n-                            \"retrieved from the user store for user : \" +\n-                            validationContext.getValidationInfoDTO().getEndUserName());\n-                }\n-            }\n-            // If claims are not found in AuthorizationGrantCache, they will be retrieved from the userstore.\n+        Map<ClaimMapping, String> customClaimsWithMapping = new HashMap<>();\n+        Map<String, String> customClaims;\n+        Map<String, Object> properties = new HashMap<String, Object>();\n \n-            try {\n+        String accessToken = validationContext.getAccessToken();\n+        String authCode = validationContext.getAuthorizationCode();\n+        if (accessToken != null) {\n+            properties.put(APIConstants.KeyManager.ACCESS_TOKEN, accessToken);\n+        } else if (authCode != null) {\n+            properties.put(APIConstants.KeyManager.AUTH_CODE, authCode);\n+        } else {\n+            customClaimsWithMapping.putAll(validationContext.getUser().getUserAttributes());\n+        }\n+        String username = validationContext.getValidationInfoDTO().getEndUserName();\n+        int tenantId = APIUtil.getTenantId(username);\n \n-                if (tenantId != -1) {\n-                    UserStoreManager manager = ServiceReferenceHolder.getInstance().\n-                            getRealmService().getTenantUserRealm(tenantId).getUserStoreManager();\n+        customClaims = convertClaimMap(customClaimsWithMapping, username);", "originalCommit": "6e6082b1c73538a29b09bebca03aa010905245f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ0OTQyMQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8914#discussion_r449449421", "bodyText": "i kept it to convert user attributes coming from validationContext.getUser().getUserAttributes()", "author": "chamilaadhi", "createdAt": "2020-07-03T08:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ0Nzc1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3MjcxNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8914#discussion_r449472716", "bodyText": "removed", "author": "chamilaadhi", "createdAt": "2020-07-03T09:11:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ0Nzc1NQ=="}], "type": "inlineReview"}, {"oid": "2ae8b48cb775d2d8d85d277bafa6ca25d69897a7", "url": "https://github.com/wso2/carbon-apimgt/commit/2ae8b48cb775d2d8d85d277bafa6ca25d69897a7", "message": "Add review changes", "committedDate": "2020-07-03T09:10:40Z", "type": "commit"}, {"oid": "ed1cc02280bd65f128c55b49a2dd3903fca1a29d", "url": "https://github.com/wso2/carbon-apimgt/commit/ed1cc02280bd65f128c55b49a2dd3903fca1a29d", "message": "Add DefaultClaimsRetriever back and omit it from the jwt generator", "committedDate": "2020-07-05T14:03:01Z", "type": "commit"}, {"oid": "64462732a576179bb5ad1ba0f6cef7b20c4918c6", "url": "https://github.com/wso2/carbon-apimgt/commit/64462732a576179bb5ad1ba0f6cef7b20c4918c6", "message": "Add default claims retriever back", "committedDate": "2020-07-05T14:37:46Z", "type": "commit"}, {"oid": "36b2c4c985a4de340a8da2c9aa496ff11493ecb4", "url": "https://github.com/wso2/carbon-apimgt/commit/36b2c4c985a4de340a8da2c9aa496ff11493ecb4", "message": "Add extended claim retriever", "committedDate": "2020-07-05T14:38:17Z", "type": "commit"}, {"oid": "1206d3d74543be0f307868ccf13f91afec6e4a17", "url": "https://github.com/wso2/carbon-apimgt/commit/1206d3d74543be0f307868ccf13f91afec6e4a17", "message": "Add to default json", "committedDate": "2020-07-05T14:48:03Z", "type": "commit"}]}