{"pr_number": 8618, "pr_title": "Improve definition validation in endpoint registry", "pr_createdAt": "2020-06-01T10:55:15Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8618", "timeline": [{"oid": "885bfc5f2463b9f18bcb1c758a68f4c0fa87dc27", "url": "https://github.com/wso2/carbon-apimgt/commit/885bfc5f2463b9f18bcb1c758a68f4c0fa87dc27", "message": "Add DefinitionValidationException", "committedDate": "2020-06-02T18:34:34Z", "type": "forcePushed"}, {"oid": "8899489e1abe6a98572804587cad623e146ef9f3", "url": "https://github.com/wso2/carbon-apimgt/commit/8899489e1abe6a98572804587cad623e146ef9f3", "message": "Improve definition validation in endpoint registry", "committedDate": "2020-06-02T18:40:00Z", "type": "commit"}, {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80", "url": "https://github.com/wso2/carbon-apimgt/commit/9af9a71b58b717323533f1604c2b2d5756916e80", "message": "Add DefinitionValidationException", "committedDate": "2020-06-02T18:40:08Z", "type": "commit"}, {"oid": "9af9a71b58b717323533f1604c2b2d5756916e80", "url": "https://github.com/wso2/carbon-apimgt/commit/9af9a71b58b717323533f1604c2b2d5756916e80", "message": "Add DefinitionValidationException", "committedDate": "2020-06-02T18:40:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMjAwOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434112009", "bodyText": "Throw the Exceptions from the method signatures.", "author": "jaadds", "createdAt": "2020-06-02T19:04:20Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/DefinitionValidator.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.impl.endpoint.registry.util;\n+\n+import java.net.URL;\n+\n+/**\n+ * An API Definition Validator Interface\n+ */\n+public interface DefinitionValidator {\n+\n+    boolean validate(URL definitionUrl);\n+\n+    boolean validate(byte[] definition);\n+\n+    boolean validate(String definition);", "originalCommit": "9af9a71b58b717323533f1604c2b2d5756916e80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5NzI0NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434297244", "bodyText": "Fixed in 169ace7", "author": "ChamodDamitha", "createdAt": "2020-06-03T04:12:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMjAwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMjE2NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434112165", "bodyText": "Let the exception come through the validation.", "author": "jaadds", "createdAt": "2020-06-02T19:04:37Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/EndpointRegistryUtil.java", "diffHunk": "@@ -32,4 +46,24 @@ public static void raiseResourceAlreadyExistsException(String msg) throws\n         throw new EndpointRegistryResourceAlreadyExistsException(msg);\n     }\n \n+    public static boolean isValidDefinition(URL definitionURL, String definitionType)\n+            throws DefinitionValidationException {\n+        DefinitionValidator definitionValidator = definitionValidatorMap.get(definitionType);\n+        if (definitionValidator != null) {\n+            return definitionValidator.validate(definitionURL);\n+        }\n+        throw new DefinitionValidationException(\"No Definition Validator found for the given definition type: '\"", "originalCommit": "9af9a71b58b717323533f1604c2b2d5756916e80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5NzU1Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434297553", "bodyText": "throw new DefinitionValidationException(No Definition Validator found for...) is thrown if definitionValidator is null. So, cannot throw from validate method", "author": "ChamodDamitha", "createdAt": "2020-06-03T04:13:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMjE2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMjQxNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434112416", "bodyText": "Rather than capturing and logging this, throw a ValidationException.", "author": "jaadds", "createdAt": "2020-06-02T19:05:04Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/GraphQLDefinitionValidator.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.impl.endpoint.registry.util;\n+\n+import graphql.schema.GraphQLSchema;\n+import graphql.schema.idl.SchemaParser;\n+import graphql.schema.idl.TypeDefinitionRegistry;\n+import graphql.schema.idl.UnExecutableSchemaGenerator;\n+import graphql.schema.idl.errors.SchemaProblem;\n+import graphql.schema.validation.SchemaValidationError;\n+import graphql.schema.validation.SchemaValidator;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.Set;\n+\n+/**\n+ * This class provides the functionality of validating GraphQL definitions\n+ */\n+public class GraphQLDefinitionValidator implements DefinitionValidator {\n+    private static final Log log = LogFactory.getLog(GraphQLDefinitionValidator.class);\n+\n+    @Override\n+    public boolean validate(URL definitionUrl) {\n+        boolean isValid = false;\n+        try {\n+            String definitionContent = IOUtils.toString(definitionUrl.openStream());\n+            isValid = validate(definitionContent);\n+        } catch (IOException e) {\n+            log.error(\"Error in reading content in the definition URL: \" + definitionUrl, e);\n+        }", "originalCommit": "9af9a71b58b717323533f1604c2b2d5756916e80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5NzY5Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434297696", "bodyText": "Fixed in 169ace7", "author": "ChamodDamitha", "createdAt": "2020-06-03T04:14:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExMjQxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5MjUxNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434292517", "bodyText": "let's add java docs", "author": "fazlan-nazeem", "createdAt": "2020-06-03T03:49:48Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/EndpointRegistryUtil.java", "diffHunk": "@@ -32,4 +46,24 @@ public static void raiseResourceAlreadyExistsException(String msg) throws\n         throw new EndpointRegistryResourceAlreadyExistsException(msg);\n     }\n \n+    public static boolean isValidDefinition(URL definitionURL, String definitionType)", "originalCommit": "9af9a71b58b717323533f1604c2b2d5756916e80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5NzcyNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434297725", "bodyText": "Fixed in 169ace7", "author": "ChamodDamitha", "createdAt": "2020-06-03T04:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5MjUxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5MjU1OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434292558", "bodyText": "javadocs here", "author": "fazlan-nazeem", "createdAt": "2020-06-03T03:50:00Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/EndpointRegistryUtil.java", "diffHunk": "@@ -32,4 +46,24 @@ public static void raiseResourceAlreadyExistsException(String msg) throws\n         throw new EndpointRegistryResourceAlreadyExistsException(msg);\n     }\n \n+    public static boolean isValidDefinition(URL definitionURL, String definitionType)\n+            throws DefinitionValidationException {\n+        DefinitionValidator definitionValidator = definitionValidatorMap.get(definitionType);\n+        if (definitionValidator != null) {\n+            return definitionValidator.validate(definitionURL);\n+        }\n+        throw new DefinitionValidationException(\"No Definition Validator found for the given definition type: '\"\n+                + definitionType + \"'\");\n+    }\n+\n+    public static boolean isValidDefinition(byte[] definitionContent, String definitionType)", "originalCommit": "9af9a71b58b717323533f1604c2b2d5756916e80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5Nzc2NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434297765", "bodyText": "Fixed in 169ace7", "author": "ChamodDamitha", "createdAt": "2020-06-03T04:14:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5MjU1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5Mjc4MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434292780", "bodyText": "shouldn't an exception be thrown in here?", "author": "fazlan-nazeem", "createdAt": "2020-06-03T03:50:54Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/util/GraphQLDefinitionValidator.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.impl.endpoint.registry.util;\n+\n+import graphql.schema.GraphQLSchema;\n+import graphql.schema.idl.SchemaParser;\n+import graphql.schema.idl.TypeDefinitionRegistry;\n+import graphql.schema.idl.UnExecutableSchemaGenerator;\n+import graphql.schema.idl.errors.SchemaProblem;\n+import graphql.schema.validation.SchemaValidationError;\n+import graphql.schema.validation.SchemaValidator;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.Set;\n+\n+/**\n+ * This class provides the functionality of validating GraphQL definitions\n+ */\n+public class GraphQLDefinitionValidator implements DefinitionValidator {\n+    private static final Log log = LogFactory.getLog(GraphQLDefinitionValidator.class);\n+\n+    @Override\n+    public boolean validate(URL definitionUrl) {\n+        boolean isValid = false;\n+        try {\n+            String definitionContent = IOUtils.toString(definitionUrl.openStream());\n+            isValid = validate(definitionContent);\n+        } catch (IOException e) {\n+            log.error(\"Error in reading content in the definition URL: \" + definitionUrl, e);\n+        }\n+        return isValid;\n+    }\n+\n+    @Override\n+    public boolean validate(byte[] definition) {\n+        String definitionContent = new String(definition);\n+        return validate(definitionContent);\n+    }\n+\n+    @Override\n+    public boolean validate(String definition) {\n+        boolean isValid = false;\n+        try {\n+            SchemaParser schemaParser = new SchemaParser();\n+            TypeDefinitionRegistry typeRegistry = schemaParser.parse(definition);\n+            GraphQLSchema graphQLSchema = UnExecutableSchemaGenerator.makeUnExecutableSchema(typeRegistry);\n+            SchemaValidator schemaValidation = new SchemaValidator();\n+            Set<SchemaValidationError> validationErrors = schemaValidation.validateSchema(graphQLSchema);\n+            isValid = (validationErrors.toArray().length == 0);\n+        } catch (SchemaProblem e) {\n+            log.error(\"Unable to parse the GraphQL definition\", e);", "originalCommit": "9af9a71b58b717323533f1604c2b2d5756916e80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5NzY0OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r434297648", "bodyText": "Fixed in 169ace7", "author": "ChamodDamitha", "createdAt": "2020-06-03T04:13:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5Mjc4MA=="}], "type": "inlineReview"}, {"oid": "169ace7202aa557c7b6710f5bf9e481af4ff99d4", "url": "https://github.com/wso2/carbon-apimgt/commit/169ace7202aa557c7b6710f5bf9e481af4ff99d4", "message": "Handle DefinitionValidationException", "committedDate": "2020-06-03T04:10:35Z", "type": "forcePushed"}, {"oid": "f3c01ec3425a723761d230d1b822371a58578411", "url": "https://github.com/wso2/carbon-apimgt/commit/f3c01ec3425a723761d230d1b822371a58578411", "message": "Handle DefinitionValidationException", "committedDate": "2020-06-03T04:46:07Z", "type": "commit"}, {"oid": "f3c01ec3425a723761d230d1b822371a58578411", "url": "https://github.com/wso2/carbon-apimgt/commit/f3c01ec3425a723761d230d1b822371a58578411", "message": "Handle DefinitionValidationException", "committedDate": "2020-06-03T04:46:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI0NDM1MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r471244350", "bodyText": "class comments?", "author": "TanyaM", "createdAt": "2020-08-17T05:49:09Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/endpoint/registry/api/DefinitionValidationException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.apimgt.api.endpoint.registry.api;\n+\n+public class DefinitionValidationException extends EndpointRegistryException {", "originalCommit": "f3c01ec3425a723761d230d1b822371a58578411", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0OTg1OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r478849859", "bodyText": "Fixed in https://github.com/wso2-enterprise/service-catalog/commit/c3c2dccc31ebfa9b0106c8ff86414c8aad454b08", "author": "ChamodDamitha", "createdAt": "2020-08-28T06:07:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI0NDM1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUwMTU4OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r474501589", "bodyText": "Do we need these spaces between every line?", "author": "chashikajw", "createdAt": "2020-08-21T08:07:43Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/endpoint/registry/constants/EndpointRegistryConstants.java", "diffHunk": "@@ -69,5 +69,14 @@\n     public static final String DEFAULT_REGISTRY_NAME = \"Default Registry\";\n \n     public static final String SYSTEM_USER_NAME = \"SYSTEM_USER\";\n+\n+    public static final String DEFINITION_TYPE_OAS = \"OAS\";\n+\n+    public static final String DEFINITION_TYPE_WSDL1 = \"WSDL1\";\n+\n+    public static final String DEFINITION_TYPE_WSDL2 = \"WSDL2\";\n+\n+    public static final String DEFINITION_TYPE_GQL_SDL = \"GQL_SDL\";\n+", "originalCommit": "f3c01ec3425a723761d230d1b822371a58578411", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk1NjE2Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8618#discussion_r478956162", "bodyText": "Fixed in https://github.com/wso2-enterprise/service-catalog/pull/73", "author": "ChamodDamitha", "createdAt": "2020-08-28T08:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUwMTU4OQ=="}], "type": "inlineReview"}]}