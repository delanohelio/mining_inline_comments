{"pr_number": 1901, "pr_title": "Provide temporary sysprop for disabling HFJ 5.0 query optimization", "pr_createdAt": "2020-06-05T17:39:37Z", "pr_url": "https://github.com/hapifhir/hapi-fhir/pull/1901", "timeline": [{"oid": "575e00d715bc926bed4633b696357c2399c1cde8", "url": "https://github.com/hapifhir/hapi-fhir/commit/575e00d715bc926bed4633b696357c2399c1cde8", "message": "Add system property to disable IN query optimization", "committedDate": "2020-06-05T17:35:37Z", "type": "commit"}, {"oid": "fe3ba5789eb7ca27d4df24c5518e78e44eadd368", "url": "https://github.com/hapifhir/hapi-fhir/commit/fe3ba5789eb7ca27d4df24c5518e78e44eadd368", "message": "One more optimization", "committedDate": "2020-06-05T17:38:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2OTEwNg==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#discussion_r436069106", "bodyText": "I believe this if needs to be reversed.  if (!ourO...", "author": "fil512", "createdAt": "2020-06-05T17:42:57Z", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/predicate/JpaSystemProperties.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package ca.uhn.fhir.jpa.dao.predicate;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class JpaSystemProperties {\n+\n+\tprivate static final Logger ourLog = LoggerFactory.getLogger(JpaSystemProperties.class);\n+\tpublic static final String HFJ_FORCE_IN_CLAUSES_HF_50 = \"hfj_force_in_clauses_hf50\";\n+\tprivate static boolean ourOptmizeSingleElementInExpression;\n+\n+\tstatic {\n+\t\tupdateSettingsBasedOnCurrentSystemProperties();\n+\t}\n+\n+\t/**\n+\t * Non instantiable\n+\t */\n+\tprivate JpaSystemProperties() {\n+\t}\n+\n+\tpublic static void updateSettingsBasedOnCurrentSystemProperties() {\n+\t\tourOptmizeSingleElementInExpression = !(\"true\".equals(System.getProperty(HFJ_FORCE_IN_CLAUSES_HF_50)));\n+\t\tif (ourOptmizeSingleElementInExpression) {", "originalCommit": "fe3ba5789eb7ca27d4df24c5518e78e44eadd368", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3Mjk0Mw==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#discussion_r436072943", "bodyText": "you are absolutely right", "author": "jamesagnew", "createdAt": "2020-06-05T17:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2OTEwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MDc4Mg==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#discussion_r436070782", "bodyText": "I love these tests.", "author": "fil512", "createdAt": "2020-06-05T17:46:13Z", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/dao/r4/FhirResourceDaoR4SearchNoFtTest.java", "diffHunk": "@@ -4730,6 +4732,48 @@ public void testCircularReferencesDontBreakRevIncludes() {\n \n \t}\n \n+\t@Test\n+\tpublic void testSearchReference_DontOptmizeSingleValueInPredicate() {\n+\t\tPatient p = new Patient();\n+\t\tp.setActive(true);\n+\t\tString patientId = myPatientDao.create(p).getId().toUnqualifiedVersionless().getValue();\n+\n+\t\tAuditEvent audit = new AuditEvent();\n+\t\taudit.addEntity().getWhat().setReference(patientId);\n+\t\tString auditId = myAuditEventDao.create(audit).getId().toUnqualifiedVersionless().getValue();\n+\n+\n+\t\t// Default\n+\t\t{\n+\t\t\tmyCaptureQueriesListener.clear();\n+\t\t\tSearchParameterMap map = new SearchParameterMap();\n+\t\t\tmap.setLoadSynchronous(true);\n+\t\t\tmap.add(AuditEvent.SP_ENTITY, new ReferenceParam(patientId));\n+\t\t\tIBundleProvider outcome = myAuditEventDao.search(map);\n+\t\t\tassertThat(toUnqualifiedVersionlessIdValues(outcome), contains(auditId));\n+\t\t\tmyCaptureQueriesListener.logSelectQueriesForCurrentThread();\n+\t\t\tassertThat(myCaptureQueriesListener.getSelectQueriesForCurrentThread().get(0).getSql(true, true), containsString(\"myresource1_.TARGET_RESOURCE_ID=\"));\n+\t\t}\n+\n+\t\t// Disable optmization\n+\t\ttry {\n+\t\t\tSystem.setProperty(HFJ_FORCE_IN_CLAUSES_HF_50, \"true\");\n+\t\t\tJpaSystemProperties.updateSettingsBasedOnCurrentSystemProperties();\n+\n+\t\t\tmyCaptureQueriesListener.clear();\n+\t\t\tSearchParameterMap map = new SearchParameterMap();\n+\t\t\tmap.setLoadSynchronous(true);\n+\t\t\tmap.add(AuditEvent.SP_ENTITY, new ReferenceParam(patientId));\n+\t\t\tIBundleProvider outcome = myAuditEventDao.search(map);\n+\t\t\tassertThat(toUnqualifiedVersionlessIdValues(outcome), contains(auditId));\n+\t\t\tmyCaptureQueriesListener.logSelectQueriesForCurrentThread();\n+\t\t\tassertThat(myCaptureQueriesListener.getSelectQueriesForCurrentThread().get(0).getSql(true, true), containsString(\"myresource1_.TARGET_RESOURCE_ID in \"));", "originalCommit": "fe3ba5789eb7ca27d4df24c5518e78e44eadd368", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MTQ4NQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#discussion_r436071485", "bodyText": "How can we ensure we back this out a year from now.  Is there some build-breaking reminder we could set for ourselves?", "author": "fil512", "createdAt": "2020-06-05T17:47:35Z", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/predicate/JpaSystemProperties.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package ca.uhn.fhir.jpa.dao.predicate;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class JpaSystemProperties {\n+\n+\tprivate static final Logger ourLog = LoggerFactory.getLogger(JpaSystemProperties.class);\n+\tpublic static final String HFJ_FORCE_IN_CLAUSES_HF_50 = \"hfj_force_in_clauses_hf50\";", "originalCommit": "fe3ba5789eb7ca27d4df24c5518e78e44eadd368", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MjU2OQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#discussion_r436072569", "bodyText": "This is only merging to the 5_0 release branch so by default it expires in august.... do you thihnk that makes sense?", "author": "jamesagnew", "createdAt": "2020-06-05T17:49:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3NTI0OA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#discussion_r436075248", "bodyText": "oh right of course duh!", "author": "fil512", "createdAt": "2020-06-05T17:54:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MTQ4NQ=="}], "type": "inlineReview"}, {"oid": "45e7989b473c0f7dda107b203fe4805fc059f614", "url": "https://github.com/hapifhir/hapi-fhir/commit/45e7989b473c0f7dda107b203fe4805fc059f614", "message": "Address review comment", "committedDate": "2020-06-05T17:50:36Z", "type": "commit"}]}