{"pr_number": 19040, "pr_title": "fix using spy", "pr_createdAt": "2020-08-06T06:31:46Z", "pr_url": "https://github.com/dotCMS/core/pull/19040", "timeline": [{"oid": "286f114bb4e2360b429074752424fb3e7a39e3ae", "url": "https://github.com/dotCMS/core/commit/286f114bb4e2360b429074752424fb3e7a39e3ae", "message": "fix using spy", "committedDate": "2020-08-06T13:50:52Z", "type": "commit"}, {"oid": "286f114bb4e2360b429074752424fb3e7a39e3ae", "url": "https://github.com/dotCMS/core/commit/286f114bb4e2360b429074752424fb3e7a39e3ae", "message": "fix using spy", "committedDate": "2020-08-06T13:50:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0MjIwMA==", "url": "https://github.com/dotCMS/core/pull/19040#discussion_r466442200", "bodyText": "Codacy found an issue: Avoid unused imports such as 'org.mockito.Mockito'", "author": "dev-dotcms", "createdAt": "2020-08-06T14:12:08Z", "path": "dotCMS/src/test/java/v2/languages/LanguagesResourceTest.java", "diffHunk": "@@ -1,12 +1,12 @@\n package v2.languages;\n \n import static org.junit.Assert.assertEquals;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.*;", "originalCommit": "286f114bb4e2360b429074752424fb3e7a39e3ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0MjIwOA==", "url": "https://github.com/dotCMS/core/pull/19040#discussion_r466442208", "bodyText": "Codacy found an issue: Unnecessary use of fully qualified name 'Mockito.doReturn' due to existing static import 'org.mockito.Mockito.*'", "author": "dev-dotcms", "createdAt": "2020-08-06T14:12:09Z", "path": "dotCMS/src/test/java/v2/languages/LanguagesResourceTest.java", "diffHunk": "@@ -38,8 +40,12 @@ public void list() throws DotSecurityException, DotDataException {\n         when(initDataObject.getUser()).thenReturn(user);\n         when(webResource.init(request, httpServletResponse,true)).thenReturn(initDataObject);\n         when(languageAPI.getLanguages()).thenReturn(languages);\n+        final LanguageView languageView = mock(LanguageView.class);\n \n-        final LanguagesResource languagesResource = new LanguagesResource(languageAPI, webResource);\n+        final LanguagesResource languagesResource = spy(new LanguagesResource(languageAPI, webResource));\n+        Mockito.doReturn((Function<Language, LanguageView>) language -> languageView)", "originalCommit": "286f114bb4e2360b429074752424fb3e7a39e3ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}