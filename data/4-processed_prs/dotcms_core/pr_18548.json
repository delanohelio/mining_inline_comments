{"pr_number": 18548, "pr_title": "Issue 18530", "pr_createdAt": "2020-05-26T20:21:17Z", "pr_url": "https://github.com/dotCMS/core/pull/18548", "timeline": [{"oid": "2a83fc240c310ac3f35fc7c619aefa45432ddf7c", "url": "https://github.com/dotCMS/core/commit/2a83fc240c310ac3f35fc7c619aefa45432ddf7c", "message": "#18530 endpoint to get allMessagesByLocale", "committedDate": "2020-05-26T17:39:23Z", "type": "commit"}, {"oid": "a95ccce6c51ca2ccc1d18d67f85a95e770ab15d8", "url": "https://github.com/dotCMS/core/commit/a95ccce6c51ca2ccc1d18d67f85a95e770ab15d8", "message": "#18530 tests", "committedDate": "2020-05-26T17:40:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NjkzMw==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r430766933", "bodyText": "language shouldn't be a query parameter.\nPathing should be\nv2/languages/{language}/i18n to get all the messages for a language", "author": "dsilvam", "createdAt": "2020-05-26T23:45:22Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -184,6 +188,38 @@ public Response getMessages(@Context HttpServletRequest request,\n         return oldLanguagesResource.getMessages(request, i18NForm);\n     }\n \n+    /**\n+     * Gets all the Messages from the language passed.\n+     *\n+     * If no language is passed will use the default language.\n+     * @param request\n+     * @param response\n+     * @param language languageId or languageCountryCode e.g en_us, it_it\n+     * @return all the messages of the language\n+     */\n+    @GET\n+    @Path(\"/i18n/all\")\n+    @JSONP\n+    @NoCache\n+    @Produces({MediaType.APPLICATION_JSON, \"application/javascript\"})\n+    public Response getAllMessages (\n+            @Context final HttpServletRequest request,\n+            @Context final HttpServletResponse response,\n+            @DefaultValue(\"-1\") @QueryParam(\"language\") final String language){", "originalCommit": "a95ccce6c51ca2ccc1d18d67f85a95e770ab15d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NzMwNA==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r430767304", "bodyText": "Requesting changes above", "author": "dsilvam", "createdAt": "2020-05-26T23:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NjkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI0NDkwMQ==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r431244901", "bodyText": "The lang is optional, that's why is a queryparam.", "author": "fmontes", "createdAt": "2020-05-27T15:45:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NjkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUwNjUxMA==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r431506510", "bodyText": "done", "author": "erickgonzalez", "createdAt": "2020-05-27T23:51:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2NjkzMw=="}], "type": "inlineReview"}, {"oid": "5e1718165c8edd02b90d14a4d1d125707e1d0350", "url": "https://github.com/dotCMS/core/commit/5e1718165c8edd02b90d14a4d1d125707e1d0350", "message": "#18530 change path of endpoint", "committedDate": "2020-05-27T23:50:39Z", "type": "commit"}, {"oid": "5879d0a4be38b88642feec7b4d4f5ebdbfc801b7", "url": "https://github.com/dotCMS/core/commit/5879d0a4be38b88642feec7b4d4f5ebdbfc801b7", "message": "#18530 update tests to new path", "committedDate": "2020-05-27T23:51:07Z", "type": "commit"}, {"oid": "a239f986bb9a357cef202dfd7738ece2f5056c26", "url": "https://github.com/dotCMS/core/commit/a239f986bb9a357cef202dfd7738ece2f5056c26", "message": "logs failing test", "committedDate": "2020-05-28T14:44:04Z", "type": "commit"}, {"oid": "c10725b8bdadb19fe901ef3e98052fb34631ee84", "url": "https://github.com/dotCMS/core/commit/c10725b8bdadb19fe901ef3e98052fb34631ee84", "message": "fix failing test", "committedDate": "2020-05-28T16:08:57Z", "type": "commit"}, {"oid": "2e040c2f090ace90a3a8f79f2058db5613e0cb6a", "url": "https://github.com/dotCMS/core/commit/2e040c2f090ace90a3a8f79f2058db5613e0cb6a", "message": "merge master", "committedDate": "2020-05-28T16:29:10Z", "type": "commit"}, {"oid": "9dadb1eac096767320e67cbe9a5c2049293665bc", "url": "https://github.com/dotCMS/core/commit/9dadb1eac096767320e67cbe9a5c2049293665bc", "message": "fix failing test", "committedDate": "2020-05-28T17:33:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NDgwMw==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432754803", "bodyText": "missing test in method name", "author": "dsilvam", "createdAt": "2020-05-29T21:48:56Z", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -70,12 +73,18 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n     }\n \n     @Test\n-    public void getLanguageId_existing_base_expected_non_negative_lang_Test() throws DotSecurityException, DotDataException, SystemException {\n-\n-        final Language baseLanguage = new LanguageDataGen().languageCode(\"fr\").countryCode(null).nextPersisted();\n-        final Language frLanguage   = new LanguageDataGen().languageCode(\"fr\").countryCode(\"FR\").nextPersisted();\n+    public void getLanguageId_existing_base_expected_non_negative_lang_Test() {", "originalCommit": "9dadb1eac096767320e67cbe9a5c2049293665bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3MjkwMA==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432772900", "bodyText": "done", "author": "erickgonzalez", "createdAt": "2020-05-29T22:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NDgwMw=="}], "type": "inlineReview"}, {"oid": "57ce04a6a301fa0b4b387050fb0b0eb0315db921", "url": "https://github.com/dotCMS/core/commit/57ce04a6a301fa0b4b387050fb0b0eb0315db921", "message": "refactor test", "committedDate": "2020-05-29T22:50:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3MzU3OQ==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432773579", "bodyText": "start the class name with Uppercase", "author": "dsilvam", "createdAt": "2020-05-29T22:53:38Z", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -69,31 +77,61 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n         APILocator.getLanguageAPI().deleteLanguage(language);\n     }\n \n+    private static class testCaseLanguageLocale{", "originalCommit": "57ce04a6a301fa0b4b387050fb0b0eb0315db921", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NDMzMA==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432774330", "bodyText": "done", "author": "erickgonzalez", "createdAt": "2020-05-29T22:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3MzU3OQ=="}], "type": "inlineReview"}, {"oid": "0c91851ed878819395389e145a977cbf75986234", "url": "https://github.com/dotCMS/core/commit/0c91851ed878819395389e145a977cbf75986234", "message": "uppercase classname", "committedDate": "2020-05-29T22:55:08Z", "type": "commit"}, {"oid": "e2eed7681a102ba600577ea40b5890be3fdfd190", "url": "https://github.com/dotCMS/core/commit/e2eed7681a102ba600577ea40b5890be3fdfd190", "message": "uppercase classname", "committedDate": "2020-05-29T22:56:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTY2NA==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432775664", "bodyText": "Issue found: Avoid unused imports such as 'javax.ws.rs.DefaultValue'", "author": "dev-dotcms", "createdAt": "2020-05-29T23:02:49Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v2/languages/LanguagesResource.java", "diffHunk": "@@ -23,12 +23,16 @@\n import com.dotmarketing.util.StringUtils;\n import com.dotmarketing.util.UtilMethods;\n import com.google.common.collect.ImmutableList;\n+import com.liferay.portal.language.LanguageUtil;\n import com.liferay.portal.model.User;\n import com.rainerhahnekamp.sneakythrow.Sneaky;\n import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.ws.rs.DELETE;\n+import javax.ws.rs.DefaultValue;", "originalCommit": "e2eed7681a102ba600577ea40b5890be3fdfd190", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTY2Nw==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432775667", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-05-29T23:02:50Z", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -69,31 +76,61 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n         APILocator.getLanguageAPI().deleteLanguage(language);\n     }\n \n+    private static class TestCaseLanguageLocale {\n+        String localeRequested;\n+        long expectedLangId;\n+\n+        TestCaseLanguageLocale(final String localeRequested,final long expectedLangId){\n+            this.localeRequested = localeRequested;\n+            this.expectedLangId = expectedLangId;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] testCasesLanguageLocale() throws Exception {\n+\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+\n+        final Language baseLanguage = (UtilMethods.isSet(APILocator.getLanguageAPI().getLanguage(\"fr\",null))) ?", "originalCommit": "e2eed7681a102ba600577ea40b5890be3fdfd190", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTY3MA==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432775670", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-05-29T23:02:51Z", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -69,31 +76,61 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n         APILocator.getLanguageAPI().deleteLanguage(language);\n     }\n \n+    private static class TestCaseLanguageLocale {\n+        String localeRequested;\n+        long expectedLangId;\n+\n+        TestCaseLanguageLocale(final String localeRequested,final long expectedLangId){\n+            this.localeRequested = localeRequested;\n+            this.expectedLangId = expectedLangId;\n+        }\n+    }\n+\n+    @DataProvider\n+    public static Object[] testCasesLanguageLocale() throws Exception {\n+\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+\n+        final Language baseLanguage = (UtilMethods.isSet(APILocator.getLanguageAPI().getLanguage(\"fr\",null))) ?\n+                APILocator.getLanguageAPI().getLanguage(\"fr\",null) :\n+                new LanguageDataGen().languageCode(\"fr\").countryCode(null).nextPersisted();\n+        final Language frLanguage   = (UtilMethods.isSet(APILocator.getLanguageAPI().getLanguage(\"fr\",\"fr\"))) ?", "originalCommit": "e2eed7681a102ba600577ea40b5890be3fdfd190", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTY3NA==", "url": "https://github.com/dotCMS/core/pull/18548#discussion_r432775674", "bodyText": "Issue found: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest", "author": "dev-dotcms", "createdAt": "2020-05-29T23:02:52Z", "path": "dotCMS/src/integration-test/java/com/liferay/portal/language/LanguageUtilTest.java", "diffHunk": "@@ -69,31 +76,61 @@ public void getLanguageId_existing_expected_non_negative_lang_Test() throws DotS\n         APILocator.getLanguageAPI().deleteLanguage(language);\n     }\n \n+    private static class TestCaseLanguageLocale {\n+        String localeRequested;\n+        long expectedLangId;\n+\n+        TestCaseLanguageLocale(final String localeRequested,final long expectedLangId){\n+            this.localeRequested = localeRequested;\n+            this.expectedLangId = expectedLangId;\n+        }\n+    }\n+\n+    @DataProvider", "originalCommit": "e2eed7681a102ba600577ea40b5890be3fdfd190", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}