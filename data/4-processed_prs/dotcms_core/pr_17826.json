{"pr_number": 17826, "pr_title": "Issue 17772 binary validations", "pr_createdAt": "2020-01-10T21:29:33Z", "pr_url": "https://github.com/dotCMS/core/pull/17826", "timeline": [{"oid": "b3ad2eaa01ca828d19823c515824939a8a1d40d2", "url": "https://github.com/dotCMS/core/commit/b3ad2eaa01ca828d19823c515824939a8a1d40d2", "message": "#17772 adding validations for binary files", "committedDate": "2020-01-06T22:46:14Z", "type": "commit"}, {"oid": "d0600bd67191bf6da6113fe777e37d4290bed482", "url": "https://github.com/dotCMS/core/commit/d0600bd67191bf6da6113fe777e37d4290bed482", "message": "#17772 unit test", "committedDate": "2020-01-07T19:35:50Z", "type": "commit"}, {"oid": "449a815d74b58e21a4a852ebe1b868d6cbf93883", "url": "https://github.com/dotCMS/core/commit/449a815d74b58e21a4a852ebe1b868d6cbf93883", "message": "#17772 feedback", "committedDate": "2020-01-07T20:09:20Z", "type": "commit"}, {"oid": "cf019ca5368e2dc37f95fe2fd85a91286b531b57", "url": "https://github.com/dotCMS/core/commit/cf019ca5368e2dc37f95fe2fd85a91286b531b57", "message": "#17772 feedback", "committedDate": "2020-01-07T20:09:37Z", "type": "commit"}, {"oid": "8cd75eb00f5335b17c4d9ae92a463bbb56163532", "url": "https://github.com/dotCMS/core/commit/8cd75eb00f5335b17c4d9ae92a463bbb56163532", "message": "#17772 feedback 2", "committedDate": "2020-01-07T23:01:35Z", "type": "commit"}, {"oid": "86e2be6c1e19ef7c0b4f0ddbfa9a5c2e2cd5b828", "url": "https://github.com/dotCMS/core/commit/86e2be6c1e19ef7c0b4f0ddbfa9a5c2e2cd5b828", "message": "#17772 adding feedback and fixes", "committedDate": "2020-01-08T18:18:56Z", "type": "commit"}, {"oid": "fa1bd84b08529a7afe4f202616c2551234e43ab8", "url": "https://github.com/dotCMS/core/commit/fa1bd84b08529a7afe4f202616c2551234e43ab8", "message": "#17772 adding fixes, refactoring and test", "committedDate": "2020-01-09T18:14:19Z", "type": "commit"}, {"oid": "d8696da7c5e9a3f75b2f9df089d8006edc29f7cf", "url": "https://github.com/dotCMS/core/commit/d8696da7c5e9a3f75b2f9df089d8006edc29f7cf", "message": "#17772 adding fixes, refactoring and test", "committedDate": "2020-01-09T18:28:30Z", "type": "commit"}, {"oid": "40b3eba569977c5ff5f9254797c8379ee03cc8df", "url": "https://github.com/dotCMS/core/commit/40b3eba569977c5ff5f9254797c8379ee03cc8df", "message": "#17772 adding a fix to ignore the field variable keys from jackson", "committedDate": "2020-01-13T21:39:51Z", "type": "commit"}, {"oid": "339154d57a0fda67203c4b1549873daf11a66ad9", "url": "https://github.com/dotCMS/core/commit/339154d57a0fda67203c4b1549873daf11a66ad9", "message": "#17772 feedback done", "committedDate": "2020-01-14T21:37:23Z", "type": "commit"}, {"oid": "cd20109c5a2babb8a13014744225a1bf2303d107", "url": "https://github.com/dotCMS/core/commit/cd20109c5a2babb8a13014744225a1bf2303d107", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17772-binary-validations", "committedDate": "2020-02-04T15:57:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzQ4Mw==", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803483", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-02-04T17:08:00Z", "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "diffHunk": "@@ -13,6 +13,40 @@\n  */\n public class ConversionUtilsTest extends UnitTestBase {\n \n+    @Test\n+    public void toLongFromByteCountHumanDisplaySizeTest () {\n+\n+        long value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"0\", -1l);\n+        Assert.assertEquals(0l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"10\", -1l);\n+        Assert.assertEquals(10l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"900\", -1l);\n+        Assert.assertEquals(900l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"9000\", -1l);\n+        Assert.assertEquals(9000l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"1kb\", -1l);\n+        Assert.assertEquals(1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"112kb\", -1l);\n+        Assert.assertEquals(112l * 1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"3kb\", -1l);\n+        Assert.assertEquals( (3l * 1024l), value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"2mb\", -1l);\n+        Assert.assertEquals( (2l * 1024l * 1024l), value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"4gb\", -1l);\n+        Assert.assertEquals( (4l * 1024l * 1024l * 1024l), value);", "originalCommit": "cd20109c5a2babb8a13014744225a1bf2303d107", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzQ5Mg==", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803492", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-02-04T17:08:01Z", "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "diffHunk": "@@ -13,6 +13,40 @@\n  */\n public class ConversionUtilsTest extends UnitTestBase {\n \n+    @Test\n+    public void toLongFromByteCountHumanDisplaySizeTest () {\n+\n+        long value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"0\", -1l);\n+        Assert.assertEquals(0l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"10\", -1l);\n+        Assert.assertEquals(10l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"900\", -1l);\n+        Assert.assertEquals(900l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"9000\", -1l);\n+        Assert.assertEquals(9000l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"1kb\", -1l);\n+        Assert.assertEquals(1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"112kb\", -1l);\n+        Assert.assertEquals(112l * 1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"3kb\", -1l);\n+        Assert.assertEquals( (3l * 1024l), value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"2mb\", -1l);\n+        Assert.assertEquals( (2l * 1024l * 1024l), value);", "originalCommit": "cd20109c5a2babb8a13014744225a1bf2303d107", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzUwNQ==", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803505", "bodyText": "Issue found: Avoid unused imports such as 'javax.ws.rs'", "author": "dev-dotcms", "createdAt": "2020-02-04T17:08:03Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileResource.java", "diffHunk": "@@ -33,10 +10,25 @@\n import com.dotmarketing.exception.DoesNotExistException;\n import com.dotmarketing.util.Config;\n import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.ImmutableMap;\n-\n import io.vavr.control.Try;\n+import org.glassfish.jersey.media.multipart.BodyPart;\n+import org.glassfish.jersey.media.multipart.ContentDisposition;\n+import org.glassfish.jersey.media.multipart.FormDataMultiPart;\n+import org.glassfish.jersey.server.JSONP;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.*;", "originalCommit": "cd20109c5a2babb8a13014744225a1bf2303d107", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzUyNw==", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803527", "bodyText": "Issue found: A method/constructor should not explicitly throw java.lang.Exception", "author": "dev-dotcms", "createdAt": "2020-02-04T17:08:04Z", "path": "dotCMS/src/integration-test/java/com/dotcms/util/MimeTypeUtilsTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.UnitTestBase;\n+import com.dotcms.repackage.org.apache.commons.io.FileUtils;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import javax.imageio.ImageIO;\n+import java.awt.*;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Date;\n+\n+/**\n+ * MimeTypeUtils unit test.\n+ * @author jsanca\n+ */\n+public class MimeTypeUtilsTest extends UnitTestBase {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "originalCommit": "cd20109c5a2babb8a13014744225a1bf2303d107", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzU0MQ==", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803541", "bodyText": "Issue found: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "author": "dev-dotcms", "createdAt": "2020-02-04T17:08:05Z", "path": "dotCMS/src/main/java/com/dotcms/util/MimeTypeUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.tika.TikaUtils;\n+import com.dotmarketing.util.Config;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n+import com.rainerhahnekamp.sneakythrow.Sneaky;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+/**\n+ * Mime Type Utils\n+ * @author jsanca\n+ */\n+public class MimeTypeUtils {\n+\n+    /**\n+     * Gets the mime type of a file.\n+     * @param binary {@link File}\n+     * @return String\n+     */\n+    public static String getMimeType (final File binary) {\n+\n+        final Path path = binary.toPath();\n+        String mimeType = Sneaky.sneak(() -> Files.probeContentType(path));\n+\n+        if  (!UtilMethods.isSet(mimeType)) {\n+\n+            mimeType    = Config.CONTEXT.getMimeType(binary.getAbsolutePath());\n+\n+            if( !UtilMethods.isSet(mimeType)){\n+                try {\n+                    mimeType = new TikaUtils().detect(binary);\n+                } catch(Exception e) {", "originalCommit": "cd20109c5a2babb8a13014744225a1bf2303d107", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzU1Nw==", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803557", "bodyText": "Issue found: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.", "author": "dev-dotcms", "createdAt": "2020-02-04T17:08:07Z", "path": "dotCMS/src/main/java/com/dotcms/util/MimeTypeUtils.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.dotcms.util;\n+\n+import com.dotcms.tika.TikaUtils;\n+import com.dotmarketing.util.Config;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.UtilMethods;\n+import com.rainerhahnekamp.sneakythrow.Sneaky;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+/**\n+ * Mime Type Utils\n+ * @author jsanca\n+ */\n+public class MimeTypeUtils {", "originalCommit": "cd20109c5a2babb8a13014744225a1bf2303d107", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwMzU4MA==", "url": "https://github.com/dotCMS/core/pull/17826#discussion_r374803580", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-02-04T17:08:08Z", "path": "dotCMS/src/test/java/com/dotcms/util/ConversionUtilsTest.java", "diffHunk": "@@ -13,6 +13,40 @@\n  */\n public class ConversionUtilsTest extends UnitTestBase {\n \n+    @Test\n+    public void toLongFromByteCountHumanDisplaySizeTest () {\n+\n+        long value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"0\", -1l);\n+        Assert.assertEquals(0l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"10\", -1l);\n+        Assert.assertEquals(10l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"900\", -1l);\n+        Assert.assertEquals(900l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"9000\", -1l);\n+        Assert.assertEquals(9000l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"1kb\", -1l);\n+        Assert.assertEquals(1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"112kb\", -1l);\n+        Assert.assertEquals(112l * 1024l, value);\n+\n+        value = ConversionUtils.toLongFromByteCountHumanDisplaySize(\"3kb\", -1l);\n+        Assert.assertEquals( (3l * 1024l), value);", "originalCommit": "cd20109c5a2babb8a13014744225a1bf2303d107", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}