{"pr_number": 19327, "pr_title": "Issue 18314 lucene search", "pr_createdAt": "2020-09-24T19:59:48Z", "pr_url": "https://github.com/dotCMS/core/pull/19327", "timeline": [{"oid": "ff0cebded5409a321f6f14859a31c6c34056dfc2", "url": "https://github.com/dotCMS/core/commit/ff0cebded5409a321f6f14859a31c6c34056dfc2", "message": "#18314 adding the _search resource for query tool", "committedDate": "2020-09-24T18:07:15Z", "type": "commit"}, {"oid": "9cafff2101e7fa5b8c29b2012cbb136738387ffe", "url": "https://github.com/dotCMS/core/commit/9cafff2101e7fa5b8c29b2012cbb136738387ffe", "message": "#18314 adding a fix when user is not set, using the user logged in to make the query", "committedDate": "2020-09-24T19:55:38Z", "type": "commit"}, {"oid": "b01169fcff7e7adef6b25d3769911368b6701c45", "url": "https://github.com/dotCMS/core/commit/b01169fcff7e7adef6b25d3769911368b6701c45", "message": "#18314 adding curl test", "committedDate": "2020-09-24T19:58:26Z", "type": "commit"}, {"oid": "3c0a62821f0452434dd2439496155d8a031c2ac5", "url": "https://github.com/dotCMS/core/commit/3c0a62821f0452434dd2439496155d8a031c2ac5", "message": "#18314 fixing a bit doc", "committedDate": "2020-09-24T20:06:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwMDIyMw==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r494600223", "bodyText": "I would use the ContentletAPI.indexCount here, rather than return results and count them", "author": "wezell", "createdAt": "2020-09-24T20:45:38Z", "path": "dotCMS/src/main/java/com/dotcms/rest/ContentResource.java", "diffHunk": "@@ -113,6 +119,90 @@\n     private final WebResource webResource = new WebResource();\n     private final ContentHelper contentHelper = ContentHelper.getInstance();\n \n+    /**\n+     *\n+     * Do a search, parameter are received by post and returns the json with the search info and contentlet results\n+     *\n+     * Example call using curl:\n+     * curl --location --request POST 'http://localhost:8080/api/content/_search' \\\n+     * --header 'Content-Type: application/json' \\\n+     * --data-raw '{\n+     *      \t \"query\": \"+structurename:webpagecontent\",\n+     *       \t \"sort\":\"modDate\",\n+     *       \t \"limit\":20,\n+     *       \t \"offset\":0,\n+     *           \"userId\":\"dotcms.org.1\"\n+     * }'\n+     *\n+     * @param request {@link HttpServletRequest} object\n+     * @param response {@link HttpServletResponse} object\n+     * @param searchForm {@link SearchForm}\n+     * @return json array of objects. each object with inode and identifier\n+     */\n+    @POST\n+    @Path(\"/_search\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response search(@Context HttpServletRequest request,\n+                           @Context final HttpServletResponse response,\n+                           final SearchForm searchForm) throws DotSecurityException, DotDataException {\n+\n+        final InitDataObject initData = this.webResource.init\n+                (null, request, response, false, null);\n+\n+        final User   user    = initData.getUser();\n+        final String query   = searchForm.getQuery(); // \"\"\n+        final String sort    = searchForm.getSort(); // \"\"\n+        final int    limit   = searchForm.getLimit();  // 20\n+        final int    offset  = searchForm.getOffset(); // 0\n+        final PageMode pageMode   = PageMode.get(request);\n+        final String userToPullID = searchForm.getUserId();\n+        final String tmDate = (String) request.getSession().getAttribute(\"tm_date\");\n+        User   userForPull        = user;\n+        List<ContentletSearch> contentletSearches = Collections.emptyList();\n+        List<Contentlet>       contentlets        = Collections.emptyList();\n+        long startAPISearchPull = 0;\n+        long afterAPISearchPull = 0;\n+        long startAPIPull = 0;\n+        long afterAPIPull = 0;\n+\n+        Logger.debug(this, ()-> \"Searching contentlets by: \" + searchForm);\n+\n+        if(null != user && user.isAdmin()){\n+\n+            if(UtilMethods.isSet(userToPullID)) {\n+\n+                userForPull = APILocator.getUserAPI().loadUserById(userToPullID, APILocator.systemUser(),true);\n+            }\n+        }\n+\n+        if (UtilMethods.isSet(query)) {\n+\n+            startAPISearchPull = Calendar.getInstance().getTimeInMillis();\n+            contentletSearches = APILocator.getContentletAPI().searchIndex(query, limit, offset, sort, userForPull, pageMode.respectAnonPerms);", "originalCommit": "3c0a62821f0452434dd2439496155d8a031c2ac5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwMTQzNw==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r494601437", "bodyText": "This needs to be run through the getJSON method so the results will match the existing api\n                result = getJSON(contentlets, request, response, render, user, depth,\n                        respectFrontendRoles, language, live, allCategoriesInfo);", "author": "wezell", "createdAt": "2020-09-24T20:48:05Z", "path": "dotCMS/src/main/java/com/dotcms/rest/ContentResource.java", "diffHunk": "@@ -113,6 +119,90 @@\n     private final WebResource webResource = new WebResource();\n     private final ContentHelper contentHelper = ContentHelper.getInstance();\n \n+    /**\n+     *\n+     * Do a search, parameter are received by post and returns the json with the search info and contentlet results\n+     *\n+     * Example call using curl:\n+     * curl --location --request POST 'http://localhost:8080/api/content/_search' \\\n+     * --header 'Content-Type: application/json' \\\n+     * --data-raw '{\n+     *      \t \"query\": \"+structurename:webpagecontent\",\n+     *       \t \"sort\":\"modDate\",\n+     *       \t \"limit\":20,\n+     *       \t \"offset\":0,\n+     *           \"userId\":\"dotcms.org.1\"\n+     * }'\n+     *\n+     * @param request {@link HttpServletRequest} object\n+     * @param response {@link HttpServletResponse} object\n+     * @param searchForm {@link SearchForm}\n+     * @return json array of objects. each object with inode and identifier\n+     */\n+    @POST\n+    @Path(\"/_search\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response search(@Context HttpServletRequest request,\n+                           @Context final HttpServletResponse response,\n+                           final SearchForm searchForm) throws DotSecurityException, DotDataException {\n+\n+        final InitDataObject initData = this.webResource.init\n+                (null, request, response, false, null);\n+\n+        final User   user    = initData.getUser();\n+        final String query   = searchForm.getQuery(); // \"\"\n+        final String sort    = searchForm.getSort(); // \"\"\n+        final int    limit   = searchForm.getLimit();  // 20\n+        final int    offset  = searchForm.getOffset(); // 0\n+        final PageMode pageMode   = PageMode.get(request);\n+        final String userToPullID = searchForm.getUserId();\n+        final String tmDate = (String) request.getSession().getAttribute(\"tm_date\");\n+        User   userForPull        = user;\n+        List<ContentletSearch> contentletSearches = Collections.emptyList();\n+        List<Contentlet>       contentlets        = Collections.emptyList();\n+        long startAPISearchPull = 0;\n+        long afterAPISearchPull = 0;\n+        long startAPIPull = 0;\n+        long afterAPIPull = 0;\n+\n+        Logger.debug(this, ()-> \"Searching contentlets by: \" + searchForm);\n+\n+        if(null != user && user.isAdmin()){\n+\n+            if(UtilMethods.isSet(userToPullID)) {\n+\n+                userForPull = APILocator.getUserAPI().loadUserById(userToPullID, APILocator.systemUser(),true);\n+            }\n+        }\n+\n+        if (UtilMethods.isSet(query)) {\n+\n+            startAPISearchPull = Calendar.getInstance().getTimeInMillis();\n+            contentletSearches = APILocator.getContentletAPI().searchIndex(query, limit, offset, sort, userForPull, pageMode.respectAnonPerms);\n+            afterAPISearchPull = Calendar.getInstance().getTimeInMillis();\n+\n+            startAPIPull       = Calendar.getInstance().getTimeInMillis();\n+            contentlets        = ContentUtils.pull(processQuery(query), offset, limit, sort, user, tmDate, pageMode.respectAnonPerms)", "originalCommit": "3c0a62821f0452434dd2439496155d8a031c2ac5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwMjA0MA==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r494602040", "bodyText": "Missing the render param too", "author": "wezell", "createdAt": "2020-09-24T20:49:14Z", "path": "dotCMS/src/main/java/com/dotcms/rest/ContentResource.java", "diffHunk": "@@ -113,6 +119,90 @@\n     private final WebResource webResource = new WebResource();\n     private final ContentHelper contentHelper = ContentHelper.getInstance();\n \n+    /**\n+     *\n+     * Do a search, parameter are received by post and returns the json with the search info and contentlet results\n+     *\n+     * Example call using curl:\n+     * curl --location --request POST 'http://localhost:8080/api/content/_search' \\\n+     * --header 'Content-Type: application/json' \\\n+     * --data-raw '{\n+     *      \t \"query\": \"+structurename:webpagecontent\",\n+     *       \t \"sort\":\"modDate\",\n+     *       \t \"limit\":20,\n+     *       \t \"offset\":0,\n+     *           \"userId\":\"dotcms.org.1\"\n+     * }'\n+     *\n+     * @param request {@link HttpServletRequest} object\n+     * @param response {@link HttpServletResponse} object\n+     * @param searchForm {@link SearchForm}\n+     * @return json array of objects. each object with inode and identifier\n+     */\n+    @POST\n+    @Path(\"/_search\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response search(@Context HttpServletRequest request,\n+                           @Context final HttpServletResponse response,\n+                           final SearchForm searchForm) throws DotSecurityException, DotDataException {\n+\n+        final InitDataObject initData = this.webResource.init\n+                (null, request, response, false, null);\n+\n+        final User   user    = initData.getUser();\n+        final String query   = searchForm.getQuery(); // \"\"\n+        final String sort    = searchForm.getSort(); // \"\"\n+        final int    limit   = searchForm.getLimit();  // 20\n+        final int    offset  = searchForm.getOffset(); // 0\n+        final PageMode pageMode   = PageMode.get(request);", "originalCommit": "3c0a62821f0452434dd2439496155d8a031c2ac5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "606d02e29d48f24ddeef06e38f9e5044087a6fe6", "url": "https://github.com/dotCMS/core/commit/606d02e29d48f24ddeef06e38f9e5044087a6fe6", "message": "progress on making fetch", "committedDate": "2020-09-25T00:06:23Z", "type": "commit"}, {"oid": "436be1a41d7871ab0444a027bb1e5347e9deacb4", "url": "https://github.com/dotCMS/core/commit/436be1a41d7871ab0444a027bb1e5347e9deacb4", "message": "#18314 adding missing vars and some other changes", "committedDate": "2020-09-27T21:40:40Z", "type": "commit"}, {"oid": "dbac428085559dc659e7a5033a457341887352dd", "url": "https://github.com/dotCMS/core/commit/dbac428085559dc659e7a5033a457341887352dd", "message": "Merge branch 'issue-18314-lucene-search' of github.com:dotCMS/core into issue-18314-lucene-search", "committedDate": "2020-09-27T21:41:26Z", "type": "commit"}, {"oid": "62d238f37c11714557d48461e2ebb95099bc26ec", "url": "https://github.com/dotCMS/core/commit/62d238f37c11714557d48461e2ebb95099bc26ec", "message": "#18314 minor fix", "committedDate": "2020-09-28T15:39:30Z", "type": "commit"}, {"oid": "97ba2f70288eb1f9901e367dccf3bfb425c64d08", "url": "https://github.com/dotCMS/core/commit/97ba2f70288eb1f9901e367dccf3bfb425c64d08", "message": "endpoint changes + loading message", "committedDate": "2020-09-28T22:38:57Z", "type": "commit"}, {"oid": "e480363fd9808b8a08a7fade7c405cc0d7867cce", "url": "https://github.com/dotCMS/core/commit/e480363fd9808b8a08a7fade7c405cc0d7867cce", "message": "remove re-index field", "committedDate": "2020-09-28T22:46:42Z", "type": "commit"}, {"oid": "059af056f1360738362806b0ce1fdadb414c6c46", "url": "https://github.com/dotCMS/core/commit/059af056f1360738362806b0ce1fdadb414c6c46", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18314-lucene-search", "committedDate": "2020-10-08T15:30:53Z", "type": "commit"}, {"oid": "789a0ddbd143a4e9346110f549a0385338cee8eb", "url": "https://github.com/dotCMS/core/commit/789a0ddbd143a4e9346110f549a0385338cee8eb", "message": "#18314 validation", "committedDate": "2020-10-08T18:19:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ1Nw==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927457", "bodyText": "Codacy found an issue: Field userId has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:10Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ2Nw==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927467", "bodyText": "Codacy found an issue: Avoid using redundant field initializer for 'limit'", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:12Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ4Mg==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927482", "bodyText": "Codacy found an issue: Field offset has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:13Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ5NA==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927494", "bodyText": "Codacy found an issue: Field query has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:14Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzQ5OQ==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927499", "bodyText": "Codacy found an issue: Field languageId has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:15Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;\n+        private  @JsonProperty String render;\n+        private  @JsonProperty int depth       = -1;\n+        private  @JsonProperty long languageId = -1;", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzUwNw==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927507", "bodyText": "Codacy found an issue: Field render has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:16Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;\n+        private  @JsonProperty String render;", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzUxOQ==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927519", "bodyText": "Codacy found an issue: Field limit has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:16Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzUzMA==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927530", "bodyText": "Codacy found an issue: Field sort has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:17Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzU0MQ==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927541", "bodyText": "Codacy found an issue: Field allCategoriesInfo has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:18Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;\n+        private  @JsonProperty String render;\n+        private  @JsonProperty int depth       = -1;\n+        private  @JsonProperty long languageId = -1;\n+        private  @JsonProperty boolean allCategoriesInfo;", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyNzU1Nw==", "url": "https://github.com/dotCMS/core/pull/19327#discussion_r501927557", "bodyText": "Codacy found an issue: Field depth has the same name as a method", "author": "dev-dotcms", "createdAt": "2020-10-08T18:27:19Z", "path": "dotCMS/src/main/java/com/dotcms/rest/SearchForm.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.dotcms.rest;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+\n+/**\n+ * Search Form to make a ES query\n+ * @author jsanca\n+ */\n+@JsonDeserialize(builder = SearchForm.Builder.class)\n+public class SearchForm {\n+\n+    private final String query;\n+    private final String sort;\n+    private final int limit;\n+    private final int offset;\n+    private final String userId;\n+    private final String render;\n+    private final int depth;\n+    private final long languageId;\n+    private final boolean allCategoriesInfo;\n+\n+    private SearchForm (final Builder builder) {\n+\n+        this.query  = builder.query;\n+        this.sort   = builder.sort;\n+        this.limit  = builder.limit;\n+        this.offset = builder.offset;\n+        this.userId = builder.userId;\n+        this.render = builder.render;\n+        this.depth  = builder.depth;\n+        this.languageId = builder.languageId;\n+        this.allCategoriesInfo = builder.allCategoriesInfo;\n+    }\n+\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public String getSort() {\n+        return sort;\n+    }\n+\n+    public int getLimit() {\n+        return limit;\n+    }\n+\n+    public int getOffset() {\n+        return offset;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public String getRender() {\n+        return this.render;\n+    }\n+\n+    public int getDepth() {\n+        return depth;\n+    }\n+\n+    public long getLanguageId() {\n+        return languageId;\n+    }\n+\n+    public boolean isAllCategoriesInfo() {\n+        return allCategoriesInfo;\n+    }\n+\n+    public static final class Builder {\n+\n+        private  @JsonProperty String query  = \"\";\n+        private  @JsonProperty String sort   = \"\";\n+        private  @JsonProperty int    limit  = 0;\n+        private  @JsonProperty int    offset = 20;\n+        private  @JsonProperty String userId;\n+        private  @JsonProperty String render;\n+        private  @JsonProperty int depth       = -1;", "originalCommit": "789a0ddbd143a4e9346110f549a0385338cee8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}