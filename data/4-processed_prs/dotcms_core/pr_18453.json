{"pr_number": 18453, "pr_title": "Issue #10404 - Allow Users to edit inserted image", "pr_createdAt": "2020-05-08T17:36:22Z", "pr_url": "https://github.com/dotCMS/core/pull/18453", "timeline": [{"oid": "862bf67d15a45d0e811a691b8b48d8d0175cc1ef", "url": "https://github.com/dotCMS/core/commit/862bf67d15a45d0e811a691b8b48d8d0175cc1ef", "message": "feat: implemented the drag & drop webcomponent in the WYSIWYG editor", "committedDate": "2020-05-04T22:17:17Z", "type": "commit"}, {"oid": "7abe9b40e8f549c5a225726b89800ff74aa803de", "url": "https://github.com/dotCMS/core/commit/7abe9b40e8f549c5a225726b89800ff74aa803de", "message": "fixed a typo and incread the height", "committedDate": "2020-05-04T22:25:05Z", "type": "commit"}, {"oid": "19d45fbdac55b88732dbaee6f7c3f8acd37ac596", "url": "https://github.com/dotCMS/core/commit/19d45fbdac55b88732dbaee6f7c3f8acd37ac596", "message": "removed console.log", "committedDate": "2020-05-05T08:46:54Z", "type": "commit"}, {"oid": "92bf5ff2476e764ba2f1fc5dad90dd455268d8fb", "url": "https://github.com/dotCMS/core/commit/92bf5ff2476e764ba2f1fc5dad90dd455268d8fb", "message": "clean up formatting", "committedDate": "2020-05-05T08:59:40Z", "type": "commit"}, {"oid": "f6352f95de7842889b29490cca8246088ceedf13", "url": "https://github.com/dotCMS/core/commit/f6352f95de7842889b29490cca8246088ceedf13", "message": "formatting issues again", "committedDate": "2020-05-05T09:01:32Z", "type": "commit"}, {"oid": "4b17d67f5b5519f086e8286756bac879617c6f30", "url": "https://github.com/dotCMS/core/commit/4b17d67f5b5519f086e8286756bac879617c6f30", "message": "Moved the CSS to dotcms-dojo-theme", "committedDate": "2020-05-05T17:01:30Z", "type": "commit"}, {"oid": "8a4c55afdb09c5c8fc3acbfadc00fe32aebe46c4", "url": "https://github.com/dotCMS/core/commit/8a4c55afdb09c5c8fc3acbfadc00fe32aebe46c4", "message": "Added the compiled dotcms.css file", "committedDate": "2020-05-05T17:10:09Z", "type": "commit"}, {"oid": "51d3f8be84530f951c05c557745374dc3ae651fe", "url": "https://github.com/dotCMS/core/commit/51d3f8be84530f951c05c557745374dc3ae651fe", "message": "Assets can now be uploaded by folder or host", "committedDate": "2020-05-05T22:45:13Z", "type": "commit"}, {"oid": "553b0624d77d6fec0868aec8d96ba822eef2754e", "url": "https://github.com/dotCMS/core/commit/553b0624d77d6fec0868aec8d96ba822eef2754e", "message": "Improved the conditions", "committedDate": "2020-05-05T23:07:49Z", "type": "commit"}, {"oid": "3aa0a8905dc566c772f1919bda77bcdd6981cf31", "url": "https://github.com/dotCMS/core/commit/3aa0a8905dc566c772f1919bda77bcdd6981cf31", "message": "added doteditimage plugin", "committedDate": "2020-05-08T17:15:41Z", "type": "commit"}, {"oid": "c8708f19b174da5d07ffeddd8e1ddcd284be7526", "url": "https://github.com/dotCMS/core/commit/c8708f19b174da5d07ffeddd8e1ddcd284be7526", "message": "Edit image functionality added", "committedDate": "2020-05-08T17:25:29Z", "type": "commit"}, {"oid": "baea23504972128b7abe2496938e4faa54891cd0", "url": "https://github.com/dotCMS/core/commit/baea23504972128b7abe2496938e4faa54891cd0", "message": "clean up", "committedDate": "2020-05-08T17:31:11Z", "type": "commit"}, {"oid": "2798b3b16e98bd8441285d8c938885d61b7d614c", "url": "https://github.com/dotCMS/core/commit/2798b3b16e98bd8441285d8c938885d61b7d614c", "message": "removed unused function", "committedDate": "2020-05-08T17:35:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NjcyOQ==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r422276729", "bodyText": "is ok to leave this here?", "author": "jdotcms", "createdAt": "2020-05-08T17:40:34Z", "path": "dotCMS/src/main/webapp/html/js/dotcms/dijit/image/ImageEditor.js", "diffHunk": "@@ -2,1174 +2,1088 @@ dojo.provide(\"dotcms.dijit.image.ImageEditor\");\n dojo.require(\"dotcms.dijit.image.Crop\");\n dojo.require(\"dijit.Dialog\");\n \n-\n-function _rand(){\n-     return Math.floor(Math.random()*100000000);\n+function _rand() {\n+\treturn Math.floor(Math.random() * 100000000);\n }\n \n-dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget,{\n-\n-    // cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n-    imageToolJsp:'/html/js/dotcms/dijit/image/image_tool.jsp',\n-    baseFilterUrl:\"/contentAsset/image\",\n-    // changes to show the value in the toolbar\n-    currentUrl:\"/contentAsset/image\",\n-    ajaxUrl:\"/servlet/dotImageToolAjax\",\n-\n-    resizeFilter:false,\n-    zoomValue:0,\n-    inode:'0',\n-    tempId:null,\n-    inited: false,\n-    painting : false,\n-    thumbnailWidth:500,\n-    thumbnailHeight:250,\n-    thumbDivId:'',\n-    fieldName:'fileAsset',\n-    saveAsIncrement:1,\n-    editImageText:\"Edit Image\",\n-    binaryFieldId:'',\n-    fieldContentletId:'',\n-    saveAsFileName:'',\n-    compression:'none',\n-    compressionValue:65,\n-    fileSize:0,\n-    \n-\n-\n-\n-\n-    postCreate: function(){\n-        window.top._dotImageEditor = this;\n-        // this._loadCss();\n-        this.filters = new Array();\n-\n-        var where= (this.parentNode != undefined) ? dojo.byId(this.parentNode) : this.domNode;\n-        // create divs\n-\n-        this.thumbnailDiv = dojo.create('div' ,{\n-            style:\"margin-bottom:5px;max-width:1040px;min-width:150px;display:inline-block;height:\" + (this.thumbnailHeight+4) +\"px\"},where);\n-\n-            dojo.attr(this.thumbnailDiv, \"class\", \"thumbnailDiv\");\n-\n-\n-        this.editFileWindow = dojo.create('div' ,{\n-            innerHTML:this.editImageText},this.thumbnailDiv);\n-\n-            dojo.attr(this.editFileWindow, \"class\", \"editImageText\");\n-\n-\n-        this.thumbnailImage = dojo.create(\"img\" , {\n-            style:\"max-width:100%;\"},this.thumbnailDiv);\n-\n-\n-\n-\n-\n-        this._initBaseFilterUrl();\n-        this.setThumbnail();\n-\n-        dojo.connect(this.thumbnailDiv , \"onclick\", this, \"createImageWindow\");\n-    },\n-\n-    _initBaseFilterUrl: function() {\n-        var shorty = this.inode  ;\n-\n-        if(this.tempId){\n-            shorty=this.tempId;\n-        }\n-        \n-        \n-        \n-        this.baseFilterUrl+= \"/\" + shorty;\n-\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-\n-        this.currentUrl = this.baseFilterUrl;\n-    },\n-    \n-    createImageWindow: function(){\n-        this.tabindex = 0;\n-        this.thumbnailDiv.tabindex=0;\n-\n-\n-        var newerInode = window.contentAdmin.contentletInode;\n-\n-        var id=this.inode;\n-        if(newerInode && newerInode!= this.inode){\n-            this.inode = newerInode;\n-            id=newerInode;\n-            this.tempId=null;\n-        }else if(this.tempId){\n-            id = this.tempId;\n-        }\n-        \n-        \n-\n-\n-        this.baseFilterUrl= \"/contentAsset/image/\" + id;\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-        this.currentUrl = this.baseFilterUrl;\n-        \n-\n-\n-\n-        // clean up any old image editors laying around\n-        this._cleanUpImageEditor();\n-        window.top._dotImageEditor = this;\n-        var url = this.imageToolJsp + \"?id=\" + id;\n-    \n-        url = url + \"&fieldName=\"+ this.fieldName;\n-\n-        \n-        \n-        this.imageEditor = document.createElement('div');\n-        this.imageEditor.id = 'dotImageDialog';\n-        this.imageEditor.innerHTML=\"<iframe scrolling='yes' src='\" + url+ \"' id='imageToolIframe' frameborder='0' style='width:100%;height:100%;overflow:hidden;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19);'></iframe>\";\n-        this.imageEditor.style=\"position:absolute;top:10px;bottom:20px;left:20px;right:20px;padding:0;margin:0;border:1px silver solid;background:white;z-index: 99999;\";\n-        document.body.insertBefore(this.imageEditor, document.body.firstChild);\n-\n-    },\n-\n-    /***************************************************************************\n-     *\n-     * Thumbnail preview\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    /****\n-     * Returns URL representation for given image\n-     * This will always be a png file\n-     */\n-    _getThumbRendition:function(thumbUrl){\n-        // if thumbnail is already in filter\n-        if(thumbUrl.indexOf(\"filter/\") > -1){\n-            var beforeFilter = thumbUrl.substring(0, thumbUrl.indexOf(\"filter/\"));\n-            var afterFilter = thumbUrl.substring(thumbUrl.indexOf(\"filter/\") + 7, thumbUrl.length);\n-            var filter = afterFilter.substring(0,afterFilter.indexOf(\"/\"));\n-            var afterFilter = afterFilter.substring(afterFilter.indexOf(\"/\"),afterFilter.length);\n-\n-            thumbUrl = beforeFilter + \"filter/\" + filter + \",Thumbnail/\" + afterFilter + \"/thumbnail_h/\" + this.thumbnailHeight;\n-        }\n-        else{\n-            if(!this.saveAsFileName.toLowerCase().endsWith('.svg')) {\n-                thumbUrl+= \"/filter/Thumbnail/thumbnail_h/\"+ this.thumbnailHeight;\n-            }else{\n-                return thumbUrl;\n-            }\n-        }\n-\n-\n-        return this.cleanUrl(thumbUrl + \"/r/\" + _rand());\n-    },\n-\n-    cleanUrl: function(x){\n-    \twhile(x.indexOf(\"//\")>-1){\n-    \t\tx= x.replace(\"//\",\"/\");\n-    \t}\n-    \treturn x;\n-\n-\n-\n-    },\n-\n-\n-    setThumbnail: function(){\n-        var thumbUrl = this._getThumbRendition(this.currentUrl)  ;\n-        dojo.style(this.thumbnailImage, \"display\", \"none\");\n-        dojo.addClass(this.thumbnailDiv, \"loader\");\n-        this.thumbnailImage.src.onload=new function(){\n-            var ctx = window.top._dotImageEditor ;\n-            dojo.style(ctx.thumbnailImage, \"display\", \"block\");\n-            dojo.removeClass(ctx.thumbnailDiv, \"loader\");\n-\n-        };\n-\n-        //this.thumbnailImage.src =  \"#\"; // thumbUrl;\n-        this.thumbnailImage.src =  thumbUrl ;\n-\n-    },\n-\n-\n-\n-\n-    /**\n-     * This function runs on pageload from the image_tool.jsp page. It loads the\n-     * underlying images to get w/h info from them.\n-     *\n-     */\n-    initViewport: function(){\n-        // make the iframe all big\n-        var frame=dojo.byId(\"imageToolIframe\");\n-\n-\n-\n-\n-        //if we are a File Asset\n-        if(this.binaryFieldId == ''){\n-            this.iframe.dojo.style(this.iframe.dojo.byId(\"saveAsSpan\"), \"display\", \"inline\");\n-\n-        }\n-\n-\n-        if(this.inited) return;\n-        this.imagesLoaded=false;\n-        this.inited = true;\n-        var viewPort = this.iframe.dojo.byId(\"imageViewPort\");\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-        var sic = dojo.coords(showImage);\n-\n-        if(baseImage.complete){\n-            var bic = dojo.coords(baseImage);\n-            this.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-            this.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-            this.baseAndShowLoaded();\n-        }else{\n-            baseImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var bic = dojo.coords(ctx.iframe.dojo.byId(\"baseImage\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-                ctx.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        if(showImage.complete){\n-            // set the img dimentions so user can see\n-\n-            this.iframe.dojo.byId(\"displayImageWidth\").value = bic.w;\n-            this.iframe.dojo.byId(\"displayImageHeight\").value = bic.h;\n-            this.baseAndShowLoaded();\n-        }\n-        else{\n-            showImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var sic = dojo.coords(ctx.iframe.dojo.byId(\"me\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"displayImageWidth\").value = sic.w;\n-                ctx.iframe.dojo.byId(\"displayImageHeight\").value = sic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        dojo.attr(this.iframe.dojo.byId(\"imageViewPort\"), \"class\", \"\");\n-\n-    },\n-\n-\n-    baseAndShowLoaded : function(){\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        if(showImage.complete && baseImage.complete && !this.imagesLoaded){\n-            this.imagesLoaded=true;\n-\n-\n-            var sic = dojo.coords(showImage);\n-            var bic = dojo.coords(baseImage);\n-\n-            var x = Math.round(sic.w / bic.w *100);\n-            this.zoomValue = 0\n-            if(!isNaN(x)){\n-                this.zoomValue =x;\n-            }\n-\n-            var x =this.iframe.dijit.byId(\"showScaleSlider\");\n-\n-            x.attr(\"value\", this.zoomValue);\n-            this._updateZoomFactor();\n-        }\n-\n-    },\n-\n-\n-\n-\n-\n-\n-    closeImageWindow : function(e){\n-        this._cleanUpImageEditor();\n-        \n-    },\n-\n-\n-    /**\n-     * cleans up old references, resets imageEditor\n-     */\n-    _cleanUpImageEditor : function (e){\n-        window.top._dotImageEditor = null;\n-        window.parent._dotImageEditor = null;\n-        \n-        var myEditor = (this.imageEditor) ? this.imageEditor : document.getElementById(\"dotImageDialog\");\n-        \n-        // if we have an Image Editor\n-        if(myEditor){\n-            \n-            while (this.imageEditor.firstChild) {\n-                this.imageEditor.removeChild(this.imageEditor.firstChild);\n-            }\n-            myEditor.parentNode.removeChild(myEditor)\n-        }\n-\n-        this.imageEditor=null;\n-        this.iframe =null;\n-        this.inited=false;\n-        this.painting =false;\n-        this.filters=new Array();\n-        this.saveAsIncrement=1;\n-        this.imagesLoaded=false;\n-        this.resizeFilter=false;\n-        \n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * Button Actions\n-     *\n-     **************************************************************************/\n-\n-\n-\n-    addToClipboard : function(){\n-        if(this.currentUrl.indexOf(\"/temp_\")>-1){\n-            alert(\"You cannot clip a temp or altered file.  Please save the content and reopen the image editor to clip it\");\n-            return;\n-        }\n-        var fileUrl = this.cleanUrl(this.currentUrl);\n-        var url = (fileUrl.indexOf(\"?\")>-1) ? fileUrl + \"&\"  : fileUrl + \"?_imageToolClipboard=true\";\n-        //alert(url);\n-        var target = this.iframe.dojo.byId('me');\n-        dojo.style(target, \"opacity\", 0);\n-        dojo.xhrGet({\n-            url:url,\n-            target:target,\n-             preventCache:true,\n-             sync:true,\n-             load:function(data){\n-                dojo.fadeIn({node:target}).play();\n-\n-             },\n-             error:function(data){\n-                dojo.style(target, \"opacity\", 100);\n-             }\n-\n-        });\n-\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /**\n-     * Save as passes a var:_imageToolSaveFile to the binary servlet with all the other\n-     * params.  This saves the file handle in the users session.  We look for this\n-     * file and save it when the user checks the file or content in\n-     */\n-\n-    saveImage : function(){\n-        if(this.binaryFieldId != null && this.binaryFieldId.length > 0){\n-            this.saveBinaryImage();\n-        }\n-        else{\n-            this.saveFileImage();\n-        }\n-    },\n-\n-\n-\n-    /**\n-     * This saves an image\n-     * that lives on a contentlet\n-     *\n-     */\n-\n-    saveBinaryImage: function(){\n-\n-        var field=this.binaryFieldId;\n-        if(this.fieldContentletId.length>0) {\n-            field=this.fieldContentletId;\n-        }\n-\n-        var url =   this.cleanUrl(this.currentUrl) ;\n-        url = (url.indexOf(\"?\")>-1) ? url + \"&\"  : url + \"?\";\n-        url += (field.length > 0) ? \"&binaryFieldId=\" +field : \"\";\n-        url += \"&_imageToolSaveFile=true\";\n-        \n-        \n-        var xhr = new XMLHttpRequest();\n-        xhr.onload = (self => {\n-            return () => {\n-                if (xhr.status == 200) {\n-                    var dataJson = JSON.parse(xhr.responseText);\n-                    self.tempId=dataJson.id;\n-                    if(window.document.getElementById(self.binaryFieldId + \"ValueField\")){\n-                        window.document.getElementById(self.binaryFieldId + \"ValueField\").value=dataJson.id; \n-                    }\n-                    \n-                } else {\n-                    alert(\"Error! Upload failed\");\n-                }\n-            };\n-        })(this);\n-        xhr.open(\"GET\", url, true);\n-        xhr.send();\n-        \n-\n-\n-        this.setThumbnail();\n-        \n-\n-        // close without wiping out the saved value\n-        this.closeImageWindow();\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    closeEditorWhenRedrawFinish: function() {\n-        if (this.painting) {\n-            setTimeout(\"window.top._dotImageEditor.closeEditorWhenRedrawFinish()\", 500);\n-        } else {\n-            this.closeImageWindow();\n-        }\n-    },\n-\n-    doDownload: function(){\n-        var url =this.cleanUrl(this.currentUrl);\n-        \n-        var aj =this.iframe.dojo.byId(\"actionJackson\");\n- \n-        url = (x.indexOf(\"?\")>-1) ? x + \"&\"  : x + \"?\";\n-        url = url + \"r=\" +_rand()+ \"&force_download=true\";\n-        aj.src=url;\n-\n-    },\n-\n-\n-\n-    closeSaveAsDia : function(){\n-        saveAsDia = this.iframe.dijit.byId(\"saveAsDialog\").hide();\n-        this.iframe.dojo.byId(\"saveAsName\").value = \"\";\n-\n-\n-    },\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * UI Controls\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    // Start Crop work ------------------------------------------------\n-    toggleCrop: function(){\n-        if(this.crop || this.crop != undefined){\n-            this.doCrop();\n-        }\n-        else{\n-            this._cropOn();\n-        }\n-    },\n-\n-\n-\n-    doConstrain : function(){\n-\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width/2));\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height/2));\n-\n-\n-    },\n-    setCropHeightFromWidth : function(){\n-\n-        var cw = dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height * (cw/width) ));\n-    },\n-\n-    setCropWidthFromHeight: function(){\n-\n-        var ch = dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width * (ch/height) ));\n-    },\n-\n-\n-\n-\n-\n-    // turns cropping on\n-    _cropOn: function(){\n-\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 1px solid\");\n-        if(this.crop && this.crop != undefined){\n-            return;\n-        }\n-\n-\n-        this.crop = new dotcms.dijit.image.Crop({\n-            hoverable:true\n-        }, this.iframe.dojo.byId(\"me\"));\n-        this.crop.showCropBox();\n-\n-    },\n-    _cropOff: function(){\n-\n-        if(!this.crop || this.crop ==undefined){\n-            return;\n-        }\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 0px dotted\");\n-\n-        var img = this.iframe.dojo.byId(\"me\");\n-\n-        this.crop.destroy();\n-        this.crop=null;\n-        this.iframe.dojo.byId(\"imageViewPort\").appendChild(img);\n-    },\n-\n-    doCrop: function(){\n-        this.iframe.dojo.byId(\"cropBtn\").blur();\n-        dojo.attr(this.iframe.dijit.byId('cropBtn'), \"disabled\", true);\n-\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        pc = dojo.coords(this.crop.picker);\n-        vp = dojo.coords(this.iframe.dojo.byId(\"imageViewPort\"));\n-        sTop = this.iframe.dojo.byId(\"imageViewPort\").scrollTop;\n-        sLeft = this.iframe.dojo.byId(\"imageViewPort\").scrollLeft;\n-\n-        var sw = parseInt(this.iframe.dojo.byId(\"displayImageWidth\").value);\n-        var sh = parseInt(this.iframe.dojo.byId(\"displayImageHeight\").value);       \n+dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget, {\n+\t// cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n+\timageToolJsp: \"/html/js/dotcms/dijit/image/image_tool.jsp\",\n+\tbaseFilterUrl: \"/contentAsset/image\",\n+\t// changes to show the value in the toolbar\n+\tcurrentUrl: \"/contentAsset/image\",\n+\tajaxUrl: \"/servlet/dotImageToolAjax\",\n+\n+\tresizeFilter: false,\n+\tzoomValue: 0,\n+\tinode: \"0\",\n+\ttempId: null,\n+\tinited: false,\n+\tpainting: false,\n+\tthumbnailWidth: 500,\n+\tthumbnailHeight: 250,\n+\tthumbDivId: \"\",\n+\tfieldName: \"fileAsset\",\n+\tsaveAsIncrement: 1,\n+\teditImageText: \"Edit Image\",\n+\tbinaryFieldId: \"\",\n+\tfieldContentletId: \"\",\n+\tsaveAsFileName: \"\",\n+\tcompression: \"none\",\n+\tcompressionValue: 65,\n+\tfileSize: 0,\n+\texecute: null,\n+\tactiveEditor: undefined,\n+\n+\tpostCreate: function () {\n+\t\tthis.execute = this.createImageWindow;\n+\t\twindow.top._dotImageEditor = this;\n+\t\tthis.filters = new Array();\n+\n+\t\tvar where =\n+\t\t\tthis.parentNode != undefined ? dojo.byId(this.parentNode) : this.domNode;\n+\t\t// create divs\n+\n+\t\tthis.thumbnailDiv = dojo.create(\n+\t\t\t\"div\",\n+\t\t\t{\n+\t\t\t\tstyle:\n+\t\t\t\t\t\"margin-bottom:5px;max-width:1040px;min-width:150px;display:inline-block;height:\" +\n+\t\t\t\t\t(this.thumbnailHeight + 4) +\n+\t\t\t\t\t\"px\",\n+\t\t\t},\n+\t\t\twhere\n+\t\t);\n+\n+\t\tdojo.attr(this.thumbnailDiv, \"class\", \"thumbnailDiv\");\n+\n+\t\tif (this.editImageText !== \"\") {\n+\t\t\tthis.editFileWindow = dojo.create(\n+\t\t\t\t\"div\",\n+\t\t\t\t{\n+\t\t\t\t\tinnerHTML: this.editImageText,\n+\t\t\t\t},\n+\t\t\t\tthis.thumbnailDiv\n+\t\t\t);\n+\t\t\tdojo.attr(this.editFileWindow, \"class\", \"editImageText\");\n+\t\t}\n+\n+\t\tthis.thumbnailImage = dojo.create(\n+\t\t\t\"img\",\n+\t\t\t{\n+\t\t\t\tstyle: \"max-width:100%;\",\n+\t\t\t},\n+\t\t\tthis.thumbnailDiv\n+\t\t);\n+\n+\t\tthis._initBaseFilterUrl();\n+\t\tthis.setThumbnail();\n+\n+\t\tdojo.connect(this.thumbnailDiv, \"onclick\", this, \"createImageWindow\");\n+\t},\n+\n+\t_initBaseFilterUrl: function () {\n+\t\tvar shorty = this.inode;\n+\n+\t\tif (this.tempId) {\n+\t\t\tshorty = this.tempId;\n+\t\t}\n+\n+\t\tthis.baseFilterUrl += \"/\" + shorty;\n+\n+\t\tif (this.fieldName != undefined) {\n+\t\t\tthis.baseFilterUrl += \"/\" + this.fieldName;\n+\t\t}\n+\n+\t\tthis.currentUrl = this.baseFilterUrl;\n+\t},\n+\n+\tcreateImageWindow: function () {\n+\t\tthis.tabindex = 0;\n+\t\tthis.thumbnailDiv.tabindex = 0;\n+\n+\t\tvar newerInode = window.contentAdmin.contentletInode;\n+\n+\t\tconsole.log({ newerInode });", "originalCommit": "2798b3b16e98bd8441285d8c938885d61b7d614c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NzY3Mg==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r422277672", "bodyText": "No, removing.", "author": "ivorpad", "createdAt": "2020-05-08T17:42:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NjcyOQ=="}], "type": "inlineReview"}, {"oid": "43aa188fee139f55fcdae2321970e8a680f9b390", "url": "https://github.com/dotCMS/core/commit/43aa188fee139f55fcdae2321970e8a680f9b390", "message": "Removed console logs", "committedDate": "2020-05-08T17:43:04Z", "type": "commit"}, {"oid": "707fe1d3d238749c98bc9a3f5c7ae0e0b6df144b", "url": "https://github.com/dotCMS/core/commit/707fe1d3d238749c98bc9a3f5c7ae0e0b6df144b", "message": "Removed prettier formattinng", "committedDate": "2020-05-08T18:37:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwOTc0OQ==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r422309749", "bodyText": "Added this to fix a UI issue in the 'edit image' slider.", "author": "ivorpad", "createdAt": "2020-05-08T18:46:50Z", "path": "dotCMS/src/main/webapp/html/js/dotcms/dijit/image/image_tools.css", "diffHunk": "@@ -247,7 +247,7 @@ table {font-size:inherit;font-family:Roboto,sans-serif;}\n         \n #controlTable td{\n \tborder:0px solid silver;\n-\tpadding:3px;\t\n+\tpadding:3px 0;\t", "originalCommit": "2798b3b16e98bd8441285d8c938885d61b7d614c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxMjE3Mg==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r422312172", "bodyText": "Unfortunately, I messed up with the formatting so I'll comment on each change made in this file.\nAdded two props: execute and activeEditor. The execute() function is used to call createImageWindow from  the WYSIWYG editor.\nactiveEditor is the instance of the active editor so we can insert the image in the current editor.", "author": "ivorpad", "createdAt": "2020-05-08T18:51:44Z", "path": "dotCMS/src/main/webapp/html/js/dotcms/dijit/image/ImageEditor.js", "diffHunk": "@@ -2,1174 +2,1088 @@ dojo.provide(\"dotcms.dijit.image.ImageEditor\");\n dojo.require(\"dotcms.dijit.image.Crop\");\n dojo.require(\"dijit.Dialog\");\n \n-\n-function _rand(){\n-     return Math.floor(Math.random()*100000000);\n+function _rand() {\n+\treturn Math.floor(Math.random() * 100000000);\n }\n \n-dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget,{\n-\n-    // cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n-    imageToolJsp:'/html/js/dotcms/dijit/image/image_tool.jsp',\n-    baseFilterUrl:\"/contentAsset/image\",\n-    // changes to show the value in the toolbar\n-    currentUrl:\"/contentAsset/image\",\n-    ajaxUrl:\"/servlet/dotImageToolAjax\",\n-\n-    resizeFilter:false,\n-    zoomValue:0,\n-    inode:'0',\n-    tempId:null,\n-    inited: false,\n-    painting : false,\n-    thumbnailWidth:500,\n-    thumbnailHeight:250,\n-    thumbDivId:'',\n-    fieldName:'fileAsset',\n-    saveAsIncrement:1,\n-    editImageText:\"Edit Image\",\n-    binaryFieldId:'',\n-    fieldContentletId:'',\n-    saveAsFileName:'',\n-    compression:'none',\n-    compressionValue:65,\n-    fileSize:0,\n-    \n-\n-\n-\n-\n-    postCreate: function(){\n-        window.top._dotImageEditor = this;\n-        // this._loadCss();\n-        this.filters = new Array();\n-\n-        var where= (this.parentNode != undefined) ? dojo.byId(this.parentNode) : this.domNode;\n-        // create divs\n-\n-        this.thumbnailDiv = dojo.create('div' ,{\n-            style:\"margin-bottom:5px;max-width:1040px;min-width:150px;display:inline-block;height:\" + (this.thumbnailHeight+4) +\"px\"},where);\n-\n-            dojo.attr(this.thumbnailDiv, \"class\", \"thumbnailDiv\");\n-\n-\n-        this.editFileWindow = dojo.create('div' ,{\n-            innerHTML:this.editImageText},this.thumbnailDiv);\n-\n-            dojo.attr(this.editFileWindow, \"class\", \"editImageText\");\n-\n-\n-        this.thumbnailImage = dojo.create(\"img\" , {\n-            style:\"max-width:100%;\"},this.thumbnailDiv);\n-\n-\n-\n-\n-\n-        this._initBaseFilterUrl();\n-        this.setThumbnail();\n-\n-        dojo.connect(this.thumbnailDiv , \"onclick\", this, \"createImageWindow\");\n-    },\n-\n-    _initBaseFilterUrl: function() {\n-        var shorty = this.inode  ;\n-\n-        if(this.tempId){\n-            shorty=this.tempId;\n-        }\n-        \n-        \n-        \n-        this.baseFilterUrl+= \"/\" + shorty;\n-\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-\n-        this.currentUrl = this.baseFilterUrl;\n-    },\n-    \n-    createImageWindow: function(){\n-        this.tabindex = 0;\n-        this.thumbnailDiv.tabindex=0;\n-\n-\n-        var newerInode = window.contentAdmin.contentletInode;\n-\n-        var id=this.inode;\n-        if(newerInode && newerInode!= this.inode){\n-            this.inode = newerInode;\n-            id=newerInode;\n-            this.tempId=null;\n-        }else if(this.tempId){\n-            id = this.tempId;\n-        }\n-        \n-        \n-\n-\n-        this.baseFilterUrl= \"/contentAsset/image/\" + id;\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-        this.currentUrl = this.baseFilterUrl;\n-        \n-\n-\n-\n-        // clean up any old image editors laying around\n-        this._cleanUpImageEditor();\n-        window.top._dotImageEditor = this;\n-        var url = this.imageToolJsp + \"?id=\" + id;\n-    \n-        url = url + \"&fieldName=\"+ this.fieldName;\n-\n-        \n-        \n-        this.imageEditor = document.createElement('div');\n-        this.imageEditor.id = 'dotImageDialog';\n-        this.imageEditor.innerHTML=\"<iframe scrolling='yes' src='\" + url+ \"' id='imageToolIframe' frameborder='0' style='width:100%;height:100%;overflow:hidden;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19);'></iframe>\";\n-        this.imageEditor.style=\"position:absolute;top:10px;bottom:20px;left:20px;right:20px;padding:0;margin:0;border:1px silver solid;background:white;z-index: 99999;\";\n-        document.body.insertBefore(this.imageEditor, document.body.firstChild);\n-\n-    },\n-\n-    /***************************************************************************\n-     *\n-     * Thumbnail preview\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    /****\n-     * Returns URL representation for given image\n-     * This will always be a png file\n-     */\n-    _getThumbRendition:function(thumbUrl){\n-        // if thumbnail is already in filter\n-        if(thumbUrl.indexOf(\"filter/\") > -1){\n-            var beforeFilter = thumbUrl.substring(0, thumbUrl.indexOf(\"filter/\"));\n-            var afterFilter = thumbUrl.substring(thumbUrl.indexOf(\"filter/\") + 7, thumbUrl.length);\n-            var filter = afterFilter.substring(0,afterFilter.indexOf(\"/\"));\n-            var afterFilter = afterFilter.substring(afterFilter.indexOf(\"/\"),afterFilter.length);\n-\n-            thumbUrl = beforeFilter + \"filter/\" + filter + \",Thumbnail/\" + afterFilter + \"/thumbnail_h/\" + this.thumbnailHeight;\n-        }\n-        else{\n-            if(!this.saveAsFileName.toLowerCase().endsWith('.svg')) {\n-                thumbUrl+= \"/filter/Thumbnail/thumbnail_h/\"+ this.thumbnailHeight;\n-            }else{\n-                return thumbUrl;\n-            }\n-        }\n-\n-\n-        return this.cleanUrl(thumbUrl + \"/r/\" + _rand());\n-    },\n-\n-    cleanUrl: function(x){\n-    \twhile(x.indexOf(\"//\")>-1){\n-    \t\tx= x.replace(\"//\",\"/\");\n-    \t}\n-    \treturn x;\n-\n-\n-\n-    },\n-\n-\n-    setThumbnail: function(){\n-        var thumbUrl = this._getThumbRendition(this.currentUrl)  ;\n-        dojo.style(this.thumbnailImage, \"display\", \"none\");\n-        dojo.addClass(this.thumbnailDiv, \"loader\");\n-        this.thumbnailImage.src.onload=new function(){\n-            var ctx = window.top._dotImageEditor ;\n-            dojo.style(ctx.thumbnailImage, \"display\", \"block\");\n-            dojo.removeClass(ctx.thumbnailDiv, \"loader\");\n-\n-        };\n-\n-        //this.thumbnailImage.src =  \"#\"; // thumbUrl;\n-        this.thumbnailImage.src =  thumbUrl ;\n-\n-    },\n-\n-\n-\n-\n-    /**\n-     * This function runs on pageload from the image_tool.jsp page. It loads the\n-     * underlying images to get w/h info from them.\n-     *\n-     */\n-    initViewport: function(){\n-        // make the iframe all big\n-        var frame=dojo.byId(\"imageToolIframe\");\n-\n-\n-\n-\n-        //if we are a File Asset\n-        if(this.binaryFieldId == ''){\n-            this.iframe.dojo.style(this.iframe.dojo.byId(\"saveAsSpan\"), \"display\", \"inline\");\n-\n-        }\n-\n-\n-        if(this.inited) return;\n-        this.imagesLoaded=false;\n-        this.inited = true;\n-        var viewPort = this.iframe.dojo.byId(\"imageViewPort\");\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-        var sic = dojo.coords(showImage);\n-\n-        if(baseImage.complete){\n-            var bic = dojo.coords(baseImage);\n-            this.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-            this.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-            this.baseAndShowLoaded();\n-        }else{\n-            baseImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var bic = dojo.coords(ctx.iframe.dojo.byId(\"baseImage\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-                ctx.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        if(showImage.complete){\n-            // set the img dimentions so user can see\n-\n-            this.iframe.dojo.byId(\"displayImageWidth\").value = bic.w;\n-            this.iframe.dojo.byId(\"displayImageHeight\").value = bic.h;\n-            this.baseAndShowLoaded();\n-        }\n-        else{\n-            showImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var sic = dojo.coords(ctx.iframe.dojo.byId(\"me\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"displayImageWidth\").value = sic.w;\n-                ctx.iframe.dojo.byId(\"displayImageHeight\").value = sic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        dojo.attr(this.iframe.dojo.byId(\"imageViewPort\"), \"class\", \"\");\n-\n-    },\n-\n-\n-    baseAndShowLoaded : function(){\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        if(showImage.complete && baseImage.complete && !this.imagesLoaded){\n-            this.imagesLoaded=true;\n-\n-\n-            var sic = dojo.coords(showImage);\n-            var bic = dojo.coords(baseImage);\n-\n-            var x = Math.round(sic.w / bic.w *100);\n-            this.zoomValue = 0\n-            if(!isNaN(x)){\n-                this.zoomValue =x;\n-            }\n-\n-            var x =this.iframe.dijit.byId(\"showScaleSlider\");\n-\n-            x.attr(\"value\", this.zoomValue);\n-            this._updateZoomFactor();\n-        }\n-\n-    },\n-\n-\n-\n-\n-\n-\n-    closeImageWindow : function(e){\n-        this._cleanUpImageEditor();\n-        \n-    },\n-\n-\n-    /**\n-     * cleans up old references, resets imageEditor\n-     */\n-    _cleanUpImageEditor : function (e){\n-        window.top._dotImageEditor = null;\n-        window.parent._dotImageEditor = null;\n-        \n-        var myEditor = (this.imageEditor) ? this.imageEditor : document.getElementById(\"dotImageDialog\");\n-        \n-        // if we have an Image Editor\n-        if(myEditor){\n-            \n-            while (this.imageEditor.firstChild) {\n-                this.imageEditor.removeChild(this.imageEditor.firstChild);\n-            }\n-            myEditor.parentNode.removeChild(myEditor)\n-        }\n-\n-        this.imageEditor=null;\n-        this.iframe =null;\n-        this.inited=false;\n-        this.painting =false;\n-        this.filters=new Array();\n-        this.saveAsIncrement=1;\n-        this.imagesLoaded=false;\n-        this.resizeFilter=false;\n-        \n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * Button Actions\n-     *\n-     **************************************************************************/\n-\n-\n-\n-    addToClipboard : function(){\n-        if(this.currentUrl.indexOf(\"/temp_\")>-1){\n-            alert(\"You cannot clip a temp or altered file.  Please save the content and reopen the image editor to clip it\");\n-            return;\n-        }\n-        var fileUrl = this.cleanUrl(this.currentUrl);\n-        var url = (fileUrl.indexOf(\"?\")>-1) ? fileUrl + \"&\"  : fileUrl + \"?_imageToolClipboard=true\";\n-        //alert(url);\n-        var target = this.iframe.dojo.byId('me');\n-        dojo.style(target, \"opacity\", 0);\n-        dojo.xhrGet({\n-            url:url,\n-            target:target,\n-             preventCache:true,\n-             sync:true,\n-             load:function(data){\n-                dojo.fadeIn({node:target}).play();\n-\n-             },\n-             error:function(data){\n-                dojo.style(target, \"opacity\", 100);\n-             }\n-\n-        });\n-\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /**\n-     * Save as passes a var:_imageToolSaveFile to the binary servlet with all the other\n-     * params.  This saves the file handle in the users session.  We look for this\n-     * file and save it when the user checks the file or content in\n-     */\n-\n-    saveImage : function(){\n-        if(this.binaryFieldId != null && this.binaryFieldId.length > 0){\n-            this.saveBinaryImage();\n-        }\n-        else{\n-            this.saveFileImage();\n-        }\n-    },\n-\n-\n-\n-    /**\n-     * This saves an image\n-     * that lives on a contentlet\n-     *\n-     */\n-\n-    saveBinaryImage: function(){\n-\n-        var field=this.binaryFieldId;\n-        if(this.fieldContentletId.length>0) {\n-            field=this.fieldContentletId;\n-        }\n-\n-        var url =   this.cleanUrl(this.currentUrl) ;\n-        url = (url.indexOf(\"?\")>-1) ? url + \"&\"  : url + \"?\";\n-        url += (field.length > 0) ? \"&binaryFieldId=\" +field : \"\";\n-        url += \"&_imageToolSaveFile=true\";\n-        \n-        \n-        var xhr = new XMLHttpRequest();\n-        xhr.onload = (self => {\n-            return () => {\n-                if (xhr.status == 200) {\n-                    var dataJson = JSON.parse(xhr.responseText);\n-                    self.tempId=dataJson.id;\n-                    if(window.document.getElementById(self.binaryFieldId + \"ValueField\")){\n-                        window.document.getElementById(self.binaryFieldId + \"ValueField\").value=dataJson.id; \n-                    }\n-                    \n-                } else {\n-                    alert(\"Error! Upload failed\");\n-                }\n-            };\n-        })(this);\n-        xhr.open(\"GET\", url, true);\n-        xhr.send();\n-        \n-\n-\n-        this.setThumbnail();\n-        \n-\n-        // close without wiping out the saved value\n-        this.closeImageWindow();\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    closeEditorWhenRedrawFinish: function() {\n-        if (this.painting) {\n-            setTimeout(\"window.top._dotImageEditor.closeEditorWhenRedrawFinish()\", 500);\n-        } else {\n-            this.closeImageWindow();\n-        }\n-    },\n-\n-    doDownload: function(){\n-        var url =this.cleanUrl(this.currentUrl);\n-        \n-        var aj =this.iframe.dojo.byId(\"actionJackson\");\n- \n-        url = (x.indexOf(\"?\")>-1) ? x + \"&\"  : x + \"?\";\n-        url = url + \"r=\" +_rand()+ \"&force_download=true\";\n-        aj.src=url;\n-\n-    },\n-\n-\n-\n-    closeSaveAsDia : function(){\n-        saveAsDia = this.iframe.dijit.byId(\"saveAsDialog\").hide();\n-        this.iframe.dojo.byId(\"saveAsName\").value = \"\";\n-\n-\n-    },\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * UI Controls\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    // Start Crop work ------------------------------------------------\n-    toggleCrop: function(){\n-        if(this.crop || this.crop != undefined){\n-            this.doCrop();\n-        }\n-        else{\n-            this._cropOn();\n-        }\n-    },\n-\n-\n-\n-    doConstrain : function(){\n-\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width/2));\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height/2));\n-\n-\n-    },\n-    setCropHeightFromWidth : function(){\n-\n-        var cw = dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height * (cw/width) ));\n-    },\n-\n-    setCropWidthFromHeight: function(){\n-\n-        var ch = dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width * (ch/height) ));\n-    },\n-\n-\n-\n-\n-\n-    // turns cropping on\n-    _cropOn: function(){\n-\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 1px solid\");\n-        if(this.crop && this.crop != undefined){\n-            return;\n-        }\n-\n-\n-        this.crop = new dotcms.dijit.image.Crop({\n-            hoverable:true\n-        }, this.iframe.dojo.byId(\"me\"));\n-        this.crop.showCropBox();\n-\n-    },\n-    _cropOff: function(){\n-\n-        if(!this.crop || this.crop ==undefined){\n-            return;\n-        }\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 0px dotted\");\n-\n-        var img = this.iframe.dojo.byId(\"me\");\n-\n-        this.crop.destroy();\n-        this.crop=null;\n-        this.iframe.dojo.byId(\"imageViewPort\").appendChild(img);\n-    },\n-\n-    doCrop: function(){\n-        this.iframe.dojo.byId(\"cropBtn\").blur();\n-        dojo.attr(this.iframe.dijit.byId('cropBtn'), \"disabled\", true);\n-\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        pc = dojo.coords(this.crop.picker);\n-        vp = dojo.coords(this.iframe.dojo.byId(\"imageViewPort\"));\n-        sTop = this.iframe.dojo.byId(\"imageViewPort\").scrollTop;\n-        sLeft = this.iframe.dojo.byId(\"imageViewPort\").scrollLeft;\n-\n-        var sw = parseInt(this.iframe.dojo.byId(\"displayImageWidth\").value);\n-        var sh = parseInt(this.iframe.dojo.byId(\"displayImageHeight\").value);       \n+dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget, {\n+\t// cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n+\timageToolJsp: \"/html/js/dotcms/dijit/image/image_tool.jsp\",\n+\tbaseFilterUrl: \"/contentAsset/image\",\n+\t// changes to show the value in the toolbar\n+\tcurrentUrl: \"/contentAsset/image\",\n+\tajaxUrl: \"/servlet/dotImageToolAjax\",\n+\n+\tresizeFilter: false,\n+\tzoomValue: 0,\n+\tinode: \"0\",\n+\ttempId: null,\n+\tinited: false,\n+\tpainting: false,\n+\tthumbnailWidth: 500,\n+\tthumbnailHeight: 250,\n+\tthumbDivId: \"\",\n+\tfieldName: \"fileAsset\",\n+\tsaveAsIncrement: 1,\n+\teditImageText: \"Edit Image\",\n+\tbinaryFieldId: \"\",\n+\tfieldContentletId: \"\",\n+\tsaveAsFileName: \"\",\n+\tcompression: \"none\",\n+\tcompressionValue: 65,\n+\tfileSize: 0,\n+\texecute: null,\n+\tactiveEditor: undefined,", "originalCommit": "2798b3b16e98bd8441285d8c938885d61b7d614c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxMzQ2Nw==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r422313467", "bodyText": "Added this helper for a quick check in saveBinaryImage, the reason for this is that the URL comes in either host + path or just path, so we need to count for that.", "author": "ivorpad", "createdAt": "2020-05-08T18:54:15Z", "path": "dotCMS/src/main/webapp/html/js/dotcms/dijit/image/ImageEditor.js", "diffHunk": "@@ -2,1174 +2,1088 @@ dojo.provide(\"dotcms.dijit.image.ImageEditor\");\n dojo.require(\"dotcms.dijit.image.Crop\");\n dojo.require(\"dijit.Dialog\");\n \n-\n-function _rand(){\n-     return Math.floor(Math.random()*100000000);\n+function _rand() {\n+\treturn Math.floor(Math.random() * 100000000);\n }\n \n-dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget,{\n-\n-    // cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n-    imageToolJsp:'/html/js/dotcms/dijit/image/image_tool.jsp',\n-    baseFilterUrl:\"/contentAsset/image\",\n-    // changes to show the value in the toolbar\n-    currentUrl:\"/contentAsset/image\",\n-    ajaxUrl:\"/servlet/dotImageToolAjax\",\n-\n-    resizeFilter:false,\n-    zoomValue:0,\n-    inode:'0',\n-    tempId:null,\n-    inited: false,\n-    painting : false,\n-    thumbnailWidth:500,\n-    thumbnailHeight:250,\n-    thumbDivId:'',\n-    fieldName:'fileAsset',\n-    saveAsIncrement:1,\n-    editImageText:\"Edit Image\",\n-    binaryFieldId:'',\n-    fieldContentletId:'',\n-    saveAsFileName:'',\n-    compression:'none',\n-    compressionValue:65,\n-    fileSize:0,\n-    \n-\n-\n-\n-\n-    postCreate: function(){\n-        window.top._dotImageEditor = this;\n-        // this._loadCss();\n-        this.filters = new Array();\n-\n-        var where= (this.parentNode != undefined) ? dojo.byId(this.parentNode) : this.domNode;\n-        // create divs\n-\n-        this.thumbnailDiv = dojo.create('div' ,{\n-            style:\"margin-bottom:5px;max-width:1040px;min-width:150px;display:inline-block;height:\" + (this.thumbnailHeight+4) +\"px\"},where);\n-\n-            dojo.attr(this.thumbnailDiv, \"class\", \"thumbnailDiv\");\n-\n-\n-        this.editFileWindow = dojo.create('div' ,{\n-            innerHTML:this.editImageText},this.thumbnailDiv);\n-\n-            dojo.attr(this.editFileWindow, \"class\", \"editImageText\");\n-\n-\n-        this.thumbnailImage = dojo.create(\"img\" , {\n-            style:\"max-width:100%;\"},this.thumbnailDiv);\n-\n-\n-\n-\n-\n-        this._initBaseFilterUrl();\n-        this.setThumbnail();\n-\n-        dojo.connect(this.thumbnailDiv , \"onclick\", this, \"createImageWindow\");\n-    },\n-\n-    _initBaseFilterUrl: function() {\n-        var shorty = this.inode  ;\n-\n-        if(this.tempId){\n-            shorty=this.tempId;\n-        }\n-        \n-        \n-        \n-        this.baseFilterUrl+= \"/\" + shorty;\n-\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-\n-        this.currentUrl = this.baseFilterUrl;\n-    },\n-    \n-    createImageWindow: function(){\n-        this.tabindex = 0;\n-        this.thumbnailDiv.tabindex=0;\n-\n-\n-        var newerInode = window.contentAdmin.contentletInode;\n-\n-        var id=this.inode;\n-        if(newerInode && newerInode!= this.inode){\n-            this.inode = newerInode;\n-            id=newerInode;\n-            this.tempId=null;\n-        }else if(this.tempId){\n-            id = this.tempId;\n-        }\n-        \n-        \n-\n-\n-        this.baseFilterUrl= \"/contentAsset/image/\" + id;\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-        this.currentUrl = this.baseFilterUrl;\n-        \n-\n-\n-\n-        // clean up any old image editors laying around\n-        this._cleanUpImageEditor();\n-        window.top._dotImageEditor = this;\n-        var url = this.imageToolJsp + \"?id=\" + id;\n-    \n-        url = url + \"&fieldName=\"+ this.fieldName;\n-\n-        \n-        \n-        this.imageEditor = document.createElement('div');\n-        this.imageEditor.id = 'dotImageDialog';\n-        this.imageEditor.innerHTML=\"<iframe scrolling='yes' src='\" + url+ \"' id='imageToolIframe' frameborder='0' style='width:100%;height:100%;overflow:hidden;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19);'></iframe>\";\n-        this.imageEditor.style=\"position:absolute;top:10px;bottom:20px;left:20px;right:20px;padding:0;margin:0;border:1px silver solid;background:white;z-index: 99999;\";\n-        document.body.insertBefore(this.imageEditor, document.body.firstChild);\n-\n-    },\n-\n-    /***************************************************************************\n-     *\n-     * Thumbnail preview\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    /****\n-     * Returns URL representation for given image\n-     * This will always be a png file\n-     */\n-    _getThumbRendition:function(thumbUrl){\n-        // if thumbnail is already in filter\n-        if(thumbUrl.indexOf(\"filter/\") > -1){\n-            var beforeFilter = thumbUrl.substring(0, thumbUrl.indexOf(\"filter/\"));\n-            var afterFilter = thumbUrl.substring(thumbUrl.indexOf(\"filter/\") + 7, thumbUrl.length);\n-            var filter = afterFilter.substring(0,afterFilter.indexOf(\"/\"));\n-            var afterFilter = afterFilter.substring(afterFilter.indexOf(\"/\"),afterFilter.length);\n-\n-            thumbUrl = beforeFilter + \"filter/\" + filter + \",Thumbnail/\" + afterFilter + \"/thumbnail_h/\" + this.thumbnailHeight;\n-        }\n-        else{\n-            if(!this.saveAsFileName.toLowerCase().endsWith('.svg')) {\n-                thumbUrl+= \"/filter/Thumbnail/thumbnail_h/\"+ this.thumbnailHeight;\n-            }else{\n-                return thumbUrl;\n-            }\n-        }\n-\n-\n-        return this.cleanUrl(thumbUrl + \"/r/\" + _rand());\n-    },\n-\n-    cleanUrl: function(x){\n-    \twhile(x.indexOf(\"//\")>-1){\n-    \t\tx= x.replace(\"//\",\"/\");\n-    \t}\n-    \treturn x;\n-\n-\n-\n-    },\n-\n-\n-    setThumbnail: function(){\n-        var thumbUrl = this._getThumbRendition(this.currentUrl)  ;\n-        dojo.style(this.thumbnailImage, \"display\", \"none\");\n-        dojo.addClass(this.thumbnailDiv, \"loader\");\n-        this.thumbnailImage.src.onload=new function(){\n-            var ctx = window.top._dotImageEditor ;\n-            dojo.style(ctx.thumbnailImage, \"display\", \"block\");\n-            dojo.removeClass(ctx.thumbnailDiv, \"loader\");\n-\n-        };\n-\n-        //this.thumbnailImage.src =  \"#\"; // thumbUrl;\n-        this.thumbnailImage.src =  thumbUrl ;\n-\n-    },\n-\n-\n-\n-\n-    /**\n-     * This function runs on pageload from the image_tool.jsp page. It loads the\n-     * underlying images to get w/h info from them.\n-     *\n-     */\n-    initViewport: function(){\n-        // make the iframe all big\n-        var frame=dojo.byId(\"imageToolIframe\");\n-\n-\n-\n-\n-        //if we are a File Asset\n-        if(this.binaryFieldId == ''){\n-            this.iframe.dojo.style(this.iframe.dojo.byId(\"saveAsSpan\"), \"display\", \"inline\");\n-\n-        }\n-\n-\n-        if(this.inited) return;\n-        this.imagesLoaded=false;\n-        this.inited = true;\n-        var viewPort = this.iframe.dojo.byId(\"imageViewPort\");\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-        var sic = dojo.coords(showImage);\n-\n-        if(baseImage.complete){\n-            var bic = dojo.coords(baseImage);\n-            this.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-            this.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-            this.baseAndShowLoaded();\n-        }else{\n-            baseImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var bic = dojo.coords(ctx.iframe.dojo.byId(\"baseImage\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-                ctx.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        if(showImage.complete){\n-            // set the img dimentions so user can see\n-\n-            this.iframe.dojo.byId(\"displayImageWidth\").value = bic.w;\n-            this.iframe.dojo.byId(\"displayImageHeight\").value = bic.h;\n-            this.baseAndShowLoaded();\n-        }\n-        else{\n-            showImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var sic = dojo.coords(ctx.iframe.dojo.byId(\"me\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"displayImageWidth\").value = sic.w;\n-                ctx.iframe.dojo.byId(\"displayImageHeight\").value = sic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        dojo.attr(this.iframe.dojo.byId(\"imageViewPort\"), \"class\", \"\");\n-\n-    },\n-\n-\n-    baseAndShowLoaded : function(){\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        if(showImage.complete && baseImage.complete && !this.imagesLoaded){\n-            this.imagesLoaded=true;\n-\n-\n-            var sic = dojo.coords(showImage);\n-            var bic = dojo.coords(baseImage);\n-\n-            var x = Math.round(sic.w / bic.w *100);\n-            this.zoomValue = 0\n-            if(!isNaN(x)){\n-                this.zoomValue =x;\n-            }\n-\n-            var x =this.iframe.dijit.byId(\"showScaleSlider\");\n-\n-            x.attr(\"value\", this.zoomValue);\n-            this._updateZoomFactor();\n-        }\n-\n-    },\n-\n-\n-\n-\n-\n-\n-    closeImageWindow : function(e){\n-        this._cleanUpImageEditor();\n-        \n-    },\n-\n-\n-    /**\n-     * cleans up old references, resets imageEditor\n-     */\n-    _cleanUpImageEditor : function (e){\n-        window.top._dotImageEditor = null;\n-        window.parent._dotImageEditor = null;\n-        \n-        var myEditor = (this.imageEditor) ? this.imageEditor : document.getElementById(\"dotImageDialog\");\n-        \n-        // if we have an Image Editor\n-        if(myEditor){\n-            \n-            while (this.imageEditor.firstChild) {\n-                this.imageEditor.removeChild(this.imageEditor.firstChild);\n-            }\n-            myEditor.parentNode.removeChild(myEditor)\n-        }\n-\n-        this.imageEditor=null;\n-        this.iframe =null;\n-        this.inited=false;\n-        this.painting =false;\n-        this.filters=new Array();\n-        this.saveAsIncrement=1;\n-        this.imagesLoaded=false;\n-        this.resizeFilter=false;\n-        \n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * Button Actions\n-     *\n-     **************************************************************************/\n-\n-\n-\n-    addToClipboard : function(){\n-        if(this.currentUrl.indexOf(\"/temp_\")>-1){\n-            alert(\"You cannot clip a temp or altered file.  Please save the content and reopen the image editor to clip it\");\n-            return;\n-        }\n-        var fileUrl = this.cleanUrl(this.currentUrl);\n-        var url = (fileUrl.indexOf(\"?\")>-1) ? fileUrl + \"&\"  : fileUrl + \"?_imageToolClipboard=true\";\n-        //alert(url);\n-        var target = this.iframe.dojo.byId('me');\n-        dojo.style(target, \"opacity\", 0);\n-        dojo.xhrGet({\n-            url:url,\n-            target:target,\n-             preventCache:true,\n-             sync:true,\n-             load:function(data){\n-                dojo.fadeIn({node:target}).play();\n-\n-             },\n-             error:function(data){\n-                dojo.style(target, \"opacity\", 100);\n-             }\n-\n-        });\n-\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /**\n-     * Save as passes a var:_imageToolSaveFile to the binary servlet with all the other\n-     * params.  This saves the file handle in the users session.  We look for this\n-     * file and save it when the user checks the file or content in\n-     */\n-\n-    saveImage : function(){\n-        if(this.binaryFieldId != null && this.binaryFieldId.length > 0){\n-            this.saveBinaryImage();\n-        }\n-        else{\n-            this.saveFileImage();\n-        }\n-    },\n-\n-\n-\n-    /**\n-     * This saves an image\n-     * that lives on a contentlet\n-     *\n-     */\n-\n-    saveBinaryImage: function(){\n-\n-        var field=this.binaryFieldId;\n-        if(this.fieldContentletId.length>0) {\n-            field=this.fieldContentletId;\n-        }\n-\n-        var url =   this.cleanUrl(this.currentUrl) ;\n-        url = (url.indexOf(\"?\")>-1) ? url + \"&\"  : url + \"?\";\n-        url += (field.length > 0) ? \"&binaryFieldId=\" +field : \"\";\n-        url += \"&_imageToolSaveFile=true\";\n-        \n-        \n-        var xhr = new XMLHttpRequest();\n-        xhr.onload = (self => {\n-            return () => {\n-                if (xhr.status == 200) {\n-                    var dataJson = JSON.parse(xhr.responseText);\n-                    self.tempId=dataJson.id;\n-                    if(window.document.getElementById(self.binaryFieldId + \"ValueField\")){\n-                        window.document.getElementById(self.binaryFieldId + \"ValueField\").value=dataJson.id; \n-                    }\n-                    \n-                } else {\n-                    alert(\"Error! Upload failed\");\n-                }\n-            };\n-        })(this);\n-        xhr.open(\"GET\", url, true);\n-        xhr.send();\n-        \n-\n-\n-        this.setThumbnail();\n-        \n-\n-        // close without wiping out the saved value\n-        this.closeImageWindow();\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    closeEditorWhenRedrawFinish: function() {\n-        if (this.painting) {\n-            setTimeout(\"window.top._dotImageEditor.closeEditorWhenRedrawFinish()\", 500);\n-        } else {\n-            this.closeImageWindow();\n-        }\n-    },\n-\n-    doDownload: function(){\n-        var url =this.cleanUrl(this.currentUrl);\n-        \n-        var aj =this.iframe.dojo.byId(\"actionJackson\");\n- \n-        url = (x.indexOf(\"?\")>-1) ? x + \"&\"  : x + \"?\";\n-        url = url + \"r=\" +_rand()+ \"&force_download=true\";\n-        aj.src=url;\n-\n-    },\n-\n-\n-\n-    closeSaveAsDia : function(){\n-        saveAsDia = this.iframe.dijit.byId(\"saveAsDialog\").hide();\n-        this.iframe.dojo.byId(\"saveAsName\").value = \"\";\n-\n-\n-    },\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * UI Controls\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    // Start Crop work ------------------------------------------------\n-    toggleCrop: function(){\n-        if(this.crop || this.crop != undefined){\n-            this.doCrop();\n-        }\n-        else{\n-            this._cropOn();\n-        }\n-    },\n-\n-\n-\n-    doConstrain : function(){\n-\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width/2));\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height/2));\n-\n-\n-    },\n-    setCropHeightFromWidth : function(){\n-\n-        var cw = dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height * (cw/width) ));\n-    },\n-\n-    setCropWidthFromHeight: function(){\n-\n-        var ch = dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width * (ch/height) ));\n-    },\n-\n-\n-\n-\n-\n-    // turns cropping on\n-    _cropOn: function(){\n-\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 1px solid\");\n-        if(this.crop && this.crop != undefined){\n-            return;\n-        }\n-\n-\n-        this.crop = new dotcms.dijit.image.Crop({\n-            hoverable:true\n-        }, this.iframe.dojo.byId(\"me\"));\n-        this.crop.showCropBox();\n-\n-    },\n-    _cropOff: function(){\n-\n-        if(!this.crop || this.crop ==undefined){\n-            return;\n-        }\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 0px dotted\");\n-\n-        var img = this.iframe.dojo.byId(\"me\");\n-\n-        this.crop.destroy();\n-        this.crop=null;\n-        this.iframe.dojo.byId(\"imageViewPort\").appendChild(img);\n-    },\n-\n-    doCrop: function(){\n-        this.iframe.dojo.byId(\"cropBtn\").blur();\n-        dojo.attr(this.iframe.dijit.byId('cropBtn'), \"disabled\", true);\n-\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        pc = dojo.coords(this.crop.picker);\n-        vp = dojo.coords(this.iframe.dojo.byId(\"imageViewPort\"));\n-        sTop = this.iframe.dojo.byId(\"imageViewPort\").scrollTop;\n-        sLeft = this.iframe.dojo.byId(\"imageViewPort\").scrollLeft;\n-\n-        var sw = parseInt(this.iframe.dojo.byId(\"displayImageWidth\").value);\n-        var sh = parseInt(this.iframe.dojo.byId(\"displayImageHeight\").value);       \n+dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget, {\n+\t// cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n+\timageToolJsp: \"/html/js/dotcms/dijit/image/image_tool.jsp\",\n+\tbaseFilterUrl: \"/contentAsset/image\",\n+\t// changes to show the value in the toolbar\n+\tcurrentUrl: \"/contentAsset/image\",\n+\tajaxUrl: \"/servlet/dotImageToolAjax\",\n+\n+\tresizeFilter: false,\n+\tzoomValue: 0,\n+\tinode: \"0\",\n+\ttempId: null,\n+\tinited: false,\n+\tpainting: false,\n+\tthumbnailWidth: 500,\n+\tthumbnailHeight: 250,\n+\tthumbDivId: \"\",\n+\tfieldName: \"fileAsset\",\n+\tsaveAsIncrement: 1,\n+\teditImageText: \"Edit Image\",\n+\tbinaryFieldId: \"\",\n+\tfieldContentletId: \"\",\n+\tsaveAsFileName: \"\",\n+\tcompression: \"none\",\n+\tcompressionValue: 65,\n+\tfileSize: 0,\n+\texecute: null,\n+\tactiveEditor: undefined,\n+\n+\tpostCreate: function () {\n+\t\tthis.execute = this.createImageWindow;\n+\t\twindow.top._dotImageEditor = this;\n+\t\tthis.filters = new Array();\n+\n+\t\tvar where =\n+\t\t\tthis.parentNode != undefined ? dojo.byId(this.parentNode) : this.domNode;\n+\t\t// create divs\n+\n+\t\tthis.thumbnailDiv = dojo.create(\n+\t\t\t\"div\",\n+\t\t\t{\n+\t\t\t\tstyle:\n+\t\t\t\t\t\"margin-bottom:5px;max-width:1040px;min-width:150px;display:inline-block;height:\" +\n+\t\t\t\t\t(this.thumbnailHeight + 4) +\n+\t\t\t\t\t\"px\",\n+\t\t\t},\n+\t\t\twhere\n+\t\t);\n+\n+\t\tdojo.attr(this.thumbnailDiv, \"class\", \"thumbnailDiv\");\n+\n+\t\tif (this.editImageText !== \"\") {\n+\t\t\tthis.editFileWindow = dojo.create(\n+\t\t\t\t\"div\",\n+\t\t\t\t{\n+\t\t\t\t\tinnerHTML: this.editImageText,\n+\t\t\t\t},\n+\t\t\t\tthis.thumbnailDiv\n+\t\t\t);\n+\t\t\tdojo.attr(this.editFileWindow, \"class\", \"editImageText\");\n+\t\t}\n+\n+\t\tthis.thumbnailImage = dojo.create(\n+\t\t\t\"img\",\n+\t\t\t{\n+\t\t\t\tstyle: \"max-width:100%;\",\n+\t\t\t},\n+\t\t\tthis.thumbnailDiv\n+\t\t);\n+\n+\t\tthis._initBaseFilterUrl();\n+\t\tthis.setThumbnail();\n+\n+\t\tdojo.connect(this.thumbnailDiv, \"onclick\", this, \"createImageWindow\");\n+\t},\n+\n+\t_initBaseFilterUrl: function () {\n+\t\tvar shorty = this.inode;\n+\n+\t\tif (this.tempId) {\n+\t\t\tshorty = this.tempId;\n+\t\t}\n+\n+\t\tthis.baseFilterUrl += \"/\" + shorty;\n+\n+\t\tif (this.fieldName != undefined) {\n+\t\t\tthis.baseFilterUrl += \"/\" + this.fieldName;\n+\t\t}\n+\n+\t\tthis.currentUrl = this.baseFilterUrl;\n+\t},\n+\n+\tcreateImageWindow: function () {\n+\t\tthis.tabindex = 0;\n+\t\tthis.thumbnailDiv.tabindex = 0;\n+\n+\t\tvar newerInode = window.contentAdmin.contentletInode;\n+\n+\t\tconsole.log({ newerInode });\n+\n+\t\tvar id = this.inode;\n+\t\tif (newerInode && newerInode != this.inode) {\n+\t\t\tthis.inode = newerInode;\n+\t\t\tid = newerInode;\n+\t\t\tthis.tempId = null;\n+\t\t} else if (this.tempId) {\n+\t\t\tid = this.tempId;\n+\t\t}\n+\n+\t\tconsole.log({ id });\n+\n+\t\tthis.baseFilterUrl = \"/contentAsset/image/\" + id;\n+\t\tif (this.fieldName != undefined) {\n+\t\t\tthis.baseFilterUrl += \"/\" + this.fieldName;\n+\t\t}\n+\t\tthis.currentUrl = this.baseFilterUrl;\n+\n+\t\t// clean up any old image editors laying around\n+\t\tthis._cleanUpImageEditor();\n+\t\twindow.top._dotImageEditor = this;\n+\t\tvar url = this.imageToolJsp + \"?id=\" + id;\n+\n+\t\turl = url + \"&fieldName=\" + this.fieldName;\n+\n+\t\tthis.imageEditor = document.createElement(\"div\");\n+\t\tthis.imageEditor.id = \"dotImageDialog\";\n+\t\tthis.imageEditor.innerHTML =\n+\t\t\t\"<iframe scrolling='yes' src='\" +\n+\t\t\turl +\n+\t\t\t\"' id='imageToolIframe' frameborder='0' style='width:100%;height:100%;overflow:hidden;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19);'></iframe>\";\n+\t\tthis.imageEditor.style =\n+\t\t\t\"position:absolute;top:10px;bottom:20px;left:20px;right:20px;padding:0;margin:0;border:1px silver solid;background:white;z-index: 99999;\";\n+\t\tdocument.body.insertBefore(this.imageEditor, document.body.firstChild);\n+\t},\n+\n+\t/***************************************************************************\n+\t *\n+\t * Thumbnail preview\n+\t *\n+\t **************************************************************************/\n+\n+\t/****\n+\t * Returns URL representation for given image\n+\t * This will always be a png file\n+\t */\n+\t_getThumbRendition: function (thumbUrl) {\n+\t\t// if thumbnail is already in filter\n+\t\tif (thumbUrl.indexOf(\"filter/\") > -1) {\n+\t\t\tvar beforeFilter = thumbUrl.substring(0, thumbUrl.indexOf(\"filter/\"));\n+\t\t\tvar afterFilter = thumbUrl.substring(\n+\t\t\t\tthumbUrl.indexOf(\"filter/\") + 7,\n+\t\t\t\tthumbUrl.length\n+\t\t\t);\n+\t\t\tvar filter = afterFilter.substring(0, afterFilter.indexOf(\"/\"));\n+\t\t\tvar afterFilter = afterFilter.substring(\n+\t\t\t\tafterFilter.indexOf(\"/\"),\n+\t\t\t\tafterFilter.length\n+\t\t\t);\n+\n+\t\t\tthumbUrl =\n+\t\t\t\tbeforeFilter +\n+\t\t\t\t\"filter/\" +\n+\t\t\t\tfilter +\n+\t\t\t\t\",Thumbnail/\" +\n+\t\t\t\tafterFilter +\n+\t\t\t\t\"/thumbnail_h/\" +\n+\t\t\t\tthis.thumbnailHeight;\n+\t\t} else {\n+\t\t\tif (!this.saveAsFileName.toLowerCase().endsWith(\".svg\")) {\n+\t\t\t\tthumbUrl += \"/filter/Thumbnail/thumbnail_h/\" + this.thumbnailHeight;\n+\t\t\t} else {\n+\t\t\t\treturn thumbUrl;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn this.cleanUrl(thumbUrl + \"/r/\" + _rand());\n+\t},\n+\n+\tcleanUrl: function (x) {\n+\t\twhile (x.indexOf(\"//\") > -1) {\n+\t\t\tx = x.replace(\"//\", \"/\");\n+\t\t}\n+\t\treturn x;\n+\t},\n+\n+\tsetThumbnail: function () {\n+\t\tvar thumbUrl = this._getThumbRendition(this.currentUrl);\n+\t\tdojo.style(this.thumbnailImage, \"display\", \"none\");\n+\t\tdojo.addClass(this.thumbnailDiv, \"loader\");\n+\t\tthis.thumbnailImage.src.onload = new (function () {\n+\t\t\tvar ctx = window.top._dotImageEditor;\n+\t\t\tdojo.style(ctx.thumbnailImage, \"display\", \"block\");\n+\t\t\tdojo.removeClass(ctx.thumbnailDiv, \"loader\");\n+\t\t})();\n+\n+\t\t//this.thumbnailImage.src =  \"#\"; // thumbUrl;\n+\t\tthis.thumbnailImage.src = thumbUrl;\n+\t},\n+\n+\t/**\n+\t * This function runs on pageload from the image_tool.jsp page. It loads the\n+\t * underlying images to get w/h info from them.\n+\t *\n+\t */\n+\tinitViewport: function () {\n+\t\t// make the iframe all big\n+\t\tvar frame = dojo.byId(\"imageToolIframe\");\n+\n+\t\t//if we are a File Asset\n+\t\tif (this.binaryFieldId == \"\") {\n+\t\t\tthis.iframe.dojo.style(\n+\t\t\t\tthis.iframe.dojo.byId(\"saveAsSpan\"),\n+\t\t\t\t\"display\",\n+\t\t\t\t\"inline\"\n+\t\t\t);\n+\t\t}\n+\n+\t\tif (this.inited) return;\n+\t\tthis.imagesLoaded = false;\n+\t\tthis.inited = true;\n+\t\tvar viewPort = this.iframe.dojo.byId(\"imageViewPort\");\n+\t\tvar showImage = this.iframe.dojo.byId(\"me\");\n+\t\tvar baseImage = this.iframe.dojo.byId(\"baseImage\");\n+\t\tvar sic = dojo.coords(showImage);\n+\n+\t\tif (baseImage.complete) {\n+\t\t\tvar bic = dojo.coords(baseImage);\n+\t\t\tthis.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n+\t\t\tthis.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n+\t\t\tthis.baseAndShowLoaded();\n+\t\t} else {\n+\t\t\tbaseImage.onload = function () {\n+\t\t\t\tvar ctx = window.top._dotImageEditor;\n+\t\t\t\tvar bic = dojo.coords(ctx.iframe.dojo.byId(\"baseImage\"));\n+\t\t\t\t// set the img dimentions so user can see\n+\t\t\t\tctx.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n+\t\t\t\tctx.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n+\t\t\t\tctx.baseAndShowLoaded();\n+\t\t\t};\n+\t\t}\n+\t\tif (showImage.complete) {\n+\t\t\t// set the img dimentions so user can see\n+\n+\t\t\tthis.iframe.dojo.byId(\"displayImageWidth\").value = bic.w;\n+\t\t\tthis.iframe.dojo.byId(\"displayImageHeight\").value = bic.h;\n+\t\t\tthis.baseAndShowLoaded();\n+\t\t} else {\n+\t\t\tshowImage.onload = function () {\n+\t\t\t\tvar ctx = window.top._dotImageEditor;\n+\t\t\t\tvar sic = dojo.coords(ctx.iframe.dojo.byId(\"me\"));\n+\t\t\t\t// set the img dimentions so user can see\n+\t\t\t\tctx.iframe.dojo.byId(\"displayImageWidth\").value = sic.w;\n+\t\t\t\tctx.iframe.dojo.byId(\"displayImageHeight\").value = sic.h;\n+\t\t\t\tctx.baseAndShowLoaded();\n+\t\t\t};\n+\t\t}\n+\t\tdojo.attr(this.iframe.dojo.byId(\"imageViewPort\"), \"class\", \"\");\n+\t},\n+\n+\tbaseAndShowLoaded: function () {\n+\t\tvar showImage = this.iframe.dojo.byId(\"me\");\n+\t\tvar baseImage = this.iframe.dojo.byId(\"baseImage\");\n+\n+\t\tif (showImage.complete && baseImage.complete && !this.imagesLoaded) {\n+\t\t\tthis.imagesLoaded = true;\n+\n+\t\t\tvar sic = dojo.coords(showImage);\n+\t\t\tvar bic = dojo.coords(baseImage);\n+\n+\t\t\tvar x = Math.round((sic.w / bic.w) * 100);\n+\t\t\tthis.zoomValue = 0;\n+\t\t\tif (!isNaN(x)) {\n+\t\t\t\tthis.zoomValue = x;\n+\t\t\t}\n+\n+\t\t\tvar x = this.iframe.dijit.byId(\"showScaleSlider\");\n+\n+\t\t\tx.attr(\"value\", this.zoomValue);\n+\t\t\tthis._updateZoomFactor();\n+\t\t}\n+\t},\n+\n+\tcloseImageWindow: function (e) {\n+\t\tthis._cleanUpImageEditor();\n+\t},\n+\n+\t/**\n+\t * cleans up old references, resets imageEditor\n+\t */\n+\t_cleanUpImageEditor: function (e) {\n+\t\twindow.top._dotImageEditor = null;\n+\t\twindow.parent._dotImageEditor = null;\n+\n+\t\tvar myEditor = this.imageEditor\n+\t\t\t? this.imageEditor\n+\t\t\t: document.getElementById(\"dotImageDialog\");\n+\n+\t\t// if we have an Image Editor\n+\t\tif (myEditor) {\n+\t\t\twhile (this.imageEditor.firstChild) {\n+\t\t\t\tthis.imageEditor.removeChild(this.imageEditor.firstChild);\n+\t\t\t}\n+\t\t\tmyEditor.parentNode.removeChild(myEditor);\n+\t\t}\n+\n+\t\tthis.imageEditor = null;\n+\t\tthis.iframe = null;\n+\t\tthis.inited = false;\n+\t\tthis.painting = false;\n+\t\tthis.filters = new Array();\n+\t\tthis.saveAsIncrement = 1;\n+\t\tthis.imagesLoaded = false;\n+\t\tthis.resizeFilter = false;\n+\t},\n+\n+\t/***************************************************************************\n+\t *\n+\t * Button Actions\n+\t *\n+\t **************************************************************************/\n+\n+\taddToClipboard: function () {\n+\t\tif (this.currentUrl.indexOf(\"/temp_\") > -1) {\n+\t\t\talert(\n+\t\t\t\t\"You cannot clip a temp or altered file.  Please save the content and reopen the image editor to clip it\"\n+\t\t\t);\n+\t\t\treturn;\n+\t\t}\n+\t\tvar fileUrl = this.cleanUrl(this.currentUrl);\n+\t\tvar url =\n+\t\t\tfileUrl.indexOf(\"?\") > -1\n+\t\t\t\t? fileUrl + \"&\"\n+\t\t\t\t: fileUrl + \"?_imageToolClipboard=true\";\n+\t\t//alert(url);\n+\t\tvar target = this.iframe.dojo.byId(\"me\");\n+\t\tdojo.style(target, \"opacity\", 0);\n+\t\tdojo.xhrGet({\n+\t\t\turl: url,\n+\t\t\ttarget: target,\n+\t\t\tpreventCache: true,\n+\t\t\tsync: true,\n+\t\t\tload: function (data) {\n+\t\t\t\tdojo.fadeIn({ node: target }).play();\n+\t\t\t},\n+\t\t\terror: function (data) {\n+\t\t\t\tdojo.style(target, \"opacity\", 100);\n+\t\t\t},\n+\t\t});\n+\t},\n+\n+\t/**\n+\t * Save as passes a var:_imageToolSaveFile to the binary servlet with all the other\n+\t * params.  This saves the file handle in the users session.  We look for this\n+\t * file and save it when the user checks the file or content in\n+\t */\n+\n+\tsaveImage: function () {\n+\t\tif (this.binaryFieldId != null && this.binaryFieldId.length > 0) {\n+\t\t\tthis.saveBinaryImage(this.activeEditor);\n+\t\t} else {\n+\t\t\tthis.saveFileImage();\n+\t\t}\n+\t},\n+\n+\t_isValidURL: function (url) {", "originalCommit": "2798b3b16e98bd8441285d8c938885d61b7d614c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxMzk3NA==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r422313974", "bodyText": "Added these lines to insert the image back to the WYSIWYG editor.", "author": "ivorpad", "createdAt": "2020-05-08T18:55:21Z", "path": "dotCMS/src/main/webapp/html/js/dotcms/dijit/image/ImageEditor.js", "diffHunk": "@@ -2,1174 +2,1088 @@ dojo.provide(\"dotcms.dijit.image.ImageEditor\");\n dojo.require(\"dotcms.dijit.image.Crop\");\n dojo.require(\"dijit.Dialog\");\n \n-\n-function _rand(){\n-     return Math.floor(Math.random()*100000000);\n+function _rand() {\n+\treturn Math.floor(Math.random() * 100000000);\n }\n \n-dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget,{\n-\n-    // cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n-    imageToolJsp:'/html/js/dotcms/dijit/image/image_tool.jsp',\n-    baseFilterUrl:\"/contentAsset/image\",\n-    // changes to show the value in the toolbar\n-    currentUrl:\"/contentAsset/image\",\n-    ajaxUrl:\"/servlet/dotImageToolAjax\",\n-\n-    resizeFilter:false,\n-    zoomValue:0,\n-    inode:'0',\n-    tempId:null,\n-    inited: false,\n-    painting : false,\n-    thumbnailWidth:500,\n-    thumbnailHeight:250,\n-    thumbDivId:'',\n-    fieldName:'fileAsset',\n-    saveAsIncrement:1,\n-    editImageText:\"Edit Image\",\n-    binaryFieldId:'',\n-    fieldContentletId:'',\n-    saveAsFileName:'',\n-    compression:'none',\n-    compressionValue:65,\n-    fileSize:0,\n-    \n-\n-\n-\n-\n-    postCreate: function(){\n-        window.top._dotImageEditor = this;\n-        // this._loadCss();\n-        this.filters = new Array();\n-\n-        var where= (this.parentNode != undefined) ? dojo.byId(this.parentNode) : this.domNode;\n-        // create divs\n-\n-        this.thumbnailDiv = dojo.create('div' ,{\n-            style:\"margin-bottom:5px;max-width:1040px;min-width:150px;display:inline-block;height:\" + (this.thumbnailHeight+4) +\"px\"},where);\n-\n-            dojo.attr(this.thumbnailDiv, \"class\", \"thumbnailDiv\");\n-\n-\n-        this.editFileWindow = dojo.create('div' ,{\n-            innerHTML:this.editImageText},this.thumbnailDiv);\n-\n-            dojo.attr(this.editFileWindow, \"class\", \"editImageText\");\n-\n-\n-        this.thumbnailImage = dojo.create(\"img\" , {\n-            style:\"max-width:100%;\"},this.thumbnailDiv);\n-\n-\n-\n-\n-\n-        this._initBaseFilterUrl();\n-        this.setThumbnail();\n-\n-        dojo.connect(this.thumbnailDiv , \"onclick\", this, \"createImageWindow\");\n-    },\n-\n-    _initBaseFilterUrl: function() {\n-        var shorty = this.inode  ;\n-\n-        if(this.tempId){\n-            shorty=this.tempId;\n-        }\n-        \n-        \n-        \n-        this.baseFilterUrl+= \"/\" + shorty;\n-\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-\n-        this.currentUrl = this.baseFilterUrl;\n-    },\n-    \n-    createImageWindow: function(){\n-        this.tabindex = 0;\n-        this.thumbnailDiv.tabindex=0;\n-\n-\n-        var newerInode = window.contentAdmin.contentletInode;\n-\n-        var id=this.inode;\n-        if(newerInode && newerInode!= this.inode){\n-            this.inode = newerInode;\n-            id=newerInode;\n-            this.tempId=null;\n-        }else if(this.tempId){\n-            id = this.tempId;\n-        }\n-        \n-        \n-\n-\n-        this.baseFilterUrl= \"/contentAsset/image/\" + id;\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-        this.currentUrl = this.baseFilterUrl;\n-        \n-\n-\n-\n-        // clean up any old image editors laying around\n-        this._cleanUpImageEditor();\n-        window.top._dotImageEditor = this;\n-        var url = this.imageToolJsp + \"?id=\" + id;\n-    \n-        url = url + \"&fieldName=\"+ this.fieldName;\n-\n-        \n-        \n-        this.imageEditor = document.createElement('div');\n-        this.imageEditor.id = 'dotImageDialog';\n-        this.imageEditor.innerHTML=\"<iframe scrolling='yes' src='\" + url+ \"' id='imageToolIframe' frameborder='0' style='width:100%;height:100%;overflow:hidden;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19);'></iframe>\";\n-        this.imageEditor.style=\"position:absolute;top:10px;bottom:20px;left:20px;right:20px;padding:0;margin:0;border:1px silver solid;background:white;z-index: 99999;\";\n-        document.body.insertBefore(this.imageEditor, document.body.firstChild);\n-\n-    },\n-\n-    /***************************************************************************\n-     *\n-     * Thumbnail preview\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    /****\n-     * Returns URL representation for given image\n-     * This will always be a png file\n-     */\n-    _getThumbRendition:function(thumbUrl){\n-        // if thumbnail is already in filter\n-        if(thumbUrl.indexOf(\"filter/\") > -1){\n-            var beforeFilter = thumbUrl.substring(0, thumbUrl.indexOf(\"filter/\"));\n-            var afterFilter = thumbUrl.substring(thumbUrl.indexOf(\"filter/\") + 7, thumbUrl.length);\n-            var filter = afterFilter.substring(0,afterFilter.indexOf(\"/\"));\n-            var afterFilter = afterFilter.substring(afterFilter.indexOf(\"/\"),afterFilter.length);\n-\n-            thumbUrl = beforeFilter + \"filter/\" + filter + \",Thumbnail/\" + afterFilter + \"/thumbnail_h/\" + this.thumbnailHeight;\n-        }\n-        else{\n-            if(!this.saveAsFileName.toLowerCase().endsWith('.svg')) {\n-                thumbUrl+= \"/filter/Thumbnail/thumbnail_h/\"+ this.thumbnailHeight;\n-            }else{\n-                return thumbUrl;\n-            }\n-        }\n-\n-\n-        return this.cleanUrl(thumbUrl + \"/r/\" + _rand());\n-    },\n-\n-    cleanUrl: function(x){\n-    \twhile(x.indexOf(\"//\")>-1){\n-    \t\tx= x.replace(\"//\",\"/\");\n-    \t}\n-    \treturn x;\n-\n-\n-\n-    },\n-\n-\n-    setThumbnail: function(){\n-        var thumbUrl = this._getThumbRendition(this.currentUrl)  ;\n-        dojo.style(this.thumbnailImage, \"display\", \"none\");\n-        dojo.addClass(this.thumbnailDiv, \"loader\");\n-        this.thumbnailImage.src.onload=new function(){\n-            var ctx = window.top._dotImageEditor ;\n-            dojo.style(ctx.thumbnailImage, \"display\", \"block\");\n-            dojo.removeClass(ctx.thumbnailDiv, \"loader\");\n-\n-        };\n-\n-        //this.thumbnailImage.src =  \"#\"; // thumbUrl;\n-        this.thumbnailImage.src =  thumbUrl ;\n-\n-    },\n-\n-\n-\n-\n-    /**\n-     * This function runs on pageload from the image_tool.jsp page. It loads the\n-     * underlying images to get w/h info from them.\n-     *\n-     */\n-    initViewport: function(){\n-        // make the iframe all big\n-        var frame=dojo.byId(\"imageToolIframe\");\n-\n-\n-\n-\n-        //if we are a File Asset\n-        if(this.binaryFieldId == ''){\n-            this.iframe.dojo.style(this.iframe.dojo.byId(\"saveAsSpan\"), \"display\", \"inline\");\n-\n-        }\n-\n-\n-        if(this.inited) return;\n-        this.imagesLoaded=false;\n-        this.inited = true;\n-        var viewPort = this.iframe.dojo.byId(\"imageViewPort\");\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-        var sic = dojo.coords(showImage);\n-\n-        if(baseImage.complete){\n-            var bic = dojo.coords(baseImage);\n-            this.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-            this.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-            this.baseAndShowLoaded();\n-        }else{\n-            baseImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var bic = dojo.coords(ctx.iframe.dojo.byId(\"baseImage\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-                ctx.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        if(showImage.complete){\n-            // set the img dimentions so user can see\n-\n-            this.iframe.dojo.byId(\"displayImageWidth\").value = bic.w;\n-            this.iframe.dojo.byId(\"displayImageHeight\").value = bic.h;\n-            this.baseAndShowLoaded();\n-        }\n-        else{\n-            showImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var sic = dojo.coords(ctx.iframe.dojo.byId(\"me\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"displayImageWidth\").value = sic.w;\n-                ctx.iframe.dojo.byId(\"displayImageHeight\").value = sic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        dojo.attr(this.iframe.dojo.byId(\"imageViewPort\"), \"class\", \"\");\n-\n-    },\n-\n-\n-    baseAndShowLoaded : function(){\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        if(showImage.complete && baseImage.complete && !this.imagesLoaded){\n-            this.imagesLoaded=true;\n-\n-\n-            var sic = dojo.coords(showImage);\n-            var bic = dojo.coords(baseImage);\n-\n-            var x = Math.round(sic.w / bic.w *100);\n-            this.zoomValue = 0\n-            if(!isNaN(x)){\n-                this.zoomValue =x;\n-            }\n-\n-            var x =this.iframe.dijit.byId(\"showScaleSlider\");\n-\n-            x.attr(\"value\", this.zoomValue);\n-            this._updateZoomFactor();\n-        }\n-\n-    },\n-\n-\n-\n-\n-\n-\n-    closeImageWindow : function(e){\n-        this._cleanUpImageEditor();\n-        \n-    },\n-\n-\n-    /**\n-     * cleans up old references, resets imageEditor\n-     */\n-    _cleanUpImageEditor : function (e){\n-        window.top._dotImageEditor = null;\n-        window.parent._dotImageEditor = null;\n-        \n-        var myEditor = (this.imageEditor) ? this.imageEditor : document.getElementById(\"dotImageDialog\");\n-        \n-        // if we have an Image Editor\n-        if(myEditor){\n-            \n-            while (this.imageEditor.firstChild) {\n-                this.imageEditor.removeChild(this.imageEditor.firstChild);\n-            }\n-            myEditor.parentNode.removeChild(myEditor)\n-        }\n-\n-        this.imageEditor=null;\n-        this.iframe =null;\n-        this.inited=false;\n-        this.painting =false;\n-        this.filters=new Array();\n-        this.saveAsIncrement=1;\n-        this.imagesLoaded=false;\n-        this.resizeFilter=false;\n-        \n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * Button Actions\n-     *\n-     **************************************************************************/\n-\n-\n-\n-    addToClipboard : function(){\n-        if(this.currentUrl.indexOf(\"/temp_\")>-1){\n-            alert(\"You cannot clip a temp or altered file.  Please save the content and reopen the image editor to clip it\");\n-            return;\n-        }\n-        var fileUrl = this.cleanUrl(this.currentUrl);\n-        var url = (fileUrl.indexOf(\"?\")>-1) ? fileUrl + \"&\"  : fileUrl + \"?_imageToolClipboard=true\";\n-        //alert(url);\n-        var target = this.iframe.dojo.byId('me');\n-        dojo.style(target, \"opacity\", 0);\n-        dojo.xhrGet({\n-            url:url,\n-            target:target,\n-             preventCache:true,\n-             sync:true,\n-             load:function(data){\n-                dojo.fadeIn({node:target}).play();\n-\n-             },\n-             error:function(data){\n-                dojo.style(target, \"opacity\", 100);\n-             }\n-\n-        });\n-\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /**\n-     * Save as passes a var:_imageToolSaveFile to the binary servlet with all the other\n-     * params.  This saves the file handle in the users session.  We look for this\n-     * file and save it when the user checks the file or content in\n-     */\n-\n-    saveImage : function(){\n-        if(this.binaryFieldId != null && this.binaryFieldId.length > 0){\n-            this.saveBinaryImage();\n-        }\n-        else{\n-            this.saveFileImage();\n-        }\n-    },\n-\n-\n-\n-    /**\n-     * This saves an image\n-     * that lives on a contentlet\n-     *\n-     */\n-\n-    saveBinaryImage: function(){\n-\n-        var field=this.binaryFieldId;\n-        if(this.fieldContentletId.length>0) {\n-            field=this.fieldContentletId;\n-        }\n-\n-        var url =   this.cleanUrl(this.currentUrl) ;\n-        url = (url.indexOf(\"?\")>-1) ? url + \"&\"  : url + \"?\";\n-        url += (field.length > 0) ? \"&binaryFieldId=\" +field : \"\";\n-        url += \"&_imageToolSaveFile=true\";\n-        \n-        \n-        var xhr = new XMLHttpRequest();\n-        xhr.onload = (self => {\n-            return () => {\n-                if (xhr.status == 200) {\n-                    var dataJson = JSON.parse(xhr.responseText);\n-                    self.tempId=dataJson.id;\n-                    if(window.document.getElementById(self.binaryFieldId + \"ValueField\")){\n-                        window.document.getElementById(self.binaryFieldId + \"ValueField\").value=dataJson.id; \n-                    }\n-                    \n-                } else {\n-                    alert(\"Error! Upload failed\");\n-                }\n-            };\n-        })(this);\n-        xhr.open(\"GET\", url, true);\n-        xhr.send();\n-        \n-\n-\n-        this.setThumbnail();\n-        \n-\n-        // close without wiping out the saved value\n-        this.closeImageWindow();\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    closeEditorWhenRedrawFinish: function() {\n-        if (this.painting) {\n-            setTimeout(\"window.top._dotImageEditor.closeEditorWhenRedrawFinish()\", 500);\n-        } else {\n-            this.closeImageWindow();\n-        }\n-    },\n-\n-    doDownload: function(){\n-        var url =this.cleanUrl(this.currentUrl);\n-        \n-        var aj =this.iframe.dojo.byId(\"actionJackson\");\n- \n-        url = (x.indexOf(\"?\")>-1) ? x + \"&\"  : x + \"?\";\n-        url = url + \"r=\" +_rand()+ \"&force_download=true\";\n-        aj.src=url;\n-\n-    },\n-\n-\n-\n-    closeSaveAsDia : function(){\n-        saveAsDia = this.iframe.dijit.byId(\"saveAsDialog\").hide();\n-        this.iframe.dojo.byId(\"saveAsName\").value = \"\";\n-\n-\n-    },\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * UI Controls\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    // Start Crop work ------------------------------------------------\n-    toggleCrop: function(){\n-        if(this.crop || this.crop != undefined){\n-            this.doCrop();\n-        }\n-        else{\n-            this._cropOn();\n-        }\n-    },\n-\n-\n-\n-    doConstrain : function(){\n-\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width/2));\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height/2));\n-\n-\n-    },\n-    setCropHeightFromWidth : function(){\n-\n-        var cw = dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height * (cw/width) ));\n-    },\n-\n-    setCropWidthFromHeight: function(){\n-\n-        var ch = dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width * (ch/height) ));\n-    },\n-\n-\n-\n-\n-\n-    // turns cropping on\n-    _cropOn: function(){\n-\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 1px solid\");\n-        if(this.crop && this.crop != undefined){\n-            return;\n-        }\n-\n-\n-        this.crop = new dotcms.dijit.image.Crop({\n-            hoverable:true\n-        }, this.iframe.dojo.byId(\"me\"));\n-        this.crop.showCropBox();\n-\n-    },\n-    _cropOff: function(){\n-\n-        if(!this.crop || this.crop ==undefined){\n-            return;\n-        }\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 0px dotted\");\n-\n-        var img = this.iframe.dojo.byId(\"me\");\n-\n-        this.crop.destroy();\n-        this.crop=null;\n-        this.iframe.dojo.byId(\"imageViewPort\").appendChild(img);\n-    },\n-\n-    doCrop: function(){\n-        this.iframe.dojo.byId(\"cropBtn\").blur();\n-        dojo.attr(this.iframe.dijit.byId('cropBtn'), \"disabled\", true);\n-\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        pc = dojo.coords(this.crop.picker);\n-        vp = dojo.coords(this.iframe.dojo.byId(\"imageViewPort\"));\n-        sTop = this.iframe.dojo.byId(\"imageViewPort\").scrollTop;\n-        sLeft = this.iframe.dojo.byId(\"imageViewPort\").scrollLeft;\n-\n-        var sw = parseInt(this.iframe.dojo.byId(\"displayImageWidth\").value);\n-        var sh = parseInt(this.iframe.dojo.byId(\"displayImageHeight\").value);       \n+dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget, {\n+\t// cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n+\timageToolJsp: \"/html/js/dotcms/dijit/image/image_tool.jsp\",\n+\tbaseFilterUrl: \"/contentAsset/image\",\n+\t// changes to show the value in the toolbar\n+\tcurrentUrl: \"/contentAsset/image\",\n+\tajaxUrl: \"/servlet/dotImageToolAjax\",\n+\n+\tresizeFilter: false,\n+\tzoomValue: 0,\n+\tinode: \"0\",\n+\ttempId: null,\n+\tinited: false,\n+\tpainting: false,\n+\tthumbnailWidth: 500,\n+\tthumbnailHeight: 250,\n+\tthumbDivId: \"\",\n+\tfieldName: \"fileAsset\",\n+\tsaveAsIncrement: 1,\n+\teditImageText: \"Edit Image\",\n+\tbinaryFieldId: \"\",\n+\tfieldContentletId: \"\",\n+\tsaveAsFileName: \"\",\n+\tcompression: \"none\",\n+\tcompressionValue: 65,\n+\tfileSize: 0,\n+\texecute: null,\n+\tactiveEditor: undefined,\n+\n+\tpostCreate: function () {\n+\t\tthis.execute = this.createImageWindow;\n+\t\twindow.top._dotImageEditor = this;\n+\t\tthis.filters = new Array();\n+\n+\t\tvar where =\n+\t\t\tthis.parentNode != undefined ? dojo.byId(this.parentNode) : this.domNode;\n+\t\t// create divs\n+\n+\t\tthis.thumbnailDiv = dojo.create(\n+\t\t\t\"div\",\n+\t\t\t{\n+\t\t\t\tstyle:\n+\t\t\t\t\t\"margin-bottom:5px;max-width:1040px;min-width:150px;display:inline-block;height:\" +\n+\t\t\t\t\t(this.thumbnailHeight + 4) +\n+\t\t\t\t\t\"px\",\n+\t\t\t},\n+\t\t\twhere\n+\t\t);\n+\n+\t\tdojo.attr(this.thumbnailDiv, \"class\", \"thumbnailDiv\");\n+\n+\t\tif (this.editImageText !== \"\") {\n+\t\t\tthis.editFileWindow = dojo.create(\n+\t\t\t\t\"div\",\n+\t\t\t\t{\n+\t\t\t\t\tinnerHTML: this.editImageText,\n+\t\t\t\t},\n+\t\t\t\tthis.thumbnailDiv\n+\t\t\t);\n+\t\t\tdojo.attr(this.editFileWindow, \"class\", \"editImageText\");\n+\t\t}\n+\n+\t\tthis.thumbnailImage = dojo.create(\n+\t\t\t\"img\",\n+\t\t\t{\n+\t\t\t\tstyle: \"max-width:100%;\",\n+\t\t\t},\n+\t\t\tthis.thumbnailDiv\n+\t\t);\n+\n+\t\tthis._initBaseFilterUrl();\n+\t\tthis.setThumbnail();\n+\n+\t\tdojo.connect(this.thumbnailDiv, \"onclick\", this, \"createImageWindow\");\n+\t},\n+\n+\t_initBaseFilterUrl: function () {\n+\t\tvar shorty = this.inode;\n+\n+\t\tif (this.tempId) {\n+\t\t\tshorty = this.tempId;\n+\t\t}\n+\n+\t\tthis.baseFilterUrl += \"/\" + shorty;\n+\n+\t\tif (this.fieldName != undefined) {\n+\t\t\tthis.baseFilterUrl += \"/\" + this.fieldName;\n+\t\t}\n+\n+\t\tthis.currentUrl = this.baseFilterUrl;\n+\t},\n+\n+\tcreateImageWindow: function () {\n+\t\tthis.tabindex = 0;\n+\t\tthis.thumbnailDiv.tabindex = 0;\n+\n+\t\tvar newerInode = window.contentAdmin.contentletInode;\n+\n+\t\tconsole.log({ newerInode });\n+\n+\t\tvar id = this.inode;\n+\t\tif (newerInode && newerInode != this.inode) {\n+\t\t\tthis.inode = newerInode;\n+\t\t\tid = newerInode;\n+\t\t\tthis.tempId = null;\n+\t\t} else if (this.tempId) {\n+\t\t\tid = this.tempId;\n+\t\t}\n+\n+\t\tconsole.log({ id });\n+\n+\t\tthis.baseFilterUrl = \"/contentAsset/image/\" + id;\n+\t\tif (this.fieldName != undefined) {\n+\t\t\tthis.baseFilterUrl += \"/\" + this.fieldName;\n+\t\t}\n+\t\tthis.currentUrl = this.baseFilterUrl;\n+\n+\t\t// clean up any old image editors laying around\n+\t\tthis._cleanUpImageEditor();\n+\t\twindow.top._dotImageEditor = this;\n+\t\tvar url = this.imageToolJsp + \"?id=\" + id;\n+\n+\t\turl = url + \"&fieldName=\" + this.fieldName;\n+\n+\t\tthis.imageEditor = document.createElement(\"div\");\n+\t\tthis.imageEditor.id = \"dotImageDialog\";\n+\t\tthis.imageEditor.innerHTML =\n+\t\t\t\"<iframe scrolling='yes' src='\" +\n+\t\t\turl +\n+\t\t\t\"' id='imageToolIframe' frameborder='0' style='width:100%;height:100%;overflow:hidden;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19);'></iframe>\";\n+\t\tthis.imageEditor.style =\n+\t\t\t\"position:absolute;top:10px;bottom:20px;left:20px;right:20px;padding:0;margin:0;border:1px silver solid;background:white;z-index: 99999;\";\n+\t\tdocument.body.insertBefore(this.imageEditor, document.body.firstChild);\n+\t},\n+\n+\t/***************************************************************************\n+\t *\n+\t * Thumbnail preview\n+\t *\n+\t **************************************************************************/\n+\n+\t/****\n+\t * Returns URL representation for given image\n+\t * This will always be a png file\n+\t */\n+\t_getThumbRendition: function (thumbUrl) {\n+\t\t// if thumbnail is already in filter\n+\t\tif (thumbUrl.indexOf(\"filter/\") > -1) {\n+\t\t\tvar beforeFilter = thumbUrl.substring(0, thumbUrl.indexOf(\"filter/\"));\n+\t\t\tvar afterFilter = thumbUrl.substring(\n+\t\t\t\tthumbUrl.indexOf(\"filter/\") + 7,\n+\t\t\t\tthumbUrl.length\n+\t\t\t);\n+\t\t\tvar filter = afterFilter.substring(0, afterFilter.indexOf(\"/\"));\n+\t\t\tvar afterFilter = afterFilter.substring(\n+\t\t\t\tafterFilter.indexOf(\"/\"),\n+\t\t\t\tafterFilter.length\n+\t\t\t);\n+\n+\t\t\tthumbUrl =\n+\t\t\t\tbeforeFilter +\n+\t\t\t\t\"filter/\" +\n+\t\t\t\tfilter +\n+\t\t\t\t\",Thumbnail/\" +\n+\t\t\t\tafterFilter +\n+\t\t\t\t\"/thumbnail_h/\" +\n+\t\t\t\tthis.thumbnailHeight;\n+\t\t} else {\n+\t\t\tif (!this.saveAsFileName.toLowerCase().endsWith(\".svg\")) {\n+\t\t\t\tthumbUrl += \"/filter/Thumbnail/thumbnail_h/\" + this.thumbnailHeight;\n+\t\t\t} else {\n+\t\t\t\treturn thumbUrl;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn this.cleanUrl(thumbUrl + \"/r/\" + _rand());\n+\t},\n+\n+\tcleanUrl: function (x) {\n+\t\twhile (x.indexOf(\"//\") > -1) {\n+\t\t\tx = x.replace(\"//\", \"/\");\n+\t\t}\n+\t\treturn x;\n+\t},\n+\n+\tsetThumbnail: function () {\n+\t\tvar thumbUrl = this._getThumbRendition(this.currentUrl);\n+\t\tdojo.style(this.thumbnailImage, \"display\", \"none\");\n+\t\tdojo.addClass(this.thumbnailDiv, \"loader\");\n+\t\tthis.thumbnailImage.src.onload = new (function () {\n+\t\t\tvar ctx = window.top._dotImageEditor;\n+\t\t\tdojo.style(ctx.thumbnailImage, \"display\", \"block\");\n+\t\t\tdojo.removeClass(ctx.thumbnailDiv, \"loader\");\n+\t\t})();\n+\n+\t\t//this.thumbnailImage.src =  \"#\"; // thumbUrl;\n+\t\tthis.thumbnailImage.src = thumbUrl;\n+\t},\n+\n+\t/**\n+\t * This function runs on pageload from the image_tool.jsp page. It loads the\n+\t * underlying images to get w/h info from them.\n+\t *\n+\t */\n+\tinitViewport: function () {\n+\t\t// make the iframe all big\n+\t\tvar frame = dojo.byId(\"imageToolIframe\");\n+\n+\t\t//if we are a File Asset\n+\t\tif (this.binaryFieldId == \"\") {\n+\t\t\tthis.iframe.dojo.style(\n+\t\t\t\tthis.iframe.dojo.byId(\"saveAsSpan\"),\n+\t\t\t\t\"display\",\n+\t\t\t\t\"inline\"\n+\t\t\t);\n+\t\t}\n+\n+\t\tif (this.inited) return;\n+\t\tthis.imagesLoaded = false;\n+\t\tthis.inited = true;\n+\t\tvar viewPort = this.iframe.dojo.byId(\"imageViewPort\");\n+\t\tvar showImage = this.iframe.dojo.byId(\"me\");\n+\t\tvar baseImage = this.iframe.dojo.byId(\"baseImage\");\n+\t\tvar sic = dojo.coords(showImage);\n+\n+\t\tif (baseImage.complete) {\n+\t\t\tvar bic = dojo.coords(baseImage);\n+\t\t\tthis.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n+\t\t\tthis.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n+\t\t\tthis.baseAndShowLoaded();\n+\t\t} else {\n+\t\t\tbaseImage.onload = function () {\n+\t\t\t\tvar ctx = window.top._dotImageEditor;\n+\t\t\t\tvar bic = dojo.coords(ctx.iframe.dojo.byId(\"baseImage\"));\n+\t\t\t\t// set the img dimentions so user can see\n+\t\t\t\tctx.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n+\t\t\t\tctx.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n+\t\t\t\tctx.baseAndShowLoaded();\n+\t\t\t};\n+\t\t}\n+\t\tif (showImage.complete) {\n+\t\t\t// set the img dimentions so user can see\n+\n+\t\t\tthis.iframe.dojo.byId(\"displayImageWidth\").value = bic.w;\n+\t\t\tthis.iframe.dojo.byId(\"displayImageHeight\").value = bic.h;\n+\t\t\tthis.baseAndShowLoaded();\n+\t\t} else {\n+\t\t\tshowImage.onload = function () {\n+\t\t\t\tvar ctx = window.top._dotImageEditor;\n+\t\t\t\tvar sic = dojo.coords(ctx.iframe.dojo.byId(\"me\"));\n+\t\t\t\t// set the img dimentions so user can see\n+\t\t\t\tctx.iframe.dojo.byId(\"displayImageWidth\").value = sic.w;\n+\t\t\t\tctx.iframe.dojo.byId(\"displayImageHeight\").value = sic.h;\n+\t\t\t\tctx.baseAndShowLoaded();\n+\t\t\t};\n+\t\t}\n+\t\tdojo.attr(this.iframe.dojo.byId(\"imageViewPort\"), \"class\", \"\");\n+\t},\n+\n+\tbaseAndShowLoaded: function () {\n+\t\tvar showImage = this.iframe.dojo.byId(\"me\");\n+\t\tvar baseImage = this.iframe.dojo.byId(\"baseImage\");\n+\n+\t\tif (showImage.complete && baseImage.complete && !this.imagesLoaded) {\n+\t\t\tthis.imagesLoaded = true;\n+\n+\t\t\tvar sic = dojo.coords(showImage);\n+\t\t\tvar bic = dojo.coords(baseImage);\n+\n+\t\t\tvar x = Math.round((sic.w / bic.w) * 100);\n+\t\t\tthis.zoomValue = 0;\n+\t\t\tif (!isNaN(x)) {\n+\t\t\t\tthis.zoomValue = x;\n+\t\t\t}\n+\n+\t\t\tvar x = this.iframe.dijit.byId(\"showScaleSlider\");\n+\n+\t\t\tx.attr(\"value\", this.zoomValue);\n+\t\t\tthis._updateZoomFactor();\n+\t\t}\n+\t},\n+\n+\tcloseImageWindow: function (e) {\n+\t\tthis._cleanUpImageEditor();\n+\t},\n+\n+\t/**\n+\t * cleans up old references, resets imageEditor\n+\t */\n+\t_cleanUpImageEditor: function (e) {\n+\t\twindow.top._dotImageEditor = null;\n+\t\twindow.parent._dotImageEditor = null;\n+\n+\t\tvar myEditor = this.imageEditor\n+\t\t\t? this.imageEditor\n+\t\t\t: document.getElementById(\"dotImageDialog\");\n+\n+\t\t// if we have an Image Editor\n+\t\tif (myEditor) {\n+\t\t\twhile (this.imageEditor.firstChild) {\n+\t\t\t\tthis.imageEditor.removeChild(this.imageEditor.firstChild);\n+\t\t\t}\n+\t\t\tmyEditor.parentNode.removeChild(myEditor);\n+\t\t}\n+\n+\t\tthis.imageEditor = null;\n+\t\tthis.iframe = null;\n+\t\tthis.inited = false;\n+\t\tthis.painting = false;\n+\t\tthis.filters = new Array();\n+\t\tthis.saveAsIncrement = 1;\n+\t\tthis.imagesLoaded = false;\n+\t\tthis.resizeFilter = false;\n+\t},\n+\n+\t/***************************************************************************\n+\t *\n+\t * Button Actions\n+\t *\n+\t **************************************************************************/\n+\n+\taddToClipboard: function () {\n+\t\tif (this.currentUrl.indexOf(\"/temp_\") > -1) {\n+\t\t\talert(\n+\t\t\t\t\"You cannot clip a temp or altered file.  Please save the content and reopen the image editor to clip it\"\n+\t\t\t);\n+\t\t\treturn;\n+\t\t}\n+\t\tvar fileUrl = this.cleanUrl(this.currentUrl);\n+\t\tvar url =\n+\t\t\tfileUrl.indexOf(\"?\") > -1\n+\t\t\t\t? fileUrl + \"&\"\n+\t\t\t\t: fileUrl + \"?_imageToolClipboard=true\";\n+\t\t//alert(url);\n+\t\tvar target = this.iframe.dojo.byId(\"me\");\n+\t\tdojo.style(target, \"opacity\", 0);\n+\t\tdojo.xhrGet({\n+\t\t\turl: url,\n+\t\t\ttarget: target,\n+\t\t\tpreventCache: true,\n+\t\t\tsync: true,\n+\t\t\tload: function (data) {\n+\t\t\t\tdojo.fadeIn({ node: target }).play();\n+\t\t\t},\n+\t\t\terror: function (data) {\n+\t\t\t\tdojo.style(target, \"opacity\", 100);\n+\t\t\t},\n+\t\t});\n+\t},\n+\n+\t/**\n+\t * Save as passes a var:_imageToolSaveFile to the binary servlet with all the other\n+\t * params.  This saves the file handle in the users session.  We look for this\n+\t * file and save it when the user checks the file or content in\n+\t */\n+\n+\tsaveImage: function () {\n+\t\tif (this.binaryFieldId != null && this.binaryFieldId.length > 0) {\n+\t\t\tthis.saveBinaryImage(this.activeEditor);\n+\t\t} else {\n+\t\t\tthis.saveFileImage();\n+\t\t}\n+\t},\n+\n+\t_isValidURL: function (url) {\n+\t\tvar elm;\n+\t\tif (!elm) {\n+\t\t\telm = document.createElement(\"input\");\n+\t\t\telm.setAttribute(\"type\", \"url\");\n+\t\t}\n+\t\telm.value = url;\n+\t\treturn elm.validity.valid;\n+\t},\n+\n+\t/**\n+\t * This saves an image\n+\t * that lives on a contentlet\n+\t *\n+\t */\n+\tsaveBinaryImage: function (activeEditor) {\n+\t\tvar field = this.binaryFieldId;\n+\t\tif (this.fieldContentletId.length > 0) {\n+\t\t\tfield = this.fieldContentletId;\n+\t\t}\n+\n+\t\tvar url = this.cleanUrl(this.currentUrl);\n+\n+\t\tif (activeEditor) {", "originalCommit": "2798b3b16e98bd8441285d8c938885d61b7d614c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxNDU1MA==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r422314550", "bodyText": "Replaces the image with the new asset", "author": "ivorpad", "createdAt": "2020-05-08T18:56:29Z", "path": "dotCMS/src/main/webapp/html/js/dotcms/dijit/image/ImageEditor.js", "diffHunk": "@@ -2,1174 +2,1088 @@ dojo.provide(\"dotcms.dijit.image.ImageEditor\");\n dojo.require(\"dotcms.dijit.image.Crop\");\n dojo.require(\"dijit.Dialog\");\n \n-\n-function _rand(){\n-     return Math.floor(Math.random()*100000000);\n+function _rand() {\n+\treturn Math.floor(Math.random() * 100000000);\n }\n \n-dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget,{\n-\n-    // cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n-    imageToolJsp:'/html/js/dotcms/dijit/image/image_tool.jsp',\n-    baseFilterUrl:\"/contentAsset/image\",\n-    // changes to show the value in the toolbar\n-    currentUrl:\"/contentAsset/image\",\n-    ajaxUrl:\"/servlet/dotImageToolAjax\",\n-\n-    resizeFilter:false,\n-    zoomValue:0,\n-    inode:'0',\n-    tempId:null,\n-    inited: false,\n-    painting : false,\n-    thumbnailWidth:500,\n-    thumbnailHeight:250,\n-    thumbDivId:'',\n-    fieldName:'fileAsset',\n-    saveAsIncrement:1,\n-    editImageText:\"Edit Image\",\n-    binaryFieldId:'',\n-    fieldContentletId:'',\n-    saveAsFileName:'',\n-    compression:'none',\n-    compressionValue:65,\n-    fileSize:0,\n-    \n-\n-\n-\n-\n-    postCreate: function(){\n-        window.top._dotImageEditor = this;\n-        // this._loadCss();\n-        this.filters = new Array();\n-\n-        var where= (this.parentNode != undefined) ? dojo.byId(this.parentNode) : this.domNode;\n-        // create divs\n-\n-        this.thumbnailDiv = dojo.create('div' ,{\n-            style:\"margin-bottom:5px;max-width:1040px;min-width:150px;display:inline-block;height:\" + (this.thumbnailHeight+4) +\"px\"},where);\n-\n-            dojo.attr(this.thumbnailDiv, \"class\", \"thumbnailDiv\");\n-\n-\n-        this.editFileWindow = dojo.create('div' ,{\n-            innerHTML:this.editImageText},this.thumbnailDiv);\n-\n-            dojo.attr(this.editFileWindow, \"class\", \"editImageText\");\n-\n-\n-        this.thumbnailImage = dojo.create(\"img\" , {\n-            style:\"max-width:100%;\"},this.thumbnailDiv);\n-\n-\n-\n-\n-\n-        this._initBaseFilterUrl();\n-        this.setThumbnail();\n-\n-        dojo.connect(this.thumbnailDiv , \"onclick\", this, \"createImageWindow\");\n-    },\n-\n-    _initBaseFilterUrl: function() {\n-        var shorty = this.inode  ;\n-\n-        if(this.tempId){\n-            shorty=this.tempId;\n-        }\n-        \n-        \n-        \n-        this.baseFilterUrl+= \"/\" + shorty;\n-\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-\n-        this.currentUrl = this.baseFilterUrl;\n-    },\n-    \n-    createImageWindow: function(){\n-        this.tabindex = 0;\n-        this.thumbnailDiv.tabindex=0;\n-\n-\n-        var newerInode = window.contentAdmin.contentletInode;\n-\n-        var id=this.inode;\n-        if(newerInode && newerInode!= this.inode){\n-            this.inode = newerInode;\n-            id=newerInode;\n-            this.tempId=null;\n-        }else if(this.tempId){\n-            id = this.tempId;\n-        }\n-        \n-        \n-\n-\n-        this.baseFilterUrl= \"/contentAsset/image/\" + id;\n-        if(this.fieldName != undefined){\n-            this.baseFilterUrl+= \"/\" + this.fieldName;\n-        }\n-        this.currentUrl = this.baseFilterUrl;\n-        \n-\n-\n-\n-        // clean up any old image editors laying around\n-        this._cleanUpImageEditor();\n-        window.top._dotImageEditor = this;\n-        var url = this.imageToolJsp + \"?id=\" + id;\n-    \n-        url = url + \"&fieldName=\"+ this.fieldName;\n-\n-        \n-        \n-        this.imageEditor = document.createElement('div');\n-        this.imageEditor.id = 'dotImageDialog';\n-        this.imageEditor.innerHTML=\"<iframe scrolling='yes' src='\" + url+ \"' id='imageToolIframe' frameborder='0' style='width:100%;height:100%;overflow:hidden;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19);'></iframe>\";\n-        this.imageEditor.style=\"position:absolute;top:10px;bottom:20px;left:20px;right:20px;padding:0;margin:0;border:1px silver solid;background:white;z-index: 99999;\";\n-        document.body.insertBefore(this.imageEditor, document.body.firstChild);\n-\n-    },\n-\n-    /***************************************************************************\n-     *\n-     * Thumbnail preview\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    /****\n-     * Returns URL representation for given image\n-     * This will always be a png file\n-     */\n-    _getThumbRendition:function(thumbUrl){\n-        // if thumbnail is already in filter\n-        if(thumbUrl.indexOf(\"filter/\") > -1){\n-            var beforeFilter = thumbUrl.substring(0, thumbUrl.indexOf(\"filter/\"));\n-            var afterFilter = thumbUrl.substring(thumbUrl.indexOf(\"filter/\") + 7, thumbUrl.length);\n-            var filter = afterFilter.substring(0,afterFilter.indexOf(\"/\"));\n-            var afterFilter = afterFilter.substring(afterFilter.indexOf(\"/\"),afterFilter.length);\n-\n-            thumbUrl = beforeFilter + \"filter/\" + filter + \",Thumbnail/\" + afterFilter + \"/thumbnail_h/\" + this.thumbnailHeight;\n-        }\n-        else{\n-            if(!this.saveAsFileName.toLowerCase().endsWith('.svg')) {\n-                thumbUrl+= \"/filter/Thumbnail/thumbnail_h/\"+ this.thumbnailHeight;\n-            }else{\n-                return thumbUrl;\n-            }\n-        }\n-\n-\n-        return this.cleanUrl(thumbUrl + \"/r/\" + _rand());\n-    },\n-\n-    cleanUrl: function(x){\n-    \twhile(x.indexOf(\"//\")>-1){\n-    \t\tx= x.replace(\"//\",\"/\");\n-    \t}\n-    \treturn x;\n-\n-\n-\n-    },\n-\n-\n-    setThumbnail: function(){\n-        var thumbUrl = this._getThumbRendition(this.currentUrl)  ;\n-        dojo.style(this.thumbnailImage, \"display\", \"none\");\n-        dojo.addClass(this.thumbnailDiv, \"loader\");\n-        this.thumbnailImage.src.onload=new function(){\n-            var ctx = window.top._dotImageEditor ;\n-            dojo.style(ctx.thumbnailImage, \"display\", \"block\");\n-            dojo.removeClass(ctx.thumbnailDiv, \"loader\");\n-\n-        };\n-\n-        //this.thumbnailImage.src =  \"#\"; // thumbUrl;\n-        this.thumbnailImage.src =  thumbUrl ;\n-\n-    },\n-\n-\n-\n-\n-    /**\n-     * This function runs on pageload from the image_tool.jsp page. It loads the\n-     * underlying images to get w/h info from them.\n-     *\n-     */\n-    initViewport: function(){\n-        // make the iframe all big\n-        var frame=dojo.byId(\"imageToolIframe\");\n-\n-\n-\n-\n-        //if we are a File Asset\n-        if(this.binaryFieldId == ''){\n-            this.iframe.dojo.style(this.iframe.dojo.byId(\"saveAsSpan\"), \"display\", \"inline\");\n-\n-        }\n-\n-\n-        if(this.inited) return;\n-        this.imagesLoaded=false;\n-        this.inited = true;\n-        var viewPort = this.iframe.dojo.byId(\"imageViewPort\");\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-        var sic = dojo.coords(showImage);\n-\n-        if(baseImage.complete){\n-            var bic = dojo.coords(baseImage);\n-            this.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-            this.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-            this.baseAndShowLoaded();\n-        }else{\n-            baseImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var bic = dojo.coords(ctx.iframe.dojo.byId(\"baseImage\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n-                ctx.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        if(showImage.complete){\n-            // set the img dimentions so user can see\n-\n-            this.iframe.dojo.byId(\"displayImageWidth\").value = bic.w;\n-            this.iframe.dojo.byId(\"displayImageHeight\").value = bic.h;\n-            this.baseAndShowLoaded();\n-        }\n-        else{\n-            showImage.onload= function (){\n-                var ctx = window.top._dotImageEditor ;\n-                var sic = dojo.coords(ctx.iframe.dojo.byId(\"me\"));\n-                // set the img dimentions so user can see\n-                ctx.iframe.dojo.byId(\"displayImageWidth\").value = sic.w;\n-                ctx.iframe.dojo.byId(\"displayImageHeight\").value = sic.h;\n-                ctx.baseAndShowLoaded();\n-            };\n-        }\n-        dojo.attr(this.iframe.dojo.byId(\"imageViewPort\"), \"class\", \"\");\n-\n-    },\n-\n-\n-    baseAndShowLoaded : function(){\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        if(showImage.complete && baseImage.complete && !this.imagesLoaded){\n-            this.imagesLoaded=true;\n-\n-\n-            var sic = dojo.coords(showImage);\n-            var bic = dojo.coords(baseImage);\n-\n-            var x = Math.round(sic.w / bic.w *100);\n-            this.zoomValue = 0\n-            if(!isNaN(x)){\n-                this.zoomValue =x;\n-            }\n-\n-            var x =this.iframe.dijit.byId(\"showScaleSlider\");\n-\n-            x.attr(\"value\", this.zoomValue);\n-            this._updateZoomFactor();\n-        }\n-\n-    },\n-\n-\n-\n-\n-\n-\n-    closeImageWindow : function(e){\n-        this._cleanUpImageEditor();\n-        \n-    },\n-\n-\n-    /**\n-     * cleans up old references, resets imageEditor\n-     */\n-    _cleanUpImageEditor : function (e){\n-        window.top._dotImageEditor = null;\n-        window.parent._dotImageEditor = null;\n-        \n-        var myEditor = (this.imageEditor) ? this.imageEditor : document.getElementById(\"dotImageDialog\");\n-        \n-        // if we have an Image Editor\n-        if(myEditor){\n-            \n-            while (this.imageEditor.firstChild) {\n-                this.imageEditor.removeChild(this.imageEditor.firstChild);\n-            }\n-            myEditor.parentNode.removeChild(myEditor)\n-        }\n-\n-        this.imageEditor=null;\n-        this.iframe =null;\n-        this.inited=false;\n-        this.painting =false;\n-        this.filters=new Array();\n-        this.saveAsIncrement=1;\n-        this.imagesLoaded=false;\n-        this.resizeFilter=false;\n-        \n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * Button Actions\n-     *\n-     **************************************************************************/\n-\n-\n-\n-    addToClipboard : function(){\n-        if(this.currentUrl.indexOf(\"/temp_\")>-1){\n-            alert(\"You cannot clip a temp or altered file.  Please save the content and reopen the image editor to clip it\");\n-            return;\n-        }\n-        var fileUrl = this.cleanUrl(this.currentUrl);\n-        var url = (fileUrl.indexOf(\"?\")>-1) ? fileUrl + \"&\"  : fileUrl + \"?_imageToolClipboard=true\";\n-        //alert(url);\n-        var target = this.iframe.dojo.byId('me');\n-        dojo.style(target, \"opacity\", 0);\n-        dojo.xhrGet({\n-            url:url,\n-            target:target,\n-             preventCache:true,\n-             sync:true,\n-             load:function(data){\n-                dojo.fadeIn({node:target}).play();\n-\n-             },\n-             error:function(data){\n-                dojo.style(target, \"opacity\", 100);\n-             }\n-\n-        });\n-\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    /**\n-     * Save as passes a var:_imageToolSaveFile to the binary servlet with all the other\n-     * params.  This saves the file handle in the users session.  We look for this\n-     * file and save it when the user checks the file or content in\n-     */\n-\n-    saveImage : function(){\n-        if(this.binaryFieldId != null && this.binaryFieldId.length > 0){\n-            this.saveBinaryImage();\n-        }\n-        else{\n-            this.saveFileImage();\n-        }\n-    },\n-\n-\n-\n-    /**\n-     * This saves an image\n-     * that lives on a contentlet\n-     *\n-     */\n-\n-    saveBinaryImage: function(){\n-\n-        var field=this.binaryFieldId;\n-        if(this.fieldContentletId.length>0) {\n-            field=this.fieldContentletId;\n-        }\n-\n-        var url =   this.cleanUrl(this.currentUrl) ;\n-        url = (url.indexOf(\"?\")>-1) ? url + \"&\"  : url + \"?\";\n-        url += (field.length > 0) ? \"&binaryFieldId=\" +field : \"\";\n-        url += \"&_imageToolSaveFile=true\";\n-        \n-        \n-        var xhr = new XMLHttpRequest();\n-        xhr.onload = (self => {\n-            return () => {\n-                if (xhr.status == 200) {\n-                    var dataJson = JSON.parse(xhr.responseText);\n-                    self.tempId=dataJson.id;\n-                    if(window.document.getElementById(self.binaryFieldId + \"ValueField\")){\n-                        window.document.getElementById(self.binaryFieldId + \"ValueField\").value=dataJson.id; \n-                    }\n-                    \n-                } else {\n-                    alert(\"Error! Upload failed\");\n-                }\n-            };\n-        })(this);\n-        xhr.open(\"GET\", url, true);\n-        xhr.send();\n-        \n-\n-\n-        this.setThumbnail();\n-        \n-\n-        // close without wiping out the saved value\n-        this.closeImageWindow();\n-    },\n-\n-\n-\n-\n-\n-\n-\n-    closeEditorWhenRedrawFinish: function() {\n-        if (this.painting) {\n-            setTimeout(\"window.top._dotImageEditor.closeEditorWhenRedrawFinish()\", 500);\n-        } else {\n-            this.closeImageWindow();\n-        }\n-    },\n-\n-    doDownload: function(){\n-        var url =this.cleanUrl(this.currentUrl);\n-        \n-        var aj =this.iframe.dojo.byId(\"actionJackson\");\n- \n-        url = (x.indexOf(\"?\")>-1) ? x + \"&\"  : x + \"?\";\n-        url = url + \"r=\" +_rand()+ \"&force_download=true\";\n-        aj.src=url;\n-\n-    },\n-\n-\n-\n-    closeSaveAsDia : function(){\n-        saveAsDia = this.iframe.dijit.byId(\"saveAsDialog\").hide();\n-        this.iframe.dojo.byId(\"saveAsName\").value = \"\";\n-\n-\n-    },\n-\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * UI Controls\n-     *\n-     **************************************************************************/\n-\n-\n-\n-\n-    // Start Crop work ------------------------------------------------\n-    toggleCrop: function(){\n-        if(this.crop || this.crop != undefined){\n-            this.doCrop();\n-        }\n-        else{\n-            this._cropOn();\n-        }\n-    },\n-\n-\n-\n-    doConstrain : function(){\n-\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width/2));\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height/2));\n-\n-\n-    },\n-    setCropHeightFromWidth : function(){\n-\n-        var cw = dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\", Math.floor(height * (cw/width) ));\n-    },\n-\n-    setCropWidthFromHeight: function(){\n-\n-        var ch = dojo.attr(this.iframe.dojo.byId(\"cropHeight\"),\"value\");\n-        var coord = dojo.coords(this.iframe.dojo.byId(\"me\"));\n-        var width = coord.w;\n-        var height = coord.h;\n-\n-        dojo.attr(this.iframe.dojo.byId(\"cropWidth\"),\"value\", Math.floor(width * (ch/height) ));\n-    },\n-\n-\n-\n-\n-\n-    // turns cropping on\n-    _cropOn: function(){\n-\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 1px solid\");\n-        if(this.crop && this.crop != undefined){\n-            return;\n-        }\n-\n-\n-        this.crop = new dotcms.dijit.image.Crop({\n-            hoverable:true\n-        }, this.iframe.dojo.byId(\"me\"));\n-        this.crop.showCropBox();\n-\n-    },\n-    _cropOff: function(){\n-\n-        if(!this.crop || this.crop ==undefined){\n-            return;\n-        }\n-        dojo.style(this.iframe.dojo.byId(\"cropBtn\"), \"border\", \"red 0px dotted\");\n-\n-        var img = this.iframe.dojo.byId(\"me\");\n-\n-        this.crop.destroy();\n-        this.crop=null;\n-        this.iframe.dojo.byId(\"imageViewPort\").appendChild(img);\n-    },\n-\n-    doCrop: function(){\n-        this.iframe.dojo.byId(\"cropBtn\").blur();\n-        dojo.attr(this.iframe.dijit.byId('cropBtn'), \"disabled\", true);\n-\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-\n-        pc = dojo.coords(this.crop.picker);\n-        vp = dojo.coords(this.iframe.dojo.byId(\"imageViewPort\"));\n-        sTop = this.iframe.dojo.byId(\"imageViewPort\").scrollTop;\n-        sLeft = this.iframe.dojo.byId(\"imageViewPort\").scrollLeft;\n-\n-        var sw = parseInt(this.iframe.dojo.byId(\"displayImageWidth\").value);\n-        var sh = parseInt(this.iframe.dojo.byId(\"displayImageHeight\").value);       \n+dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget, {\n+\t// cssUrl:'/html/js/dotcms/dijit/image/image-tools.css',\n+\timageToolJsp: \"/html/js/dotcms/dijit/image/image_tool.jsp\",\n+\tbaseFilterUrl: \"/contentAsset/image\",\n+\t// changes to show the value in the toolbar\n+\tcurrentUrl: \"/contentAsset/image\",\n+\tajaxUrl: \"/servlet/dotImageToolAjax\",\n+\n+\tresizeFilter: false,\n+\tzoomValue: 0,\n+\tinode: \"0\",\n+\ttempId: null,\n+\tinited: false,\n+\tpainting: false,\n+\tthumbnailWidth: 500,\n+\tthumbnailHeight: 250,\n+\tthumbDivId: \"\",\n+\tfieldName: \"fileAsset\",\n+\tsaveAsIncrement: 1,\n+\teditImageText: \"Edit Image\",\n+\tbinaryFieldId: \"\",\n+\tfieldContentletId: \"\",\n+\tsaveAsFileName: \"\",\n+\tcompression: \"none\",\n+\tcompressionValue: 65,\n+\tfileSize: 0,\n+\texecute: null,\n+\tactiveEditor: undefined,\n+\n+\tpostCreate: function () {\n+\t\tthis.execute = this.createImageWindow;\n+\t\twindow.top._dotImageEditor = this;\n+\t\tthis.filters = new Array();\n+\n+\t\tvar where =\n+\t\t\tthis.parentNode != undefined ? dojo.byId(this.parentNode) : this.domNode;\n+\t\t// create divs\n+\n+\t\tthis.thumbnailDiv = dojo.create(\n+\t\t\t\"div\",\n+\t\t\t{\n+\t\t\t\tstyle:\n+\t\t\t\t\t\"margin-bottom:5px;max-width:1040px;min-width:150px;display:inline-block;height:\" +\n+\t\t\t\t\t(this.thumbnailHeight + 4) +\n+\t\t\t\t\t\"px\",\n+\t\t\t},\n+\t\t\twhere\n+\t\t);\n+\n+\t\tdojo.attr(this.thumbnailDiv, \"class\", \"thumbnailDiv\");\n+\n+\t\tif (this.editImageText !== \"\") {\n+\t\t\tthis.editFileWindow = dojo.create(\n+\t\t\t\t\"div\",\n+\t\t\t\t{\n+\t\t\t\t\tinnerHTML: this.editImageText,\n+\t\t\t\t},\n+\t\t\t\tthis.thumbnailDiv\n+\t\t\t);\n+\t\t\tdojo.attr(this.editFileWindow, \"class\", \"editImageText\");\n+\t\t}\n+\n+\t\tthis.thumbnailImage = dojo.create(\n+\t\t\t\"img\",\n+\t\t\t{\n+\t\t\t\tstyle: \"max-width:100%;\",\n+\t\t\t},\n+\t\t\tthis.thumbnailDiv\n+\t\t);\n+\n+\t\tthis._initBaseFilterUrl();\n+\t\tthis.setThumbnail();\n+\n+\t\tdojo.connect(this.thumbnailDiv, \"onclick\", this, \"createImageWindow\");\n+\t},\n+\n+\t_initBaseFilterUrl: function () {\n+\t\tvar shorty = this.inode;\n+\n+\t\tif (this.tempId) {\n+\t\t\tshorty = this.tempId;\n+\t\t}\n+\n+\t\tthis.baseFilterUrl += \"/\" + shorty;\n+\n+\t\tif (this.fieldName != undefined) {\n+\t\t\tthis.baseFilterUrl += \"/\" + this.fieldName;\n+\t\t}\n+\n+\t\tthis.currentUrl = this.baseFilterUrl;\n+\t},\n+\n+\tcreateImageWindow: function () {\n+\t\tthis.tabindex = 0;\n+\t\tthis.thumbnailDiv.tabindex = 0;\n+\n+\t\tvar newerInode = window.contentAdmin.contentletInode;\n+\n+\t\tconsole.log({ newerInode });\n+\n+\t\tvar id = this.inode;\n+\t\tif (newerInode && newerInode != this.inode) {\n+\t\t\tthis.inode = newerInode;\n+\t\t\tid = newerInode;\n+\t\t\tthis.tempId = null;\n+\t\t} else if (this.tempId) {\n+\t\t\tid = this.tempId;\n+\t\t}\n+\n+\t\tconsole.log({ id });\n+\n+\t\tthis.baseFilterUrl = \"/contentAsset/image/\" + id;\n+\t\tif (this.fieldName != undefined) {\n+\t\t\tthis.baseFilterUrl += \"/\" + this.fieldName;\n+\t\t}\n+\t\tthis.currentUrl = this.baseFilterUrl;\n+\n+\t\t// clean up any old image editors laying around\n+\t\tthis._cleanUpImageEditor();\n+\t\twindow.top._dotImageEditor = this;\n+\t\tvar url = this.imageToolJsp + \"?id=\" + id;\n+\n+\t\turl = url + \"&fieldName=\" + this.fieldName;\n+\n+\t\tthis.imageEditor = document.createElement(\"div\");\n+\t\tthis.imageEditor.id = \"dotImageDialog\";\n+\t\tthis.imageEditor.innerHTML =\n+\t\t\t\"<iframe scrolling='yes' src='\" +\n+\t\t\turl +\n+\t\t\t\"' id='imageToolIframe' frameborder='0' style='width:100%;height:100%;overflow:hidden;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19);'></iframe>\";\n+\t\tthis.imageEditor.style =\n+\t\t\t\"position:absolute;top:10px;bottom:20px;left:20px;right:20px;padding:0;margin:0;border:1px silver solid;background:white;z-index: 99999;\";\n+\t\tdocument.body.insertBefore(this.imageEditor, document.body.firstChild);\n+\t},\n+\n+\t/***************************************************************************\n+\t *\n+\t * Thumbnail preview\n+\t *\n+\t **************************************************************************/\n+\n+\t/****\n+\t * Returns URL representation for given image\n+\t * This will always be a png file\n+\t */\n+\t_getThumbRendition: function (thumbUrl) {\n+\t\t// if thumbnail is already in filter\n+\t\tif (thumbUrl.indexOf(\"filter/\") > -1) {\n+\t\t\tvar beforeFilter = thumbUrl.substring(0, thumbUrl.indexOf(\"filter/\"));\n+\t\t\tvar afterFilter = thumbUrl.substring(\n+\t\t\t\tthumbUrl.indexOf(\"filter/\") + 7,\n+\t\t\t\tthumbUrl.length\n+\t\t\t);\n+\t\t\tvar filter = afterFilter.substring(0, afterFilter.indexOf(\"/\"));\n+\t\t\tvar afterFilter = afterFilter.substring(\n+\t\t\t\tafterFilter.indexOf(\"/\"),\n+\t\t\t\tafterFilter.length\n+\t\t\t);\n+\n+\t\t\tthumbUrl =\n+\t\t\t\tbeforeFilter +\n+\t\t\t\t\"filter/\" +\n+\t\t\t\tfilter +\n+\t\t\t\t\",Thumbnail/\" +\n+\t\t\t\tafterFilter +\n+\t\t\t\t\"/thumbnail_h/\" +\n+\t\t\t\tthis.thumbnailHeight;\n+\t\t} else {\n+\t\t\tif (!this.saveAsFileName.toLowerCase().endsWith(\".svg\")) {\n+\t\t\t\tthumbUrl += \"/filter/Thumbnail/thumbnail_h/\" + this.thumbnailHeight;\n+\t\t\t} else {\n+\t\t\t\treturn thumbUrl;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn this.cleanUrl(thumbUrl + \"/r/\" + _rand());\n+\t},\n+\n+\tcleanUrl: function (x) {\n+\t\twhile (x.indexOf(\"//\") > -1) {\n+\t\t\tx = x.replace(\"//\", \"/\");\n+\t\t}\n+\t\treturn x;\n+\t},\n+\n+\tsetThumbnail: function () {\n+\t\tvar thumbUrl = this._getThumbRendition(this.currentUrl);\n+\t\tdojo.style(this.thumbnailImage, \"display\", \"none\");\n+\t\tdojo.addClass(this.thumbnailDiv, \"loader\");\n+\t\tthis.thumbnailImage.src.onload = new (function () {\n+\t\t\tvar ctx = window.top._dotImageEditor;\n+\t\t\tdojo.style(ctx.thumbnailImage, \"display\", \"block\");\n+\t\t\tdojo.removeClass(ctx.thumbnailDiv, \"loader\");\n+\t\t})();\n+\n+\t\t//this.thumbnailImage.src =  \"#\"; // thumbUrl;\n+\t\tthis.thumbnailImage.src = thumbUrl;\n+\t},\n+\n+\t/**\n+\t * This function runs on pageload from the image_tool.jsp page. It loads the\n+\t * underlying images to get w/h info from them.\n+\t *\n+\t */\n+\tinitViewport: function () {\n+\t\t// make the iframe all big\n+\t\tvar frame = dojo.byId(\"imageToolIframe\");\n+\n+\t\t//if we are a File Asset\n+\t\tif (this.binaryFieldId == \"\") {\n+\t\t\tthis.iframe.dojo.style(\n+\t\t\t\tthis.iframe.dojo.byId(\"saveAsSpan\"),\n+\t\t\t\t\"display\",\n+\t\t\t\t\"inline\"\n+\t\t\t);\n+\t\t}\n+\n+\t\tif (this.inited) return;\n+\t\tthis.imagesLoaded = false;\n+\t\tthis.inited = true;\n+\t\tvar viewPort = this.iframe.dojo.byId(\"imageViewPort\");\n+\t\tvar showImage = this.iframe.dojo.byId(\"me\");\n+\t\tvar baseImage = this.iframe.dojo.byId(\"baseImage\");\n+\t\tvar sic = dojo.coords(showImage);\n+\n+\t\tif (baseImage.complete) {\n+\t\t\tvar bic = dojo.coords(baseImage);\n+\t\t\tthis.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n+\t\t\tthis.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n+\t\t\tthis.baseAndShowLoaded();\n+\t\t} else {\n+\t\t\tbaseImage.onload = function () {\n+\t\t\t\tvar ctx = window.top._dotImageEditor;\n+\t\t\t\tvar bic = dojo.coords(ctx.iframe.dojo.byId(\"baseImage\"));\n+\t\t\t\t// set the img dimentions so user can see\n+\t\t\t\tctx.iframe.dojo.byId(\"baseImageWidth\").innerHTML = bic.w;\n+\t\t\t\tctx.iframe.dojo.byId(\"baseImageHeight\").innerHTML = bic.h;\n+\t\t\t\tctx.baseAndShowLoaded();\n+\t\t\t};\n+\t\t}\n+\t\tif (showImage.complete) {\n+\t\t\t// set the img dimentions so user can see\n+\n+\t\t\tthis.iframe.dojo.byId(\"displayImageWidth\").value = bic.w;\n+\t\t\tthis.iframe.dojo.byId(\"displayImageHeight\").value = bic.h;\n+\t\t\tthis.baseAndShowLoaded();\n+\t\t} else {\n+\t\t\tshowImage.onload = function () {\n+\t\t\t\tvar ctx = window.top._dotImageEditor;\n+\t\t\t\tvar sic = dojo.coords(ctx.iframe.dojo.byId(\"me\"));\n+\t\t\t\t// set the img dimentions so user can see\n+\t\t\t\tctx.iframe.dojo.byId(\"displayImageWidth\").value = sic.w;\n+\t\t\t\tctx.iframe.dojo.byId(\"displayImageHeight\").value = sic.h;\n+\t\t\t\tctx.baseAndShowLoaded();\n+\t\t\t};\n+\t\t}\n+\t\tdojo.attr(this.iframe.dojo.byId(\"imageViewPort\"), \"class\", \"\");\n+\t},\n+\n+\tbaseAndShowLoaded: function () {\n+\t\tvar showImage = this.iframe.dojo.byId(\"me\");\n+\t\tvar baseImage = this.iframe.dojo.byId(\"baseImage\");\n+\n+\t\tif (showImage.complete && baseImage.complete && !this.imagesLoaded) {\n+\t\t\tthis.imagesLoaded = true;\n+\n+\t\t\tvar sic = dojo.coords(showImage);\n+\t\t\tvar bic = dojo.coords(baseImage);\n+\n+\t\t\tvar x = Math.round((sic.w / bic.w) * 100);\n+\t\t\tthis.zoomValue = 0;\n+\t\t\tif (!isNaN(x)) {\n+\t\t\t\tthis.zoomValue = x;\n+\t\t\t}\n+\n+\t\t\tvar x = this.iframe.dijit.byId(\"showScaleSlider\");\n+\n+\t\t\tx.attr(\"value\", this.zoomValue);\n+\t\t\tthis._updateZoomFactor();\n+\t\t}\n+\t},\n+\n+\tcloseImageWindow: function (e) {\n+\t\tthis._cleanUpImageEditor();\n+\t},\n+\n+\t/**\n+\t * cleans up old references, resets imageEditor\n+\t */\n+\t_cleanUpImageEditor: function (e) {\n+\t\twindow.top._dotImageEditor = null;\n+\t\twindow.parent._dotImageEditor = null;\n+\n+\t\tvar myEditor = this.imageEditor\n+\t\t\t? this.imageEditor\n+\t\t\t: document.getElementById(\"dotImageDialog\");\n+\n+\t\t// if we have an Image Editor\n+\t\tif (myEditor) {\n+\t\t\twhile (this.imageEditor.firstChild) {\n+\t\t\t\tthis.imageEditor.removeChild(this.imageEditor.firstChild);\n+\t\t\t}\n+\t\t\tmyEditor.parentNode.removeChild(myEditor);\n+\t\t}\n+\n+\t\tthis.imageEditor = null;\n+\t\tthis.iframe = null;\n+\t\tthis.inited = false;\n+\t\tthis.painting = false;\n+\t\tthis.filters = new Array();\n+\t\tthis.saveAsIncrement = 1;\n+\t\tthis.imagesLoaded = false;\n+\t\tthis.resizeFilter = false;\n+\t},\n+\n+\t/***************************************************************************\n+\t *\n+\t * Button Actions\n+\t *\n+\t **************************************************************************/\n+\n+\taddToClipboard: function () {\n+\t\tif (this.currentUrl.indexOf(\"/temp_\") > -1) {\n+\t\t\talert(\n+\t\t\t\t\"You cannot clip a temp or altered file.  Please save the content and reopen the image editor to clip it\"\n+\t\t\t);\n+\t\t\treturn;\n+\t\t}\n+\t\tvar fileUrl = this.cleanUrl(this.currentUrl);\n+\t\tvar url =\n+\t\t\tfileUrl.indexOf(\"?\") > -1\n+\t\t\t\t? fileUrl + \"&\"\n+\t\t\t\t: fileUrl + \"?_imageToolClipboard=true\";\n+\t\t//alert(url);\n+\t\tvar target = this.iframe.dojo.byId(\"me\");\n+\t\tdojo.style(target, \"opacity\", 0);\n+\t\tdojo.xhrGet({\n+\t\t\turl: url,\n+\t\t\ttarget: target,\n+\t\t\tpreventCache: true,\n+\t\t\tsync: true,\n+\t\t\tload: function (data) {\n+\t\t\t\tdojo.fadeIn({ node: target }).play();\n+\t\t\t},\n+\t\t\terror: function (data) {\n+\t\t\t\tdojo.style(target, \"opacity\", 100);\n+\t\t\t},\n+\t\t});\n+\t},\n+\n+\t/**\n+\t * Save as passes a var:_imageToolSaveFile to the binary servlet with all the other\n+\t * params.  This saves the file handle in the users session.  We look for this\n+\t * file and save it when the user checks the file or content in\n+\t */\n+\n+\tsaveImage: function () {\n+\t\tif (this.binaryFieldId != null && this.binaryFieldId.length > 0) {\n+\t\t\tthis.saveBinaryImage(this.activeEditor);\n+\t\t} else {\n+\t\t\tthis.saveFileImage();\n+\t\t}\n+\t},\n+\n+\t_isValidURL: function (url) {\n+\t\tvar elm;\n+\t\tif (!elm) {\n+\t\t\telm = document.createElement(\"input\");\n+\t\t\telm.setAttribute(\"type\", \"url\");\n+\t\t}\n+\t\telm.value = url;\n+\t\treturn elm.validity.valid;\n+\t},\n+\n+\t/**\n+\t * This saves an image\n+\t * that lives on a contentlet\n+\t *\n+\t */\n+\tsaveBinaryImage: function (activeEditor) {\n+\t\tvar field = this.binaryFieldId;\n+\t\tif (this.fieldContentletId.length > 0) {\n+\t\t\tfield = this.fieldContentletId;\n+\t\t}\n+\n+\t\tvar url = this.cleanUrl(this.currentUrl);\n+\n+\t\tif (activeEditor) {\n+\t\t\tvar newUrl;\n+\t\t\tif (this._isValidURL(url)) {\n+\t\t\t\tnewUrl = new URL(url).pathname;\n+\t\t\t} else {\n+\t\t\t\tnewUrl = url;\n+\t\t\t}\n+\n+\t\t\tconst asset = `\n+                <img \n+                    src=\"${newUrl}\" \n+                    alt=\"${this.fieldName}\"\n+                    data-field-name=\"${this.fieldName}\"\n+                    data-inode=\"${this.inode}\"\n+                    data-identifier=\"${this.fieldContentletId}\"\n+                    data-saveas=\"${this.saveAsFileName}\"\n+                />`;\n                 \n-        var x = 0;\n-        var y = 0;\n-        var w = pc.w;\n-        var h = pc.h;\n-        \n-        if(pc.l < 0){\n-        \tw = pc.w + pc.l;\n-        }\n-        if(pc.t < 0){\n-        \th = pc.h + pc.t;\n-        }        \n-        \n-        if(pc.l > 0 && (pc.l+pc.w) < sw){\n-        \tx = pc.l;\n-        \tw = pc.w;\n-        }\n-        if(pc.t > 0 && (pc.t+pc.h) < sh){\n-        \ty = pc.t;\n-        \th = pc.h;\n-        }\n-        \n-        if((pc.l+pc.w) > sw){\n-        \tx = pc.l;\n-        \tw = (sw - pc.l) - 1;\n-        }\n-        if((pc.t+pc.h) > sh){\n-        \ty = pc.t;\n-        \th = (sh - pc.t) - 1;\n-        }\n-        \n-        var val =\"\";\n-        val+=\"/crop_w/\" + parseInt(w);\n-        val+=\"/crop_h/\" + parseInt(h) ;\n-        val+=\"/crop_x/\" + parseInt(x);\n-        val+=\"/crop_y/\"+ parseInt(y) ;\n-\n-\n-        this._addFilter(\"Crop\", val)\n-        this._redrawImage();\n-\n-    },\n-\n-    // End Crop work ------------------------------------------------\n-\n-\n-\n-    // Start Resize work ------------------------------------------------\n-\n-\n-\n-    updateSlider: function(){\n-        this._updateZoomFactor();\n-        this._updateWidthHieghtByZoom();\n-    },\n-\n-\n-    // slider updates the zoom info\n-    _updateZoomFactor: function(){\n-        var x =this.iframe.dijit.byId(\"showScaleSlider\");\n-        zoomValue = Math.round(x.value);\n-        this.iframe.dojo.byId(\"zoomInfo\").innerHTML = zoomValue + \"%\";\n-    },\n-\n-    _updateWidthHieghtByZoom: function(){\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-        var bic = dojo.coords(baseImage);\n-        var w = Math.round(bic.w * (zoomValue / 100));\n-        if(!this.resizeFilter)\n-        \tthis.iframe.dojo.byId(\"displayImageWidth\").value = w;\n-\n-        this.resizeFilter= false;\n-        this.setHieghtFromWidth();\n-    },\n-\n-\n-\n-\n-\n-    /**\n-     * adjusts slider after someone types in a width and height\n-     */\n-\n-    _setSilderFromWidth: function(){\n-        var baseImage = this.iframe.dojo.byId(\"baseImage\");\n-        var bic = dojo.coords(baseImage);\n-        var w = Math.round(bic.w);\n-        var tw = this.iframe.dojo.byId(\"displayImageWidth\").value;\n-        var x =this.iframe.dijit.byId(\"showScaleSlider\");\n-        x.setValue(Math.round((tw/w) * 100));\n-    },\n-\n-\n-\n-    setHieghtFromWidth: function(){\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var showImageCoords = dojo.coords(showImage);\n-        var val = parseInt(this.iframe.dojo.byId(\"displayImageWidth\").value);\n-        if(isNaN(val) || val <1 || val > 9999){\n-            //alert(\"Resize value too large,  > 9999px\");\n-            val = showImageCoords.w;\n-            this.iframe.dojo.byId(\"displayImageWidth\").value = val;\n-        }\n-        this.iframe.dojo.byId(\"displayImageHeight\").value = Math.round(val * showImageCoords.h / showImageCoords.w)\n-\n-    },\n-\n-\n-\n-    setWidthFromHeight: function(){\n-        var showImage = this.iframe.dojo.byId(\"me\");\n-        var showImageCoords = dojo.coords(showImage);\n-        var val = parseInt(this.iframe.dojo.byId(\"displayImageHeight\").value);\n-        if(isNaN(val) || val <1 || val > 9999){\n-            alert(\"Resize value too large,  > 9999px\");\n-            val = showImageCoords.h;\n-            this.iframe.dojo.byId(\"displayImageHeight\").value = val;\n-        }\n-\n-        this.iframe.dojo.byId(\"displayImageWidth\").value = Math.round((val * showImageCoords.w ) /showImageCoords.h  )\n-\n-    },\n-\n-\n-    allowNumbers: function(evt){\n-        var charCode = evt.keyCode;\n-       // alert(charCode);\n-        if(charCode ==8 || charCode ==46 || charCode ==9){\n-            return true;\n-        }\n-        if (charCode < 48 || (charCode > 58 &&charCode < 96) || charCode > 105){\n-            return false;\n-        }\n-        return true;\n-    },\n-\n-\n-\n-\n-    /**\n-     * This function takes a width and handles all resizes\n-     */\n-    _doResize: function(width){\n-        var args=  \"/resize_w/\" + (parseInt(width)) ;\n-        this._addFilter(\"Resize\", args);\n-        this._redrawImage();\n-    },\n-\n-\n-\n-    /**\n-     * Called when someone moves the slider (onchange)\n-     */\n-    doSliderResize: function(){\n-        var width =parseInt(this.iframe.dojo.byId(\"displayImageWidth\").value);\n-        if(!isNaN(width)){\n-            this._doResize(width);\n-        }\n-    },\n-\n-    /**\n-     * Called when someone types in a new width\n-     */\n-\n-    resizeBtnClick: function(action){\n-    \tif(action == 'resize')\n-    \t\tthis.resizeFilter = true;\n-\n-        var width =parseInt(this.iframe.dojo.byId(\"displayImageWidth\").value);\n-        if(!isNaN(width)){\n-            this._doResize(width);\n-        }\n-        this._setSilderFromWidth();\n-    },\n-\n-\n-\n-    // End Resize work ------------------------------------------------\n-\n-\n-\n-\n-\n-    doRotate: function(){\n-        var x = this.iframe.dijit.byId(\"rotate\");\n-        if(x.isValid()){\n-\n-            this._addFilter(\"Rotate\", \"/rotate_a/\" + x.value + \".0\");\n-            this._redrawImage();\n-        }\n-        else{\n-            alert(\"invalid angle\");\n-        }\n-    },\n-\n-\n-\n-\n-\n-\n-    toggleFlip: function(){\n-        var x = this.iframe.dijit.byId(\"flip\");\n-\n-        if(x.checked){\n-            this._addFilter(\"Flip\", \"/flip_flip/1\");\n-        }\n-        else{\n-\n-            this._removeFilter(\"Flip\");\n-        }\n-        this._redrawImage();\n-    },\n-\n-    \n-    updateCompressionValue: function(){\n-        var x = this.iframe.dijit.byId(\"compressionValue\").getValue();\n-        this.iframe.dojo.byId(\"compressionValueSpan\").innerHTML=x + \"%\";\n-        this.compressionValue=x;\n-    },\n-    \n-    \n-    \n-    \n-    \n-    \n-    \n-    toggleCompression: function(){\n-        var x = this.iframe.dijit.byId(\"compression\").getValue();\n-\n-        this._removeFilter(\"Jpeg\");\n-        this._removeFilter(\"WebP\");\n-        this._removeFilter(\"Quality\");\n-        \n-        this.iframe.dijit.byId(\"compressionValue\").set(\"value\", this.compressionValue, false);\n-        this.iframe.dojo.byId(\"compressionValueSpan\").innerHTML=this.compressionValue + \"%\";\n-        \n-        if(!x || x==\"none\"){\n-            this.iframe.dojo.query(\"#controlTable .compressTd\").forEach(function(node, index, arr){\n-                node.style.display=\"none\";\n-            });\n-        }\n-        if(x==\"jpeg\"){\n-            this.iframe.dojo.query(\"#controlTable .compressTd\").forEach(function(node, index, arr){\n-                node.style.display=\"table-cell\";\n-            });\n-\n-            this._addFilter(\"Jpeg\", \"/jpeg_q/\" + this.compressionValue);\n-            this.iframe.dijit.byId(\"compression\").set(\"value\", \"jpeg\", false);\n-        }\n-        else if(x==\"webp\"){\n-            this.iframe.dojo.query(\"#controlTable .compressTd\").forEach(function(node, index, arr){\n-                node.style.display=\"table-cell\";\n-            });\n-            this._addFilter(\"WebP\", \"/webp_q/\" + this.compressionValue);\n-            this.iframe.dijit.byId(\"compression\").set(\"value\", \"webp\", false);\n-            \n-        }\n-        else if(x==\"auto\"){\n-            this.iframe.dojo.query(\"#controlTable .compressTd\").forEach(function(node, index, arr){\n-                node.style.display=\"table-cell\";\n-            });\n-            this._addFilter(\"Quality\", \"/quality_q/\" + this.compressionValue);\n-            this.iframe.dijit.byId(\"compression\").set(\"value\", \"auto\", false);\n-            \n-        }\n-        \n-        this._redrawImage();\n-    },\n-\n-    toggleGrayscale: function(){\n-        var x = this.iframe.dijit.byId(\"grayscale\");\n-\n-        if(x.checked){\n-            this._addFilter(\"Grayscale\", \"/grayscale/1\");\n-        }\n-        else{\n-            this._removeFilter(\"Grayscale\");\n-        }\n-        this._redrawImage();\n-    },\n-\n-\n-\n-\n-    applyHSB : function(){\n-        var x = this.iframe.dijit.byId(\"hsbDialog\");\n-        x.hide();\n-        var h = parseInt(this.iframe.dijit.byId(\"hueSlider\").value);\n-        var s = parseInt(this.iframe.dijit.byId(\"satSlider\").value);\n-        var b = parseInt(this.iframe.dijit.byId(\"brightSlider\").value);\n-\n-        var hs = (h % 100 == 0) ? (h / 100) + \".00\" : h/100 +\"\";\n-        var ss = (s % 100 == 0) ? (s / 100) + \".00\" : s/100 +\"\";\n-        var bs = (b % 100 == 0) ? (b / 100) + \".00\" : b/100 +\"\";\n-        var args =  \"/hsb_h/\" + (hs) + \"/hsb_s/\" + (ss)  +\"/hsb_b/\" + (bs) ;\n-        this._addFilter(\"Hsb\",args);\n-        this._redrawImage();\n-    },\n-\n-\n-    changeHSB: function(){\n-        var h = parseInt(this.iframe.dijit.byId(\"hueSlider\").value);\n-        var s = parseInt(this.iframe.dijit.byId(\"satSlider\").value);\n-        var b = parseInt(this.iframe.dijit.byId(\"brightSlider\").value);\n-        this.iframe.dojo.byId(\"hueSpan\").innerHTML = h;\n-        this.iframe.dojo.byId(\"satSpan\").innerHTML = s;\n-        this.iframe.dojo.byId(\"brightSpan\").innerHTML = b;\n-\n-    },\n-\n-    selectAllUrl : function(){\n-        this.iframe.dojo.byId(\"viewingUrl\").select();\n-    },\n-\n-    toggleHSB: function (){\n-        var x = this.iframe.dijit.byId(\"hsbDialog\");\n-        x.show();\n-    },\n-\n-\n-\n-\n-    /***************************************************************************\n-     *\n-     * Filters and Image Drawing\n-     *\n-     **************************************************************************/\n-\n-\n-    // We only add filters once\n-     _addFilter:function(filterName, parameters){\n-        var filter = [filterName, parameters];\n-        var newFilters = new Array();\n-        var isResize = (filterName == \"Resize\");\n-        var hasJpeg= (filterName == \"Jpeg\") ? true : false;\n-        var hasWebP= (filterName == \"WebP\") ? true : false;\n-        var added = false;\n-\n-\n-        if(filterName==\"Resize\"){\n-            this._removeFilter(\"Crop\");\n-        }\n-\n-        for(i=0;i<this.filters.length ;i++){\n-            // if we are adding Jpeg, it always needs to be last in the chain\n-            if(this.filters[i][0] == \"Jpeg\" ){\n-                hasJpeg = true;\n-                continue;\n-            }\n-            else if(this.filters[i][0] == \"WebP\" ){\n-                hasWebP = true;\n-                continue;\n-            }\n-\n-            // if we are resizing, we need to kill any crops\n-            if(isResize && this.filters[i][0] == \"Crop\" ){\n-                continue;\n-            }\n-            // check if it is already added, if so, replace\n-            if(filterName == this.filters[i][0]){\n-                newFilters.push(filter);\n-                added = true;\n-            }\n-            else{\n-                newFilters.push(this.filters[i]);\n-            }\n-        }\n-        if(!added){\n-            newFilters.push(filter);\n-        }\n-        if(hasJpeg && filterName != \"Jpeg\"){\n-            newFilters.push([\"Jpeg\", \"/jpeg_q/\" + this.compressionValue]);\n-        }\n-        if(hasWebP && filterName != \"WebP\"){\n-            newFilters.push([\"WebP\", \"/webp_q/\"+ this.compressionValue]);\n-        }\n-        \n-        this.filters = newFilters;\n-\n-        this.writeFilterList();\n-    },\n-\n-\n-    removeFilterClick:function(filterName){\n-        this._removeFilter(filterName);\n-        \n-        \n-        \n-        this._redrawImage();\n-\n-\n-    },\n-\n-\n-\n-\n-\n-\n-\n-     _removeFilter:function(filterName){\n-        if(this.filters == undefined || this.filters.length ==0){\n-            return;\n-        }\n-        var newArray = new Array();\n-        for(i=0;i<this.filters.length ;i++){\n-            var arr = this.filters[i];\n-            if(filterName != arr[0]){\n-                newArray.push(arr);\n-            }\n-        }\n-\n-        this.filters = newArray;\n-\n-\n-        if((filterName ==\"Resize\")){\n-            this._removeFilter(\"Crop\");\n-            this.iframe.dijit.byId(\"showScaleSlider\").setValue(100);\n-            // set the img dimentions so user can see\n-        }\n-        else if(filterName==\"Flip\"){\n-            this.iframe.dijit.byId(\"flip\").set(\"value\", false, false);\n-        }\n-        else if(filterName==\"Rotate\"){\n-            this.iframe.dijit.byId(\"rotate\").set(\"value\", 0, false);\n-        }\n-        else if(filterName==\"Grayscale\"){\n-            this.iframe.dijit.byId(\"grayscale\").set(\"value\", false, false);\n-        }\n-        else if(filterName==\"Jpeg\" || filterName==\"WebP\"){\n-            this.iframe.dijit.byId(\"compression\").set(\"value\", \"none\", false);\n-        }\n-        else if(filterName==\"Hsb\"){\n-            this.iframe.dojo.byId(\"hueSpan\").innerHTML = 0;\n-            this.iframe.dojo.byId(\"satSpan\").innerHTML = 0;\n-            this.iframe.dojo.byId(\"brightSpan\").innerHTML = 0;\n-            this.iframe.dijit.byId(\"hueSlider\").value = 0;\n-            this.iframe.dijit.byId(\"satSlider\").value = 0;\n-            this.iframe.dijit.byId(\"brightSlider\").value = 0;\n-\n-        }\n-        else if(filterName == \"Crop\"){\n-\n-            var crp = this.iframe.dijit.byId('cropBtn');\n-            dojo.attr(crp, \"disabled\", false);\n-            crp.focus();\n-\n-\n-\n-\n-        }\n-        this.writeFilterList();\n-    },\n-\n-     writeFilterList: function(){\n-        var div = this.iframe.dojo.byId(\"filterListDiv\");\n-        var con = this.iframe.dojo.byId(\"filtersListContainer\");\n-        dojo.empty(con);\n-\n-        for(i=0;i<this.filters.length ;i++){\n-            var x = this.iframe.dojo.create(\"div\", {id:this.filters[i][0] + \"Div\",innerHTML:this.filters[i][0],\n-                onclick:function(){\n-                    var x= this.id.replace(\"Div\", \"\");\n-                    window.top._dotImageEditor.removeFilterClick(x);\n-\n-                }}, con);\n-            dojo.attr(x, \"class\", \"filterListItem\");\n-        }\n-    },\n-\n-\n-    initIframe: function(){\n-        if(!this.iframe || this.iframe==undefined){\n-            this.iframe = dojo.byId(\"imageToolIframe\").contentWindow;\n-            \n-        }\n-        this._redrawImage();\n-    },\n-\n-    changeViewingUrl: function(){\n-        var newUrl = this.iframe.dijit.byId(\"viewingUrl\").getValue();\n-        \n-        this._redrawImage(newUrl);\n-    },\n-\n-\n-    _redrawImage: function (useUrl){\n-        var x = 0;\n-        while(window.top._dotImageEditor.painting){\n-\n-            if(++x > 100000){\n-                return;\n-            }\n-        }\n-\n-\n-        this.painting = true;\n-        // this.iframe.dojo.attr(this.iframe.dijit.byId('showScaleSlider'),\n-        // \"disabled\", true);\n-        this.iframe.dojo.attr(this.iframe.dojo.byId('imageViewPort'), \"class\", \"loader\");\n-        var target = this.iframe.dojo.byId('me');\n-        dojo.fadeOut({node:target}).play();\n-\n-\n-\n-        // if the slider is drawn, lock it\n-\n-        this._cropOff();\n-\n-\n-\n-        // build url args\n-        var f = \"\",args=\"\";\n-        for(i=0;i<this.filters.length ;i++){\n-            f+=this.filters[i][0] ;\n-            if(i < this.filters.length -1){\n-                f+= \",\";\n-            }\n-            args+= this.filters[i][1];\n-        }\n-\n-        var img = new Image();\n-        // set our onload before loading...\n-        img.onload = function(){\n-            var ctx = window.top._dotImageEditor ;\n-            var target = ctx.iframe.dojo.byId('me');\n-            target.src=img.src;\n-\n-            dojo.fadeIn({node:target}).play();\n-\n-            ctx.iframe.dojo.attr(ctx.iframe.dojo.byId(\"imageViewPort\"), \"class\", \"\");\n-            ctx.painting = false;\n-            ctx.inited=false;\n-            ctx.initViewport();\n-            \n-            ctx.iframe.dojo.byId(\"fileSizeDiv\").className=\"\";\n-            var xhr = new XMLHttpRequest();\n-            xhr.open('HEAD', target.src, true);\n-            xhr.onreadystatechange = function(){\n-              if ( xhr.readyState == 4 ) {\n-                if ( xhr.status == 200 ) {\n-                    var oldFileSize = parseInt(ctx.iframe.dojo.byId(\"fileSizeDiv\").innerHTML);\n-                    this.fileSize=parseInt(xhr.getResponseHeader('Content-Length')/1024);\n-                    ctx.iframe.dojo.byId(\"fileSizeDiv\").innerHTML=  this.fileSize + \"k\";\n-                    if(oldFileSize>0 && oldFileSize > this.fileSize){\n-                        ctx.iframe.dojo.byId(\"fileSizeDiv\").className= \"smallerThan\";\n-                    }else if(oldFileSize>0 && oldFileSize < this.fileSize){\n-                        ctx.iframe.dojo.byId(\"fileSizeDiv\").className=\"biggerThan\";\n-                    }\n-                } else {\n-                  alert('error reloading image:' + xhr.status);\n-                }\n-              }\n-            };\n-            xhr.send(null);\n-            \n-        };\n-\n-        \n-        var url = useUrl;\n-        \n-        if(!useUrl){\n-            url= this.baseFilterUrl;\n-            if(this.filters.length > 0){\n-                url+= \"/filter/\" + f + args;\n-            }\n-        }\n-        img.src = url +\"?test=\" + new Date().getTime()\n-        \n-        this.currentUrl = url;\n-        this.iframe.dijit.byId(\"viewingUrl\").set(\"value\", (url.includes(\"://\") ? url : location.protocol +\"//\"+  location.host + url), false);\n-        this.iframe.dojo.byId(\"showLink\").href =  url.includes(\"://\") ? url : location.protocol +\"//\"+  location.host + url;\n-        return;\n-            \n-\n-        img.src = url +\"?test=\" + new Date().getTime()\n-        this.currentUrl = url;\n-        this.iframe.dijit.byId(\"viewingUrl\").set(\"value\",  url, false);\n-        this.iframe.dojo.byId(\"showLink\").href =  url;\n-\n-\n-    },\n-\n-\n-\n-\n-    _resetSavedFiles:function(){\n-        dojo.xhrGet({\n-            url:this.ajaxUrl + \"?action=reset&r=\" +_rand(),\n-            preventCache:true,\n-            load:function(data){\n-\n-\n-            }\n-        });\n-    }\n-\n-\n-});\n\\ No newline at end of file\n+\t\t\tactiveEditor.execCommand(\"mceReplaceContent\", false, asset);", "originalCommit": "2798b3b16e98bd8441285d8c938885d61b7d614c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e3f6fad5e614ffca5b4f1322390e92626457076d", "url": "https://github.com/dotCMS/core/commit/e3f6fad5e614ffca5b4f1322390e92626457076d", "message": "Added enterprise license check", "committedDate": "2020-05-09T07:31:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA3NTM4OA==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r423075388", "bodyText": "Duplicated.", "author": "fmontes", "createdAt": "2020-05-11T14:21:26Z", "path": "dotCMS/src/main/webapp/html/js/dotcms/dijit/image/ImageEditor.js", "diffHunk": "@@ -384,57 +373,79 @@ dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget,{\n \n     saveImage : function(){\n         if(this.binaryFieldId != null && this.binaryFieldId.length > 0){\n-            this.saveBinaryImage();\n+            this.saveBinaryImage(this.activeEditor);\n         }\n         else{\n             this.saveFileImage();\n         }\n     },\n \n \n-\n+_isValidURL: function (url) {", "originalCommit": "e3f6fad5e614ffca5b4f1322390e92626457076d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA3Nzg0Mg==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r423077842", "bodyText": "newUrl = this._isValidURL(url) ? new URL(url).pathname : url", "author": "fmontes", "createdAt": "2020-05-11T14:24:48Z", "path": "dotCMS/src/main/webapp/html/js/dotcms/dijit/image/ImageEditor.js", "diffHunk": "@@ -384,57 +373,79 @@ dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget,{\n \n     saveImage : function(){\n         if(this.binaryFieldId != null && this.binaryFieldId.length > 0){\n-            this.saveBinaryImage();\n+            this.saveBinaryImage(this.activeEditor);\n         }\n         else{\n             this.saveFileImage();\n         }\n     },\n \n \n-\n+_isValidURL: function (url) {\n+\t\tvar elm;\n+\t\tif (!elm) {\n+\t\t\telm = document.createElement(\"input\");\n+\t\t\telm.setAttribute(\"type\", \"url\");\n+\t\t}\n+\t\telm.value = url;\n+\t\treturn elm.validity.valid;\n+\t},\n     /**\n      * This saves an image\n      * that lives on a contentlet\n      *\n      */\n \n-    saveBinaryImage: function(){\n+    saveBinaryImage: function(activeEditor){\n \n         var field=this.binaryFieldId;\n         if(this.fieldContentletId.length>0) {\n             field=this.fieldContentletId;\n         }\n \n-        var url =   this.cleanUrl(this.currentUrl) ;\n-        url = (url.indexOf(\"?\")>-1) ? url + \"&\"  : url + \"?\";\n-        url += (field.length > 0) ? \"&binaryFieldId=\" +field : \"\";\n-        url += \"&_imageToolSaveFile=true\";\n-        \n-        \n-        var xhr = new XMLHttpRequest();\n-        xhr.onload = (self => {\n-            return () => {\n-                if (xhr.status == 200) {\n-                    var dataJson = JSON.parse(xhr.responseText);\n-                    self.tempId=dataJson.id;\n-                    if(window.document.getElementById(self.binaryFieldId + \"ValueField\")){\n-                        window.document.getElementById(self.binaryFieldId + \"ValueField\").value=dataJson.id; \n-                    }\n-                    \n-                } else {\n-                    alert(\"Error! Upload failed\");\n-                }\n-            };\n-        })(this);\n-        xhr.open(\"GET\", url, true);\n-        xhr.send();\n-        \n-\n+        var url = this.cleanUrl(this.currentUrl);\n \n-        this.setThumbnail();\n-        \n+            if (activeEditor) {\n+                var newUrl;\n+                if (this._isValidURL(url)) {\n+                    newUrl = new URL(url).pathname;", "originalCommit": "e3f6fad5e614ffca5b4f1322390e92626457076d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA3ODQxNA==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r423078414", "bodyText": "Maybe extract all this logic to a function.", "author": "fmontes", "createdAt": "2020-05-11T14:25:33Z", "path": "dotCMS/src/main/webapp/html/js/dotcms/dijit/image/ImageEditor.js", "diffHunk": "@@ -384,57 +373,79 @@ dojo.declare(\"dotcms.dijit.image.ImageEditor\", dijit._Widget,{\n \n     saveImage : function(){\n         if(this.binaryFieldId != null && this.binaryFieldId.length > 0){\n-            this.saveBinaryImage();\n+            this.saveBinaryImage(this.activeEditor);\n         }\n         else{\n             this.saveFileImage();\n         }\n     },\n \n \n-\n+_isValidURL: function (url) {\n+\t\tvar elm;\n+\t\tif (!elm) {\n+\t\t\telm = document.createElement(\"input\");\n+\t\t\telm.setAttribute(\"type\", \"url\");\n+\t\t}\n+\t\telm.value = url;\n+\t\treturn elm.validity.valid;\n+\t},\n     /**\n      * This saves an image\n      * that lives on a contentlet\n      *\n      */\n \n-    saveBinaryImage: function(){\n+    saveBinaryImage: function(activeEditor){\n \n         var field=this.binaryFieldId;\n         if(this.fieldContentletId.length>0) {\n             field=this.fieldContentletId;\n         }\n \n-        var url =   this.cleanUrl(this.currentUrl) ;\n-        url = (url.indexOf(\"?\")>-1) ? url + \"&\"  : url + \"?\";\n-        url += (field.length > 0) ? \"&binaryFieldId=\" +field : \"\";\n-        url += \"&_imageToolSaveFile=true\";\n-        \n-        \n-        var xhr = new XMLHttpRequest();\n-        xhr.onload = (self => {\n-            return () => {\n-                if (xhr.status == 200) {\n-                    var dataJson = JSON.parse(xhr.responseText);\n-                    self.tempId=dataJson.id;\n-                    if(window.document.getElementById(self.binaryFieldId + \"ValueField\")){\n-                        window.document.getElementById(self.binaryFieldId + \"ValueField\").value=dataJson.id; \n-                    }\n-                    \n-                } else {\n-                    alert(\"Error! Upload failed\");\n-                }\n-            };\n-        })(this);\n-        xhr.open(\"GET\", url, true);\n-        xhr.send();\n-        \n-\n+        var url = this.cleanUrl(this.currentUrl);\n \n-        this.setThumbnail();\n-        \n+            if (activeEditor) {\n+                var newUrl;\n+                if (this._isValidURL(url)) {\n+                    newUrl = new URL(url).pathname;\n+                } else {\n+                    newUrl = url;\n+            }\n \n+            const asset = `\n+                <img \n+                    src=\"${newUrl}\" \n+                    alt=\"${this.fieldName}\"\n+                    data-field-name=\"${this.fieldName}\"\n+                    data-inode=\"${this.inode}\"\n+                    data-identifier=\"${this.fieldContentletId}\"\n+                    data-saveas=\"${this.saveAsFileName}\"\n+                />`;\n+            activeEditor.execCommand(\"mceReplaceContent\", false, asset);\n+\t\t} else {\n+            url = url.indexOf(\"?\") > -1 ? url + \"&\" : url + \"?\";", "originalCommit": "e3f6fad5e614ffca5b4f1322390e92626457076d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEwOTk3NA==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r423109974", "bodyText": "and maybe some doc for future understanding", "author": "erickgonzalez", "createdAt": "2020-05-11T15:08:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA3ODQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA4NDY5Mg==", "url": "https://github.com/dotCMS/core/pull/18453#discussion_r423084692", "bodyText": "This needs translation.", "author": "fmontes", "createdAt": "2020-05-11T14:34:02Z", "path": "dotCMS/src/main/webapp/html/js/tinymce/js/tinymce/plugins/doteditimage/plugin.min.js", "diffHunk": "@@ -0,0 +1,57 @@\n+dojo.require(\"dotcms.dijit.image.ImageEditor\");\n+tinymce.PluginManager.add(\"doteditimage\", function (editor) {\n+\tconst lastSelectedImage = undefined;\n+\tfunction addButton() {\n+\t\teditor.addButton(\"editimage\", {\n+\t\t\ticon: \"image\",\n+\t\t\ttooltip: \"Edit Image\",", "originalCommit": "e3f6fad5e614ffca5b4f1322390e92626457076d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "11c6edfdd47eb2e05dcaa548a7f30efbe91e223a", "url": "https://github.com/dotCMS/core/commit/11c6edfdd47eb2e05dcaa548a7f30efbe91e223a", "message": "Fixes: Fixes code review suggestions\n\n* String translation\n* if..else to ternary\n* Moved image generation logic to function", "committedDate": "2020-05-11T17:12:14Z", "type": "commit"}, {"oid": "bf617a4c818093dcf50cade8cd472d4ae0368452", "url": "https://github.com/dotCMS/core/commit/bf617a4c818093dcf50cade8cd472d4ae0368452", "message": "Fix: Data coming as ary instead of ReadableStream", "committedDate": "2020-05-11T21:05:09Z", "type": "commit"}, {"oid": "7f6007b7f6dc121fd6206590815c13842dd012cc", "url": "https://github.com/dotCMS/core/commit/7f6007b7f6dc121fd6206590815c13842dd012cc", "message": "Enhancements:\n\n* Removed the tooltip\n* Changed the \"Edit Image\" icon", "committedDate": "2020-05-12T19:37:05Z", "type": "commit"}]}