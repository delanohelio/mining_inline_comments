{"pr_number": 7628, "pr_title": "IGNITE-7609 .NET: FieldsQueryCursor should expose data types too", "pr_createdAt": "2020-04-06T14:12:17Z", "pr_url": "https://github.com/apache/ignite/pull/7628", "timeline": [{"oid": "47caa934d076038fbb2194936a259d8026060842", "url": "https://github.com/apache/ignite/commit/47caa934d076038fbb2194936a259d8026060842", "message": "---", "committedDate": "2020-03-21T13:22:47Z", "type": "commit"}, {"oid": "a651f36176174851ec1c73a78157df97c5b8f222", "url": "https://github.com/apache/ignite/commit/a651f36176174851ec1c73a78157df97c5b8f222", "message": "implement simple types", "committedDate": "2020-04-02T11:39:44Z", "type": "commit"}, {"oid": "fb3d787e4c743a9ce292412e5428b973f9005610", "url": "https://github.com/apache/ignite/commit/fb3d787e4c743a9ce292412e5428b973f9005610", "message": "Merge branch 'master' into IGNITE-7609-fields-query-expose-types", "committedDate": "2020-04-03T19:03:00Z", "type": "commit"}, {"oid": "d3d0901ec52c6d6adffd857638d2c89941fdb3a5", "url": "https://github.com/apache/ignite/commit/d3d0901ec52c6d6adffd857638d2c89941fdb3a5", "message": "implement client", "committedDate": "2020-04-04T21:00:47Z", "type": "commit"}, {"oid": "9ff3619bf60d3ae339d4d637b45ab952bf36292c", "url": "https://github.com/apache/ignite/commit/9ff3619bf60d3ae339d4d637b45ab952bf36292c", "message": "fix typos", "committedDate": "2020-04-06T13:57:52Z", "type": "commit"}, {"oid": "0050efc9b563294062efc1ca9c0ca31fb734f35d", "url": "https://github.com/apache/ignite/commit/0050efc9b563294062efc1ca9c0ca31fb734f35d", "message": "throw not supported", "committedDate": "2020-04-06T14:05:10Z", "type": "commit"}, {"oid": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "url": "https://github.com/apache/ignite/commit/8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "message": "some clean up before review", "committedDate": "2020-04-06T14:11:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEzODYxNg==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404138616", "bodyText": "metadatas -> metas", "author": "ptupitsyn", "createdAt": "2020-04-06T14:32:19Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/cache/query/PlatformFieldsQueryCursor.java", "diffHunk": "@@ -70,6 +84,17 @@ public PlatformFieldsQueryCursor(PlatformContext platformCtx, QueryCursorEx<List\n             for (int i = 0; i < cnt; i++) {\n                 writer.writeString(fq.getFieldName(i));\n             }\n+        } else if (type == OP_GET_FIELDS_META) {\n+            QueryCursorEx<List<?>> cursor = cursor();\n+\n+            List<GridQueryFieldMetadata> metadatas = cursor.fieldsMeta();", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0MDMxNQ==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404140315", "bodyText": "https://cwiki.apache.org/confluence/display/IGNITE/Abbreviation+Rules\nWeird rules, but we follow them.", "author": "ptupitsyn", "createdAt": "2020-04-06T14:34:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEzODYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEzOTEyNw==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404139127", "bodyText": "cursor.fieldsMeta() is not guaranteed to return a non-null result, let's add a check.", "author": "ptupitsyn", "createdAt": "2020-04-06T14:32:51Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/cache/query/PlatformFieldsQueryCursor.java", "diffHunk": "@@ -70,6 +84,17 @@ public PlatformFieldsQueryCursor(PlatformContext platformCtx, QueryCursorEx<List\n             for (int i = 0; i < cnt; i++) {\n                 writer.writeString(fq.getFieldName(i));\n             }\n+        } else if (type == OP_GET_FIELDS_META) {\n+            QueryCursorEx<List<?>> cursor = cursor();\n+\n+            List<GridQueryFieldMetadata> metadatas = cursor.fieldsMeta();\n+\n+            writer.writeInt(metadatas.size());", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEzOTMxMw==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404139313", "bodyText": "metadata -> meta", "author": "ptupitsyn", "createdAt": "2020-04-06T14:33:04Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/cache/query/PlatformFieldsQueryCursor.java", "diffHunk": "@@ -70,6 +84,17 @@ public PlatformFieldsQueryCursor(PlatformContext platformCtx, QueryCursorEx<List\n             for (int i = 0; i < cnt; i++) {\n                 writer.writeString(fq.getFieldName(i));\n             }\n+        } else if (type == OP_GET_FIELDS_META) {\n+            QueryCursorEx<List<?>> cursor = cursor();\n+\n+            List<GridQueryFieldMetadata> metadatas = cursor.fieldsMeta();\n+\n+            writer.writeInt(metadatas.size());\n+\n+            for (GridQueryFieldMetadata metadata: metadatas){", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0MTQzMg==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404141432", "bodyText": "Comment should end with .", "author": "ptupitsyn", "createdAt": "2020-04-06T14:35:51Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Cache/Query/IFieldsQueryCursor.cs", "diffHunk": "@@ -30,5 +31,10 @@ public interface IFieldsQueryCursor : IQueryCursor<IList<object>>\n         /// Gets the field names.\n         /// </summary>\n         IList<string> FieldNames { get; }\n+\n+        /// <summary>\n+        /// Gets fields metadata", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0NDMxMw==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404144313", "bodyText": "portable -> binary.\nP.S. This is an ancient legacy of early Ignite days. Binary was called Portable, then we renamed, but this one line was skipped due to a typo.", "author": "ptupitsyn", "createdAt": "2020-04-06T14:39:36Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Cache/Query/FieldsQueryCursor.cs", "diffHunk": "@@ -33,7 +34,7 @@ internal class FieldsQueryCursor<T> : PlatformQueryQursorBase<T>\n         /// Constructor.\n         /// </summary>\n         /// <param name=\"target\">Target.</param>\n-        /// <param name=\"keepBinary\">Keep poratble flag.</param>\n+        /// <param name=\"keepBinary\">Keep portable flag.</param>", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0NTgzMg==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404145832", "bodyText": "Missing XMLDoc", "author": "ptupitsyn", "createdAt": "2020-04-06T14:41:34Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Cache/Query/FieldsQueryCursor.cs", "diffHunk": "@@ -85,5 +92,24 @@ public IList<string> FieldNames\n                            Target.OutStream(OpGetFieldNames, reader => reader.ReadStringCollection())));\n             }\n         }\n+\n+        public IList<IQueryCursorFieldMetadata> FieldsMetadata ", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0ODA4Nw==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404148087", "bodyText": "Let's just name this Fields", "author": "ptupitsyn", "createdAt": "2020-04-06T14:44:32Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Cache/Query/IFieldsQueryCursor.cs", "diffHunk": "@@ -30,5 +31,10 @@ public interface IFieldsQueryCursor : IQueryCursor<IList<object>>\n         /// Gets the field names.\n         /// </summary>\n         IList<string> FieldNames { get; }\n+\n+        /// <summary>\n+        /// Gets fields metadata\n+        /// </summary>\n+        IList<IQueryCursorFieldMetadata> FieldsMetadata { get; }", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0ODgwOQ==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404148809", "bodyText": "In line with the above: IQueryCursorField", "author": "ptupitsyn", "createdAt": "2020-04-06T14:45:27Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Cache/Query/IQueryCursorFieldMetadata.cs", "diffHunk": "@@ -0,0 +1,43 @@\n+\ufeff/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Cache.Query\n+{\n+    using System;\n+\n+    /// <summary>\n+    /// Query field descriptor. This descriptor is used to provide metadata\n+    /// about fields returned in query result.\n+    /// </summary>\n+    public interface IQueryCursorFieldMetadata", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1MTA2MA==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404151060", "bodyText": "Gets the field name.\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1623.md", "author": "ptupitsyn", "createdAt": "2020-04-06T14:48:18Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Cache/Query/IQueryCursorFieldMetadata.cs", "diffHunk": "@@ -0,0 +1,43 @@\n+\ufeff/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Cache.Query\n+{\n+    using System;\n+\n+    /// <summary>\n+    /// Query field descriptor. This descriptor is used to provide metadata\n+    /// about fields returned in query result.\n+    /// </summary>\n+    public interface IQueryCursorFieldMetadata\n+    {\n+        /// <summary>\n+        /// Field name", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1MTUyNA==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404151524", "bodyText": "Gets the name of Java type for this field.", "author": "ptupitsyn", "createdAt": "2020-04-06T14:48:50Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Cache/Query/IQueryCursorFieldMetadata.cs", "diffHunk": "@@ -0,0 +1,43 @@\n+\ufeff/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Cache.Query\n+{\n+    using System;\n+\n+    /// <summary>\n+    /// Query field descriptor. This descriptor is used to provide metadata\n+    /// about fields returned in query result.\n+    /// </summary>\n+    public interface IQueryCursorFieldMetadata\n+    {\n+        /// <summary>\n+        /// Field name\n+        /// </summary>\n+        string Name { get; }\n+\n+        /// <summary>\n+        /// Name of java type to which this field belongs", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1MTY3Mw==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404151673", "bodyText": "Gets the field type.", "author": "ptupitsyn", "createdAt": "2020-04-06T14:49:01Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Cache/Query/IQueryCursorFieldMetadata.cs", "diffHunk": "@@ -0,0 +1,43 @@\n+\ufeff/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Cache.Query\n+{\n+    using System;\n+\n+    /// <summary>\n+    /// Query field descriptor. This descriptor is used to provide metadata\n+    /// about fields returned in query result.\n+    /// </summary>\n+    public interface IQueryCursorFieldMetadata\n+    {\n+        /// <summary>\n+        /// Field name\n+        /// </summary>\n+        string Name { get; }\n+\n+        /// <summary>\n+        /// Name of java type to which this field belongs\n+        /// </summary>\n+        string JavaTypeName { get; }\n+\n+        /// <summary>\n+        /// Type to which this field belongs", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1MjY3Ng==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404152676", "bodyText": "Please remove Impl suffix. It is present on some types because of Java naming legacy, but it is against Microsoft standards, so we try to avoid this.", "author": "ptupitsyn", "createdAt": "2020-04-06T14:50:20Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Cache/Query/QueryCursorFieldMetadataImpl.cs", "diffHunk": "@@ -0,0 +1,63 @@\n+\ufeff/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Impl.Cache.Query\n+{\n+    using System;\n+    using Apache.Ignite.Core.Binary;\n+    using Apache.Ignite.Core.Cache.Query;\n+    using Apache.Ignite.Core.Impl.Binary;\n+\n+    /// <summary>\n+    /// Query cursor field metadata implementation.\n+    /// </summary>\n+    public class QueryCursorFieldMetadataImpl : IQueryCursorFieldMetadata", "originalCommit": "8e0e34ab7f6f6dbb68c9d38bfc253e309d3935f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1MzAzOA==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r404153038", "bodyText": "Important: make this class internal", "author": "ptupitsyn", "createdAt": "2020-04-06T14:50:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1MjY3Ng=="}], "type": "inlineReview"}, {"oid": "dedbc8478faab64890751515e677758764250bb7", "url": "https://github.com/apache/ignite/commit/dedbc8478faab64890751515e677758764250bb7", "message": "fixes after review", "committedDate": "2020-04-06T21:03:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MjQwNw==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r405682407", "bodyText": "Something happened with comments blocks here and below. Please revert unrelated changes.", "author": "ptupitsyn", "createdAt": "2020-04-08T17:11:32Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/cache/query/PlatformFieldsQueryCursor.java", "diffHunk": "@@ -22,29 +22,40 @@\n import org.apache.ignite.internal.binary.BinaryRawWriterEx;\n import org.apache.ignite.internal.processors.cache.query.QueryCursorEx;\n import org.apache.ignite.internal.processors.platform.PlatformContext;\n+import org.apache.ignite.internal.processors.query.GridQueryFieldMetadata;\n \n import java.util.List;\n \n /**\n  * Interop cursor for fields query.\n  */\n public class PlatformFieldsQueryCursor extends PlatformAbstractQueryCursor<List<?>> {\n-    /** Gets field names. */\n+    /**", "originalCommit": "dedbc8478faab64890751515e677758764250bb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc3NjUzNw==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r405776537", "bodyText": "Auto-formatting by IDE.", "author": "gurustron", "createdAt": "2020-04-08T19:56:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MjQwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MzEzOQ==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r405683139", "bodyText": "Unused import?", "author": "ptupitsyn", "createdAt": "2020-04-08T17:12:46Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Cache/Query/IFieldsQueryCursor.cs", "diffHunk": "@@ -19,6 +19,7 @@ namespace Apache.Ignite.Core.Cache.Query\n {\n     using System.Collections.Generic;\n     using System.Diagnostics.CodeAnalysis;\n+    using Apache.Ignite.Core.Impl.Cache.Query;", "originalCommit": "dedbc8478faab64890751515e677758764250bb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NzUwMg==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r405687502", "bodyText": "ToList causes unnecessary allocations here. My proposal:\n\nRemove ?? above, get the result of ReadCollectionRaw as is\n_fieldsMeta = meta != null ? meta.AsReadOnly() : new ReadOnlyCollection()", "author": "ptupitsyn", "createdAt": "2020-04-08T17:19:57Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Cache/Query/FieldsQueryCursor.cs", "diffHunk": "@@ -85,5 +92,26 @@ public IList<string> FieldNames\n                            Target.OutStream(OpGetFieldNames, reader => reader.ReadStringCollection())));\n             }\n         }\n+\n+        /** <inheritdoc /> */\n+        public IList<IQueryCursorField> Fields \n+        {\n+            get\n+            {\n+                if (_fieldsMeta == null)\n+                {\n+                    var metadata = Target.OutStream(\n+                        OpGetFieldsMeta,\n+                        reader => reader.ReadCollectionRaw(stream =>\n+                            new QueryCursorField(stream) as IQueryCursorField))\n+                        ?? new List<IQueryCursorField>();\n+\n+                    _fieldsMeta = new ReadOnlyCollection<IQueryCursorField>(\n+                        metadata as List<IQueryCursorField> ?? metadata.ToList());", "originalCommit": "dedbc8478faab64890751515e677758764250bb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTI0NA==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r405729244", "bodyText": "As far as i understand .AsReadOnly() is not an option here cause we have IList in contract and if the underlying collection is mutable it will allow mutations.", "author": "gurustron", "createdAt": "2020-04-08T18:30:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NzUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc3NjI2Nw==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r405776267", "bodyText": "Changed the underlying method to return IList since it is already returning one", "author": "gurustron", "createdAt": "2020-04-08T19:55:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NzUwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4ODg3MQ==", "url": "https://github.com/apache/ignite/pull/7628#discussion_r405688871", "bodyText": "Can we move this check to JavaTypes class?", "author": "ptupitsyn", "createdAt": "2020-04-08T17:22:13Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Cache/Query/QueryCursorField.cs", "diffHunk": "@@ -0,0 +1,63 @@\n+\ufeff/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Impl.Cache.Query\n+{\n+    using System;\n+    using Apache.Ignite.Core.Binary;\n+    using Apache.Ignite.Core.Cache.Query;\n+    using Apache.Ignite.Core.Impl.Binary;\n+\n+    /// <summary>\n+    /// Query cursor field implementation.\n+    /// </summary>\n+    internal class QueryCursorField : IQueryCursorField\n+    {\n+        /// <summary>\n+        /// Initializes a new instance of the <see cref=\"QueryCursorField\"/> class.\n+        /// </summary>\n+        /// <param name=\"reader\">The reader.</param>\n+        public QueryCursorField(IBinaryRawReader reader)\n+        {\n+            Name = reader.ReadString();\n+            JavaTypeName = reader.ReadString();\n+            Type = GetDotNetType(JavaTypeName);\n+        }\n+\n+        /** <inheritdoc /> */\n+        public string Name { get; private set; }\n+\n+        /** <inheritdoc /> */\n+        public string JavaTypeName { get; private set; }\n+\n+        /** <inheritdoc /> */\n+        public Type Type { get; private set; }\n+\n+        /// <summary>\n+        ///  Gets .NET type that corresponds to specified Java type name.\n+        /// </summary>\n+        /// <param name=\"javaTypeName\">Name of the java type.</param>\n+        /// <returns></returns>\n+        private static Type GetDotNetType(string javaTypeName)\n+        {\n+            var dotNetType = JavaTypes.GetDotNetType(javaTypeName);\n+            if (dotNetType == null && javaTypeName == \"java.lang.Object\") dotNetType = typeof(object);", "originalCommit": "dedbc8478faab64890751515e677758764250bb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae0b12fb1547c419bd5ba001452c99913126c0fb", "url": "https://github.com/apache/ignite/commit/ae0b12fb1547c419bd5ba001452c99913126c0fb", "message": "fixes after review", "committedDate": "2020-04-08T19:53:49Z", "type": "commit"}]}