{"pr_number": 8249, "pr_title": "IGNITE-13426 Adds command to print system view content.", "pr_createdAt": "2020-09-15T18:37:31Z", "pr_url": "https://github.com/apache/ignite/pull/8249", "timeline": [{"oid": "7b2dd3af4cb628fe4689cc711f291e38e7f3299b", "url": "https://github.com/apache/ignite/commit/7b2dd3af4cb628fe4689cc711f291e38e7f3299b", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-15T18:50:48Z", "type": "forcePushed"}, {"oid": "89904383673a74ea4530389af1e6fb64771f9e7e", "url": "https://github.com/apache/ignite/commit/89904383673a74ea4530389af1e6fb64771f9e7e", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-15T18:54:10Z", "type": "forcePushed"}, {"oid": "60a107966585837f12d589e3461f5279c41800e1", "url": "https://github.com/apache/ignite/commit/60a107966585837f12d589e3461f5279c41800e1", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-16T18:41:25Z", "type": "forcePushed"}, {"oid": "20e0a675324a3631f38740758a74629fd9b9730e", "url": "https://github.com/apache/ignite/commit/20e0a675324a3631f38740758a74629fd9b9730e", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-16T18:56:12Z", "type": "forcePushed"}, {"oid": "618d74087cae39c85201f668643821873ba592a2", "url": "https://github.com/apache/ignite/commit/618d74087cae39c85201f668643821873ba592a2", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-16T19:14:30Z", "type": "forcePushed"}, {"oid": "5bf65f64019ec764082698b9dc570788815b480c", "url": "https://github.com/apache/ignite/commit/5bf65f64019ec764082698b9dc570788815b480c", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-16T21:11:27Z", "type": "forcePushed"}, {"oid": "069573cb8ce5e57560fac2033aa4c636945a2c7f", "url": "https://github.com/apache/ignite/commit/069573cb8ce5e57560fac2033aa4c636945a2c7f", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-16T23:40:46Z", "type": "forcePushed"}, {"oid": "d89de4195b10460bf7c5e607be34b65acb0ba7c1", "url": "https://github.com/apache/ignite/commit/d89de4195b10460bf7c5e607be34b65acb0ba7c1", "message": "IGNITE-13426 Adds SimpleAttributeType.", "committedDate": "2020-09-17T10:38:03Z", "type": "forcePushed"}, {"oid": "36cf6e2131674438e80960d1a104cbf9a0e63392", "url": "https://github.com/apache/ignite/commit/36cf6e2131674438e80960d1a104cbf9a0e63392", "message": "IGNITE-13426 Adds SimpleAttributeType.", "committedDate": "2020-09-17T10:40:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNjk0Nw==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490236947", "bodyText": "I suggest removing this newline", "author": "xtern", "createdAt": "2020-09-17T13:19:15Z", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+", "originalCommit": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjU0NQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272545", "bodyText": "Done.", "author": "ololo3000", "createdAt": "2020-09-17T14:03:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNjk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzIxNA==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490237214", "bodyText": "? extends List<?> can be replaced with List<?>", "author": "xtern", "createdAt": "2020-09-17T13:19:36Z", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();", "originalCommit": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjU4Nw==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272587", "bodyText": "Done.", "author": "ololo3000", "createdAt": "2020-09-17T14:03:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzg5OA==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490237898", "bodyText": "I suggest removing this newline", "author": "xtern", "createdAt": "2020-09-17T13:20:28Z", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);\n+\n+                colLenIter.set(Math.max(colLenIter.next(), colVal.length()));\n+\n+                return colVal;\n+            }).collect(Collectors.toList()));\n+        });\n+\n+        printRow(colTitles, nCopies(colTitles.size(), STRING), colLenghts, log);\n+\n+        rows.forEach(row -> printRow(row, taskRes.systemViewAttributeTypes(), colLenghts, log));\n+    }\n+\n+    /**\n+     * Prints row content with respect to column types and lengths.\n+     *\n+     * @param row Row which content should be printed.\n+     * @param types Column types in sequential order for decent row formatting.\n+     * @param lengths Column lengths in sequential order for decent row formatting.\n+     * @param log Logger.\n+     */\n+    private void printRow(\n+        Collection<String> row,\n+        Collection<SimpleAttributeType> types,\n+        Collection<Integer> lengths,\n+        Logger log\n+    ) {\n+        Iterator<SimpleAttributeType> typeIter = types.iterator();\n+", "originalCommit": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjY3Mw==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272673", "bodyText": "Done.", "author": "ololo3000", "createdAt": "2020-09-17T14:03:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNzg5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzODc4OQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490238789", "bodyText": "we can add an assertion here to ensure code reader that the sizes of collections are equal", "author": "xtern", "createdAt": "2020-09-17T13:21:37Z", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+\n+        List<? extends List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);\n+\n+                colLenIter.set(Math.max(colLenIter.next(), colVal.length()));\n+\n+                return colVal;\n+            }).collect(Collectors.toList()));\n+        });\n+\n+        printRow(colTitles, nCopies(colTitles.size(), STRING), colLenghts, log);\n+\n+        rows.forEach(row -> printRow(row, taskRes.systemViewAttributeTypes(), colLenghts, log));\n+    }\n+\n+    /**\n+     * Prints row content with respect to column types and lengths.\n+     *\n+     * @param row Row which content should be printed.\n+     * @param types Column types in sequential order for decent row formatting.\n+     * @param lengths Column lengths in sequential order for decent row formatting.\n+     * @param log Logger.\n+     */\n+    private void printRow(\n+        Collection<String> row,\n+        Collection<SimpleAttributeType> types,\n+        Collection<Integer> lengths,\n+        Logger log\n+    ) {", "originalCommit": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MDc3MQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490240771", "bodyText": "Unused import", "author": "xtern", "createdAt": "2020-09-17T13:23:58Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;", "originalCommit": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjcyMQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272721", "bodyText": "Done.", "author": "ololo3000", "createdAt": "2020-09-17T14:03:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MDc3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzM1NQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490243355", "bodyText": "Seems that it is better to put this code into a separate method.\nIn this case, code here will look something like\nSystemView<?> targetSysView = findSysView(arg.systemViewName());\n\n            if (targetSysView == null)\n                return null;\n\nfindSysView may look something like\nprivate SystemView<?> findSysView(String name) {\n            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n\n            SystemView<?> targetSysView = sysViewMgr.view(name);\n\n            if (targetSysView != null)\n                return targetSysView;\n\n            // In this case we assume that the requested system view name is in SQL format.\n            for (SystemView<?> sysView : sysViewMgr) {\n                if (toSqlName(sysView.name()).equals(name))\n                    return sysView;\n            }\n\n            return null;\n        }", "author": "xtern", "createdAt": "2020-09-17T13:26:50Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.internal.managers.systemview.GridSystemViewManager;\n+import org.apache.ignite.internal.processors.task.GridInternal;\n+import org.apache.ignite.internal.processors.task.GridVisorManagementTask;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.VisorJob;\n+import org.apache.ignite.internal.visor.VisorOneNodeTask;\n+import org.apache.ignite.lang.IgniteUuid;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n+import org.jetbrains.annotations.Nullable;\n+\n+import static org.apache.ignite.internal.processors.metric.impl.MetricUtils.toSqlName;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Reperesents visor task for obtaining system view content.\n+ */\n+@GridInternal\n+@GridVisorManagementTask\n+public class VisorSystemViewTask extends VisorOneNodeTask<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** {@inheritDoc} */\n+    @Override protected VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> job(VisorSystemViewTaskArg arg) {\n+        return new VisorSystemViewJob(arg, false);\n+    }\n+\n+    /**\n+     *\n+     */\n+    private static class VisorSystemViewJob extends VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+        /** */\n+        private static final long serialVersionUID = 0L;\n+\n+        /**\n+         * Create job with specified argument.\n+         *\n+         * @param arg Job argument.\n+         * @param debug Flag indicating whether debug information should be printed into node log.\n+         */\n+        protected VisorSystemViewJob(@Nullable VisorSystemViewTaskArg arg, boolean debug) {\n+            super(arg, debug);\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Override protected VisorSystemViewTaskResult run(@Nullable VisorSystemViewTaskArg arg) throws IgniteException {\n+            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n+\n+            String targetSysViewName = arg.systemViewName();\n+\n+            SystemView<?> targetSysView = sysViewMgr.view(targetSysViewName);\n+\n+            if (targetSysView == null) { // In this case we assume that the requested system view name is in SQL format.\n+                for (SystemView<?> sysView : sysViewMgr) {\n+                    if (toSqlName(sysView.name()).equals(targetSysViewName)) {\n+                        targetSysView = sysView;\n+\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (targetSysView == null)\n+                return null;", "originalCommit": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3Mjc3Mw==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272773", "bodyText": "Done.", "author": "ololo3000", "createdAt": "2020-09-17T14:03:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NTgyOQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490245829", "bodyText": "I suggest removing this newline", "author": "xtern", "createdAt": "2020-09-17T13:29:30Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTask.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.internal.managers.systemview.GridSystemViewManager;\n+import org.apache.ignite.internal.processors.task.GridInternal;\n+import org.apache.ignite.internal.processors.task.GridVisorManagementTask;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.VisorJob;\n+import org.apache.ignite.internal.visor.VisorOneNodeTask;\n+import org.apache.ignite.lang.IgniteUuid;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker;\n+import org.apache.ignite.spi.systemview.view.SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n+import org.jetbrains.annotations.Nullable;\n+\n+import static org.apache.ignite.internal.processors.metric.impl.MetricUtils.toSqlName;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Reperesents visor task for obtaining system view content.\n+ */\n+@GridInternal\n+@GridVisorManagementTask\n+public class VisorSystemViewTask extends VisorOneNodeTask<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** {@inheritDoc} */\n+    @Override protected VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> job(VisorSystemViewTaskArg arg) {\n+        return new VisorSystemViewJob(arg, false);\n+    }\n+\n+    /**\n+     *\n+     */\n+    private static class VisorSystemViewJob extends VisorJob<VisorSystemViewTaskArg, VisorSystemViewTaskResult> {\n+        /** */\n+        private static final long serialVersionUID = 0L;\n+\n+        /**\n+         * Create job with specified argument.\n+         *\n+         * @param arg Job argument.\n+         * @param debug Flag indicating whether debug information should be printed into node log.\n+         */\n+        protected VisorSystemViewJob(@Nullable VisorSystemViewTaskArg arg, boolean debug) {\n+            super(arg, debug);\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Override protected VisorSystemViewTaskResult run(@Nullable VisorSystemViewTaskArg arg) throws IgniteException {\n+            GridSystemViewManager sysViewMgr = ignite.context().systemView();\n+\n+            String targetSysViewName = arg.systemViewName();\n+\n+            SystemView<?> targetSysView = sysViewMgr.view(targetSysViewName);\n+\n+            if (targetSysView == null) { // In this case we assume that the requested system view name is in SQL format.\n+                for (SystemView<?> sysView : sysViewMgr) {\n+                    if (toSqlName(sysView.name()).equals(targetSysViewName)) {\n+                        targetSysView = sysView;\n+\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (targetSysView == null)\n+                return null;\n+\n+            List<String> attrNames = new ArrayList<>();\n+", "originalCommit": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjgxMQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272811", "bodyText": "Done.", "author": "ololo3000", "createdAt": "2020-09-17T14:04:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NTgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1NzcxMg==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490257712", "bodyText": "List<? extends List<?>> can be replaced with List<List<?>>", "author": "xtern", "createdAt": "2020-09-17T13:44:49Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<? extends List<?>> rows;", "originalCommit": "cddbdef6ca7d4fbf552602ca95ca7ae5dcbe7d9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3Mjg2MQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r490272861", "bodyText": "Done.", "author": "ololo3000", "createdAt": "2020-09-17T14:04:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1NzcxMg=="}], "type": "inlineReview"}, {"oid": "96cb1cc12634b29fa15f1e25411b14e4ec6777d1", "url": "https://github.com/apache/ignite/commit/96cb1cc12634b29fa15f1e25411b14e4ec6777d1", "message": "IGNITE-13426 Adds command to print system view content.", "committedDate": "2020-09-19T21:34:28Z", "type": "commit"}, {"oid": "e249d065fb1d428609210573ad02c0835019345e", "url": "https://github.com/apache/ignite/commit/e249d065fb1d428609210573ad02c0835019345e", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-19T21:34:28Z", "type": "commit"}, {"oid": "434af82bc9b4fe81f8b0487526f661dd191f15ef", "url": "https://github.com/apache/ignite/commit/434af82bc9b4fe81f8b0487526f661dd191f15ef", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-19T21:34:28Z", "type": "commit"}, {"oid": "84c7c9b37f57e92ea9d4da253b310716b8addbb4", "url": "https://github.com/apache/ignite/commit/84c7c9b37f57e92ea9d4da253b310716b8addbb4", "message": "IGNITE-13426 Fixes parsing tests.", "committedDate": "2020-09-19T21:34:28Z", "type": "commit"}, {"oid": "479b57db8b84c33bc5c96233369ca455e5f99547", "url": "https://github.com/apache/ignite/commit/479b57db8b84c33bc5c96233369ca455e5f99547", "message": "IGNITE-13426 Refactors system view command tests.", "committedDate": "2020-09-19T21:34:28Z", "type": "commit"}, {"oid": "1560e730749497ed94d3e703a89e2bb6e7a33482", "url": "https://github.com/apache/ignite/commit/1560e730749497ed94d3e703a89e2bb6e7a33482", "message": "IGNITE-13426 Refactors system view command tests.", "committedDate": "2020-09-19T21:34:28Z", "type": "commit"}, {"oid": "c4029bcb89b10b70236ddce66082269be491d93b", "url": "https://github.com/apache/ignite/commit/c4029bcb89b10b70236ddce66082269be491d93b", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-19T21:34:29Z", "type": "commit"}, {"oid": "0805cebde44da95ac092774302912097994ac0b5", "url": "https://github.com/apache/ignite/commit/0805cebde44da95ac092774302912097994ac0b5", "message": "IGNITE-13426 Adds SimpleAttributeType.", "committedDate": "2020-09-19T21:34:29Z", "type": "commit"}, {"oid": "63370bee32b4e886bcd73ac0e5df180794d77e14", "url": "https://github.com/apache/ignite/commit/63370bee32b4e886bcd73ac0e5df180794d77e14", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-19T21:34:29Z", "type": "commit"}, {"oid": "b3b28fa243b5174f828fb666392f9f372d956165", "url": "https://github.com/apache/ignite/commit/b3b28fa243b5174f828fb666392f9f372d956165", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-19T21:34:29Z", "type": "commit"}, {"oid": "f8a72fe97a2cf643622b85c81b109fe91346cfa5", "url": "https://github.com/apache/ignite/commit/f8a72fe97a2cf643622b85c81b109fe91346cfa5", "message": "IGNITE-13426 Refactors system view command tests.", "committedDate": "2020-09-19T21:37:45Z", "type": "commit"}, {"oid": "220022b11ee95e63cb6306ae127d4e1f046417c8", "url": "https://github.com/apache/ignite/commit/220022b11ee95e63cb6306ae127d4e1f046417c8", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-19T21:37:45Z", "type": "commit"}, {"oid": "220022b11ee95e63cb6306ae127d4e1f046417c8", "url": "https://github.com/apache/ignite/commit/220022b11ee95e63cb6306ae127d4e1f046417c8", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-19T21:37:45Z", "type": "forcePushed"}, {"oid": "a97a5ffc03f59b0ea5c95bc5da39daf52e076eb1", "url": "https://github.com/apache/ignite/commit/a97a5ffc03f59b0ea5c95bc5da39daf52e076eb1", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-19T21:53:48Z", "type": "forcePushed"}, {"oid": "c3394aed0beea358dda91bfc55b99102bf6f1c13", "url": "https://github.com/apache/ignite/commit/c3394aed0beea358dda91bfc55b99102bf6f1c13", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-20T08:43:11Z", "type": "forcePushed"}, {"oid": "48ceade427d2579882f2b988c2f258dc8ea824d5", "url": "https://github.com/apache/ignite/commit/48ceade427d2579882f2b988c2f258dc8ea824d5", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-20T19:00:41Z", "type": "forcePushed"}, {"oid": "1b021c0d281edefad2c7465ae16a30b3f9c09d90", "url": "https://github.com/apache/ignite/commit/1b021c0d281edefad2c7465ae16a30b3f9c09d90", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-20T19:05:35Z", "type": "forcePushed"}, {"oid": "54893ba5882eb0630d98cae2f41332d9f759db74", "url": "https://github.com/apache/ignite/commit/54893ba5882eb0630d98cae2f41332d9f759db74", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-20T19:13:32Z", "type": "commit"}, {"oid": "54893ba5882eb0630d98cae2f41332d9f759db74", "url": "https://github.com/apache/ignite/commit/54893ba5882eb0630d98cae2f41332d9f759db74", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-20T19:13:32Z", "type": "forcePushed"}, {"oid": "17c848edebcf760083689cf0868e837d55cbd219", "url": "https://github.com/apache/ignite/commit/17c848edebcf760083689cf0868e837d55cbd219", "message": "IGNITE-13426 Fixes minor issues.", "committedDate": "2020-09-21T09:35:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4OTgxNw==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492589817", "bodyText": "nit: @param types missed in javadoc.", "author": "nizhikov", "createdAt": "2020-09-22T09:17:42Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.", "originalCommit": "17c848edebcf760083689cf0868e837d55cbd219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5MDMxMA==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492590310", "bodyText": "Let's make this and similar comment one liner.", "author": "nizhikov", "createdAt": "2020-09-22T09:18:33Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.\n+     */\n+    public VisorSystemViewTaskResult(List<String> attrs, List<SimpleAttributeType> types, List<List<?>> rows) {\n+        this.attrs = attrs;\n+        this.types = types;\n+        this.rows = rows;\n+    }\n+\n+    /**\n+     * @return Names of the system view attributes.", "originalCommit": "17c848edebcf760083689cf0868e837d55cbd219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5MDQwOQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492590409", "bodyText": "Please, make it one line comment.", "author": "nizhikov", "createdAt": "2020-09-22T09:18:44Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.\n+     */\n+    public VisorSystemViewTaskResult(List<String> attrs, List<SimpleAttributeType> types, List<List<?>> rows) {\n+        this.attrs = attrs;\n+        this.types = types;\n+        this.rows = rows;\n+    }\n+\n+    /**\n+     * @return Names of the system view attributes.\n+     */\n+    public List<String> systemViewAttributes() {\n+        return attrs;\n+    }\n+\n+    /**\n+     * @return Attribute values for each row of the system view.\n+     */\n+    public List<List<?>> systemViewContent() {\n+        return rows;\n+    }\n+\n+    /**\n+     * @return Types of the system view attributes.\n+     */\n+    public List<SimpleAttributeType> systemViewAttributeTypes() {\n+        return types;\n+    }\n+\n+    /**\n+     * {@inheritDoc}", "originalCommit": "17c848edebcf760083689cf0868e837d55cbd219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5OTIyMg==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492599222", "bodyText": "Let's make method naming consistent with the variables names.\nattrs -> attributes\nrows -> rows\ntypes -> types", "author": "nizhikov", "createdAt": "2020-09-22T09:33:15Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/visor/systemview/VisorSystemViewTaskResult.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.visor.systemview;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.ignite.internal.dto.IgniteDataTransferObject;\n+import org.apache.ignite.internal.util.typedef.internal.U;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+\n+/**\n+ * Reperesents result of {@link VisorSystemViewTask}.\n+ */\n+public class VisorSystemViewTaskResult extends IgniteDataTransferObject {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Attribute values for each row of the system view. */\n+    private List<List<?>> rows;\n+\n+    /** Names of the system view attributes. */\n+    private List<String> attrs;\n+\n+    /** Types of the systen view attributes. */\n+    List<SimpleAttributeType> types;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public VisorSystemViewTaskResult() {\n+        // No-op.\n+    }\n+\n+    /**\n+     * @param attrs Names of system view attributes.\n+     * @param rows Attribute values for each row of the system view.\n+     */\n+    public VisorSystemViewTaskResult(List<String> attrs, List<SimpleAttributeType> types, List<List<?>> rows) {\n+        this.attrs = attrs;\n+        this.types = types;\n+        this.rows = rows;\n+    }\n+\n+    /**\n+     * @return Names of the system view attributes.\n+     */\n+    public List<String> systemViewAttributes() {", "originalCommit": "17c848edebcf760083689cf0868e837d55cbd219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDY4OQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492600689", "bodyText": "Let's rename this to titles", "author": "nizhikov", "createdAt": "2020-09-22T09:35:53Z", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();", "originalCommit": "17c848edebcf760083689cf0868e837d55cbd219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDgwNQ==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492600805", "bodyText": "Let's rename this to viewRows", "author": "nizhikov", "createdAt": "2020-09-22T09:36:04Z", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+        List<List<?>> sysViewRows = taskRes.systemViewContent();", "originalCommit": "17c848edebcf760083689cf0868e837d55cbd219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMTE2NA==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492601164", "bodyText": "Let's rename this to colSzs", "author": "nizhikov", "createdAt": "2020-09-22T09:36:33Z", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+        List<List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());", "originalCommit": "17c848edebcf760083689cf0868e837d55cbd219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMTI3NA==", "url": "https://github.com/apache/ignite/pull/8249#discussion_r492601274", "bodyText": "Let's rename this to val", "author": "nizhikov", "createdAt": "2020-09-22T09:36:44Z", "path": "modules/control-utility/src/main/java/org/apache/ignite/internal/commandline/systemview/SystemViewCommand.java", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.commandline.systemview;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import org.apache.ignite.internal.client.GridClient;\n+import org.apache.ignite.internal.client.GridClientConfiguration;\n+import org.apache.ignite.internal.commandline.Command;\n+import org.apache.ignite.internal.commandline.CommandArgIterator;\n+import org.apache.ignite.internal.commandline.CommandLogger;\n+import org.apache.ignite.internal.commandline.argument.CommandArgUtils;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskArg;\n+import org.apache.ignite.internal.visor.systemview.VisorSystemViewTaskResult;\n+import org.apache.ignite.spi.systemview.view.SystemView;\n+\n+import static java.util.Collections.nCopies;\n+import static org.apache.ignite.internal.commandline.CommandList.SYSTEM_VIEW;\n+import static org.apache.ignite.internal.commandline.CommandLogger.optional;\n+import static org.apache.ignite.internal.commandline.TaskExecutor.executeTaskByNameOnNode;\n+import static org.apache.ignite.internal.commandline.systemview.SystemViewCommandArg.NODE_ID;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.DATE;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.NUMBER;\n+import static org.apache.ignite.internal.visor.systemview.VisorSystemViewTask.SimpleAttributeType.STRING;\n+\n+/**\n+ * Represents command for {@link SystemView} content printing.\n+ */\n+public class SystemViewCommand implements Command<Object> {\n+    /** Column separator. */\n+    public static final String COLUMN_SEPARATOR = \"    \";\n+\n+    /**\n+     * Argument for the system view content obtainig task.\n+     *\n+     * @see VisorSystemViewTask\n+     */\n+    private VisorSystemViewTaskArg taskArg;\n+\n+    /** ID of the node to get the system view content from. */\n+    private UUID nodeId;\n+\n+    /** {@inheritDoc} */\n+    @Override public Object execute(GridClientConfiguration clientCfg, Logger log) throws Exception {\n+        try {\n+            VisorSystemViewTaskResult res;\n+\n+            try (GridClient client = Command.startClient(clientCfg)) {\n+                res = executeTaskByNameOnNode(\n+                    client,\n+                    VisorSystemViewTask.class.getName(),\n+                    taskArg,\n+                    nodeId,\n+                    clientCfg\n+                );\n+            }\n+\n+            if (res != null)\n+                printSystemViewContent(res, log);\n+            else\n+                log.info(\"No system view with specified name was found [name=\" + taskArg.systemViewName() + \"]\");\n+\n+            return res;\n+        }\n+        catch (Throwable e) {\n+            log.severe(\"Failed to perform operation.\");\n+            log.severe(CommandLogger.errorMessage(e));\n+\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * Prints system view content obtained via {@link VisorSystemViewTask} execution.\n+     *\n+     * @param taskRes Result of {@link VisorSystemViewTask} execution.\n+     * @param log Logger.\n+     */\n+    private void printSystemViewContent(VisorSystemViewTaskResult taskRes, Logger log) {\n+        List<String> colTitles = taskRes.systemViewAttributes();\n+        List<List<?>> sysViewRows = taskRes.systemViewContent();\n+\n+        List<Integer> colLenghts = colTitles.stream().map(String::length).collect(Collectors.toList());\n+\n+        List<List<String>> rows = new ArrayList<>(sysViewRows.size());\n+\n+        sysViewRows.forEach(sysViewRow -> {\n+            ListIterator<Integer> colLenIter = colLenghts.listIterator();\n+\n+            rows.add(sysViewRow.stream().map(attr -> {\n+                String colVal = String.valueOf(attr);", "originalCommit": "17c848edebcf760083689cf0868e837d55cbd219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "599b069f92dd5757cdd7eedbdcc48a8679bd3c8d", "url": "https://github.com/apache/ignite/commit/599b069f92dd5757cdd7eedbdcc48a8679bd3c8d", "message": "IGNITE-13426 Fixes code style issues.", "committedDate": "2020-09-22T10:47:48Z", "type": "commit"}, {"oid": "c86c7c375414f1c8354839d8ecdc5e248d9b18be", "url": "https://github.com/apache/ignite/commit/c86c7c375414f1c8354839d8ecdc5e248d9b18be", "message": "Update SystemViewCommand.java", "committedDate": "2020-09-23T07:31:38Z", "type": "commit"}, {"oid": "0e1e2d3a8aa42394568f76cdb629bd5a7bc7ee9d", "url": "https://github.com/apache/ignite/commit/0e1e2d3a8aa42394568f76cdb629bd5a7bc7ee9d", "message": "Update SystemViewCommand.java", "committedDate": "2020-09-23T07:57:40Z", "type": "commit"}, {"oid": "c5cf3e98c81d776225e598c98e0f58f5b7d2b777", "url": "https://github.com/apache/ignite/commit/c5cf3e98c81d776225e598c98e0f58f5b7d2b777", "message": "IGNITE-13426 Merges master branch.", "committedDate": "2020-09-23T08:32:38Z", "type": "commit"}]}