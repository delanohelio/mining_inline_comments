{"pr_number": 8237, "pr_title": "IGNITE-12443 Document the Ignite Sandbox", "pr_createdAt": "2020-09-10T11:35:07Z", "pr_url": "https://github.com/apache/ignite/pull/8237", "timeline": [{"oid": "89e0090448a70c4ad0ed3b18285a08254f391e6a", "url": "https://github.com/apache/ignite/commit/89e0090448a70c4ad0ed3b18285a08254f391e6a", "message": "IGNITE-12443 Document the Ignite Sandbox", "committedDate": "2020-09-10T11:32:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAzNDc0MA==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r489034740", "bodyText": "The section does a good job explaining what this feature is for but lacks instructions that show how to enable the sandbox and how to use it together with the Java Sandbox model. There are many references to the latter and a code sample might be useful.\nCould you please add the following to the doc:\n\nActivation: API or command to enable/disable the sandbox\nConfiguration: How to set up the sandbox based on the Java Sandbox model\nUsage: (optional but would make the docs stronger) a code snippet based on the Java Sandbox throwing an exception if user code violates any restrictions.", "author": "dmagda", "createdAt": "2020-09-15T22:34:22Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -0,0 +1,31 @@\n+= The Ignite Sandbox\n+\n+== Overview\n+Ignite allows using a user-defined code that can be a compute job, event filter, message listener, etc.\n+This user-defined code can utilize Java features to get access to host resources.\n+For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n+To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n+\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+\n+There are a few conditions to run user-defined code with restrictions:\n+\n+- link:/security/authentication[GridSecurityProcessor] is installed;\n+- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n+- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+\n+\n+If the Ignite Sandbox is turned on, you can see the following trace line:", "originalCommit": "89e0090448a70c4ad0ed3b18285a08254f391e6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc3MjYzNg==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490772636", "bodyText": "Hello, Denis!\nThank you for your feedback!\nI tried to solve your comments. Could you please have a look?", "author": "dgarus", "createdAt": "2020-09-18T08:03:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAzNDc0MA=="}], "type": "inlineReview"}, {"oid": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "url": "https://github.com/apache/ignite/commit/a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "message": "fix review comments", "committedDate": "2020-09-17T13:57:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNjI4NQ==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490716285", "bodyText": "I don't think you need an article here.", "author": "Silberfuchs1", "createdAt": "2020-09-18T05:48:56Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNzM3MA==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490717370", "bodyText": "There are some conditions...\n'some' is used in affirmative sentences with plural countable nouns.\n'a few' is a synonym of 'some', but it gives another accent, like 'not so many'.", "author": "Silberfuchs1", "createdAt": "2020-09-18T05:52:42Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyMDA0Mg==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490720042", "bodyText": "'Due to the fact, that Ignite Sandbox is based on the Java Sandbox model, and the SecurityManager is an important part of that model, you need to have it installed.'", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:01:43Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyMTUwMw==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490721503", "bodyText": "Maybe 'The SecurityManager is responsible for checking, which security policy is currently in effect. It also performs access control checks.'\nBut I think, we don't need 'checks'. Just '...performs access control.' But it's up to you.", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:06:35Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyMjAyMQ==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490722021", "bodyText": "'The security manager...'\nYou've been talking about security manager before.", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:08:18Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyMzYzNw==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490723637", "bodyText": "There is also a -Djava.security.policy command-line argument, defining, which policy files are utilized.\nor\nThere is also a -Djava.security.policy command-line argument. It determines the utilized policy files.\nThe first option is better IMHO.", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:13:13Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyNDU4OQ==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490724589", "bodyText": "'...include -Djava.security.policy into the command line...'", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:15:48Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyNDg5Ng==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490724896", "bodyText": "You can read more about Security Management link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[here,window=_blank].", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:16:42Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[Security Management,window=_blank].", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyNTU1Nw==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490725557", "bodyText": "'NOTE: Ignite should have enough permissions to work correctly.'\nmust is rude:)", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:18:41Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[Security Management,window=_blank].\n+\n+NOTE: It may be convenient adding the security manager and the policy command-line arguments to `{IGNITE-HOME}/bin/ignite.sh|ignite.bat` script.\n+Read more about link:/quick-start/java#starting_a_node[starting a node].\n+\n+NOTE: The Ignite must have enough permissions to work correctly.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyNjAzNw==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490726037", "bodyText": "'....remember the \"giving permissions as low as possible\" security principle.'", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:20:12Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[Security Management,window=_blank].\n+\n+NOTE: It may be convenient adding the security manager and the policy command-line arguments to `{IGNITE-HOME}/bin/ignite.sh|ignite.bat` script.\n+Read more about link:/quick-start/java#starting_a_node[starting a node].\n+\n+NOTE: The Ignite must have enough permissions to work correctly.\n+You may apply the most straightforward way that is granting to Ignite the `java.security.AllPermission` permission,\n+but you should remember about the \"giving permissions as low as possible\" security principle.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyNjUwMA==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490726500", "bodyText": "you don't need 'the' here.", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:21:29Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[Security Management,window=_blank].\n+\n+NOTE: It may be convenient adding the security manager and the policy command-line arguments to `{IGNITE-HOME}/bin/ignite.sh|ignite.bat` script.\n+Read more about link:/quick-start/java#starting_a_node[starting a node].\n+\n+NOTE: The Ignite must have enough permissions to work correctly.\n+You may apply the most straightforward way that is granting to Ignite the `java.security.AllPermission` permission,\n+but you should remember about the \"giving permissions as low as possible\" security principle.\n+\n+- The second condition to activate the Ignite Sandbox is _an implementation of the `GridSecurityProcessor` interface must be installed_.\n+\n+Currently, the Apache Ignite does not provide an implementation of the `GridSecurityProcessor` interface out-of-the-box.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyNjY0Mw==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490726643", "bodyText": "'...as a part of...'", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:21:53Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[Security Management,window=_blank].\n+\n+NOTE: It may be convenient adding the security manager and the policy command-line arguments to `{IGNITE-HOME}/bin/ignite.sh|ignite.bat` script.\n+Read more about link:/quick-start/java#starting_a_node[starting a node].\n+\n+NOTE: The Ignite must have enough permissions to work correctly.\n+You may apply the most straightforward way that is granting to Ignite the `java.security.AllPermission` permission,\n+but you should remember about the \"giving permissions as low as possible\" security principle.\n+\n+- The second condition to activate the Ignite Sandbox is _an implementation of the `GridSecurityProcessor` interface must be installed_.\n+\n+Currently, the Apache Ignite does not provide an implementation of the `GridSecurityProcessor` interface out-of-the-box.\n+But, you can implement this interface as part of link:/plugins[a custom plugin].", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyNjgxOQ==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490726819", "bodyText": "'code execution...' ?", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:22:25Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[Security Management,window=_blank].\n+\n+NOTE: It may be convenient adding the security manager and the policy command-line arguments to `{IGNITE-HOME}/bin/ignite.sh|ignite.bat` script.\n+Read more about link:/quick-start/java#starting_a_node[starting a node].\n+\n+NOTE: The Ignite must have enough permissions to work correctly.\n+You may apply the most straightforward way that is granting to Ignite the `java.security.AllPermission` permission,\n+but you should remember about the \"giving permissions as low as possible\" security principle.\n+\n+- The second condition to activate the Ignite Sandbox is _an implementation of the `GridSecurityProcessor` interface must be installed_.\n+\n+Currently, the Apache Ignite does not provide an implementation of the `GridSecurityProcessor` interface out-of-the-box.\n+But, you can implement this interface as part of link:/plugins[a custom plugin].\n+\n+The `GridSecurityProcessor` interface has the `sandboxEnabled` method that manages a user-defined code executing inside the Ignite Sandbox.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyODA0OQ==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490728049", "bodyText": "'...the lambda code is executed with restrictions.'", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:25:38Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[Security Management,window=_blank].\n+\n+NOTE: It may be convenient adding the security manager and the policy command-line arguments to `{IGNITE-HOME}/bin/ignite.sh|ignite.bat` script.\n+Read more about link:/quick-start/java#starting_a_node[starting a node].\n+\n+NOTE: The Ignite must have enough permissions to work correctly.\n+You may apply the most straightforward way that is granting to Ignite the `java.security.AllPermission` permission,\n+but you should remember about the \"giving permissions as low as possible\" security principle.\n+\n+- The second condition to activate the Ignite Sandbox is _an implementation of the `GridSecurityProcessor` interface must be installed_.\n+\n+Currently, the Apache Ignite does not provide an implementation of the `GridSecurityProcessor` interface out-of-the-box.\n+But, you can implement this interface as part of link:/plugins[a custom plugin].\n+\n+The `GridSecurityProcessor` interface has the `sandboxEnabled` method that manages a user-defined code executing inside the Ignite Sandbox.\n+By default, this method returns `false`, which means no-sandbox.\n+If you are going to use the Ignite Sandbox, your overridden `sandboxEnabled` method should return `true`.\n \n If the Ignite Sandbox is turned on, you can see the following trace line:\n [source,text]\n ----\n [INFO] Security status [authentication=on, sandbox=on, tls/ssl=off]\n ----\n \n+== Permissions\n+\n A user-defined code is always executed on behalf of the security subject that initiates its execution.\n-The security subject's sandbox link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-DEA8EAB1-CF00-4658-AA6D-D2C9754C8B37[permissions] define actions that a user-defined code can perform.\n-The Ignite Sandbox gets these permissions using the _SecuritySubject#sandboxPermissions_ method.\n+The security subject's sandbox link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-DEA8EAB1-CF00-4658-AA6D-D2C9754C8B37[permissions,window=_blank] define actions that a user-defined code can perform.\n+The Ignite Sandbox gets these permissions using the `SecuritySubject#sandboxPermissions` method.\n+\n+NOTE: A user-defined code, when running inside the Ignite Sandbox, may use the public API of Ignite without granting any additional permissions.\n \n If a security subject doesn't have enough permissions to perform a security-sensitive operation,\n an AcccessControlException appears.\n \n-NOTE: A user-defined code, when running inside the Ignite Sandbox, may use the public API of Ignite without granting any additional permissions.\n+[source,java]\n+----\n+// Get compute instance over all nodes in the cluster.\n+IgniteCompute compute = Ignition.ignite().compute();\n+\n+compute.broadcast(() -> {\n+    // If the Ignite Sandbox is turned on, the lambda code executes with restrictions.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyOTM1NA==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490729354", "bodyText": "'a java.security.AccessControlException appears here.'", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:29:10Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[Security Management,window=_blank].\n+\n+NOTE: It may be convenient adding the security manager and the policy command-line arguments to `{IGNITE-HOME}/bin/ignite.sh|ignite.bat` script.\n+Read more about link:/quick-start/java#starting_a_node[starting a node].\n+\n+NOTE: The Ignite must have enough permissions to work correctly.\n+You may apply the most straightforward way that is granting to Ignite the `java.security.AllPermission` permission,\n+but you should remember about the \"giving permissions as low as possible\" security principle.\n+\n+- The second condition to activate the Ignite Sandbox is _an implementation of the `GridSecurityProcessor` interface must be installed_.\n+\n+Currently, the Apache Ignite does not provide an implementation of the `GridSecurityProcessor` interface out-of-the-box.\n+But, you can implement this interface as part of link:/plugins[a custom plugin].\n+\n+The `GridSecurityProcessor` interface has the `sandboxEnabled` method that manages a user-defined code executing inside the Ignite Sandbox.\n+By default, this method returns `false`, which means no-sandbox.\n+If you are going to use the Ignite Sandbox, your overridden `sandboxEnabled` method should return `true`.\n \n If the Ignite Sandbox is turned on, you can see the following trace line:\n [source,text]\n ----\n [INFO] Security status [authentication=on, sandbox=on, tls/ssl=off]\n ----\n \n+== Permissions\n+\n A user-defined code is always executed on behalf of the security subject that initiates its execution.\n-The security subject's sandbox link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-DEA8EAB1-CF00-4658-AA6D-D2C9754C8B37[permissions] define actions that a user-defined code can perform.\n-The Ignite Sandbox gets these permissions using the _SecuritySubject#sandboxPermissions_ method.\n+The security subject's sandbox link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-DEA8EAB1-CF00-4658-AA6D-D2C9754C8B37[permissions,window=_blank] define actions that a user-defined code can perform.\n+The Ignite Sandbox gets these permissions using the `SecuritySubject#sandboxPermissions` method.\n+\n+NOTE: A user-defined code, when running inside the Ignite Sandbox, may use the public API of Ignite without granting any additional permissions.\n \n If a security subject doesn't have enough permissions to perform a security-sensitive operation,\n an AcccessControlException appears.\n \n-NOTE: A user-defined code, when running inside the Ignite Sandbox, may use the public API of Ignite without granting any additional permissions.\n+[source,java]\n+----\n+// Get compute instance over all nodes in the cluster.\n+IgniteCompute compute = Ignition.ignite().compute();\n+\n+compute.broadcast(() -> {\n+    // If the Ignite Sandbox is turned on, the lambda code executes with restrictions.\n+\n+    // You can use the public API of Ignite without granting any permissions.\n+    Ignition.localIgnite().cache(\"some.cache\").get(\"key\");\n+\n+    // If the current security subject doesn't have the java.util.PropertyPermission(\"secret.property\", \"read\") permission,\n+    // an java.security.AccessControlException appears here.", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczMDgwOQ==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r490730809", "bodyText": "'In the case of accessing the system property...'", "author": "Silberfuchs1", "createdAt": "2020-09-18T06:32:55Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -6,26 +6,75 @@ This user-defined code can utilize Java features to get access to host resources\n For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n \n-You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here].\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n \n-There are a few conditions to run user-defined code with restrictions:\n+== The Ignite Sandbox activation\n \n-- link:/security/authentication[GridSecurityProcessor] is installed;\n-- the method _GridSecurityProcessor#sandboxEnabled_ returns true;\n-- link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[SecurityManager] is installed.\n+There are a few conditions to activate the Ignite Sandbox.\n \n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the Ignite Sandbox is based on the Java Sandbox model, you need to have installed the SecurityManager that is an important part of that model.\n+The SecurityManager is responsible for checking the security policy currently in effect and perform access control checks.\n+A security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a `-Djava.security.policy` command-line argument whose usage determines what policy files are utilized.\n+If you don't include `-Djava.security.policy` on the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[Security Management,window=_blank].\n+\n+NOTE: It may be convenient adding the security manager and the policy command-line arguments to `{IGNITE-HOME}/bin/ignite.sh|ignite.bat` script.\n+Read more about link:/quick-start/java#starting_a_node[starting a node].\n+\n+NOTE: The Ignite must have enough permissions to work correctly.\n+You may apply the most straightforward way that is granting to Ignite the `java.security.AllPermission` permission,\n+but you should remember about the \"giving permissions as low as possible\" security principle.\n+\n+- The second condition to activate the Ignite Sandbox is _an implementation of the `GridSecurityProcessor` interface must be installed_.\n+\n+Currently, the Apache Ignite does not provide an implementation of the `GridSecurityProcessor` interface out-of-the-box.\n+But, you can implement this interface as part of link:/plugins[a custom plugin].\n+\n+The `GridSecurityProcessor` interface has the `sandboxEnabled` method that manages a user-defined code executing inside the Ignite Sandbox.\n+By default, this method returns `false`, which means no-sandbox.\n+If you are going to use the Ignite Sandbox, your overridden `sandboxEnabled` method should return `true`.\n \n If the Ignite Sandbox is turned on, you can see the following trace line:\n [source,text]\n ----\n [INFO] Security status [authentication=on, sandbox=on, tls/ssl=off]\n ----\n \n+== Permissions\n+\n A user-defined code is always executed on behalf of the security subject that initiates its execution.\n-The security subject's sandbox link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-DEA8EAB1-CF00-4658-AA6D-D2C9754C8B37[permissions] define actions that a user-defined code can perform.\n-The Ignite Sandbox gets these permissions using the _SecuritySubject#sandboxPermissions_ method.\n+The security subject's sandbox link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-DEA8EAB1-CF00-4658-AA6D-D2C9754C8B37[permissions,window=_blank] define actions that a user-defined code can perform.\n+The Ignite Sandbox gets these permissions using the `SecuritySubject#sandboxPermissions` method.\n+\n+NOTE: A user-defined code, when running inside the Ignite Sandbox, may use the public API of Ignite without granting any additional permissions.\n \n If a security subject doesn't have enough permissions to perform a security-sensitive operation,\n an AcccessControlException appears.\n \n-NOTE: A user-defined code, when running inside the Ignite Sandbox, may use the public API of Ignite without granting any additional permissions.\n+[source,java]\n+----\n+// Get compute instance over all nodes in the cluster.\n+IgniteCompute compute = Ignition.ignite().compute();\n+\n+compute.broadcast(() -> {\n+    // If the Ignite Sandbox is turned on, the lambda code executes with restrictions.\n+\n+    // You can use the public API of Ignite without granting any permissions.\n+    Ignition.localIgnite().cache(\"some.cache\").get(\"key\");\n+\n+    // If the current security subject doesn't have the java.util.PropertyPermission(\"secret.property\", \"read\") permission,\n+    // an java.security.AccessControlException appears here.\n+    System.getProperty(\"secret.property\");\n+});\n+----\n+\n+In the case of accessing to the system property shown in the snippet above, you can see the following trace line with an exception:", "originalCommit": "a95cd9c083b445e059c1dd06bb7de6faf0b65d4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7cbd4f35687cdcca51c0202fad0e958f00d3efc8", "url": "https://github.com/apache/ignite/commit/7cbd4f35687cdcca51c0202fad0e958f00d3efc8", "message": "fix review comments", "committedDate": "2020-09-18T07:44:20Z", "type": "commit"}, {"oid": "d8e00036541b6f686b96a97c7fdb8139d2dcd73b", "url": "https://github.com/apache/ignite/commit/d8e00036541b6f686b96a97c7fdb8139d2dcd73b", "message": "fix review comments", "committedDate": "2020-09-18T08:12:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MjIxMw==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r493882213", "bodyText": "How about this version for the opening paragraph?\nIgnite allows executing custom logic via various APIs including compute tasks, event filters, message listeners. This user-defined logic can utilize Java APIs to get access to host resources. For example, it can create/update/delete files or system properties, open network connections, use reflection and other APIs to get full control of the host environment. Ignite Sandbox is based on the Java Sandbox model and allows you to restrict the scope of user-defined logic executed via Ignite APIs.", "author": "dmagda", "createdAt": "2020-09-23T20:41:42Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -0,0 +1,80 @@\n+= The Ignite Sandbox\n+\n+== Overview\n+Ignite allows using a user-defined code that can be a compute job, event filter, message listener, etc.", "originalCommit": "d8e00036541b6f686b96a97c7fdb8139d2dcd73b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2NTgwNQ==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r494065805", "bodyText": "Great I like your version!", "author": "dgarus", "createdAt": "2020-09-24T06:24:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MjIxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MjYzMg==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r493882632", "bodyText": "Ignite Sandbox activation => Ignite Sandbox Activation\nAll the letters have to be capitalized (the rule doesn't apply to prepositions and articles)", "author": "dmagda", "createdAt": "2020-09-23T20:42:28Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -0,0 +1,80 @@\n+= The Ignite Sandbox\n+\n+== Overview\n+Ignite allows using a user-defined code that can be a compute job, event filter, message listener, etc.\n+This user-defined code can utilize Java features to get access to host resources.\n+For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n+To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n+\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n+\n+== Ignite Sandbox activation", "originalCommit": "d8e00036541b6f686b96a97c7fdb8139d2dcd73b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2Njc5Ng==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r494066796", "bodyText": "ok", "author": "dgarus", "createdAt": "2020-09-24T06:27:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MjYzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MzE3NA==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r493883174", "bodyText": "I would say it this way:\n\nUse the following procedure to activate Ignite Sandbox or\nFollow the steps below to activate Ignite Sandbox", "author": "dmagda", "createdAt": "2020-09-23T20:43:33Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -0,0 +1,80 @@\n+= The Ignite Sandbox\n+\n+== Overview\n+Ignite allows using a user-defined code that can be a compute job, event filter, message listener, etc.\n+This user-defined code can utilize Java features to get access to host resources.\n+For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n+To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n+\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n+\n+== Ignite Sandbox activation\n+\n+There are some conditions to activate the Ignite Sandbox.", "originalCommit": "d8e00036541b6f686b96a97c7fdb8139d2dcd73b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2NzE5MQ==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r494067191", "bodyText": "ok", "author": "dgarus", "createdAt": "2020-09-24T06:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MzE3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MzM3OA==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r493883378", "bodyText": "Just say - \"Install the SecurityManager ...\"", "author": "dmagda", "createdAt": "2020-09-23T20:43:57Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -0,0 +1,80 @@\n+= The Ignite Sandbox\n+\n+== Overview\n+Ignite allows using a user-defined code that can be a compute job, event filter, message listener, etc.\n+This user-defined code can utilize Java features to get access to host resources.\n+For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n+To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n+\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n+\n+== Ignite Sandbox activation\n+\n+There are some conditions to activate the Ignite Sandbox.\n+\n+- The first condition is _the SecurityManager must be installed_.", "originalCommit": "d8e00036541b6f686b96a97c7fdb8139d2dcd73b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2Njg5Ng==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r494066896", "bodyText": "ok", "author": "dgarus", "createdAt": "2020-09-24T06:27:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MzM3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4NDM2Mw==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r493884363", "bodyText": "Just say \"Provide an implementation of the GridSecurityProcessor....\"", "author": "dmagda", "createdAt": "2020-09-23T20:45:36Z", "path": "docs/_docs/security/sandbox.adoc", "diffHunk": "@@ -0,0 +1,80 @@\n+= The Ignite Sandbox\n+\n+== Overview\n+Ignite allows using a user-defined code that can be a compute job, event filter, message listener, etc.\n+This user-defined code can utilize Java features to get access to host resources.\n+For example, it can create/update/delete files; create sockets; read/update/delete system properties; use reflection API and so on.\n+To restrict user-defined code options you may use the Ignite Sandbox based on the Java Sandbox model.\n+\n+You can read about the Java Sandbox model link:https://docs.oracle.com/en/java/javase/11/security/java-se-platform-security-architecture.html#GUID-C203D80F-C730-45C3-AB95-D4E61FD6D89C[here,window=_blank].\n+\n+== Ignite Sandbox activation\n+\n+There are some conditions to activate the Ignite Sandbox.\n+\n+- The first condition is _the SecurityManager must be installed_.\n+\n+Due to the fact, that Ignite Sandbox is based on the Java Sandbox model, and the SecurityManager is an important part of that model, you need to have it installed.\n+The SecurityManager is responsible for checking, which security policy is currently in effect. It also performs access control checks.\n+The security manager is not automatically installed when an application is running. If you run Ignite as a separate application,\n+you must invoke the Java Virtual Machine with the `-Djava.security.manager` command-line argument (which sets the value of the `java.security.manager property`).\n+There is also a -Djava.security.policy command-line argument, defining, which policy files are utilized.\n+If you don't include `-Djava.security.policy` into the command line, then the policy files specified in the security properties file will be used.\n+\n+You can read more about Security Management link:https://docs.oracle.com/javase/8/docs/technotes/guides/security/spec/security-spec.doc6.html#a19349[here,window=_blank].\n+\n+NOTE: It may be convenient adding the security manager and the policy command-line arguments to `{IGNITE-HOME}/bin/ignite.sh|ignite.bat` script.\n+Read more about link:/quick-start/java#starting_a_node[starting a node].\n+\n+NOTE: Ignite should have enough permissions to work correctly.\n+You may apply the most straightforward way that is granting to Ignite the `java.security.AllPermission` permission,\n+but you should remember the \"giving permissions as low as possible\" security principle.\n+\n+- The second condition to activate the Ignite Sandbox is _an implementation of the `GridSecurityProcessor` interface must be installed_.", "originalCommit": "d8e00036541b6f686b96a97c7fdb8139d2dcd73b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2NzI2Mw==", "url": "https://github.com/apache/ignite/pull/8237#discussion_r494067263", "bodyText": "ok", "author": "dgarus", "createdAt": "2020-09-24T06:28:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4NDM2Mw=="}], "type": "inlineReview"}, {"oid": "b11b096c3dbc70bca45853c47edcea9ebfbdd868", "url": "https://github.com/apache/ignite/commit/b11b096c3dbc70bca45853c47edcea9ebfbdd868", "message": "fix comments", "committedDate": "2020-09-24T06:32:26Z", "type": "commit"}]}