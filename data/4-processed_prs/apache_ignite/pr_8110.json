{"pr_number": 8110, "pr_title": "IGNITE-13293 .NET: Fix enum serialization performance", "pr_createdAt": "2020-08-01T07:58:49Z", "pr_url": "https://github.com/apache/ignite/pull/8110", "timeline": [{"oid": "e9fe1b4e5bb33ec5c0cd7481c27de8c21e68da98", "url": "https://github.com/apache/ignite/commit/e9fe1b4e5bb33ec5c0cd7481c27de8c21e68da98", "message": "Adding benchmarks", "committedDate": "2020-07-31T16:20:16Z", "type": "commit"}, {"oid": "1b40ebf544417e959feaf25a0609111814d731ff", "url": "https://github.com/apache/ignite/commit/1b40ebf544417e959feaf25a0609111814d731ff", "message": "Add becnhmark results", "committedDate": "2020-07-31T16:59:23Z", "type": "commit"}, {"oid": "9931f43160efccc6bb5c948c1489cc9652696c9a", "url": "https://github.com/apache/ignite/commit/9931f43160efccc6bb5c948c1489cc9652696c9a", "message": "Implement enum caching", "committedDate": "2020-07-31T17:12:51Z", "type": "commit"}, {"oid": "378a8124f6ace7760b4b4478e06554c44ffda923", "url": "https://github.com/apache/ignite/commit/378a8124f6ace7760b4b4478e06554c44ffda923", "message": "TODOs", "committedDate": "2020-07-31T17:28:22Z", "type": "commit"}, {"oid": "db07ae3bb037b4fea5499fe411a58784b651f88b", "url": "https://github.com/apache/ignite/commit/db07ae3bb037b4fea5499fe411a58784b651f88b", "message": "TODOs", "committedDate": "2020-07-31T18:36:21Z", "type": "commit"}, {"oid": "bb424384b90169cd1324cb8a4b807fe6adf8f9de", "url": "https://github.com/apache/ignite/commit/bb424384b90169cd1324cb8a4b807fe6adf8f9de", "message": "Update tests", "committedDate": "2020-07-31T18:45:16Z", "type": "commit"}, {"oid": "93ba6d8dcfa22840e8f955b40cc0c834af714bac", "url": "https://github.com/apache/ignite/commit/93ba6d8dcfa22840e8f955b40cc0c834af714bac", "message": "Add a condition to save enum fields only once", "committedDate": "2020-08-01T07:48:10Z", "type": "commit"}, {"oid": "80414e126b4cf73f8bb6946209e917b90fac3b87", "url": "https://github.com/apache/ignite/commit/80414e126b4cf73f8bb6946209e917b90fac3b87", "message": "cleanup", "committedDate": "2020-08-01T07:52:55Z", "type": "commit"}, {"oid": "1efff98f6aa40be742545f6890b14a299e5281f3", "url": "https://github.com/apache/ignite/commit/1efff98f6aa40be742545f6890b14a299e5281f3", "message": "Update benchmark results", "committedDate": "2020-08-01T07:55:34Z", "type": "commit"}, {"oid": "18717a613677cb6d7c13eb195c17d6aa40c76b9a", "url": "https://github.com/apache/ignite/commit/18717a613677cb6d7c13eb195c17d6aa40c76b9a", "message": "Fix license headers and comments", "committedDate": "2020-08-01T08:01:30Z", "type": "commit"}, {"oid": "7c687a5b19dce97a9ee8d5732e92ae305d823a9d", "url": "https://github.com/apache/ignite/commit/7c687a5b19dce97a9ee8d5732e92ae305d823a9d", "message": "cleanup", "committedDate": "2020-08-01T08:02:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExMDAwOQ==", "url": "https://github.com/apache/ignite/pull/8110#discussion_r464110009", "bodyText": "Optional: it looks like we need to check this:\nAssert.AreSame(binRes.GetBinaryType().GetEnumValues(), binRes.GetBinaryType().GetEnumValues())", "author": "ashapkin", "createdAt": "2020-08-02T18:43:00Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Binary/EnumsTest.cs", "diffHunk": "@@ -85,6 +86,11 @@ private static void CheckValue<T>(T val, bool isBinaryEnum = true)\n                 {\n                     Assert.AreEqual(string.Format(\"{0} [typeId={1}, enumValue={2}, enumValueName={3}]\",\n                         typeof(T).FullName, binRes.GetBinaryType().TypeId, binRes.EnumValue, val), binRes.ToString());\n+\n+                    var expectedEnumNames = Enum.GetValues(typeof(T)).OfType<T>().Select(x => x.ToString()).ToList();\n+                    var actualEnumNames = binRes.GetBinaryType().GetEnumValues().Select(v => v.EnumName).ToList();", "originalCommit": "7c687a5b19dce97a9ee8d5732e92ae305d823a9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyMjQ0MQ==", "url": "https://github.com/apache/ignite/pull/8110#discussion_r464222441", "bodyText": "I think I understand what you mean - since we cache enum values, we should always return the same collection. However, other nodes may have more values for the same enum (e.g. a newer code version). So the cache we introduced in this change is only for write operations. And when the user asks for all known enum values, we don't use the cache, but load them from the cluster.", "author": "ptupitsyn", "createdAt": "2020-08-03T06:44:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExMDAwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1OTcxMA==", "url": "https://github.com/apache/ignite/pull/8110#discussion_r465259710", "bodyText": "Should we support long?", "author": "gurustron", "createdAt": "2020-08-04T18:52:28Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Binary/BinaryUtils.cs", "diffHunk": "@@ -1749,6 +1753,76 @@ public static TimeSpan LongToTimeSpan(long ms)\n \n             return TimeSpan.FromMilliseconds(ms);\n         }\n+        \n+        /// <summary>\n+        /// Gets the enum values.\n+        /// </summary>\n+        public static IDictionary<string, int> GetEnumValues(Type enumType)\n+        {\n+            Debug.Assert(enumType != null);\n+            Debug.Assert(enumType.IsEnum);\n+            \n+            Dictionary<string,int> res;\n+            if (EnumValues.TryGetValue(enumType, out res))\n+            {\n+                return res;\n+            }\n+\n+            var values = Enum.GetValues(enumType);\n+            res = new Dictionary<string, int>(values.Length);\n+\n+            var underlyingType = Enum.GetUnderlyingType(enumType);\n+\n+            foreach (var value in values)\n+            {\n+                var name = Enum.GetName(enumType, value);\n+                Debug.Assert(name != null);\n+\n+                res[name] = GetEnumValueAsInt(underlyingType, value);\n+            }\n+\n+            EnumValues.Set(enumType, res);\n+            \n+            return res;\n+        }\n+        \n+        /// <summary>\n+        /// Gets the enum value as int.\n+        /// </summary>\n+        private static int GetEnumValueAsInt(Type underlyingType, object value)", "originalCommit": "7c687a5b19dce97a9ee8d5732e92ae305d823a9d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}