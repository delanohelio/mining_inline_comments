{"pr_number": 8575, "pr_title": "IGNITE-13492: Added snapshot test to ducktests", "pr_createdAt": "2020-12-14T18:51:31Z", "pr_url": "https://github.com/apache/ignite/pull/8575", "timeline": [{"oid": "dd9613f8ba5adbc299b3ca0c3290ca20f3bf1c02", "url": "https://github.com/apache/ignite/commit/dd9613f8ba5adbc299b3ca0c3290ca20f3bf1c02", "message": "IGNITE-13492: added snapshot test to ducktests", "committedDate": "2020-12-14T18:21:07Z", "type": "commit"}, {"oid": "9824b2ab177519f2b2993d3f979ce282151f2f2f", "url": "https://github.com/apache/ignite/commit/9824b2ab177519f2b2993d3f979ce282151f2f2f", "message": "Merge remote-tracking branch 'ignite/ignite-ducktape' into IGNITE-13492v1", "committedDate": "2020-12-14T18:26:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1NDU3MA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r543254570", "bodyText": "make it private", "author": "timoninmaxim", "createdAt": "2020-12-15T11:12:14Z", "path": "modules/ducktests/tests/ignitetest/services/utils/ignite_aware.py", "diffHunk": "@@ -351,3 +351,25 @@ def __dump_netfilter_settings(node):\n         Reads current netfilter settings on the node for debugging purposes.\n         \"\"\"\n         return str(node.account.ssh_client.exec_command(\"sudo iptables -L -n\")[1].read(), sys.getdefaultencoding())\n+\n+    def restart(self):", "originalCommit": "9824b2ab177519f2b2993d3f979ce282151f2f2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4NDUwMw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r543284503", "bodyText": "made a private rotate_log", "author": "Sega76", "createdAt": "2020-12-15T12:01:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1NDU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1NjA2MQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r543256061", "bodyText": "Use grep with full pattern patching, smth like \"^console_?[0-9]*.log$\". As string \"log\" may match different log files.\nAlternative is using service counter variable that incremented within restart method.", "author": "timoninmaxim", "createdAt": "2020-12-15T11:14:35Z", "path": "modules/ducktests/tests/ignitetest/services/utils/ignite_aware.py", "diffHunk": "@@ -351,3 +351,25 @@ def __dump_netfilter_settings(node):\n         Reads current netfilter settings on the node for debugging purposes.\n         \"\"\"\n         return str(node.account.ssh_client.exec_command(\"sudo iptables -L -n\")[1].read(), sys.getdefaultencoding())\n+\n+    def restart(self):\n+        \"\"\"\n+        Restart ignite cluster without cleaning.\n+        \"\"\"\n+        self.stop()\n+        self.rotate_log()\n+        self.start(clean=False)\n+\n+    def rotate_log(self):\n+        \"\"\"\n+        Rotate log file.\n+        \"\"\"\n+        new_log_file = self.STDOUT_STDERR_CAPTURE.replace('.log', '_$N.log')\n+\n+        for node in self.nodes:\n+            node.account.ssh(f'if [ -e {self.STDOUT_STDERR_CAPTURE} ];'\n+                             f'then '\n+                             f'cd {self.LOGS_DIR};'\n+                             f'N=`ls | grep log | wc -l`;'", "originalCommit": "9824b2ab177519f2b2993d3f979ce282151f2f2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4MTc1Mw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r543281753", "bodyText": "when starting different services on the same nodes (for example, when testing the PDS), we will not be able to use counter the service.\nSo I think the counter is a bad idea.", "author": "Sega76", "createdAt": "2020-12-15T11:56:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1NjA2MQ=="}], "type": "inlineReview"}, {"oid": "0a27f73bd13b600cfc6040714f4c0aaec3ad55e4", "url": "https://github.com/apache/ignite/commit/0a27f73bd13b600cfc6040714f4c0aaec3ad55e4", "message": "IGNITE-13492: fix comments", "committedDate": "2020-12-15T12:00:26Z", "type": "commit"}, {"oid": "67db514ad25a13f1fea1290e57f61effb5e2798c", "url": "https://github.com/apache/ignite/commit/67db514ad25a13f1fea1290e57f61effb5e2798c", "message": "IGNITE-13492: added version 2.9.0 to snapshot_test.py", "committedDate": "2020-12-15T13:43:16Z", "type": "commit"}, {"oid": "dc6830c42967b27e10e2afad00472b54c6b17bb3", "url": "https://github.com/apache/ignite/commit/dc6830c42967b27e10e2afad00472b54c6b17bb3", "message": "Merge remote-tracking branch 'ignite/ignite-ducktape' into IGNITE-13492v1\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/services/utils/ignite_aware.py\n#\tmodules/ducktests/tests/ignitetest/services/utils/ignite_persistence.py", "committedDate": "2020-12-19T17:11:52Z", "type": "commit"}, {"oid": "a1f3c5f177bd9d8ec19538acdd782b2f428673b2", "url": "https://github.com/apache/ignite/commit/a1f3c5f177bd9d8ec19538acdd782b2f428673b2", "message": "IGNITE-13492: remove method ignite_aware.restart()", "committedDate": "2020-12-21T09:50:52Z", "type": "commit"}, {"oid": "4a23b3ee7ec9305566836e4b3144395abba8ee94", "url": "https://github.com/apache/ignite/commit/4a23b3ee7ec9305566836e4b3144395abba8ee94", "message": "IGNITE-13492: fix slow_suite.yml", "committedDate": "2020-12-22T09:55:21Z", "type": "commit"}, {"oid": "2069e59a917c72ad1ab10ff1b3a2121d06ad6ced", "url": "https://github.com/apache/ignite/commit/2069e59a917c72ad1ab10ff1b3a2121d06ad6ced", "message": "IGNITE-13492: fix cache_macro.j2", "committedDate": "2020-12-22T12:58:43Z", "type": "commit"}, {"oid": "4c826693f55a8a2786be435ebb619edcc284fc4c", "url": "https://github.com/apache/ignite/commit/4c826693f55a8a2786be435ebb619edcc284fc4c", "message": "Merge remote-tracking branch 'ignite/ignite-ducktape' into IGNITE-13492v1\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/services/utils/control_utility.py\n#\tmodules/ducktests/tests/ignitetest/services/utils/ignite_persistence.py", "committedDate": "2020-12-25T09:05:29Z", "type": "commit"}, {"oid": "e340a98840c92dd3dbc237533d55d123d31ff11c", "url": "https://github.com/apache/ignite/commit/e340a98840c92dd3dbc237533d55d123d31ff11c", "message": "IGNITE-13492: resolved conflicts", "committedDate": "2020-12-25T09:37:09Z", "type": "commit"}, {"oid": "0d27f108d3af0ae91171db067dabffa020fabba2", "url": "https://github.com/apache/ignite/commit/0d27f108d3af0ae91171db067dabffa020fabba2", "message": "IGNITE-13492: resolved conflicts", "committedDate": "2020-12-25T10:48:23Z", "type": "commit"}, {"oid": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "url": "https://github.com/apache/ignite/commit/0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "message": "IGNITE-13492: little fix", "committedDate": "2020-12-25T11:23:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNjgxNw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549626817", "bodyText": "why \"j\" ? :)\nwhy \"<=\" ?\nany reason to specify \"L\"?", "author": "anton-vinogradov", "createdAt": "2020-12-29T09:07:44Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/snapshot_test/UuidDataLoaderApplication.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.snapshot_test;\n+\n+import java.util.UUID;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteDataStreamer;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+\n+/**\n+ * Loading random uuids to cache.\n+ */\n+public class UuidDataLoaderApplication extends IgniteAwareApplication {\n+    /** {@inheritDoc} */\n+    @Override public void run(JsonNode jNode) {\n+        String cacheName = jNode.get(\"cacheName\").asText();\n+\n+        long size = jNode.get(\"size\").asLong();\n+\n+        int dataSize = jNode.get(\"dataSize\").asInt();\n+\n+        markInitialized();\n+\n+        try (IgniteDataStreamer<UUID, byte[]> dataStreamer = ignite.dataStreamer(cacheName)) {\n+            for (long j = 0L; j <= size; j++)", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE3MzkzNA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r550173934", "bodyText": "set \"i\"\nset \"<\"\nuse \"int\"\nfixed", "author": "Sega76", "createdAt": "2020-12-30T12:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNjgxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNzE1Mg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549627152", "bodyText": "what is \"size\" when we have \"dataSize\"?", "author": "anton-vinogradov", "createdAt": "2020-12-29T09:08:38Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/snapshot_test/UuidDataLoaderApplication.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.snapshot_test;\n+\n+import java.util.UUID;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteDataStreamer;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+\n+/**\n+ * Loading random uuids to cache.\n+ */\n+public class UuidDataLoaderApplication extends IgniteAwareApplication {\n+    /** {@inheritDoc} */\n+    @Override public void run(JsonNode jNode) {\n+        String cacheName = jNode.get(\"cacheName\").asText();\n+\n+        long size = jNode.get(\"size\").asLong();", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE1MTA2Mw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r555151063", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-11T15:56:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNzE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk1NzQ3Ng==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r561957476", "bodyText": "On, now we have \"amount\". Amount of what?", "author": "anton-vinogradov", "createdAt": "2021-01-21T15:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNzE1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNzk5MQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549627991", "bodyText": "what is the reason to have a dedicated \"initialized\" state?", "author": "anton-vinogradov", "createdAt": "2020-12-29T09:11:30Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/snapshot_test/UuidDataLoaderApplication.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.snapshot_test;\n+\n+import java.util.UUID;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteDataStreamer;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+\n+/**\n+ * Loading random uuids to cache.\n+ */\n+public class UuidDataLoaderApplication extends IgniteAwareApplication {\n+    /** {@inheritDoc} */\n+    @Override public void run(JsonNode jNode) {\n+        String cacheName = jNode.get(\"cacheName\").asText();\n+\n+        long size = jNode.get(\"size\").asLong();\n+\n+        int dataSize = jNode.get(\"dataSize\").asInt();\n+\n+        markInitialized();", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE2Mjc3OQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r550162779", "bodyText": "File \"/opt/ignite-dev/modules/ducktests/tests/ignitetest/tests/snapshot_test.py\", line 87, in snapshot_test\nloader.run()\nFile \"/usr/local/lib/python3.7/dist-packages/ducktape/services/service.py\", line 322, in run\nself.start()\nFile \"/opt/ignite-dev/modules/ducktests/tests/ignitetest/services/utils/ignite_aware.py\", line 85, in start\nself.await_started()\nFile \"/opt/ignite-dev/modules/ducktests/tests/ignitetest/services/ignite_app.py\", line 51, in await_started\nself.__check_status(\"IGNITE_APPLICATION_INITIALIZED\", timeout=self.startup_timeout_sec)\nneed \"initialized\" state", "author": "Sega76", "createdAt": "2020-12-30T11:32:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNzk5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk1ODg3Nw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r561958877", "bodyText": "Line 87 is empty.", "author": "anton-vinogradov", "createdAt": "2021-01-21T15:13:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNzk5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk2MjE2NA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r561962164", "bodyText": "Let me ask again,\nwhat is the reason to have dedicated \"initialized\" and \"finished\" states?\nWhy not only the markSyncExecutionComplete() used?", "author": "anton-vinogradov", "createdAt": "2021-01-21T15:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNzk5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ2Nzk4Mg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562467982", "bodyText": "if something goes wrong, during operation, then we will consider it during initialization, I think this is not correct", "author": "Sega76", "createdAt": "2021-01-22T08:36:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyNzk5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMDE4NA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549630184", "bodyText": "\"Node\" param description missed", "author": "anton-vinogradov", "createdAt": "2020-12-29T09:17:57Z", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -127,6 +131,65 @@ def tx_kill(self, **kwargs):\n         res = self.__parse_tx_list(output)\n         return res if res else output\n \n+    def validate_indexes(self):\n+        \"\"\"\n+        Validate indexes.\n+        \"\"\"\n+        data = self.__run(\"--cache validate_indexes\")\n+\n+        assert ('no issues found.' in data), data\n+\n+    def idle_verify(self):\n+        \"\"\"\n+        Idle verify.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify\")\n+\n+        assert ('idle_verify check has finished, no conflicts have been found.' in data), data\n+\n+    def idle_verify_dump(self, node=None):\n+        \"\"\"\n+        Idle verify dump.", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE3NDA0OQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r550174049", "bodyText": "fixed", "author": "Sega76", "createdAt": "2020-12-30T12:14:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMDE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk2Mzc0MA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r561963740", "bodyText": "\"Node where will be dump file\"\nCould you please specify an action in this sentence?", "author": "anton-vinogradov", "createdAt": "2021-01-21T15:19:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMDE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc0NDUzMQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r563744531", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-25T14:01:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMDE4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMDI4Nw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549630287", "bodyText": "params description missed", "author": "anton-vinogradov", "createdAt": "2020-12-29T09:18:16Z", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -127,6 +131,65 @@ def tx_kill(self, **kwargs):\n         res = self.__parse_tx_list(output)\n         return res if res else output\n \n+    def validate_indexes(self):\n+        \"\"\"\n+        Validate indexes.\n+        \"\"\"\n+        data = self.__run(\"--cache validate_indexes\")\n+\n+        assert ('no issues found.' in data), data\n+\n+    def idle_verify(self):\n+        \"\"\"\n+        Idle verify.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify\")\n+\n+        assert ('idle_verify check has finished, no conflicts have been found.' in data), data\n+\n+    def idle_verify_dump(self, node=None):\n+        \"\"\"\n+        Idle verify dump.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify --dump\", node=node)\n+\n+        assert ('VisorIdleVerifyDumpTask successfully' in data), data\n+\n+        return re.search(r'/.*.txt', data).group(0)\n+\n+    def snapshot_create(self, snapshot_name: str, sync_mode: bool = True, timeout_sec: int = 60):\n+        \"\"\"\n+        Create snapshot.", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE3NDA4Nw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r550174087", "bodyText": "fixed", "author": "Sega76", "createdAt": "2020-12-30T12:14:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMDI4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzNTc4OQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549635789", "bodyText": "any real reason to have sync_mode param when it's always true in code?\nany reason to replace an explicit call of await_snapshot by this param?", "author": "anton-vinogradov", "createdAt": "2020-12-29T09:35:43Z", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -127,6 +131,65 @@ def tx_kill(self, **kwargs):\n         res = self.__parse_tx_list(output)\n         return res if res else output\n \n+    def validate_indexes(self):\n+        \"\"\"\n+        Validate indexes.\n+        \"\"\"\n+        data = self.__run(\"--cache validate_indexes\")\n+\n+        assert ('no issues found.' in data), data\n+\n+    def idle_verify(self):\n+        \"\"\"\n+        Idle verify.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify\")\n+\n+        assert ('idle_verify check has finished, no conflicts have been found.' in data), data\n+\n+    def idle_verify_dump(self, node=None):\n+        \"\"\"\n+        Idle verify dump.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify --dump\", node=node)\n+\n+        assert ('VisorIdleVerifyDumpTask successfully' in data), data\n+\n+        return re.search(r'/.*.txt', data).group(0)\n+\n+    def snapshot_create(self, snapshot_name: str, sync_mode: bool = True, timeout_sec: int = 60):", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEzMTAzMg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r550131032", "bodyText": "in the following tests, will need to kill the node while taking a snapshot", "author": "Sega76", "createdAt": "2020-12-30T10:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzNTc4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk2NzQ0Mg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r561967442", "bodyText": "Could you please answer my questions?", "author": "anton-vinogradov", "createdAt": "2021-01-21T15:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzNTc4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc1MTEyMQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r563751121", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-25T14:11:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzNTc4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzNTkzMQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549635931", "bodyText": "success execution assert missed", "author": "anton-vinogradov", "createdAt": "2020-12-29T09:36:08Z", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -127,6 +131,65 @@ def tx_kill(self, **kwargs):\n         res = self.__parse_tx_list(output)\n         return res if res else output\n \n+    def validate_indexes(self):\n+        \"\"\"\n+        Validate indexes.\n+        \"\"\"\n+        data = self.__run(\"--cache validate_indexes\")\n+\n+        assert ('no issues found.' in data), data\n+\n+    def idle_verify(self):\n+        \"\"\"\n+        Idle verify.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify\")\n+\n+        assert ('idle_verify check has finished, no conflicts have been found.' in data), data\n+\n+    def idle_verify_dump(self, node=None):\n+        \"\"\"\n+        Idle verify dump.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify --dump\", node=node)\n+\n+        assert ('VisorIdleVerifyDumpTask successfully' in data), data\n+\n+        return re.search(r'/.*.txt', data).group(0)\n+\n+    def snapshot_create(self, snapshot_name: str, sync_mode: bool = True, timeout_sec: int = 60):\n+        \"\"\"\n+        Create snapshot.\n+        \"\"\"\n+        res = self.__run(f\"--snapshot create {snapshot_name}\")\n+\n+        if (\"Command [SNAPSHOT] finished with code: 0\" in res) & sync_mode:", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE1MTkxOQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r555151919", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-11T15:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzNTkzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0MTczOA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549641738", "bodyText": "do we really should check the condition \"(0 < start_time < end_time)\" here?\nshould we have an assert here \"(snapshot_name == name)\" instead of check since LastSnapshotName MUST show the last started snapshot name?", "author": "anton-vinogradov", "createdAt": "2020-12-29T09:54:37Z", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -127,6 +131,65 @@ def tx_kill(self, **kwargs):\n         res = self.__parse_tx_list(output)\n         return res if res else output\n \n+    def validate_indexes(self):\n+        \"\"\"\n+        Validate indexes.\n+        \"\"\"\n+        data = self.__run(\"--cache validate_indexes\")\n+\n+        assert ('no issues found.' in data), data\n+\n+    def idle_verify(self):\n+        \"\"\"\n+        Idle verify.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify\")\n+\n+        assert ('idle_verify check has finished, no conflicts have been found.' in data), data\n+\n+    def idle_verify_dump(self, node=None):\n+        \"\"\"\n+        Idle verify dump.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify --dump\", node=node)\n+\n+        assert ('VisorIdleVerifyDumpTask successfully' in data), data\n+\n+        return re.search(r'/.*.txt', data).group(0)\n+\n+    def snapshot_create(self, snapshot_name: str, sync_mode: bool = True, timeout_sec: int = 60):\n+        \"\"\"\n+        Create snapshot.\n+        \"\"\"\n+        res = self.__run(f\"--snapshot create {snapshot_name}\")\n+\n+        if (\"Command [SNAPSHOT] finished with code: 0\" in res) & sync_mode:\n+            self.await_snapshot(snapshot_name, timeout_sec)\n+\n+    def await_snapshot(self, snapshot_name: str, timeout_sec=60):\n+        \"\"\"\n+        Waiting for the snapshot to complete.\n+        \"\"\"\n+        delta_time = datetime.now() + timedelta(seconds=timeout_sec)\n+\n+        while datetime.now() < delta_time:\n+            for node in self._cluster.nodes:\n+                mbean = JmxClient(node).find_mbean('snapshot')\n+                start_time = int(list(mbean.LastSnapshotStartTime)[0])\n+                end_time = int(list(mbean.LastSnapshotEndTime)[0])\n+                err_msg = list(mbean.LastSnapshotErrorMessage)[0]\n+                name = list(mbean.LastSnapshotName)[0]\n+\n+                if (snapshot_name == name) and (0 < start_time < end_time) and (err_msg == ''):", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwNjM2OA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549806368", "bodyText": "you suggest removing 0 (start_time < end_time)?\n\n\nif we take 2 snapshots in succession, we may will get an exception", "author": "Sega76", "createdAt": "2020-12-29T18:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0MTczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk3NDg4OQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r561974889", "bodyText": "Suggest answering the question.\nThat's the exact situation I'm talking about. Another snapshot in progress means we doing something wrong.", "author": "anton-vinogradov", "createdAt": "2021-01-21T15:32:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0MTczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ3MTg2OQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562471869", "bodyText": "LastSnapshotName displays the name of the last snapshot on a node from all nodes, if we go to the wrong node, we can get information about the previous snapshot, then the snapshot name may be different", "author": "Sega76", "createdAt": "2021-01-22T08:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0MTczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NDYwOQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549644609", "bodyText": "in java code it looks like LongMetric startTime = mreg0.findMetric(\"LastSnapshotStartTime\");\nwhy it looks so strange - \"int(list(...)[0])\" in python?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:03:37Z", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -127,6 +131,65 @@ def tx_kill(self, **kwargs):\n         res = self.__parse_tx_list(output)\n         return res if res else output\n \n+    def validate_indexes(self):\n+        \"\"\"\n+        Validate indexes.\n+        \"\"\"\n+        data = self.__run(\"--cache validate_indexes\")\n+\n+        assert ('no issues found.' in data), data\n+\n+    def idle_verify(self):\n+        \"\"\"\n+        Idle verify.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify\")\n+\n+        assert ('idle_verify check has finished, no conflicts have been found.' in data), data\n+\n+    def idle_verify_dump(self, node=None):\n+        \"\"\"\n+        Idle verify dump.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify --dump\", node=node)\n+\n+        assert ('VisorIdleVerifyDumpTask successfully' in data), data\n+\n+        return re.search(r'/.*.txt', data).group(0)\n+\n+    def snapshot_create(self, snapshot_name: str, sync_mode: bool = True, timeout_sec: int = 60):\n+        \"\"\"\n+        Create snapshot.\n+        \"\"\"\n+        res = self.__run(f\"--snapshot create {snapshot_name}\")\n+\n+        if (\"Command [SNAPSHOT] finished with code: 0\" in res) & sync_mode:\n+            self.await_snapshot(snapshot_name, timeout_sec)\n+\n+    def await_snapshot(self, snapshot_name: str, timeout_sec=60):\n+        \"\"\"\n+        Waiting for the snapshot to complete.\n+        \"\"\"\n+        delta_time = datetime.now() + timedelta(seconds=timeout_sec)\n+\n+        while datetime.now() < delta_time:\n+            for node in self._cluster.nodes:\n+                mbean = JmxClient(node).find_mbean('snapshot')\n+                start_time = int(list(mbean.LastSnapshotStartTime)[0])", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE2MjYzNQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r550162635", "bodyText": "mbean.LastSnapshotEndTime is python generator -> str\nwe may get next value with next()\nthen it will look like this\nint(next(mbean.LastSnapshotEndTime))", "author": "Sega76", "createdAt": "2020-12-30T11:31:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NDYwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTAwMw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549645003", "bodyText": "reason to have slept here?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:04:40Z", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -127,6 +131,65 @@ def tx_kill(self, **kwargs):\n         res = self.__parse_tx_list(output)\n         return res if res else output\n \n+    def validate_indexes(self):\n+        \"\"\"\n+        Validate indexes.\n+        \"\"\"\n+        data = self.__run(\"--cache validate_indexes\")\n+\n+        assert ('no issues found.' in data), data\n+\n+    def idle_verify(self):\n+        \"\"\"\n+        Idle verify.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify\")\n+\n+        assert ('idle_verify check has finished, no conflicts have been found.' in data), data\n+\n+    def idle_verify_dump(self, node=None):\n+        \"\"\"\n+        Idle verify dump.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify --dump\", node=node)\n+\n+        assert ('VisorIdleVerifyDumpTask successfully' in data), data\n+\n+        return re.search(r'/.*.txt', data).group(0)\n+\n+    def snapshot_create(self, snapshot_name: str, sync_mode: bool = True, timeout_sec: int = 60):\n+        \"\"\"\n+        Create snapshot.\n+        \"\"\"\n+        res = self.__run(f\"--snapshot create {snapshot_name}\")\n+\n+        if (\"Command [SNAPSHOT] finished with code: 0\" in res) & sync_mode:\n+            self.await_snapshot(snapshot_name, timeout_sec)\n+\n+    def await_snapshot(self, snapshot_name: str, timeout_sec=60):\n+        \"\"\"\n+        Waiting for the snapshot to complete.\n+        \"\"\"\n+        delta_time = datetime.now() + timedelta(seconds=timeout_sec)\n+\n+        while datetime.now() < delta_time:\n+            for node in self._cluster.nodes:\n+                mbean = JmxClient(node).find_mbean('snapshot')\n+                start_time = int(list(mbean.LastSnapshotStartTime)[0])\n+                end_time = int(list(mbean.LastSnapshotEndTime)[0])\n+                err_msg = list(mbean.LastSnapshotErrorMessage)[0]\n+                name = list(mbean.LastSnapshotName)[0]\n+\n+                if (snapshot_name == name) and (0 < start_time < end_time) and (err_msg == ''):\n+                    return\n+\n+            time.sleep(1)", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwNTIwNg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549805206", "bodyText": "so as not to take up CPU time", "author": "Sega76", "createdAt": "2020-12-29T18:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTAwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDg3MTY2OA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r560871668", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-20T10:59:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTAwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTE2NA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549645164", "bodyText": "it seems we have all the chances to gain \"name\" from one snapshot, \"start_time\" from another, and \"err_msg\" from the third", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:05:07Z", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -127,6 +131,65 @@ def tx_kill(self, **kwargs):\n         res = self.__parse_tx_list(output)\n         return res if res else output\n \n+    def validate_indexes(self):\n+        \"\"\"\n+        Validate indexes.\n+        \"\"\"\n+        data = self.__run(\"--cache validate_indexes\")\n+\n+        assert ('no issues found.' in data), data\n+\n+    def idle_verify(self):\n+        \"\"\"\n+        Idle verify.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify\")\n+\n+        assert ('idle_verify check has finished, no conflicts have been found.' in data), data\n+\n+    def idle_verify_dump(self, node=None):\n+        \"\"\"\n+        Idle verify dump.\n+        \"\"\"\n+        data = self.__run(\"--cache idle_verify --dump\", node=node)\n+\n+        assert ('VisorIdleVerifyDumpTask successfully' in data), data\n+\n+        return re.search(r'/.*.txt', data).group(0)\n+\n+    def snapshot_create(self, snapshot_name: str, sync_mode: bool = True, timeout_sec: int = 60):\n+        \"\"\"\n+        Create snapshot.\n+        \"\"\"\n+        res = self.__run(f\"--snapshot create {snapshot_name}\")\n+\n+        if (\"Command [SNAPSHOT] finished with code: 0\" in res) & sync_mode:\n+            self.await_snapshot(snapshot_name, timeout_sec)\n+\n+    def await_snapshot(self, snapshot_name: str, timeout_sec=60):\n+        \"\"\"\n+        Waiting for the snapshot to complete.\n+        \"\"\"\n+        delta_time = datetime.now() + timedelta(seconds=timeout_sec)\n+\n+        while datetime.now() < delta_time:\n+            for node in self._cluster.nodes:\n+                mbean = JmxClient(node).find_mbean('snapshot')\n+                start_time = int(list(mbean.LastSnapshotStartTime)[0])\n+                end_time = int(list(mbean.LastSnapshotEndTime)[0])\n+                err_msg = list(mbean.LastSnapshotErrorMessage)[0]\n+                name = list(mbean.LastSnapshotName)[0]\n+\n+                if (snapshot_name == name) and (0 < start_time < end_time) and (err_msg == ''):\n+                    return\n+\n+            time.sleep(1)\n+\n+        raise TimeoutError(f'LastSnapshotName={name}, '\n+                           f'LastSnapshotStartTime={start_time}, '\n+                           f'LastSnapshotEndTime={end_time}, '\n+                           f'LastSnapshotErrorMessage={err_msg}')", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwNDgwNA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549804804", "bodyText": "cannot run multiple snapshot operations", "author": "Sega76", "createdAt": "2020-12-29T18:28:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk4ODI5Mg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r561988292", "bodyText": "Did not understand the answer.", "author": "anton-vinogradov", "createdAt": "2021-01-21T15:49:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc1MzEyMA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r563753120", "bodyText": "fixed error message", "author": "Sega76", "createdAt": "2021-01-25T14:14:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTc1MA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549645750", "bodyText": "what is the difference with \"node.account.externally_routable_ip\" used before?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:06:48Z", "path": "modules/ducktests/tests/ignitetest/services/utils/control_utility.py", "diffHunk": "@@ -248,12 +311,15 @@ def __parse_cluster_state(output):\n \n         return ClusterState(state=state, topology_version=topology, baseline=baseline)\n \n-    def __run(self, cmd):\n-        node = random.choice(self.__alives())\n+    def __run(self, cmd, node=None):\n+        if node is None:\n+            node = random.choice(self.__alives())\n \n         self.logger.debug(f\"Run command {cmd} on node {node.name}\")\n \n-        raw_output = node.account.ssh_capture(self.__form_cmd(node, cmd), allow_fail=True)\n+        node_ip = socket.gethostbyname(node.account.hostname)", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY5NzUzMQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549697531", "bodyText": "node.account.externally_routable_ip is hostname\nfor the dump file to be generated on a specific node, we must pass ip", "author": "Sega76", "createdAt": "2020-12-29T13:06:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTc1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk5MjU5NA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r561992594", "bodyText": "node.account.externally_routable_ip is hostname\n\nso, what the difference between \"hostname\" (node.account.externally_routable_ip) and node.account.hostname?", "author": "anton-vinogradov", "createdAt": "2021-01-21T15:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTc1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ3ODY3MA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562478670", "bodyText": "example:\nnode.account.hostname == ducker02\nnode.account.externally_routable_ip == ducker02\nwe need to use an ip address: 172.22.0.3", "author": "Sega76", "createdAt": "2021-01-22T08:54:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NTc1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjAxMA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549646010", "bodyText": "please explain the changes", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:07:28Z", "path": "modules/ducktests/tests/ignitetest/services/utils/jmx_utils.py", "diffHunk": "@@ -76,7 +76,7 @@ def find_mbean(self, pattern, domain='org.apache'):\n         :param domain: Domain of MBean\n         :return: JmxMBean instance\n         \"\"\"\n-        cmd = \"echo $'open %s\\\\n beans -d %s \\\\n close' | %s | grep -o '%s'\" \\\n+        cmd = \"echo $'open %s\\\\n beans -d %s \\\\n close' | %s | grep -o '.*%s$'\" \\", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcwMDQyOQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549700429", "bodyText": "we can pass a short bean name(ZookeeperDiscoverySpi) instead of\n\ngroup = SPIs, name = ZookeeperDiscoverySpi", "author": "Sega76", "createdAt": "2020-12-29T13:15:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgxMDQ1MA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549810450", "bodyText": "I found it more convenient. undo the change?", "author": "Sega76", "createdAt": "2020-12-29T18:48:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE1MzY5Mg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r555153692", "bodyText": "returned", "author": "Sega76", "createdAt": "2021-01-11T15:58:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjAxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjU0NQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549646545", "bodyText": "should this be defined at IgnitePathAware?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:09:00Z", "path": "modules/ducktests/tests/ignitetest/services/ignite.py", "diffHunk": "@@ -38,10 +38,47 @@ def __init__(self, context, config, num_nodes, jvm_opts=None, startup_timeout_se\n         super().__init__(context, config, num_nodes, startup_timeout_sec, shutdown_timeout_sec, modules=modules,\n                          jvm_opts=jvm_opts)\n \n+    @property\n+    def database_dir(self):", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE1NDczNQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r555154735", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-11T15:59:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjU0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjkyMQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549646921", "bodyText": "why this suite is slow? how about to make it fast?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:10:12Z", "path": "modules/ducktests/tests/ignitetest/tests/suites/slow_suite.yml", "diffHunk": "@@ -15,3 +15,6 @@\n \n discovery:\n   - ../discovery_test.py\n+\n+snapshot:\n+  - ../snapshot_test.py", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwMzYxNQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549803615", "bodyText": "index_validate and idle_verify take a long time\n01:03:33  test_id:    ignitetest.tests.snapshot_test.SnapshotTest.snapshot_test.ignite_version=2.9.0\n01:03:33  status:     PASS\n01:03:33  run time:   4 minutes 56.490 seconds\n01:03:33  test_id:    ignitetest.tests.snapshot_test.SnapshotTest.snapshot_test.ignite_version=dev\n01:03:33  status:     PASS\n01:03:33  run time:   23 minutes 57.322 seconds", "author": "Sega76", "createdAt": "2020-12-29T18:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjkyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjAwMTczNg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562001736", "bodyText": "Do we really need so long checks?\nWhy it takes so long? Do we check snapshots properly?\nWhy Dev is so slow?\n@Mmuzaf Could you please check this?\nSeems we have Dev 5 times slower than 2.9.0", "author": "anton-vinogradov", "createdAt": "2021-01-21T16:05:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjkyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjU4NjAxMA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562586010", "bodyText": "long execution due to checking the indexes:\n2021-01-22 14:41:10,996 - remoteaccount - _log - lineno:160]: ducker@tkles-pprb00277.vm.esrt.cloud.sbrf.ru: Running ssh command: /opt/ignite-dev/bin/control.sh --host 10.53.211.13 --cache validate_indexes\n2021-01-22 14:53:49,009 - control_utility - __run - lineno:331]: Output of command --cache validate_indexes on node tkles-pprb00277.vm.esrt.cloud.sbrf.ru, exited with code 0, is Control utility [ver. 2.10.0-SNAPSHOT#20210122-sha1:DEV]\n2021 Copyright(C) Apache Software Foundation\nUser: ducker\nTime: 2021-01-22T14:41:12.376\nCommand [CACHE] started\nArguments: --host 10.53.211.13 --cache validate_indexes \n--------------------------------------------------------------------------------\nno issues found.\n\nCommand [CACHE] finished with code: 0\nControl utility has completed execution at: 2021-01-22T14:53:48.986\nExecution time: 756610 ms", "author": "Sega76", "createdAt": "2021-01-22T12:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjkyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDYxMTQ4Mg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r570611482", "bodyText": "fixed the classpath\n02:06:30  test_id:    ignitetest.tests.snapshot_test.SnapshotTest.snapshot_test.ignite_version=2.9.0\n02:06:30  status:     PASS\n02:06:30  run time:   5 minutes 17.370 seconds\n02:06:30  --------------------------------------------------------------------------------\n02:06:30  test_id:    ignitetest.tests.snapshot_test.SnapshotTest.snapshot_test.ignite_version=dev\n02:06:30  status:     PASS\n02:06:30  run time:   5 minutes 23.372 seconds\n02:06:30  --------------------------------------------------------------------------------", "author": "Sega76", "createdAt": "2021-02-04T23:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NjkyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NzEzMA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549647130", "bodyText": "Why not LAST version used?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:10:51Z", "path": "modules/ducktests/tests/ignitetest/tests/snapshot_test.py", "diffHunk": "@@ -0,0 +1,119 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+Module contains snapshot test.\n+\"\"\"\n+from ducktape.mark.resource import cluster\n+\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration, DataStorageConfiguration\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration.data_storage import DataRegionConfiguration\n+from ignitetest.services.utils.ignite_configuration.discovery import from_ignite_cluster\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import IgniteVersion, V_2_9_0, DEV_BRANCH\n+\n+\n+# pylint: disable=W0223\n+class SnapshotTest(IgniteTest):\n+    \"\"\"\n+    Test Snapshot.\n+    \"\"\"\n+    NUM_NODES = 4\n+\n+    SNAPSHOT_NAME = \"test_snapshot\"\n+\n+    CACHE_NAME = \"TEST_CACHE\"\n+\n+    @cluster(num_nodes=NUM_NODES)\n+    @ignite_versions(str(DEV_BRANCH), str(V_2_9_0))", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE1NDkyMQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r555154921", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-11T15:59:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NzEzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjAwNDcwMg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562004702", "bodyText": "Why LATEST_2_9?\nWill it be latest after the 2.10 release?", "author": "anton-vinogradov", "createdAt": "2021-01-21T16:09:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NzEzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4MDI4Mw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562480283", "bodyText": "I think that after the release of 2.10\nit will need to be added to the test, because 2.9 should also be tested", "author": "Sega76", "createdAt": "2021-01-22T08:57:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NzEzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NzM4NQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549647385", "bodyText": "used only as default at @cluster", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:11:44Z", "path": "modules/ducktests/tests/ignitetest/tests/snapshot_test.py", "diffHunk": "@@ -0,0 +1,119 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+Module contains snapshot test.\n+\"\"\"\n+from ducktape.mark.resource import cluster\n+\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration, DataStorageConfiguration\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration.data_storage import DataRegionConfiguration\n+from ignitetest.services.utils.ignite_configuration.discovery import from_ignite_cluster\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import IgniteVersion, V_2_9_0, DEV_BRANCH\n+\n+\n+# pylint: disable=W0223\n+class SnapshotTest(IgniteTest):\n+    \"\"\"\n+    Test Snapshot.\n+    \"\"\"\n+    NUM_NODES = 4", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE3NTAwOA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r550175008", "bodyText": "fixed", "author": "Sega76", "createdAt": "2020-12-30T12:17:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0NzM4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0ODUzMw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549648533", "bodyText": "any reason to have this variable?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:15:21Z", "path": "modules/ducktests/tests/ignitetest/tests/snapshot_test.py", "diffHunk": "@@ -0,0 +1,119 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+Module contains snapshot test.\n+\"\"\"\n+from ducktape.mark.resource import cluster\n+\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration, DataStorageConfiguration\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration.data_storage import DataRegionConfiguration\n+from ignitetest.services.utils.ignite_configuration.discovery import from_ignite_cluster\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import IgniteVersion, V_2_9_0, DEV_BRANCH\n+\n+\n+# pylint: disable=W0223\n+class SnapshotTest(IgniteTest):\n+    \"\"\"\n+    Test Snapshot.\n+    \"\"\"\n+    NUM_NODES = 4\n+\n+    SNAPSHOT_NAME = \"test_snapshot\"\n+\n+    CACHE_NAME = \"TEST_CACHE\"\n+\n+    @cluster(num_nodes=NUM_NODES)\n+    @ignite_versions(str(DEV_BRANCH), str(V_2_9_0))\n+    def snapshot_test(self, ignite_version):\n+        \"\"\"\n+        Basic snapshot test.\n+        \"\"\"\n+        data_storage = DataStorageConfiguration(default=DataRegionConfiguration(persistent=True))", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE1NjI2Mg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r555156262", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-11T16:00:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0ODUzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0ODgzMg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549648832", "bodyText": "any reason to have this variable?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:16:16Z", "path": "modules/ducktests/tests/ignitetest/tests/snapshot_test.py", "diffHunk": "@@ -0,0 +1,119 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+Module contains snapshot test.\n+\"\"\"\n+from ducktape.mark.resource import cluster\n+\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration, DataStorageConfiguration\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration.data_storage import DataRegionConfiguration\n+from ignitetest.services.utils.ignite_configuration.discovery import from_ignite_cluster\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import IgniteVersion, V_2_9_0, DEV_BRANCH\n+\n+\n+# pylint: disable=W0223\n+class SnapshotTest(IgniteTest):\n+    \"\"\"\n+    Test Snapshot.\n+    \"\"\"\n+    NUM_NODES = 4\n+\n+    SNAPSHOT_NAME = \"test_snapshot\"\n+\n+    CACHE_NAME = \"TEST_CACHE\"\n+\n+    @cluster(num_nodes=NUM_NODES)\n+    @ignite_versions(str(DEV_BRANCH), str(V_2_9_0))\n+    def snapshot_test(self, ignite_version):\n+        \"\"\"\n+        Basic snapshot test.\n+        \"\"\"\n+        data_storage = DataStorageConfiguration(default=DataRegionConfiguration(persistent=True))\n+\n+        ignite_config = IgniteConfiguration(\n+            version=IgniteVersion(ignite_version),\n+            data_storage=data_storage,\n+            metric_exporter='org.apache.ignite.spi.metric.jmx.JmxMetricExporterSpi',\n+            caches=[CacheConfiguration(name=self.CACHE_NAME, cache_mode='REPLICATED',\n+                                       indexed_types=['java.util.UUID', 'byte[]'])]\n+        )\n+\n+        num_nodes = len(self.test_context.cluster)", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcwMDg5OA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549700898", "bodyText": "we can run this test by passing a parameter through globals", "author": "Sega76", "createdAt": "2020-12-29T13:16:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0ODgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjAwODY4Mg==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562008682", "bodyText": "any reason to have a dedicated variable?", "author": "anton-vinogradov", "createdAt": "2021-01-21T16:15:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0ODgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc1MzQ3MA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r563753470", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-25T14:14:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0ODgzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0OTI4Ng==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549649286", "bodyText": "why it may take so long time to startup?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:17:45Z", "path": "modules/ducktests/tests/ignitetest/tests/snapshot_test.py", "diffHunk": "@@ -0,0 +1,119 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+Module contains snapshot test.\n+\"\"\"\n+from ducktape.mark.resource import cluster\n+\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration, DataStorageConfiguration\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration.data_storage import DataRegionConfiguration\n+from ignitetest.services.utils.ignite_configuration.discovery import from_ignite_cluster\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import IgniteVersion, V_2_9_0, DEV_BRANCH\n+\n+\n+# pylint: disable=W0223\n+class SnapshotTest(IgniteTest):\n+    \"\"\"\n+    Test Snapshot.\n+    \"\"\"\n+    NUM_NODES = 4\n+\n+    SNAPSHOT_NAME = \"test_snapshot\"\n+\n+    CACHE_NAME = \"TEST_CACHE\"\n+\n+    @cluster(num_nodes=NUM_NODES)\n+    @ignite_versions(str(DEV_BRANCH), str(V_2_9_0))\n+    def snapshot_test(self, ignite_version):\n+        \"\"\"\n+        Basic snapshot test.\n+        \"\"\"\n+        data_storage = DataStorageConfiguration(default=DataRegionConfiguration(persistent=True))\n+\n+        ignite_config = IgniteConfiguration(\n+            version=IgniteVersion(ignite_version),\n+            data_storage=data_storage,\n+            metric_exporter='org.apache.ignite.spi.metric.jmx.JmxMetricExporterSpi',\n+            caches=[CacheConfiguration(name=self.CACHE_NAME, cache_mode='REPLICATED',\n+                                       indexed_types=['java.util.UUID', 'byte[]'])]\n+        )\n+\n+        num_nodes = len(self.test_context.cluster)\n+\n+        service = IgniteService(self.test_context, ignite_config, num_nodes=num_nodes - 1, startup_timeout_sec=180)", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwMDc3MA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549800770", "bodyText": "for local tests like in PmeFreeSwitchTest", "author": "Sega76", "createdAt": "2020-12-29T18:14:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0OTI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjAwOTg4MQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562009881", "bodyText": "Could you please answer the question I asked?", "author": "anton-vinogradov", "createdAt": "2021-01-21T16:16:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0OTI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NDg5OA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562484898", "bodyText": "Startup takes the same amount of time as in other tests with PDS.\nTime increased for local startup.", "author": "Sega76", "createdAt": "2021-01-22T09:05:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0OTI4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0OTgzNQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549649835", "bodyText": "why it is assigned here but the next code line does not use it?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:19:26Z", "path": "modules/ducktests/tests/ignitetest/tests/snapshot_test.py", "diffHunk": "@@ -0,0 +1,119 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+Module contains snapshot test.\n+\"\"\"\n+from ducktape.mark.resource import cluster\n+\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration, DataStorageConfiguration\n+from ignitetest.services.utils.ignite_configuration.cache import CacheConfiguration\n+from ignitetest.services.utils.ignite_configuration.data_storage import DataRegionConfiguration\n+from ignitetest.services.utils.ignite_configuration.discovery import from_ignite_cluster\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import IgniteVersion, V_2_9_0, DEV_BRANCH\n+\n+\n+# pylint: disable=W0223\n+class SnapshotTest(IgniteTest):\n+    \"\"\"\n+    Test Snapshot.\n+    \"\"\"\n+    NUM_NODES = 4\n+\n+    SNAPSHOT_NAME = \"test_snapshot\"\n+\n+    CACHE_NAME = \"TEST_CACHE\"\n+\n+    @cluster(num_nodes=NUM_NODES)\n+    @ignite_versions(str(DEV_BRANCH), str(V_2_9_0))\n+    def snapshot_test(self, ignite_version):\n+        \"\"\"\n+        Basic snapshot test.\n+        \"\"\"\n+        data_storage = DataStorageConfiguration(default=DataRegionConfiguration(persistent=True))\n+\n+        ignite_config = IgniteConfiguration(\n+            version=IgniteVersion(ignite_version),\n+            data_storage=data_storage,\n+            metric_exporter='org.apache.ignite.spi.metric.jmx.JmxMetricExporterSpi',\n+            caches=[CacheConfiguration(name=self.CACHE_NAME, cache_mode='REPLICATED',\n+                                       indexed_types=['java.util.UUID', 'byte[]'])]\n+        )\n+\n+        num_nodes = len(self.test_context.cluster)\n+\n+        service = IgniteService(self.test_context, ignite_config, num_nodes=num_nodes - 1, startup_timeout_sec=180)\n+        service.start()\n+\n+        control_utility = ControlUtility(service, self.test_context)\n+        control_utility.activate()\n+\n+        client_config = IgniteConfiguration(\n+            client_mode=True,\n+            version=IgniteVersion(ignite_version),\n+            discovery_spi=from_ignite_cluster(service),\n+        )\n+\n+        loader = IgniteApplicationService(\n+            self.test_context,\n+            client_config,\n+            java_class_name=\"org.apache.ignite.internal.ducktest.tests.snapshot_test.UuidDataLoaderApplication\",\n+            params={\n+                \"cacheName\": self.CACHE_NAME,\n+                \"size\": 512 * 1024,\n+                \"dataSize\": 1024\n+            },\n+            startup_timeout_sec=180,\n+            shutdown_timeout_sec=300\n+        )\n+\n+        loader.run()\n+\n+        node = service.nodes[0]", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwMTUxMQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549801511", "bodyText": "so that the work of the control utility was in one block, redo it?", "author": "Sega76", "createdAt": "2020-12-29T18:17:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0OTgzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE1NjU4OA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r555156588", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-01-11T16:00:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0OTgzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDE3Nw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549650177", "bodyText": "Why it streams UUID as a key?", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:20:40Z", "path": "modules/ducktests/src/main/java/org/apache/ignite/internal/ducktest/tests/snapshot_test/UuidDataLoaderApplication.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.ducktest.tests.snapshot_test;\n+\n+import java.util.UUID;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.ignite.IgniteDataStreamer;\n+import org.apache.ignite.internal.ducktest.utils.IgniteAwareApplication;\n+\n+/**\n+ * Loading random uuids to cache.\n+ */\n+public class UuidDataLoaderApplication extends IgniteAwareApplication {", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE0MTk0Nw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r550141947", "bodyText": "we may run it repeatedly, key should be different", "author": "Sega76", "createdAt": "2020-12-30T10:57:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDE3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjAxNTQzMw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562015433", "bodyText": "Don't see tests where it runs repeatedly.", "author": "anton-vinogradov", "createdAt": "2021-01-21T16:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDE3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4MjYxMA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562482610", "bodyText": "SnapshotTest\nwe run it repeatedly", "author": "Sega76", "createdAt": "2021-01-22T09:01:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDE3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDg2Nw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r549650867", "bodyText": "it performs \"mv\" but has the \"rename*\" name...", "author": "anton-vinogradov", "createdAt": "2020-12-29T10:22:55Z", "path": "modules/ducktests/tests/ignitetest/services/ignite.py", "diffHunk": "@@ -38,10 +38,47 @@ def __init__(self, context, config, num_nodes, jvm_opts=None, startup_timeout_se\n         super().__init__(context, config, num_nodes, startup_timeout_sec, shutdown_timeout_sec, modules=modules,\n                          jvm_opts=jvm_opts)\n \n+    @property\n+    def database_dir(self):\n+        \"\"\"\n+        :return: path to database directory\n+        \"\"\"\n+        return os.path.join(self.work_dir, \"db\")\n+\n+    @property\n+    def snapshots_dir(self):\n+        \"\"\"\n+        :return: path to snapshots directory\n+        \"\"\"\n+        return os.path.join(self.work_dir, \"snapshots\")\n+\n     def clean_node(self, node):\n         node.account.kill_java_processes(self.APP_SERVICE_CLASS, clean_shutdown=False, allow_fail=True)\n         node.account.ssh(\"rm -rf -- %s\" % self.persistent_root, allow_fail=False)\n \n+    def rename_database(self, new_name: str):", "originalCommit": "0878384ba0cbb60158abdc3bcb83fa6c1ee7f180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEzMzgyMw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r550133823", "bodyText": "\"move\" implies getting a new path. we rename the base folder", "author": "Sega76", "createdAt": "2020-12-30T10:45:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjAxOTYyOA==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562019628", "bodyText": "Seems you changed mv to cp, what the reason to perform a so heavy operation?", "author": "anton-vinogradov", "createdAt": "2021-01-21T16:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4MzAxMQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r562483011", "bodyText": "removed this method", "author": "Sega76", "createdAt": "2021-01-22T09:01:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDg2Nw=="}], "type": "inlineReview"}, {"oid": "de69f734f7e19c6da58616aec987c5f762cfab1e", "url": "https://github.com/apache/ignite/commit/de69f734f7e19c6da58616aec987c5f762cfab1e", "message": "IGNITE-13492: fix comments", "committedDate": "2020-12-30T12:13:05Z", "type": "commit"}, {"oid": "6879d9966195ea2805571794d8f0b61db8bf6369", "url": "https://github.com/apache/ignite/commit/6879d9966195ea2805571794d8f0b61db8bf6369", "message": "IGNITE-13492: fix comments", "committedDate": "2020-12-30T12:17:23Z", "type": "commit"}, {"oid": "45ac12509081427332b529646b2a0662e2b847b8", "url": "https://github.com/apache/ignite/commit/45ac12509081427332b529646b2a0662e2b847b8", "message": "IGNITE-13492: fix comments", "committedDate": "2021-01-11T13:58:04Z", "type": "commit"}, {"oid": "0482fb00d0bacb3213ddebc1efdab9f57183cdeb", "url": "https://github.com/apache/ignite/commit/0482fb00d0bacb3213ddebc1efdab9f57183cdeb", "message": "IGNITE-13492: fix comments", "committedDate": "2021-01-11T15:55:08Z", "type": "commit"}, {"oid": "e820a1971c06364af1184c28acaf0fa703e79e44", "url": "https://github.com/apache/ignite/commit/e820a1971c06364af1184c28acaf0fa703e79e44", "message": "IGNITE-13492: fix comments", "committedDate": "2021-01-11T17:16:12Z", "type": "commit"}, {"oid": "29f8cf63d7633d43cf8c62d4303ae917cea91bbc", "url": "https://github.com/apache/ignite/commit/29f8cf63d7633d43cf8c62d4303ae917cea91bbc", "message": "IGNITE-13492: fix comments", "committedDate": "2021-01-20T10:47:17Z", "type": "commit"}, {"oid": "9b065073014837b567a44fc32b2214ba51ee339d", "url": "https://github.com/apache/ignite/commit/9b065073014837b567a44fc32b2214ba51ee339d", "message": "IGNITE-13492: fix comments", "committedDate": "2021-01-23T01:39:11Z", "type": "commit"}, {"oid": "31dc3538ba3308bfd3af504bee327d8394aba103", "url": "https://github.com/apache/ignite/commit/31dc3538ba3308bfd3af504bee327d8394aba103", "message": "IGNITE-13492: tests", "committedDate": "2021-01-23T18:49:01Z", "type": "commit"}, {"oid": "018c2174d63de97426437a55d748fc48f7d00566", "url": "https://github.com/apache/ignite/commit/018c2174d63de97426437a55d748fc48f7d00566", "message": "IGNITE-13492: test", "committedDate": "2021-01-24T13:40:29Z", "type": "commit"}, {"oid": "d645002f2bb753a816cc39366b52ab957369b2dc", "url": "https://github.com/apache/ignite/commit/d645002f2bb753a816cc39366b52ab957369b2dc", "message": "IGNITE-13492: test", "committedDate": "2021-01-24T15:33:51Z", "type": "commit"}, {"oid": "ea2faf518cc007a716f4c116c65e58539b4ed275", "url": "https://github.com/apache/ignite/commit/ea2faf518cc007a716f4c116c65e58539b4ed275", "message": "IGNITE-13492: test", "committedDate": "2021-01-24T15:34:45Z", "type": "commit"}, {"oid": "98ef3704e54583b61322fed903769553390ec6c6", "url": "https://github.com/apache/ignite/commit/98ef3704e54583b61322fed903769553390ec6c6", "message": "IGNITE-13492: test", "committedDate": "2021-01-24T16:38:00Z", "type": "commit"}, {"oid": "588f8ea8de97c018e76b3cc83c9d9042c1fcd53b", "url": "https://github.com/apache/ignite/commit/588f8ea8de97c018e76b3cc83c9d9042c1fcd53b", "message": "IGNITE-13492: fixed DataLoaderApplication for snapshot test", "committedDate": "2021-01-25T10:29:32Z", "type": "commit"}, {"oid": "745cc20e16c72740274518946244301ab4247343", "url": "https://github.com/apache/ignite/commit/745cc20e16c72740274518946244301ab4247343", "message": "IGNITE-13492: little fix", "committedDate": "2021-01-25T10:53:14Z", "type": "commit"}, {"oid": "c69702a43a4dbe505a0e010f561868ed51d6b9b4", "url": "https://github.com/apache/ignite/commit/c69702a43a4dbe505a0e010f561868ed51d6b9b4", "message": "IGNITE-13492: little fix", "committedDate": "2021-01-25T20:29:48Z", "type": "commit"}, {"oid": "c9cb0422ada0493ba6e14845db69ef1d8c7bab8a", "url": "https://github.com/apache/ignite/commit/c9cb0422ada0493ba6e14845db69ef1d8c7bab8a", "message": "IGNITE-13492: fix licenses", "committedDate": "2021-01-26T12:14:02Z", "type": "commit"}, {"oid": "d1ffa434027f55f271ce6496a1ab52dd0fdf598b", "url": "https://github.com/apache/ignite/commit/d1ffa434027f55f271ce6496a1ab52dd0fdf598b", "message": "Merge remote-tracking branch 'ignite/ignite-ducktape' into IGNITE-13492v1\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/services/ignite.py", "committedDate": "2021-01-26T19:41:45Z", "type": "commit"}, {"oid": "e2d15a33bbb9dd9a904253f1ab56c19e59efa57a", "url": "https://github.com/apache/ignite/commit/e2d15a33bbb9dd9a904253f1ab56c19e59efa57a", "message": "IGNITE-13492: little fix", "committedDate": "2021-01-27T12:33:00Z", "type": "commit"}, {"oid": "794839341db4732313f6be11e05200b3ae5a03c2", "url": "https://github.com/apache/ignite/commit/794839341db4732313f6be11e05200b3ae5a03c2", "message": "IGNITE-13492: little fix", "committedDate": "2021-01-28T00:01:26Z", "type": "commit"}, {"oid": "2a21c89c6885a82e683b278ae50d59467eb3adb0", "url": "https://github.com/apache/ignite/commit/2a21c89c6885a82e683b278ae50d59467eb3adb0", "message": "IGNITE-13492: fixed modules", "committedDate": "2021-02-01T18:38:13Z", "type": "commit"}, {"oid": "17035fe602e793c22f3fcef82a044127eee6ac0a", "url": "https://github.com/apache/ignite/commit/17035fe602e793c22f3fcef82a044127eee6ac0a", "message": "IGNITE-13492: fixed classpath for ignite-dev", "committedDate": "2021-02-04T22:27:05Z", "type": "commit"}, {"oid": "ba0e934250bbfd7ece28ca1209c3cb2c7ecac1b3", "url": "https://github.com/apache/ignite/commit/ba0e934250bbfd7ece28ca1209c3cb2c7ecac1b3", "message": "IGNITE-13492: little fix", "committedDate": "2021-02-04T22:43:24Z", "type": "commit"}, {"oid": "78e5f6dc368e680ab87c9e868011db69ae2e5ef5", "url": "https://github.com/apache/ignite/commit/78e5f6dc368e680ab87c9e868011db69ae2e5ef5", "message": "Merge remote-tracking branch 'ignite/ignite-ducktape' into IGNITE-13492v1\n\n# Conflicts:\n#\tmodules/ducktests/tests/ignitetest/services/utils/control_utility.py\n#\tmodules/ducktests/tests/ignitetest/services/utils/ignite_configuration/__init__.py\n#\tmodules/ducktests/tests/ignitetest/services/utils/path.py", "committedDate": "2021-02-05T08:21:42Z", "type": "commit"}, {"oid": "2e24c15f1431632ef9ffbe11d706d3818413080f", "url": "https://github.com/apache/ignite/commit/2e24c15f1431632ef9ffbe11d706d3818413080f", "message": "IGNITE-13492: fixed zookeeper dependencies", "committedDate": "2021-02-05T08:28:23Z", "type": "commit"}, {"oid": "c55aefd8fa173efeeee65044c20dbf4d192a63ec", "url": "https://github.com/apache/ignite/commit/c55aefd8fa173efeeee65044c20dbf4d192a63ec", "message": "IGNITE-13492: revert build-classpath.sh", "committedDate": "2021-02-08T18:42:47Z", "type": "commit"}, {"oid": "d9920bd4ceaf48373ffaff206a7adc3bf8d65029", "url": "https://github.com/apache/ignite/commit/d9920bd4ceaf48373ffaff206a7adc3bf8d65029", "message": "Merge remote-tracking branch 'ignite/ignite-ducktape' into IGNITE-13492v1", "committedDate": "2021-02-09T12:51:14Z", "type": "commit"}, {"oid": "a6b15a5be97b476750311e623a5b27d7b4cf51a3", "url": "https://github.com/apache/ignite/commit/a6b15a5be97b476750311e623a5b27d7b4cf51a3", "message": "IGNITE-13492: added envs EXCLUDE_MODULES to snapshot_test.py", "committedDate": "2021-02-09T12:53:44Z", "type": "commit"}, {"oid": "a6b15a5be97b476750311e623a5b27d7b4cf51a3", "url": "https://github.com/apache/ignite/commit/a6b15a5be97b476750311e623a5b27d7b4cf51a3", "message": "IGNITE-13492: added envs EXCLUDE_MODULES to snapshot_test.py", "committedDate": "2021-02-09T12:53:44Z", "type": "forcePushed"}, {"oid": "e7480db51bae1c44e99735d745ad9b856226755e", "url": "https://github.com/apache/ignite/commit/e7480db51bae1c44e99735d745ad9b856226755e", "message": "IGNITE-13492: fix exclude for control_utility", "committedDate": "2021-02-10T08:10:01Z", "type": "commit"}, {"oid": "0f27a9a758ab8afe2237580270782935aa399aed", "url": "https://github.com/apache/ignite/commit/0f27a9a758ab8afe2237580270782935aa399aed", "message": "IGNITE-13492: fix comments", "committedDate": "2021-02-10T10:07:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjA3Njk4OQ==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r566076989", "bodyText": "valueSizeKb is better imho", "author": "ivandasch", "createdAt": "2021-01-28T13:03:36Z", "path": "modules/ducktests/tests/ignitetest/tests/snapshot_test.py", "diffHunk": "@@ -0,0 +1,108 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"\n+Module contains snapshot test.\n+\"\"\"\n+from ducktape.mark.resource import cluster\n+\n+from ignitetest.services.ignite import IgniteService\n+from ignitetest.services.ignite_app import IgniteApplicationService\n+from ignitetest.services.utils.control_utility import ControlUtility\n+from ignitetest.services.utils.ignite_configuration import IgniteConfiguration, DataStorageConfiguration\n+from ignitetest.services.utils.ignite_configuration.data_storage import DataRegionConfiguration\n+from ignitetest.services.utils.ignite_configuration.discovery import from_ignite_cluster\n+from ignitetest.utils import ignite_versions\n+from ignitetest.utils.ignite_test import IgniteTest\n+from ignitetest.utils.version import IgniteVersion, DEV_BRANCH, LATEST_2_9\n+\n+\n+# pylint: disable=W0223\n+class SnapshotTest(IgniteTest):\n+    \"\"\"\n+    Test Snapshot.\n+    \"\"\"\n+    SNAPSHOT_NAME = \"test_snapshot\"\n+\n+    CACHE_NAME = \"TEST_CACHE\"\n+\n+    @cluster(num_nodes=4)\n+    @ignite_versions(str(DEV_BRANCH), str(LATEST_2_9))\n+    def snapshot_test(self, ignite_version):\n+        \"\"\"\n+        Basic snapshot test.\n+        \"\"\"\n+        ignite_config = IgniteConfiguration(\n+            version=IgniteVersion(ignite_version),\n+            data_storage=DataStorageConfiguration(default=DataRegionConfiguration(persistent=True)),\n+            metric_exporter='org.apache.ignite.spi.metric.jmx.JmxMetricExporterSpi'\n+        )\n+\n+        service = IgniteService(self.test_context, ignite_config, num_nodes=len(self.test_context.cluster) - 1)\n+        service.start()\n+\n+        control_utility = ControlUtility(service, self.test_context)\n+        control_utility.activate()\n+\n+        client_config = IgniteConfiguration(\n+            client_mode=True,\n+            version=IgniteVersion(ignite_version),\n+            discovery_spi=from_ignite_cluster(service)\n+        )\n+\n+        loader = IgniteApplicationService(\n+            self.test_context,\n+            client_config,\n+            java_class_name=\"org.apache.ignite.internal.ducktest.tests.snapshot_test.DataLoaderApplication\",\n+            shutdown_timeout_sec=300,\n+            params={\n+                \"cacheName\": self.CACHE_NAME,\n+                \"interval\": 500_000,\n+                \"dataSizeKB\": 1", "originalCommit": "794839341db4732313f6be11e05200b3ae5a03c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcwODk5Nw==", "url": "https://github.com/apache/ignite/pull/8575#discussion_r573708997", "bodyText": "fixed", "author": "Sega76", "createdAt": "2021-02-10T13:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjA3Njk4OQ=="}], "type": "inlineReview"}, {"oid": "46544e84b34f753271b0c7b63dcd553a73b6be3e", "url": "https://github.com/apache/ignite/commit/46544e84b34f753271b0c7b63dcd553a73b6be3e", "message": "IGNITE-13492: added comment to exclude modules", "committedDate": "2021-02-10T12:25:48Z", "type": "commit"}, {"oid": "fd6f2fe58e82dcecff18c64137619fbf810d634e", "url": "https://github.com/apache/ignite/commit/fd6f2fe58e82dcecff18c64137619fbf810d634e", "message": "IGNITE-13492: fix comments", "committedDate": "2021-02-10T13:02:10Z", "type": "commit"}, {"oid": "f19e155a85599c16c9343ac3a5d55a13fd1d906d", "url": "https://github.com/apache/ignite/commit/f19e155a85599c16c9343ac3a5d55a13fd1d906d", "message": "Merge remote-tracking branch 'ignite/ignite-ducktape' into IGNITE-13492v1", "committedDate": "2021-02-11T11:01:14Z", "type": "commit"}, {"oid": "95a7f8a48da5293f398087e24f9da65f5f73de07", "url": "https://github.com/apache/ignite/commit/95a7f8a48da5293f398087e24f9da65f5f73de07", "message": "IGNITE-13492: fix comments", "committedDate": "2021-02-16T10:02:18Z", "type": "commit"}, {"oid": "0eee25f0df332b85db96e82b2022c1e5ad1ff749", "url": "https://github.com/apache/ignite/commit/0eee25f0df332b85db96e82b2022c1e5ad1ff749", "message": "IGNITE-13492: fix comments", "committedDate": "2021-02-16T14:18:24Z", "type": "commit"}, {"oid": "ade936e55541c44d92109ee731fc684349f49c5f", "url": "https://github.com/apache/ignite/commit/ade936e55541c44d92109ee731fc684349f49c5f", "message": "IGNITE-13492: fix comments", "committedDate": "2021-02-17T11:28:18Z", "type": "commit"}, {"oid": "e99c6796e99a2079ed81a3d1c6c9bab28f000520", "url": "https://github.com/apache/ignite/commit/e99c6796e99a2079ed81a3d1c6c9bab28f000520", "message": "IGNITE-13492: rollback envs", "committedDate": "2021-02-17T12:34:21Z", "type": "commit"}, {"oid": "2bbee664e66da84d8ce8294e326c56eb916ae358", "url": "https://github.com/apache/ignite/commit/2bbee664e66da84d8ce8294e326c56eb916ae358", "message": "Merge remote-tracking branch 'ignite/ignite-ducktape' into IGNITE-13492v1", "committedDate": "2021-02-17T12:34:35Z", "type": "commit"}, {"oid": "35721c7ba0e78b881201e4510045f66a907699fb", "url": "https://github.com/apache/ignite/commit/35721c7ba0e78b881201e4510045f66a907699fb", "message": "IGNITE-13492: little fix", "committedDate": "2021-02-17T13:09:48Z", "type": "commit"}, {"oid": "ce9a9c67100a9d0f3e09923eb6b76b2ecfd4ebb0", "url": "https://github.com/apache/ignite/commit/ce9a9c67100a9d0f3e09923eb6b76b2ecfd4ebb0", "message": "IGNITE-13492: fix comments", "committedDate": "2021-02-17T16:09:23Z", "type": "commit"}, {"oid": "c6b89cbcb3ff65e42c31c7b739d5f60879c29fa2", "url": "https://github.com/apache/ignite/commit/c6b89cbcb3ff65e42c31c7b739d5f60879c29fa2", "message": "IGNITE-13492: little fix", "committedDate": "2021-02-17T16:41:06Z", "type": "commit"}, {"oid": "d1d635f23cf3e07a775ceed269f08f8b20c72eb8", "url": "https://github.com/apache/ignite/commit/d1d635f23cf3e07a775ceed269f08f8b20c72eb8", "message": "IGNITE-13492: fix comments", "committedDate": "2021-02-18T20:20:41Z", "type": "commit"}, {"oid": "df4a5e105ae19028d52dc03b4575e6ee0c2d5e3b", "url": "https://github.com/apache/ignite/commit/df4a5e105ae19028d52dc03b4575e6ee0c2d5e3b", "message": "IGNITE-13492: fix check index.bin size", "committedDate": "2021-02-19T08:45:51Z", "type": "commit"}, {"oid": "7e7adce6a854d765ee5d9d38f533dd08456c0451", "url": "https://github.com/apache/ignite/commit/7e7adce6a854d765ee5d9d38f533dd08456c0451", "message": "IGNITE-13492: fix comments", "committedDate": "2021-02-19T11:48:54Z", "type": "commit"}]}