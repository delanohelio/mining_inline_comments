{"pr_number": 890, "pr_title": "GG-25083 .NET: Add native Near Cache", "pr_createdAt": "2020-01-30T19:12:54Z", "pr_url": "https://github.com/gridgain/gridgain/pull/890", "timeline": [{"oid": "5a35381e396434ca6877e53085e5bfd7dda7ec28", "url": "https://github.com/gridgain/gridgain/commit/5a35381e396434ca6877e53085e5bfd7dda7ec28", "message": "Remove exceptions from GetSize, enable partition filtering for near cache size", "committedDate": "2020-03-17T16:30:05Z", "type": "commit"}, {"oid": "1ba130e8ed1df366b28b9d22ef9372328743c38b", "url": "https://github.com/gridgain/gridgain/commit/1ba130e8ed1df366b28b9d22ef9372328743c38b", "message": "Fix GetSizeAsync", "committedDate": "2020-03-17T17:26:10Z", "type": "commit"}, {"oid": "dc6829be7e57eb10b16ae772d42aac14f009d841", "url": "https://github.com/gridgain/gridgain/commit/dc6829be7e57eb10b16ae772d42aac14f009d841", "message": "Fix GetSizeAsync", "committedDate": "2020-03-17T17:27:48Z", "type": "commit"}, {"oid": "fcc009c90b333599d8acddfd3c9228259f7b7699", "url": "https://github.com/gridgain/gridgain/commit/fcc009c90b333599d8acddfd3c9228259f7b7699", "message": "Add TestGetSizeWithPlatformNearAndPartition", "committedDate": "2020-03-17T17:47:53Z", "type": "commit"}, {"oid": "65c80feeda8443e6e2dc79618e34f3df8bed7806", "url": "https://github.com/gridgain/gridgain/commit/65c80feeda8443e6e2dc79618e34f3df8bed7806", "message": "Add TestNearCachingWithBackups", "committedDate": "2020-03-17T20:07:43Z", "type": "commit"}, {"oid": "00b24963603a9663a8a450e889bb7ba75e0b2c60", "url": "https://github.com/gridgain/gridgain/commit/00b24963603a9663a8a450e889bb7ba75e0b2c60", "message": "Add TestNearCachingWithBackups", "committedDate": "2020-03-17T20:23:39Z", "type": "commit"}, {"oid": "e74369732817fd074a8e4231cf4f0238491df750", "url": "https://github.com/gridgain/gridgain/commit/e74369732817fd074a8e4231cf4f0238491df750", "message": "Cleanup", "committedDate": "2020-03-17T20:26:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1OTU0NA==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394059544", "bodyText": "By the way, is it possible to get this info from cache configuration in some cases?", "author": "isapego", "createdAt": "2020-03-18T01:31:53Z", "path": "modules/core/src/main/java/org/apache/ignite/configuration/PlatformNearCacheConfiguration.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.configuration;\n+\n+import org.apache.ignite.internal.util.typedef.internal.S;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Platform near cache configuration.\n+ * <p>\n+ * Additional near caching mechanism on platform side (.NET).\n+ */\n+public class PlatformNearCacheConfiguration implements Serializable {\n+    /** */\n+    private static final long serialVersionUID = 0L;\n+\n+    /** Key type name. */\n+    private String keyTypeName;", "originalCommit": "e74369732817fd074a8e4231cf4f0238491df750", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1OTgxOQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394059819", "bodyText": "Was it originally a bug?", "author": "isapego", "createdAt": "2020-03-18T01:32:58Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtCacheEntry.java", "diffHunk": "@@ -165,6 +165,8 @@ public GridDhtCacheEntry(\n \n     /** {@inheritDoc} */\n     @Override public void onMarkedObsolete() {\n+        super.onMarkedObsolete();", "originalCommit": "e74369732817fd074a8e4231cf4f0238491df750", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MzY3OQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394893679", "bodyText": "Unnecessary change, reverted.", "author": "ptupitsyn", "createdAt": "2020-03-19T09:31:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1OTgxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MDA5NQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394060095", "bodyText": "Do we use TLS here to avoid redundant copies on put from platform side? Looks a bit complicated.", "author": "isapego", "createdAt": "2020-03-18T01:34:11Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/PlatformContextImpl.java", "diffHunk": "@@ -80,10 +83,13 @@\n  * Implementation of platform context.\n  */\n @SuppressWarnings(\"TypeMayBeWeakened\")\n-public class PlatformContextImpl implements PlatformContext {\n+public class PlatformContextImpl implements PlatformContext, PartitionsExchangeAware {\n     /** Supported event types. */\n     private static final Set<Integer> evtTyps;\n \n+    /** Whether to use thread-local data to update platform near cache. */\n+    private static final ThreadLocal<Boolean> nearUpdateUseThreadLocal = new ThreadLocal<>();", "originalCommit": "e74369732817fd074a8e4231cf4f0238491df750", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MTQyOA==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394891428", "bodyText": "Yes, when .NET performs Put, we already have a value on .NET side, no need to send it back through the callback.\nBefore this TLS optimization we had a 50% perf drop on Put when Platform Near is enabled. After TLS optimization the drop is about 7%. I think this added complexity is worth it.", "author": "ptupitsyn", "createdAt": "2020-03-19T09:28:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MDA5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI3NTQ2OQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r395275469", "bodyText": "Cool", "author": "isapego", "createdAt": "2020-03-19T19:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MDA5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MDczMA==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394060730", "bodyText": "I don't think this is a good name for this method as it does not say anything for person reading the code. I actually had to go to implementation of context() method in PlatformNoopProcessor to understand it's meaning. Maybe hasPlatformRuntime() or isPlatformNode() would fit better here?", "author": "isapego", "createdAt": "2020-03-18T01:37:00Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/platform/PlatformProcessor.java", "diffHunk": "@@ -47,6 +48,13 @@\n      */\n     public PlatformContext context();\n \n+    /**\n+     * Returns a value indicating whether {@link #context()} is available.\n+     *\n+     * @return value indicating whether {@link #context()} is available.\n+     */\n+    public boolean hasContext();", "originalCommit": "e74369732817fd074a8e4231cf4f0238491df750", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "711cea669c313cbd25b4ce3fa4a28992380ad4f5", "url": "https://github.com/gridgain/gridgain/commit/711cea669c313cbd25b4ce3fa4a28992380ad4f5", "message": "Revert unnecessary changes", "committedDate": "2020-03-19T09:31:25Z", "type": "commit"}, {"oid": "168912b10588fe75838849f6e738738944f7e6c5", "url": "https://github.com/gridgain/gridgain/commit/168912b10588fe75838849f6e738738944f7e6c5", "message": "Minor fix in build script", "committedDate": "2020-03-24T10:08:07Z", "type": "commit"}, {"oid": "dc7dea486a8fe027371e158d64e7a8c884c8c12d", "url": "https://github.com/gridgain/gridgain/commit/dc7dea486a8fe027371e158d64e7a8c884c8c12d", "message": "Merge remote-tracking branch 'ggce/master' into gg-20858", "committedDate": "2020-03-24T13:20:20Z", "type": "commit"}, {"oid": "874043a65812395daa63c19cb4bee162221bdd0f", "url": "https://github.com/gridgain/gridgain/commit/874043a65812395daa63c19cb4bee162221bdd0f", "message": "Add TestScanQueryFilterUsesFallbackValueWhenNotInNearCache", "committedDate": "2020-03-24T14:54:31Z", "type": "commit"}, {"oid": "228ab2b4d460dcf3c4da9851938e872600ac6938", "url": "https://github.com/gridgain/gridgain/commit/228ab2b4d460dcf3c4da9851938e872600ac6938", "message": "Add TestScanQueryFilterUsesFallbackValueWhenNotInNearCache", "committedDate": "2020-03-24T14:59:22Z", "type": "commit"}, {"oid": "739dfaa6264a871c2607f141a455c10db9167c72", "url": "https://github.com/gridgain/gridgain/commit/739dfaa6264a871c2607f141a455c10db9167c72", "message": "Add TestLocalPeek", "committedDate": "2020-03-24T15:06:28Z", "type": "commit"}, {"oid": "c7dfbb80e5e729490b492c57ba1453e9942f1eb8", "url": "https://github.com/gridgain/gridgain/commit/c7dfbb80e5e729490b492c57ba1453e9942f1eb8", "message": "Cleanup", "committedDate": "2020-03-24T15:08:46Z", "type": "commit"}, {"oid": "492a8a030fe3de2a2419519ae033c77bc3a32965", "url": "https://github.com/gridgain/gridgain/commit/492a8a030fe3de2a2419519ae033c77bc3a32965", "message": "add TestFailedPutKeepsCorrectNearCacheValue", "committedDate": "2020-03-24T15:59:08Z", "type": "commit"}, {"oid": "9b4b5462f21b4b28f80b78123b5b8ea2237178b9", "url": "https://github.com/gridgain/gridgain/commit/9b4b5462f21b4b28f80b78123b5b8ea2237178b9", "message": "Add TestExpiryPolicyRemovesValuesFromNearCache - fails", "committedDate": "2020-03-24T16:20:29Z", "type": "commit"}, {"oid": "ac7cb73298decbb9d26f6b80ed66f0cb75b1b875", "url": "https://github.com/gridgain/gridgain/commit/ac7cb73298decbb9d26f6b80ed66f0cb75b1b875", "message": "Add TestExpiryPolicyRemovesValuesFromNearCache - fails", "committedDate": "2020-03-24T16:32:03Z", "type": "commit"}, {"oid": "0e7ffd931d7374d5b42f8717e7244eb1af88dde0", "url": "https://github.com/gridgain/gridgain/commit/0e7ffd931d7374d5b42f8717e7244eb1af88dde0", "message": "Remove from near on expiration", "committedDate": "2020-03-24T16:54:10Z", "type": "commit"}, {"oid": "92dff0b1782dbf8a6d098f6fa29ba584f5664934", "url": "https://github.com/gridgain/gridgain/commit/92dff0b1782dbf8a6d098f6fa29ba584f5664934", "message": "Fix TestExpiryPolicyRemovesValuesFromNearCache", "committedDate": "2020-03-24T17:00:26Z", "type": "commit"}, {"oid": "302767c287421535460970101e1384731f89d978", "url": "https://github.com/gridgain/gridgain/commit/302767c287421535460970101e1384731f89d978", "message": "Update TestClientOnlyPlatformNearCache", "committedDate": "2020-03-24T17:30:54Z", "type": "commit"}, {"oid": "98825bfd25fb9ff13b8e08a751bcbcca217df090", "url": "https://github.com/gridgain/gridgain/commit/98825bfd25fb9ff13b8e08a751bcbcca217df090", "message": "TestClientOnlyPlatformNearCache done", "committedDate": "2020-03-24T17:35:15Z", "type": "commit"}, {"oid": "73134aba80977efaf6e8a2a0582f5515cc0e8546", "url": "https://github.com/gridgain/gridgain/commit/73134aba80977efaf6e8a2a0582f5515cc0e8546", "message": "Cleanup", "committedDate": "2020-03-24T17:37:05Z", "type": "commit"}, {"oid": "dd207d4ae24ed46021cc4a4b5d2ce79c148fe4de", "url": "https://github.com/gridgain/gridgain/commit/dd207d4ae24ed46021cc4a4b5d2ce79c148fe4de", "message": "Add TestPlatformNearCacheOnServerWithoutJavaNearCache", "committedDate": "2020-03-24T17:42:27Z", "type": "commit"}, {"oid": "263af17a8b1598f8b387be20e0ca3781dc15aa06", "url": "https://github.com/gridgain/gridgain/commit/263af17a8b1598f8b387be20e0ca3781dc15aa06", "message": "Add TestNearCacheBypassedWithinTransaction", "committedDate": "2020-03-24T18:06:45Z", "type": "commit"}, {"oid": "32c49ee251439fd8987c3ea05a797273de1bf757", "url": "https://github.com/gridgain/gridgain/commit/32c49ee251439fd8987c3ea05a797273de1bf757", "message": "cleanup", "committedDate": "2020-03-24T18:28:05Z", "type": "commit"}, {"oid": "3a90f8aab221c2547e53168cec0890dfb8694942", "url": "https://github.com/gridgain/gridgain/commit/3a90f8aab221c2547e53168cec0890dfb8694942", "message": "Update config schema", "committedDate": "2020-03-24T18:45:42Z", "type": "commit"}, {"oid": "a14fabee559c4b9a2cdbc65796c3fbf0705129b2", "url": "https://github.com/gridgain/gridgain/commit/a14fabee559c4b9a2cdbc65796c3fbf0705129b2", "message": "Update config tests", "committedDate": "2020-03-24T18:50:29Z", "type": "commit"}, {"oid": "a1a6cc6c965658aa2a7233d303f5a997e8369e2e", "url": "https://github.com/gridgain/gridgain/commit/a1a6cc6c965658aa2a7233d303f5a997e8369e2e", "message": "Add CacheStoreTest to .NET Core project", "committedDate": "2020-03-25T08:14:31Z", "type": "commit"}, {"oid": "71832d63059c7d53c514e254e9ac7af1f7a86d70", "url": "https://github.com/gridgain/gridgain/commit/71832d63059c7d53c514e254e9ac7af1f7a86d70", "message": "Add TestCacheStoreLoadFilterWithNearCache", "committedDate": "2020-03-25T08:27:55Z", "type": "commit"}, {"oid": "d493cd3d5831cda37c44aa48aed9e35a470f0f26", "url": "https://github.com/gridgain/gridgain/commit/d493cd3d5831cda37c44aa48aed9e35a470f0f26", "message": "Fix NPE in PlatformCacheManager", "committedDate": "2020-03-25T08:31:02Z", "type": "commit"}, {"oid": "90efb27e42314988ed52fafb5685d6512abd565e", "url": "https://github.com/gridgain/gridgain/commit/90efb27e42314988ed52fafb5685d6512abd565e", "message": "cleanup", "committedDate": "2020-03-25T08:42:32Z", "type": "commit"}, {"oid": "8df8a28fc975d5cba3e089ed02bb0b1670854e11", "url": "https://github.com/gridgain/gridgain/commit/8df8a28fc975d5cba3e089ed02bb0b1670854e11", "message": "Fix TestPartitionAwarenessDisablesAutomaticallyOnVersionsOlderThan140", "committedDate": "2020-03-25T08:48:49Z", "type": "commit"}, {"oid": "cec96a411afdcc19acac951fda8bae00dff7445b", "url": "https://github.com/gridgain/gridgain/commit/cec96a411afdcc19acac951fda8bae00dff7445b", "message": "Fix PlatformCacheEntryFilterImpl for CacheStore", "committedDate": "2020-03-25T09:08:21Z", "type": "commit"}, {"oid": "b483d998ba31d3c7cdc930b9242e055707cb499b", "url": "https://github.com/gridgain/gridgain/commit/b483d998ba31d3c7cdc930b9242e055707cb499b", "message": "Fix PlatformCacheEntryFilterImpl for CacheStore", "committedDate": "2020-03-25T09:13:55Z", "type": "commit"}, {"oid": "1c9b60c66727a80b205acbbedc6aebf6a11be181", "url": "https://github.com/gridgain/gridgain/commit/1c9b60c66727a80b205acbbedc6aebf6a11be181", "message": "Fix PlatformCacheEntryFilterImpl for CacheStore", "committedDate": "2020-03-25T09:15:40Z", "type": "commit"}, {"oid": "d26e6f88d46686009b1e41029a0a9017e4c6c126", "url": "https://github.com/gridgain/gridgain/commit/d26e6f88d46686009b1e41029a0a9017e4c6c126", "message": "Merge remote-tracking branch 'ggce/master' into gg-20858", "committedDate": "2020-03-25T10:19:50Z", "type": "commit"}, {"oid": "05a11aff939f6b21b9ed506a80f7cbaf4f4b588e", "url": "https://github.com/gridgain/gridgain/commit/05a11aff939f6b21b9ed506a80f7cbaf4f4b588e", "message": "Improve TestNearCacheTypeMismatchLogsErrorAndUpdatesMainCache", "committedDate": "2020-03-25T10:40:37Z", "type": "commit"}, {"oid": "a984d64201c48879e0192d7540e4ccd240c4fa16", "url": "https://github.com/gridgain/gridgain/commit/a984d64201c48879e0192d7540e4ccd240c4fa16", "message": "Fix TestNearCacheTypeMismatchLogsErrorAndUpdatesMainCache", "committedDate": "2020-03-25T10:52:57Z", "type": "commit"}, {"oid": "4b1c19d6ffb97e713ef36367df4ff3afe928e67d", "url": "https://github.com/gridgain/gridgain/commit/4b1c19d6ffb97e713ef36367df4ff3afe928e67d", "message": "Add TestCacheStoreLoadFilterDoesNotUseNearCache", "committedDate": "2020-03-25T11:12:58Z", "type": "commit"}, {"oid": "7b5adea89261451575590c4fbc4841a7e81528b5", "url": "https://github.com/gridgain/gridgain/commit/7b5adea89261451575590c4fbc4841a7e81528b5", "message": "TestCacheStoreLoadFilterDoesNotUseNearCache done", "committedDate": "2020-03-25T12:07:44Z", "type": "commit"}, {"oid": "9150b4f76a835b64e80678fb5aea2295e784f402", "url": "https://github.com/gridgain/gridgain/commit/9150b4f76a835b64e80678fb5aea2295e784f402", "message": "Add TestDifferentEvictionPoliciesOnClientAndServer", "committedDate": "2020-03-25T13:31:03Z", "type": "commit"}, {"oid": "5e93ae8162045b1394033208860acd72180bc099", "url": "https://github.com/gridgain/gridgain/commit/5e93ae8162045b1394033208860acd72180bc099", "message": "Adding TestDataStreamerUpdatesNearCache", "committedDate": "2020-03-25T13:47:46Z", "type": "commit"}, {"oid": "6ec4cf31b95e0c57de1d89d6b2dd93a74d0799f9", "url": "https://github.com/gridgain/gridgain/commit/6ec4cf31b95e0c57de1d89d6b2dd93a74d0799f9", "message": "Add TestDataStreamerUpdatesNearCache", "committedDate": "2020-03-25T13:55:07Z", "type": "commit"}, {"oid": "32780c8b3c3dbe6c158848a222a121b5914a64fb", "url": "https://github.com/gridgain/gridgain/commit/32780c8b3c3dbe6c158848a222a121b5914a64fb", "message": "Cleanup", "committedDate": "2020-03-25T14:03:34Z", "type": "commit"}, {"oid": "e0d7f2b18ed2d1438fab1d781f18b6db66f02329", "url": "https://github.com/gridgain/gridgain/commit/e0d7f2b18ed2d1438fab1d781f18b6db66f02329", "message": "Update NearCacheExample", "committedDate": "2020-03-25T14:58:55Z", "type": "commit"}, {"oid": "93e9de3568f17f4cb4a6f7f2c1dbf7f1936d8306", "url": "https://github.com/gridgain/gridgain/commit/93e9de3568f17f4cb4a6f7f2c1dbf7f1936d8306", "message": "Add TestEvictionPolicyKeepsLastEntriesInNearCache", "committedDate": "2020-03-25T16:55:28Z", "type": "commit"}, {"oid": "0f0fea59b03aaa0bd90e12c89cbff897dbb41399", "url": "https://github.com/gridgain/gridgain/commit/0f0fea59b03aaa0bd90e12c89cbff897dbb41399", "message": "Add TestEvictionPolicyKeepsLastEntriesInNearCache", "committedDate": "2020-03-25T16:57:27Z", "type": "commit"}, {"oid": "ac831d21b05cb51c03e068fe4717aa20457bec95", "url": "https://github.com/gridgain/gridgain/commit/ac831d21b05cb51c03e068fe4717aa20457bec95", "message": "Merge remote-tracking branch 'ggce/gg-20858' into gg-20858", "committedDate": "2020-03-25T16:57:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1ODcyMA==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r398958720", "bodyText": "Probably, it makes sense to make this check prior to copying dictionary, as object already locked and can not change. It can save a lot of CPU time in negative scenario.", "author": "isapego", "createdAt": "2020-03-26T23:51:01Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Common/CopyOnWriteConcurrentDictionary.cs", "diffHunk": "@@ -89,6 +89,30 @@ public void Set(TKey key, TValue value)\n                 _dict = dict0;\n             }\n         }\n+\n+        /// <summary>\n+        /// Removes the value with the specified key.\n+        /// </summary>\n+        /// <param name=\"key\">The key.</param>\n+        /// <param name=\"val\">Removed value, if any.</param>\n+        public bool Remove(TKey key, out TValue val)\n+        {\n+            lock (this)\n+            {\n+                var dict0 = new Dictionary<TKey, TValue>(_dict);\n+\n+                if (!dict0.TryGetValue(key, out val))", "originalCommit": "ac831d21b05cb51c03e068fe4717aa20457bec95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4MDU5Nw==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r399080597", "bodyText": "Good catch, fixed", "author": "ptupitsyn", "createdAt": "2020-03-27T07:36:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1ODcyMA=="}], "type": "inlineReview"}, {"oid": "818f0a4916cd2a4efd4b02cc9180a822c13901e2", "url": "https://github.com/gridgain/gridgain/commit/818f0a4916cd2a4efd4b02cc9180a822c13901e2", "message": "Review: fix CopyOnWriteConcurrentDictionary.Remove", "committedDate": "2020-03-27T07:36:12Z", "type": "commit"}, {"oid": "055e9ba7905c228a0a4f2fb768248fb5de13e7a3", "url": "https://github.com/gridgain/gridgain/commit/055e9ba7905c228a0a4f2fb768248fb5de13e7a3", "message": "Fix licenses", "committedDate": "2020-03-27T07:38:48Z", "type": "commit"}, {"oid": "3e4cddc8e594164cc397d56447e9dcc0b8fa07f1", "url": "https://github.com/gridgain/gridgain/commit/3e4cddc8e594164cc397d56447e9dcc0b8fa07f1", "message": "Fix checkstyle", "committedDate": "2020-03-27T08:21:16Z", "type": "commit"}, {"oid": "8957644415477b526c3579bfc5114fa8b2d01127", "url": "https://github.com/gridgain/gridgain/commit/8957644415477b526c3579bfc5114fa8b2d01127", "message": "Fix TestDataStreamerUpdatesNearCache flakiness", "committedDate": "2020-03-27T10:07:57Z", "type": "commit"}, {"oid": "2edba19544b354f6642929d9b7a66edd121391a8", "url": "https://github.com/gridgain/gridgain/commit/2edba19544b354f6642929d9b7a66edd121391a8", "message": "Fix code coverage: add TestCreateNearCacheWithInvalidKeyValueTypeNames", "committedDate": "2020-03-27T10:27:31Z", "type": "commit"}, {"oid": "c0b49c324a48ccb489c3dbc0853a3312a3bd301b", "url": "https://github.com/gridgain/gridgain/commit/c0b49c324a48ccb489c3dbc0853a3312a3bd301b", "message": "Fix GetEntries", "committedDate": "2020-03-27T10:35:54Z", "type": "commit"}, {"oid": "696284f46c22195170283bd315b6a8d7b2a3420d", "url": "https://github.com/gridgain/gridgain/commit/696284f46c22195170283bd315b6a8d7b2a3420d", "message": "Improve test coverage in TestPrimaryNodeChangeClearsNearCacheDataOnClient", "committedDate": "2020-03-27T10:45:58Z", "type": "commit"}, {"oid": "bf7e535aee072b00c04e0337bfa7857a5f01704d", "url": "https://github.com/gridgain/gridgain/commit/bf7e535aee072b00c04e0337bfa7857a5f01704d", "message": "Improve test coverage in TestClientNodeReconnectWithClusterRestartStopsNearCache", "committedDate": "2020-03-27T10:52:19Z", "type": "commit"}, {"oid": "e8b6fdc46b838d354c4d985cc3398add8a83570e", "url": "https://github.com/gridgain/gridgain/commit/e8b6fdc46b838d354c4d985cc3398add8a83570e", "message": "Implementing Scan Query near optimization", "committedDate": "2020-02-20T13:40:13Z", "type": "commit"}, {"oid": "bcce79e9d5fa15ecf0795dff7fc563cf4aa7caf1", "url": "https://github.com/gridgain/gridgain/commit/bcce79e9d5fa15ecf0795dff7fc563cf4aa7caf1", "message": "TestScanQueryFilterUsesValueFromNearCache done, scan query optimization works", "committedDate": "2020-02-20T13:42:54Z", "type": "commit"}, {"oid": "b8b9173c0e8cb95cc563c5e2beecdf134c37815d", "url": "https://github.com/gridgain/gridgain/commit/b8b9173c0e8cb95cc563c5e2beecdf134c37815d", "message": "Add comments", "committedDate": "2020-02-20T14:23:20Z", "type": "commit"}, {"oid": "f8b966a9dad3aeeffa3dea75a05a3091dfa6fd22", "url": "https://github.com/gridgain/gridgain/commit/f8b966a9dad3aeeffa3dea75a05a3091dfa6fd22", "message": "Fix .NET Core proj", "committedDate": "2020-02-22T16:22:28Z", "type": "commit"}, {"oid": "b40bdc683acca05eec6e7159fb7b918c37b6a520", "url": "https://github.com/gridgain/gridgain/commit/b40bdc683acca05eec6e7159fb7b918c37b6a520", "message": "Fix TestNearCacheTypeMismatchLogsErrorAndUpdatesMainCache", "committedDate": "2020-02-22T16:43:25Z", "type": "commit"}, {"oid": "37cc82a735ed65fd2c22a6395f145a5c9a29a4a6", "url": "https://github.com/gridgain/gridgain/commit/37cc82a735ed65fd2c22a6395f145a5c9a29a4a6", "message": "Cleanup", "committedDate": "2020-02-22T16:50:50Z", "type": "commit"}, {"oid": "af7a8ea8bc1f869623fae4b484f0e9f6fe72ecb2", "url": "https://github.com/gridgain/gridgain/commit/af7a8ea8bc1f869623fae4b484f0e9f6fe72ecb2", "message": "Cleanup", "committedDate": "2020-02-22T16:55:45Z", "type": "commit"}, {"oid": "f93eb659bf485cb84463a73e3fa8440c93b2f7e7", "url": "https://github.com/gridgain/gridgain/commit/f93eb659bf485cb84463a73e3fa8440c93b2f7e7", "message": "Fix bench config", "committedDate": "2020-02-22T16:57:00Z", "type": "commit"}, {"oid": "df942d579a91fbeb2957a5e0e867165b79a81d88", "url": "https://github.com/gridgain/gridgain/commit/df942d579a91fbeb2957a5e0e867165b79a81d88", "message": "Adding scan query benchmarks", "committedDate": "2020-02-22T17:07:26Z", "type": "commit"}, {"oid": "2b5a4a23d891baf07a730df0672646285dd70037", "url": "https://github.com/gridgain/gridgain/commit/2b5a4a23d891baf07a730df0672646285dd70037", "message": "Adding scan query benchmarks", "committedDate": "2020-02-22T17:16:35Z", "type": "commit"}, {"oid": "bf3c219f9458b17fa61d1282bd58f4ee3021be06", "url": "https://github.com/gridgain/gridgain/commit/bf3c219f9458b17fa61d1282bd58f4ee3021be06", "message": "Scan query thread local cleanup", "committedDate": "2020-02-22T17:35:12Z", "type": "commit"}, {"oid": "ec5808c27727c794160f70c01561da10406c85e4", "url": "https://github.com/gridgain/gridgain/commit/ec5808c27727c794160f70c01561da10406c85e4", "message": "Implement GetAll with near support", "committedDate": "2020-02-22T17:47:37Z", "type": "commit"}, {"oid": "7a4ac1733673d96a0012700622f3ba02a56fb3ec", "url": "https://github.com/gridgain/gridgain/commit/7a4ac1733673d96a0012700622f3ba02a56fb3ec", "message": "Adding GetAll test", "committedDate": "2020-02-22T17:59:10Z", "type": "commit"}, {"oid": "0b7e9658fd760fc70dccfcadfc9670a81131a66c", "url": "https://github.com/gridgain/gridgain/commit/0b7e9658fd760fc70dccfcadfc9670a81131a66c", "message": "TestGetAll done", "committedDate": "2020-02-22T18:02:31Z", "type": "commit"}, {"oid": "6cb3c2b799813c189452352206b3a47a761bf756", "url": "https://github.com/gridgain/gridgain/commit/6cb3c2b799813c189452352206b3a47a761bf756", "message": "Javadoc", "committedDate": "2020-02-22T18:13:56Z", "type": "commit"}, {"oid": "de1f6a306ae700a0e61ccfe493d4c4bcc8f8669f", "url": "https://github.com/gridgain/gridgain/commit/de1f6a306ae700a0e61ccfe493d4c4bcc8f8669f", "message": "Cleanup", "committedDate": "2020-02-22T18:15:10Z", "type": "commit"}, {"oid": "6ccb65d821c74b833039ddbb1bbd3164063af7fb", "url": "https://github.com/gridgain/gridgain/commit/6ccb65d821c74b833039ddbb1bbd3164063af7fb", "message": "Cleanup", "committedDate": "2020-02-22T18:17:46Z", "type": "commit"}, {"oid": "291c91b8c151cd7b8db7f5201fb5cb3f8fa0cfd9", "url": "https://github.com/gridgain/gridgain/commit/291c91b8c151cd7b8db7f5201fb5cb3f8fa0cfd9", "message": "Cleanup", "committedDate": "2020-02-22T18:20:44Z", "type": "commit"}, {"oid": "4a8bd08d4176fc3984e1b9f786b82e8e3f419fe9", "url": "https://github.com/gridgain/gridgain/commit/4a8bd08d4176fc3984e1b9f786b82e8e3f419fe9", "message": "Cleanup", "committedDate": "2020-02-22T18:21:30Z", "type": "commit"}, {"oid": "5a34511d56a96abc2ac80eb468584eb94e32f1a9", "url": "https://github.com/gridgain/gridgain/commit/5a34511d56a96abc2ac80eb468584eb94e32f1a9", "message": "Cleanup", "committedDate": "2020-02-22T18:24:46Z", "type": "commit"}, {"oid": "2f563c9eb2584bc029d6253df611429c44e9dbe2", "url": "https://github.com/gridgain/gridgain/commit/2f563c9eb2584bc029d6253df611429c44e9dbe2", "message": "Cleanup", "committedDate": "2020-02-22T18:25:50Z", "type": "commit"}, {"oid": "4c0ae6e1a4697ad2161ac61fbc4013d26c3577c3", "url": "https://github.com/gridgain/gridgain/commit/4c0ae6e1a4697ad2161ac61fbc4013d26c3577c3", "message": "TestGetAll done", "committedDate": "2020-02-22T18:35:50Z", "type": "commit"}, {"oid": "3846f42f2e89b9a0206ca11dda92b414797bfe8c", "url": "https://github.com/gridgain/gridgain/commit/3846f42f2e89b9a0206ca11dda92b414797bfe8c", "message": "TODOs: backups/replicated", "committedDate": "2020-02-22T21:19:34Z", "type": "commit"}, {"oid": "e9c96ddb506931fa5a5580db5f744094941a807e", "url": "https://github.com/gridgain/gridgain/commit/e9c96ddb506931fa5a5580db5f744094941a807e", "message": "Fix build", "committedDate": "2020-02-23T15:54:01Z", "type": "commit"}, {"oid": "1b7995cca866bd8e82465fd5d52918ad731dd662", "url": "https://github.com/gridgain/gridgain/commit/1b7995cca866bd8e82465fd5d52918ad731dd662", "message": "Fix GetOrAdd semantics", "committedDate": "2020-02-24T09:34:15Z", "type": "commit"}, {"oid": "8c269eed4d900a5e84708583af5f4228fd84d386", "url": "https://github.com/gridgain/gridgain/commit/8c269eed4d900a5e84708583af5f4228fd84d386", "message": "Fix GetOrAdd semantics", "committedDate": "2020-02-24T09:45:18Z", "type": "commit"}, {"oid": "37f478e94b3959ccdf05c42df21031744cced133", "url": "https://github.com/gridgain/gridgain/commit/37f478e94b3959ccdf05c42df21031744cced133", "message": "Fix GetOrAdd semantics - fix tests", "committedDate": "2020-02-24T10:19:06Z", "type": "commit"}, {"oid": "b379be8d94197a017d5aafce81b67c769b4871dc", "url": "https://github.com/gridgain/gridgain/commit/b379be8d94197a017d5aafce81b67c769b4871dc", "message": "Fix TryLocalPeek", "committedDate": "2020-02-24T10:30:24Z", "type": "commit"}, {"oid": "d9886eb6f7f7538bc5120edac6bae1e702d9cdfc", "url": "https://github.com/gridgain/gridgain/commit/d9886eb6f7f7538bc5120edac6bae1e702d9cdfc", "message": "Add callback on primary key init", "committedDate": "2020-02-24T11:32:39Z", "type": "commit"}, {"oid": "8b34b42742325c3554771a0344cab3e33d12b41f", "url": "https://github.com/gridgain/gridgain/commit/8b34b42742325c3554771a0344cab3e33d12b41f", "message": "Notes on failing test", "committedDate": "2020-02-24T11:40:22Z", "type": "commit"}, {"oid": "dd01b5fa25bf06c6cf046b3660019369efdf8999", "url": "https://github.com/gridgain/gridgain/commit/dd01b5fa25bf06c6cf046b3660019369efdf8999", "message": "Add TestPrimaryKeyOnServerNodeIsAddedToNearCacheAfterRemotePut test", "committedDate": "2020-02-25T10:48:51Z", "type": "commit"}, {"oid": "fb71a4d9c748cd34d43a39918255f14cea051356", "url": "https://github.com/gridgain/gridgain/commit/fb71a4d9c748cd34d43a39918255f14cea051356", "message": "Add TestPrimaryKeyOnServerNodeIsAddedToNearCacheAfterRemotePut test", "committedDate": "2020-02-25T10:58:32Z", "type": "commit"}, {"oid": "d1303cf09b465031a5cd4806c0ee5b260389efb3", "url": "https://github.com/gridgain/gridgain/commit/d1303cf09b465031a5cd4806c0ee5b260389efb3", "message": "Add TestPrimaryKeyOnServerNodeIsAddedToNearCacheAfterRemotePut test", "committedDate": "2020-02-25T11:01:23Z", "type": "commit"}, {"oid": "f4c0c73dd8440ee65a482c487859047a86c673d4", "url": "https://github.com/gridgain/gridgain/commit/f4c0c73dd8440ee65a482c487859047a86c673d4", "message": "Fix TestPrimaryNodeChangeClearsNearCacheDataOnServer - check if key is primary and topology has not changed from last ver", "committedDate": "2020-02-25T20:02:04Z", "type": "commit"}, {"oid": "58b7c7e1601a517d17bff49d23a0304b8a4652da", "url": "https://github.com/gridgain/gridgain/commit/58b7c7e1601a517d17bff49d23a0304b8a4652da", "message": "Adding comments", "committedDate": "2020-02-26T07:36:44Z", "type": "commit"}, {"oid": "3a0e476d0a5bc582e6a98ff31ee48fe2ad5a36b1", "url": "https://github.com/gridgain/gridgain/commit/3a0e476d0a5bc582e6a98ff31ee48fe2ad5a36b1", "message": "Enable near: GetAllAsync", "committedDate": "2020-02-26T15:27:25Z", "type": "commit"}, {"oid": "afe4d03221b884e9d680bc31bc6184387bed0f69", "url": "https://github.com/gridgain/gridgain/commit/afe4d03221b884e9d680bc31bc6184387bed0f69", "message": "Enable near: GetAllAsync", "committedDate": "2020-02-26T15:29:42Z", "type": "commit"}, {"oid": "c0a40226be3d6855e5dcbfa96030e3b064e7bc79", "url": "https://github.com/gridgain/gridgain/commit/c0a40226be3d6855e5dcbfa96030e3b064e7bc79", "message": "Fix GetAllAsync corrupted write", "committedDate": "2020-02-26T18:43:11Z", "type": "commit"}, {"oid": "3bb51d1dd0e78b131cb948f93d6ed62a65ea0031", "url": "https://github.com/gridgain/gridgain/commit/3bb51d1dd0e78b131cb948f93d6ed62a65ea0031", "message": "Implement correct local size: sum native near size with the rest", "committedDate": "2020-02-27T07:50:49Z", "type": "commit"}, {"oid": "7837acc4993507627c826a26a434ef7d4c35c2ae", "url": "https://github.com/gridgain/gridgain/commit/7837acc4993507627c826a26a434ef7d4c35c2ae", "message": "Implement correct local size: sum native near size with the rest", "committedDate": "2020-02-27T07:51:44Z", "type": "commit"}, {"oid": "ae3b4b445aed462abc496308902c569a4c7ea247", "url": "https://github.com/gridgain/gridgain/commit/ae3b4b445aed462abc496308902c569a4c7ea247", "message": "Implement correct local long size: sum native near size with the rest", "committedDate": "2020-02-27T07:54:03Z", "type": "commit"}, {"oid": "61b9e3769df7aad5a4fbc9f2a86d7e3e8e992a44", "url": "https://github.com/gridgain/gridgain/commit/61b9e3769df7aad5a4fbc9f2a86d7e3e8e992a44", "message": "Implementing correct local size", "committedDate": "2020-02-27T08:01:43Z", "type": "commit"}, {"oid": "bbdb64035c48fcc6058aa49ee090bf9b3e79430a", "url": "https://github.com/gridgain/gridgain/commit/bbdb64035c48fcc6058aa49ee090bf9b3e79430a", "message": "Implementing correct local size", "committedDate": "2020-02-27T08:08:25Z", "type": "commit"}, {"oid": "ac5589a957a339e08d4d38bdd7a6efd412d3055d", "url": "https://github.com/gridgain/gridgain/commit/ac5589a957a339e08d4d38bdd7a6efd412d3055d", "message": "Adding tests for Size", "committedDate": "2020-02-27T08:17:52Z", "type": "commit"}, {"oid": "fac249d2297f7f254379a3584594ca47290e3919", "url": "https://github.com/gridgain/gridgain/commit/fac249d2297f7f254379a3584594ca47290e3919", "message": "TestGetSizeWithNativeNearModeThrows added", "committedDate": "2020-02-27T08:25:40Z", "type": "commit"}, {"oid": "0fcfdf436a6ea5f74679deeca81b1f768943aaa6", "url": "https://github.com/gridgain/gridgain/commit/0fcfdf436a6ea5f74679deeca81b1f768943aaa6", "message": "Fix EncodePeekModes", "committedDate": "2020-02-27T08:49:07Z", "type": "commit"}, {"oid": "9ded4008caf898cb2e7bb0707754fc479058cd83", "url": "https://github.com/gridgain/gridgain/commit/9ded4008caf898cb2e7bb0707754fc479058cd83", "message": "Add         public void TestGetLocalSizeClient()", "committedDate": "2020-02-27T09:00:27Z", "type": "commit"}, {"oid": "f62e4e0a92b8e0fc6d4a58043e44c9436903ab7f", "url": "https://github.com/gridgain/gridgain/commit/f62e4e0a92b8e0fc6d4a58043e44c9436903ab7f", "message": "Adding IgniteUtilsTest", "committedDate": "2020-02-27T09:07:20Z", "type": "commit"}, {"oid": "2490be2f5353caac2cc084fac52f749722a7e882", "url": "https://github.com/gridgain/gridgain/commit/2490be2f5353caac2cc084fac52f749722a7e882", "message": "Adding IgniteUtilsTest", "committedDate": "2020-02-27T09:17:48Z", "type": "commit"}, {"oid": "4db99aec106a73cf3c07ab4ad94c6df82e5105fc", "url": "https://github.com/gridgain/gridgain/commit/4db99aec106a73cf3c07ab4ad94c6df82e5105fc", "message": "Adding LocalSize tests", "committedDate": "2020-02-27T09:20:52Z", "type": "commit"}, {"oid": "05427c0845f940cdbf3659938778e49613164ce2", "url": "https://github.com/gridgain/gridgain/commit/05427c0845f940cdbf3659938778e49613164ce2", "message": "Update old comments", "committedDate": "2020-02-27T09:42:56Z", "type": "commit"}, {"oid": "fa5dbbf553b4ce5af9ffd315450906a266ba277c", "url": "https://github.com/gridgain/gridgain/commit/fa5dbbf553b4ce5af9ffd315450906a266ba277c", "message": "TODOs", "committedDate": "2020-02-27T09:47:25Z", "type": "commit"}, {"oid": "498e7734039380d9f72946709281d9d56e8b8952", "url": "https://github.com/gridgain/gridgain/commit/498e7734039380d9f72946709281d9d56e8b8952", "message": "Adding GetLocalSize tests", "committedDate": "2020-02-27T10:04:12Z", "type": "commit"}, {"oid": "5d28c718ea8ca7a0a31825ff0c73b0b152082920", "url": "https://github.com/gridgain/gridgain/commit/5d28c718ea8ca7a0a31825ff0c73b0b152082920", "message": "Adding GetLocalSize tests", "committedDate": "2020-02-27T11:17:46Z", "type": "commit"}, {"oid": "2064baae6766d612f665da3ec36e92fb4df0e9f8", "url": "https://github.com/gridgain/gridgain/commit/2064baae6766d612f665da3ec36e92fb4df0e9f8", "message": "TODOs", "committedDate": "2020-02-27T12:16:19Z", "type": "commit"}, {"oid": "aaddb9c027c688fdde32d7b77026f118a88d0d94", "url": "https://github.com/gridgain/gridgain/commit/aaddb9c027c688fdde32d7b77026f118a88d0d94", "message": "Fix tests", "committedDate": "2020-02-27T12:32:40Z", "type": "commit"}, {"oid": "ec65f5ef73038537141aeb8c5d7cc51a00c48d84", "url": "https://github.com/gridgain/gridgain/commit/ec65f5ef73038537141aeb8c5d7cc51a00c48d84", "message": "Cleanup", "committedDate": "2020-02-27T12:35:12Z", "type": "commit"}, {"oid": "3295d03e62ab1aa8406c7f0b46c23cfe2a8d9b7a", "url": "https://github.com/gridgain/gridgain/commit/3295d03e62ab1aa8406c7f0b46c23cfe2a8d9b7a", "message": "Cleanup: remove helper methods from NearCache to simplify interface", "committedDate": "2020-02-27T14:12:31Z", "type": "commit"}, {"oid": "8d55667dcf85e6ab2ccf599937a25a3b484292e8", "url": "https://github.com/gridgain/gridgain/commit/8d55667dcf85e6ab2ccf599937a25a3b484292e8", "message": "Cleanup: remove helper methods from NearCache to simplify interface", "committedDate": "2020-02-27T14:21:30Z", "type": "commit"}, {"oid": "5bddb87a3e1bf19093c15c70016209c3d38d4174", "url": "https://github.com/gridgain/gridgain/commit/5bddb87a3e1bf19093c15c70016209c3d38d4174", "message": "Improve perf for GetAll when all keys are in near", "committedDate": "2020-02-27T14:52:45Z", "type": "commit"}, {"oid": "cd287636869dd883c47f62e1bea5a7c5b15c6aff", "url": "https://github.com/gridgain/gridgain/commit/cd287636869dd883c47f62e1bea5a7c5b15c6aff", "message": "Improve perf for GetAll when all keys are in near", "committedDate": "2020-02-27T14:58:34Z", "type": "commit"}, {"oid": "a1c62a4d80c4ba660e3139af7a3fc0cfcde93991", "url": "https://github.com/gridgain/gridgain/commit/a1c62a4d80c4ba660e3139af7a3fc0cfcde93991", "message": "Fix GetAll perf with Near Cache", "committedDate": "2020-02-28T14:23:29Z", "type": "commit"}, {"oid": "1ca030055fadcacb159cf82b1b3afb6b00399e6d", "url": "https://github.com/gridgain/gridgain/commit/1ca030055fadcacb159cf82b1b3afb6b00399e6d", "message": "Fix GetAll perf with Near Cache", "committedDate": "2020-02-28T16:00:29Z", "type": "commit"}, {"oid": "d6d81fda6c5d67b33b3def755e379dbf3eef2bfd", "url": "https://github.com/gridgain/gridgain/commit/d6d81fda6c5d67b33b3def755e379dbf3eef2bfd", "message": "Fix GetAll perf with Near Cache", "committedDate": "2020-02-28T16:17:40Z", "type": "commit"}, {"oid": "3a96aff5a4ff72a4f80e6a90a881c598ada3f297", "url": "https://github.com/gridgain/gridgain/commit/3a96aff5a4ff72a4f80e6a90a881c598ada3f297", "message": "TODOs", "committedDate": "2020-03-01T08:13:45Z", "type": "commit"}, {"oid": "0543d2d37eb8f4b10b03f92c21c1daa6fd98134e", "url": "https://github.com/gridgain/gridgain/commit/0543d2d37eb8f4b10b03f92c21c1daa6fd98134e", "message": "Do not allow benchmarks in Debug mode", "committedDate": "2020-03-05T10:36:11Z", "type": "commit"}, {"oid": "a7d021802f36c524b3ab0df2bbc3ca140265d63c", "url": "https://github.com/gridgain/gridgain/commit/a7d021802f36c524b3ab0df2bbc3ca140265d63c", "message": "Add TestNearCachingReplicated (failing)", "committedDate": "2020-03-07T14:09:11Z", "type": "commit"}, {"oid": "cc2293e3fdfb70002d755d81a3fbafdee9ed4a42", "url": "https://github.com/gridgain/gridgain/commit/cc2293e3fdfb70002d755d81a3fbafdee9ed4a42", "message": "Move NearCacheConfiguration.platformNearConfiguration to CacheConfiguration.platformNearConfiguration to be able to configure independently", "committedDate": "2020-03-07T14:28:33Z", "type": "commit"}, {"oid": "1228c7234c3d8984a7c36582de4cfaa49144dd0d", "url": "https://github.com/gridgain/gridgain/commit/1228c7234c3d8984a7c36582de4cfaa49144dd0d", "message": "Move NearCacheConfiguration.platformNearConfiguration to CacheConfiguration.platformNearConfiguration to be able to configure independently", "committedDate": "2020-03-07T14:45:29Z", "type": "commit"}, {"oid": "1e765bbe2c59471056f41d108ff07a5a5d69ab66", "url": "https://github.com/gridgain/gridgain/commit/1e765bbe2c59471056f41d108ff07a5a5d69ab66", "message": "Move NearCacheConfiguration.platformNearConfiguration to CacheConfiguration.platformNearConfiguration to be able to configure independently", "committedDate": "2020-03-07T14:53:33Z", "type": "commit"}, {"oid": "b58d9bcc07ae09cb9a05739e489293afabfc07c7", "url": "https://github.com/gridgain/gridgain/commit/b58d9bcc07ae09cb9a05739e489293afabfc07c7", "message": "TestNearCachingReplicated done", "committedDate": "2020-03-07T15:02:08Z", "type": "commit"}, {"oid": "a49b927ddbbe6947c130c8d46a10b7f6ab4cc7ac", "url": "https://github.com/gridgain/gridgain/commit/a49b927ddbbe6947c130c8d46a10b7f6ab4cc7ac", "message": "Add TestClientOnlyPlatformNearCache", "committedDate": "2020-03-07T15:24:46Z", "type": "commit"}, {"oid": "b0002869ed32a126863d3afe8817ed251e42c3f6", "url": "https://github.com/gridgain/gridgain/commit/b0002869ed32a126863d3afe8817ed251e42c3f6", "message": "Implement ContainsKeys with Near", "committedDate": "2020-03-07T16:09:20Z", "type": "commit"}, {"oid": "1433d612fe8ff6cb00edb301c6bc02d549f89f55", "url": "https://github.com/gridgain/gridgain/commit/1433d612fe8ff6cb00edb301c6bc02d549f89f55", "message": "Add TestContainsKey", "committedDate": "2020-03-07T16:14:43Z", "type": "commit"}, {"oid": "a0e261a0a77a373fc1adc172379c617ef9a9b290", "url": "https://github.com/gridgain/gridgain/commit/a0e261a0a77a373fc1adc172379c617ef9a9b290", "message": "Add TestContainsKeys", "committedDate": "2020-03-07T16:18:23Z", "type": "commit"}, {"oid": "638725657c464553641a0fc480584e6949d5514f", "url": "https://github.com/gridgain/gridgain/commit/638725657c464553641a0fc480584e6949d5514f", "message": "Implement ContainsKeysAsync with Near", "committedDate": "2020-03-07T16:22:29Z", "type": "commit"}, {"oid": "52a2c591b20ed282225dceecd3570546c440d9c6", "url": "https://github.com/gridgain/gridgain/commit/52a2c591b20ed282225dceecd3570546c440d9c6", "message": "Add TestContainsKeys", "committedDate": "2020-03-07T16:26:29Z", "type": "commit"}, {"oid": "54c9aa0f45922819b33f1663f4eb9aeddd2acf1e", "url": "https://github.com/gridgain/gridgain/commit/54c9aa0f45922819b33f1663f4eb9aeddd2acf1e", "message": "Implementing thread-local optimization for primary key Put", "committedDate": "2020-03-07T17:23:39Z", "type": "commit"}, {"oid": "f2d13d042129b7aa9728278a95b8b4b0aad56bd2", "url": "https://github.com/gridgain/gridgain/commit/f2d13d042129b7aa9728278a95b8b4b0aad56bd2", "message": "Implementing thread-local optimization for primary key Put", "committedDate": "2020-03-07T17:51:22Z", "type": "commit"}, {"oid": "3bdcc4ceb7bf0bdc09db62317357bdb5efe676f6", "url": "https://github.com/gridgain/gridgain/commit/3bdcc4ceb7bf0bdc09db62317357bdb5efe676f6", "message": "Implementing thread-local optimization for primary key Put - update bench", "committedDate": "2020-03-07T17:55:07Z", "type": "commit"}, {"oid": "643e9246712cb64b5b25cf13cd9f06b1e6b7d6cd", "url": "https://github.com/gridgain/gridgain/commit/643e9246712cb64b5b25cf13cd9f06b1e6b7d6cd", "message": "Implementing thread-local optimization for primary key Put - use separate call for ThreadLocal update to reduce allocations and simplify logic", "committedDate": "2020-03-07T18:46:47Z", "type": "commit"}, {"oid": "ea18d58040d9eb6cae1b343d7ac8ffc72b36f313", "url": "https://github.com/gridgain/gridgain/commit/ea18d58040d9eb6cae1b343d7ac8ffc72b36f313", "message": "Add CreateNearCache overloads with PlatformNearCacheConfiguration for dynamic start", "committedDate": "2020-03-08T18:19:14Z", "type": "commit"}, {"oid": "f415a5c1695e9d8056751a70ac099a774e980068", "url": "https://github.com/gridgain/gridgain/commit/f415a5c1695e9d8056751a70ac099a774e980068", "message": "Update tests", "committedDate": "2020-03-08T18:32:09Z", "type": "commit"}, {"oid": "8973f17583880ffba9b2496c705854b452009e14", "url": "https://github.com/gridgain/gridgain/commit/8973f17583880ffba9b2496c705854b452009e14", "message": "Update tests", "committedDate": "2020-03-08T18:36:52Z", "type": "commit"}, {"oid": "4f440300f502d0f8386ff93b5ec49c4f2e98cb03", "url": "https://github.com/gridgain/gridgain/commit/4f440300f502d0f8386ff93b5ec49c4f2e98cb03", "message": "Update tests", "committedDate": "2020-03-08T18:39:38Z", "type": "commit"}, {"oid": "be0b983cbf6c69f125e967fcd155594f7510580d", "url": "https://github.com/gridgain/gridgain/commit/be0b983cbf6c69f125e967fcd155594f7510580d", "message": "Implement GetLocalEntries, rename NativeNear -> PlatformNear", "committedDate": "2020-03-09T16:18:45Z", "type": "commit"}, {"oid": "9d3712e24f39134e35b54d0d49bbe638be918768", "url": "https://github.com/gridgain/gridgain/commit/9d3712e24f39134e35b54d0d49bbe638be918768", "message": "Implement GetLocalEntries, rename NativeNear -> PlatformNear", "committedDate": "2020-03-09T16:27:33Z", "type": "commit"}, {"oid": "36e379d6d34573d799f48e94a08c0d181c118944", "url": "https://github.com/gridgain/gridgain/commit/36e379d6d34573d799f48e94a08c0d181c118944", "message": "Fix tests", "committedDate": "2020-03-09T16:34:53Z", "type": "commit"}, {"oid": "2e4bf6acd985d2dd7ab6f2e3b93a69db953b9de3", "url": "https://github.com/gridgain/gridgain/commit/2e4bf6acd985d2dd7ab6f2e3b93a69db953b9de3", "message": "Adding tests: TestGetLocalEntriesNearOnly", "committedDate": "2020-03-09T16:42:44Z", "type": "commit"}, {"oid": "598a37a869de64b5183e3dcd5c6ed39c3b09a43c", "url": "https://github.com/gridgain/gridgain/commit/598a37a869de64b5183e3dcd5c6ed39c3b09a43c", "message": "Adding tests: TestGetLocalEntriesCombinedModes", "committedDate": "2020-03-09T17:03:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2OTA1NQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r393369055", "bodyText": "From my understanding, it allows native cache configuration from the Java part, but do we really need this feature?", "author": "ashapkin", "createdAt": "2020-03-16T23:37:54Z", "path": "modules/core/src/main/java/org/apache/ignite/configuration/PlatformNearCacheConfiguration.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.configuration;\n+\n+import org.apache.ignite.internal.util.typedef.internal.S;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Platform near cache configuration.\n+ * <p>\n+ * Additional near caching mechanism on platform side (.NET).\n+ */\n+public class PlatformNearCacheConfiguration implements Serializable {", "originalCommit": "598a37a869de64b5183e3dcd5c6ed39c3b09a43c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1OTIwOQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394059209", "bodyText": "Why not? To me it looks like a good idea to allow user to configure this from xml.", "author": "isapego", "createdAt": "2020-03-18T01:30:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2OTA1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg3NTUxOQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394875519", "bodyText": "Agree with @isapego . Another thing is that we can't (trivially) avoid this, because configuration needs to be sent across entire cluster, so this has to be a part of CacheConfiguration.\nRelevant dev list thread: http://apache-ignite-developers.2346864.n4.nabble.com/NET-Near-Cache-new-flag-in-NearCacheConfiguration-java-td45961.html", "author": "ptupitsyn", "createdAt": "2020-03-19T08:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2OTA1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4Mjk2MQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r393382961", "bodyText": "You mentioned no-boxing approach, am I missing something?\nCan't we introduce another generic interface INearCache<T, V>?", "author": "ashapkin", "createdAt": "2020-03-17T00:32:19Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Cache/Near/NearCache.cs", "diffHunk": "@@ -0,0 +1,261 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Impl.Cache.Near\n+{\n+    using System;\n+    using System.Collections.Concurrent;\n+    using System.Collections.Generic;\n+    using System.Diagnostics;\n+    using Apache.Ignite.Core.Cache;\n+    using Apache.Ignite.Core.Cache.Affinity;\n+    using Apache.Ignite.Core.Impl.Binary;\n+    using Apache.Ignite.Core.Impl.Binary.IO;\n+\n+    /// <summary>\n+    /// Holds near cache data for a given cache, serves one or more <see cref=\"CacheImpl{TK,TV}\"/> instances.\n+    /// </summary>\n+    internal sealed class NearCache<TK, TV> : INearCache\n+    {\n+        /** Affinity. */\n+        private readonly CacheAffinityImpl _affinity;\n+        \n+        /** Keep binary flag. */\n+        private readonly bool _keepBinary;\n+\n+        /** Topology version func. Returns boxed <see cref=\"AffinityTopologyVersion\"/>.\n+         * Boxed copy is passed directly to <see cref=\"NearCacheEntry{T}\"/>, avoiding extra allocations.\n+         * This way for every unique <see cref=\"AffinityTopologyVersion\"/> we only have one boxed copy,\n+         * and we can update <see cref=\"NearCacheEntry{T}.Version\"/> atomically without locks. */\n+        private readonly Func<object> _affinityTopologyVersionFunc;\n+\n+        /** Underlying map. */\n+        private readonly ConcurrentDictionary<TK, NearCacheEntry<TV>> _map = \n+            new ConcurrentDictionary<TK, NearCacheEntry<TV>>();\n+\n+        /** Stopped flag. */\n+        private volatile bool _stopped;\n+\n+        /// <summary>\n+        /// Initializes a new instance of the <see cref=\"NearCache{TK, TV}\"/> class.\n+        /// Called via reflection from <see cref=\"NearCacheManager.CreateNearCache\"/>. \n+        /// </summary>\n+        public NearCache(Func<object> affinityTopologyVersionFunc, CacheAffinityImpl affinity, bool keepBinary)\n+        {\n+            _affinityTopologyVersionFunc = affinityTopologyVersionFunc;\n+            _affinity = affinity;\n+            _keepBinary = keepBinary;\n+        }\n+\n+        /** <inheritdoc /> */\n+        public bool IsStopped\n+        {\n+            get { return _stopped; }\n+        }\n+\n+        public bool TryGetValue<TKey, TVal>(TKey key, out TVal val)\n+        {\n+            if (_stopped)\n+            {\n+                val = default(TVal);\n+                return false;\n+            }\n+\n+            NearCacheEntry<TV> entry;\n+            var key0 = (TK) (object) key;\n+            \n+            if (_map.TryGetValue(key0, out entry))\n+            {\n+                if (IsValid(entry))\n+                {\n+                    val = (TVal) (object) entry.Value;", "originalCommit": "598a37a869de64b5183e3dcd5c6ed39c3b09a43c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg4MTgyMg==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394881822", "bodyText": "Yes, I mentioned no-boxing approach regarding _map when proper types are specified in PlatformNearCacheConfiguration.\nThis line is just a cast from TV to TVal, which can't be done any other way. Previously we used TypeCaster class to avoid boxing in such cases (see usages), and it was proved to be better on .NET 4. However, this is no longer the case on .NET Core:\nRuntime=.NET Core 3.1  \n\n|     Method |      Mean |     Error |    StdDev | Gen 0 | Gen 1 | Gen 2 | Allocated |\n|----------- |----------:|----------:|----------:|------:|------:|------:|----------:|\n| TypeCaster | 1.5402 ns | 0.0138 ns | 0.0122 ns |     - |     - |     - |         - |\n| ObjectCast | 0.0284 ns | 0.0098 ns | 0.0087 ns |     - |     - |     - |         - |\n\n(source: https://github.com/ptupitsyn/IgniteNetBenchmarks/blob/master/CasterBenchmark.cs)\nAs you can see, such a cast is optimized by JIT, there are zero allocations, and it is faster than TypeCaster.\n(There is a ticket to get rid of TypeCaster: https://issues.apache.org/jira/browse/IGNITE-12699)", "author": "ptupitsyn", "createdAt": "2020-03-19T09:11:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4Mjk2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4NzcyMg==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r393387722", "bodyText": "Sry for possible question duplicate, can't we set a callback for this affinity changes directly from the Java side? Or this will downgrade the performance?", "author": "ashapkin", "createdAt": "2020-03-17T00:51:08Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Cache/Near/NearCache.cs", "diffHunk": "@@ -0,0 +1,261 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Impl.Cache.Near\n+{\n+    using System;\n+    using System.Collections.Concurrent;\n+    using System.Collections.Generic;\n+    using System.Diagnostics;\n+    using Apache.Ignite.Core.Cache;\n+    using Apache.Ignite.Core.Cache.Affinity;\n+    using Apache.Ignite.Core.Impl.Binary;\n+    using Apache.Ignite.Core.Impl.Binary.IO;\n+\n+    /// <summary>\n+    /// Holds near cache data for a given cache, serves one or more <see cref=\"CacheImpl{TK,TV}\"/> instances.\n+    /// </summary>\n+    internal sealed class NearCache<TK, TV> : INearCache\n+    {\n+        /** Affinity. */\n+        private readonly CacheAffinityImpl _affinity;\n+        \n+        /** Keep binary flag. */\n+        private readonly bool _keepBinary;\n+\n+        /** Topology version func. Returns boxed <see cref=\"AffinityTopologyVersion\"/>.\n+         * Boxed copy is passed directly to <see cref=\"NearCacheEntry{T}\"/>, avoiding extra allocations.\n+         * This way for every unique <see cref=\"AffinityTopologyVersion\"/> we only have one boxed copy,\n+         * and we can update <see cref=\"NearCacheEntry{T}.Version\"/> atomically without locks. */\n+        private readonly Func<object> _affinityTopologyVersionFunc;\n+\n+        /** Underlying map. */\n+        private readonly ConcurrentDictionary<TK, NearCacheEntry<TV>> _map = \n+            new ConcurrentDictionary<TK, NearCacheEntry<TV>>();\n+\n+        /** Stopped flag. */\n+        private volatile bool _stopped;\n+\n+        /// <summary>\n+        /// Initializes a new instance of the <see cref=\"NearCache{TK, TV}\"/> class.\n+        /// Called via reflection from <see cref=\"NearCacheManager.CreateNearCache\"/>. \n+        /// </summary>\n+        public NearCache(Func<object> affinityTopologyVersionFunc, CacheAffinityImpl affinity, bool keepBinary)\n+        {\n+            _affinityTopologyVersionFunc = affinityTopologyVersionFunc;\n+            _affinity = affinity;\n+            _keepBinary = keepBinary;\n+        }\n+\n+        /** <inheritdoc /> */\n+        public bool IsStopped\n+        {\n+            get { return _stopped; }\n+        }\n+\n+        public bool TryGetValue<TKey, TVal>(TKey key, out TVal val)\n+        {\n+            if (_stopped)\n+            {\n+                val = default(TVal);\n+                return false;\n+            }\n+\n+            NearCacheEntry<TV> entry;\n+            var key0 = (TK) (object) key;\n+            \n+            if (_map.TryGetValue(key0, out entry))\n+            {\n+                if (IsValid(entry))\n+                {\n+                    val = (TVal) (object) entry.Value;\n+                    return true;\n+                }\n+\n+                // Remove invalid entry to free up memory.\n+                // NOTE: We may end up removing a good entry that was inserted concurrently,\n+                // but this does not violate correctness, only causes a potential near cache miss.\n+                _map.TryRemove(key0, out entry);\n+            }\n+\n+            val = default(TVal);\n+            return false;\n+        }\n+\n+        /** <inheritdoc /> */\n+        public int GetSize()\n+        {\n+            if (_stopped)\n+            {\n+                return 0;\n+            }\n+\n+            var count = 0;\n+            \n+            foreach (var e in _map)\n+            {\n+                if (IsValid(e.Value))\n+                {\n+                    count++;\n+                }\n+            }\n+\n+            return count;\n+        }\n+\n+        /** <inheritdoc /> */\n+        public void Update(IBinaryStream stream, Marshaller marshaller)\n+        {\n+            Debug.Assert(stream != null);\n+            Debug.Assert(marshaller != null);\n+\n+            if (_stopped)\n+            {\n+                return;\n+            }\n+\n+            var mode = _keepBinary ? BinaryMode.ForceBinary : BinaryMode.Deserialize;\n+            var reader = marshaller.StartUnmarshal(stream, mode);\n+\n+            var key = reader.ReadObject<TK>();\n+            var hasVal = stream.ReadBool();\n+\n+            if (hasVal)\n+            {\n+                var val = reader.ReadObject<TV>();\n+                var part = stream.ReadInt();\n+                var ver = new AffinityTopologyVersion(stream.ReadLong(), stream.ReadInt());\n+\n+                _map[key] = new NearCacheEntry<TV>(val, GetBoxedAffinityTopologyVersion(ver), part);\n+            }\n+            else\n+            {\n+                NearCacheEntry<TV> unused;\n+                _map.TryRemove(key, out unused);\n+            }\n+        }\n+\n+        /** <inheritdoc /> */\n+        public void UpdateFromThreadLocal(int partition, AffinityTopologyVersion affinityTopologyVersion)\n+        {\n+            if (_stopped)\n+            {\n+                return;\n+            }\n+\n+            var pair = (KeyValuePair<TK, TV>) NearCacheManager.ThreadLocalPair.Value;\n+\n+            _map[pair.Key] = new NearCacheEntry<TV>(\n+                pair.Value,\n+                GetBoxedAffinityTopologyVersion(affinityTopologyVersion),\n+                partition);\n+        }\n+\n+        /** <inheritdoc /> */\n+        public void Stop()\n+        {\n+            _stopped = true;\n+            Clear();\n+        }\n+        \n+        /** <inheritdoc /> */\n+        public void Clear()\n+        {\n+            _map.Clear();\n+        }\n+\n+        /** <inheritdoc /> */\n+        public void SetThreadLocalPair<TKey, TVal>(TKey key, TVal val)\n+        {\n+            NearCacheManager.ThreadLocalPair.Value = new KeyValuePair<TK, TV>((TK) (object) key, (TV) (object) val);\n+        }\n+\n+        /** <inheritdoc /> */\n+        public void ResetThreadLocalPair()\n+        {\n+            NearCacheManager.ThreadLocalPair.Value = null;\n+        }\n+\n+        /** <inheritdoc /> */\n+        public IEnumerable<ICacheEntry<TKey, TVal>> GetEntries<TKey, TVal>()\n+        {\n+            if (_stopped)\n+            {\n+                yield break;\n+            }\n+\n+            foreach (var entry in _map)\n+            {\n+                yield return new CacheEntry<TKey, TVal>((TKey) (object) entry.Key, (TVal) (object) entry.Value.Value);\n+            }\n+        }\n+\n+        /// <summary>\n+        /// Checks whether specified cache entry is still valid, based on Affinity Topology Version.\n+        /// When primary node changes for a key, GridNearCacheEntry stops receiving updates for that key,\n+        /// because reader (\"subscription\") on new primary is not yet established.\n+        /// <para />\n+        /// This method is similar to GridNearCacheEntry.valid(). \n+        /// </summary>\n+        /// <param name=\"entry\">Entry to validate.</param>\n+        /// <typeparam name=\"TVal\">Value type.</typeparam>\n+        /// <returns>True if entry is valid and can be returned to the user; false otherwise.</returns>\n+        private bool IsValid<TVal>(NearCacheEntry<TVal> entry)\n+        {\n+            // See comments on _affinityTopologyVersionFunc about boxed copy approach. \n+            var currentVerBoxed = _affinityTopologyVersionFunc();\n+            var entryVerBoxed = entry.Version;\n+            \n+            Debug.Assert(currentVerBoxed != null);\n+            \n+            if (ReferenceEquals(currentVerBoxed, entryVerBoxed))\n+            {\n+                // Happy path: true on stable topology.\n+                return true;\n+            }\n+\n+            if (entryVerBoxed == null)\n+            {\n+                return false;\n+            }\n+\n+            var entryVer = (AffinityTopologyVersion) entryVerBoxed;\n+            var currentVer = (AffinityTopologyVersion) currentVerBoxed;\n+\n+            if (entryVer >= currentVer)\n+            {\n+                return true;\n+            }\n+\n+            var part = entry.Partition;\n+            var valid = _affinity.IsAssignmentValid(entryVer, part);\n+\n+            // Update version or mark as invalid (null).", "originalCommit": "598a37a869de64b5183e3dcd5c6ed39c3b09a43c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg4NTc1MA==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394885750", "bodyText": "Unfortunately, we can't. Because nothing is invoked on Java side in this case. What happens is:\n\nAffinity topology version changes (node enters or leaves, etc)\nGridNearCacheEntry becomes effectively invalid, because updates are no longer received (primary node changed for the key).\nData becomes stale, but nothing is being done until user requests this entry\nWhen user calls cache.Get, GridNearCacheEntry.valid() is called, invalid entry is detected, etc\n\nSo we have to have the same valid() check on .NET side to avoid calling Java on every Get", "author": "ptupitsyn", "createdAt": "2020-03-19T09:18:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4NzcyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5MzM2OQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r393393369", "bodyText": "FYI: Could hit performance, customers could use a thick client for health checking instead of a thin one", "author": "ashapkin", "createdAt": "2020-03-17T01:14:48Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Cache/Near/NearCacheManager.cs", "diffHunk": "@@ -0,0 +1,193 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+namespace Apache.Ignite.Core.Impl.Cache.Near\n+{\n+    using System;\n+    using System.Diagnostics;\n+    using System.Threading;\n+    using Apache.Ignite.Core.Cache.Affinity;\n+    using Apache.Ignite.Core.Cache.Configuration;\n+    using Apache.Ignite.Core.Impl.Binary;\n+    using Apache.Ignite.Core.Impl.Binary.IO;\n+    using Apache.Ignite.Core.Impl.Common;\n+\n+    /// <summary>\n+    /// Manages <see cref=\"NearCache{TK,TV}\"/> instances.\n+    /// Multiple <see cref=\"CacheImpl{TK,TV}\"/> instances can exist for a given cache, and all of them share the same\n+    /// <see cref=\"NearCache{TK,TV}\"/> instance.\n+    /// </summary>\n+    [DebuggerDisplay(\"NearCacheManager [IgniteInstanceName={_ignite.GetIgnite().Name}]\")]\n+    internal class NearCacheManager\n+    {\n+        /// <summary>\n+        /// Holds thread-local key/val pair to be used for updating Near Cache .\n+        /// </summary>\n+        internal static readonly ThreadLocal<object> ThreadLocalPair = new ThreadLocal<object>();\n+        \n+        /// <summary>\n+        /// Near caches per cache id.\n+        /// Multiple <see cref=\"CacheImpl{TK,TV}\"/> instances can point to the same Ignite cache,\n+        /// and share one <see cref=\"NearCache{TK,TV}\"/> instance. \n+        /// </summary> \n+        private readonly CopyOnWriteConcurrentDictionary<int, INearCache> _nearCaches\n+            = new CopyOnWriteConcurrentDictionary<int, INearCache>();\n+\n+        /// <summary>\n+        /// Ignite.\n+        /// </summary>\n+        private readonly IIgniteInternal _ignite;\n+\n+        /// <summary>\n+        /// Current topology version. Store as object for atomic updates.\n+        /// </summary>\n+        private volatile object _affinityTopologyVersion;\n+        \n+        /// <summary>\n+        /// Initializes a new instance of the <see cref=\"NearCacheManager\"/> class. \n+        /// </summary>\n+        /// <param name=\"ignite\">Ignite.</param>\n+        public NearCacheManager(IIgniteInternal ignite)\n+        {\n+            Debug.Assert(ignite != null);\n+\n+            _ignite = ignite;\n+            _ignite.GetIgnite().ClientDisconnected += OnClientDisconnected;\n+        }\n+\n+        /// <summary>\n+        /// Gets or creates the near cache.\n+        /// </summary>\n+        public INearCache GetOrCreateNearCache(CacheConfiguration cacheConfiguration)\n+        {\n+            Debug.Assert(cacheConfiguration != null);\n+\n+            var cacheId = BinaryUtils.GetCacheId(cacheConfiguration.Name);\n+            \n+            return _nearCaches.GetOrAdd(cacheId, _ => CreateNearCache(cacheConfiguration));\n+        }\n+\n+        /// <summary>\n+        /// Gets near cache when it exists.\n+        /// </summary>\n+        public INearCache TryGetNearCache(int cacheId)\n+        {\n+            INearCache nearCache;\n+            return _nearCaches.TryGetValue(cacheId, out nearCache) ? nearCache : null;\n+        }\n+        \n+        /// <summary>\n+        /// Reads cache entry from a stream and updates the near cache.\n+        /// </summary>\n+        public void Update(int cacheId, IBinaryStream stream, Marshaller marshaller)\n+        {\n+            var nearCache = _nearCaches.GetOrAdd(cacheId, \n+                _ => CreateNearCache(_ignite.GetCacheConfiguration(cacheId)));\n+            \n+            nearCache.Update(stream, marshaller);\n+        }\n+\n+        /// <summary>\n+        /// Updates near cache from <see cref=\"ThreadLocalPair\"/>.\n+        /// </summary>\n+        public void UpdateFromThreadLocal(int cacheId, int partition, AffinityTopologyVersion affinityTopologyVersion)\n+        {\n+            var nearCache = _nearCaches.GetOrAdd(cacheId, \n+                _ => CreateNearCache(_ignite.GetCacheConfiguration(cacheId)));\n+            \n+            nearCache.UpdateFromThreadLocal(partition, affinityTopologyVersion);\n+        }\n+\n+        /// <summary>\n+        /// Stops near cache.\n+        /// </summary>\n+        public void Stop(int cacheId)\n+        {\n+            INearCache cache;\n+            if (_nearCaches.Remove(cacheId, out cache))\n+            {\n+                cache.Stop();\n+            }\n+        }\n+\n+        /// <summary>\n+        /// Called when topology version changes.\n+        /// </summary>\n+        public void OnAffinityTopologyVersionChanged(AffinityTopologyVersion affinityTopologyVersion)\n+        {\n+            _affinityTopologyVersion = affinityTopologyVersion;\n+        }\n+        \n+        /// <summary>\n+        /// Creates near cache.\n+        /// </summary>\n+        private INearCache CreateNearCache(CacheConfiguration cacheConfiguration)\n+        {\n+            var nearCfg = cacheConfiguration.PlatformNearConfiguration;\n+            Debug.Assert(nearCfg != null);\n+            \n+            Func<object> affinityTopologyVersionFunc = () => _affinityTopologyVersion;\n+            var affinity = _ignite.GetAffinity(cacheConfiguration.Name);\n+            var keepBinary = nearCfg.KeepBinary;\n+\n+            TypeResolver resolver = null;\n+            Func<string, Type> resolve = n =>\n+            {\n+                if (n == null)\n+                {\n+                    return typeof(object);\n+                }\n+\n+                if (resolver == null)\n+                {\n+                    resolver = new TypeResolver();\n+                }\n+\n+                var resolved = resolver.ResolveType(n);\n+\n+                if (resolved == null)\n+                {\n+                    throw new InvalidOperationException(string.Format(\"Failed to resolve type: '{0}'\", n));\n+                }\n+\n+                return resolved;\n+            };\n+\n+            var keyType = resolve(nearCfg.KeyTypeName);\n+            var valType = resolve(nearCfg.ValueTypeName);\n+\n+            var cacheType = typeof(NearCache<,>).MakeGenericType(keyType, valType);\n+            var nearCache = Activator.CreateInstance(\n+                cacheType, \n+                affinityTopologyVersionFunc, \n+                affinity,\n+                keepBinary);\n+            \n+            return (INearCache) nearCache;\n+        }\n+        \n+        /// <summary>\n+        /// Handles client disconnect.\n+        /// </summary>\n+        private void OnClientDisconnected(object sender, EventArgs e)\n+        {\n+            foreach (var cache in _nearCaches)\n+            {\n+                cache.Value.Clear();", "originalCommit": "598a37a869de64b5183e3dcd5c6ed39c3b09a43c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg4NzM1Nw==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394887357", "bodyText": "I think that compared to the whole \"thick client connect/disconnect\" procedure, this call is very cheap.", "author": "ptupitsyn", "createdAt": "2020-03-19T09:21:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5MzM2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5NzgyOQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r393397829", "bodyText": "For some reason, this config seems to not having effect when creating cache with Ignite.CreateCache(cfg), but it works on Ignite.CreateCache(cfg, nearCfg).", "author": "ashapkin", "createdAt": "2020-03-17T01:34:16Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Cache/Configuration/CacheConfiguration.cs", "diffHunk": "@@ -448,6 +453,16 @@ internal void Write(BinaryWriter writer, ClientProtocolVersion srvVer)\n             ExpiryPolicySerializer.WritePolicyFactory(writer, ExpiryPolicyFactory);\n \n             writer.WriteCollectionRaw(KeyConfiguration);\n+            \n+            if (PlatformNearConfiguration != null)", "originalCommit": "598a37a869de64b5183e3dcd5c6ed39c3b09a43c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg4Nzk5Ng==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394887996", "bodyText": "@ashapkin can you please provide a full reproducer?", "author": "ptupitsyn", "createdAt": "2020-03-19T09:22:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5NzgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5OTA4MA==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r393399080", "bodyText": "It feels that Peek.All should work as \"all available\" instead of throwing an explicit exception.\nPlease, check tests, we could convert this into a warning temporary.", "author": "ashapkin", "createdAt": "2020-03-17T01:39:29Z", "path": "modules/platforms/dotnet/Apache.Ignite.Core/Impl/Cache/CacheImpl.cs", "diffHunk": "@@ -949,6 +1243,45 @@ private Task<long> SizeAsync0(int? part, params CachePeekMode[] modes)\n             });\n         }\n \n+        /// <summary>\n+        /// Encodes peek modes, includes native near check.\n+        /// </summary>\n+        private int EncodePeekModes(bool loc, int? part, CachePeekMode[] modes, out bool onlyNativeNear, out int size)\n+        {\n+            size = 0;\n+            onlyNativeNear = false;\n+            \n+            bool hasPlatformNear;\n+            var modes0 = IgniteUtils.EncodePeekModes(modes, out hasPlatformNear);\n+\n+            if (hasPlatformNear)\n+            {\n+                if (!loc)\n+                {\n+                    throw new InvalidOperationException(", "originalCommit": "598a37a869de64b5183e3dcd5c6ed39c3b09a43c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg4NzY2MQ==", "url": "https://github.com/gridgain/gridgain/pull/890#discussion_r394887661", "bodyText": "Agree, fixed. No exceptions now.", "author": "ptupitsyn", "createdAt": "2020-03-19T09:21:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5OTA4MA=="}], "type": "inlineReview"}, {"oid": "5722d24c51b4eae6bc9b00eb88b642e4db2d2275", "url": "https://github.com/gridgain/gridgain/commit/5722d24c51b4eae6bc9b00eb88b642e4db2d2275", "message": "Fix build", "committedDate": "2020-03-17T15:44:16Z", "type": "commit"}, {"oid": "6fba89574ee6690ed2d952c98235fa711176365c", "url": "https://github.com/gridgain/gridgain/commit/6fba89574ee6690ed2d952c98235fa711176365c", "message": "TODOs: examples", "committedDate": "2020-03-17T15:47:47Z", "type": "commit"}, {"oid": "3cba2f6033d1f9472a7a22f870440319148331c7", "url": "https://github.com/gridgain/gridgain/commit/3cba2f6033d1f9472a7a22f870440319148331c7", "message": "Add missing CreateCache overloads with Platform near", "committedDate": "2020-03-17T15:59:37Z", "type": "commit"}, {"oid": "2a21a2170a0f75083d5dc0f2eb97bbbfe1ea3942", "url": "https://github.com/gridgain/gridgain/commit/2a21a2170a0f75083d5dc0f2eb97bbbfe1ea3942", "message": "Add missing CreateCache overloads with Platform near", "committedDate": "2020-03-17T16:10:01Z", "type": "commit"}, {"oid": "4c098e1942786ba14b18126502edcb570742968d", "url": "https://github.com/gridgain/gridgain/commit/4c098e1942786ba14b18126502edcb570742968d", "message": "Add re-init assertion to PlatformCacheManager", "committedDate": "2020-02-14T19:32:45Z", "type": "commit"}, {"oid": "a12ec26da203360a30fcf195a100068ff1c9ab29", "url": "https://github.com/gridgain/gridgain/commit/a12ec26da203360a30fcf195a100068ff1c9ab29", "message": "Fix build error", "committedDate": "2020-02-14T19:48:07Z", "type": "commit"}, {"oid": "43e04a2f3dd9b2bed186c6fba8e6390d691f5ebe", "url": "https://github.com/gridgain/gridgain/commit/43e04a2f3dd9b2bed186c6fba8e6390d691f5ebe", "message": "Fix volatile usage build error using Interlocked read", "committedDate": "2020-02-14T20:02:18Z", "type": "commit"}, {"oid": "6519a529c3fe932ad14131d938320c7709677b19", "url": "https://github.com/gridgain/gridgain/commit/6519a529c3fe932ad14131d938320c7709677b19", "message": "Do not reuse PlatformCacheManager across multiple contexts, create a new one every time", "committedDate": "2020-02-14T20:05:12Z", "type": "commit"}, {"oid": "7475f6badb596ddf741eba9160fd9075eb8207aa", "url": "https://github.com/gridgain/gridgain/commit/7475f6badb596ddf741eba9160fd9075eb8207aa", "message": "Update explanation for reconnect handling", "committedDate": "2020-02-17T08:27:46Z", "type": "commit"}, {"oid": "65d8ac816b20031a172a9b621b256616787a620a", "url": "https://github.com/gridgain/gridgain/commit/65d8ac816b20031a172a9b621b256616787a620a", "message": "Merge remote-tracking branch 'ggce/master' into gg-20858", "committedDate": "2020-02-17T08:47:42Z", "type": "commit"}, {"oid": "63d2421c0631459de699c68919b71c3c3051015e", "url": "https://github.com/gridgain/gridgain/commit/63d2421c0631459de699c68919b71c3c3051015e", "message": "Fixing cache stop logic", "committedDate": "2020-02-17T09:04:13Z", "type": "commit"}, {"oid": "bd8a5029321f400fa7981486cc8a9843a86002e9", "url": "https://github.com/gridgain/gridgain/commit/bd8a5029321f400fa7981486cc8a9843a86002e9", "message": "Fixing cache stop logic", "committedDate": "2020-02-17T09:15:59Z", "type": "commit"}, {"oid": "459a59b91cc8d9a9e30b7fa825b5fccfed0ce91a", "url": "https://github.com/gridgain/gridgain/commit/459a59b91cc8d9a9e30b7fa825b5fccfed0ce91a", "message": "Fix CreateDestroy tests", "committedDate": "2020-02-17T09:24:15Z", "type": "commit"}, {"oid": "c4cf2cddf0ea87b8f887bc29f5fa60fdd7bdace1", "url": "https://github.com/gridgain/gridgain/commit/c4cf2cddf0ea87b8f887bc29f5fa60fdd7bdace1", "message": "Fix TestClientNodeReconnectResetsNearCacheData", "committedDate": "2020-02-17T09:29:50Z", "type": "commit"}, {"oid": "145c8bf0c1d4770b22a5f6f1a7f0e472ec2b4226", "url": "https://github.com/gridgain/gridgain/commit/145c8bf0c1d4770b22a5f6f1a7f0e472ec2b4226", "message": "Update perf test", "committedDate": "2020-02-17T09:33:48Z", "type": "commit"}, {"oid": "da530f8301d05c13e3c662dac96d81492051102f", "url": "https://github.com/gridgain/gridgain/commit/da530f8301d05c13e3c662dac96d81492051102f", "message": "Update perf test", "committedDate": "2020-02-17T09:37:37Z", "type": "commit"}, {"oid": "776c7232e2bc897ad82bbeef5a6fc58f67919e91", "url": "https://github.com/gridgain/gridgain/commit/776c7232e2bc897ad82bbeef5a6fc58f67919e91", "message": "Update tests", "committedDate": "2020-02-17T09:43:43Z", "type": "commit"}, {"oid": "25c0d8b4b0f7b05da7b4d7936091f88983ffd310", "url": "https://github.com/gridgain/gridgain/commit/25c0d8b4b0f7b05da7b4d7936091f88983ffd310", "message": "Fix CopyOnWriteConcurrentDictionary.Remove", "committedDate": "2020-02-17T09:47:19Z", "type": "commit"}, {"oid": "2fa066176251df21fa9af89c3a29ec45808a0a82", "url": "https://github.com/gridgain/gridgain/commit/2fa066176251df21fa9af89c3a29ec45808a0a82", "message": "Fix assertion", "committedDate": "2020-02-17T10:22:41Z", "type": "commit"}, {"oid": "ac229308b27e222c3dcbcf580f54796345b97c3f", "url": "https://github.com/gridgain/gridgain/commit/ac229308b27e222c3dcbcf580f54796345b97c3f", "message": "Fix TestClientNodeReconnectResetsNearCacheData using wrong client node", "committedDate": "2020-02-17T10:35:38Z", "type": "commit"}, {"oid": "fe6f2a5a18d82a66e96ed7fb5ca9877f83cf43d0", "url": "https://github.com/gridgain/gridgain/commit/fe6f2a5a18d82a66e96ed7fb5ca9877f83cf43d0", "message": "Fix test naming", "committedDate": "2020-02-17T11:39:33Z", "type": "commit"}, {"oid": "29603c29a0e4454770c3052331a960047a5583f1", "url": "https://github.com/gridgain/gridgain/commit/29603c29a0e4454770c3052331a960047a5583f1", "message": "Adding reconnect tests", "committedDate": "2020-02-17T11:49:05Z", "type": "commit"}, {"oid": "f428215d295ae8d7b3d13db8790fa3c0a4264722", "url": "https://github.com/gridgain/gridgain/commit/f428215d295ae8d7b3d13db8790fa3c0a4264722", "message": "Adding reconnect tests: TestClientNodeReconnectWithoutClusterRestartKeepsNearCache", "committedDate": "2020-02-17T12:09:18Z", "type": "commit"}, {"oid": "2ea65f4af235cd93ab8c2829863c4f84ac9e953b", "url": "https://github.com/gridgain/gridgain/commit/2ea65f4af235cd93ab8c2829863c4f84ac9e953b", "message": "Add PlatformSuspendThreadsTask", "committedDate": "2020-02-17T12:19:07Z", "type": "commit"}, {"oid": "5a9a207de97ccf4f2c43906322554d68eadb6d2d", "url": "https://github.com/gridgain/gridgain/commit/5a9a207de97ccf4f2c43906322554d68eadb6d2d", "message": "Add PlatformSuspendThreadsTask", "committedDate": "2020-02-17T12:20:25Z", "type": "commit"}, {"oid": "1e9f5056681519274fe3302242a06fe6292a2562", "url": "https://github.com/gridgain/gridgain/commit/1e9f5056681519274fe3302242a06fe6292a2562", "message": "Add PlatformResumeThreadsTask", "committedDate": "2020-02-17T12:22:08Z", "type": "commit"}, {"oid": "f40f7e82f56c84961c4f0d811853f6e3f803d268", "url": "https://github.com/gridgain/gridgain/commit/f40f7e82f56c84961c4f0d811853f6e3f803d268", "message": "Adding reconnect tests: TestClientNodeReconnectWithoutClusterRestartKeepsNearCache", "committedDate": "2020-02-17T12:23:22Z", "type": "commit"}, {"oid": "e56e5c2b1e9946bf845367328be71373198d2bb9", "url": "https://github.com/gridgain/gridgain/commit/e56e5c2b1e9946bf845367328be71373198d2bb9", "message": "Adding reconnect tests: TestClientNodeReconnectWithoutClusterRestartKeepsNearCache", "committedDate": "2020-02-17T12:36:29Z", "type": "commit"}, {"oid": "568a31f160a6c2e4c047471ddf1bb3223b58eb04", "url": "https://github.com/gridgain/gridgain/commit/568a31f160a6c2e4c047471ddf1bb3223b58eb04", "message": "Adding reconnect tests: TestClientNodeReconnectWithoutClusterRestartKeepsNearCache", "committedDate": "2020-02-17T12:55:17Z", "type": "commit"}, {"oid": "ae9b8601ffae234028d70e77566626ac29a52af0", "url": "https://github.com/gridgain/gridgain/commit/ae9b8601ffae234028d70e77566626ac29a52af0", "message": "Adding reconnect tests: TestClientNodeReconnectWithoutClusterRestartKeepsNearCache", "committedDate": "2020-02-17T14:40:18Z", "type": "commit"}, {"oid": "938d410700cf6d1195d18c1c14ef81a8f8d19e6b", "url": "https://github.com/gridgain/gridgain/commit/938d410700cf6d1195d18c1c14ef81a8f8d19e6b", "message": "Adding reconnect tests: TestClientNodeReconnectWithoutClusterRestartKeepsNearCache", "committedDate": "2020-02-17T14:43:28Z", "type": "commit"}, {"oid": "4c334dd2e58a1569ef4dfc2dd524763cb3a7c47f", "url": "https://github.com/gridgain/gridgain/commit/4c334dd2e58a1569ef4dfc2dd524763cb3a7c47f", "message": "Adding reconnect tests: TestClientNodeReconnectWithoutClusterRestartKeepsNearCache", "committedDate": "2020-02-17T15:06:37Z", "type": "commit"}, {"oid": "755d1d06e04ed66020730c685577d8b9769a5c79", "url": "https://github.com/gridgain/gridgain/commit/755d1d06e04ed66020730c685577d8b9769a5c79", "message": "Revert \"Adding reconnect tests: TestClientNodeReconnectWithoutClusterRestartKeepsNearCache\"\n\nThis reverts commit 4c334dd2", "committedDate": "2020-02-17T15:07:41Z", "type": "commit"}, {"oid": "ac184aca2b32f77909647b7183d0643da83cbfc4", "url": "https://github.com/gridgain/gridgain/commit/ac184aca2b32f77909647b7183d0643da83cbfc4", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache detects reconnect properly", "committedDate": "2020-02-17T15:14:23Z", "type": "commit"}, {"oid": "28230f7509703833358b401142db12bfca208fa3", "url": "https://github.com/gridgain/gridgain/commit/28230f7509703833358b401142db12bfca208fa3", "message": "Refactor PlatformThreadUtils", "committedDate": "2020-02-17T15:21:29Z", "type": "commit"}, {"oid": "6453b1ac233213719992e9cca8875b3c03e9c299", "url": "https://github.com/gridgain/gridgain/commit/6453b1ac233213719992e9cca8875b3c03e9c299", "message": "Cleanup", "committedDate": "2020-02-17T15:23:23Z", "type": "commit"}, {"oid": "6bf7ebce68cb0e408a10b14897edca078e484beb", "url": "https://github.com/gridgain/gridgain/commit/6bf7ebce68cb0e408a10b14897edca078e484beb", "message": "Cleanup", "committedDate": "2020-02-17T15:24:51Z", "type": "commit"}, {"oid": "ec05ef8bae037dc985e7eb8be094fa7fbe424007", "url": "https://github.com/gridgain/gridgain/commit/ec05ef8bae037dc985e7eb8be094fa7fbe424007", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache wip", "committedDate": "2020-02-17T15:30:57Z", "type": "commit"}, {"oid": "b2f629de69883783bbc996702e21f80b1127fecb", "url": "https://github.com/gridgain/gridgain/commit/b2f629de69883783bbc996702e21f80b1127fecb", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache wip", "committedDate": "2020-02-17T15:34:32Z", "type": "commit"}, {"oid": "cc632387eca0615d221bcea701f4f5a8b63d3e8e", "url": "https://github.com/gridgain/gridgain/commit/cc632387eca0615d221bcea701f4f5a8b63d3e8e", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache wip", "committedDate": "2020-02-17T16:52:12Z", "type": "commit"}, {"oid": "3351ae4cac2d27e88ce5993304dd5eff873321f6", "url": "https://github.com/gridgain/gridgain/commit/3351ae4cac2d27e88ce5993304dd5eff873321f6", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache wip", "committedDate": "2020-02-17T17:21:26Z", "type": "commit"}, {"oid": "8cbbf68f4ff0652ecdc93fbc52df466946e953b0", "url": "https://github.com/gridgain/gridgain/commit/8cbbf68f4ff0652ecdc93fbc52df466946e953b0", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache wip", "committedDate": "2020-02-17T17:22:59Z", "type": "commit"}, {"oid": "71bc939852606be201b1999af69bd52a6b290d5f", "url": "https://github.com/gridgain/gridgain/commit/71bc939852606be201b1999af69bd52a6b290d5f", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache wip", "committedDate": "2020-02-17T17:28:05Z", "type": "commit"}, {"oid": "62b2dd76ebf447ee06fd4e4a51272e721b4c0592", "url": "https://github.com/gridgain/gridgain/commit/62b2dd76ebf447ee06fd4e4a51272e721b4c0592", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache wip", "committedDate": "2020-02-17T17:33:16Z", "type": "commit"}, {"oid": "bb77e0b73a1f8aad52c1476c38aee98a38193456", "url": "https://github.com/gridgain/gridgain/commit/bb77e0b73a1f8aad52c1476c38aee98a38193456", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache wip", "committedDate": "2020-02-17T17:37:33Z", "type": "commit"}, {"oid": "1fa3166243f85be07516cd6cd6d35d47ad4592b9", "url": "https://github.com/gridgain/gridgain/commit/1fa3166243f85be07516cd6cd6d35d47ad4592b9", "message": "Clear near caches on client disconnect", "committedDate": "2020-02-17T17:45:11Z", "type": "commit"}, {"oid": "aed5476d7f30e00db5bdfd97c2f021b57a31f12f", "url": "https://github.com/gridgain/gridgain/commit/aed5476d7f30e00db5bdfd97c2f021b57a31f12f", "message": "TestClientNodeReconnectWithoutClusterRestartKeepsNearCache done", "committedDate": "2020-02-17T17:47:14Z", "type": "commit"}, {"oid": "874b0a98d42a8fc0ae877bba580449f535ea2f10", "url": "https://github.com/gridgain/gridgain/commit/874b0a98d42a8fc0ae877bba580449f535ea2f10", "message": "Cleanup", "committedDate": "2020-02-17T17:48:24Z", "type": "commit"}, {"oid": "616a6aeaa19bd383f90ac09f59fc4d4dd9969d66", "url": "https://github.com/gridgain/gridgain/commit/616a6aeaa19bd383f90ac09f59fc4d4dd9969d66", "message": "Cleanup", "committedDate": "2020-02-17T17:51:01Z", "type": "commit"}, {"oid": "913b1f5a8081ae5db71f1e7b5259d8117c66d995", "url": "https://github.com/gridgain/gridgain/commit/913b1f5a8081ae5db71f1e7b5259d8117c66d995", "message": "Add platformNearCacheEnabled to NearCacheConfiguration in Java", "committedDate": "2020-02-17T21:56:03Z", "type": "commit"}, {"oid": "15beecc17a9106745e331c37a3e16c5769da1737", "url": "https://github.com/gridgain/gridgain/commit/15beecc17a9106745e331c37a3e16c5769da1737", "message": "TODOs for Near Scan Query", "committedDate": "2020-02-18T11:44:10Z", "type": "commit"}, {"oid": "95142e7a4b5fb56d40db63445282a58e016809f4", "url": "https://github.com/gridgain/gridgain/commit/95142e7a4b5fb56d40db63445282a58e016809f4", "message": "Implementing Near Scan Query", "committedDate": "2020-02-18T11:57:56Z", "type": "commit"}, {"oid": "f8fdb2142b5602f8c1e0b1bf680f4f4c300fba3e", "url": "https://github.com/gridgain/gridgain/commit/f8fdb2142b5602f8c1e0b1bf680f4f4c300fba3e", "message": "Implementing Near Scan Query", "committedDate": "2020-02-18T12:16:42Z", "type": "commit"}, {"oid": "2eab7ce60d19703374b8bd7b3227f4021bf2d4f5", "url": "https://github.com/gridgain/gridgain/commit/2eab7ce60d19703374b8bd7b3227f4021bf2d4f5", "message": "Pass cache id from entry filter to platform", "committedDate": "2020-02-18T12:33:49Z", "type": "commit"}, {"oid": "192b1c09782618b9dca92d06e0bc72b6a1eef6c4", "url": "https://github.com/gridgain/gridgain/commit/192b1c09782618b9dca92d06e0bc72b6a1eef6c4", "message": "Pass cache id from entry filter to platform", "committedDate": "2020-02-18T12:49:35Z", "type": "commit"}, {"oid": "e6b1261fc35a712d0ef33944c9dee2bb218f18d3", "url": "https://github.com/gridgain/gridgain/commit/e6b1261fc35a712d0ef33944c9dee2bb218f18d3", "message": "Implementing Near Scan Query", "committedDate": "2020-02-18T13:00:10Z", "type": "commit"}, {"oid": "6bac434e5cec6d7956990efeb064e8fbb25ef3ec", "url": "https://github.com/gridgain/gridgain/commit/6bac434e5cec6d7956990efeb064e8fbb25ef3ec", "message": "Implementing Near Scan Query", "committedDate": "2020-02-18T13:01:08Z", "type": "commit"}, {"oid": "4dfce07850f99fc0e0f75d020bd76d789cf59110", "url": "https://github.com/gridgain/gridgain/commit/4dfce07850f99fc0e0f75d020bd76d789cf59110", "message": "Implementing platform near scan query", "committedDate": "2020-02-18T13:19:21Z", "type": "commit"}, {"oid": "43261dc7fbdad6a83f318f8f0afde8333fccb656", "url": "https://github.com/gridgain/gridgain/commit/43261dc7fbdad6a83f318f8f0afde8333fccb656", "message": "Implement cache name by id retrieval", "committedDate": "2020-02-18T13:28:26Z", "type": "commit"}, {"oid": "d23faae5a80fc1fb644060de4827fd8d7162bc76", "url": "https://github.com/gridgain/gridgain/commit/d23faae5a80fc1fb644060de4827fd8d7162bc76", "message": "Implementing Near Scan Query", "committedDate": "2020-02-18T13:36:21Z", "type": "commit"}, {"oid": "050e561fcd7b47c18ab8521a859843865fd92d72", "url": "https://github.com/gridgain/gridgain/commit/050e561fcd7b47c18ab8521a859843865fd92d72", "message": "Implementing Near Scan Query", "committedDate": "2020-02-18T13:36:39Z", "type": "commit"}, {"oid": "d87f0c1476a44640691233bb2192d3424654b318", "url": "https://github.com/gridgain/gridgain/commit/d87f0c1476a44640691233bb2192d3424654b318", "message": "Fix build", "committedDate": "2020-02-18T21:33:58Z", "type": "commit"}, {"oid": "12262fe530edd881b57e02033c839b0553ab8fe2", "url": "https://github.com/gridgain/gridgain/commit/12262fe530edd881b57e02033c839b0553ab8fe2", "message": "TODOs: WithKeepBinary", "committedDate": "2020-02-18T21:53:26Z", "type": "commit"}, {"oid": "a8c10e0527861d0908bd10019747843e30dc2da3", "url": "https://github.com/gridgain/gridgain/commit/a8c10e0527861d0908bd10019747843e30dc2da3", "message": "TODOs", "committedDate": "2020-02-19T09:36:54Z", "type": "commit"}, {"oid": "212b79ef1ce2da6b95c44c8573888499177bb5d6", "url": "https://github.com/gridgain/gridgain/commit/212b79ef1ce2da6b95c44c8573888499177bb5d6", "message": "Merge remote-tracking branch 'ggce/gg-20858' into gg-20858", "committedDate": "2020-02-19T09:37:07Z", "type": "commit"}, {"oid": "ee4f9eafaa7ee1b1036a0690a8a405da7d6943d0", "url": "https://github.com/gridgain/gridgain/commit/ee4f9eafaa7ee1b1036a0690a8a405da7d6943d0", "message": "TODOs", "committedDate": "2020-02-19T09:38:06Z", "type": "commit"}, {"oid": "5713c64180eb7ff73d6045928fec83df63bbcf9a", "url": "https://github.com/gridgain/gridgain/commit/5713c64180eb7ff73d6045928fec83df63bbcf9a", "message": "Add GetNearBenchmark", "committedDate": "2020-02-19T13:49:57Z", "type": "commit"}, {"oid": "1f816e09a4083551dc4e0916d8c5d9b4d9d1ba1a", "url": "https://github.com/gridgain/gridgain/commit/1f816e09a4083551dc4e0916d8c5d9b4d9d1ba1a", "message": "Add PlatformNearCacheConfiguration", "committedDate": "2020-02-19T14:14:47Z", "type": "commit"}, {"oid": "5b2c88427fcf56b2274bda22dd5420e3423454cf", "url": "https://github.com/gridgain/gridgain/commit/5b2c88427fcf56b2274bda22dd5420e3423454cf", "message": "Add PlatformNearCacheConfiguration", "committedDate": "2020-02-19T14:18:05Z", "type": "commit"}, {"oid": "9b424f8fe5f7c05003bbedfe621789ae67b1e8e2", "url": "https://github.com/gridgain/gridgain/commit/9b424f8fe5f7c05003bbedfe621789ae67b1e8e2", "message": "TODOs", "committedDate": "2020-02-19T14:48:12Z", "type": "commit"}, {"oid": "ffcbc5962885954f8d42db032a324705f02d9be3", "url": "https://github.com/gridgain/gridgain/commit/ffcbc5962885954f8d42db032a324705f02d9be3", "message": "Propagate PlatformNearCacheConfiguration", "committedDate": "2020-02-19T14:54:46Z", "type": "commit"}, {"oid": "16e62a5527945cf668658d40f1c0e86ef775f914", "url": "https://github.com/gridgain/gridgain/commit/16e62a5527945cf668658d40f1c0e86ef775f914", "message": "Propagate platform near config", "committedDate": "2020-02-19T14:58:51Z", "type": "commit"}, {"oid": "f19139dd88e8b38ca59f92cc6133e2b09bccf728", "url": "https://github.com/gridgain/gridgain/commit/f19139dd88e8b38ca59f92cc6133e2b09bccf728", "message": "Propagate platform near config", "committedDate": "2020-02-19T15:03:38Z", "type": "commit"}, {"oid": "0e55532a82d8a4fee4af11c7b4829e5d57850801", "url": "https://github.com/gridgain/gridgain/commit/0e55532a82d8a4fee4af11c7b4829e5d57850801", "message": "Use PlatformNearCacheConfiguration to instantiate generic type", "committedDate": "2020-02-19T15:25:43Z", "type": "commit"}, {"oid": "65157eeff588be1bd6fef9b85461f858106c8bda", "url": "https://github.com/gridgain/gridgain/commit/65157eeff588be1bd6fef9b85461f858106c8bda", "message": "Refactor NearCache - remove fallbackMap", "committedDate": "2020-02-19T15:48:27Z", "type": "commit"}, {"oid": "1c573468d9bc11ea69d3f95297a512296c9e2c94", "url": "https://github.com/gridgain/gridgain/commit/1c573468d9bc11ea69d3f95297a512296c9e2c94", "message": "Propagate platform near config", "committedDate": "2020-02-19T15:56:36Z", "type": "commit"}, {"oid": "2568a6b34aa2df62e3147a7e41ff9e378ee15428", "url": "https://github.com/gridgain/gridgain/commit/2568a6b34aa2df62e3147a7e41ff9e378ee15428", "message": "Fixing tests", "committedDate": "2020-02-19T16:03:18Z", "type": "commit"}, {"oid": "d791e775ab6a3e011c789dc8a86bd8df3627068d", "url": "https://github.com/gridgain/gridgain/commit/d791e775ab6a3e011c789dc8a86bd8df3627068d", "message": "Fixing tests", "committedDate": "2020-02-19T16:04:55Z", "type": "commit"}, {"oid": "1473095bc8ed0747388d185fbcb7bf82dcc0eae3", "url": "https://github.com/gridgain/gridgain/commit/1473095bc8ed0747388d185fbcb7bf82dcc0eae3", "message": "Update benchmarks", "committedDate": "2020-02-19T19:58:10Z", "type": "commit"}, {"oid": "c4f23d08860d27800a9421e3e803fdcceaf6b3da", "url": "https://github.com/gridgain/gridgain/commit/c4f23d08860d27800a9421e3e803fdcceaf6b3da", "message": "Update benchmarks", "committedDate": "2020-02-19T20:03:58Z", "type": "commit"}, {"oid": "f82924fd8e8a5f807159b60587f3421196b38b9d", "url": "https://github.com/gridgain/gridgain/commit/f82924fd8e8a5f807159b60587f3421196b38b9d", "message": "Fixing tests", "committedDate": "2020-02-19T20:12:52Z", "type": "commit"}, {"oid": "a12f0aa42a8ef39715650e24bf44ea061a963053", "url": "https://github.com/gridgain/gridgain/commit/a12f0aa42a8ef39715650e24bf44ea061a963053", "message": "Fixing tests", "committedDate": "2020-02-19T20:16:31Z", "type": "commit"}, {"oid": "baf6015f2e7ba189797742598d591d4e2792d57b", "url": "https://github.com/gridgain/gridgain/commit/baf6015f2e7ba189797742598d591d4e2792d57b", "message": "Add EnablePlatformNearCache convenience config method", "committedDate": "2020-02-19T20:20:20Z", "type": "commit"}, {"oid": "8b7f3277cb6d20f83a24af2a76305d4b5a628000", "url": "https://github.com/gridgain/gridgain/commit/8b7f3277cb6d20f83a24af2a76305d4b5a628000", "message": "Update tests", "committedDate": "2020-02-19T20:21:40Z", "type": "commit"}, {"oid": "2cb26af318634df7fb5fa830290e671670ef003e", "url": "https://github.com/gridgain/gridgain/commit/2cb26af318634df7fb5fa830290e671670ef003e", "message": "Update tests", "committedDate": "2020-02-19T20:22:37Z", "type": "commit"}, {"oid": "74bdfa621a3d2faf38a1ba90e920c4665faa2247", "url": "https://github.com/gridgain/gridgain/commit/74bdfa621a3d2faf38a1ba90e920c4665faa2247", "message": "TODOs", "committedDate": "2020-02-19T20:34:23Z", "type": "commit"}, {"oid": "f458bb5d0fc4c32d1e29490296d309502e00024a", "url": "https://github.com/gridgain/gridgain/commit/f458bb5d0fc4c32d1e29490296d309502e00024a", "message": "Fix build", "committedDate": "2020-02-20T09:02:31Z", "type": "commit"}, {"oid": "b1622f583c2f4440ddf93b4bed57899ed3cd4ad6", "url": "https://github.com/gridgain/gridgain/commit/b1622f583c2f4440ddf93b4bed57899ed3cd4ad6", "message": "Adding KeepBinary tests", "committedDate": "2020-02-20T09:34:04Z", "type": "commit"}, {"oid": "9840bdeda7da261a1a32b660f7b070e4aa5a4e65", "url": "https://github.com/gridgain/gridgain/commit/9840bdeda7da261a1a32b660f7b070e4aa5a4e65", "message": "TestKeepBinaryServer done", "committedDate": "2020-02-20T09:46:51Z", "type": "commit"}, {"oid": "d38b530ac33497447eacb96deb77162be9e90875", "url": "https://github.com/gridgain/gridgain/commit/d38b530ac33497447eacb96deb77162be9e90875", "message": "Fix error handling for near cache update", "committedDate": "2020-02-20T10:09:57Z", "type": "commit"}, {"oid": "45d9b005b23dbdcfc64f0553f03795b71cb09537", "url": "https://github.com/gridgain/gridgain/commit/45d9b005b23dbdcfc64f0553f03795b71cb09537", "message": "Adding near cache type mismatch tests", "committedDate": "2020-02-20T10:14:41Z", "type": "commit"}, {"oid": "98bee42b76a1c39bfd104a933f82b326f8a9d39d", "url": "https://github.com/gridgain/gridgain/commit/98bee42b76a1c39bfd104a933f82b326f8a9d39d", "message": "Adding near cache type mismatch tests", "committedDate": "2020-02-20T10:16:16Z", "type": "commit"}, {"oid": "c147ef5daea23fec15ec66d05ec3ca8bbcb05d0c", "url": "https://github.com/gridgain/gridgain/commit/c147ef5daea23fec15ec66d05ec3ca8bbcb05d0c", "message": "Fix near cache update error handling", "committedDate": "2020-02-20T10:19:15Z", "type": "commit"}, {"oid": "8e4a46c92232f744a8c95cf6395c65144871c875", "url": "https://github.com/gridgain/gridgain/commit/8e4a46c92232f744a8c95cf6395c65144871c875", "message": "TestNearCacheTypeMismatchLogsErrorAndUpdatesMainCache done", "committedDate": "2020-02-20T11:36:44Z", "type": "commit"}, {"oid": "4961e0fdd198fdbd6e6de6ee8b7153c3631cd16c", "url": "https://github.com/gridgain/gridgain/commit/4961e0fdd198fdbd6e6de6ee8b7153c3631cd16c", "message": "Rename platformNearCacheConfiguration to platformNearConfiguration for consistency with nearConfiguration", "committedDate": "2020-02-20T12:16:06Z", "type": "commit"}, {"oid": "e240615f2a390b2cd142bdf3823f0822da4899ac", "url": "https://github.com/gridgain/gridgain/commit/e240615f2a390b2cd142bdf3823f0822da4899ac", "message": "Rename platformNearCacheConfiguration to platformNearConfiguration for consistency with nearConfiguration", "committedDate": "2020-02-20T12:17:01Z", "type": "commit"}, {"oid": "41f78561df4f222db19b00d0cfc29d2a7e39c85a", "url": "https://github.com/gridgain/gridgain/commit/41f78561df4f222db19b00d0cfc29d2a7e39c85a", "message": "Add isNativeNearCacheSupported", "committedDate": "2020-02-20T12:30:02Z", "type": "commit"}, {"oid": "3bd144120e62f69eaa91b0c9ab7a0a07fc0c0520", "url": "https://github.com/gridgain/gridgain/commit/3bd144120e62f69eaa91b0c9ab7a0a07fc0c0520", "message": "Implementing scan query near optimization", "committedDate": "2020-02-20T12:45:47Z", "type": "commit"}, {"oid": "a7350c0be476dea79d34f0ea021d7025d52f03ea", "url": "https://github.com/gridgain/gridgain/commit/a7350c0be476dea79d34f0ea021d7025d52f03ea", "message": "Implementing scan query near optimization", "committedDate": "2020-02-20T12:55:18Z", "type": "commit"}, {"oid": "3237cb21304bc9097337252c8acda272047995a4", "url": "https://github.com/gridgain/gridgain/commit/3237cb21304bc9097337252c8acda272047995a4", "message": "Implementing Scan Query near optimization", "committedDate": "2020-02-20T13:00:00Z", "type": "commit"}, {"oid": "c0b58e2b0682dc14851a35128efbbea4cfadadd6", "url": "https://github.com/gridgain/gridgain/commit/c0b58e2b0682dc14851a35128efbbea4cfadadd6", "message": "Implementing scan query near optimization", "committedDate": "2020-02-20T13:04:10Z", "type": "commit"}, {"oid": "e22e8d66dd69f76a79ac11ffc14a578518650dea", "url": "https://github.com/gridgain/gridgain/commit/e22e8d66dd69f76a79ac11ffc14a578518650dea", "message": "Implementing scan query near optimization", "committedDate": "2020-02-20T13:14:47Z", "type": "commit"}, {"oid": "71552aedc8dc7a63407bfb5b9efc7aa2a2822bff", "url": "https://github.com/gridgain/gridgain/commit/71552aedc8dc7a63407bfb5b9efc7aa2a2822bff", "message": "Implementing Scan Query near optimization", "committedDate": "2020-02-20T13:24:36Z", "type": "commit"}, {"oid": "cdb73e12282c6cd25e9116bda8a0b2a3c85e0ebe", "url": "https://github.com/gridgain/gridgain/commit/cdb73e12282c6cd25e9116bda8a0b2a3c85e0ebe", "message": "Implementing Scan Query near optimization", "committedDate": "2020-02-20T13:32:43Z", "type": "commit"}]}