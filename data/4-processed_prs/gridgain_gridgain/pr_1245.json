{"pr_number": 1245, "pr_title": "GG-29781 Get rid of release pinned page AssertionError in case of hug\u2026", "pr_createdAt": "2020-06-17T09:11:22Z", "pr_url": "https://github.com/gridgain/gridgain/pull/1245", "timeline": [{"oid": "487fed574302a618958809a2226415261c4bfd1e", "url": "https://github.com/gridgain/gridgain/commit/487fed574302a618958809a2226415261c4bfd1e", "message": "GG-29781 Get rid of release pinned page AssertionError in case of huge rebuild index workers are in progress.", "committedDate": "2020-06-15T08:40:44Z", "type": "commit"}, {"oid": "7cab66a879eb9d27aff10a62b47526deed0c8a19", "url": "https://github.com/gridgain/gridgain/commit/7cab66a879eb9d27aff10a62b47526deed0c8a19", "message": "fix for StopNodeOnRebuildIndexFailureTest", "committedDate": "2020-06-17T10:05:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMjMwMQ==", "url": "https://github.com/gridgain/gridgain/pull/1245#discussion_r441532301", "bodyText": "Before flag was allowed to stop rebuild index only for a single cache group, now it turns out to all be stopped.", "author": "tkalkirill", "createdAt": "2020-06-17T13:10:54Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/schema/SchemaIndexCachePartitionWorker.java", "diffHunk": "@@ -56,10 +55,7 @@\n     private final GridCacheContext cctx;\n \n     /** Stop flag between all workers for one cache. */\n-    private final AtomicBoolean stop;\n-\n-    /** Cancellation token between all workers for all caches. */\n-    private final SchemaIndexOperationCancellationToken cancel;\n+    private static volatile boolean stop;", "originalCommit": "7cab66a879eb9d27aff10a62b47526deed0c8a19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU1MDA2MQ==", "url": "https://github.com/gridgain/gridgain/pull/1245#discussion_r441550061", "bodyText": "Instead of a collection, you can use buildIdxCompoundFut to call cancel.", "author": "tkalkirill", "createdAt": "2020-06-17T13:36:18Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/schema/SchemaIndexCacheVisitorImpl.java", "diffHunk": "@@ -51,15 +52,15 @@\n     /** Cache context. */\n     private final GridCacheContext cctx;\n \n-    /** Cancellation token. */\n-    private final SchemaIndexOperationCancellationToken cancel;\n-\n     /** Future for create/rebuild index. */\n     protected final GridFutureAdapter<Void> buildIdxFut;\n \n     /** Logger. */\n     private IgniteLogger log;\n \n+    /** Index processing workers. */\n+    private List<GridWorker> idxWorkers;", "originalCommit": "7cab66a879eb9d27aff10a62b47526deed0c8a19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1b0f29b01ebdbe997e1d3f00acba42ba660ebe90", "url": "https://github.com/gridgain/gridgain/commit/1b0f29b01ebdbe997e1d3f00acba42ba660ebe90", "message": "Merge branch 'master' into gg-29781", "committedDate": "2020-06-19T14:04:36Z", "type": "commit"}, {"oid": "5519b2b6391223224f4d305e17951f5417644f56", "url": "https://github.com/gridgain/gridgain/commit/5519b2b6391223224f4d305e17951f5417644f56", "message": "GG-29781 WIP revert to master", "committedDate": "2020-06-19T14:12:03Z", "type": "commit"}, {"oid": "0a8be65ad5205d7f217a5e0bb7c11ffffd57ba03", "url": "https://github.com/gridgain/gridgain/commit/0a8be65ad5205d7f217a5e0bb7c11ffffd57ba03", "message": "GG-29781 WIP impl cancel with wait finish opepration", "committedDate": "2020-06-23T05:54:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwNzUwMA==", "url": "https://github.com/gridgain/gridgain/pull/1245#discussion_r444507500", "bodyText": "Why are we waiting only 2 seconds? As I understand we should wait until future completed.", "author": "vldpyatkov", "createdAt": "2020-06-23T21:04:00Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/schema/SchemaOperationWorker.java", "diffHunk": "@@ -177,8 +180,19 @@ public boolean cacheRegistered() {\n      * Cancel operation.\n      */\n     @Override public void cancel() {\n-        if (cancelToken.cancel())\n+        if (cancelToken.cancel()) {\n+            IgniteInternalFuture<?> opFut = cancelToken.operationFuture();\n+\n+            if (nonNull(opFut)) {\n+                try {\n+                    opFut.get(2_000);", "originalCommit": "0a8be65ad5205d7f217a5e0bb7c11ffffd57ba03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwNzgxMQ==", "url": "https://github.com/gridgain/gridgain/pull/1245#discussion_r444507811", "bodyText": "Add logs here.", "author": "vldpyatkov", "createdAt": "2020-06-23T21:04:41Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/schema/SchemaOperationWorker.java", "diffHunk": "@@ -177,8 +180,19 @@ public boolean cacheRegistered() {\n      * Cancel operation.\n      */\n     @Override public void cancel() {\n-        if (cancelToken.cancel())\n+        if (cancelToken.cancel()) {\n+            IgniteInternalFuture<?> opFut = cancelToken.operationFuture();\n+\n+            if (nonNull(opFut)) {\n+                try {\n+                    opFut.get(2_000);\n+                }\n+                catch (IgniteCheckedException ignore) {", "originalCommit": "0a8be65ad5205d7f217a5e0bb7c11ffffd57ba03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxMjAzMw==", "url": "https://github.com/gridgain/gridgain/pull/1245#discussion_r444512033", "bodyText": "So far this code seems at less strange.\nWe a have an instance of cancelToken, which stored a future internally. But why you get it out, need to wait it internal of cancel. Because if operation is canceled means the future in completed.", "author": "vldpyatkov", "createdAt": "2020-06-23T21:13:14Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/schema/SchemaOperationWorker.java", "diffHunk": "@@ -177,8 +180,19 @@ public boolean cacheRegistered() {\n      * Cancel operation.\n      */\n     @Override public void cancel() {\n-        if (cancelToken.cancel())\n+        if (cancelToken.cancel()) {", "originalCommit": "0a8be65ad5205d7f217a5e0bb7c11ffffd57ba03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxNDcyNw==", "url": "https://github.com/gridgain/gridgain/pull/1245#discussion_r444514727", "bodyText": "This future and token look like parts of one thing.\nYou need to implement an object which was a future and token simultaneously, because current variant look ugly and unclear.", "author": "vldpyatkov", "createdAt": "2020-06-23T21:19:01Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java", "diffHunk": "@@ -1688,11 +1688,14 @@ public void processSchemaOperationLocal(SchemaAbstractOperation op, QueryTypeDes\n                             }\n                         }\n                     };\n+\n+                    cancelTok.operationFuture(createIdxFut);", "originalCommit": "0a8be65ad5205d7f217a5e0bb7c11ffffd57ba03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e73d9fcc5cf6c56b102f5687bef66a60446375cb", "url": "https://github.com/gridgain/gridgain/commit/e73d9fcc5cf6c56b102f5687bef66a60446375cb", "message": "Merge branch 'master' into gg-29781", "committedDate": "2020-06-25T07:21:03Z", "type": "commit"}, {"oid": "e428a70c13d5e7c7106ffe5562b23d47f284bb5e", "url": "https://github.com/gridgain/gridgain/commit/e428a70c13d5e7c7106ffe5562b23d47f284bb5e", "message": "GG-29781 WIP after msk review", "committedDate": "2020-06-25T08:51:56Z", "type": "commit"}, {"oid": "11d03b8742e944ba229bd1dfb2d7791722596e70", "url": "https://github.com/gridgain/gridgain/commit/11d03b8742e944ba229bd1dfb2d7791722596e70", "message": "GG-29781 WIP fix tests", "committedDate": "2020-06-26T16:40:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5MjQyMg==", "url": "https://github.com/gridgain/gridgain/pull/1245#discussion_r446392422", "bodyText": "I think when you use isDebugEnable() need printing via debug(...).\nBut here warning will be better.", "author": "vldpyatkov", "createdAt": "2020-06-26T20:22:08Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/schema/SchemaOperationWorker.java", "diffHunk": "@@ -177,8 +178,17 @@ public boolean cacheRegistered() {\n      * Cancel operation.\n      */\n     @Override public void cancel() {\n-        if (cancelToken.cancel())\n+        if (cancelToken.cancel()) {\n+            try {\n+                fut.get();\n+            }\n+            catch (IgniteCheckedException e) {\n+                if (log.isDebugEnabled())", "originalCommit": "11d03b8742e944ba229bd1dfb2d7791722596e70", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU1MjgzNg==", "url": "https://github.com/gridgain/gridgain/pull/1245#discussion_r447552836", "bodyText": "Do you have any guarantees that this future will finish eventually? I just afraid that this line can lead to the hung of the node.", "author": "akalash", "createdAt": "2020-06-30T09:41:34Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/query/schema/SchemaOperationWorker.java", "diffHunk": "@@ -177,8 +178,17 @@ public boolean cacheRegistered() {\n      * Cancel operation.\n      */\n     @Override public void cancel() {\n-        if (cancelToken.cancel())\n+        if (cancelToken.cancel()) {\n+            try {\n+                fut.get();", "originalCommit": "11d03b8742e944ba229bd1dfb2d7791722596e70", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "464884724d652a9f952078d22fe991da52159a9b", "url": "https://github.com/gridgain/gridgain/commit/464884724d652a9f952078d22fe991da52159a9b", "message": "GG-29781 wip add timeout", "committedDate": "2020-06-30T15:35:51Z", "type": "commit"}]}