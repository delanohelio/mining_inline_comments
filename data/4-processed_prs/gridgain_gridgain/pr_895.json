{"pr_number": 895, "pr_title": "GG-26790 Prevent BinaryObjectExImpl.toString failing with exception if a class of an object serialized with OptimizedMarshaller is not accessible", "pr_createdAt": "2020-02-03T11:53:48Z", "pr_url": "https://github.com/gridgain/gridgain/pull/895", "timeline": [{"oid": "782c5c54cf4ff4f5b1c4300cfaae6f0ee5741118", "url": "https://github.com/gridgain/gridgain/commit/782c5c54cf4ff4f5b1c4300cfaae6f0ee5741118", "message": "GG-26790 Prevent BinaryObjectExImpl.toString failing with exception if a class of an object serialized with OptimizedMarshaller is not accessible", "committedDate": "2020-02-03T11:52:23Z", "type": "commit"}, {"oid": "ab18a21a3559de3097e0ed4c770aa5afd936b9b8", "url": "https://github.com/gridgain/gridgain/commit/ab18a21a3559de3097e0ed4c770aa5afd936b9b8", "message": "GG-26790 Rename test class", "committedDate": "2020-02-03T13:14:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5NTEzNA==", "url": "https://github.com/gridgain/gridgain/pull/895#discussion_r374095134", "bodyText": "Such \"todo\" looks like a violation of code style to me.\nWe should use the following format: // TODO GG-XXXXX cleanup tmp files carefully.\nWhere GG-XXXXX - is a number of issue where this will be fixed.", "author": "akuznetsov-gridgain", "createdAt": "2020-02-03T13:17:13Z", "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/ivan/BinaryToStringClassNotFoundProblem.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.ivan;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Constructor;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import javax.tools.JavaCompiler;\n+import javax.tools.ToolProvider;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.configuration.CacheConfiguration;\n+import org.apache.ignite.internal.IgniteEx;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+import org.junit.Test;\n+\n+/** */\n+public class BinaryToStringClassNotFoundProblem extends GridCommonAbstractTest {\n+    /** */\n+    @Test\n+    public void testToStringInaccessibleOptimizedMarshallerClass() throws Exception {\n+        URLClassLoader extClsLdr = extClassLoader(\"Problematic.java\", \"\" +\n+            \"import java.io.Externalizable;\\n\" +\n+            \"import java.io.IOException;\\n\" +\n+            \"import java.io.ObjectInput;\\n\" +\n+            \"import java.io.ObjectOutput;\\n\" +\n+            \"\\n\" +\n+            \"public class Problematic implements Externalizable {\\n\" +\n+            \"    int x;\\n\" +\n+            \"\\n\" +\n+            \"    private Problematic() {\\n\" +\n+            \"    }\\n\" +\n+            \"\\n\" +\n+            \"    public Problematic(int x) {\\n\" +\n+            \"        this.x = x;\\n\" +\n+            \"    }\\n\" +\n+            \"\\n\" +\n+            \"    @Override public void writeExternal(ObjectOutput out) throws IOException {\\n\" +\n+            \"        out.writeInt(x);\\n\" +\n+            \"    }\\n\" +\n+            \"\\n\" +\n+            \"    @Override public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\\n\" +\n+            \"        x = in.readInt();\\n\" +\n+            \"    }\\n\" +\n+            \"}\");\n+\n+        Object ext = newExtInstance(extClsLdr);\n+\n+        IgniteEx ign = startGrid(0);\n+\n+        IgniteCache<Object, Object> cache = ign.getOrCreateCache(new CacheConfiguration<>(DEFAULT_CACHE_NAME));\n+\n+        cache.put(1, new TestContainer(ext));\n+\n+        assertTrue(cache.withKeepBinary().get(1).toString()\n+            .matches(\"org.apache.ignite.internal.processors.cache.ivan.BinaryToStringClassCastProblem\\\\$TestContainer \" +\n+                \"\\\\[idHash=-?\\\\d+, hash=-?\\\\d+, x=Problematic\\\\(Class not found\\\\)]\"));\n+    }\n+\n+    /** */\n+    private URLClassLoader extClassLoader(String srcFileName, String srcCode) throws IOException {\n+        // t0d0 cleanup tmp files carefully", "originalCommit": "ab18a21a3559de3097e0ed4c770aa5afd936b9b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxNDIwMA==", "url": "https://github.com/gridgain/gridgain/pull/895#discussion_r377514200", "bodyText": "I cleaned up test code.", "author": "pavlukhin", "createdAt": "2020-02-11T09:17:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5NTEzNA=="}], "type": "inlineReview"}, {"oid": "7c682e110d3e28a3aa6fb33adf0789ae90a2e2b7", "url": "https://github.com/gridgain/gridgain/commit/7c682e110d3e28a3aa6fb33adf0789ae90a2e2b7", "message": "GG-26790 Fix test", "committedDate": "2020-02-03T13:51:19Z", "type": "commit"}, {"oid": "c8115e712de2f21a5a28da6039d5cc053e3aee4a", "url": "https://github.com/gridgain/gridgain/commit/c8115e712de2f21a5a28da6039d5cc053e3aee4a", "message": "GG-26790 Simplify error message when class is not found", "committedDate": "2020-02-10T10:19:39Z", "type": "commit"}, {"oid": "167439d5129ba37c36be9465778e60c80f5aa109", "url": "https://github.com/gridgain/gridgain/commit/167439d5129ba37c36be9465778e60c80f5aa109", "message": "GG-26790 Implement test plan", "committedDate": "2020-02-10T14:29:13Z", "type": "commit"}, {"oid": "30ec2bf5da6c9389cc5aba44471f8ae0c6730438", "url": "https://github.com/gridgain/gridgain/commit/30ec2bf5da6c9389cc5aba44471f8ae0c6730438", "message": "GG-26790 Move BinaryObjectToStringTest to a proper package and add to a suite", "committedDate": "2020-02-10T14:36:56Z", "type": "commit"}, {"oid": "e8fc38537c420a6a9f838afa48bc8d64f22487c6", "url": "https://github.com/gridgain/gridgain/commit/e8fc38537c420a6a9f838afa48bc8d64f22487c6", "message": "GG-26790 Remove debug output", "committedDate": "2020-02-10T14:38:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzExMzI4Mg==", "url": "https://github.com/gridgain/gridgain/pull/895#discussion_r377113282", "bodyText": "No ; for this case?", "author": "MaxLosevskoy", "createdAt": "2020-02-10T14:57:58Z", "path": "modules/core/src/main/java/org/apache/ignite/internal/binary/BinaryObjectExImpl.java", "diffHunk": "@@ -240,6 +242,23 @@ private String toString(BinaryReaderHandles ctx, IdentityHashMap<BinaryObject, I\n         return buf.toString();\n     }\n \n+    /** */\n+    private Object fieldForToString(BinaryReaderHandles ctx, String name) {\n+        try {\n+            return field(ctx, name);\n+        }\n+        catch (Exception e) {\n+            OptimizedMarshallerInaccessibleClassException e1 =\n+                X.cause(e, OptimizedMarshallerInaccessibleClassException.class);\n+\n+            String msg = \"Failed to create a string representation\";\n+\n+            return e1 != null\n+                ? \"(\" + msg + \": class not found \" + e1.inaccessibleClass() + \")\"", "originalCommit": "e8fc38537c420a6a9f838afa48bc8d64f22487c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzExNDE1Nw==", "url": "https://github.com/gridgain/gridgain/pull/895#discussion_r377114157", "bodyText": "? \"(\" + msg + \": class \" + e1.inaccessibleClass() + \" not found);\"", "author": "MaxLosevskoy", "createdAt": "2020-02-10T14:59:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzExMzI4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxMzI4Mg==", "url": "https://github.com/gridgain/gridgain/pull/895#discussion_r377513282", "bodyText": "I suppose there is no ; in both cases. There are 2 options for a message here:\n\n(Failed to create a string representation: class not found ExternalTestClass1)\n(Failed to create a string representation)", "author": "pavlukhin", "createdAt": "2020-02-11T09:15:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzExMzI4Mg=="}], "type": "inlineReview"}]}