{"pr_number": 3606, "pr_title": "CATROID-568 REFACTOR ChangeVariableActionTest to Kotlin", "pr_createdAt": "2020-05-13T23:58:49Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3606", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAwODQ0NA==", "url": "https://github.com/Catrobat/Catroid/pull/3606#discussion_r425008444", "bodyText": "Please don't use random values for testing.\nInstead, run a whole range like this as parameters:\nIntRange(0, 99).flatMap { ... } (don't forget the .toDouble())", "author": "gPathpp", "createdAt": "2020-05-14T09:44:57Z", "path": "catroid/src/test/java/org/catrobat/catroid/test/content/actions/ChangeVariableActionTest.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.test.content.actions\n+\n+import org.junit.Assert\n+import org.catrobat.catroid.ProjectManager\n+import org.catrobat.catroid.content.Project\n+import org.catrobat.catroid.content.SingleSprite\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.test.MockUtil\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.Parameterized\n+import java.util.concurrent.ThreadLocalRandom\n+\n+@RunWith(Parameterized::class)\n+class ChangeVariableActionTest(private val formula: Formula?, private val variable: UserVariable?, private val expectedValue: Double) {\n+    private lateinit var testSprite: Sprite\n+    private lateinit var userVariable: UserVariable\n+    private lateinit var project: Project\n+\n+    companion object {\n+        @JvmStatic\n+        @Parameterized.Parameters\n+        fun parameters() = listOf(\n+            arrayOf(Formula(CHANGE_VARIABLE_VALUE), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), EXPECTED_NEW_VALUE),\n+            arrayOf(Formula(CHANGE_VARIABLE_VALUE), null, INITIALIZED_VALUE),\n+            arrayOf(Formula(CHANGE_VARIABLE_VALUE.toString()), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), EXPECTED_NEW_VALUE),\n+            arrayOf(Formula(NOT_NUMERICAL_STRING), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), INITIALIZED_VALUE),\n+            arrayOf(null, UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), INITIALIZED_VALUE),\n+            arrayOf(Formula(Double.NaN), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), INITIALIZED_VALUE)\n+        )\n+\n+        private const val NOT_NUMERICAL_STRING = \"changeVariable\"\n+        private const val TEST_USERVARIABLE = \"testUservariable\"\n+        private val CHANGE_VARIABLE_VALUE = ThreadLocalRandom.current().nextDouble(-100.0, 100.0)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxMTc3Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3606#discussion_r425011772", "bodyText": "The \"userVariable\" is always UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE) except test-case 1.\nAs discussed, please edit the test-case and delete this variable.", "author": "gPathpp", "createdAt": "2020-05-14T09:50:17Z", "path": "catroid/src/test/java/org/catrobat/catroid/test/content/actions/ChangeVariableActionTest.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.test.content.actions\n+\n+import org.junit.Assert\n+import org.catrobat.catroid.ProjectManager\n+import org.catrobat.catroid.content.Project\n+import org.catrobat.catroid.content.SingleSprite\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.test.MockUtil\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.Parameterized\n+import java.util.concurrent.ThreadLocalRandom\n+\n+@RunWith(Parameterized::class)\n+class ChangeVariableActionTest(private val formula: Formula?, private val variable: UserVariable?, private val expectedValue: Double) {\n+    private lateinit var testSprite: Sprite\n+    private lateinit var userVariable: UserVariable\n+    private lateinit var project: Project\n+\n+    companion object {\n+        @JvmStatic\n+        @Parameterized.Parameters\n+        fun parameters() = listOf(\n+            arrayOf(Formula(CHANGE_VARIABLE_VALUE), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), EXPECTED_NEW_VALUE),\n+            arrayOf(Formula(CHANGE_VARIABLE_VALUE), null, INITIALIZED_VALUE),\n+            arrayOf(Formula(CHANGE_VARIABLE_VALUE.toString()), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), EXPECTED_NEW_VALUE),\n+            arrayOf(Formula(NOT_NUMERICAL_STRING), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), INITIALIZED_VALUE),\n+            arrayOf(null, UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), INITIALIZED_VALUE),\n+            arrayOf(Formula(Double.NaN), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), INITIALIZED_VALUE)\n+        )\n+\n+        private const val NOT_NUMERICAL_STRING = \"changeVariable\"\n+        private const val TEST_USERVARIABLE = \"testUservariable\"\n+        private val CHANGE_VARIABLE_VALUE = ThreadLocalRandom.current().nextDouble(-100.0, 100.0)\n+        private val INITIALIZED_VALUE = ThreadLocalRandom.current().nextDouble(-100.0, 100.0)\n+        private val EXPECTED_NEW_VALUE = INITIALIZED_VALUE + CHANGE_VARIABLE_VALUE\n+    }\n+\n+    @Before\n+    fun setUp() {\n+        testSprite = SingleSprite(\"testSprite\")\n+        project = Project(MockUtil.mockContextForProject(), \"testProject\")\n+        ProjectManager.getInstance().currentProject = project\n+        userVariable = variable ?: UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxMjE2OQ==", "url": "https://github.com/Catrobat/Catroid/pull/3606#discussion_r425012169", "bodyText": "Please add a name for the test-cases.", "author": "gPathpp", "createdAt": "2020-05-14T09:50:50Z", "path": "catroid/src/test/java/org/catrobat/catroid/test/content/actions/ChangeVariableActionTest.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.test.content.actions\n+\n+import org.junit.Assert\n+import org.catrobat.catroid.ProjectManager\n+import org.catrobat.catroid.content.Project\n+import org.catrobat.catroid.content.SingleSprite\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.test.MockUtil\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.Parameterized\n+import java.util.concurrent.ThreadLocalRandom\n+\n+@RunWith(Parameterized::class)\n+class ChangeVariableActionTest(private val formula: Formula?, private val variable: UserVariable?, private val expectedValue: Double) {\n+    private lateinit var testSprite: Sprite\n+    private lateinit var userVariable: UserVariable\n+    private lateinit var project: Project\n+\n+    companion object {\n+        @JvmStatic\n+        @Parameterized.Parameters", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxMzkzNQ==", "url": "https://github.com/Catrobat/Catroid/pull/3606#discussion_r425013935", "bodyText": "Great! It looks much better now!", "author": "gPathpp", "createdAt": "2020-05-14T09:53:43Z", "path": "catroid/src/test/java/org/catrobat/catroid/test/content/actions/ChangeVariableActionTest.java", "diffHunk": "@@ -1,94 +0,0 @@\n-/*\n- * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n- * (<http://developer.catrobat.org/credits>)\n- *\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as\n- * published by the Free Software Foundation, either version 3 of the\n- * License, or (at your option) any later version.\n- *\n- * An additional term exception under section 7 of the GNU Affero\n- * General Public License, version 3, is available at\n- * http://developer.catrobat.org/license_additional_term\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-package org.catrobat.catroid.test.content.actions;\n-\n-import org.catrobat.catroid.ProjectManager;\n-import org.catrobat.catroid.content.Project;\n-import org.catrobat.catroid.content.SingleSprite;\n-import org.catrobat.catroid.content.Sprite;\n-import org.catrobat.catroid.formulaeditor.Formula;\n-import org.catrobat.catroid.formulaeditor.UserVariable;\n-import org.catrobat.catroid.test.MockUtil;\n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.junit.runners.JUnit4;\n-\n-import static junit.framework.Assert.assertEquals;\n-\n-@RunWith(JUnit4.class)\n-public class ChangeVariableActionTest {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxNTMxMg==", "url": "https://github.com/Catrobat/Catroid/pull/3606#discussion_r425015312", "bodyText": "Please also verify that \"act\" always returns true.", "author": "gPathpp", "createdAt": "2020-05-14T09:55:45Z", "path": "catroid/src/test/java/org/catrobat/catroid/test/content/actions/ChangeVariableActionTest.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.test.content.actions\n+\n+import org.junit.Assert\n+import org.catrobat.catroid.ProjectManager\n+import org.catrobat.catroid.content.Project\n+import org.catrobat.catroid.content.SingleSprite\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.test.MockUtil\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.Parameterized\n+import java.util.concurrent.ThreadLocalRandom\n+\n+@RunWith(Parameterized::class)\n+class ChangeVariableActionTest(private val formula: Formula?, private val variable: UserVariable?, private val expectedValue: Double) {\n+    private lateinit var testSprite: Sprite\n+    private lateinit var userVariable: UserVariable\n+    private lateinit var project: Project\n+\n+    companion object {\n+        @JvmStatic\n+        @Parameterized.Parameters\n+        fun parameters() = listOf(\n+            arrayOf(Formula(CHANGE_VARIABLE_VALUE), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), EXPECTED_NEW_VALUE),\n+            arrayOf(Formula(CHANGE_VARIABLE_VALUE), null, INITIALIZED_VALUE),\n+            arrayOf(Formula(CHANGE_VARIABLE_VALUE.toString()), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), EXPECTED_NEW_VALUE),\n+            arrayOf(Formula(NOT_NUMERICAL_STRING), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), INITIALIZED_VALUE),\n+            arrayOf(null, UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), INITIALIZED_VALUE),\n+            arrayOf(Formula(Double.NaN), UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE), INITIALIZED_VALUE)\n+        )\n+\n+        private const val NOT_NUMERICAL_STRING = \"changeVariable\"\n+        private const val TEST_USERVARIABLE = \"testUservariable\"\n+        private val CHANGE_VARIABLE_VALUE = ThreadLocalRandom.current().nextDouble(-100.0, 100.0)\n+        private val INITIALIZED_VALUE = ThreadLocalRandom.current().nextDouble(-100.0, 100.0)\n+        private val EXPECTED_NEW_VALUE = INITIALIZED_VALUE + CHANGE_VARIABLE_VALUE\n+    }\n+\n+    @Before\n+    fun setUp() {\n+        testSprite = SingleSprite(\"testSprite\")\n+        project = Project(MockUtil.mockContextForProject(), \"testProject\")\n+        ProjectManager.getInstance().currentProject = project\n+        userVariable = variable ?: UserVariable(TEST_USERVARIABLE, INITIALIZED_VALUE)\n+        project.addUserVariable(userVariable)\n+    }\n+\n+    @Test\n+    fun testChangeUserVariableAndCheckResult() {\n+        testSprite.actionFactory.createChangeVariableAction(testSprite, formula, variable).act(1f)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxNjU1Ng==", "url": "https://github.com/Catrobat/Catroid/pull/3606#discussion_r425016556", "bodyText": "Maybe in an extra test-method, if you like.", "author": "gPathpp", "createdAt": "2020-05-14T09:57:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxNTMxMg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODE2MA==", "url": "https://github.com/Catrobat/Catroid/pull/3606#discussion_r426138160", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        arrayOf(\"NUMBER_ZERO\", Formula(CHANGE_VARIABLE_VALUE), UserVariable(TEST_USERVARIABLE), + CHANGE_VARIABLE_VALUE),\n          \n          \n            \n                        arrayOf(\"NUMBER_ZERO\", Formula(CHANGE_VARIABLE_VALUE), UserVariable(TEST_USERVARIABLE), CHANGE_VARIABLE_VALUE),", "author": "wslany", "createdAt": "2020-05-16T09:46:17Z", "path": "catroid/src/test/java/org/catrobat/catroid/test/content/actions/ChangeVariableActionTest.kt", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.test.content.actions\n+\n+import org.junit.Assert\n+import org.catrobat.catroid.ProjectManager\n+import org.catrobat.catroid.content.Project\n+import org.catrobat.catroid.content.SingleSprite\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.test.MockUtil\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.Parameterized\n+\n+@RunWith(Parameterized::class)\n+class ChangeVariableActionTest(\n+    private val name: String,\n+    private val formula: Formula?,\n+    private val userVariable: UserVariable?,\n+    private val expectedValue: Double?\n+) {\n+    private lateinit var testSprite: Sprite\n+\n+    companion object {\n+        @JvmStatic\n+        @Parameterized.Parameters(name = \"{0}\")\n+        fun parameters() = listOf(\n+            arrayOf(\"INVALID_USER_VARIABLE\", Formula(CHANGE_VARIABLE_VALUE), null, null),\n+            arrayOf(\"NUMBER_NEGATIVE\", Formula(CHANGE_VARIABLE_VALUE), UserVariable(TEST_USERVARIABLE, -1.0), -1.0 + CHANGE_VARIABLE_VALUE),\n+            arrayOf(\"NUMBER_ZERO\", Formula(CHANGE_VARIABLE_VALUE), UserVariable(TEST_USERVARIABLE), + CHANGE_VARIABLE_VALUE),", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c37f67940db4c5121c64da25159b070e5381b829", "url": "https://github.com/Catrobat/Catroid/commit/c37f67940db4c5121c64da25159b070e5381b829", "message": "CATROID-568 REFACTOR ChangeVariableActionTest to Kotlin\n\nConverted to Kotlin, added parameterization", "committedDate": "2020-05-16T09:52:23Z", "type": "commit"}, {"oid": "c37f67940db4c5121c64da25159b070e5381b829", "url": "https://github.com/Catrobat/Catroid/commit/c37f67940db4c5121c64da25159b070e5381b829", "message": "CATROID-568 REFACTOR ChangeVariableActionTest to Kotlin\n\nConverted to Kotlin, added parameterization", "committedDate": "2020-05-16T09:52:23Z", "type": "forcePushed"}]}