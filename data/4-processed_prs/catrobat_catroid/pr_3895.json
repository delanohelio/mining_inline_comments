{"pr_number": 3895, "pr_title": "CATROID-728: Show featured projects on the landing page", "pr_createdAt": "2020-12-12T21:39:10Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3895", "timeline": [{"oid": "cc4d27e81ecfb5ad71f6c79e6bfeb50f7bdc835f", "url": "https://github.com/Catrobat/Catroid/commit/cc4d27e81ecfb5ad71f6c79e6bfeb50f7bdc835f", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-12T21:50:48Z", "type": "forcePushed"}, {"oid": "ac8e43a8990b9f59a8000eba7c8efaa3b61b180f", "url": "https://github.com/Catrobat/Catroid/commit/ac8e43a8990b9f59a8000eba7c8efaa3b61b180f", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-12T22:51:46Z", "type": "forcePushed"}, {"oid": "83c13c081930fdfda8f27864436a26a76fe62896", "url": "https://github.com/Catrobat/Catroid/commit/83c13c081930fdfda8f27864436a26a76fe62896", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-12T22:59:23Z", "type": "forcePushed"}, {"oid": "2b2bb553294ca454b994a3e1610d924647bc85ea", "url": "https://github.com/Catrobat/Catroid/commit/2b2bb553294ca454b994a3e1610d924647bc85ea", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-12T23:01:51Z", "type": "forcePushed"}, {"oid": "30c76c917d2ea147f03a50d6b7ccdacb19a421f2", "url": "https://github.com/Catrobat/Catroid/commit/30c76c917d2ea147f03a50d6b7ccdacb19a421f2", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-13T01:15:05Z", "type": "forcePushed"}, {"oid": "265bb5b120700ac696e5b58f6387202b44914d42", "url": "https://github.com/Catrobat/Catroid/commit/265bb5b120700ac696e5b58f6387202b44914d42", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-13T01:47:22Z", "type": "forcePushed"}, {"oid": "0014dcd6d366e3db8c6586341677be38cc20c55d", "url": "https://github.com/Catrobat/Catroid/commit/0014dcd6d366e3db8c6586341677be38cc20c55d", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-13T01:57:22Z", "type": "forcePushed"}, {"oid": "189989fab71f0f904d06cf46b0137fa71047913b", "url": "https://github.com/Catrobat/Catroid/commit/189989fab71f0f904d06cf46b0137fa71047913b", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-13T16:05:47Z", "type": "forcePushed"}, {"oid": "9b8cef76cd99a5e54b3a23a4a6f0639b572b4a09", "url": "https://github.com/Catrobat/Catroid/commit/9b8cef76cd99a5e54b3a23a4a6f0639b572b4a09", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-13T18:12:27Z", "type": "forcePushed"}, {"oid": "b8079f6d5b1da508b4bdca030d061d0f4d662da1", "url": "https://github.com/Catrobat/Catroid/commit/b8079f6d5b1da508b4bdca030d061d0f4d662da1", "message": "CATROID-728: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt", "committedDate": "2020-12-13T18:49:30Z", "type": "forcePushed"}, {"oid": "e2a881a63cacbd6e2618e4f97bc5a189746bf4e7", "url": "https://github.com/Catrobat/Catroid/commit/e2a881a63cacbd6e2618e4f97bc5a189746bf4e7", "message": "CATROID-728: Show featured projects on the landing page\n\n* add query parameters\n* add FLAVOR_NAME Constant for all flavors", "committedDate": "2020-12-13T19:45:55Z", "type": "forcePushed"}, {"oid": "d49a4f774b2b813cddb427cd39b9047f68164426", "url": "https://github.com/Catrobat/Catroid/commit/d49a4f774b2b813cddb427cd39b9047f68164426", "message": "CATROID-728: Show featured projects on the landing page\n\n* add query parameters\n* add FLAVOR_NAME Constant for all flavors", "committedDate": "2020-12-14T18:23:52Z", "type": "forcePushed"}, {"oid": "9c80545e76a0c62923f97d6f6154ccaa184b6f3b", "url": "https://github.com/Catrobat/Catroid/commit/9c80545e76a0c62923f97d6f6154ccaa184b6f3b", "message": "CATROID-728: Show featured projects on the landing page\n\n* add query parameters\n* add FLAVOR_NAME Constant for all flavors", "committedDate": "2021-01-23T20:24:03Z", "type": "forcePushed"}, {"oid": "b2c6d36415f7a0f4d90327a459ff3d73f0c1448c", "url": "https://github.com/Catrobat/Catroid/commit/b2c6d36415f7a0f4d90327a459ff3d73f0c1448c", "message": "CATROID-728: Show featured projects on the landing page\n\n* add query parameters\n* add FLAVOR_NAME Constant for all flavors", "committedDate": "2021-01-23T21:14:30Z", "type": "forcePushed"}, {"oid": "0de70af1c97776fb5222068da6a17e31da080d02", "url": "https://github.com/Catrobat/Catroid/commit/0de70af1c97776fb5222068da6a17e31da080d02", "message": "CATROID-728: Show featured projects on the landing page\n\n* add query parameters\n* add FLAVOR_NAME Constant for all flavors", "committedDate": "2021-01-23T21:35:41Z", "type": "forcePushed"}, {"oid": "c3f7898ea26fc08536dacb85938a152da902eeaf", "url": "https://github.com/Catrobat/Catroid/commit/c3f7898ea26fc08536dacb85938a152da902eeaf", "message": "CATROID-729: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n* add query parameters\n* add FLAVOR_NAME Constant for all flavors", "committedDate": "2021-01-24T16:50:05Z", "type": "forcePushed"}, {"oid": "52a07f63868f33a181c8b0136611ebf9940710a3", "url": "https://github.com/Catrobat/Catroid/commit/52a07f63868f33a181c8b0136611ebf9940710a3", "message": "CATROID-729: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n* add query parameters\n* add FLAVOR_NAME Constant for all flavors", "committedDate": "2021-01-24T16:59:43Z", "type": "forcePushed"}, {"oid": "f5f3a369ad65492e7e50e532fff6a1a813417186", "url": "https://github.com/Catrobat/Catroid/commit/f5f3a369ad65492e7e50e532fff6a1a813417186", "message": "CATROID-729: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n* add query parameters\n* add FLAVOR_NAME Constant for all flavors", "committedDate": "2021-01-24T17:08:44Z", "type": "forcePushed"}, {"oid": "5028e7d169953ea2ff344583a56170b411cfeb1a", "url": "https://github.com/Catrobat/Catroid/commit/5028e7d169953ea2ff344583a56170b411cfeb1a", "message": "CATROID-729: Show featured projects on the landing page\n\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n* add query parameters\n* add FLAVOR_NAME Constant for all flavors", "committedDate": "2021-01-24T18:29:46Z", "type": "forcePushed"}, {"oid": "49d88626dab8b1cb47bb8b619744dce184f9a21d", "url": "https://github.com/Catrobat/Catroid/commit/49d88626dab8b1cb47bb8b619744dce184f9a21d", "message": "CATROID-796: AdMob bricks\n**extra changes:**\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade to google play service to 19.0.0 (except analytics)", "committedDate": "2021-01-24T18:49:23Z", "type": "forcePushed"}, {"oid": "9a0e3beb81e0bb2f02b726837a5ecf83f046587c", "url": "https://github.com/Catrobat/Catroid/commit/9a0e3beb81e0bb2f02b726837a5ecf83f046587c", "message": "CATROID-796: AdMob bricks\n**extra changes:**\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade to google play service to 19.0.0 (except analytics)", "committedDate": "2021-01-24T19:47:35Z", "type": "forcePushed"}, {"oid": "ec32e7b6041336203320038dc74ca29a962e16b4", "url": "https://github.com/Catrobat/Catroid/commit/ec32e7b6041336203320038dc74ca29a962e16b4", "message": "CATROID-796: AdMob bricks\n**extra changes:**\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade to google play service to 19.0.0 (except analytics)", "committedDate": "2021-01-24T20:10:10Z", "type": "forcePushed"}, {"oid": "a90e9b326748188fb56011f81b6eeb1c91e4694b", "url": "https://github.com/Catrobat/Catroid/commit/a90e9b326748188fb56011f81b6eeb1c91e4694b", "message": "CATROID-728: Show featured projects on the landing page.\n\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test, mockwebserver, and androidx.arch.core:core-testing\n* integrate androidx.preference:preference", "committedDate": "2021-01-25T01:44:32Z", "type": "forcePushed"}, {"oid": "dadfe8925a5f01ada1851a53b8cbd2776c422a85", "url": "https://github.com/Catrobat/Catroid/commit/dadfe8925a5f01ada1851a53b8cbd2776c422a85", "message": "CATROID-728: Show featured projects on the landing page.\n\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test, mockwebserver, and androidx.arch.core:core-testing", "committedDate": "2021-01-25T02:10:47Z", "type": "forcePushed"}, {"oid": "9a7d21e6b881153a4ca693f0fd0f5daf091cf88d", "url": "https://github.com/Catrobat/Catroid/commit/9a7d21e6b881153a4ca693f0fd0f5daf091cf88d", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test, mockwebserver, and androidx.arch.core:core-testing", "committedDate": "2021-01-25T02:17:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzUyODg3MA==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563528870", "bodyText": "why is this commented out? Please delete if not used anymore", "author": "juliajulie95", "createdAt": "2021-01-25T08:14:29Z", "path": "catroid/build.gradle", "diffHunk": "@@ -53,6 +53,7 @@ ext {\n     paintroidVersion = '2.6.1'\n     playServicesVersion = \"17.0.0\"\n     cameraXVersion = \"1.0.0-beta07\"\n+    //preference_version = '1.1.1'", "originalCommit": "c569ead04c286b32aca1f526f83daf4acdf0a687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY4NTkyNQ==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563685925", "bodyText": "DONE", "author": "ndrnour", "createdAt": "2021-01-25T12:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzUyODg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzUyOTkwMg==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563529902", "bodyText": "Please create a ticket instead of adding a todo and comments in the code -> will get lost", "author": "juliajulie95", "createdAt": "2021-01-25T08:16:27Z", "path": "catroid/build.gradle", "diffHunk": "@@ -368,11 +369,22 @@ dependencies {\n     implementation \"org.koin:koin-androidx-viewmodel:$koin_version\"\n     implementation \"org.koin:koin-androidx-fragment:$koin_version\"\n \n+    // Retrofit\n+    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n+    // retrofit moshi converter\n+    implementation 'com.squareup.retrofit2:converter-moshi:2.7.1'\n+    // Glide (Images downloader)\n+    implementation 'com.github.bumptech.glide:glide:4.11.0'\n+\n     // Lifecycle\n     implementation \"androidx.lifecycle:lifecycle-extensions:$lifecycle_version\"\n     implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version\"\n     implementation \"androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version\"\n \n+    // TODO refactor deprecated shared Preference by using the androidx component", "originalCommit": "c569ead04c286b32aca1f526f83daf4acdf0a687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY4NTg0MA==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563685840", "bodyText": "OK", "author": "ndrnour", "createdAt": "2021-01-25T12:27:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzUyOTkwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzUzMjA4Nw==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563532087", "bodyText": "What does this change?", "author": "juliajulie95", "createdAt": "2021-01-25T08:20:30Z", "path": "catroid/config/detekt.yml", "diffHunk": "@@ -77,7 +77,7 @@ complexity:\n     threshold: 2\n   NestedBlockDepth:\n     active: true\n-    threshold: 4\n+    threshold: 6", "originalCommit": "c569ead04c286b32aca1f526f83daf4acdf0a687", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzUzNDM5Mw==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563534393", "bodyText": "Do we have to update this file everytime a featured project is added to luna&cat?", "author": "juliajulie95", "createdAt": "2021-01-25T08:24:50Z", "path": "catroid/src/androidTest/assets/featured_projects_success_response.json", "diffHunk": "@@ -0,0 +1,26 @@\n+[", "originalCommit": "c569ead04c286b32aca1f526f83daf4acdf0a687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY4NTc0MQ==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563685741", "bodyText": "NO this a test asset.", "author": "ndrnour", "createdAt": "2021-01-25T12:27:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzUzNDM5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzUzNjI4OA==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563536288", "bodyText": "Please add this as ticket and delete this code here. Else its going to be lost.", "author": "juliajulie95", "createdAt": "2021-01-25T08:28:02Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/retrofittesting/CatroidWebServerTest.kt", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.retrofittesting\n+\n+import android.content.Context\n+import androidx.test.platform.app.InstrumentationRegistry\n+import junit.framework.TestCase.assertEquals\n+import junit.framework.TestCase.assertNotNull\n+import okhttp3.mockwebserver.MockResponse\n+import okhttp3.mockwebserver.MockWebServer\n+import org.catrobat.catroid.retrofit.WebService\n+import org.junit.After\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.koin.test.KoinTest\n+import org.koin.test.inject\n+import org.mockito.MockitoAnnotations\n+import org.mockito.junit.MockitoJUnitRunner\n+import java.net.HttpURLConnection\n+\n+@RunWith(MockitoJUnitRunner::class)\n+@SuppressWarnings(\"UnusedPrivateMember\")\n+class CatroidWebServerTest : KoinTest {\n+\n+    companion object {\n+        private const val FAILED_RESPONSE_FILE_NAME = \"featured_projects_failed_response.json\"\n+        private const val SUCCESS_RESPONSE_FILE_NAME = \"featured_projects_success_response.json\"\n+    }\n+\n+    private lateinit var mockWebServer: MockWebServer\n+    private lateinit var context: Context\n+\n+    @Before\n+    fun setUp() {\n+        context = InstrumentationRegistry.getInstrumentation().context\n+        MockitoAnnotations.initMocks(this)\n+        mockWebServer = MockWebServer()\n+        mockWebServer.start()\n+    }\n+\n+    @After\n+    fun tearDown() {\n+        mockWebServer.shutdown()\n+    }\n+\n+    @Test\n+    fun testReadSampleSuccessJsonFile() {\n+        val reader = MockResponseFileReader(context, SUCCESS_RESPONSE_FILE_NAME)\n+        assertNotNull(reader.content)\n+    }\n+\n+    private val webServer: WebService by inject()\n+\n+    @Test\n+    fun testFetchFeaturedProjectsAndCheckResponseCode200Returned() {\n+        val response = MockResponse()\n+            .setResponseCode(HttpURLConnection.HTTP_OK)\n+            .setBody(MockResponseFileReader(context, SUCCESS_RESPONSE_FILE_NAME).content)\n+        mockWebServer.enqueue(response)\n+\n+        val actualResponse = webServer.getFeaturedProjects().execute()\n+\n+        assertEquals(\n+            response.toString().containsOkHttpCode(),\n+            actualResponse.code().toString().containsOkHttpCode()\n+        )\n+    }\n+\n+    @Test\n+    fun testFetchFeaturedProjectsAndCheckResponseBadRequestReturned() {\n+        // Api always return 200 uncomment this once fixed on server side", "originalCommit": "c569ead04c286b32aca1f526f83daf4acdf0a687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY4NjY3Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563686672", "bodyText": "DONE", "author": "ndrnour", "createdAt": "2021-01-25T12:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzUzNjI4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzU0MTEyOA==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563541128", "bodyText": "accident?", "author": "juliajulie95", "createdAt": "2021-01-25T08:36:27Z", "path": "catroid/src/main/java/org/catrobat/catroid/retrofit/models/FeaturedProject.kt", "diffHunk": "@@ -1,14 +1,14 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n  * it under the terms of the GNU Affero General Public License as\n  * published by the Free Software Foundation, either version 3 of the\n  * License, or (at your option) any later version.\n  *\n- * An additional term exception under section 7 of the GNU Affero\n+ * An additional term exception under section 7 of the GNU AfCfero", "originalCommit": "c569ead04c286b32aca1f526f83daf4acdf0a687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY4OTE1Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563689152", "bodyText": "YES.", "author": "ndrnour", "createdAt": "2021-01-25T12:33:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzU0MTEyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzU0NzYxMw==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563547613", "bodyText": "All names above: https://confluence.catrob.at/display/KNOWHOW/Clean+code\nNo abbreviations please", "author": "juliajulie95", "createdAt": "2021-01-25T08:47:37Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/MainMenuFragment.kt", "diffHunk": "@@ -0,0 +1,308 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.ui.recyclerview.fragment\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.fragment.app.Fragment\n+import androidx.lifecycle.Observer\n+import androidx.recyclerview.widget.LinearSnapHelper\n+import androidx.recyclerview.widget.PagerSnapHelper\n+import kotlinx.android.synthetic.main.landing_page.editBTN\n+import kotlinx.android.synthetic.main.landing_page.featuredProjectsRV\n+import kotlinx.android.synthetic.main.landing_page.featuredProjectsTV\n+import kotlinx.android.synthetic.main.landing_page.image_view\n+import kotlinx.android.synthetic.main.landing_page.myProjectsRV\n+import kotlinx.android.synthetic.main.landing_page.myProjectsTV\n+import kotlinx.android.synthetic.main.landing_page.newProjectFAB\n+import kotlinx.android.synthetic.main.landing_page.noInternetLayout\n+import kotlinx.android.synthetic.main.landing_page.uploadBTN\n+import kotlinx.android.synthetic.main.progress_bar.progress_bar\n+import org.catrobat.catroid.R\n+import org.catrobat.catroid.common.Constants\n+import org.catrobat.catroid.common.FlavoredConstants.DEFAULT_ROOT_DIRECTORY\n+import org.catrobat.catroid.common.ProjectData\n+import org.catrobat.catroid.io.ProjectAndSceneScreenshotLoader\n+import org.catrobat.catroid.io.asynctask.ProjectLoadTask\n+import org.catrobat.catroid.io.asynctask.ProjectLoadTask.ProjectLoadListener\n+import org.catrobat.catroid.retrofit.models.FeaturedProject\n+import org.catrobat.catroid.ui.ProjectActivity\n+import org.catrobat.catroid.ui.ProjectListActivity\n+import org.catrobat.catroid.ui.ProjectUploadActivity\n+import org.catrobat.catroid.ui.WebViewActivity\n+import org.catrobat.catroid.ui.recyclerview.FeaturedProjectCallback\n+import org.catrobat.catroid.ui.recyclerview.IndicatorDecoration\n+import org.catrobat.catroid.ui.recyclerview.ProjectListener\n+import org.catrobat.catroid.ui.recyclerview.adapter.FeaturedProjectsAdapter\n+import org.catrobat.catroid.ui.recyclerview.adapter.HorizontalProjectsAdapter\n+import org.catrobat.catroid.ui.recyclerview.dialog.NewProjectDialogFragment\n+import org.catrobat.catroid.ui.recyclerview.viewmodel.FeaturedProjectsViewModel\n+import org.catrobat.catroid.ui.recyclerview.viewmodel.ProjectsViewModel\n+import org.catrobat.catroid.utils.FileMetaDataExtractor\n+import org.catrobat.catroid.utils.NetworkConnectionMonitor\n+import org.catrobat.catroid.utils.ProjectDownloadUtil.setFragment\n+import org.catrobat.catroid.utils.ToastUtil\n+import org.catrobat.catroid.utils.Utils\n+import org.catrobat.catroid.utils.setVisibleOrGone\n+import org.koin.android.ext.android.inject\n+import org.koin.androidx.viewmodel.ext.android.viewModel\n+import java.io.File\n+\n+class MainMenuFragment : Fragment(),\n+    ProjectListener,\n+    View.OnClickListener,\n+    FeaturedProjectCallback,\n+    ProjectLoadListener {\n+\n+    var currentProject: String? = null\n+    private lateinit var projectsAdapter: HorizontalProjectsAdapter\n+    private val projectVM: ProjectsViewModel by viewModel()\n+    private val featuredProjectVM: FeaturedProjectsViewModel by viewModel()\n+    private val connectionMonitor: NetworkConnectionMonitor by inject()\n+    private val featuredProjectsAdapter: FeaturedProjectsAdapter by inject()\n+\n+    override fun onCreateView(\n+        inflater: LayoutInflater,\n+        container: ViewGroup?,\n+        savedInstanceState: Bundle?\n+    ): View? {\n+        setShowProgressBar(true)\n+        return inflater.inflate(R.layout.landing_page, container, false)\n+    }\n+\n+    override fun onActivityCreated(savedInstanceState: Bundle?) {\n+        super.onActivityCreated(savedInstanceState)\n+        editBTN.setOnClickListener(this)\n+        uploadBTN.setOnClickListener(this)\n+        newProjectFAB.setOnClickListener(this)\n+        myProjectsTV.setOnClickListener(this)\n+        image_view.setOnClickListener(this)\n+        featuredProjectsTV.setOnClickListener(this)", "originalCommit": "c569ead04c286b32aca1f526f83daf4acdf0a687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY5MjU0NQ==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563692545", "bodyText": "WHAT?", "author": "ndrnour", "createdAt": "2021-01-25T12:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzU0NzYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY5OTUwOA==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563699508", "bodyText": "Please read the link provided.\nNew project members won't understand what a \"TV\" is.\nNames should not be or have any abbreviations", "author": "juliajulie95", "createdAt": "2021-01-25T12:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzU0NzYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzcwNzc5MA==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563707790", "bodyText": "this makes no sense to me, but as you want.", "author": "ndrnour", "createdAt": "2021-01-25T13:05:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzU0NzYxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzU1MDU2Ng==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563550566", "bodyText": "Are these only extensions for the landing page? Then please specify the name", "author": "juliajulie95", "createdAt": "2021-01-25T08:52:09Z", "path": "catroid/src/main/java/org/catrobat/catroid/utils/Extensions.kt", "diffHunk": "@@ -0,0 +1,53 @@\n+/*", "originalCommit": "c569ead04c286b32aca1f526f83daf4acdf0a687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzY4Nzk2Mw==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r563687963", "bodyText": "NO", "author": "ndrnour", "createdAt": "2021-01-25T12:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzU1MDU2Ng=="}], "type": "inlineReview"}, {"oid": "77f64acc58d213712e629907014c22ec66420ee5", "url": "https://github.com/Catrobat/Catroid/commit/77f64acc58d213712e629907014c22ec66420ee5", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test, mockwebserver, and androidx.arch.core:core-testing", "committedDate": "2021-01-25T12:09:28Z", "type": "forcePushed"}, {"oid": "2a4ba210ff4676b14fc11059458336928fdcac70", "url": "https://github.com/Catrobat/Catroid/commit/2a4ba210ff4676b14fc11059458336928fdcac70", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test, mockwebserver, and androidx.arch.core:core-testing", "committedDate": "2021-01-25T13:15:02Z", "type": "forcePushed"}, {"oid": "9a38fcd79084ca94c64b3598b2935b9ae2899dfc", "url": "https://github.com/Catrobat/Catroid/commit/9a38fcd79084ca94c64b3598b2935b9ae2899dfc", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-01-25T13:18:16Z", "type": "forcePushed"}, {"oid": "658a29184cdad04fa3b27070d421be30c4fc4bc1", "url": "https://github.com/Catrobat/Catroid/commit/658a29184cdad04fa3b27070d421be30c4fc4bc1", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-01-27T18:23:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzIzMDgxMA==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r567230810", "bodyText": "camelCase please (:", "author": "juliajulie95", "createdAt": "2021-01-30T10:51:47Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/MainMenuFragment.kt", "diffHunk": "@@ -0,0 +1,308 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.ui.recyclerview.fragment\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.fragment.app.Fragment\n+import androidx.lifecycle.Observer\n+import androidx.recyclerview.widget.LinearSnapHelper\n+import androidx.recyclerview.widget.PagerSnapHelper\n+import kotlinx.android.synthetic.main.landing_page.editProject\n+import kotlinx.android.synthetic.main.landing_page.featuredProjectsRecyclerView\n+import kotlinx.android.synthetic.main.landing_page.featuredProjectsTextView\n+import kotlinx.android.synthetic.main.landing_page.image_view\n+import kotlinx.android.synthetic.main.landing_page.myProjectsRecyclerView\n+import kotlinx.android.synthetic.main.landing_page.myProjectsTextView\n+import kotlinx.android.synthetic.main.landing_page.newProjectFloatingActionButton\n+import kotlinx.android.synthetic.main.landing_page.noInternetLayout\n+import kotlinx.android.synthetic.main.landing_page.uploadProject\n+import kotlinx.android.synthetic.main.progress_bar.progress_bar\n+import org.catrobat.catroid.R\n+import org.catrobat.catroid.common.Constants\n+import org.catrobat.catroid.common.FlavoredConstants.DEFAULT_ROOT_DIRECTORY\n+import org.catrobat.catroid.common.ProjectData\n+import org.catrobat.catroid.io.ProjectAndSceneScreenshotLoader\n+import org.catrobat.catroid.io.asynctask.ProjectLoadTask\n+import org.catrobat.catroid.io.asynctask.ProjectLoadTask.ProjectLoadListener\n+import org.catrobat.catroid.retrofit.models.FeaturedProject\n+import org.catrobat.catroid.ui.ProjectActivity\n+import org.catrobat.catroid.ui.ProjectListActivity\n+import org.catrobat.catroid.ui.ProjectUploadActivity\n+import org.catrobat.catroid.ui.WebViewActivity\n+import org.catrobat.catroid.ui.recyclerview.FeaturedProjectCallback\n+import org.catrobat.catroid.ui.recyclerview.IndicatorDecoration\n+import org.catrobat.catroid.ui.recyclerview.ProjectListener\n+import org.catrobat.catroid.ui.recyclerview.adapter.FeaturedProjectsAdapter\n+import org.catrobat.catroid.ui.recyclerview.adapter.HorizontalProjectsAdapter\n+import org.catrobat.catroid.ui.recyclerview.dialog.NewProjectDialogFragment\n+import org.catrobat.catroid.ui.recyclerview.viewmodel.FeaturedProjectsViewModel\n+import org.catrobat.catroid.ui.recyclerview.viewmodel.ProjectsViewModel\n+import org.catrobat.catroid.utils.FileMetaDataExtractor\n+import org.catrobat.catroid.utils.NetworkConnectionMonitor\n+import org.catrobat.catroid.utils.ProjectDownloadUtil.setFragment\n+import org.catrobat.catroid.utils.ToastUtil\n+import org.catrobat.catroid.utils.Utils\n+import org.catrobat.catroid.utils.setVisibleOrGone\n+import org.koin.android.ext.android.inject\n+import org.koin.androidx.viewmodel.ext.android.viewModel\n+import java.io.File\n+\n+class MainMenuFragment : Fragment(),\n+    ProjectListener,\n+    View.OnClickListener,\n+    FeaturedProjectCallback,\n+    ProjectLoadListener {\n+\n+    var currentProject: String? = null\n+    private lateinit var projectsAdapter: HorizontalProjectsAdapter\n+    private val projectVM: ProjectsViewModel by viewModel()\n+    private val featuredProjectVM: FeaturedProjectsViewModel by viewModel()\n+    private val connectionMonitor: NetworkConnectionMonitor by inject()\n+    private val featuredProjectsAdapter: FeaturedProjectsAdapter by inject()\n+\n+    override fun onCreateView(\n+        inflater: LayoutInflater,\n+        container: ViewGroup?,\n+        savedInstanceState: Bundle?\n+    ): View? {\n+        setShowProgressBar(true)\n+        return inflater.inflate(R.layout.landing_page, container, false)\n+    }\n+\n+    override fun onActivityCreated(savedInstanceState: Bundle?) {\n+        super.onActivityCreated(savedInstanceState)\n+        editProject.setOnClickListener(this)\n+        uploadProject.setOnClickListener(this)\n+        newProjectFloatingActionButton.setOnClickListener(this)\n+        myProjectsTextView.setOnClickListener(this)\n+        image_view.setOnClickListener(this)", "originalCommit": "658a29184cdad04fa3b27070d421be30c4fc4bc1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzIzMTAyOQ==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r567231029", "bodyText": "snakecase please for all variables in the xml", "author": "juliajulie95", "createdAt": "2021-01-30T10:54:34Z", "path": "catroid/src/main/res/layout/landing_page.xml", "diffHunk": "@@ -46,7 +47,7 @@\n \n \n                 <RelativeLayout\n-                    android:id=\"@+id/current_project\"\n+                    android:id=\"@+id/currentProjectLayout\"", "originalCommit": "658a29184cdad04fa3b27070d421be30c4fc4bc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTMxODQ4OQ==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r571318489", "bodyText": "pls see my comment below", "author": "ndrnour", "createdAt": "2021-02-06T00:15:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzIzMTAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzIzMTEyOQ==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r567231129", "bodyText": "snakecase pls", "author": "juliajulie95", "createdAt": "2021-01-30T10:55:38Z", "path": "catroid/src/main/res/layout/featured_project_item.xml", "diffHunk": "@@ -21,9 +22,16 @@\n   ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n   -->\n \n-<vector android:autoMirrored=\"true\" android:height=\"36dp\"\n-    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\n-    android:width=\"36dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <path android:fillColor=\"@color/landing_page_icons\"\n-        android:pathData=\"M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM11,19.93c-3.95,-0.49 -7,-3.85 -7,-7.93 0,-0.62 0.08,-1.21 0.21,-1.79L9,15v1c0,1.1 0.9,2 2,2v1.93zM17.9,17.39c-0.26,-0.81 -1,-1.39 -1.9,-1.39h-1v-3c0,-0.55 -0.45,-1 -1,-1L8,12v-2h2c0.55,0 1,-0.45 1,-1L11,7h2c1.1,0 2,-0.9 2,-2v-0.41c2.93,1.19 5,4.06 5,7.41 0,2.08 -0.8,3.97 -2.1,5.39z\"/>\n-</vector>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"vertical\">\n+\n+    <ImageView\n+        android:id=\"@+id/featuredProjectIV\"", "originalCommit": "658a29184cdad04fa3b27070d421be30c4fc4bc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTMxODUyNQ==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r571318525", "bodyText": "pls see my comment below", "author": "ndrnour", "createdAt": "2021-02-06T00:15:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzIzMTEyOQ=="}], "type": "inlineReview"}, {"oid": "6cada3cc874ba4daea1f281ad268941739f1fc5c", "url": "https://github.com/Catrobat/Catroid/commit/6cada3cc874ba4daea1f281ad268941739f1fc5c", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-02-06T00:07:01Z", "type": "forcePushed"}, {"oid": "89f90d930084d029cdce22483e5e29c6fe058192", "url": "https://github.com/Catrobat/Catroid/commit/89f90d930084d029cdce22483e5e29c6fe058192", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-02-06T13:59:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ1OTc4Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r571459782", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private const val DELAY_MALICE = 2000\n          \n          \n            \n                    private const val DELAY_BETWEEN_SCROLLS = 5000\n          \n          \n            \n                    private const val DURATION_OF_SCROLL = 500\n          \n      \n    \n    \n  \n\n5 seconds between scrolls, like on share (2 seconds seems too nervous).\nAdditionally, the scrolls themselves shall be a bit slower as well, i.e., 0.5 seconds per scroll.", "author": "wslany", "createdAt": "2021-02-06T17:13:12Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/AutoScrollableRecyclerView.kt", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.recyclerview\n+\n+import android.content.Context\n+import android.os.Handler\n+import android.os.Message\n+import android.util.AttributeSet\n+import android.view.MotionEvent\n+import androidx.recyclerview.widget.LinearLayoutManager\n+import androidx.recyclerview.widget.LinearSmoothScroller\n+import androidx.recyclerview.widget.RecyclerView\n+import org.catrobat.catroid.R\n+import java.lang.ref.WeakReference\n+\n+class AutoScrollableRecyclerView @JvmOverloads constructor(\n+    context: Context,\n+    attrs: AttributeSet? = null,\n+    defStyleAttr: Int = 0\n+) : RecyclerView(context, attrs, defStyleAttr) {\n+    private val scrollHandler by lazy {\n+        ScrollHandler(this)\n+    }\n+\n+    var itemsCount: Int = 0\n+\n+    private val delayMillis: Long\n+\n+    init {\n+        context.theme.obtainStyledAttributes(\n+            attrs,\n+            R.styleable.AutoScrollableRecyclerView,\n+            0, 0\n+        ).apply {\n+            try {\n+                delayMillis = getInt(R.styleable.AutoScrollableRecyclerView_delay, DELAY_MALICE).toLong()\n+            } finally {\n+                recycle()\n+            }\n+        }\n+    }\n+\n+    private fun createScroller(position: Int) = object : LinearSmoothScroller(context) {\n+        override fun getHorizontalSnapPreference(): Int {\n+            return SNAP_TO_END\n+        }\n+    }.apply {\n+        targetPosition = position\n+    }\n+\n+    override fun dispatchTouchEvent(e: MotionEvent?): Boolean {\n+        when (e?.action) {\n+            MotionEvent.ACTION_UP -> resumeAutoScroll()\n+            MotionEvent.ACTION_DOWN -> pauseAutoScroll()\n+        }\n+        parent.requestDisallowInterceptTouchEvent(true)\n+\n+        return super.dispatchTouchEvent(e)\n+    }\n+\n+    private fun pauseAutoScroll() {\n+        scrollHandler.removeMessages(WHAT_SCROLL)\n+    }\n+\n+    fun resumeAutoScroll() {\n+        scrollHandler.removeMessages(WHAT_SCROLL)\n+        scrollHandler.sendEmptyMessageDelayed(WHAT_SCROLL, delayMillis)\n+    }\n+\n+    fun scrollNext() {\n+        (layoutManager as LinearLayoutManager).let { layoutManager ->\n+            var position = layoutManager.findLastVisibleItemPosition() + 1\n+            if (position >= itemsCount) {\n+                position = 0\n+            }\n+            layoutManager.startSmoothScroll(\n+                createScroller(position)\n+            )\n+        }\n+        scrollHandler.sendEmptyMessageDelayed(WHAT_SCROLL, delayMillis)\n+    }\n+\n+    private class ScrollHandler(autoScrollableRecyclerView: AutoScrollableRecyclerView) :\n+        Handler() {\n+        private val autoScrollViewPager =\n+            WeakReference<AutoScrollableRecyclerView>(autoScrollableRecyclerView)\n+\n+        override fun handleMessage(msg: Message) {\n+            super.handleMessage(msg)\n+            autoScrollViewPager.get()?.scrollNext()\n+        }\n+    }\n+\n+    companion object {\n+        private const val WHAT_SCROLL = 1\n+        private const val DELAY_MALICE = 2000", "originalCommit": "89f90d930084d029cdce22483e5e29c6fe058192", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ2NDYwMA==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r571464600", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            delayMillis = getInt(R.styleable.AutoScrollableRecyclerView_delay, DELAY_MALICE).toLong()\n          \n          \n            \n                            delayMillis = getInt(R.styleable.AutoScrollableRecyclerView_delay, DELAY_BETWEEN_SCROLLS ).toLong()", "author": "wslany", "createdAt": "2021-02-06T17:56:14Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/AutoScrollableRecyclerView.kt", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.recyclerview\n+\n+import android.content.Context\n+import android.os.Handler\n+import android.os.Message\n+import android.util.AttributeSet\n+import android.view.MotionEvent\n+import androidx.recyclerview.widget.LinearLayoutManager\n+import androidx.recyclerview.widget.LinearSmoothScroller\n+import androidx.recyclerview.widget.RecyclerView\n+import org.catrobat.catroid.R\n+import java.lang.ref.WeakReference\n+\n+class AutoScrollableRecyclerView @JvmOverloads constructor(\n+    context: Context,\n+    attrs: AttributeSet? = null,\n+    defStyleAttr: Int = 0\n+) : RecyclerView(context, attrs, defStyleAttr) {\n+    private val scrollHandler by lazy {\n+        ScrollHandler(this)\n+    }\n+\n+    var itemsCount: Int = 0\n+\n+    private val delayMillis: Long\n+\n+    init {\n+        context.theme.obtainStyledAttributes(\n+            attrs,\n+            R.styleable.AutoScrollableRecyclerView,\n+            0, 0\n+        ).apply {\n+            try {\n+                delayMillis = getInt(R.styleable.AutoScrollableRecyclerView_delay, DELAY_MALICE).toLong()", "originalCommit": "89f90d930084d029cdce22483e5e29c6fe058192", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ2ODgyOQ==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r571468829", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                override fun calculateTimeForScrolling(dx: Int): Int = DURATION_OF_SCROLL", "author": "wslany", "createdAt": "2021-02-06T18:29:46Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/AutoScrollableRecyclerView.kt", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.recyclerview\n+\n+import android.content.Context\n+import android.os.Handler\n+import android.os.Message\n+import android.util.AttributeSet\n+import android.view.MotionEvent\n+import androidx.recyclerview.widget.LinearLayoutManager\n+import androidx.recyclerview.widget.LinearSmoothScroller\n+import androidx.recyclerview.widget.RecyclerView\n+import org.catrobat.catroid.R\n+import java.lang.ref.WeakReference\n+\n+class AutoScrollableRecyclerView @JvmOverloads constructor(\n+    context: Context,\n+    attrs: AttributeSet? = null,\n+    defStyleAttr: Int = 0\n+) : RecyclerView(context, attrs, defStyleAttr) {\n+    private val scrollHandler by lazy {\n+        ScrollHandler(this)\n+    }\n+\n+    var itemsCount: Int = 0\n+\n+    private val delayMillis: Long\n+\n+    init {\n+        context.theme.obtainStyledAttributes(\n+            attrs,\n+            R.styleable.AutoScrollableRecyclerView,\n+            0, 0\n+        ).apply {\n+            try {\n+                delayMillis = getInt(R.styleable.AutoScrollableRecyclerView_delay, DELAY_MALICE).toLong()\n+            } finally {\n+                recycle()\n+            }\n+        }\n+    }\n+\n+    private fun createScroller(position: Int) = object : LinearSmoothScroller(context) {\n+        override fun getHorizontalSnapPreference(): Int {\n+            return SNAP_TO_END\n+        }\n+    }.apply {\n+        targetPosition = position\n+    }\n+\n+    override fun dispatchTouchEvent(e: MotionEvent?): Boolean {\n+        when (e?.action) {\n+            MotionEvent.ACTION_UP -> resumeAutoScroll()\n+            MotionEvent.ACTION_DOWN -> pauseAutoScroll()\n+        }\n+        parent.requestDisallowInterceptTouchEvent(true)\n+\n+        return super.dispatchTouchEvent(e)\n+    }\n+\n+    private fun pauseAutoScroll() {\n+        scrollHandler.removeMessages(WHAT_SCROLL)\n+    }\n+\n+    fun resumeAutoScroll() {\n+        scrollHandler.removeMessages(WHAT_SCROLL)\n+        scrollHandler.sendEmptyMessageDelayed(WHAT_SCROLL, delayMillis)\n+    }\n+\n+    fun scrollNext() {\n+        (layoutManager as LinearLayoutManager).let { layoutManager ->\n+            var position = layoutManager.findLastVisibleItemPosition() + 1\n+            if (position >= itemsCount) {\n+                position = 0\n+            }\n+            layoutManager.startSmoothScroll(\n+                createScroller(position)\n+            )\n+        }\n+        scrollHandler.sendEmptyMessageDelayed(WHAT_SCROLL, delayMillis)\n+    }", "originalCommit": "89f90d930084d029cdce22483e5e29c6fe058192", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "af9d030cafcf9b49c6a328c6a87e113070f99ba0", "url": "https://github.com/Catrobat/Catroid/commit/af9d030cafcf9b49c6a328c6a87e113070f99ba0", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-02-06T22:19:44Z", "type": "forcePushed"}, {"oid": "70b238826941c2dd3ac2c7c4d1ae90379adecde1", "url": "https://github.com/Catrobat/Catroid/commit/70b238826941c2dd3ac2c7c4d1ae90379adecde1", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-02-06T22:28:05Z", "type": "forcePushed"}, {"oid": "5c9f8ec972eb6db1d59a1d6a35edea2190599a29", "url": "https://github.com/Catrobat/Catroid/commit/5c9f8ec972eb6db1d59a1d6a35edea2190599a29", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-02-06T22:32:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTUxMjcwNA==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r571512704", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (frontCamera.xor(false)) 1 - relativeX else relativeX,\n          \n          \n            \n                            if (frontCamera) 1 - relativeX else relativeX,\n          \n      \n    \n    \n  \n\n@ndrnour please also rebase: there have been many changes in the meantime in catroid/src/main/java/org/catrobat/catroid/camera/FaceAndTextDetector.kt because of 5f865e4 and we have no functional automatic tests for these sensors, i.e., must test them manually with real phones (cannot test camera with emulator, cannot mock), and also on different Android versions. When you rebase, we can see the changes in the latest develop version here.", "author": "wslany", "createdAt": "2021-02-07T01:19:51Z", "path": "catroid/src/main/java/org/catrobat/catroid/camera/FaceAndTextDetector.kt", "diffHunk": "@@ -196,23 +195,22 @@ object FaceAndTextDetector : ImageAnalysis.Analyzer {\n         imageHeight: Int\n     ) {\n         val frontCamera = StageActivity.getActiveCameraManager().isCameraFacingFront\n-        val oldAPI = Build.VERSION.SDK_INT < Build.VERSION_CODES.M\n         val aspectRatio = imageWidth.toFloat() / imageHeight\n         val faceBounds = face.boundingBox\n \n         val facePosition = if (ProjectManager.getInstance().isCurrentProjectLandscapeMode) {\n             val relativeX = faceBounds.exactCenterY() / imageHeight\n             val relativeY = faceBounds.exactCenterX() / imageWidth\n             coordinatesFromRelativePosition(\n-                if (oldAPI) relativeX else 1 - relativeX,\n+                1 - relativeX,\n                 SCREEN_WIDTH / aspectRatio,\n                 if (frontCamera) relativeY else 1 - relativeY,\n                 SCREEN_WIDTH.toFloat()\n             )\n         } else {\n             val relativeX = faceBounds.exactCenterX() / imageHeight\n             coordinatesFromRelativePosition(\n-                if (frontCamera.xor(oldAPI)) 1 - relativeX else relativeX,\n+                if (frontCamera.xor(false)) 1 - relativeX else relativeX,", "originalCommit": "5c9f8ec972eb6db1d59a1d6a35edea2190599a29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTUxMzcxMQ==", "url": "https://github.com/Catrobat/Catroid/pull/3895#discussion_r571513711", "bodyText": "done. this branch is up to date with develop branch.", "author": "ndrnour", "createdAt": "2021-02-07T01:31:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTUxMjcwNA=="}], "type": "inlineReview"}, {"oid": "338a089f3bb0a5771b6ed28da8071ffa081a21a4", "url": "https://github.com/Catrobat/Catroid/commit/338a089f3bb0a5771b6ed28da8071ffa081a21a4", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-02-07T01:28:42Z", "type": "forcePushed"}, {"oid": "da16c26b998b2c3e3d8b7dde5c67924297861c26", "url": "https://github.com/Catrobat/Catroid/commit/da16c26b998b2c3e3d8b7dde5c67924297861c26", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-02-07T07:35:26Z", "type": "forcePushed"}, {"oid": "dd5011182d41b5c43899ba389b26ad6657aaf669", "url": "https://github.com/Catrobat/Catroid/commit/dd5011182d41b5c43899ba389b26ad6657aaf669", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-03-05T09:40:35Z", "type": "forcePushed"}, {"oid": "c0b2abc8da4596d43c529a9b4f2b4841b975ea79", "url": "https://github.com/Catrobat/Catroid/commit/c0b2abc8da4596d43c529a9b4f2b4841b975ea79", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-03-24T09:40:20Z", "type": "forcePushed"}, {"oid": "653711d5fa05c365e41def417bab084170087b11", "url": "https://github.com/Catrobat/Catroid/commit/653711d5fa05c365e41def417bab084170087b11", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-03-24T11:36:26Z", "type": "commit"}, {"oid": "653711d5fa05c365e41def417bab084170087b11", "url": "https://github.com/Catrobat/Catroid/commit/653711d5fa05c365e41def417bab084170087b11", "message": "CATROID-728: Show featured projects on the landing page.\n* Show the featured projects in a carousel on the landing page\n* Open the featured project's profile in the webview when tapped.\n* Show a message instead if no internet connection is available\n* refactoring MainMenuFragment to kotlin\n* Help is now as action menu item\n* integrate retrofit\n* integrate Glide (images downloader)\n* integrate Moshi (JSON parser)\n* add NetworkConnectionMonitor.kt to indicate internet connection state (injectable)\n* add Extensions.kt\n\n** extra changes:\n* upgrade gradle to 3.5.4\n* upgrade minsdk to 23\n* upgrade google play service to 19.0.0 (except analytics)\n* integrate koin-test and mockwebserver", "committedDate": "2021-03-24T11:36:26Z", "type": "forcePushed"}]}