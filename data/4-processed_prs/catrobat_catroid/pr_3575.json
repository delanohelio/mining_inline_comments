{"pr_number": 3575, "pr_title": "CATROID-213 Add new user defined brick", "pr_createdAt": "2020-04-08T07:15:27Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3575", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ2MjA4Nw==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r405462087", "bodyText": "Please remove this.", "author": "gPathpp", "createdAt": "2020-04-08T11:45:58Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/AddUserBrickFragment.java", "diffHunk": "@@ -45,9 +49,30 @@ public static AddUserBrickFragment newInstance() {\n \n \t@Override\n \tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n-\t\tView view = inflater.inflate(R.layout.fragment_brick_add_userbrick, container, false);\n+\t\tView view = inflater.inflate(R.layout.fragment_add_new_user_brick, container, false);\n+\t\taddLabel = view.findViewById(R.id.add_label);\n+\t\taddInput = view.findViewById(R.id.add_input);\n+\t\taddLabel.setOnClickListener(v -> handleAddLabel());\n+\t\taddInput.setOnClickListener(v -> handleAddInput());\n+\n \t\t((AppCompatActivity) getActivity())\n-\t\t\t\t.getSupportActionBar().setTitle(R.string.category_user_bricks);\n+\t\t\t\t.getSupportActionBar().setTitle(R.string.brick_add_new_user_brick);\n+\n \t\treturn view;\n \t}\n+\n+\t@Override\n+\tpublic void onDestroyView() {\n+\t\tsuper.onDestroyView();\n+\t\t((AppCompatActivity) getActivity())\n+\t\t\t\t.getSupportActionBar().setTitle(R.string.category_user_bricks);\n+\t}\n+\n+\tprivate void handleAddLabel() {\n+\t\tint i = 1;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ3NzIyNw==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r405477227", "bodyText": "Please make a null-ptr check.", "author": "gPathpp", "createdAt": "2020-04-08T12:13:23Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/UserBrickListFragment.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.fragment;\n+\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageButton;\n+\n+import org.catrobat.catroid.R;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.fragment.app.ListFragment;\n+\n+public class UserBrickListFragment extends ListFragment implements View.OnClickListener {\n+\n+\tpublic static final String USER_BRICK_LIST_FRAGMENT_TAG =\n+\t\t\tAddBrickFragment.class.getSimpleName();\n+\n+\tprivate ImageButton addUserBrickButton;\n+\n+\tpublic static UserBrickListFragment newInstance() {\n+\t\tUserBrickListFragment fragment = new UserBrickListFragment();\n+\n+\t\treturn fragment;\n+\t}\n+\n+\t@Override\n+\tpublic void onDestroyView() {\n+\t\tsuper.onDestroyView();\n+\t\t((AppCompatActivity) getActivity())\n+\t\t\t\t.getSupportActionBar().setTitle(R.string.categories);\n+\t}\n+\n+\t@Override\n+\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+\t\tView view = inflater.inflate(R.layout.fragment_user_brick_list, container, false);\n+\t\tsetHasOptionsMenu(true);\n+\t\taddUserBrickButton = view.findViewById(R.id.add_user_brick);\n+\t\taddUserBrickButton.setOnClickListener(this);\n+\n+\t\t((AppCompatActivity) getActivity())\n+\t\t\t\t.getSupportActionBar().setTitle(R.string.category_user_bricks);\n+\n+\t\treturn view;\n+\t}\n+\n+\t@Override\n+\tpublic void onClick(View v) {\n+\t\tAddUserBrickFragment addUserBrickFragment = AddUserBrickFragment.newInstance();\n+\t\tString tag = AddUserBrickFragment.ADD_USER_BRICK_FRAGMENT_TAG;\n+\n+\t\tgetFragmentManager().beginTransaction()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ3NzUxOA==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r405477518", "bodyText": "Please make a null-ptr check.", "author": "gPathpp", "createdAt": "2020-04-08T12:13:47Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/UserBrickListFragment.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.fragment;\n+\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageButton;\n+\n+import org.catrobat.catroid.R;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.fragment.app.ListFragment;\n+\n+public class UserBrickListFragment extends ListFragment implements View.OnClickListener {\n+\n+\tpublic static final String USER_BRICK_LIST_FRAGMENT_TAG =\n+\t\t\tAddBrickFragment.class.getSimpleName();\n+\n+\tprivate ImageButton addUserBrickButton;\n+\n+\tpublic static UserBrickListFragment newInstance() {\n+\t\tUserBrickListFragment fragment = new UserBrickListFragment();\n+\n+\t\treturn fragment;\n+\t}\n+\n+\t@Override\n+\tpublic void onDestroyView() {\n+\t\tsuper.onDestroyView();\n+\t\t((AppCompatActivity) getActivity())", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ3NzU3OQ==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r405477579", "bodyText": "Please make a null-ptr check.", "author": "gPathpp", "createdAt": "2020-04-08T12:13:54Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/UserBrickListFragment.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.fragment;\n+\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageButton;\n+\n+import org.catrobat.catroid.R;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.fragment.app.ListFragment;\n+\n+public class UserBrickListFragment extends ListFragment implements View.OnClickListener {\n+\n+\tpublic static final String USER_BRICK_LIST_FRAGMENT_TAG =\n+\t\t\tAddBrickFragment.class.getSimpleName();\n+\n+\tprivate ImageButton addUserBrickButton;\n+\n+\tpublic static UserBrickListFragment newInstance() {\n+\t\tUserBrickListFragment fragment = new UserBrickListFragment();\n+\n+\t\treturn fragment;\n+\t}\n+\n+\t@Override\n+\tpublic void onDestroyView() {\n+\t\tsuper.onDestroyView();\n+\t\t((AppCompatActivity) getActivity())\n+\t\t\t\t.getSupportActionBar().setTitle(R.string.categories);\n+\t}\n+\n+\t@Override\n+\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+\t\tView view = inflater.inflate(R.layout.fragment_user_brick_list, container, false);\n+\t\tsetHasOptionsMenu(true);\n+\t\taddUserBrickButton = view.findViewById(R.id.add_user_brick);\n+\t\taddUserBrickButton.setOnClickListener(this);\n+\n+\t\t((AppCompatActivity) getActivity())", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ3ODI4MA==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r405478280", "bodyText": "Please remove this.", "author": "gPathpp", "createdAt": "2020-04-08T12:15:09Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/AddUserBrickFragment.java", "diffHunk": "@@ -45,9 +49,30 @@ public static AddUserBrickFragment newInstance() {\n \n \t@Override\n \tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n-\t\tView view = inflater.inflate(R.layout.fragment_brick_add_userbrick, container, false);\n+\t\tView view = inflater.inflate(R.layout.fragment_add_new_user_brick, container, false);\n+\t\taddLabel = view.findViewById(R.id.add_label);\n+\t\taddInput = view.findViewById(R.id.add_input);\n+\t\taddLabel.setOnClickListener(v -> handleAddLabel());\n+\t\taddInput.setOnClickListener(v -> handleAddInput());\n+\n \t\t((AppCompatActivity) getActivity())\n-\t\t\t\t.getSupportActionBar().setTitle(R.string.category_user_bricks);\n+\t\t\t\t.getSupportActionBar().setTitle(R.string.brick_add_new_user_brick);\n+\n \t\treturn view;\n \t}\n+\n+\t@Override\n+\tpublic void onDestroyView() {\n+\t\tsuper.onDestroyView();\n+\t\t((AppCompatActivity) getActivity())\n+\t\t\t\t.getSupportActionBar().setTitle(R.string.category_user_bricks);\n+\t}\n+\n+\tprivate void handleAddLabel() {\n+\t\tint i = 1;\n+\t}\n+\n+\tprivate void handleAddInput() {\n+\t\tint i = 1;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ3ODY4NQ==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r405478685", "bodyText": "Null-ptr check, please.", "author": "gPathpp", "createdAt": "2020-04-08T12:15:54Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/AddUserBrickFragment.java", "diffHunk": "@@ -45,9 +49,30 @@ public static AddUserBrickFragment newInstance() {\n \n \t@Override\n \tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n-\t\tView view = inflater.inflate(R.layout.fragment_brick_add_userbrick, container, false);\n+\t\tView view = inflater.inflate(R.layout.fragment_add_new_user_brick, container, false);\n+\t\taddLabel = view.findViewById(R.id.add_label);\n+\t\taddInput = view.findViewById(R.id.add_input);\n+\t\taddLabel.setOnClickListener(v -> handleAddLabel());\n+\t\taddInput.setOnClickListener(v -> handleAddInput());\n+\n \t\t((AppCompatActivity) getActivity())\n-\t\t\t\t.getSupportActionBar().setTitle(R.string.category_user_bricks);\n+\t\t\t\t.getSupportActionBar().setTitle(R.string.brick_add_new_user_brick);\n+\n \t\treturn view;\n \t}\n+\n+\t@Override\n+\tpublic void onDestroyView() {\n+\t\tsuper.onDestroyView();\n+\t\t((AppCompatActivity) getActivity())", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ3ODgyNw==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r405478827", "bodyText": "Null-ptr check, please.", "author": "gPathpp", "createdAt": "2020-04-08T12:16:11Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/AddUserBrickFragment.java", "diffHunk": "@@ -45,9 +49,30 @@ public static AddUserBrickFragment newInstance() {\n \n \t@Override\n \tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n-\t\tView view = inflater.inflate(R.layout.fragment_brick_add_userbrick, container, false);\n+\t\tView view = inflater.inflate(R.layout.fragment_add_new_user_brick, container, false);\n+\t\taddLabel = view.findViewById(R.id.add_label);\n+\t\taddInput = view.findViewById(R.id.add_input);\n+\t\taddLabel.setOnClickListener(v -> handleAddLabel());\n+\t\taddInput.setOnClickListener(v -> handleAddInput());\n+\n \t\t((AppCompatActivity) getActivity())\n-\t\t\t\t.getSupportActionBar().setTitle(R.string.category_user_bricks);\n+\t\t\t\t.getSupportActionBar().setTitle(R.string.brick_add_new_user_brick);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ4MDQ5Ng==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r405480496", "bodyText": "Is there any existing style for buttons we could use here?\nIf so, please use it, else please add one.", "author": "gPathpp", "createdAt": "2020-04-08T12:19:04Z", "path": "catroid/src/main/res/layout/fragment_add_new_user_brick.xml", "diffHunk": "@@ -0,0 +1,76 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Catroid: An on-device visual programming system for Android devices\n+  ~ Copyright (C) 2010-2018 The Catrobat Team\n+  ~ (<http://developer.catrobat.org/credits>)\n+  ~\n+  ~ This program is free software: you can redistribute it and/or modify\n+  ~ it under the terms of the GNU Affero General Public License as\n+  ~ published by the Free Software Foundation, either version 3 of the\n+  ~ License, or (at your option) any later version.\n+  ~\n+  ~ An additional term exception under section 7 of the GNU Affero\n+  ~ General Public License, version 3, is available at\n+  ~ http://developer.catrobat.org/license_additional_term\n+  ~\n+  ~ This program is distributed in the hope that it will be useful,\n+  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+  ~ GNU Affero General Public License for more details.\n+  ~\n+  ~ You should have received a copy of the GNU Affero General Public License\n+  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+  -->\n+\n+\n+<!-- Overdraw lint warning is ignored - fragments need refactoring -->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"@color/app_background\"\n+    android:orientation=\"vertical\"\n+    tools:ignore=\"Overdraw\">\n+\n+    <org.catrobat.catroid.ui.BrickLayout\n+        android:id=\"@+id/brick_user_brick\"\n+        style=\"@style/BrickContainer.Look.Medium\"\n+        android:layout_marginTop=\"10dp\"\n+        android:background=\"@drawable/brick_darkblue_1h\">\n+        <include layout=\"@layout/icon_brick_category_look\" />\n+        <TextView\n+            style=\"@style/BrickText.SingleLine\"\n+            android:labelFor=\"@+id/brick_user_brick_edit_text\"\n+            android:text=\"@string/brick_user_defined\">\n+        </TextView>\n+        </org.catrobat.catroid.ui.BrickLayout>\n+\n+    <Button\n+        android:id=\"@+id/add_label\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"60dp\"", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ4MTY2Nw==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r405481667", "bodyText": "Remove these new blank lines, please.", "author": "gPathpp", "createdAt": "2020-04-08T12:21:08Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/SpriteActivity.java", "diffHunk": "@@ -260,6 +260,8 @@ public void onBackPressed() {\n \t\tsuper.onBackPressed();\n \t}\n \n+", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyMDc1NQ==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r408020755", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <string name=\"brick_user_defined\">Your brick</string>\n          \n      \n    \n    \n  \n\nThe blue brick should initially be empty. No text shall be shown there.", "author": "wslany", "createdAt": "2020-04-14T10:08:36Z", "path": "catroid/src/main/res/values/strings.xml", "diffHunk": "@@ -1052,6 +1052,13 @@\n     <string name=\"category_assertions\">Testing</string>\n     <!--  -->\n \n+    <!-- User Defined Bricks -->\n+    <string name=\"brick_user_defined\">Your brick</string>", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyMjk1Ng==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r408022956", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        android:labelFor=\"@+id/brick_user_brick_edit_text\"\n          \n          \n            \n                        android:text=\"@string/brick_user_defined\">\n          \n          \n            \n                        android:labelFor=\"@+id/brick_user_brick_edit_text\">\n          \n      \n    \n    \n  \n\nOr use android:text=\"\", i.e., an empty string if necessary.\nReason: The blue brick should initially be empty. No text shall be shown there.", "author": "wslany", "createdAt": "2020-04-14T10:12:14Z", "path": "catroid/src/main/res/layout/fragment_add_new_user_brick.xml", "diffHunk": "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Catroid: An on-device visual programming system for Android devices\n+  ~ Copyright (C) 2010-2018 The Catrobat Team\n+  ~ (<http://developer.catrobat.org/credits>)\n+  ~\n+  ~ This program is free software: you can redistribute it and/or modify\n+  ~ it under the terms of the GNU Affero General Public License as\n+  ~ published by the Free Software Foundation, either version 3 of the\n+  ~ License, or (at your option) any later version.\n+  ~\n+  ~ An additional term exception under section 7 of the GNU Affero\n+  ~ General Public License, version 3, is available at\n+  ~ http://developer.catrobat.org/license_additional_term\n+  ~\n+  ~ This program is distributed in the hope that it will be useful,\n+  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+  ~ GNU Affero General Public License for more details.\n+  ~\n+  ~ You should have received a copy of the GNU Affero General Public License\n+  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+  -->\n+\n+\n+<!-- Overdraw lint warning is ignored - fragments need refactoring -->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"@color/app_background\"\n+    android:orientation=\"vertical\"\n+    tools:ignore=\"Overdraw\">\n+\n+    <org.catrobat.catroid.ui.BrickLayout\n+        android:id=\"@+id/brick_user_brick\"\n+        style=\"@style/BrickContainer.Look.Medium\"\n+        android:layout_marginTop=\"10dp\"\n+        android:background=\"@drawable/brick_darkblue_1h\">\n+\n+        <include layout=\"@layout/icon_brick_category_look\" />\n+\n+        <TextView\n+            style=\"@style/BrickText.SingleLine\"\n+            android:labelFor=\"@+id/brick_user_brick_edit_text\"\n+            android:text=\"@string/brick_user_defined\">", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyNDI1Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3575#discussion_r408024252", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <string name=\"brick_add_new_user_brick\">Add new User Brick</string>\n          \n          \n            \n                <string name=\"brick_add_new_user_brick\">Add new brick</string>\n          \n      \n    \n    \n  \n\nReason: The term \"user brick\" is only relevant for our developers, but shall not be visible for our users. Also, we try to use normal English capitalization rules.", "author": "wslany", "createdAt": "2020-04-14T10:14:29Z", "path": "catroid/src/main/res/values/strings.xml", "diffHunk": "@@ -1052,6 +1052,13 @@\n     <string name=\"category_assertions\">Testing</string>\n     <!--  -->\n \n+    <!-- User Defined Bricks -->\n+    <string name=\"brick_user_defined\">Your brick</string>\n+    <string name=\"brick_user_defined_add_label\">Add label</string>\n+    <string name=\"brick_user_defined_add_input\">Add input</string>\n+    <string name=\"brick_add_new_user_brick\">Add new User Brick</string>", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "73a5ebe30084ff4d50e8bf2f3cca1091580edf2a", "url": "https://github.com/Catrobat/Catroid/commit/73a5ebe30084ff4d50e8bf2f3cca1091580edf2a", "message": "CATROID-213 Add new user defined brick", "committedDate": "2020-04-16T17:21:29Z", "type": "commit"}]}