{"pr_number": 3491, "pr_title": "CATROID-469 Stitching brick behaves incorrectly over 60 steps", "pr_createdAt": "2020-02-25T09:23:27Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3491", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ0OTI3Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3491#discussion_r391449272", "bodyText": "Please verify (maybe in an extra test method) that the second stitch-point is always drawn.", "author": "gPathpp", "createdAt": "2020-03-12T07:53:01Z", "path": "catroid/src/test/java/org/catrobat/catroid/stage/EmbroideryActorCircleTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.stage;\n+\n+import com.badlogic.gdx.graphics.g2d.Batch;\n+import com.badlogic.gdx.graphics.glutils.ShapeRenderer;\n+\n+import org.catrobat.catroid.embroidery.EmbroideryPatternManager;\n+import org.catrobat.catroid.embroidery.StitchPoint;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameter;\n+import org.junit.runners.Parameterized.Parameters;\n+import org.mockito.verification.VerificationMode;\n+\n+import java.util.List;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import static java.util.Arrays.asList;\n+\n+@RunWith(Parameterized.class)\n+public class EmbroideryActorCircleTest {\n+\t@Parameters(name = \"{0}\")\n+\tpublic static Iterable<Object[]> data() {\n+\t\treturn asList(new Object[][] {\n+\t\t\t\t{\"Test JumpPoint after ChangePoint\", asList(getChangePointMock(), getJumpPointMock()), false},\n+\t\t\t\t{\"Test Connecting Points\", asList(getConnectingPointMock(), getConnectingPointMock()), true},\n+\t\t\t\t{\"Test Changing Points\", asList(getChangePointMock(), getChangePointMock()), false},\n+\t\t\t\t{\"Test ChangePoint after JumpPoint\", asList(getJumpPointMock(), getChangePointMock()), false},\n+\t\t\t\t{\"Test JumpPoint after ConnectingPoint\", asList(getConnectingPointMock(), getJumpPointMock()), true},\n+\t\t\t\t{\"Test Jumping Points\", asList(getJumpPointMock(), getJumpPointMock()), false},\n+\t\t});\n+\t}\n+\n+\t@Parameter\n+\tpublic String name;\n+\n+\t@Parameter(1)\n+\tpublic List<StitchPoint> stitchPoints;\n+\n+\t@Parameter(2)\n+\tpublic boolean firstPointDrawn;\n+\n+\tprivate EmbroideryActor embroideryActorSpy;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tEmbroideryPatternManager embroideryPatternManager = mock(EmbroideryPatternManager.class);\n+\t\twhen(embroideryPatternManager.getEmbroideryPatternList()).thenReturn(stitchPoints);\n+\t\tShapeRenderer renderer = mock(ShapeRenderer.class);\n+\t\tembroideryActorSpy = spy(new EmbroideryActor(1.0f, embroideryPatternManager, renderer));\n+\t}\n+\n+\t@Test\n+\tpublic void testDraw() {\n+\t\tembroideryActorSpy.draw(mock(Batch.class), 1.0F);\n+\n+\t\tVerificationMode mode = firstPointDrawn ? times(1) : never();\n+\t\tverify(embroideryActorSpy, mode).drawCircle(stitchPoints.get(0));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "26f643ce223b5791c1d005f041184fbb71a42959", "url": "https://github.com/Catrobat/Catroid/commit/26f643ce223b5791c1d005f041184fbb71a42959", "message": "CATROID-469 Stitching brick behaves incorrectly over 60 steps", "committedDate": "2020-03-15T17:21:02Z", "type": "commit"}, {"oid": "26f643ce223b5791c1d005f041184fbb71a42959", "url": "https://github.com/Catrobat/Catroid/commit/26f643ce223b5791c1d005f041184fbb71a42959", "message": "CATROID-469 Stitching brick behaves incorrectly over 60 steps", "committedDate": "2020-03-15T17:21:02Z", "type": "forcePushed"}]}