{"pr_number": 3456, "pr_title": "CATROID-182 Add visual placement to the GlideToBrick", "pr_createdAt": "2020-02-05T14:54:58Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3456", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3OTQ2Nw==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r377079467", "bodyText": "Please make a new interface or a class (VisualPlacementBrick or smth) to minimize code duplication.", "author": "gPathpp", "createdAt": "2020-02-10T14:01:56Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/FormulaBrick.java", "diffHunk": "@@ -149,6 +170,81 @@ public void showFormulaEditorToEditFormula(View view) {\n \t\t}\n \t}\n \n+\tpublic void showFormulaEditorVisualPlacementDecision(final View view) {\n+\t\tContext context = view.getContext();\n+\t\tFragment currentFragment = UiUtils.getActivityFromView(view).getSupportFragmentManager()\n+\t\t\t\t.findFragmentById(R.id.fragment_container);\n+\n+\t\tboolean showVisualPlacementDialog;\n+\t\tif (this instanceof PlaceAtBrick) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3MjEyOQ==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378272129", "bodyText": "Please split up in separate test cases.", "author": "gPathpp", "createdAt": "2020-02-12T14:09:08Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/VisualPlacementBrickTest.java", "diffHunk": "@@ -48,56 +54,98 @@\n import static android.support.test.espresso.matcher.ViewMatchers.withText;\n \n import static org.catrobat.catroid.uiespresso.content.brick.utils.BrickDataInteractionWrapper.onBrickAtPosition;\n-import static org.catrobat.catroid.uiespresso.content.brick.utils.BrickTestUtils.createProjectAndGetStartScript;\n import static org.catrobat.catroid.uiespresso.formulaeditor.utils.FormulaEditorWrapper.onFormulaEditor;\n \n-@RunWith(AndroidJUnit4.class)\n-public class PlaceAtBrickTest {\n+@Category({Cat.AppUi.class, Level.Smoke.class})\n+@RunWith(Parameterized.class)\n+public class VisualPlacementBrickTest {\n \tprivate int brickPosition;\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Collection<Object[]> data() {\n+\t\treturn Arrays.asList(new Object[][] {\n+\t\t\t\t{\"GlideToBrick\", GlideToBrick.class, R.string.brick_glide, new GlideToBrick(),\n+\t\t\t\t\t\tR.id.brick_glide_to_edit_text_x, R.id.brick_glide_to_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"},\n+\t\t\t\t{\"PlaceAtBrick\", PlaceAtBrick.class, R.string.brick_place_at, new PlaceAtBrick(),\n+\t\t\t\t\t\tR.id.brick_place_at_edit_text_x, R.id.brick_place_at_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"}\n+\t\t});\n+\t}\n+\n+\t@Parameterized.Parameter\n+\tpublic String name;\n+\n+\t@Parameterized.Parameter(1)\n+\tpublic Class brickClass;\n+\n+\t@Parameterized.Parameter(2)\n+\tpublic int brickString;\n+\n+\t@Parameterized.Parameter(3)\n+\tpublic Brick brick;\n+\n+\t@Parameterized.Parameter(4)\n+\tpublic int editTextXId;\n+\n+\t@Parameterized.Parameter(5)\n+\tpublic int editTextYId;\n+\n+\t@Parameterized.Parameter(6)\n+\tpublic String firstInput;\n+\n+\t@Parameterized.Parameter(7)\n+\tpublic int secondInput;\n+\n+\t@Parameterized.Parameter(8)\n+\tpublic String expectedFirstOutput;\n+\n+\t@Parameterized.Parameter(9)\n+\tpublic String expectedSecondOutput;\n+\n \t@After\n \tpublic void tearDown() throws Exception {\n-\t\tTestUtils.deleteProjects(PlaceAtBrickTest.class.getSimpleName());\n+\t\tTestUtils.deleteProjects(brickClass.getSimpleName());\n \t}\n \n \t@Before\n \tpublic void setUp() throws Exception {\n \t\tbrickPosition = 1;\n-\t\tcreateProjectAndGetStartScript(PlaceAtBrickTest.class.getSimpleName())\n-\t\t\t\t.addBrick(new PlaceAtBrick());\n+\t\tScript script = BrickTestUtils.createProjectAndGetStartScript(\"VisualPlacementBrickTest\");\n+\t\tscript.addBrick(brick);\n+\n \t\tbaseActivityTestRule.launchActivity();\n \t}\n \n-\t@Category({Cat.AppUi.class, Level.Smoke.class})\n \t@Test\n-\tpublic void testPlaceAtBrick() {\n-\t\tonBrickAtPosition(brickPosition).checkShowsText(R.string.brick_place_at);\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n+\tpublic void testVisualPlacementBrick() {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3NzgwOA==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378277808", "bodyText": "Please delete the right project.", "author": "gPathpp", "createdAt": "2020-02-12T14:18:05Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/VisualPlacementBrickTest.java", "diffHunk": "@@ -48,56 +54,98 @@\n import static android.support.test.espresso.matcher.ViewMatchers.withText;\n \n import static org.catrobat.catroid.uiespresso.content.brick.utils.BrickDataInteractionWrapper.onBrickAtPosition;\n-import static org.catrobat.catroid.uiespresso.content.brick.utils.BrickTestUtils.createProjectAndGetStartScript;\n import static org.catrobat.catroid.uiespresso.formulaeditor.utils.FormulaEditorWrapper.onFormulaEditor;\n \n-@RunWith(AndroidJUnit4.class)\n-public class PlaceAtBrickTest {\n+@Category({Cat.AppUi.class, Level.Smoke.class})\n+@RunWith(Parameterized.class)\n+public class VisualPlacementBrickTest {\n \tprivate int brickPosition;\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Collection<Object[]> data() {\n+\t\treturn Arrays.asList(new Object[][] {\n+\t\t\t\t{\"GlideToBrick\", GlideToBrick.class, R.string.brick_glide, new GlideToBrick(),\n+\t\t\t\t\t\tR.id.brick_glide_to_edit_text_x, R.id.brick_glide_to_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"},\n+\t\t\t\t{\"PlaceAtBrick\", PlaceAtBrick.class, R.string.brick_place_at, new PlaceAtBrick(),\n+\t\t\t\t\t\tR.id.brick_place_at_edit_text_x, R.id.brick_place_at_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"}\n+\t\t});\n+\t}\n+\n+\t@Parameterized.Parameter\n+\tpublic String name;\n+\n+\t@Parameterized.Parameter(1)\n+\tpublic Class brickClass;\n+\n+\t@Parameterized.Parameter(2)\n+\tpublic int brickString;\n+\n+\t@Parameterized.Parameter(3)\n+\tpublic Brick brick;\n+\n+\t@Parameterized.Parameter(4)\n+\tpublic int editTextXId;\n+\n+\t@Parameterized.Parameter(5)\n+\tpublic int editTextYId;\n+\n+\t@Parameterized.Parameter(6)\n+\tpublic String firstInput;\n+\n+\t@Parameterized.Parameter(7)\n+\tpublic int secondInput;\n+\n+\t@Parameterized.Parameter(8)\n+\tpublic String expectedFirstOutput;\n+\n+\t@Parameterized.Parameter(9)\n+\tpublic String expectedSecondOutput;\n+\n \t@After\n \tpublic void tearDown() throws Exception {\n-\t\tTestUtils.deleteProjects(PlaceAtBrickTest.class.getSimpleName());\n+\t\tTestUtils.deleteProjects(brickClass.getSimpleName());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4MTcxOQ==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378281719", "bodyText": "Please delete this, it looks like a copy/paste error of a previous developer.", "author": "gPathpp", "createdAt": "2020-02-12T14:24:19Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/intents/visualplacement/SpriteActivityVisualPlacementTest.java", "diffHunk": "@@ -86,7 +86,7 @@ public void setUp() throws Exception {\n \t@After\n \tpublic void tearDown() throws Exception {\n \t\tIntents.release();\n-\t\tTestUtils.deleteProjects(PlaceAtBrickTest.class.getSimpleName());\n+\t\tTestUtils.deleteProjects(VisualPlacementBrickTest.class.getSimpleName());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4MTk4NA==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378281984", "bodyText": "Here also.", "author": "gPathpp", "createdAt": "2020-02-12T14:24:46Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/activity/ProjectActivityTest.java", "diffHunk": "@@ -88,7 +88,7 @@ public void setUp() {\n \t@After\n \tpublic void tearDown() throws Exception {\n \t\tIntents.release();\n-\t\tTestUtils.deleteProjects(PlaceAtBrickTest.class.getSimpleName());\n+\t\tTestUtils.deleteProjects(VisualPlacementBrickTest.class.getSimpleName());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4MzQ4Nw==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378283487", "bodyText": "Please rename this to getXEditTextId or smth. (same for Y)", "author": "gPathpp", "createdAt": "2020-02-12T14:27:05Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/GlideToBrick.java", "diffHunk": "@@ -77,4 +77,24 @@ public void addActionToSequence(Sprite sprite, ScriptSequenceAction sequence) {\n \t\t\t\tgetFormulaWithBrickField(BrickField.Y_DESTINATION),\n \t\t\t\tgetFormulaWithBrickField(BrickField.DURATION_IN_SECONDS)));\n \t}\n+\n+\t@Override\n+\tpublic BrickField getXBrickField() {\n+\t\treturn BrickField.X_DESTINATION;\n+\t}\n+\n+\t@Override\n+\tpublic BrickField getYBrickField() {\n+\t\treturn BrickField.Y_DESTINATION;\n+\t}\n+\n+\t@Override\n+\tpublic int getXEditText() {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4NjU2MQ==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378286561", "bodyText": "Make this to VisualPlacementBrick to minimize code duplication.", "author": "gPathpp", "createdAt": "2020-02-12T14:31:54Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/SpriteActivity.java", "diffHunk": "@@ -352,7 +353,11 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {\n \t\t\t\tif (fragment instanceof ScriptFragment) {\n \t\t\t\t\tBrick brick = ((ScriptFragment) fragment).findBrickByHash(brickHash);\n \t\t\t\t\tif (brick != null) {\n-\t\t\t\t\t\t((PlaceAtBrick) brick).setCoordinates(xCoordinate, yCoordinate);\n+\t\t\t\t\t\tif (brick instanceof PlaceAtBrick) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgyNzMyMg==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378827322", "bodyText": "Please check if the pressBack here is really necessary.", "author": "gPathpp", "createdAt": "2020-02-13T12:22:23Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/VisualPlacementBrickTest.java", "diffHunk": "@@ -51,62 +56,129 @@\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n \n-@RunWith(AndroidJUnit4.class)\n-public class PlaceAtBrickTest {\n-\tprivate int brickPosition;\n+@Category({Cat.AppUi.class, Level.Smoke.class})\n+@RunWith(Parameterized.class)\n+public class VisualPlacementBrickTest {\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Collection<Object[]> data() {\n+\t\treturn Arrays.asList(new Object[][] {\n+\t\t\t\t{\"GlideToBrick\", R.string.brick_glide, new GlideToBrick(),\n+\t\t\t\t\t\tR.id.brick_glide_to_edit_text_x, R.id.brick_glide_to_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"},\n+\t\t\t\t{\"PlaceAtBrick\", R.string.brick_place_at, new PlaceAtBrick(),\n+\t\t\t\t\t\tR.id.brick_place_at_edit_text_x, R.id.brick_place_at_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"}\n+\t\t});\n+\t}\n+\n+\t@Parameterized.Parameter\n+\tpublic String name;\n+\n+\t@Parameterized.Parameter(1)\n+\tpublic int brickString;\n+\n+\t@Parameterized.Parameter(2)\n+\tpublic Brick brick;\n+\n+\t@Parameterized.Parameter(3)\n+\tpublic int editTextXId;\n+\n+\t@Parameterized.Parameter(4)\n+\tpublic int editTextYId;\n+\n+\t@Parameterized.Parameter(5)\n+\tpublic String firstInput;\n+\n+\t@Parameterized.Parameter(6)\n+\tpublic int secondInput;\n+\n+\t@Parameterized.Parameter(7)\n+\tpublic String expectedFirstOutput;\n+\n+\t@Parameterized.Parameter(8)\n+\tpublic String expectedSecondOutput;\n+\n \t@After\n \tpublic void tearDown() throws Exception {\n-\t\tTestUtils.deleteProjects(PlaceAtBrickTest.class.getSimpleName());\n+\t\tbaseActivityTestRule.finishActivity();\n+\t\tTestUtils.deleteProjects(VisualPlacementBrickTest.class.getSimpleName());\n \t}\n \n \t@Before\n \tpublic void setUp() throws Exception {\n-\t\tbrickPosition = 1;\n-\t\tcreateProjectAndGetStartScript(PlaceAtBrickTest.class.getSimpleName())\n-\t\t\t\t.addBrick(new PlaceAtBrick());\n+\t\tScript script =\n+\t\t\t\tBrickTestUtils.createProjectAndGetStartScript(VisualPlacementBrickTest.class.getSimpleName());\n+\t\tscript.addBrick(brick);\n+\n \t\tbaseActivityTestRule.launchActivity();\n \t}\n \n-\t@Category({Cat.AppUi.class, Level.Smoke.class})\n \t@Test\n-\tpublic void testPlaceAtBrick() {\n-\t\tonBrickAtPosition(brickPosition).checkShowsText(R.string.brick_place_at);\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n+\tpublic void testIsVisualPlacementShown() {\n+\t\tonBrickAtPosition(1).checkShowsText(brickString);\n+\t\tonView(withId(editTextXId))\n \t\t\t\t.perform(click());\n \t\tonView(withText(R.string.brick_place_at_option_place_visually))\n \t\t\t\t.check(matches(isDisplayed()));\n \t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n-\t\t\t\t.check(matches(isDisplayed()))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\n+\t\tonView(withId(editTextYId))\n+\t\t\t\t.perform(click());\n+\t\tonView(withText(R.string.brick_place_at_option_place_visually))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgyNzcyNQ==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378827725", "bodyText": "And in all other tests in this file too, please.", "author": "gPathpp", "createdAt": "2020-02-13T12:23:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgyNzMyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMTY4Nw==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378831687", "bodyText": "Since the input and the expected outcomes are everywhere the same, you could possibly move them into the test cases.\n(to reduce the overhead)", "author": "gPathpp", "createdAt": "2020-02-13T12:32:38Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/VisualPlacementBrickTest.java", "diffHunk": "@@ -51,62 +56,129 @@\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n \n-@RunWith(AndroidJUnit4.class)\n-public class PlaceAtBrickTest {\n-\tprivate int brickPosition;\n+@Category({Cat.AppUi.class, Level.Smoke.class})\n+@RunWith(Parameterized.class)\n+public class VisualPlacementBrickTest {\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Collection<Object[]> data() {\n+\t\treturn Arrays.asList(new Object[][] {\n+\t\t\t\t{\"GlideToBrick\", R.string.brick_glide, new GlideToBrick(),\n+\t\t\t\t\t\tR.id.brick_glide_to_edit_text_x, R.id.brick_glide_to_edit_text_y, \"1+2\",", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMzI0MA==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378833240", "bodyText": "If you make this type VisualPlacementBrick you can call the getX/getYEditTextId() and remove the two parameters.", "author": "gPathpp", "createdAt": "2020-02-13T12:36:06Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/VisualPlacementBrickTest.java", "diffHunk": "@@ -51,62 +56,129 @@\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n \n-@RunWith(AndroidJUnit4.class)\n-public class PlaceAtBrickTest {\n-\tprivate int brickPosition;\n+@Category({Cat.AppUi.class, Level.Smoke.class})\n+@RunWith(Parameterized.class)\n+public class VisualPlacementBrickTest {\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Collection<Object[]> data() {\n+\t\treturn Arrays.asList(new Object[][] {\n+\t\t\t\t{\"GlideToBrick\", R.string.brick_glide, new GlideToBrick(),\n+\t\t\t\t\t\tR.id.brick_glide_to_edit_text_x, R.id.brick_glide_to_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"},\n+\t\t\t\t{\"PlaceAtBrick\", R.string.brick_place_at, new PlaceAtBrick(),\n+\t\t\t\t\t\tR.id.brick_place_at_edit_text_x, R.id.brick_place_at_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"}\n+\t\t});\n+\t}\n+\n+\t@Parameterized.Parameter\n+\tpublic String name;\n+\n+\t@Parameterized.Parameter(1)\n+\tpublic int brickString;\n+\n+\t@Parameterized.Parameter(2)\n+\tpublic Brick brick;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzNzg4MA==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378837880", "bodyText": "Please rename this, the visual placement option should also be shown if the formula was edited, but not with formulas which are not only a number. (like \"1+2\")", "author": "gPathpp", "createdAt": "2020-02-13T12:46:10Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/VisualPlacementBrickTest.java", "diffHunk": "@@ -51,62 +56,129 @@\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n \n-@RunWith(AndroidJUnit4.class)\n-public class PlaceAtBrickTest {\n-\tprivate int brickPosition;\n+@Category({Cat.AppUi.class, Level.Smoke.class})\n+@RunWith(Parameterized.class)\n+public class VisualPlacementBrickTest {\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Collection<Object[]> data() {\n+\t\treturn Arrays.asList(new Object[][] {\n+\t\t\t\t{\"GlideToBrick\", R.string.brick_glide, new GlideToBrick(),\n+\t\t\t\t\t\tR.id.brick_glide_to_edit_text_x, R.id.brick_glide_to_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"},\n+\t\t\t\t{\"PlaceAtBrick\", R.string.brick_place_at, new PlaceAtBrick(),\n+\t\t\t\t\t\tR.id.brick_place_at_edit_text_x, R.id.brick_place_at_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"}\n+\t\t});\n+\t}\n+\n+\t@Parameterized.Parameter\n+\tpublic String name;\n+\n+\t@Parameterized.Parameter(1)\n+\tpublic int brickString;\n+\n+\t@Parameterized.Parameter(2)\n+\tpublic Brick brick;\n+\n+\t@Parameterized.Parameter(3)\n+\tpublic int editTextXId;\n+\n+\t@Parameterized.Parameter(4)\n+\tpublic int editTextYId;\n+\n+\t@Parameterized.Parameter(5)\n+\tpublic String firstInput;\n+\n+\t@Parameterized.Parameter(6)\n+\tpublic int secondInput;\n+\n+\t@Parameterized.Parameter(7)\n+\tpublic String expectedFirstOutput;\n+\n+\t@Parameterized.Parameter(8)\n+\tpublic String expectedSecondOutput;\n+\n \t@After\n \tpublic void tearDown() throws Exception {\n-\t\tTestUtils.deleteProjects(PlaceAtBrickTest.class.getSimpleName());\n+\t\tbaseActivityTestRule.finishActivity();\n+\t\tTestUtils.deleteProjects(VisualPlacementBrickTest.class.getSimpleName());\n \t}\n \n \t@Before\n \tpublic void setUp() throws Exception {\n-\t\tbrickPosition = 1;\n-\t\tcreateProjectAndGetStartScript(PlaceAtBrickTest.class.getSimpleName())\n-\t\t\t\t.addBrick(new PlaceAtBrick());\n+\t\tScript script =\n+\t\t\t\tBrickTestUtils.createProjectAndGetStartScript(VisualPlacementBrickTest.class.getSimpleName());\n+\t\tscript.addBrick(brick);\n+\n \t\tbaseActivityTestRule.launchActivity();\n \t}\n \n-\t@Category({Cat.AppUi.class, Level.Smoke.class})\n \t@Test\n-\tpublic void testPlaceAtBrick() {\n-\t\tonBrickAtPosition(brickPosition).checkShowsText(R.string.brick_place_at);\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n+\tpublic void testIsVisualPlacementShown() {\n+\t\tonBrickAtPosition(1).checkShowsText(brickString);\n+\t\tonView(withId(editTextXId))\n \t\t\t\t.perform(click());\n \t\tonView(withText(R.string.brick_place_at_option_place_visually))\n \t\t\t\t.check(matches(isDisplayed()));\n \t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n-\t\t\t\t.check(matches(isDisplayed()))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\n+\t\tonView(withId(editTextYId))\n+\t\t\t\t.perform(click());\n+\t\tonView(withText(R.string.brick_place_at_option_place_visually))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\t}\n+\n+\t@Test\n+\tpublic void testIsVisualPlacementShownOnBrickClick() {\n+\t\tonBrickAtPosition(1).performClick();\n+\t\tonView(withText(R.string.brick_place_at_option_place_visually))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\t}\n+\n+\t@Test\n+\tpublic void testNoVisualPlacementAfterFormulaEdited() {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzODk0NA==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378838944", "bodyText": "Please search for a better option to verify that the FormulaEditor is shown.", "author": "gPathpp", "createdAt": "2020-02-13T12:48:24Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/VisualPlacementBrickTest.java", "diffHunk": "@@ -51,62 +56,129 @@\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n \n-@RunWith(AndroidJUnit4.class)\n-public class PlaceAtBrickTest {\n-\tprivate int brickPosition;\n+@Category({Cat.AppUi.class, Level.Smoke.class})\n+@RunWith(Parameterized.class)\n+public class VisualPlacementBrickTest {\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Collection<Object[]> data() {\n+\t\treturn Arrays.asList(new Object[][] {\n+\t\t\t\t{\"GlideToBrick\", R.string.brick_glide, new GlideToBrick(),\n+\t\t\t\t\t\tR.id.brick_glide_to_edit_text_x, R.id.brick_glide_to_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"},\n+\t\t\t\t{\"PlaceAtBrick\", R.string.brick_place_at, new PlaceAtBrick(),\n+\t\t\t\t\t\tR.id.brick_place_at_edit_text_x, R.id.brick_place_at_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"}\n+\t\t});\n+\t}\n+\n+\t@Parameterized.Parameter\n+\tpublic String name;\n+\n+\t@Parameterized.Parameter(1)\n+\tpublic int brickString;\n+\n+\t@Parameterized.Parameter(2)\n+\tpublic Brick brick;\n+\n+\t@Parameterized.Parameter(3)\n+\tpublic int editTextXId;\n+\n+\t@Parameterized.Parameter(4)\n+\tpublic int editTextYId;\n+\n+\t@Parameterized.Parameter(5)\n+\tpublic String firstInput;\n+\n+\t@Parameterized.Parameter(6)\n+\tpublic int secondInput;\n+\n+\t@Parameterized.Parameter(7)\n+\tpublic String expectedFirstOutput;\n+\n+\t@Parameterized.Parameter(8)\n+\tpublic String expectedSecondOutput;\n+\n \t@After\n \tpublic void tearDown() throws Exception {\n-\t\tTestUtils.deleteProjects(PlaceAtBrickTest.class.getSimpleName());\n+\t\tbaseActivityTestRule.finishActivity();\n+\t\tTestUtils.deleteProjects(VisualPlacementBrickTest.class.getSimpleName());\n \t}\n \n \t@Before\n \tpublic void setUp() throws Exception {\n-\t\tbrickPosition = 1;\n-\t\tcreateProjectAndGetStartScript(PlaceAtBrickTest.class.getSimpleName())\n-\t\t\t\t.addBrick(new PlaceAtBrick());\n+\t\tScript script =\n+\t\t\t\tBrickTestUtils.createProjectAndGetStartScript(VisualPlacementBrickTest.class.getSimpleName());\n+\t\tscript.addBrick(brick);\n+\n \t\tbaseActivityTestRule.launchActivity();\n \t}\n \n-\t@Category({Cat.AppUi.class, Level.Smoke.class})\n \t@Test\n-\tpublic void testPlaceAtBrick() {\n-\t\tonBrickAtPosition(brickPosition).checkShowsText(R.string.brick_place_at);\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n+\tpublic void testIsVisualPlacementShown() {\n+\t\tonBrickAtPosition(1).checkShowsText(brickString);\n+\t\tonView(withId(editTextXId))\n \t\t\t\t.perform(click());\n \t\tonView(withText(R.string.brick_place_at_option_place_visually))\n \t\t\t\t.check(matches(isDisplayed()));\n \t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n-\t\t\t\t.check(matches(isDisplayed()))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\n+\t\tonView(withId(editTextYId))\n+\t\t\t\t.perform(click());\n+\t\tonView(withText(R.string.brick_place_at_option_place_visually))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\t}\n+\n+\t@Test\n+\tpublic void testIsVisualPlacementShownOnBrickClick() {\n+\t\tonBrickAtPosition(1).performClick();\n+\t\tonView(withText(R.string.brick_place_at_option_place_visually))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\t}\n+\n+\t@Test\n+\tpublic void testNoVisualPlacementAfterFormulaEdited() {\n+\t\tonView(withId(editTextXId))\n+\t\t\t\t.perform(click());\n+\t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n \t\t\t\t.perform(click());\n \t\tonFormulaEditor()\n-\t\t\t\t.performEnterFormula(\"1+2\")\n+\t\t\t\t.performEnterFormula(firstInput)\n \t\t\t\t.performCloseAndSave();\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n-\t\t\t\t.check(matches(withText(\"1 + 2 \")));\n-\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n+\t\tonView(withId(editTextXId))\n+\t\t\t\t.check(matches(withText(expectedFirstOutput)))\n \t\t\t\t.perform(click());\n \t\tonFormulaEditor()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg0NDg3Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378844872", "bodyText": "You could separate this test too.", "author": "gPathpp", "createdAt": "2020-02-13T13:01:03Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/VisualPlacementBrickTest.java", "diffHunk": "@@ -51,62 +56,129 @@\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n \n-@RunWith(AndroidJUnit4.class)\n-public class PlaceAtBrickTest {\n-\tprivate int brickPosition;\n+@Category({Cat.AppUi.class, Level.Smoke.class})\n+@RunWith(Parameterized.class)\n+public class VisualPlacementBrickTest {\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Collection<Object[]> data() {\n+\t\treturn Arrays.asList(new Object[][] {\n+\t\t\t\t{\"GlideToBrick\", R.string.brick_glide, new GlideToBrick(),\n+\t\t\t\t\t\tR.id.brick_glide_to_edit_text_x, R.id.brick_glide_to_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"},\n+\t\t\t\t{\"PlaceAtBrick\", R.string.brick_place_at, new PlaceAtBrick(),\n+\t\t\t\t\t\tR.id.brick_place_at_edit_text_x, R.id.brick_place_at_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"}\n+\t\t});\n+\t}\n+\n+\t@Parameterized.Parameter\n+\tpublic String name;\n+\n+\t@Parameterized.Parameter(1)\n+\tpublic int brickString;\n+\n+\t@Parameterized.Parameter(2)\n+\tpublic Brick brick;\n+\n+\t@Parameterized.Parameter(3)\n+\tpublic int editTextXId;\n+\n+\t@Parameterized.Parameter(4)\n+\tpublic int editTextYId;\n+\n+\t@Parameterized.Parameter(5)\n+\tpublic String firstInput;\n+\n+\t@Parameterized.Parameter(6)\n+\tpublic int secondInput;\n+\n+\t@Parameterized.Parameter(7)\n+\tpublic String expectedFirstOutput;\n+\n+\t@Parameterized.Parameter(8)\n+\tpublic String expectedSecondOutput;\n+\n \t@After\n \tpublic void tearDown() throws Exception {\n-\t\tTestUtils.deleteProjects(PlaceAtBrickTest.class.getSimpleName());\n+\t\tbaseActivityTestRule.finishActivity();\n+\t\tTestUtils.deleteProjects(VisualPlacementBrickTest.class.getSimpleName());\n \t}\n \n \t@Before\n \tpublic void setUp() throws Exception {\n-\t\tbrickPosition = 1;\n-\t\tcreateProjectAndGetStartScript(PlaceAtBrickTest.class.getSimpleName())\n-\t\t\t\t.addBrick(new PlaceAtBrick());\n+\t\tScript script =\n+\t\t\t\tBrickTestUtils.createProjectAndGetStartScript(VisualPlacementBrickTest.class.getSimpleName());\n+\t\tscript.addBrick(brick);\n+\n \t\tbaseActivityTestRule.launchActivity();\n \t}\n \n-\t@Category({Cat.AppUi.class, Level.Smoke.class})\n \t@Test\n-\tpublic void testPlaceAtBrick() {\n-\t\tonBrickAtPosition(brickPosition).checkShowsText(R.string.brick_place_at);\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n+\tpublic void testIsVisualPlacementShown() {\n+\t\tonBrickAtPosition(1).checkShowsText(brickString);\n+\t\tonView(withId(editTextXId))\n \t\t\t\t.perform(click());\n \t\tonView(withText(R.string.brick_place_at_option_place_visually))\n \t\t\t\t.check(matches(isDisplayed()));\n \t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n-\t\t\t\t.check(matches(isDisplayed()))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg1MDM1NA==", "url": "https://github.com/Catrobat/Catroid/pull/3456#discussion_r378850354", "bodyText": "Please add a test case that verifies that the visual placement activity is shown after the click (or a similar test ;)). Have a look at Mockito :D.", "author": "gPathpp", "createdAt": "2020-02-13T13:12:43Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/VisualPlacementBrickTest.java", "diffHunk": "@@ -51,62 +56,129 @@\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n \n-@RunWith(AndroidJUnit4.class)\n-public class PlaceAtBrickTest {\n-\tprivate int brickPosition;\n+@Category({Cat.AppUi.class, Level.Smoke.class})\n+@RunWith(Parameterized.class)\n+public class VisualPlacementBrickTest {\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Collection<Object[]> data() {\n+\t\treturn Arrays.asList(new Object[][] {\n+\t\t\t\t{\"GlideToBrick\", R.string.brick_glide, new GlideToBrick(),\n+\t\t\t\t\t\tR.id.brick_glide_to_edit_text_x, R.id.brick_glide_to_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"},\n+\t\t\t\t{\"PlaceAtBrick\", R.string.brick_place_at, new PlaceAtBrick(),\n+\t\t\t\t\t\tR.id.brick_place_at_edit_text_x, R.id.brick_place_at_edit_text_y, \"1+2\",\n+\t\t\t\t\t\t42, \"1 + 2 \", \"42 \"}\n+\t\t});\n+\t}\n+\n+\t@Parameterized.Parameter\n+\tpublic String name;\n+\n+\t@Parameterized.Parameter(1)\n+\tpublic int brickString;\n+\n+\t@Parameterized.Parameter(2)\n+\tpublic Brick brick;\n+\n+\t@Parameterized.Parameter(3)\n+\tpublic int editTextXId;\n+\n+\t@Parameterized.Parameter(4)\n+\tpublic int editTextYId;\n+\n+\t@Parameterized.Parameter(5)\n+\tpublic String firstInput;\n+\n+\t@Parameterized.Parameter(6)\n+\tpublic int secondInput;\n+\n+\t@Parameterized.Parameter(7)\n+\tpublic String expectedFirstOutput;\n+\n+\t@Parameterized.Parameter(8)\n+\tpublic String expectedSecondOutput;\n+\n \t@After\n \tpublic void tearDown() throws Exception {\n-\t\tTestUtils.deleteProjects(PlaceAtBrickTest.class.getSimpleName());\n+\t\tbaseActivityTestRule.finishActivity();\n+\t\tTestUtils.deleteProjects(VisualPlacementBrickTest.class.getSimpleName());\n \t}\n \n \t@Before\n \tpublic void setUp() throws Exception {\n-\t\tbrickPosition = 1;\n-\t\tcreateProjectAndGetStartScript(PlaceAtBrickTest.class.getSimpleName())\n-\t\t\t\t.addBrick(new PlaceAtBrick());\n+\t\tScript script =\n+\t\t\t\tBrickTestUtils.createProjectAndGetStartScript(VisualPlacementBrickTest.class.getSimpleName());\n+\t\tscript.addBrick(brick);\n+\n \t\tbaseActivityTestRule.launchActivity();\n \t}\n \n-\t@Category({Cat.AppUi.class, Level.Smoke.class})\n \t@Test\n-\tpublic void testPlaceAtBrick() {\n-\t\tonBrickAtPosition(brickPosition).checkShowsText(R.string.brick_place_at);\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n+\tpublic void testIsVisualPlacementShown() {\n+\t\tonBrickAtPosition(1).checkShowsText(brickString);\n+\t\tonView(withId(editTextXId))\n \t\t\t\t.perform(click());\n \t\tonView(withText(R.string.brick_place_at_option_place_visually))\n \t\t\t\t.check(matches(isDisplayed()));\n \t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n-\t\t\t\t.check(matches(isDisplayed()))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\n+\t\tonView(withId(editTextYId))\n+\t\t\t\t.perform(click());\n+\t\tonView(withText(R.string.brick_place_at_option_place_visually))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\t}\n+\n+\t@Test\n+\tpublic void testIsVisualPlacementShownOnBrickClick() {\n+\t\tonBrickAtPosition(1).performClick();\n+\t\tonView(withText(R.string.brick_place_at_option_place_visually))\n+\t\t\t\t.check(matches(isDisplayed()));\n+\t\tpressBack();\n+\t}\n+\n+\t@Test\n+\tpublic void testNoVisualPlacementAfterFormulaEdited() {\n+\t\tonView(withId(editTextXId))\n+\t\t\t\t.perform(click());\n+\t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n \t\t\t\t.perform(click());\n \t\tonFormulaEditor()\n-\t\t\t\t.performEnterFormula(\"1+2\")\n+\t\t\t\t.performEnterFormula(firstInput)\n \t\t\t\t.performCloseAndSave();\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n-\t\t\t\t.check(matches(withText(\"1 + 2 \")));\n-\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n+\t\tonView(withId(editTextXId))\n+\t\t\t\t.check(matches(withText(expectedFirstOutput)))\n \t\t\t\t.perform(click());\n \t\tonFormulaEditor()\n-\t\t\t\t.performEnterNumber(42)\n+\t\t\t\t.performEnterNumber(0)\n \t\t\t\t.performCloseAndSave();\n-\t\tonView(withId(R.id.brick_place_at_edit_text_x))\n-\t\t\t\t.check(matches(withText(\"42 \")));\n+\t}\n \n-\t\tonView(withId(R.id.brick_place_at_edit_text_y))\n+\t@Test\n+\tpublic void testVisualPlacementAfterNumberEntered() {\n+\t\tonView(withId(editTextXId))\n+\t\t\t\t.perform(click());\n+\t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n+\t\t\t\t.perform(click());\n+\t\tonFormulaEditor()\n+\t\t\t\t.performEnterNumber(secondInput)\n+\t\t\t\t.performCloseAndSave();\n+\t\tonView(withId(editTextXId))\n+\t\t\t\t.check(matches(withText(expectedSecondOutput)))\n \t\t\t\t.perform(click());\n \t\tonView(withText(R.string.brick_place_at_option_place_visually))\n \t\t\t\t.check(matches(isDisplayed()));\n \t\tonView(withText(R.string.brick_context_dialog_formula_edit_brick))\n \t\t\t\t.check(matches(isDisplayed()));\n \t\tpressBack();\n-\n-\t\tonBrickAtPosition(brickPosition).performClick();\n-\t\tonView(withText(R.string.brick_place_at_option_place_visually))\n-\t\t\t\t.check(matches(isDisplayed()));\n \t}", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "a08e9e846031292c01322a7c184f2a9e0beb8d99", "url": "https://github.com/Catrobat/Catroid/commit/a08e9e846031292c01322a7c184f2a9e0beb8d99", "message": "CATROID-182 Add visual placement to the GlideToBrick\n\n- Derive a new class VisualPlacementBrick from FormulaBrick and move the logic for visual placement from the PlaceAtBrick class to this new base class to prevent code duplication.\n\n- Add an entry \"Place Visually\" also in the ScriptFragment of the GlideToBrick.\n\n- Refactor the testcase PlaceAtBrickTest and make a new Test for VisualPlacementBricks to test that visual placement both works for GlideToBricks and PlaceAtBricks.", "committedDate": "2020-02-14T06:59:46Z", "type": "commit"}, {"oid": "a08e9e846031292c01322a7c184f2a9e0beb8d99", "url": "https://github.com/Catrobat/Catroid/commit/a08e9e846031292c01322a7c184f2a9e0beb8d99", "message": "CATROID-182 Add visual placement to the GlideToBrick\n\n- Derive a new class VisualPlacementBrick from FormulaBrick and move the logic for visual placement from the PlaceAtBrick class to this new base class to prevent code duplication.\n\n- Add an entry \"Place Visually\" also in the ScriptFragment of the GlideToBrick.\n\n- Refactor the testcase PlaceAtBrickTest and make a new Test for VisualPlacementBricks to test that visual placement both works for GlideToBricks and PlaceAtBricks.", "committedDate": "2020-02-14T06:59:46Z", "type": "forcePushed"}]}