{"pr_number": 3644, "pr_title": "CATROID-567 refactor ChangeVariableAction to Kotlin", "pr_createdAt": "2020-06-23T07:43:44Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3644", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzOTI5NA==", "url": "https://github.com/Catrobat/Catroid/pull/3644#discussion_r444939294", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    val originalValue = userVariable?.value ?: return true\n          \n          \n            \n                    if (originalValue is String) {\n          \n          \n            \n                        return true\n          \n          \n            \n                    }\n          \n          \n            \n                    val originalValue = userVariable?.value as? Double ?: return true", "author": "lweitzendorf", "createdAt": "2020-06-24T14:33:03Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/ChangeVariableAction.kt", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+\n+class ChangeVariableAction : Action() {\n+    var sprite: Sprite? = null\n+    var changeVariable: Formula? = null\n+    var userVariable: UserVariable? = null\n+\n+    override fun act(delta: Float): Boolean {\n+        val originalValue = userVariable?.value ?: return true\n+        if (originalValue is String) {\n+            return true\n+        }", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0MDkzNA==", "url": "https://github.com/Catrobat/Catroid/pull/3644#discussion_r444940934", "bodyText": "You don't need to do it exactly like this, just a suggestion. This also checks for double and allows you to remove the type check in updateUserVariable(...) -> see below\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (value is String) {\n          \n          \n            \n                        value = try { java.lang.Double.valueOf(value) } catch (e: NumberFormatException) {\n          \n          \n            \n                            Log.d(javaClass.simpleName, \"Couldn't parse String\", e)\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    updateUserVariable(originalValue, value)\n          \n          \n            \n                    (value as? Double ?: (value as? String)?.toDoubleOrNull())?.run {\n          \n          \n            \n                        updateUserVariable(originalValue, this)\n          \n          \n            \n                    }", "author": "lweitzendorf", "createdAt": "2020-06-24T14:35:16Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/ChangeVariableAction.kt", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+\n+class ChangeVariableAction : Action() {\n+    var sprite: Sprite? = null\n+    var changeVariable: Formula? = null\n+    var userVariable: UserVariable? = null\n+\n+    override fun act(delta: Float): Boolean {\n+        val originalValue = userVariable?.value ?: return true\n+        if (originalValue is String) {\n+            return true\n+        }\n+        var value = changeVariable?.interpretObject(sprite) ?: 0.0\n+        if (value is String) {\n+            value = try { java.lang.Double.valueOf(value) } catch (e: NumberFormatException) {\n+                Log.d(javaClass.simpleName, \"Couldn't parse String\", e)\n+            }\n+        }\n+        updateUserVariable(originalValue, value)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0MzI5Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3644#discussion_r444943292", "bodyText": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/take-unless.html\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private fun updateUserVariable(originalValue: Any, value: Any) {\n          \n          \n            \n                    if (originalValue is Double && value is Double) {\n          \n          \n            \n                        val original = if (originalValue.isNaN()) 0.0 else originalValue\n          \n          \n            \n                        val valueToAdd = if (value.isNaN()) 0.0 else value\n          \n          \n            \n                        userVariable?.value = original + valueToAdd\n          \n          \n            \n                    }\n          \n          \n            \n                private fun updateUserVariable(originalValue: Double, value: Double) {\n          \n          \n            \n                    val original = originalValue.takeUnless { it.isNaN() } ?: 0.0\n          \n          \n            \n                    val valueToAdd = value.takeUnless { it.isNaN() } ?: 0.0\n          \n          \n            \n                    userVariable?.value = original + valueToAdd\n          \n          \n            \n                }", "author": "lweitzendorf", "createdAt": "2020-06-24T14:38:18Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/ChangeVariableAction.kt", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+\n+class ChangeVariableAction : Action() {\n+    var sprite: Sprite? = null\n+    var changeVariable: Formula? = null\n+    var userVariable: UserVariable? = null\n+\n+    override fun act(delta: Float): Boolean {\n+        val originalValue = userVariable?.value ?: return true\n+        if (originalValue is String) {\n+            return true\n+        }\n+        var value = changeVariable?.interpretObject(sprite) ?: 0.0\n+        if (value is String) {\n+            value = try { java.lang.Double.valueOf(value) } catch (e: NumberFormatException) {\n+                Log.d(javaClass.simpleName, \"Couldn't parse String\", e)\n+            }\n+        }\n+        updateUserVariable(originalValue, value)\n+        return true\n+    }\n+\n+    private fun updateUserVariable(originalValue: Any, value: Any) {\n+        if (originalValue is Double && value is Double) {\n+            val original = if (originalValue.isNaN()) 0.0 else originalValue\n+            val valueToAdd = if (value.isNaN()) 0.0 else value\n+            userVariable?.value = original + valueToAdd\n+        }", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0bd1d47e071560f5082b5c127259a1751f1a88df", "url": "https://github.com/Catrobat/Catroid/commit/0bd1d47e071560f5082b5c127259a1751f1a88df", "message": "CATROID-567 refactor ChangeVariableAction to Kotlin", "committedDate": "2020-06-25T06:28:00Z", "type": "commit"}, {"oid": "0bd1d47e071560f5082b5c127259a1751f1a88df", "url": "https://github.com/Catrobat/Catroid/commit/0bd1d47e071560f5082b5c127259a1751f1a88df", "message": "CATROID-567 refactor ChangeVariableAction to Kotlin", "committedDate": "2020-06-25T06:28:00Z", "type": "forcePushed"}]}