{"pr_number": 3598, "pr_title": "CATROID-215 Add a label to \"Your bricks\"", "pr_createdAt": "2020-05-07T16:10:27Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3598", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5MDg1Mw==", "url": "https://github.com/Catrobat/Catroid/pull/3598#discussion_r421990853", "bodyText": "Please perform a check here.", "author": "mstoeg", "createdAt": "2020-05-08T07:31:05Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/AddUserDefinedBrickTest.java", "diffHunk": "@@ -105,12 +117,20 @@ public void testAddInputToUserBrickOnlyWhitespaceInput() {\n \t}\n \n \t@Test\n-\tpublic void testAddInputToUserBrickSameInput() {\n-\t\tclickOnAddInputToUserBrick();\n+\tpublic void testAddLabelToUserBrickConsecutiveLabels() {\n+\t\tclickOnAddLabelToUserBrick();\n+\t\tonView(withId(R.id.label_user_brick_edit_field)).perform(replaceText(\"Test1\"));\n \t\tonView(withId(R.id.next))\n \t\t\t\t.perform(click());\n \t\tonView(withId(R.id.button_add_label))\n \t\t\t\t.perform(click());\n+\t}", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5MjY1NQ==", "url": "https://github.com/Catrobat/Catroid/pull/3598#discussion_r421992655", "bodyText": "Please use UniqueNameProvider as with Inputs.", "author": "mstoeg", "createdAt": "2020-05-08T07:35:16Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/UserDefinedBrick.java", "diffHunk": "@@ -96,27 +98,40 @@ public View getView(Context context) {\n \n \t\tboolean isAddInputFragment = currentFragmentIsAddInput(context);\n \n+\t\tboolean isAddLabelFragment = currentFragmentIsAddLabel(context);\n+\n \t\tif (userBrickDataList.isEmpty()) {\n \t\t\tif (isAddInputFragment) {\n \t\t\t\tString defaultText =\n \t\t\t\t\t\tnew UniqueNameProvider().getUniqueNameInNameables(context.getResources().getString(R.string.brick_user_defined_default_input_name),\n \t\t\t\t\t\t\t\tgetInputList());\n \t\t\t\taddTextViewForInput(context, new StringOption(defaultText));\n \t\t\t}\n+\t\t\tif (isAddLabelFragment) {\n+\t\t\t\tString defaultText =\n+\t\t\t\t\t\tcontext.getResources().getString(R.string.brick_user_defined_default_label);\n+\t\t\t\taddTextViewForLabel(context, new StringOption(defaultText));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5MzEzNw==", "url": "https://github.com/Catrobat/Catroid/pull/3598#discussion_r421993137", "bodyText": "Please don't use BrickEditText here, but a BrickText to prevent underlining.", "author": "mstoeg", "createdAt": "2020-05-08T07:36:25Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/UserDefinedBrick.java", "diffHunk": "@@ -133,10 +148,12 @@ private void addTextViewForInput(Context context, Nameable text) {\n \t\tuserBrickContentLayout.addView(inputTextView);\n \t}\n \n-\tprivate void addTextViewForLabel(Context context, String text) {\n+\tprivate void addTextViewForLabel(Context context, Nameable text) {\n \t\tTextView labelTextView = new TextView(new ContextThemeWrapper(context,\n-\t\t\t\tR.style.BrickText));\n-\t\tlabelTextView.setText(text);\n+\t\t\t\tR.style.MultilineBrickEditText));\n+\t\tlabelTextView.setMovementMethod(new ScrollingMovementMethod());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5NTUyMg==", "url": "https://github.com/Catrobat/Catroid/pull/3598#discussion_r421995522", "bodyText": "Please reuse AddInputToUserBrickFragment to prevent code duplication. Rename it to AddUserDataToUserBrickFragment and pass a boolean value with the Bundle.", "author": "mstoeg", "createdAt": "2020-05-08T07:41:40Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/AddLabelToUserBrickFragment.java", "diffHunk": "@@ -0,0 +1,176 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.fragment;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.text.Editable;\n+import android.text.TextWatcher;\n+import android.view.LayoutInflater;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.WindowManager;\n+import android.view.inputmethod.InputMethodManager;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+import com.google.android.material.textfield.TextInputEditText;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.content.bricks.UserDefinedBrick;\n+import org.catrobat.catroid.content.bricks.brickspinner.StringOption;\n+import org.jetbrains.annotations.NotNull;\n+\n+import androidx.annotation.NonNull;\n+import androidx.appcompat.app.ActionBar;\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.fragment.app.Fragment;\n+import androidx.fragment.app.FragmentManager;\n+\n+public class AddLabelToUserBrickFragment extends Fragment {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyNzQ3Nw==", "url": "https://github.com/Catrobat/Catroid/pull/3598#discussion_r424427477", "bodyText": "Please remove this XML-File to prevent code duplication.", "author": "mstoeg", "createdAt": "2020-05-13T13:15:28Z", "path": "catroid/src/main/res/layout/fragment_add_label_to_user_brick.xml", "diffHunk": "@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQzNDA5Ng==", "url": "https://github.com/Catrobat/Catroid/pull/3598#discussion_r424434096", "bodyText": "if/else is obsolete here.", "author": "mstoeg", "createdAt": "2020-05-13T13:24:31Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/AddUserDataToUserBrickFragment.java", "diffHunk": "@@ -48,41 +48,67 @@\n import org.catrobat.catroid.content.bricks.brickspinner.StringOption;\n import org.jetbrains.annotations.NotNull;\n \n+import java.util.Objects;\n+\n import androidx.annotation.NonNull;\n import androidx.appcompat.app.ActionBar;\n import androidx.appcompat.app.AppCompatActivity;\n import androidx.fragment.app.Fragment;\n import androidx.fragment.app.FragmentManager;\n \n-public class AddInputToUserBrickFragment extends Fragment {\n+public class AddUserDataToUserBrickFragment extends Fragment {\n \n-\tpublic static final String TAG = AddInputToUserBrickFragment.class.getSimpleName();\n+\tpublic static final String TAG = AddUserDataToUserBrickFragment.class.getSimpleName();\n \n+\tprivate boolean isAddInputOrLabel;\n \tprivate AppCompatActivity activity;\n-\tprivate TextInputEditText addInputUserBrickEditText;\n-\tprivate TextInputLayout addInputUserBrickTextLayout;\n+\tprivate TextInputEditText addUserDataUserBrickEditText;\n+\tprivate TextInputLayout addUserDataUserBrickTextLayout;\n \n \tprivate MenuItem nextItem;\n \n \tprivate UserDefinedBrick userDefinedBrick;\n \tprivate TextView userBrickTextView;\n \n \t@Override\n-\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n-\t\tView view = inflater.inflate(R.layout.fragment_add_input_to_user_brick, container, false);\n-\n-\t\taddInputUserBrickEditText = view.findViewById(R.id.input_user_brick_edit_field);\n-\t\taddInputUserBrickTextLayout = view.findViewById(R.id.input_user_brick_text_layout);\n-\t\tLinearLayout userBrickSpace = view.findViewById(R.id.user_brick_space);\n+\tpublic View onCreateView(@NotNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n \n \t\tBundle arguments = getArguments();\n \t\tif (arguments != null) {\n \t\t\tuserDefinedBrick = (UserDefinedBrick) getArguments().getSerializable(UserDefinedBrick.USER_BRICK_BUNDLE_ARGUMENT);\n+\t\t\tisAddInputOrLabel = getArguments().getBoolean(UserDefinedBrick.ADD_INPUT_OR_LABEL_BUNDLE_ARGUMENT);\n+\t\t}\n+\n+\t\tView view;\n+\n+\t\tif (isAddInputOrLabel) {\n+\t\t\tview = inflater.inflate(R.layout.fragment_add_input_to_user_brick, container, false);\n+\t\t\tLinearLayout userBrickSpace = view.findViewById(R.id.user_brick_space);\n \t\t\tif (userDefinedBrick != null) {\n \t\t\t\tView userBrickView = userDefinedBrick.getView(getActivity());\n \t\t\t\tuserBrickSpace.addView(userBrickView);\n \t\t\t\tuserBrickTextView = userDefinedBrick.currentInputEditText;\n \t\t\t}\n+\n+\t\t\taddUserDataUserBrickEditText = view.findViewById(R.id.input_user_brick_edit_field);\n+\t\t\taddUserDataUserBrickTextLayout = view.findViewById(R.id.input_user_brick_text_layout);\n+\n+\t\t\taddUserDataUserBrickEditText.setText(userBrickTextView.getText());\n+\t\t\taddUserDataUserBrickEditText.addTextChangedListener(new InputTextWatcher());\n+\t\t} else {\n+\t\t\tview = inflater.inflate(R.layout.fragment_add_label_to_user_brick, container, false);\n+\t\t\tLinearLayout userBrickSpace = view.findViewById(R.id.user_brick_space);\n+\t\t\tif (userDefinedBrick != null) {\n+\t\t\t\tView userBrickView = userDefinedBrick.getView(getActivity());\n+\t\t\t\tuserBrickSpace.addView(userBrickView);\n+\t\t\t\tuserBrickTextView = userDefinedBrick.currentLabelEditText;\n+\t\t\t}\n+\n+\t\t\taddUserDataUserBrickEditText = view.findViewById(R.id.label_user_brick_edit_field);\n+\t\t\taddUserDataUserBrickTextLayout = view.findViewById(R.id.label_user_brick_text_layout);\n+\n+\t\t\taddUserDataUserBrickEditText.setText(userBrickTextView.getText());\n+\t\t\taddUserDataUserBrickEditText.addTextChangedListener(new LabelTextWatcher());\n \t\t}", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQzNDk4OA==", "url": "https://github.com/Catrobat/Catroid/pull/3598#discussion_r424434988", "bodyText": "Please make an if condition here to check if toString() is not null.", "author": "mstoeg", "createdAt": "2020-05-13T13:25:43Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/AddUserDataToUserBrickFragment.java", "diffHunk": "@@ -143,7 +170,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n \t\t\t\t\t\tgetFragmentManager().findFragmentByTag(AddUserBrickFragment.TAG);\n \t\t\t\tgetFragmentManager().popBackStackImmediate();\n \t\t\t\tif (addUserBrickFragment != null) {\n-\t\t\t\t\taddUserBrickFragment.addInputToUserBrick(new StringOption(addInputUserBrickEditText.getText().toString()));\n+\t\t\t\t\taddUserBrickFragment.addUserDataToUserBrick(new StringOption(Objects.requireNonNull(addUserDataUserBrickEditText.getText()).toString()), isAddInputOrLabel);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "fb3c0f049a1e1ccb13e90140ca0b29bdf2a195d1", "url": "https://github.com/Catrobat/Catroid/commit/fb3c0f049a1e1ccb13e90140ca0b29bdf2a195d1", "message": "CATROID-215 Add a label to \"Your bricks\"\n\nFeature of adding labels to a UserDefinedBrick. Updating UserDefinedBrick Files and Tests of UserDefinedBricks. Based on \"CATROID-214 Add input to Your Bricks\"", "committedDate": "2020-05-13T14:51:38Z", "type": "commit"}, {"oid": "fb3c0f049a1e1ccb13e90140ca0b29bdf2a195d1", "url": "https://github.com/Catrobat/Catroid/commit/fb3c0f049a1e1ccb13e90140ca0b29bdf2a195d1", "message": "CATROID-215 Add a label to \"Your bricks\"\n\nFeature of adding labels to a UserDefinedBrick. Updating UserDefinedBrick Files and Tests of UserDefinedBricks. Based on \"CATROID-214 Add input to Your Bricks\"", "committedDate": "2020-05-13T14:51:38Z", "type": "forcePushed"}]}