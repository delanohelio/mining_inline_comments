{"pr_number": 3617, "pr_title": "CATROID-218 Enable definition of a user brick", "pr_createdAt": "2020-05-28T06:02:49Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3617", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUxOTc0NA==", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441519744", "bodyText": "Please do a rebase and check for earlier increase", "author": "DinosaurierRex", "createdAt": "2020-06-17T12:51:15Z", "path": "catroid/src/main/java/org/catrobat/catroid/common/Constants.java", "diffHunk": "@@ -38,7 +38,7 @@\n \n public final class Constants {\n \n-\tpublic static final float CURRENT_CATROBAT_LANGUAGE_VERSION = 0.999993f;\n+\tpublic static final float CURRENT_CATROBAT_LANGUAGE_VERSION = 0.999994f;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNzc3OA==", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441527778", "bodyText": "Maybe you could try to do this in a more generic way, because these three functions are nearly duplicate code", "author": "DinosaurierRex", "createdAt": "2020-06-17T13:03:57Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/Sprite.java", "diffHunk": "@@ -139,6 +141,39 @@ public int hashCode() {\n \t\treturn userDefinedBrickList;\n \t}\n \n+\tpublic UserDefinedBrick getUserDefinedBrick(UserDefinedBrick userDefinedBrick) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMDA3Mw==", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441530073", "bodyText": "Please rewrite this in a more clean code style. Early returning, dont use too much nested blocks", "author": "DinosaurierRex", "createdAt": "2020-06-17T13:07:26Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/UserDefinedBrick.java", "diffHunk": "@@ -55,144 +55,176 @@\n \tpublic static final boolean INPUT = true;\n \tpublic static final boolean LABEL = false;\n \n-\tprivate List<UserBrickData> userBrickDataList;\n-\tprivate BrickLayout userBrickContentLayout;\n-\tpublic TextView currentUserDataEditText;\n+\t@XStreamAlias(\"userDefinedBrickDataList\")\n+\tprivate List<UserDefinedBrickData> userDefinedBrickDataList;\n+\n+\t@XStreamAlias(\"userDefinedBrickID\")\n+\tprivate UUID userDefinedBrickID;\n+\n+\tprivate transient BrickLayout userDefinedBrickLayout;\n+\tpublic transient TextView currentUserDefinedDataTextView;\n \n \tpublic UserDefinedBrick() {\n-\t\tuserBrickDataList = new ArrayList<>();\n+\t\tuserDefinedBrickDataList = new ArrayList<>();\n+\t\tuserDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tpublic UserDefinedBrick(List<UserDefinedBrickData> userBrickDataList) {\n+\t\tthis.userDefinedBrickDataList = userBrickDataList;\n+\t\tthis.userDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tpublic UserDefinedBrick(UserDefinedBrick userDefinedBrick) {\n+\t\tcopyUserDefinedDataList(userDefinedBrick);\n+\t\tthis.userDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tprivate void copyUserDefinedDataList(UserDefinedBrick userDefinedBrick) {\n+\t\tthis.userDefinedBrickDataList = new ArrayList<>();\n+\t\tfor (UserDefinedBrickData data : userDefinedBrick.getUserDefinedBrickDataList()) {\n+\t\t\tif (data instanceof UserDefinedBrickInput) {\n+\t\t\t\tuserDefinedBrickDataList.add(new UserDefinedBrickInput((UserDefinedBrickInput) data));\n+\t\t\t} else {\n+\t\t\t\tuserDefinedBrickDataList.add(new UserDefinedBrickLabel((UserDefinedBrickLabel) data));\n+\t\t\t}\n+\t\t}\n \t}\n \n-\tpublic UserDefinedBrick(List<UserBrickData> userBrickDataList) {\n-\t\tthis.userBrickDataList = userBrickDataList;\n+\tpublic UUID getUserDefinedBrickID() {\n+\t\treturn userDefinedBrickID;\n \t}\n \n-\tpublic void addLabel(Nameable label) {\n+\tpublic void addLabel(String label) {\n \t\tremoveLastLabel();\n-\t\tuserBrickDataList.add(new UserBrickLabel(label));\n+\t\tuserDefinedBrickDataList.add(new UserDefinedBrickLabel(label));\n \t}\n \n \tpublic void removeLastLabel() {\n \t\tif (lastContentIsLabel()) {\n-\t\t\tuserBrickDataList.remove(userBrickDataList.size() - 1);\n+\t\t\tuserDefinedBrickDataList.remove(userDefinedBrickDataList.size() - 1);\n \t\t}\n \t}\n \n-\tpublic void addInput(Nameable input) {\n-\t\tuserBrickDataList.add(new UserBrickInput(input));\n+\tpublic void addInput(String input) {\n+\t\tuserDefinedBrickDataList.add(new UserDefinedBrickInput(input));\n \t}\n \n \tpublic boolean isEmpty() {\n-\t\treturn userBrickDataList.isEmpty();\n+\t\treturn userDefinedBrickDataList.isEmpty();\n \t}\n \n-\tpublic List<Nameable> getUserDataList(boolean inputOrLabel) {\n-\t\tList<Nameable> userDataList = new ArrayList<>();\n+\tpublic List<UserDefinedBrickData> getUserDefinedBrickDataList() {\n+\t\treturn this.userDefinedBrickDataList;\n+\t}\n+\n+\tpublic List<String> getUserDataList(boolean inputOrLabel) {\n+\t\tList<String> userDataList = new ArrayList<>();\n \t\tif (inputOrLabel) {\n-\t\t\tfor (UserBrickData userBrickData : userBrickDataList) {\n-\t\t\t\tif (userBrickData instanceof UserBrickInput) {\n-\t\t\t\t\tuserDataList.add(((UserBrickInput) userBrickData).getInput());\n+\t\t\tfor (UserDefinedBrickData userDefinedBrickData : userDefinedBrickDataList) {\n+\t\t\t\tif (userDefinedBrickData instanceof UserDefinedBrickInput) {\n+\t\t\t\t\tuserDataList.add(((UserDefinedBrickInput) userDefinedBrickData).getInput());\n \t\t\t\t}\n \t\t\t}\n \t\t} else {\n-\t\t\tfor (UserBrickData userBrickData : userBrickDataList) {\n-\t\t\t\tif (userBrickData instanceof UserBrickLabel) {\n-\t\t\t\t\tuserDataList.add(((UserBrickLabel) userBrickData).getLabel());\n+\t\t\tfor (UserDefinedBrickData userDefinedBrickData : userDefinedBrickDataList) {\n+\t\t\t\tif (userDefinedBrickData instanceof UserDefinedBrickLabel) {\n+\t\t\t\t\tuserDataList.add(((UserDefinedBrickLabel) userDefinedBrickData).getLabel());\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn userDataList;\n \t}\n \n \tprivate boolean lastContentIsLabel() {\n-\t\tif (userBrickDataList.isEmpty()) {\n+\t\tif (userDefinedBrickDataList.isEmpty()) {\n \t\t\treturn false;\n \t\t}\n-\t\treturn userBrickDataList.get(userBrickDataList.size() - 1) instanceof UserBrickLabel;\n+\t\treturn userDefinedBrickDataList.get(userDefinedBrickDataList.size() - 1) instanceof UserDefinedBrickLabel;\n+\t}\n+\n+\tpublic boolean isUserDefinedBrickDataEqual(UserDefinedBrick other) {\n+\t\tif (userDefinedBrickDataList.size() == other.userDefinedBrickDataList.size()) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzODAxMA==", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441538010", "bodyText": "Please rethink structure of this function, too many lines \"outsourcing\" to own function.", "author": "DinosaurierRex", "createdAt": "2020-06-17T13:19:29Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/controller/ScriptController.java", "diffHunk": "@@ -59,6 +62,30 @@ public Script copy(Script scriptToCopy, Project dstProject, Scene dstScene, Spri\n \t\t\tthrows IOException, CloneNotSupportedException {\n \n \t\tScript script = scriptToCopy.clone();\n+\n+\t\tif (script instanceof UserDefinedScript) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0MTA5MA==", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441541090", "bodyText": "Please rewrite to support collection adding.", "author": "DinosaurierRex", "createdAt": "2020-06-17T13:23:47Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/backpack/BackpackScriptFragment.java", "diffHunk": "@@ -54,12 +56,23 @@ protected void initializeAdapter() {\n \tprotected void unpackItems(List<String> selectedItems) {\n \t\tsetShowProgressBar(true);\n \t\tint unpackedItemCnt = 0;\n+\t\tSprite sprite = ProjectManager.getInstance().getCurrentSprite();\n \n \t\tfor (String item : selectedItems) {\n \t\t\tList<Script> scripts = BackpackListManager.getInstance().getBackpackedScripts().get(item);\n+\t\t\tList<UserDefinedBrick> userDefinedBricks = BackpackListManager.getInstance().getBackpackedUserDefinedBricks().get(item);\n+\t\t\tfor (UserDefinedBrick userDefinedBrick : userDefinedBricks) {\n+\t\t\t\tif (!sprite.containsUserDefinedBrick(userDefinedBrick)) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tsprite.addUserDefinedBrick((UserDefinedBrick) userDefinedBrick.clone());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0MTM2OA==", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441541368", "bodyText": "same as above", "author": "DinosaurierRex", "createdAt": "2020-06-17T13:24:07Z", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/controller/ScriptController.java", "diffHunk": "@@ -59,6 +62,30 @@ public Script copy(Script scriptToCopy, Project dstProject, Scene dstScene, Spri\n \t\t\tthrows IOException, CloneNotSupportedException {\n \n \t\tScript script = scriptToCopy.clone();\n+\n+\t\tif (script instanceof UserDefinedScript) {\n+\t\t\tUserDefinedBrick userDefinedBrickToCopy = ((UserDefinedReceiverBrick) scriptToCopy.getScriptBrick()).getUserDefinedBrick();\n+\t\t\tUserDefinedBrick copiedUserDefinedBrick = dstSprite.getUserDefinedBrick(userDefinedBrickToCopy);\n+\t\t\tif (copiedUserDefinedBrick != null && userDefinedBrickToCopy.getUserDefinedBrickID() != copiedUserDefinedBrick.getUserDefinedBrickID()) {\n+\t\t\t\tUserDefinedReceiverBrick userDefinedReceiverBrick = new UserDefinedReceiverBrick(copiedUserDefinedBrick);\n+\t\t\t\tfor (Brick brick : script.getBrickList()) {\n+\t\t\t\t\tuserDefinedReceiverBrick.getScript().addBrick(brick);\n+\t\t\t\t}\n+\t\t\t\tscript = userDefinedReceiverBrick.getScript();\n+\t\t\t}\n+\t\t}\n+\n+\t\tfor (int brickIndex = 0; brickIndex < script.getBrickList().size(); brickIndex++) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNDQ2Ng==", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r443514466", "bodyText": "The List of the clone will point to the list of the original object. If only the clones are present anymore, the list wont", "author": "DinosaurierRex", "createdAt": "2020-06-22T12:13:47Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/UserDefinedBrick.java", "diffHunk": "@@ -55,144 +55,175 @@\n \tpublic static final boolean INPUT = true;\n \tpublic static final boolean LABEL = false;\n \n-\tprivate List<UserBrickData> userBrickDataList;\n-\tprivate BrickLayout userBrickContentLayout;\n-\tpublic TextView currentUserDataEditText;\n+\t@XStreamAlias(\"userDefinedBrickDataList\")\n+\tprivate List<UserDefinedBrickData> userDefinedBrickDataList;\n+\n+\t@XStreamAlias(\"userDefinedBrickID\")\n+\tprivate UUID userDefinedBrickID;\n+\n+\tprivate transient BrickLayout userDefinedBrickLayout;\n+\tpublic transient TextView currentUserDefinedDataTextView;\n \n \tpublic UserDefinedBrick() {\n-\t\tuserBrickDataList = new ArrayList<>();\n+\t\tuserDefinedBrickDataList = new ArrayList<>();\n+\t\tuserDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tpublic UserDefinedBrick(List<UserDefinedBrickData> userBrickDataList) {\n+\t\tthis.userDefinedBrickDataList = userBrickDataList;\n+\t\tthis.userDefinedBrickID = UUID.randomUUID();\n \t}\n \n-\tpublic UserDefinedBrick(List<UserBrickData> userBrickDataList) {\n-\t\tthis.userBrickDataList = userBrickDataList;\n+\tpublic UserDefinedBrick(UserDefinedBrick userDefinedBrick) {\n+\t\tcopyUserDefinedDataList(userDefinedBrick);\n+\t\tthis.userDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tprivate void copyUserDefinedDataList(UserDefinedBrick userDefinedBrick) {\n+\t\tthis.userDefinedBrickDataList = new ArrayList<>();\n+\t\tfor (UserDefinedBrickData data : userDefinedBrick.getUserDefinedBrickDataList()) {\n+\t\t\tif (data instanceof UserDefinedBrickInput) {\n+\t\t\t\tuserDefinedBrickDataList.add(new UserDefinedBrickInput((UserDefinedBrickInput) data));\n+\t\t\t} else {\n+\t\t\t\tuserDefinedBrickDataList.add(new UserDefinedBrickLabel((UserDefinedBrickLabel) data));\n+\t\t\t}\n+\t\t}\n \t}\n \n-\tpublic void addLabel(Nameable label) {\n+\tpublic UUID getUserDefinedBrickID() {\n+\t\treturn userDefinedBrickID;\n+\t}\n+\n+\tpublic void addLabel(String label) {\n \t\tremoveLastLabel();\n-\t\tuserBrickDataList.add(new UserBrickLabel(label));\n+\t\tuserDefinedBrickDataList.add(new UserDefinedBrickLabel(label));\n \t}\n \n \tpublic void removeLastLabel() {\n \t\tif (lastContentIsLabel()) {\n-\t\t\tuserBrickDataList.remove(userBrickDataList.size() - 1);\n+\t\t\tuserDefinedBrickDataList.remove(userDefinedBrickDataList.size() - 1);\n \t\t}\n \t}\n \n-\tpublic void addInput(Nameable input) {\n-\t\tuserBrickDataList.add(new UserBrickInput(input));\n+\tpublic void addInput(String input) {\n+\t\tuserDefinedBrickDataList.add(new UserDefinedBrickInput(input));\n \t}\n \n \tpublic boolean isEmpty() {\n-\t\treturn userBrickDataList.isEmpty();\n+\t\treturn userDefinedBrickDataList.isEmpty();\n+\t}\n+\n+\tpublic List<UserDefinedBrickData> getUserDefinedBrickDataList() {\n+\t\treturn this.userDefinedBrickDataList;\n \t}\n \n-\tpublic List<Nameable> getUserDataList(boolean inputOrLabel) {\n-\t\tList<Nameable> userDataList = new ArrayList<>();\n-\t\tif (inputOrLabel) {\n-\t\t\tfor (UserBrickData userBrickData : userBrickDataList) {\n-\t\t\t\tif (userBrickData instanceof UserBrickInput) {\n-\t\t\t\t\tuserDataList.add(((UserBrickInput) userBrickData).getInput());\n+\tpublic List<String> getUserDataList(boolean isInput) {\n+\t\tList<String> userDataList = new ArrayList<>();\n+\t\tif (isInput) {\n+\t\t\tfor (UserDefinedBrickData userDefinedBrickData : userDefinedBrickDataList) {\n+\t\t\t\tif (userDefinedBrickData instanceof UserDefinedBrickInput) {\n+\t\t\t\t\tuserDataList.add(((UserDefinedBrickInput) userDefinedBrickData).getInput());\n \t\t\t\t}\n \t\t\t}\n \t\t} else {\n-\t\t\tfor (UserBrickData userBrickData : userBrickDataList) {\n-\t\t\t\tif (userBrickData instanceof UserBrickLabel) {\n-\t\t\t\t\tuserDataList.add(((UserBrickLabel) userBrickData).getLabel());\n+\t\t\tfor (UserDefinedBrickData userDefinedBrickData : userDefinedBrickDataList) {\n+\t\t\t\tif (userDefinedBrickData instanceof UserDefinedBrickLabel) {\n+\t\t\t\t\tuserDataList.add(((UserDefinedBrickLabel) userDefinedBrickData).getLabel());\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn userDataList;\n \t}\n \n \tprivate boolean lastContentIsLabel() {\n-\t\tif (userBrickDataList.isEmpty()) {\n+\t\tif (userDefinedBrickDataList.isEmpty()) {\n \t\t\treturn false;\n \t\t}\n-\t\treturn userBrickDataList.get(userBrickDataList.size() - 1) instanceof UserBrickLabel;\n+\t\treturn userDefinedBrickDataList.get(userDefinedBrickDataList.size() - 1) instanceof UserDefinedBrickLabel;\n+\t}\n+\n+\tpublic boolean isUserDefinedBrickDataEqual(UserDefinedBrick other) {\n+\t\tif (userDefinedBrickDataList.size() != other.userDefinedBrickDataList.size()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tfor (int dataIndex = 0; dataIndex < userDefinedBrickDataList.size(); dataIndex++) {\n+\t\t\tUserDefinedBrickData thisData = userDefinedBrickDataList.get(dataIndex);\n+\t\t\tUserDefinedBrickData otherData = other.userDefinedBrickDataList.get(dataIndex);\n+\n+\t\t\tif (!thisData.getClass().equals(otherData.getClass())) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\tif (thisData instanceof UserDefinedBrickLabel && !thisData.equals(otherData)) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\tpublic Brick clone() throws CloneNotSupportedException {\n+\t\tUserDefinedBrick clone = (UserDefinedBrick) super.clone();\n+\t\tclone.userDefinedBrickDataList = this.getUserDefinedBrickDataList();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "46985d0a9a424059b55bf3ebee3290e282f502e2", "url": "https://github.com/Catrobat/Catroid/commit/46985d0a9a424059b55bf3ebee3290e282f502e2", "message": "CATROID-218 Enable definition of a user brick", "committedDate": "2020-06-22T12:58:00Z", "type": "commit"}, {"oid": "46985d0a9a424059b55bf3ebee3290e282f502e2", "url": "https://github.com/Catrobat/Catroid/commit/46985d0a9a424059b55bf3ebee3290e282f502e2", "message": "CATROID-218 Enable definition of a user brick", "committedDate": "2020-06-22T12:58:00Z", "type": "forcePushed"}]}