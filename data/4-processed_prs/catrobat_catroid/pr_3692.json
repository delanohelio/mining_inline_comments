{"pr_number": 3692, "pr_title": "CATROID-569 REFACTOR DeleteItemOfUserListAction to Kotlin", "pr_createdAt": "2020-07-20T18:55:27Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3692", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1NDgxNA==", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458254814", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (userList == null) {\n          \n          \n            \n                        return\n          \n          \n            \n                    }\n          \n          \n            \n                    if (userList!!.value.size == 0) {\n          \n          \n            \n                        return\n          \n          \n            \n                    }\n          \n          \n            \n                    val listSize = userList?.value?.size.takeUnless { it == 0 } ?: return\n          \n      \n    \n    \n  \n\nNull safety is Kotlin's biggest strength. Java style checks defeat its purpose. Also see below.", "author": "lweitzendorf", "createdAt": "2020-07-21T17:07:25Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null\n+\n+    override fun update(percent: Float) {\n+        if (userList == null) {\n+            return\n+        }\n+        if (userList!!.value.size == 0) {\n+            return\n+        }", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1NjA5Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458256092", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    var indexToDelete: Int = try {\n          \n          \n            \n                        if (formulaIndexToDelete == null) {\n          \n          \n            \n                            1\n          \n          \n            \n                        } else {\n          \n          \n            \n                            formulaIndexToDelete!!.interpretInteger(sprite)\n          \n          \n            \n                        }\n          \n          \n            \n                    } catch (interpretationException: InterpretationException) {\n          \n          \n            \n                        Log.e(DeleteItemOfUserListAction::class.java.simpleName,\n          \n          \n            \n                            \"Interpreting sprite as integer failed : \" + sprite.toString(), interpretationException)\n          \n          \n            \n                        1\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    indexToDelete--\n          \n          \n            \n                    val indexToDelete = try {\n          \n          \n            \n                        formulaIndexToDelete?.interpretInteger(sprite)?.minus(1) ?: 0\n          \n          \n            \n                    } catch (exception: InterpretationException) {\n          \n          \n            \n                        Log.e(javaClass.simpleName, \"Interpreting formula as integer failed\", exception)\n          \n          \n            \n                        0\n          \n          \n            \n                    }", "author": "lweitzendorf", "createdAt": "2020-07-21T17:09:36Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null\n+\n+    override fun update(percent: Float) {\n+        if (userList == null) {\n+            return\n+        }\n+        if (userList!!.value.size == 0) {\n+            return\n+        }\n+\n+        var indexToDelete: Int = try {\n+            if (formulaIndexToDelete == null) {\n+                1\n+            } else {\n+                formulaIndexToDelete!!.interpretInteger(sprite)\n+            }\n+        } catch (interpretationException: InterpretationException) {\n+            Log.e(DeleteItemOfUserListAction::class.java.simpleName,\n+                \"Interpreting sprite as integer failed : \" + sprite.toString(), interpretationException)\n+            1\n+        }\n+\n+        indexToDelete--", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MjAzNA==", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458262034", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (indexToDelete >= userList!!.value.size || indexToDelete < 0) {\n          \n          \n            \n                        return\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    (userList!!.value as ArrayList<Object?>).removeAt(indexToDelete)\n          \n          \n            \n                    if (indexToDelete in 0 until listSize) {\n          \n          \n            \n                        userList!!.value.removeAt(indexToDelete)\n          \n          \n            \n                    }", "author": "lweitzendorf", "createdAt": "2020-07-21T17:19:24Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null\n+\n+    override fun update(percent: Float) {\n+        if (userList == null) {\n+            return\n+        }\n+        if (userList!!.value.size == 0) {\n+            return\n+        }\n+\n+        var indexToDelete: Int = try {\n+            if (formulaIndexToDelete == null) {\n+                1\n+            } else {\n+                formulaIndexToDelete!!.interpretInteger(sprite)\n+            }\n+        } catch (interpretationException: InterpretationException) {\n+            Log.e(DeleteItemOfUserListAction::class.java.simpleName,\n+                \"Interpreting sprite as integer failed : \" + sprite.toString(), interpretationException)\n+            1\n+        }\n+\n+        indexToDelete--\n+\n+        if (indexToDelete >= userList!!.value.size || indexToDelete < 0) {\n+            return\n+        }\n+\n+        (userList!!.value as ArrayList<Object?>).removeAt(indexToDelete)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MzcwMg==", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458263702", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                fun setUserList(userVariable: UserList?) {\n          \n          \n            \n                    this.userList = userVariable\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                fun setFormulaIndexToDelete(formulaIndexToDelete: Formula?) {\n          \n          \n            \n                    this.formulaIndexToDelete = formulaIndexToDelete\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                fun setSprite(sprite: Sprite?) {\n          \n          \n            \n                    this.sprite = sprite\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nYou can delete all of these. Kotlin will generate them automatically based on member visibility. Also, setters should not accept null.", "author": "lweitzendorf", "createdAt": "2020-07-21T17:22:05Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null\n+\n+    override fun update(percent: Float) {\n+        if (userList == null) {\n+            return\n+        }\n+        if (userList!!.value.size == 0) {\n+            return\n+        }\n+\n+        var indexToDelete: Int = try {\n+            if (formulaIndexToDelete == null) {\n+                1\n+            } else {\n+                formulaIndexToDelete!!.interpretInteger(sprite)\n+            }\n+        } catch (interpretationException: InterpretationException) {\n+            Log.e(DeleteItemOfUserListAction::class.java.simpleName,\n+                \"Interpreting sprite as integer failed : \" + sprite.toString(), interpretationException)\n+            1\n+        }\n+\n+        indexToDelete--\n+\n+        if (indexToDelete >= userList!!.value.size || indexToDelete < 0) {\n+            return\n+        }\n+\n+        (userList!!.value as ArrayList<Object?>).removeAt(indexToDelete)\n+    }\n+\n+    fun setUserList(userVariable: UserList?) {\n+        this.userList = userVariable\n+    }\n+\n+    fun setFormulaIndexToDelete(formulaIndexToDelete: Formula?) {\n+        this.formulaIndexToDelete = formulaIndexToDelete\n+    }\n+\n+    fun setSprite(sprite: Sprite?) {\n+        this.sprite = sprite\n+    }", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2Mzk5NQ==", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458263995", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private var sprite: Sprite? = null\n          \n          \n            \n                private var formulaIndexToDelete: Formula? = null\n          \n          \n            \n                private var userList: UserList? = null\n          \n          \n            \n                var sprite: Sprite? = null\n          \n          \n            \n                var formulaIndexToDelete: Formula? = null\n          \n          \n            \n                var userList: UserList? = null\n          \n      \n    \n    \n  \n\nSee setters below", "author": "lweitzendorf", "createdAt": "2020-07-21T17:22:38Z", "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "49e97dc7f62323bef5aac38168ece30eeb66dd5a", "url": "https://github.com/Catrobat/Catroid/commit/49e97dc7f62323bef5aac38168ece30eeb66dd5a", "message": "CATROID-569 REFACTOR DeleteItemOfUserListAction to Kotlin\n\nAdditionaly added a log message in the catch section to avoid\nexception swallowing.", "committedDate": "2020-07-22T09:08:22Z", "type": "commit"}, {"oid": "49e97dc7f62323bef5aac38168ece30eeb66dd5a", "url": "https://github.com/Catrobat/Catroid/commit/49e97dc7f62323bef5aac38168ece30eeb66dd5a", "message": "CATROID-569 REFACTOR DeleteItemOfUserListAction to Kotlin\n\nAdditionaly added a log message in the catch section to avoid\nexception swallowing.", "committedDate": "2020-07-22T09:08:22Z", "type": "forcePushed"}]}