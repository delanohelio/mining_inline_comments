{"pr_number": 304, "pr_title": "[bugfix] update the ClusterDetailsEventProcessor only when it is valid.", "pr_createdAt": "2020-07-24T22:54:36Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMzExNQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460323115", "bodyText": "This is generally an anti pattern. Is there a reason you're throwing away the stacktrace?", "author": "sidheart", "createdAt": "2020-07-24T23:03:06Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/persistence/SQLitePersistor.java", "diffHunk": "@@ -362,7 +362,7 @@ private JsonElement readTemperatureProfileRca(String rca) {\n         response.addNestedSummaryList(nodeLevelDimSummary);\n       }\n     } catch (DataAccessException dex) {\n-      LOG.error(\"Failed to read temperature profile RCA for {}\", rca, dex);\n+      LOG.warn(\"Failed to read temperature profile RCA for {}. Msg: {}\", rca, dex.getMessage());", "originalCommit": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTQ4OA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460325488", "bodyText": "Not being able to find the RCA table is justified if the query is made early enough that one is not generated. The long stack trace gives people an impression of an error, when this can happen. That's why I removed the stacktrace with just a message.", "author": "yojs", "createdAt": "2020-07-24T23:13:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMzExNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDAyNw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460324027", "bodyText": "should we also call the default constructor this() here in case something else needs to be initialized in AppContext ?", "author": "rguo-aws", "createdAt": "2020-07-24T23:06:55Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/AppContext.java", "diffHunk": "@@ -38,6 +38,10 @@ public AppContext() {\n     this.clusterDetailsEventProcessor = null;\n   }\n \n+  public AppContext(AppContext other) {\n+    this.clusterDetailsEventProcessor = new ClusterDetailsEventProcessor(other.clusterDetailsEventProcessor);", "originalCommit": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNjU4Ng==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460326586", "bodyText": "This is a copy constructor. So ideally it should copy everything but after rebasing I saw, you added a new member which is a cache. I am sure we don't want to make a copy of it.\nSo, I will call this() as you sugested", "author": "yojs", "createdAt": "2020-07-24T23:17:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyOTQxNA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460329414", "bodyText": "Thinking more about it, I will explicitly initialize the other. Calling other() initializes the other with default which we may not intend.", "author": "yojs", "createdAt": "2020-07-24T23:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDE4OA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460324188", "bodyText": "same as above", "author": "rguo-aws", "createdAt": "2020-07-24T23:07:46Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -40,6 +40,19 @@\n    */\n   private volatile ImmutableList<NodeDetails> nodesDetails = null;\n \n+  public ClusterDetailsEventProcessor() {}\n+\n+  public ClusterDetailsEventProcessor(final ClusterDetailsEventProcessor other) {\n+    if (other.nodesDetails != null) {", "originalCommit": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyOTc2NQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460329765", "bodyText": "Similar argument", "author": "yojs", "createdAt": "2020-07-24T23:32:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDE4OA=="}], "type": "inlineReview"}, {"oid": "e42a12f4e85d8db057fd8a34e177c9eea0ebddf2", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/e42a12f4e85d8db057fd8a34e177c9eea0ebddf2", "message": "[bugfix] update the ClusterDetailsEventProcessor only when it is valid.\n\nThere was a bug where we were updating the ClusterDetailsEventProcessor before it was filled with data. This fixes it and some other cases where we can run into NPE.", "committedDate": "2020-07-24T23:09:21Z", "type": "commit"}, {"oid": "c741d9c059ba674da29d9216b2ef2fbd730977e6", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/c741d9c059ba674da29d9216b2ef2fbd730977e6", "message": "Making the argument final", "committedDate": "2020-07-24T23:09:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDgwMQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460324801", "bodyText": "should we add a few comments here to explain why we want to do this check ?", "author": "rguo-aws", "createdAt": "2020-07-24T23:10:01Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ReaderMetricsProcessor.java", "diffHunk": "@@ -466,6 +463,10 @@ is ready so it starts to read that file (go back two windows and\n \n     emitMetrics(currWindowStartTime);\n \n+    if (appContext != null && !clusterDetailsEventsProcessor.getNodesDetails().isEmpty()) {", "originalCommit": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTk2MA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460325960", "bodyText": "^ I was confused by this too, I had to look into AppContext to figure out why a comment would be nice", "author": "sidheart", "createdAt": "2020-07-24T23:15:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyOTgwOA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460329808", "bodyText": "Good point. Will do", "author": "yojs", "createdAt": "2020-07-24T23:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDgwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDk3MA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460324970", "bodyText": "Nit: use a builder for this instead of an alloc + copy\nImmutableList.Builder builder = new ImmutableList.Builder<NodeDetails>();\nfor (final NodeDetails oldDetails : other.nodesDetails) {\n        builder.add(new NodeDetails(oldDetails));\n}\nthis.nodesDetails = builder.build();", "author": "sidheart", "createdAt": "2020-07-24T23:10:44Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -40,6 +40,19 @@\n    */\n   private volatile ImmutableList<NodeDetails> nodesDetails = null;\n \n+  public ClusterDetailsEventProcessor() {}\n+\n+  public ClusterDetailsEventProcessor(final ClusterDetailsEventProcessor other) {\n+    if (other.nodesDetails != null) {\n+      List<NodeDetails> nodeDetails = new ArrayList<>();", "originalCommit": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMDk1MA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460330950", "bodyText": "Thanks a lot ! good point", "author": "yojs", "createdAt": "2020-07-24T23:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDk3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTI1Ng==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460325256", "bodyText": "Nit: Annotate with @nonnull or add null check", "author": "sidheart", "createdAt": "2020-07-24T23:11:58Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/reader/ClusterDetailsEventProcessor.java", "diffHunk": "@@ -148,6 +161,13 @@ public NodeDetails(AllMetrics.NodeRole role, String id, String hostAddress, bool\n       this.role = role.toString();\n     }\n \n+    public NodeDetails(NodeDetails other) {", "originalCommit": "4c4d2a9057c155c6ceb2b5d095b3dbba819d6a67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMTIxNg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/304#discussion_r460331216", "bodyText": "makes sense. Thanks !", "author": "yojs", "createdAt": "2020-07-24T23:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTI1Ng=="}], "type": "inlineReview"}, {"oid": "1a44c832a46779e502221bba12fb4c4ece664b5f", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/1a44c832a46779e502221bba12fb4c4ece664b5f", "message": "Addressing PR comments", "committedDate": "2020-07-24T23:41:31Z", "type": "commit"}, {"oid": "1a44c832a46779e502221bba12fb4c4ece664b5f", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/1a44c832a46779e502221bba12fb4c4ece664b5f", "message": "Addressing PR comments", "committedDate": "2020-07-24T23:41:31Z", "type": "forcePushed"}]}