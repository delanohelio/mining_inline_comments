{"pr_number": 140, "pr_title": "Added unit tests for the rca.framework.api.contexts package", "pr_createdAt": "2020-04-09T15:51:45Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140", "timeline": [{"oid": "635669bdd8a34aae1545df5ea38017be1eb1df1d", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/635669bdd8a34aae1545df5ea38017be1eb1df1d", "message": "Added unit tests for the rca.framework.api.contexts package", "committedDate": "2020-04-14T18:45:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMTEwMw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414701103", "bodyText": "final maybe ?", "author": "yojs", "createdAt": "2020-04-24T16:21:25Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/GenericContext.java", "diffHunk": "@@ -15,9 +15,34 @@\n \n package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core;\n \n-public abstract class GenericContext {\n-  // TODO\n-  // The GenericContext class currently has only one derived class ResourceContext.\n-  // We are expecting to add more different types of context and some abstract methods can be added\n-  // here\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Resources;\n+\n+public class GenericContext {\n+    protected Resources.State state;", "originalCommit": "635669bdd8a34aae1545df5ea38017be1eb1df1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMzE0MA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414713140", "bodyText": "Done", "author": "sidheart", "createdAt": "2020-04-24T16:40:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMTEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMTgzMQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414701831", "bodyText": "If we have getState(), then should we just make state private ?", "author": "yojs", "createdAt": "2020-04-24T16:22:33Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/GenericContext.java", "diffHunk": "@@ -15,9 +15,34 @@\n \n package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core;\n \n-public abstract class GenericContext {\n-  // TODO\n-  // The GenericContext class currently has only one derived class ResourceContext.\n-  // We are expecting to add more different types of context and some abstract methods can be added\n-  // here\n+import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.api.Resources;\n+\n+public class GenericContext {\n+    protected Resources.State state;\n+\n+    public GenericContext(Resources.State state) {\n+        this.state = state;\n+    }\n+\n+    public Resources.State getState() {", "originalCommit": "635669bdd8a34aae1545df5ea38017be1eb1df1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMzA4MQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414713081", "bodyText": "Done", "author": "sidheart", "createdAt": "2020-04-24T16:40:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMTgzMQ=="}], "type": "inlineReview"}, {"oid": "4936bc3c3b43375f00d41efaa87ae088f831272c", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4936bc3c3b43375f00d41efaa87ae088f831272c", "message": "Added unit tests for the rca.framework.api.contexts package", "committedDate": "2020-04-24T16:39:30Z", "type": "commit"}, {"oid": "4936bc3c3b43375f00d41efaa87ae088f831272c", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/4936bc3c3b43375f00d41efaa87ae088f831272c", "message": "Added unit tests for the rca.framework.api.contexts package", "committedDate": "2020-04-24T16:39:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNzM1MA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414727350", "bodyText": "let's not remove this subclass. This CONSTANTS class defines the SQL schema and we might have multiple columns in the future", "author": "rguo-aws", "createdAt": "2020-04-24T17:03:23Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/contexts/ResourceContext.java", "diffHunk": "@@ -53,33 +40,23 @@ public static ResourceContext generic() {\n   public ResourceContextMessage buildContextMessage() {\n     final ResourceContextMessage.Builder contextMessageBuilder = ResourceContextMessage\n         .newBuilder();\n-    contextMessageBuilder.setState(state.ordinal());\n+    contextMessageBuilder.setState(getState().ordinal());\n     return contextMessageBuilder.build();\n   }\n \n   public static ResourceContext buildResourceContextFromMessage(ResourceContextMessage message) {\n     return new ResourceContext(Resources.State.values()[message.getState()]);\n   }\n \n-  @Override\n-  public String toString() {\n-    return this.state.toString();\n-  }\n-\n   public List<Field<?>> getSqlSchema() {\n     List<Field<?>> schemaList = new ArrayList<>();\n-    schemaList.add(DSL.field(DSL.name(SQL_SCHEMA_CONSTANTS.STATE_COL_NAME), String.class));\n+    schemaList.add(DSL.field(DSL.name(STATE_COL_NAME), String.class));\n     return schemaList;\n   }\n \n   public List<Object> getSqlValue() {\n     List<Object> valueList = new ArrayList<>();\n-    valueList.add(this.state.toString());\n+    valueList.add(getState().toString());\n     return valueList;\n   }\n-\n-  public static class SQL_SCHEMA_CONSTANTS {", "originalCommit": "4936bc3c3b43375f00d41efaa87ae088f831272c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc0MjgyMg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414742822", "bodyText": "Restored subclass", "author": "sidheart", "createdAt": "2020-04-24T17:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNzM1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyODk1Ng==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414728956", "bodyText": "let's keep this class as an abstract class. I don't think we need to move everything into this base class as we might have something completely different in SymptomContext.java", "author": "rguo-aws", "createdAt": "2020-04-24T17:06:09Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/core/GenericContext.java", "diffHunk": "@@ -15,9 +15,34 @@\n \n package com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core;\n \n-public abstract class GenericContext {", "originalCommit": "4936bc3c3b43375f00d41efaa87ae088f831272c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc0MzMyOA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414743328", "bodyText": "Done", "author": "sidheart", "createdAt": "2020-04-24T17:29:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyODk1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyOTc4NA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414729784", "bodyText": "This class is more like a placeholder because what needs to be defines here is still not very clear. So let's keep this as is.", "author": "rguo-aws", "createdAt": "2020-04-24T17:07:34Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/contexts/SymptomContext.java", "diffHunk": "@@ -19,23 +19,11 @@\n import com.amazon.opendistro.elasticsearch.performanceanalyzer.rca.framework.core.GenericContext;\n \n public class SymptomContext extends GenericContext {", "originalCommit": "4936bc3c3b43375f00d41efaa87ae088f831272c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc0MzIzNA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/140#discussion_r414743234", "bodyText": "I've only taken out common parts, if we need to change the logic in the future overriding should be possible", "author": "sidheart", "createdAt": "2020-04-24T17:29:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyOTc4NA=="}], "type": "inlineReview"}, {"oid": "0b5227fafe799b94a4b571c02ff9e728289a5daf", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/0b5227fafe799b94a4b571c02ff9e728289a5daf", "message": "Made GenericContext abstract and restored SQL schema class", "committedDate": "2020-04-24T17:26:44Z", "type": "commit"}]}