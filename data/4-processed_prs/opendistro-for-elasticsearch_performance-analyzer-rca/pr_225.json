{"pr_number": 225, "pr_title": "Refactoring : Add generic type to ResourceFlowUnit. ", "pr_createdAt": "2020-06-08T18:05:09Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/225", "timeline": [{"oid": "2daf986ecc89980cd941439df69f859925903e2c", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/2daf986ecc89980cd941439df69f859925903e2c", "message": "refactor src code", "committedDate": "2020-06-08T17:23:56Z", "type": "commit"}, {"oid": "adae83f53c52517606eded554486263e5377acba", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/adae83f53c52517606eded554486263e5377acba", "message": "refactoring UTs", "committedDate": "2020-06-08T17:38:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkyNjIzMg==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/225#discussion_r436926232", "bodyText": "Should we add the Generic type parameter instead of <> ?", "author": "yojs", "createdAt": "2020-06-08T19:00:42Z", "path": "src/main/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/rca/framework/api/flow_units/ResourceFlowUnit.java", "diffHunk": "@@ -114,31 +121,37 @@ public FlowUnitMessage buildFlowUnitMessage(final String graphNode, final String\n    * parse the \"oneof\" section in protocol buffer call the corresponding object build function for\n    * each summary type\n    */\n-  public static ResourceFlowUnit buildFlowUnitFromWrapper(final FlowUnitMessage message) {\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T extends GenericSummary> ResourceFlowUnit<T> buildFlowUnitFromWrapper(final FlowUnitMessage message) {\n     //if the flowunit is empty. empty flowunit does not have context\n     if (message.hasResourceContext()) {\n       ResourceContext newContext = ResourceContext\n           .buildResourceContextFromMessage(message.getResourceContext());\n-      GenericSummary newSummary = null;\n-      if (message.getSummaryOneofCase().getNumber()\n-          == FlowUnitMessage.SummaryOneofCase.HOTRESOURCESUMMARY.getNumber()\n-          && message.hasHotResourceSummary()) {\n-        newSummary = HotResourceSummary\n-            .buildHotResourceSummaryFromMessage(message.getHotResourceSummary());\n-      } else if (message.getSummaryOneofCase().getNumber()\n-          == FlowUnitMessage.SummaryOneofCase.HOTNODESUMMARY.getNumber()\n-          && message.hasHotNodeSummary()) {\n-        newSummary = HotNodeSummary.buildHotNodeSummaryFromMessage(message.getHotNodeSummary());\n-      } else if (message.getSummaryOneofCase().getNumber()\n-              == FlowUnitMessage.SummaryOneofCase.NODETEMPERATURESUMMARY.getNumber()\n-              && message.hasNodeTemperatureSummary()) {\n-        return CompactNodeTemperatureFlowUnit.buildFlowUnitFromWrapper(message);\n+      T newSummary = null;\n+      try {\n+        switch (message.getSummaryOneofCase()) {\n+          case HOTRESOURCESUMMARY: {\n+            newSummary = (T) HotResourceSummary\n+                .buildHotResourceSummaryFromMessage(message.getHotResourceSummary());\n+            break;\n+          }\n+          case HOTNODESUMMARY: {\n+            newSummary = (T) HotNodeSummary\n+                .buildHotNodeSummaryFromMessage(message.getHotNodeSummary());\n+            break;\n+          }\n+        }\n+      } catch (Exception e) {\n+        // we are not supposed to run into this unless we specified wrong summary template\n+        // for this function. Make sure the summary type passed in as template are consistent\n+        // between serialization and de-serializing.\n+        LOG.error(\"RCA: casting to wrong summary type when de-serializing this flowunit\");\n       }\n-      return new ResourceFlowUnit(message.getTimeStamp(), newContext, newSummary);\n+      return new ResourceFlowUnit<>(message.getTimeStamp(), newContext, newSummary);", "originalCommit": "adae83f53c52517606eded554486263e5377acba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}