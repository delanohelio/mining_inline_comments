{"pr_number": 400, "pr_title": "Improve WaitFor utility logic", "pr_createdAt": "2020-08-27T16:56:58Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/400", "timeline": [{"oid": "89e08cfe87cac570e287fb98a9a26e7faaf4138e", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/89e08cfe87cac570e287fb98a9a26e7faaf4138e", "message": "Improve WaitFor utility logic\n\n- WaitFor uses Instant.now() instead of System.currentTimeMillis() to\nget a system independent time measurement\n- WaitFor now has a fixed wait before retesting the provided callable.\nIt also checks the callable one final time before throwing an exception\n- A 1s WaitFor() call in WireHopperTest has been increased to 10s", "committedDate": "2020-08-27T16:54:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzNzIxOQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/400#discussion_r478637219", "bodyText": "Can we do it in the same function? Do we need method overloading for a single hardcoded error string?", "author": "aditjind", "createdAt": "2020-08-27T19:11:18Z", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/util/WaitFor.java", "diffHunk": "@@ -16,16 +18,31 @@\n      * @throws Exception If the time limit expires before the task evaluates to true\n      */\n     public static void waitFor(Callable<Boolean> task, long maxWait, TimeUnit unit) throws Exception {\n+        waitFor(task, maxWait, unit, \"waitFor timed out before task evaluated to true\");\n+    }\n+\n+    /**\n+     * Waits at most the specified time for the given task to evaluate to true\n+     * @param task The task which we hope evaluates to true before the time limit\n+     * @param maxWait The max amount of time to wait for the task to evaluate for true\n+     * @param unit The time unit of the maxWait parameter\n+     * @param message The exception message to print if waitFor times out\n+     * @throws Exception If the time limit expires before the task evaluates to true\n+     */\n+    public static void waitFor(Callable<Boolean> task, long maxWait, TimeUnit unit, String message)", "originalCommit": "89e08cfe87cac570e287fb98a9a26e7faaf4138e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1OTUzNQ==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/400#discussion_r482259535", "bodyText": "You're right, right now this isn't being used anywhere. However, I it's valuable for developers to be able to print their own messages context if their routine fails.", "author": "sidheart", "createdAt": "2020-09-02T17:55:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzNzIxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3ODMzMA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/400#discussion_r478678330", "bodyText": "Maybe a do-while is a cleaner way to ensure we don't miss out on the last 500 millis ?", "author": "yojs", "createdAt": "2020-08-27T20:31:21Z", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/util/WaitFor.java", "diffHunk": "@@ -16,16 +18,31 @@\n      * @throws Exception If the time limit expires before the task evaluates to true\n      */\n     public static void waitFor(Callable<Boolean> task, long maxWait, TimeUnit unit) throws Exception {\n+        waitFor(task, maxWait, unit, \"waitFor timed out before task evaluated to true\");\n+    }\n+\n+    /**\n+     * Waits at most the specified time for the given task to evaluate to true\n+     * @param task The task which we hope evaluates to true before the time limit\n+     * @param maxWait The max amount of time to wait for the task to evaluate for true\n+     * @param unit The time unit of the maxWait parameter\n+     * @param message The exception message to print if waitFor times out\n+     * @throws Exception If the time limit expires before the task evaluates to true\n+     */\n+    public static void waitFor(Callable<Boolean> task, long maxWait, TimeUnit unit, String message)\n+        throws Exception {\n         long maxWaitMillis = TimeUnit.MILLISECONDS.convert(maxWait, unit);\n-        long pollTime = System.currentTimeMillis();\n-        long curTime;\n+        Instant start = Instant.now();\n         while (!task.call() && maxWaitMillis >= 0) {\n-            curTime = System.currentTimeMillis();\n-            maxWaitMillis -= (curTime - pollTime);\n-            pollTime = curTime;\n+            Instant finish = Instant.now();\n+            maxWaitMillis -= Duration.between(start, finish).toMillis();\n+            start = finish;\n+            // Wait for a fixed amount before calling the task again\n+            Thread.sleep(500L);\n         }\n-        if (maxWaitMillis < 0) {\n-            throw new TimeoutException(\"WaitFor timed out before task evaluated to true\");\n+        // Check the task one last time before throwing an exception\n+        if (!task.call() && maxWaitMillis < 0) {", "originalCommit": "89e08cfe87cac570e287fb98a9a26e7faaf4138e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1ODkwMA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/400#discussion_r482258900", "bodyText": "Done", "author": "sidheart", "createdAt": "2020-09-02T17:54:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3ODMzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3OTg1OA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/400#discussion_r478679858", "bodyText": "Because this is just a test, its okay to burn CPU. If we want to be conscious, maybe 1 ms might be good enough ?", "author": "yojs", "createdAt": "2020-08-27T20:34:32Z", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/util/WaitFor.java", "diffHunk": "@@ -16,16 +18,31 @@\n      * @throws Exception If the time limit expires before the task evaluates to true\n      */\n     public static void waitFor(Callable<Boolean> task, long maxWait, TimeUnit unit) throws Exception {\n+        waitFor(task, maxWait, unit, \"waitFor timed out before task evaluated to true\");\n+    }\n+\n+    /**\n+     * Waits at most the specified time for the given task to evaluate to true\n+     * @param task The task which we hope evaluates to true before the time limit\n+     * @param maxWait The max amount of time to wait for the task to evaluate for true\n+     * @param unit The time unit of the maxWait parameter\n+     * @param message The exception message to print if waitFor times out\n+     * @throws Exception If the time limit expires before the task evaluates to true\n+     */\n+    public static void waitFor(Callable<Boolean> task, long maxWait, TimeUnit unit, String message)\n+        throws Exception {\n         long maxWaitMillis = TimeUnit.MILLISECONDS.convert(maxWait, unit);\n-        long pollTime = System.currentTimeMillis();\n-        long curTime;\n+        Instant start = Instant.now();\n         while (!task.call() && maxWaitMillis >= 0) {\n-            curTime = System.currentTimeMillis();\n-            maxWaitMillis -= (curTime - pollTime);\n-            pollTime = curTime;\n+            Instant finish = Instant.now();\n+            maxWaitMillis -= Duration.between(start, finish).toMillis();\n+            start = finish;\n+            // Wait for a fixed amount before calling the task again\n+            Thread.sleep(500L);", "originalCommit": "89e08cfe87cac570e287fb98a9a26e7faaf4138e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1ODg1MA==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/400#discussion_r482258850", "bodyText": "When I was debugging I found for a particular test method that this routine failed even though at the following instruction the condition was met. This may have had something to do with the calling thread hogging resources.\nI've reduced the sleep to 100ms which is extremely conservative but will still allow us to leverage the utility of WaitFor.", "author": "sidheart", "createdAt": "2020-09-02T17:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3OTg1OA=="}], "type": "inlineReview"}, {"oid": "47ca15720569c438d6d0d3264061b2e23292586c", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/47ca15720569c438d6d0d3264061b2e23292586c", "message": "Address PR Comments\n\n- Task call / wait loop is now a do-while\n- Sleep is reduced to 100ms", "committedDate": "2020-09-02T17:51:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI2NDIxNw==", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/pull/400#discussion_r482264217", "bodyText": "nit: new line", "author": "sruti1312", "createdAt": "2020-09-02T18:03:29Z", "path": "src/test/java/com/amazon/opendistro/elasticsearch/performanceanalyzer/util/WaitFor.java", "diffHunk": "@@ -16,16 +18,32 @@\n      * @throws Exception If the time limit expires before the task evaluates to true\n      */\n     public static void waitFor(Callable<Boolean> task, long maxWait, TimeUnit unit) throws Exception {\n+        waitFor(task, maxWait, unit, \"waitFor timed out before task evaluated to true\");\n+    }\n+\n+    /**\n+     * Waits at most the specified time for the given task to evaluate to true\n+     * @param task The task which we hope evaluates to true before the time limit\n+     * @param maxWait The max amount of time to wait for the task to evaluate for true\n+     * @param unit The time unit of the maxWait parameter\n+     * @param message The exception message to print if waitFor times out\n+     * @throws Exception If the time limit expires before the task evaluates to true\n+     */\n+    public static void waitFor(Callable<Boolean> task, long maxWait, TimeUnit unit, String message)\n+        throws Exception {\n         long maxWaitMillis = TimeUnit.MILLISECONDS.convert(maxWait, unit);\n-        long pollTime = System.currentTimeMillis();\n-        long curTime;\n-        while (!task.call() && maxWaitMillis >= 0) {\n-            curTime = System.currentTimeMillis();\n-            maxWaitMillis -= (curTime - pollTime);\n-            pollTime = curTime;\n-        }\n-        if (maxWaitMillis < 0) {\n-            throw new TimeoutException(\"WaitFor timed out before task evaluated to true\");\n+        do {\n+            Instant start = Instant.now();\n+            if (task.call()) {\n+                break;\n+            }\n+            maxWaitMillis -= Duration.between(start, Instant.now()).toMillis();\n+            // Wait for a fixed amount before calling the task again\n+            Thread.sleep(100L);\n+        } while (maxWaitMillis >= 0);\n+        // Check the task one last time before throwing an exception\n+        if (!task.call()) {\n+            throw new TimeoutException(message);\n         }\n     }\n-}\n+}", "originalCommit": "47ca15720569c438d6d0d3264061b2e23292586c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "89f9960bfeae48854cc59b0e104dba21e04be758", "url": "https://github.com/opendistro-for-elasticsearch/performance-analyzer-rca/commit/89f9960bfeae48854cc59b0e104dba21e04be758", "message": "Update wait logic, see if it resolves failures", "committedDate": "2020-09-03T17:06:25Z", "type": "commit"}]}