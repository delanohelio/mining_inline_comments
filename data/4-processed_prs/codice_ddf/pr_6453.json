{"pr_number": 6453, "pr_title": "[2.19.x] DDF-6221 Fixes NPE in MatchAnyValidator", "pr_createdAt": "2020-12-09T17:23:40Z", "pr_url": "https://github.com/codice/ddf/pull/6453", "timeline": [{"oid": "cb0ad03a9f8c63218d78ba873bf8ccac3c0d9818", "url": "https://github.com/codice/ddf/commit/cb0ad03a9f8c63218d78ba873bf8ccac3c0d9818", "message": "DDF-6221 Fixed NPE in MatchAnyValidator", "committedDate": "2020-12-09T17:19:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxOTU3Mg==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r539519572", "bodyText": "Would it make more sense to initialize this.validators as an empty List in this case? Unless the distinction between an empty validators and a null validators matters, I think that we could prevent complications down the line if we reduce the number of null values which our codebase permits.", "author": "kentmorrissey", "createdAt": "2020-12-09T17:50:36Z", "path": "catalog/core/catalog-core-validator/src/main/java/ddf/catalog/validation/impl/validator/MatchAnyValidator.java", "diffHunk": "@@ -34,11 +34,16 @@\n   private final List<AttributeValidator> validators;\n \n   public MatchAnyValidator(List<AttributeValidator> validators) {\n-    this.validators =\n-        validators\n-            .stream()\n-            .sorted(Comparator.comparingInt(Object::hashCode))\n-            .collect(Collectors.toList());\n+    // validators has to be initialized\n+    if (validators == null) {\n+      this.validators = null;", "originalCommit": "cb0ad03a9f8c63218d78ba873bf8ccac3c0d9818", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU0MTUzNg==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r539541536", "bodyText": "I do like the idea of empty list better. It seems the unit tests pass with empty list initialization so that seems to work. Initially I was trying to avoid the NPE.", "author": "shaundmorris", "createdAt": "2020-12-09T18:22:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxOTU3Mg=="}], "type": "inlineReview"}, {"oid": "734926b39e05edbe9cf9807cf0c65c1d3226e349", "url": "https://github.com/codice/ddf/commit/734926b39e05edbe9cf9807cf0c65c1d3226e349", "message": "DDF-6221 initialize validators to an empty list in  MatchAnyValidator", "committedDate": "2020-12-09T18:24:16Z", "type": "commit"}, {"oid": "07afc08f89848be2d78b6cfb361275d986c499b1", "url": "https://github.com/codice/ddf/commit/07afc08f89848be2d78b6cfb361275d986c499b1", "message": "DDF-6221 made AttributeValidator list dependency optional", "committedDate": "2020-12-10T16:17:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDMxMQ==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r540340311", "bodyText": "Does this change fix the issues which this PR's build has had?", "author": "kentmorrissey", "createdAt": "2020-12-10T17:03:07Z", "path": "catalog/core/catalog-core-definitionparser/src/main/resources/OSGI-INF/blueprint/blueprint.xml", "diffHunk": "@@ -28,7 +28,7 @@\n             <reference-list interface=\"ddf.catalog.data.MetacardType\" />\n         </argument>\n         <argument>\n-            <reference-list interface=\"ddf.catalog.validation.AttributeValidator\" />\n+            <reference-list interface=\"ddf.catalog.validation.AttributeValidator\" availability=\"optional\" />", "originalCommit": "07afc08f89848be2d78b6cfb361275d986c499b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MjU4OQ==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r540342589", "bodyText": "yes, after fixing the first build issue, I ran into this one. So this was during DDF startup. The catalog-core-definitionparser bundle would not start causing DDF to have start-up issues. I made this optional since there are currently no bundles exporting ddf.catalog.validation.AttributeValidator in DDF. Seems to resolve this start issue and provide flexibility downstream.", "author": "shaundmorris", "createdAt": "2020-12-10T17:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDMxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0NTMwOQ==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r540345309", "bodyText": "Which issue do you mean by \"the first build issue\"? In case I encounter one of these issues in the future, I should learn what broke, why it broke, and how you solved it.", "author": "kentmorrissey", "createdAt": "2020-12-10T17:09:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDMxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM2NTI1OA==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r540365258", "bodyText": "The first build issues was the MatchAnyValidatorTest.testMatchAnyValidatorPassesWhenValidatorListIsNull was failing with a NullPointerException.", "author": "shaundmorris", "createdAt": "2020-12-10T17:37:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDMxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM2NjkxMg==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r540366912", "bodyText": "Oh, okay. Thanks. Do you think that your fix of the first issue caused the second issue?", "author": "kentmorrissey", "createdAt": "2020-12-10T17:39:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDMxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM2OTc5MQ==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r540369791", "bodyText": "The fixes are somewhat un-related other than being validator-related. With or without the first fix, the second issue would still be there because it has a required dependency that does not exist in DDF. I only really found it because I couldn't get my PR build to pass after fixing the first issue.", "author": "shaundmorris", "createdAt": "2020-12-10T17:43:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDMxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3MzU3Mw==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r540373573", "bodyText": "That makes sense. So between the last successful build of 2.19.x and the creation of this PR, someone merged the removal of a required dependency?", "author": "kentmorrissey", "createdAt": "2020-12-10T17:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDMxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ1MDI5OQ==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r540450299", "bodyText": "It was more like a required dependency/argument was added which is never found.", "author": "shaundmorris", "createdAt": "2020-12-10T19:47:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDMxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ1MTIwMg==", "url": "https://github.com/codice/ddf/pull/6453#discussion_r540451202", "bodyText": "Ah. Weird. Thanks!", "author": "kentmorrissey", "createdAt": "2020-12-10T19:49:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDMxMQ=="}], "type": "inlineReview"}]}