{"pr_number": 6401, "pr_title": "DDF-6400 Upgrade to Camel 3.4.0", "pr_createdAt": "2020-10-26T18:04:48Z", "pr_url": "https://github.com/codice/ddf/pull/6401", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2NzU3Nw==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r512167577", "bodyText": "After discussing with @pklinef & @stustison, we decided this platform-http-proxy bundle no longer adds any value. Anybody that needs to enable HTTP can do so via the Pax Web configuration", "author": "SmithJosh", "createdAt": "2020-10-26T18:08:24Z", "path": "platform/platform-http-proxy/pom.xml", "diffHunk": "@@ -1,142 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "originalCommit": "a46b71ad84c91913f551eb2f3e1fda8d0f8a433d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2OTgyMQ==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r512169821", "bodyText": "See https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_controlling_routes", "author": "SmithJosh", "createdAt": "2020-10-26T18:12:09Z", "path": "catalog/core/catalog-core-directorymonitor/src/main/java/org/codice/ddf/catalog/content/monitor/ContentDirectoryMonitor.java", "diffHunk": "@@ -216,10 +218,10 @@ private void removeRoutes() {\n       try {\n         String routeId = routeDef.getId();\n         LOGGER.trace(\"Stopping route with ID = {} and path {}\", routeId, monitoredDirectory);\n-        camelContext.stopRoute(routeId);\n+        camelContext.getRouteController().stopRoute(routeId);", "originalCommit": "a46b71ad84c91913f551eb2f3e1fda8d0f8a433d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDA2Mg==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r512170062", "bodyText": "See https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_modelcamelcontext", "author": "SmithJosh", "createdAt": "2020-10-26T18:12:34Z", "path": "catalog/core/catalog-core-directorymonitor/src/main/java/org/codice/ddf/catalog/content/monitor/ContentDirectoryMonitor.java", "diffHunk": "@@ -216,10 +218,10 @@ private void removeRoutes() {\n       try {\n         String routeId = routeDef.getId();\n         LOGGER.trace(\"Stopping route with ID = {} and path {}\", routeId, monitoredDirectory);\n-        camelContext.stopRoute(routeId);\n+        camelContext.getRouteController().stopRoute(routeId);\n         boolean status = camelContext.removeRoute(routeId);\n         LOGGER.trace(\"Status of removing route {} is {}\", routeId, status);\n-        camelContext.removeRouteDefinition(routeDef);\n+        camelContext.adapt(ModelCamelContext.class).removeRouteDefinition(routeDef);", "originalCommit": "a46b71ad84c91913f551eb2f3e1fda8d0f8a433d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDgzMw==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r512170833", "bodyText": "See https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_generic_information\nCompositeRegistry is removed. DefaultRegistry is recommended replacement", "author": "SmithJosh", "createdAt": "2020-10-26T18:13:56Z", "path": "catalog/plugin/catalog-plugin-metacardbackup-s3storage/src/main/java/org/codice/ddf/catalog/plugin/metacard/backup/storage/s3storage/MetacardS3StorageRoute.java", "diffHunk": "@@ -88,11 +89,9 @@\n \n   public MetacardS3StorageRoute(CamelContext camelContext) {\n     super(camelContext);\n-    registry = new org.apache.camel.impl.SimpleRegistry();\n-    CompositeRegistry compositeRegistry = new CompositeRegistry();\n-    compositeRegistry.addRegistry(camelContext.getRegistry());\n-    compositeRegistry.addRegistry(registry);\n-    ((DefaultCamelContext) camelContext).setRegistry(compositeRegistry);", "originalCommit": "a46b71ad84c91913f551eb2f3e1fda8d0f8a433d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwNzk1NA==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r512207954", "bodyText": "Rather than copying these features and having to keep them in sync with camel can we just use org.apache.features.xml featureReplacements?", "author": "ryeats", "createdAt": "2020-10-26T19:16:30Z", "path": "features/camel/src/main/feature/feature.xml", "diffHunk": "@@ -16,285 +16,561 @@\n           xmlns=\"http://karaf.apache.org/xmlns/features/v1.3.0\"\n           xsi:schemaLocation=\"http://karaf.apache.org/xmlns/features/v1.3.0 http://karaf.apache.org/xmlns/features/v1.3.0\">\n \n-    <repository>mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features</repository>\n-    <repository>mvn:ddf.features/cxf/${project.version}/xml/features</repository>\n-    <repository>mvn:org.apache.karaf.features/enterprise/${karaf.version}/xml/features</repository>\n+  <repository>mvn:ddf.features/cxf/${project.version}/xml/features</repository>\n+  <repository>mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features</repository>\n+  <repository>mvn:org.apache.karaf.features/enterprise/${karaf.version}/xml/features</repository>\n \n-    <!--START Camel Features-->\n-    <!-- DO NOT EDIT\n-        All feature definitions come from 3rd party feature file:\n-        <repository>mvn:org.apache.camel.karaf/apache-camel/2.24.2/xml/features</repository>\n+  <!--START Camel Features-->\n+  <!-- DO NOT EDIT\n+      All feature definitions come from 3rd party feature file:\n+      <repository>mvn:org.apache.camel.karaf/apache-camel/3.4.4/xml/features</repository>\n \n-        All version properties for these Camel features are defined in the platform-app pom.\n+      All version properties for these Camel features are defined in the platform-app pom.\n \n-        DDF Changes made:\n-        - removed resolver=\"(obr)\" from every feature\n-        - added  to every feature\n-        - replaced ${project.version} with ${camel.version}\n-        - commented out xml-specs-api feature and replaced xml-specs-api with cxf-specs in camel-core feature\n-        - added camel as feature prerequisite in camel-http to keep things ordered\n-        - added cxf as feature prerequisite in camel to keep things ordered\n-        - removed features that are not needed\n-        - updated versions of qpid and proton versions and added netty bundles in camel-amqp\n-        - replaced bundles in camel-jms\n-        - replaced cxf-http-provider with cxf-http-jetty\n-        - the versions for proton-j and qpid-jms-client used in camel-amqp need to be kept in sync with the versions used in artemis-amqp\n-        - updated proton, qpid-jms, and netty versions to stay in sync with Camel 2.24.2 dependencies\n+      DDF Changes made:\n+      - replaced ${project.version} with ${camel.version}\n+      - commented out xml-specs-api feature and replaced xml-specs-api with cxf-specs in camel-core feature", "originalCommit": "a46b71ad84c91913f551eb2f3e1fda8d0f8a433d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI2MDA5Nw==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r512260097", "bodyText": "If we do that, then when we add features to the repository at compile time, we'd have to add bundles for both the old feature and our replacement, I think. If the reason for replacing the feature is to update vulnerable dependencies, then we have a problem because we're still packaging the vulnerable bundles in the distro, where they could be used (i.e. if somebody accidentally removes the replacement in org.apache.features.xml. Plus we'd get CVEs for the distro in OWASP reports.", "author": "SmithJosh", "createdAt": "2020-10-26T20:51:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwNzk1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIxMDkxOA==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r512210918", "bodyText": "It may be better if DDF didn't maintain these and any other features it doesn't directly use and require downstream distribution to add them or use them directly from camel's feature file", "author": "ryeats", "createdAt": "2020-10-26T19:21:56Z", "path": "features/camel/src/main/feature/feature.xml", "diffHunk": "@@ -16,285 +16,561 @@\n           xmlns=\"http://karaf.apache.org/xmlns/features/v1.3.0\"\n           xsi:schemaLocation=\"http://karaf.apache.org/xmlns/features/v1.3.0 http://karaf.apache.org/xmlns/features/v1.3.0\">\n \n-    <repository>mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features</repository>\n-    <repository>mvn:ddf.features/cxf/${project.version}/xml/features</repository>\n-    <repository>mvn:org.apache.karaf.features/enterprise/${karaf.version}/xml/features</repository>\n+  <repository>mvn:ddf.features/cxf/${project.version}/xml/features</repository>\n+  <repository>mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features</repository>\n+  <repository>mvn:org.apache.karaf.features/enterprise/${karaf.version}/xml/features</repository>\n \n-    <!--START Camel Features-->\n-    <!-- DO NOT EDIT\n-        All feature definitions come from 3rd party feature file:\n-        <repository>mvn:org.apache.camel.karaf/apache-camel/2.24.2/xml/features</repository>\n+  <!--START Camel Features-->\n+  <!-- DO NOT EDIT\n+      All feature definitions come from 3rd party feature file:\n+      <repository>mvn:org.apache.camel.karaf/apache-camel/3.4.4/xml/features</repository>\n \n-        All version properties for these Camel features are defined in the platform-app pom.\n+      All version properties for these Camel features are defined in the platform-app pom.\n \n-        DDF Changes made:\n-        - removed resolver=\"(obr)\" from every feature\n-        - added  to every feature\n-        - replaced ${project.version} with ${camel.version}\n-        - commented out xml-specs-api feature and replaced xml-specs-api with cxf-specs in camel-core feature\n-        - added camel as feature prerequisite in camel-http to keep things ordered\n-        - added cxf as feature prerequisite in camel to keep things ordered\n-        - removed features that are not needed\n-        - updated versions of qpid and proton versions and added netty bundles in camel-amqp\n-        - replaced bundles in camel-jms\n-        - replaced cxf-http-provider with cxf-http-jetty\n-        - the versions for proton-j and qpid-jms-client used in camel-amqp need to be kept in sync with the versions used in artemis-amqp\n-        - updated proton, qpid-jms, and netty versions to stay in sync with Camel 2.24.2 dependencies\n+      DDF Changes made:\n+      - replaced ${project.version} with ${camel.version}\n+      - commented out xml-specs-api feature and replaced xml-specs-api with cxf-specs in camel-core feature\n+      - removed features that are not needed\n+      - replaced geronimo-jta_1.1_spec bundle with Karaf's \"transaction\" feature in a few places:\n+        * camel-jms", "originalCommit": "a46b71ad84c91913f551eb2f3e1fda8d0f8a433d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI1Mzk4Mw==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r512253983", "bodyText": "Agreed, I didn't check to see if these features were actually needed, I just kept what was there before. I'll remove everything that's no longer used", "author": "SmithJosh", "createdAt": "2020-10-26T20:40:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIxMDkxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4MjgyOQ==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r512282829", "bodyText": "Ok I went through and removed a bunch of features that weren't used (see f12c5e4)", "author": "SmithJosh", "createdAt": "2020-10-26T21:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIxMDkxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2MzQzNQ==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514463435", "bodyText": "\u270f\ufe0f The string should contain the name of variable with the same case. So, it would be camelContext, not CamelContext.", "author": "glenhein", "createdAt": "2020-10-29T18:05:39Z", "path": "catalog/core/catalog-core-directorymonitor/src/main/java/org/codice/ddf/catalog/content/monitor/ContentDirectoryMonitor.java", "diffHunk": "@@ -117,7 +119,7 @@ public ContentDirectoryMonitor(\n       int delayBetweenRetries,\n       Executor configurationExecutor,\n       Security security) {\n-    this.camelContext = camelContext;\n+    this.camelContext = Objects.requireNonNull(camelContext, \"CamelContext cannot be null\");", "originalCommit": "f12c5e451269348d6a6f6d2b108ce68b17908ba7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2OTI2NA==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514469264", "bodyText": "Can you provide an explanation for the drop in coverage?", "author": "glenhein", "createdAt": "2020-10-29T18:14:50Z", "path": "catalog/plugin/catalog-plugin-metacardbackup-storage-common/pom.xml", "diffHunk": "@@ -91,12 +90,12 @@\n                                         <limit implementation=\"org.codice.jacoco.LenientLimit\">\n                                             <counter>INSTRUCTION</counter>\n                                             <value>COVEREDRATIO</value>\n-                                            <minimum>0.85</minimum>\n+                                            <minimum>0.82</minimum>", "originalCommit": "f12c5e451269348d6a6f6d2b108ce68b17908ba7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUxOTE1NA==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514519154", "bodyText": "Had to look into it. The test mocks out MetacardStorageRoute and doesn't provide it with a real camel context. The test was already throwing an NPE during the start() method, but now throws one during the stop() method now that we have to call adapt() on the camel context, so runs one less branch: https://github.com/codice/ddf/pull/6401/files#diff-793d74a69ec576f6c6e825cc360c730357f6581d38c24b9b7fb42234251d0f66R80\nIt'd probably be better if we used a real camel context. We're not really testing the stop and start methods right now since we don't have one", "author": "SmithJosh", "createdAt": "2020-10-29T19:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2OTI2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3MDY5Ng==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514470696", "bodyText": "Does an InputSource need to be closed?", "author": "glenhein", "createdAt": "2020-10-29T18:17:04Z", "path": "catalog/spatial/wfs/spatial-wfs-source/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/source/reader/XmlSchemaMessageBodyReader.java", "diffHunk": "@@ -66,20 +81,33 @@ public XmlSchema readFrom(\n       MultivaluedMap<String, String> headers,\n       InputStream inStream)\n       throws IOException, WebApplicationException {\n-    // Determine if this is an XMLSchema\n-    String input = IOUtils.toString(inStream);\n+\n+    String input = IOUtils.toString(inStream, StandardCharsets.UTF_8);\n     inStream.reset();\n-    String count = COUNT_XPATH_BUILDER.evaluate(camelContext, input);\n-    // See if there exactly one instance of \"xsd:schema\" in this doc\n-    if (Integer.parseInt(count) == 1) {\n-      XmlSchema schema = null;\n+\n+    if (isValid(new InputSource(inStream))) {", "originalCommit": "f12c5e451269348d6a6f6d2b108ce68b17908ba7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ4NDM1Mg==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514484352", "bodyText": "No, an InputSource is not closable. It just reads from the underlying stream. As for whether or not to close the stream, the javadoc for MessageBodyReader says not to [1]:\n\nThe caller is responsible for ensuring that the input stream ends when the entity has been consumed. The implementation should not close the input stream.\n\n[1] https://eclipse-ee4j.github.io/jaxrs-api/apidocs/2.1.6/javax/ws/rs/ext/MessageBodyReader.html#readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation%5B%5D,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)", "author": "SmithJosh", "createdAt": "2020-10-29T18:39:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3MDY5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3NDMyMw==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514474323", "bodyText": "\u270f\ufe0f I think that the default for Import-Package is *, so I think you can omit the Import-Package section\n<instructions>\n    <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n    <Export-Package>\n        org.codice.proxy.http\n    </Export-Package>\n</instructions>\nSame for libs/httpproxy/proxy-camel-servlet/pom.xml.", "author": "emmberk", "createdAt": "2020-10-29T18:22:57Z", "path": "libs/httpproxy/proxy-camel-route/pom.xml", "diffHunk": "@@ -91,15 +41,9 @@\n                     <instructions>\n                         <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n                         <Import-Package>\n-                            org.apache.camel.component.http,\n-                            org.apache.camel.component.servlet,\n-                            org.apache.camel.core.osgi,\n-                            javax.annotation;version=\"[1.2,2)\",\n                             *\n                         </Import-Package>", "originalCommit": "f12c5e451269348d6a6f6d2b108ce68b17908ba7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYxOTc2Mw==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514619763", "bodyText": "Yeah you're right. I'll change them", "author": "SmithJosh", "createdAt": "2020-10-29T23:13:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3NDMyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU5NTUwNA==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514595504", "bodyText": "\u270f\ufe0f I prefer to use the actual version for the file from which these properties were copied from in case the camel version is upgraded, but this file isn't updated correspondingly. Like we do in the camel feature.xml file.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Copied from org.apache.camel:camel-parent:pom:${camel.version}\n          \n          \n            \n                    Copied from org.apache.camel:camel-parent:pom:3.4.4", "author": "emmberk", "createdAt": "2020-10-29T22:07:01Z", "path": "features/pom.xml", "diffHunk": "@@ -39,60 +39,28 @@\n     </modules>\n \n     <properties>\n-        <!--START versions for camel features in platform-app features\n-        Copied from apache-camel-2.19.4-src/parent/pom.xml\n+        <!-- START versions for camel features\n+        Copied from org.apache.camel:camel-parent:pom:${camel.version}", "originalCommit": "f12c5e451269348d6a6f6d2b108ce68b17908ba7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU5OTUyNQ==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514599525", "bodyText": "\u270f\ufe0f\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  All version properties for these Camel features are defined in the platform-app pom.\n          \n          \n            \n                  All version properties for these Camel features are defined in the features pom.", "author": "emmberk", "createdAt": "2020-10-29T22:17:22Z", "path": "features/camel/src/main/feature/feature.xml", "diffHunk": "@@ -16,285 +16,434 @@\n           xmlns=\"http://karaf.apache.org/xmlns/features/v1.3.0\"\n           xsi:schemaLocation=\"http://karaf.apache.org/xmlns/features/v1.3.0 http://karaf.apache.org/xmlns/features/v1.3.0\">\n \n-    <repository>mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features</repository>\n-    <repository>mvn:ddf.features/cxf/${project.version}/xml/features</repository>\n-    <repository>mvn:org.apache.karaf.features/enterprise/${karaf.version}/xml/features</repository>\n+  <repository>mvn:ddf.features/cxf/${project.version}/xml/features</repository>\n \n-    <!--START Camel Features-->\n-    <!-- DO NOT EDIT\n-        All feature definitions come from 3rd party feature file:\n-        <repository>mvn:org.apache.camel.karaf/apache-camel/2.24.2/xml/features</repository>\n+  <!--START Camel Features-->\n+  <!-- DO NOT EDIT\n+      All feature definitions come from 3rd party feature file:\n+      <repository>mvn:org.apache.camel.karaf/apache-camel/3.4.4/xml/features</repository>\n \n-        All version properties for these Camel features are defined in the platform-app pom.\n+      All version properties for these Camel features are defined in the platform-app pom.", "originalCommit": "f12c5e451269348d6a6f6d2b108ce68b17908ba7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYwMDc0MQ==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514600741", "bodyText": "\ud83d\udc4d I reviewed the diff with https://github.com/apache/camel-karaf/blob/camel-karaf-3.4.4/pom.xml and https://github.com/apache/camel/blob/camel-3.4.4/camel-dependencies/pom.xml. There are a few versions that are upgraded from what camel uses, but there are no older versions from what camel is using. I also confirmed that the remaining camel version properties are all used.", "author": "emmberk", "createdAt": "2020-10-29T22:20:31Z", "path": "features/pom.xml", "diffHunk": "@@ -39,60 +39,28 @@\n     </modules>\n \n     <properties>\n-        <!--START versions for camel features in platform-app features\n-        Copied from apache-camel-2.19.4-src/parent/pom.xml\n+        <!-- START versions for camel features\n+        Copied from org.apache.camel:camel-parent:pom:${camel.version}", "originalCommit": "f12c5e451269348d6a6f6d2b108ce68b17908ba7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYwMDk1NA==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r514600954", "bodyText": "\ud83d\udc4d I reviewed the diff with https://github.com/apache/camel-karaf/blob/camel-karaf-3.4.4/platforms/karaf/features/src/main/resources/features.xml. Everything is exactly the same besides what's mentioned in the DDF changes made list.", "author": "emmberk", "createdAt": "2020-10-29T22:21:04Z", "path": "features/camel/src/main/feature/feature.xml", "diffHunk": "@@ -16,285 +16,434 @@\n           xmlns=\"http://karaf.apache.org/xmlns/features/v1.3.0\"\n           xsi:schemaLocation=\"http://karaf.apache.org/xmlns/features/v1.3.0 http://karaf.apache.org/xmlns/features/v1.3.0\">\n \n-    <repository>mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features</repository>\n-    <repository>mvn:ddf.features/cxf/${project.version}/xml/features</repository>\n-    <repository>mvn:org.apache.karaf.features/enterprise/${karaf.version}/xml/features</repository>\n+  <repository>mvn:ddf.features/cxf/${project.version}/xml/features</repository>\n \n-    <!--START Camel Features-->\n-    <!-- DO NOT EDIT\n-        All feature definitions come from 3rd party feature file:\n-        <repository>mvn:org.apache.camel.karaf/apache-camel/2.24.2/xml/features</repository>\n+  <!--START Camel Features-->\n+  <!-- DO NOT EDIT\n+      All feature definitions come from 3rd party feature file:\n+      <repository>mvn:org.apache.camel.karaf/apache-camel/3.4.4/xml/features</repository>", "originalCommit": "f12c5e451269348d6a6f6d2b108ce68b17908ba7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8a010c6cd1bef37efd3872e4eb9f01c619c5d275", "url": "https://github.com/codice/ddf/commit/8a010c6cd1bef37efd3872e4eb9f01c619c5d275", "message": "Address comments", "committedDate": "2020-10-29T23:24:23Z", "type": "forcePushed"}, {"oid": "a05da2b56ef2ff32c72588ded3bd136c0656b97b", "url": "https://github.com/codice/ddf/commit/a05da2b56ef2ff32c72588ded3bd136c0656b97b", "message": "Upgrade to Camel 3.4.4", "committedDate": "2020-11-04T16:49:31Z", "type": "commit"}, {"oid": "308cc6f7fe90e14fc0327a2ecdda4161eacdd136", "url": "https://github.com/codice/ddf/commit/308cc6f7fe90e14fc0327a2ecdda4161eacdd136", "message": "Upgrade to Jakarta Mail", "committedDate": "2020-11-04T16:49:31Z", "type": "commit"}, {"oid": "6258d87b221de08c1fb0666248c9044ffa8c71a4", "url": "https://github.com/codice/ddf/commit/6258d87b221de08c1fb0666248c9044ffa8c71a4", "message": "Fix compilation errors", "committedDate": "2020-11-04T16:49:31Z", "type": "commit"}, {"oid": "0c25f63b48e4c92d2ef918e8d73412ad0ffe5d8a", "url": "https://github.com/codice/ddf/commit/0c25f63b48e4c92d2ef918e8d73412ad0ffe5d8a", "message": "Remove platform-http-proxy module and update proxy-camel-route to httpclient 4", "committedDate": "2020-11-04T16:49:31Z", "type": "commit"}, {"oid": "6bfd70e2334d48b65dcebd3dc46811351e644bfb", "url": "https://github.com/codice/ddf/commit/6bfd70e2334d48b65dcebd3dc46811351e644bfb", "message": "Fix tests", "committedDate": "2020-11-04T16:49:31Z", "type": "commit"}, {"oid": "ca8d84aae14aaa090d6d5997057c1d6e4c106257", "url": "https://github.com/codice/ddf/commit/ca8d84aae14aaa090d6d5997057c1d6e4c106257", "message": "Remove unused Camel features", "committedDate": "2020-11-04T16:49:32Z", "type": "commit"}, {"oid": "9c7213ab940bf40d5019cabd761a25da4ba973e3", "url": "https://github.com/codice/ddf/commit/9c7213ab940bf40d5019cabd761a25da4ba973e3", "message": "Address comments", "committedDate": "2020-11-04T16:49:32Z", "type": "commit"}, {"oid": "148d28e0c7ed8b327020d9e555d8b7b9eb166d34", "url": "https://github.com/codice/ddf/commit/148d28e0c7ed8b327020d9e555d8b7b9eb166d34", "message": "Fix permissions", "committedDate": "2020-11-04T16:49:32Z", "type": "commit"}, {"oid": "dff45fdb05b87a5bb56cdf7905e7e8d19d78c582", "url": "https://github.com/codice/ddf/commit/dff45fdb05b87a5bb56cdf7905e7e8d19d78c582", "message": "Switch to Camel 3.4.0 due to bug in 3.4.4", "committedDate": "2020-11-04T16:49:49Z", "type": "commit"}, {"oid": "dff45fdb05b87a5bb56cdf7905e7e8d19d78c582", "url": "https://github.com/codice/ddf/commit/dff45fdb05b87a5bb56cdf7905e7e8d19d78c582", "message": "Switch to Camel 3.4.0 due to bug in 3.4.4", "committedDate": "2020-11-04T16:49:49Z", "type": "forcePushed"}, {"oid": "e47b0a4316dfa74ddd13301ed9fc60359fc21d3f", "url": "https://github.com/codice/ddf/commit/e47b0a4316dfa74ddd13301ed9fc60359fc21d3f", "message": "Fix broken routes", "committedDate": "2020-11-10T17:37:35Z", "type": "commit"}, {"oid": "7f4d155a77ccaed8c0ad22a809b5a188b7a50ced", "url": "https://github.com/codice/ddf/commit/7f4d155a77ccaed8c0ad22a809b5a188b7a50ced", "message": "Fix WFS query errors", "committedDate": "2020-11-10T17:46:22Z", "type": "commit"}, {"oid": "7f4d155a77ccaed8c0ad22a809b5a188b7a50ced", "url": "https://github.com/codice/ddf/commit/7f4d155a77ccaed8c0ad22a809b5a188b7a50ced", "message": "Fix WFS query errors", "committedDate": "2020-11-10T17:46:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4OTI5OA==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r520789298", "bodyText": "I suppose the body was already in memory, but is there anyway that this could blow up memory, thus creating a possible DNS attack?", "author": "glenhein", "createdAt": "2020-11-10T18:45:43Z", "path": "catalog/spatial/wfs/spatial-wfs-featuretransformer/src/main/java/org/codice/ddf/spatial/ogc/wfs/featuretransformer/impl/WfsRouteBuilder.java", "diffHunk": "@@ -33,22 +33,33 @@\n \n   @Override\n   public void configure() {\n+    /*\n+     * This route is designed to be called via a Camel proxy using the FeatureTransformationService\n+     * interface. Arguments are bound to the message body as an array, i.e.\n+     *\n+     * method: apply(InputStream featureCollection, WfsMetadata metadata)\n+     * message body: new Object[] { featureCollection, metadata }\n+     */\n     from(FEATURECOLLECTION_ENDPOINT_URL)\n         .id(\"TransformFeatureCollectionRoute\")\n+        .streamCaching()\n         .setHeader(\"metadata\", simple(\"${body[1]}\"))\n-        .setHeader(\"xml\", simple(\"${body[0]}\"))\n+        // Stream caching doesn't work when the input stream is located in a header. Copying the\n+        // stream to the body first is a workaround. It causes the stream to be cached, then we can\n+        // copy that cache to the header so we can access it later.\n+        .setBody(simple(\"${body[0]}\"))", "originalCommit": "7f4d155a77ccaed8c0ad22a809b5a188b7a50ced", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5Njc1MQ==", "url": "https://github.com/codice/ddf/pull/6401#discussion_r520796751", "bodyText": "If the stream is too large, Camel won't load it into memory. From the docs [1]:\n\nlarge stream messages (over 64 KB in Camel 2.11 or older, and 128 KB from Camel 2.12 onwards) will be cached in a temporary file instead\u2009\u2014\u2009Camel itself will handle deleting the temporary file once the cached stream is no longer necessary.\n\n[1] https://camel.apache.org/manual/latest/stream-caching.html", "author": "SmithJosh", "createdAt": "2020-11-10T18:53:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4OTI5OA=="}], "type": "inlineReview"}]}