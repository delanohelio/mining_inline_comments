{"pr_number": 6361, "pr_title": "DDF-6360 Upgrade to CXF 3.4.0", "pr_createdAt": "2020-09-30T20:37:49Z", "pr_url": "https://github.com/codice/ddf/pull/6361", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4ODY3Mg==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497788672", "bodyText": "\u270f\ufe0f Do these FIXMEs need to be addressed?", "author": "emmberk", "createdAt": "2020-09-30T20:43:57Z", "path": "catalog/spatial/wfs/1.1.0/spatial-wfs-v1_1_0-converter/pom.xml", "diffHunk": "@@ -101,6 +94,7 @@\n             <artifactId>spatial-wfs-v1_1_0-common</artifactId>\n             <version>${project.version}</version>\n             <exclusions>\n+                <!-- FIXME: There's no cxf-api artifact anymore -->", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwODk2Mw==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497808963", "bodyText": "I removed the exclusions. Since the artifact doesn't exist the exclusions didn't do anything and it still worked", "author": "SmithJosh", "createdAt": "2020-09-30T21:23:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4ODY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MjI0OQ==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497792249", "bodyText": "\u270f\ufe0f Add @Nullable annotation", "author": "emmberk", "createdAt": "2020-09-30T20:50:40Z", "path": "platform/security/pep/security-pep-interceptor/src/main/java/ddf/security/pep/interceptor/SecurityAssertionStore.java", "diffHunk": "@@ -116,12 +117,16 @@ public static SecurityAssertion getSecurityAssertion(Message message) {\n   }\n \n   /**\n-   * Return the TokenStore associated with this message.\n+   * Return the TokenStore associated with this message\n    *\n    * @param message\n-   * @return TokenStore\n+   * @return the TokenStore, or null if it could not be retrieved\n    */\n   public static TokenStore getTokenStore(Message message) {", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4NjM1MQ==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497786351", "bodyText": "It's a pain to maintain two environments. Didn't think it was in-scope for this PR, but it made me wonder why we don't run these on top of the kernel", "author": "SmithJosh", "createdAt": "2020-09-30T20:39:17Z", "path": "catalog/rest/catalog-rest-endpoint/src/test/java/org/codice/ddf/endpoints/rest/it/RestEndpointIT.java", "diffHunk": "@@ -229,17 +224,22 @@ protected FeatureOption getFeatureOptions() {\n \n       @Override\n       public Option get() {\n+        // Add activation and annotation bundles and expose them via the system bundle. This is\n+        // the same thing that the DDF kernel does, but this test runs on the base Karaf distro, so\n+        // we don't have those changes", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4NzQ4Ng==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497787486", "bodyText": "There was no change to the DDF JAXB schemas, but for some reason after upgrading JAXB, it started failing to unmarshall this request. I looked at the schema and the namespace here should be csw, so I think JAXB should have been failing on this before as well.", "author": "SmithJosh", "createdAt": "2020-09-30T20:41:34Z", "path": "catalog/spatial/csw/spatial-csw-endpoint/src/test/java/org/codice/ddf/spatial/ogc/csw/catalog/endpoint/reader/TransactionMessageBodyReaderTest.java", "diffHunk": "@@ -107,9 +107,9 @@\n           + \"   xmlns:ogc=\\\"http://www.opengis.net/ogc\\\">\\n\"\n           + \"  <csw:Delete typeName=\\\"csw:Record\\\" handle=\\\"something\\\">\\n\"\n           + \"    <csw:Constraint version=\\\"2.0.0\\\">\\n\"\n-          + \"      <ogc:CqlText>\\n\"\n+          + \"      <csw:CqlText>\\n\"", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4OTg0NQ==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497789845", "bodyText": "No need for these anymore. JAXB gets installed as a bundle rather than exposing them via the system bundle", "author": "SmithJosh", "createdAt": "2020-09-30T20:46:20Z", "path": "distribution/ddf-common/src/main/resources-filtered/etc/custom.properties", "diffHunk": "@@ -100,12 +97,6 @@ org.osgi.framework.system.packages.extra = \\\n     org.xml.sax;version=2.0.2, \\\n     org.xml.sax.ext;uses:=\\\"org.xml.sax,org.xml.sax.helpers\\\";version=2.0.2, \\\n     org.xml.sax.helpers;uses:=org.xml.sax;version=2.0.2, \\\n-    javax.xml.bind;uses:=\\\"javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax\\\";version=2.3.0, \\\n-    javax.xml.bind.annotation;uses:=\\\"javax.xml.bind,javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom\\\";version=2.3.0, \\\n-    javax.xml.bind.annotation.adapters;version=2.3.0, \\\n-    javax.xml.bind.attachment;uses:=javax.activation;version=2.3.0, \\\n-    javax.xml.bind.helpers;uses:=\\\"javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax\\\";version=2.3.0, \\\n-    javax.xml.bind.util;uses:=\\\"javax.xml.bind,javax.xml.transform.sax\\\";version=2.3.0, \\", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MjQwNw==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497792407", "bodyText": "Getting the newer JAXB implementation to be used was a pain. servicemix jaxb v2.2 preferred user-installed jaxb implementations over the internal JRE implementation regardless of start order. This is not the case in v2.3; the implementation must be installed before the api [1][2] \ud83e\udd37\u200d\u2642\ufe0f\nThe problem is, Karaf uses the api for its feature support, so it and the impl need to be installed first thing. There were two options:\n\nInstall via startup.properties\nDrop both bundles in the lib directory and expose them via the system bundle.\n\nI picked the first option\nReferences:\n[1] https://github.com/apache/servicemix-specs/blob/master/jaxb-api-2.2/src/main/java/javax/xml/bind/ContextFinder.java#L468-L480\n[2] https://issues.apache.org/jira/browse/SM-4322?focusedCommentId=17058493&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17058493", "author": "SmithJosh", "createdAt": "2020-09-30T20:50:56Z", "path": "distribution/ddf-common/src/main/resources-filtered/etc/startup.properties", "diffHunk": "@@ -17,4 +17,6 @@ mvn\\:ddf.platform.osgi/platform-osgi-internal-api/${project.version}=9\n mvn\\:ddf.platform.osgi/platform-osgi-configadmin/${project.version}=10\n mvn\\:org.apache.felix/org.apache.felix.configadmin/${felix.configadmin.version}=11\n mvn\\:org.apache.felix/org.apache.felix.fileinstall/${felix.fileinstall.version}=12\n+mvn\\:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.3/2.3_3=13\n+mvn\\:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-runtime/2.3.2_2=14", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MzQ3MA==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497793470", "bodyText": "\u2757 TODO: Need to substitute these versions", "author": "SmithJosh", "createdAt": "2020-09-30T20:52:57Z", "path": "distribution/ddf-common/src/main/resources/common-bin.xml", "diffHunk": "@@ -381,5 +381,25 @@\n                 </include>\n             </includes>\n         </dependencySet>\n+        <dependencySet>\n+            <outputDirectory>\n+                system/org/apache/servicemix/specs/org.apache.servicemix.specs.jaxb-api-2.3/2.3_3\n+            </outputDirectory>\n+            <includes>\n+                <include>\n+                    org.apache.servicemix.specs:org.apache.servicemix.specs.jaxb-api-2.3:jar:2.3_3\n+                </include>\n+            </includes>\n+        </dependencySet>\n+        <dependencySet>\n+            <outputDirectory>\n+                system/org/apache/servicemix/bundles/org.apache.servicemix.bundles.jaxb-runtime/2.3.2_2\n+            </outputDirectory>\n+            <includes>\n+                <include>\n+                    org.apache.servicemix.bundles:org.apache.servicemix.bundles.jaxb-runtime:jar:2.3.2_2", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MzgyOQ==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497793829", "bodyText": "Don't want to use the JRE JAXB implementation", "author": "SmithJosh", "createdAt": "2020-09-30T20:53:33Z", "path": "distribution/ddf-common/src/main/resources/etc/jre.properties", "diffHunk": "@@ -422,12 +422,12 @@ jre-1.8= \\\n  javax.tools, \\\n  javax.transaction; javax.transaction.xa; partial=true; mandatory:=partial, \\\n  javax.xml, \\\n- javax.xml.bind;version=\"2.2.8\", \\\n- javax.xml.bind.annotation;version=\"2.2.8\", \\\n- javax.xml.bind.annotation.adapters;version=\"2.2.8\", \\\n- javax.xml.bind.attachment;version=\"2.2.8\", \\\n- javax.xml.bind.helpers;version=\"2.2.8\", \\\n- javax.xml.bind.util;version=\"2.2.8\", \\\n+# javax.xml.bind;version=\"2.3.0\", \\\n+# javax.xml.bind.annotation;version=\"2.3.0\", \\\n+# javax.xml.bind.annotation.adapters;version=\"2.3.0\", \\\n+# javax.xml.bind.attachment;version=\"2.3.0\", \\\n+# javax.xml.bind.helpers;version=\"2.3.0\", \\\n+# javax.xml.bind.util;version=\"2.3.0\", \\", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NzM5MQ==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497797391", "bodyText": "After previous discussions about removing this, I ended up going ahead and doing it. The reason was that the Servicemix OpenSAML bundle now has no version constraint on the Guava version is uses. See: https://github.com/apache/servicemix-bundles/blob/master/opensaml-3.4.5/pom.xml#L63\nThis means it will pick up the Guava version that DDF uses automatically; we don't need to force the version here. Note, though, that we have to make sure that there is only one Guava version available or there will be uses constraint violations.\nI'm open to keeping this bundle if we think that's a better option. But these changes work just fine without it.\nTagging @Lambeaux", "author": "SmithJosh", "createdAt": "2020-09-30T21:00:19Z", "path": "libs/bundles/libs-bundles-opensaml/pom.xml", "diffHunk": "@@ -1,223 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxODMzNw==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497818337", "bodyText": "I vote we remove it.", "author": "stustison", "createdAt": "2020-09-30T21:43:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NzM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU1MTU0NA==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r498551544", "bodyText": "(\u2757 ) If only one Guava version can be available, then this may break some Camel features. Check out the Camel features file:\n<feature name=\"camel-protobuf\" version=\"${camel.version}\" start-level=\"50\">\n        <feature version=\"${camel.version}\">camel-core</feature>\n        <bundle dependency=\"true\">mvn:com.google.protobuf/protobuf-java/${protobuf-version}</bundle>\n        <bundle dependency=\"true\">mvn:com.google.protobuf/protobuf-java-util/${protobuf-version}</bundle>\n        <bundle dependency=\"true\">mvn:commons-io/commons-io/${commons-io-version}</bundle>\n        <bundle dependency=\"true\">mvn:com.google.guava/guava/${camel.guava.version}</bundle>\n        <bundle dependency=\"true\">mvn:com.google.code.gson/gson/${gson.version}</bundle>\n        <bundle>mvn:org.apache.camel/camel-protobuf/${camel.version}</bundle>\n    </feature>\n\nIt appears the Camel version of Guava is lower than DDF's version of Guava.\n<camel.guava.version>19.0</camel.guava.version>", "author": "Lambeaux", "createdAt": "2020-10-01T22:57:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NzM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NTIyNQ==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r499755225", "bodyText": "Turns out this is actually a lot more nuanced than I was thinking. Interestingly, installing the feature you linked also causes uses constraint violations on 2.26.0. It's not just these changes - DDF cannot have two Gauva versions installed at the same time. Here's a sample of the constraint violations you see if it does:\n2020-10-05T08:56:24,035 | DEBUG | tures-3-thread-1 | ResolverImpl                     | ternal.resolver.Slf4jResolverLog   45 | 17 - org.apache.karaf.features.core - 4.2.9 | Candidate permutation failed due to a conflict between imports; will try another if possible. (Uses constraint violation. Unable to resolve resource solr-factory-impl [solr-factory-impl/2.26.0] because it is exposed to package 'com.google.common.collect' from resources com.google.guava [com.google.guava/25.1.0.jre] and com.google.guava [com.google.guava/25.1.0.jre] via two dependency chains.\n\nChain 1:\n  solr-factory-impl [solr-factory-impl/2.26.0]\n    import: (&(osgi.wiring.package=com.google.common.collect)(version>=25.1.0)(!(version>=26.0.0)))\n     |\n    export: osgi.wiring.package: com.google.common.collect\n  com.google.guava [com.google.guava/25.1.0.jre]\n\nChain 2:\n  solr-factory-impl [solr-factory-impl/2.26.0]\n    import: (&(osgi.wiring.package=org.codice.ddf.platform.util)(version>=2.26.0)(!(version>=3.0.0)))\n     |\n    export: osgi.wiring.package=org.codice.ddf.platform.util; uses:=com.google.common.io\n  platform-util [platform-util/2.26.0]\n    import: (&(osgi.wiring.package=com.google.common.io)(version>=25.1.0)(!(version>=26.0.0)))\n     |\n    export: osgi.wiring.package: com.google.common.io; uses:=com.google.common.collect\n    export: osgi.wiring.package=com.google.common.collect\n  com.google.guava [com.google.guava/25.1.0.jre])\n\nA couple notes:\n\nThis isn't actually an error, just a Karaf debug message. I found that interesting - there are non-fatal uses constraint violations. However, while it doesn't break anything Karaf takes significantly longer to resolve bundle wiring. On my machine, a profile:install standard took about 6 minutes compared to 1 minute normally.\nThe error message here is a bit confusing since it references 25.1.0.jre for both dependency chains. It's really an issue with the uses constrains being satisfied by both versions of Guava present.\nPart of the problem is DDFs own leaky abstractions: platform-util exposes Guava in its API. Meaning anything that uses Guava and platform-util will have uses constraints violations if two Guava versions are present.\n\nThe only reason DDF 2.26.0 doesn't have these issues by default is that it doesn't install multiple Guava versions. That surprised me because the CXF and DDF versions differ. I dug into it a bit and it's because CXF uses the dependency flag in its feature descriptor. From the Karaf mailing list, here's a description of the dependency flag (http://karaf.922171.n3.nabble.com/features-xml-dependency-true-tp3286359p3288842.html):\n\nThe role of the dependency attribute is to mark that a bundle is a dependency. If a dependency is already satisfied (an existing bundle already exports the same packages/version) then it doesn't get installed. This behavior happens if the declared feature resolver is installed (e.g. obr is installed).\n\nThe wrapped OpenSAML bundle imports Guava packages with the version matching the DDF Guava version. So when when Karaf installs OpenSAML, it sees that the imports are already satisfied and so doesn't try to install the CXF Guava version (note, CXF itself doesn't import Guava. It only pulls it in to satisfy OpenSAML). Now that we're using the OpenSAML bundle without a version constraint, it appears Karaf doesn't think the imports are already satisfied and so installs the new version.\nTo summarize: with these changes, the only difference from master is that the CXF and DDF Guava versions must match to prevent uses constraint violations. With or without these changes, the presence of multiple Guava versions is problematic and will cause non-fatal uses constraint violations and significantly longer installation times.", "author": "SmithJosh", "createdAt": "2020-10-05T17:21:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NzM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg1NzExMg==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r499857112", "bodyText": "That's some quality background and investigation. Even though we can get the container to start I still believe that 6 minutes to start is just as bad as a borked container that doesn't work at all because you have to wait far too long (synchronously) to learn if you've succeeded or failed. So for future readers of this - know that wiring issues like the above are basically fatal even if the container is capable of recovering.\nTo add to the above \u261d\ufe0f the OpenSAML bundle needed to be wrapped because, as of October of last year, no new versions existed without the transitive version constraint. As @SmithJosh pointed out, this has recently been resolved with several new artifacts released from servicemix.\nAdditionally, between the time I upgraded Guava and this change, the class path complexity has increased. Platform-util is now a bundle which itself exposes Guava.\nGuava upgrade: #5379\nPlatform util: #5776\nThis means that, while the Camel feature may have worked fine last year, it no longer does. Likely because of a new class path collision with platform util's Guava and the code that Camel needs.\nGiven the wrapper is no longer serving any purpose I'm +1 to remove it now, as well. \ud83d\udc4d", "author": "Lambeaux", "createdAt": "2020-10-05T20:35:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NzM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2OTgwMw==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r499869803", "bodyText": "Thanks @Lambeaux. Completely agree with this:\n\nEven though we can get the container to start I still believe that 6 minutes to start is just as bad as a borked container that doesn't work at all because you have to wait far too long (synchronously) to learn if you've succeeded or failed\n\nI created #6365 to fix it", "author": "SmithJosh", "createdAt": "2020-10-05T21:00:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NzM5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NzcyMQ==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497797721", "bodyText": "bnd figures out these imports just fine", "author": "SmithJosh", "createdAt": "2020-09-30T21:01:00Z", "path": "platform/security/core/security-core-impl/pom.xml", "diffHunk": "@@ -252,8 +232,6 @@\n                             !org.mockito*,\n                             !org.hamcrest*,\n                             !org.junit*,\n-                            org.opensaml.xmlsec.signature.support.provider,\n-                            org.opensaml.*;version=\"${opensaml.version}\",", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMDcxNQ==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497800715", "bodyText": "The only code change for this PR \ud83c\udf89\nIf this is null, we just return a new SecurityAssertionSaml instance. I'm not sure if that's what we actually want, as the code looks like we were not expecting the token store to be null. Would appreciate another set of eyes.\nhttps://github.com/codice/ddf/blob/master/platform/security/pep/security-pep-interceptor/src/main/java/ddf/security/pep/interceptor/SecurityAssertionStore.java#L115", "author": "SmithJosh", "createdAt": "2020-09-30T21:06:54Z", "path": "platform/security/pep/security-pep-interceptor/src/main/java/ddf/security/pep/interceptor/SecurityAssertionStore.java", "diffHunk": "@@ -116,12 +117,16 @@ public static SecurityAssertion getSecurityAssertion(Message message) {\n   }\n \n   /**\n-   * Return the TokenStore associated with this message.\n+   * Return the TokenStore associated with this message\n    *\n    * @param message\n-   * @return TokenStore\n+   * @return the TokenStore, or null if it could not be retrieved\n    */\n   public static TokenStore getTokenStore(Message message) {\n-    return TokenStoreUtils.getTokenStore(message);\n+    try {\n+      return TokenStoreUtils.getTokenStore(message);\n+    } catch (TokenStoreException e) {\n+      return null;\n+    }", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyMjg2Ng==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497822866", "bodyText": "It will work correctly the way it is and the PEP still fails closed as long as the token for the assertion is null, which it will be if you just create an empty SAML assertion. However, it might be more correct if we just return an exception if the token store is null or in the case where we might flow down to returning that empty SecurityAssertionSaml instance. I think all that empty instance does is trigger the error condition anyways, so we may as well just jump there. That way we can avoid someone changing the PEP in the future and this possibly failing open at some point.", "author": "stustison", "createdAt": "2020-09-30T21:54:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMDcxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg3NTIyMg==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497875222", "bodyText": "Ok thanks for confirming. I'm inclined to keep it as-is in that case since the PEP still denies access. I checked and the PEP has tests for null tokens and null assertions so that should raise some flags if it starts failing open.", "author": "SmithJosh", "createdAt": "2020-10-01T00:25:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMDcxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxNjc4NQ==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497816785", "bodyText": "platform-util is a bundle so it shouldn't be embedded. I must have missed this when I removed it from all the poms or maybe it was added after I changed things.", "author": "stustison", "createdAt": "2020-09-30T21:40:43Z", "path": "catalog/transformer/catalog-transformer-xlsx/pom.xml", "diffHunk": "@@ -84,8 +75,7 @@\n                     <instructions>\n                         <Embed-Dependency>\n                             catalog-core-api-impl,\n-                            platform-util,\n-                            security-rest-clientapi\n+                            platform-util", "originalCommit": "d6f38da494ab572bd102df1b66ad36cbc4aaf0cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg3MTc2Nw==", "url": "https://github.com/codice/ddf/pull/6361#discussion_r497871767", "bodyText": "ok I'll remove it", "author": "SmithJosh", "createdAt": "2020-10-01T00:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxNjc4NQ=="}], "type": "inlineReview"}, {"oid": "050b4db58a49c37de2defac8d7fc6a4df0ac1513", "url": "https://github.com/codice/ddf/commit/050b4db58a49c37de2defac8d7fc6a4df0ac1513", "message": "Address comments", "committedDate": "2020-10-01T18:08:33Z", "type": "forcePushed"}, {"oid": "c4c7b663cf56bd0f2845775b2dae17aadf467da0", "url": "https://github.com/codice/ddf/commit/c4c7b663cf56bd0f2845775b2dae17aadf467da0", "message": "Address comments", "committedDate": "2020-10-01T18:11:29Z", "type": "forcePushed"}, {"oid": "ed46d80e515b3708621dce285ebe4dd124ad2e17", "url": "https://github.com/codice/ddf/commit/ed46d80e515b3708621dce285ebe4dd124ad2e17", "message": "DDF-6360 Remove wrapped OpenSAML library", "committedDate": "2020-10-06T00:29:18Z", "type": "commit"}, {"oid": "605be10a76cb17b73cb7a51286b6509210de3e3b", "url": "https://github.com/codice/ddf/commit/605be10a76cb17b73cb7a51286b6509210de3e3b", "message": "DDF-6360 Upgrade CXF and friends", "committedDate": "2020-10-06T00:29:19Z", "type": "commit"}, {"oid": "4fb6307e9c549b025c77213afe59147bb4cfab70", "url": "https://github.com/codice/ddf/commit/4fb6307e9c549b025c77213afe59147bb4cfab70", "message": "DDF-6360 Remove unused dependencies", "committedDate": "2020-10-06T00:29:19Z", "type": "commit"}, {"oid": "235e84fb734cd1af2d9d78d4442a6ab6e2e237b8", "url": "https://github.com/codice/ddf/commit/235e84fb734cd1af2d9d78d4442a6ab6e2e237b8", "message": "DDF-6360 Switch to Jakarta JAXB dependencies", "committedDate": "2020-10-06T00:29:19Z", "type": "commit"}, {"oid": "151d25620557a11974d2c587ae7919a8fd598435", "url": "https://github.com/codice/ddf/commit/151d25620557a11974d2c587ae7919a8fd598435", "message": "DDF-6360 Switch to Jakarta Annotations", "committedDate": "2020-10-06T00:29:19Z", "type": "commit"}, {"oid": "9009f967ad7346ede3764ab3645e6701ab6a58f5", "url": "https://github.com/codice/ddf/commit/9009f967ad7346ede3764ab3645e6701ab6a58f5", "message": "DDF-6360 Switch to Jakarta Activation", "committedDate": "2020-10-06T00:29:19Z", "type": "commit"}, {"oid": "5830a1c72240f23179fc1fed9a3a03ad16b4a111", "url": "https://github.com/codice/ddf/commit/5830a1c72240f23179fc1fed9a3a03ad16b4a111", "message": "DDF-6360 Add javax.servlet-api to dependencyManagement in root pom", "committedDate": "2020-10-06T00:29:19Z", "type": "commit"}, {"oid": "f8e859f36622c2ecff550100c9b3353000fb5604", "url": "https://github.com/codice/ddf/commit/f8e859f36622c2ecff550100c9b3353000fb5604", "message": "DDF-6360 Add Guava to dependencyManagment in root pom and upgrade to JSR305 3.0.2", "committedDate": "2020-10-06T00:30:03Z", "type": "commit"}, {"oid": "95c2f412077e7bacde24120547ca556175b38b6c", "url": "https://github.com/codice/ddf/commit/95c2f412077e7bacde24120547ca556175b38b6c", "message": "DDF-6360 Fix maven-enforcer-plugin NPE", "committedDate": "2020-10-06T00:30:05Z", "type": "commit"}, {"oid": "fcea1e253084db3e13e0dfa927de55b1f83d199d", "url": "https://github.com/codice/ddf/commit/fcea1e253084db3e13e0dfa927de55b1f83d199d", "message": "DDF-6360 Fix rest endpoint itest", "committedDate": "2020-10-06T00:30:05Z", "type": "commit"}, {"oid": "5a456f847295354f17909b35a7d14833240067ef", "url": "https://github.com/codice/ddf/commit/5a456f847295354f17909b35a7d14833240067ef", "message": "DDF-6360 Fix Invalid CSW request", "committedDate": "2020-10-06T00:30:05Z", "type": "commit"}, {"oid": "08c5c79788fb9f616bfa5ad72fa6a0c9d8b698f5", "url": "https://github.com/codice/ddf/commit/08c5c79788fb9f616bfa5ad72fa6a0c9d8b698f5", "message": "DDF-6360 Fix broken CSW endpoint", "committedDate": "2020-10-06T00:30:05Z", "type": "commit"}, {"oid": "594fa47142c0772306c2f7d8e92be24413634084", "url": "https://github.com/codice/ddf/commit/594fa47142c0772306c2f7d8e92be24413634084", "message": "DDF-6360 Install JAXB via startup.properties", "committedDate": "2020-10-06T00:30:05Z", "type": "commit"}, {"oid": "28ed81963b226b1061e26df60b91c2931e6cb57f", "url": "https://github.com/codice/ddf/commit/28ed81963b226b1061e26df60b91c2931e6cb57f", "message": "DDF-6360 Match Guava versions to prevent uses constraint violations", "committedDate": "2020-10-06T00:30:05Z", "type": "commit"}, {"oid": "d18128fc9c5df2666c6ced5a9caf24009c68dbd7", "url": "https://github.com/codice/ddf/commit/d18128fc9c5df2666c6ced5a9caf24009c68dbd7", "message": "Address comments", "committedDate": "2020-10-06T00:30:05Z", "type": "commit"}, {"oid": "6ca9cba5df77127c4e9b35e9ed266a494268504d", "url": "https://github.com/codice/ddf/commit/6ca9cba5df77127c4e9b35e9ed266a494268504d", "message": "Fix rest endpoint again", "committedDate": "2020-10-06T00:30:05Z", "type": "commit"}, {"oid": "0af5b6b332021720cfb15b7f5b580a73f064d381", "url": "https://github.com/codice/ddf/commit/0af5b6b332021720cfb15b7f5b580a73f064d381", "message": "Fix invalid CSW requests", "committedDate": "2020-10-06T00:30:05Z", "type": "commit"}, {"oid": "34f7238e60857c6099944622084023b5ff9858b4", "url": "https://github.com/codice/ddf/commit/34f7238e60857c6099944622084023b5ff9858b4", "message": "Fix catalog itests", "committedDate": "2020-10-06T00:30:06Z", "type": "commit"}, {"oid": "34f7238e60857c6099944622084023b5ff9858b4", "url": "https://github.com/codice/ddf/commit/34f7238e60857c6099944622084023b5ff9858b4", "message": "Fix catalog itests", "committedDate": "2020-10-06T00:30:06Z", "type": "forcePushed"}, {"oid": "73d032050b08fedc65993cadea931f67de610f4c", "url": "https://github.com/codice/ddf/commit/73d032050b08fedc65993cadea931f67de610f4c", "message": "Take 3 for the rest endpoint itest", "committedDate": "2020-10-06T00:37:14Z", "type": "commit"}]}