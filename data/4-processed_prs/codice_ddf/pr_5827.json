{"pr_number": 5827, "pr_title": "[2.19.x] Disable attributes that are not supported by selected sources", "pr_createdAt": "2020-02-12T23:04:09Z", "pr_url": "https://github.com/codice/ddf/pull/5827", "timeline": [{"oid": "e35b79155f2293ac578c30002d2de1e71236ad60", "url": "https://github.com/codice/ddf/commit/e35b79155f2293ac578c30002d2de1e71236ad60", "message": "5652 conflicts\n\n5652 resolve conflict markers\n\n5652 add missing settingsModel and check when other search forms are selected\n\n5652 enable all attributes when no source is selected and clean up files\n\n5652 fix comments", "committedDate": "2020-02-12T22:08:40Z", "type": "commit"}, {"oid": "79f335be0130efdc2c43ba328324c6b5061848b3", "url": "https://github.com/codice/ddf/commit/79f335be0130efdc2c43ba328324c6b5061848b3", "message": "5652 remove log", "committedDate": "2020-02-12T22:12:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0MjQxOQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379042419", "bodyText": "\u270f\ufe0f\n\n  \n    \n      \n        Suggested change", "author": "mojogitoverhere", "createdAt": "2020-02-13T18:32:10Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/filter-builder/filter-builder.view.js", "diffHunk": "@@ -97,6 +97,8 @@ module.exports = Marionette.LayoutView.extend({\n         isFormBuilder: this.options.isFormBuilder || false,\n         suggester: this.options.suggester,\n         includedAttributes: this.options.includedAttributes,\n+        settingsModel: this.options.settingsModel,\n+", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1NjY4OQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379056689", "bodyText": "\u270f\ufe0f I recommend reverting these formatting changes since nothing else was changed in this file", "author": "mojogitoverhere", "createdAt": "2020-02-13T18:59:09Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/query-settings/query-settings.view.js", "diffHunk": "@@ -158,6 +157,7 @@ module.exports = plugin(\n           model: this._srcDropdownModel,\n         })\n       )\n+", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NDM0MA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379064340", "bodyText": "I could be wrong but I think EnumInput was intended to be a generic dropdown component (plus a filter capability) - it shouldn't be aware of sources or attributes. Can we move this logic to a higher level component?", "author": "mojogitoverhere", "createdAt": "2020-02-13T19:14:41Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -13,37 +13,89 @@\n  *\n  **/\n import React, { useState } from 'react'\n+\n import Dropdown from '../../dropdown'\n-import { Menu, MenuItem } from '../../menu'\n+import { Menu, MenuItemDisabled } from '../../menu'\n import TextField from '../../text-field'\n import styled from 'styled-components'\n import { getFilteredSuggestions, inputMatchesSuggestions } from './enumHelper'\n import PropTypes from 'prop-types'\n-\n+const sources = require('../../../component/singletons/sources-instance')\n const TextWrapper = styled.div`\n   padding: ${({ theme }) => theme.minimumSpacing};\n `\n-\n const EnumMenuItem = props => (\n-  <MenuItem {...props} style={{ paddingLeft: '1.5rem' }} />\n+  <MenuItemDisabled {...props} style={{ paddingLeft: '1.5rem' }} />\n )\n \n+const UnsupportedAttribute = styled.div`", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2Mjk5NQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379162995", "bodyText": "I agree just some thoughts I have about that\n\nI'm not sure how \"high\" we want to go. The settingsModel is originally passed from the query-adanced.view.js and gets passed through several other filter components until it reaches filter.js -> filter-attribute.js -> enum-input.js\nso where ever this logic is moved to I will still need to pass something as a prop instead of settingsModel to the enum-input since that's the level that renders each attribute on the dropdown  in order to disable/ enable each attribute.", "author": "mazarag2", "createdAt": "2020-02-13T22:48:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NDM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MjY1NQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379172655", "bodyText": "Is there a level where the list of all attributes are passed down? You could filter out attributes from there. If you need to preserve all the attributes, you can instead pass down a list of enabled attributes, along with a list of disabled attributes.", "author": "samuelechu", "createdAt": "2020-02-13T23:16:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NDM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY4Njc4Nw==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379686787", "bodyText": "Pushed the logic that computes the SupportedAttributes list to filter.js so that it passes down the supportedAttributes list to enum-input.js.  enum-input now just compares wether or not the current attribute that will be rendered is in the list of supportedAttributes", "author": "mazarag2", "createdAt": "2020-02-14T23:21:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NDM0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MDgzNA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379070834", "bodyText": "Camel-cased identifiers that also start with a capital letter are typically used for class / type names\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            const isAttributeDisabled = (AllSupportedAttributes, currValue) => {\n          \n          \n            \n            const isAttributeDisabled = (allSupportedAttributes, currValue) => {", "author": "mojogitoverhere", "createdAt": "2020-02-13T19:26:41Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -13,37 +13,89 @@\n  *\n  **/\n import React, { useState } from 'react'\n+\n import Dropdown from '../../dropdown'\n-import { Menu, MenuItem } from '../../menu'\n+import { Menu, MenuItemDisabled } from '../../menu'\n import TextField from '../../text-field'\n import styled from 'styled-components'\n import { getFilteredSuggestions, inputMatchesSuggestions } from './enumHelper'\n import PropTypes from 'prop-types'\n-\n+const sources = require('../../../component/singletons/sources-instance')\n const TextWrapper = styled.div`\n   padding: ${({ theme }) => theme.minimumSpacing};\n `\n-\n const EnumMenuItem = props => (\n-  <MenuItem {...props} style={{ paddingLeft: '1.5rem' }} />\n+  <MenuItemDisabled {...props} style={{ paddingLeft: '1.5rem' }} />\n )\n \n+const UnsupportedAttribute = styled.div`\n+border-style: solid\n+border-color: red\n+`\n+\n+const isAttributeDisabled = (AllSupportedAttributes, currValue) => {", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MzE3MQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379073171", "bodyText": "This can be simplified to\nreturn allSupportedAttributes.length > 0 && allSupportedAttributes.indexOf(currValue) == -1", "author": "mojogitoverhere", "createdAt": "2020-02-13T19:30:48Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -13,37 +13,89 @@\n  *\n  **/\n import React, { useState } from 'react'\n+\n import Dropdown from '../../dropdown'\n-import { Menu, MenuItem } from '../../menu'\n+import { Menu, MenuItemDisabled } from '../../menu'\n import TextField from '../../text-field'\n import styled from 'styled-components'\n import { getFilteredSuggestions, inputMatchesSuggestions } from './enumHelper'\n import PropTypes from 'prop-types'\n-\n+const sources = require('../../../component/singletons/sources-instance')\n const TextWrapper = styled.div`\n   padding: ${({ theme }) => theme.minimumSpacing};\n `\n-\n const EnumMenuItem = props => (\n-  <MenuItem {...props} style={{ paddingLeft: '1.5rem' }} />\n+  <MenuItemDisabled {...props} style={{ paddingLeft: '1.5rem' }} />\n )\n \n+const UnsupportedAttribute = styled.div`\n+border-style: solid\n+border-color: red\n+`\n+\n+const isAttributeDisabled = (AllSupportedAttributes, currValue) => {\n+  //All attributes are supported\n+  if (AllSupportedAttributes.length == 0) {\n+    return false\n+  }\n+  //If attribute is supported  dont disable the option\n+  if (AllSupportedAttributes.indexOf(currValue) >= 0) {\n+    return false\n+  }\n+  //attribute was not found in the supported list therefore disable the option\n+  return true", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NTE2Mg==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379075162", "bodyText": "Consider chaining these calls together\nconst allSupportedAttributes = sources.models.filter(source => settingsModel.includes(source.id))\n                                             .map(sourceSelected => sourceSelected.attributes.supportedAttributes)\n                                             .flat()", "author": "mojogitoverhere", "createdAt": "2020-02-13T19:34:51Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -13,37 +13,89 @@\n  *\n  **/\n import React, { useState } from 'react'\n+\n import Dropdown from '../../dropdown'\n-import { Menu, MenuItem } from '../../menu'\n+import { Menu, MenuItemDisabled } from '../../menu'\n import TextField from '../../text-field'\n import styled from 'styled-components'\n import { getFilteredSuggestions, inputMatchesSuggestions } from './enumHelper'\n import PropTypes from 'prop-types'\n-\n+const sources = require('../../../component/singletons/sources-instance')\n const TextWrapper = styled.div`\n   padding: ${({ theme }) => theme.minimumSpacing};\n `\n-\n const EnumMenuItem = props => (\n-  <MenuItem {...props} style={{ paddingLeft: '1.5rem' }} />\n+  <MenuItemDisabled {...props} style={{ paddingLeft: '1.5rem' }} />\n )\n \n+const UnsupportedAttribute = styled.div`\n+border-style: solid\n+border-color: red\n+`\n+\n+const isAttributeDisabled = (AllSupportedAttributes, currValue) => {\n+  //All attributes are supported\n+  if (AllSupportedAttributes.length == 0) {\n+    return false\n+  }\n+  //If attribute is supported  dont disable the option\n+  if (AllSupportedAttributes.indexOf(currValue) >= 0) {\n+    return false\n+  }\n+  //attribute was not found in the supported list therefore disable the option\n+  return true\n+}\n+const isAttributeUnsupported = (currValue, settingsModel) => {\n+  // if no source is selected and settingsModel is present from parent component we want to present all attributes as available\n+  if (settingsModel != undefined && settingsModel.length == 0) {\n+        return false;\n+  } else {\n+    // if settingsModel is not available treat it as all attributes are supported\n+    if (settingsModel == undefined) {\n+      return false;\n+    }\n+\n+    let sourceModelsSelected = sources.models.filter(source =>\n+      settingsModel.includes(source.id)\n+    )\n+\n+    let AllSupportedAttributes = sourceModelsSelected.map(sourceSelected => {\n+      return sourceSelected.attributes.supportedAttributes\n+    })\n+\n+    AllSupportedAttributes = AllSupportedAttributes.flat()", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTA4Nw==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379081087", "bodyText": "In DDF, content stores are called sources. We'll have to fetch this string using the i18n service", "author": "mojogitoverhere", "createdAt": "2020-02-13T19:46:34Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -53,23 +105,49 @@ const EnumInput = ({\n           onChange={setInput}\n         />\n       </TextWrapper>\n-      <Menu value={value} onChange={onChange}>\n+      <Menu value={value} onChange={onChange} class=\"fa\">\n         {allowCustom &&\n           displayInput && (\n             <EnumMenuItem value={input}>{input} (custom)</EnumMenuItem>\n           )}\n         {filteredSuggestions.map(suggestion => {\n           return (\n-            <EnumMenuItem key={suggestion.value} value={suggestion.value}>\n+            <EnumMenuItem\n+              title={\n+                isAttributeUnsupportedHelper(settingsModel, suggestion)\n+                  ? 'Attribute is unsupported by the content store(s) selected'", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NTYwNg==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379075606", "bodyText": "Can you add a disabled prop to MenuItem instead?", "author": "samuelechu", "createdAt": "2020-02-13T19:35:48Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/menu/menu.tsx", "diffHunk": "@@ -249,5 +248,78 @@ export const MenuItem = (props: MenuItemProps) => {\n   )\n }\n \n+type MenutItemPropsDisabled = {\n+  /** A value to represent the current Item */\n+  value?: any\n+  /**\n+   * Children to display for menu item.\n+   *\n+   * @default value\n+   */\n+  children?: any\n+  /** Optional styles for root element. */\n+  style?: object\n+  onClick?: any\n+  selected?: any\n+  active?: any\n+  onHover?: any\n+  disabled?: any\n+  title?: any\n+}\n+\n+const ItemRootDisabled = styled.option<{ active: boolean; disabled: boolean }>`\n+  position: relative;\n+  padding: 0px ${({ theme }) => theme.minimumSpacing};\n+  padding-right: ${({ theme }) => theme.minimumButtonSize};\n+  box-sizing: border-box;\n+  height: ${({ theme }) => theme.minimumButtonSize};\n+  line-height: ${({ theme }) => theme.minimumButtonSize};\n+  cursor: pointer;\n+  -webkit-touch-callout: none; /* iOS Safari */\n+  -webkit-user-select: none; /* Safari */\n+  -khtml-user-select: none; /* Konqueror HTML */\n+  -moz-user-select: none; /* Firefox */\n+  -ms-user-select: none; /* Internet Explorer/Edge */\n+  user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */\n+  white-space: nowrap;\n+  overflow: hidden;\n+  text-overflow: ellipsis;\n+  ${({ theme, active, disabled }) =>\n+    active && !disabled\n+      ? `box-shadow: inset 0px 0px 0px 1px  ${theme.primaryColor};`\n+      : ''}\n+  ${({ active }) => (active ? 'font-weight: bold;' : '')}\n+  ${({ active, disabled }) => (active && !disabled ? after : '')}\n+  background: ${props =>\n+    props.active && !props.disabled ? background(props) : 'inherit'};\n+  color: ${props => (props.disabled ? 'lightgrey' : foreground)};\n+`\n+export const MenuItemDisabled = (props: MenutItemPropsDisabled) => {\n+  const {\n+    value,\n+    children,\n+    onClick,\n+    active,\n+    onHover,\n+    style,\n+    disabled,\n+    title,\n+  } = props\n+  return (\n+    <ItemRootDisabled\n+      disabled={disabled}\n+      active={active}\n+      style={style}\n+      onMouseEnter={() => onHover(value)}\n+      onFocus={() => onHover(value)}\n+      tabIndex={0}\n+      onClick={() => onClick(value)}\n+      title={title}\n+    >\n+      {children || value}\n+    </ItemRootDisabled>\n+  )\n+}\n+", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwOTQ4MQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379509481", "bodyText": "Yes I can but what I was going for here was to define a MenuItem that's disabled seperately so who ever would like to use it can do so without impacting other MenuItem's that's used in GSR.", "author": "mazarag2", "createdAt": "2020-02-14T15:59:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NTYwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NTU1OQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r384755559", "bodyText": "Disabled added to MenuItem  \ud83d\udc4d", "author": "mazarag2", "createdAt": "2020-02-26T20:47:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NTYwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NzMzNg==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379077336", "bodyText": "Why is this change needed?", "author": "samuelechu", "createdAt": "2020-02-13T19:39:09Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -53,23 +105,49 @@ const EnumInput = ({\n           onChange={setInput}\n         />\n       </TextWrapper>\n-      <Menu value={value} onChange={onChange}>\n+      <Menu value={value} onChange={onChange} class=\"fa\">", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxMDY1NQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379510655", "bodyText": "removing \ud83d\udc4d . this was originally used to in part to render icons instead of disabling the option but thats no longer the case.", "author": "mazarag2", "createdAt": "2020-02-14T16:01:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NzMzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4ODI5Mg==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379088292", "bodyText": "Can you pass down a list of sources instead of a backbone model?", "author": "samuelechu", "createdAt": "2020-02-13T20:01:07Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/query-advanced/query-advanced.view.js", "diffHunk": "@@ -135,9 +140,9 @@ module.exports = Marionette.LayoutView.extend({\n         filter,\n         isForm: this.options.isForm || false,\n         isFormBuilder: this.options.isFormBuilder || false,\n+        settingsModel: this.querySettings.currentView.model", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4OTYzMw==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379089633", "bodyText": "Why is this needed?", "author": "samuelechu", "createdAt": "2020-02-13T20:04:08Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/filter/filter.view.js", "diffHunk": "@@ -41,11 +42,12 @@ module.exports = Marionette.LayoutView.extend({\n     this.model.destroy()\n   },\n   onChange(state) {\n-    const { attribute, comparator, value } = state\n+    const { attribute, comparator, value, settingsModel } = state\n     this.model.set({\n       type: attribute,\n       comparator,\n       value: [value],\n+      settingsModel", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5MjU3MA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379092570", "bodyText": "You should probably compute the list of supported attributes outside the JSX instead", "author": "samuelechu", "createdAt": "2020-02-13T20:10:35Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -53,23 +105,49 @@ const EnumInput = ({\n           onChange={setInput}\n         />\n       </TextWrapper>\n-      <Menu value={value} onChange={onChange}>\n+      <Menu value={value} onChange={onChange} class=\"fa\">\n         {allowCustom &&\n           displayInput && (\n             <EnumMenuItem value={input}>{input} (custom)</EnumMenuItem>\n           )}\n         {filteredSuggestions.map(suggestion => {\n           return (\n-            <EnumMenuItem key={suggestion.value} value={suggestion.value}>\n+            <EnumMenuItem\n+              title={\n+                isAttributeUnsupportedHelper(settingsModel, suggestion)", "originalCommit": "79f335be0130efdc2c43ba328324c6b5061848b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3067f281b5cb4e1b61e596537c6bd89901c99ba3", "url": "https://github.com/codice/ddf/commit/3067f281b5cb4e1b61e596537c6bd89901c99ba3", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js\n\nCo-Authored-By: David Morales <david.morales@connexta.com>", "committedDate": "2020-02-14T16:07:21Z", "type": "commit"}, {"oid": "5c340537e73756a80d9a8e640ff30076029c5d63", "url": "https://github.com/codice/ddf/commit/5c340537e73756a80d9a8e640ff30076029c5d63", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/component/filter-builder/filter-builder.view.js\n\nCo-Authored-By: David Morales <david.morales@connexta.com>", "committedDate": "2020-02-14T16:29:18Z", "type": "commit"}, {"oid": "583c729d54cbd592fdc2c8e0bbd05f3a0e05b5ce", "url": "https://github.com/codice/ddf/commit/583c729d54cbd592fdc2c8e0bbd05f3a0e05b5ce", "message": "5652 pass src downn instead model", "committedDate": "2020-02-14T17:24:28Z", "type": "commit"}, {"oid": "abbd0ed71f1119d61bc270012156995c5d982054", "url": "https://github.com/codice/ddf/commit/abbd0ed71f1119d61bc270012156995c5d982054", "message": "5652 refactor to bring supportedAttribute logic to filter and send listOfAttributes as a prop", "committedDate": "2020-02-14T23:13:31Z", "type": "commit"}, {"oid": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "url": "https://github.com/codice/ddf/commit/23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "message": "5652 simplify logic for disabling attribute", "committedDate": "2020-02-14T23:30:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1MzM0OA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379853348", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    settingsModel: this.querySettings.currentView.model.attributes.src\n          \n          \n            \n                    settingsModel: this.querySettings.currentView.model.attributes.src,\n          \n      \n    \n    \n  \n\nbrought to you by /projects/ddf/ui>> yarn format -w", "author": "kentmorrissey", "createdAt": "2020-02-15T20:11:10Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/query-advanced/query-advanced.view.js", "diffHunk": "@@ -135,9 +140,9 @@ module.exports = Marionette.LayoutView.extend({\n         filter,\n         isForm: this.options.isForm || false,\n         isFormBuilder: this.options.isFormBuilder || false,\n+        settingsModel: this.querySettings.currentView.model.attributes.src", "originalCommit": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1MzQyMg==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379853422", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(settingsModel.length == 0){\n          \n          \n            \n                if (settingsModel.length == 0) {\n          \n      \n    \n    \n  \n\nbrought to you by /projects/ddf/ui>> yarn format -w", "author": "kentmorrissey", "createdAt": "2020-02-15T20:12:43Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js", "diffHunk": "@@ -82,7 +81,20 @@ class Filter extends React.Component {\n   componentDidMount() {\n     this.updateSuggestions()\n   }\n+  getListofSupportedAttributes = (settingsModel) => {\n+    // if no source is selected and settingsModel is present from parent component we want to present all attributes as available \n+    if(settingsModel.length == 0){", "originalCommit": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1Mzc5OA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379853798", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      settingsModel={this.getListofSupportedAttributes(this.props.settingsModel)}\n          \n          \n            \n                      settingsModel={this.getListOfSupportedAttributes(\n          \n          \n            \n                        this.props.settingsModel\n          \n          \n            \n                      )}\n          \n      \n    \n    \n  \n\nbrought to you by /projects/ddf/ui>> yarn format -w", "author": "kentmorrissey", "createdAt": "2020-02-15T20:20:41Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js", "diffHunk": "@@ -100,6 +112,7 @@ class Filter extends React.Component {\n           includedAttributes={this.props.includedAttributes}\n           editing={this.props.editing}\n           onChange={this.updateAttribute}\n+          settingsModel={this.getListofSupportedAttributes(this.props.settingsModel)}", "originalCommit": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NDE1MA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379854150", "bodyText": "", "author": "kentmorrissey", "createdAt": "2020-02-15T20:27:37Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -13,37 +13,51 @@\n  *\n  **/\n import React, { useState } from 'react'\n+\n import Dropdown from '../../dropdown'\n-import { Menu, MenuItem } from '../../menu'\n+import { Menu, MenuItemDisabled } from '../../menu'\n import TextField from '../../text-field'\n import styled from 'styled-components'\n import { getFilteredSuggestions, inputMatchesSuggestions } from './enumHelper'\n import PropTypes from 'prop-types'\n-\n+const sources = require('../../../component/singletons/sources-instance')", "originalCommit": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI0NTEwMA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r380245100", "bodyText": "Ooh forgot to remove  this after refactoring the source logic out of here thx \ud83d\udc4d", "author": "mazarag2", "createdAt": "2020-02-17T15:28:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NDE1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NDY5MA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379854690", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              return allSupportedAttributes.length > 0 && allSupportedAttributes.indexOf(currValue) == -1;\n          \n          \n            \n              return (\n          \n          \n            \n                allSupportedAttributes.length > 0 &&\n          \n          \n            \n                allSupportedAttributes.indexOf(currValue) == -1\n          \n          \n            \n              )\n          \n      \n    \n    \n  \n\nbrought to you by /projects/ddf/ui>> yarn format -w", "author": "kentmorrissey", "createdAt": "2020-02-15T20:37:43Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -13,37 +13,51 @@\n  *\n  **/\n import React, { useState } from 'react'\n+\n import Dropdown from '../../dropdown'\n-import { Menu, MenuItem } from '../../menu'\n+import { Menu, MenuItemDisabled } from '../../menu'\n import TextField from '../../text-field'\n import styled from 'styled-components'\n import { getFilteredSuggestions, inputMatchesSuggestions } from './enumHelper'\n import PropTypes from 'prop-types'\n-\n+const sources = require('../../../component/singletons/sources-instance')\n const TextWrapper = styled.div`\n   padding: ${({ theme }) => theme.minimumSpacing};\n `\n-\n const EnumMenuItem = props => (\n-  <MenuItem {...props} style={{ paddingLeft: '1.5rem' }} />\n+  <MenuItemDisabled {...props} style={{ paddingLeft: '1.5rem' }} />\n )\n \n+const UnsupportedAttribute = styled.div`\n+border-style: solid\n+border-color: red\n+`\n+\n+const isAttributeDisabled = (allSupportedAttributes, currValue) => {\n+  \n+  return allSupportedAttributes.length > 0 && allSupportedAttributes.indexOf(currValue) == -1;", "originalCommit": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NDk4MA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379854980", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            isAttributeDisabled(settingsModel,suggestion.value)\n          \n          \n            \n                            isAttributeDisabled(settingsModel, suggestion.value)\n          \n      \n    \n    \n  \n\nbrought to you by /projects/ddf/ui>> yarn format -w", "author": "kentmorrissey", "createdAt": "2020-02-15T20:44:01Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -53,23 +67,49 @@ const EnumInput = ({\n           onChange={setInput}\n         />\n       </TextWrapper>\n-      <Menu value={value} onChange={onChange}>\n+      <Menu value={value} onChange={onChange} class=\"fa\">\n         {allowCustom &&\n           displayInput && (\n             <EnumMenuItem value={input}>{input} (custom)</EnumMenuItem>\n           )}\n         {filteredSuggestions.map(suggestion => {\n           return (\n-            <EnumMenuItem key={suggestion.value} value={suggestion.value}>\n+            <EnumMenuItem\n+              title={\n+                isAttributeDisabled(settingsModel,suggestion.value)", "originalCommit": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NTA0NA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379855044", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          disabled={isAttributeDisabled(settingsModel,suggestion.value)}\n          \n          \n            \n                          disabled={isAttributeDisabled(settingsModel, suggestion.value)}\n          \n      \n    \n    \n  \n\nbrought to you by /projects/ddf/ui>> yarn format -w", "author": "kentmorrissey", "createdAt": "2020-02-15T20:45:25Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -53,23 +67,49 @@ const EnumInput = ({\n           onChange={setInput}\n         />\n       </TextWrapper>\n-      <Menu value={value} onChange={onChange}>\n+      <Menu value={value} onChange={onChange} class=\"fa\">\n         {allowCustom &&\n           displayInput && (\n             <EnumMenuItem value={input}>{input} (custom)</EnumMenuItem>\n           )}\n         {filteredSuggestions.map(suggestion => {\n           return (\n-            <EnumMenuItem key={suggestion.value} value={suggestion.value}>\n+            <EnumMenuItem\n+              title={\n+                isAttributeDisabled(settingsModel,suggestion.value)\n+                  ? 'Attribute is unsupported by the content store(s) selected'\n+                  : ''\n+              }\n+              key={suggestion.value}\n+              value={suggestion.value}\n+              disabled={isAttributeDisabled(settingsModel,suggestion.value)}", "originalCommit": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NTEyOQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379855129", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  {isAttributeDisabled(settingsModel,selected.value) ? (\n          \n          \n            \n                  {isAttributeDisabled(settingsModel, selected.value) ? (\n          \n      \n    \n    \n  \n\nbrought to you by /projects/ddf/ui>> yarn format -w", "author": "kentmorrissey", "createdAt": "2020-02-15T20:46:51Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -53,23 +67,49 @@ const EnumInput = ({\n           onChange={setInput}\n         />\n       </TextWrapper>\n-      <Menu value={value} onChange={onChange}>\n+      <Menu value={value} onChange={onChange} class=\"fa\">\n         {allowCustom &&\n           displayInput && (\n             <EnumMenuItem value={input}>{input} (custom)</EnumMenuItem>\n           )}\n         {filteredSuggestions.map(suggestion => {\n           return (\n-            <EnumMenuItem key={suggestion.value} value={suggestion.value}>\n+            <EnumMenuItem\n+              title={\n+                isAttributeDisabled(settingsModel,suggestion.value)\n+                  ? 'Attribute is unsupported by the content store(s) selected'\n+                  : ''\n+              }\n+              key={suggestion.value}\n+              value={suggestion.value}\n+              disabled={isAttributeDisabled(settingsModel,suggestion.value)}\n+            >\n               {suggestion.label}\n             </EnumMenuItem>\n           )\n         })}\n       </Menu>\n     </Dropdown>\n   )\n+  \n+  return (\n+    <div>\n+      {isAttributeDisabled(settingsModel,selected.value) ? (", "originalCommit": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NTI5OA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r379855298", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                let allSupportedAttributes = sources.models.filter(source => settingsModel.includes(source.id))\n          \n          \n            \n                .map(sourceSelected => sourceSelected.attributes.supportedAttributes)\n          \n          \n            \n                .flat();\n          \n          \n            \n                return allSupportedAttributes;\n          \n          \n            \n                let allSupportedAttributes = sources.models\n          \n          \n            \n                  .filter(source => settingsModel.includes(source.id))\n          \n          \n            \n                  .map(sourceSelected => sourceSelected.attributes.supportedAttributes)\n          \n          \n            \n                  .flat()\n          \n          \n            \n                return allSupportedAttributes\n          \n      \n    \n    \n  \n\nbrought to you by /projects/ddf/ui>> yarn format -w", "author": "kentmorrissey", "createdAt": "2020-02-15T20:50:27Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js", "diffHunk": "@@ -82,7 +81,20 @@ class Filter extends React.Component {\n   componentDidMount() {\n     this.updateSuggestions()\n   }\n+  getListofSupportedAttributes = (settingsModel) => {\n+    // if no source is selected and settingsModel is present from parent component we want to present all attributes as available \n+    if(settingsModel.length == 0){\n+        return [];\n+    }\n+    if (settingsModel.includes('GIMS_GIN')) {\n+      return ['ext.alternate-identifier-qualifier']\n+    }\n \n+    let allSupportedAttributes = sources.models.filter(source => settingsModel.includes(source.id))\n+    .map(sourceSelected => sourceSelected.attributes.supportedAttributes)\n+    .flat();\n+    return allSupportedAttributes;", "originalCommit": "23b9aaaf0c4b9245dee7d6252b7d5f2e4d56a879", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "adc960dc95ada85177fb8b0337283d76a1fce578", "url": "https://github.com/codice/ddf/commit/adc960dc95ada85177fb8b0337283d76a1fce578", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/component/query-advanced/query-advanced.view.js\n\nCo-Authored-By: kentmorrissey <kentmorrissey0@gmail.com>", "committedDate": "2020-02-17T21:35:57Z", "type": "commit"}, {"oid": "2a9d5e800e67d1f73931707d608ea03627aca400", "url": "https://github.com/codice/ddf/commit/2a9d5e800e67d1f73931707d608ea03627aca400", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js\n\nCo-Authored-By: kentmorrissey <kentmorrissey0@gmail.com>", "committedDate": "2020-02-17T21:36:22Z", "type": "commit"}, {"oid": "d21aae4b411c808544cadd77ec02735f45986caa", "url": "https://github.com/codice/ddf/commit/d21aae4b411c808544cadd77ec02735f45986caa", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js\n\nCo-Authored-By: kentmorrissey <kentmorrissey0@gmail.com>", "committedDate": "2020-02-17T21:37:22Z", "type": "commit"}, {"oid": "dcd794e0551345eb08041e40aa918ea854823629", "url": "https://github.com/codice/ddf/commit/dcd794e0551345eb08041e40aa918ea854823629", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js\n\nCo-Authored-By: kentmorrissey <kentmorrissey0@gmail.com>", "committedDate": "2020-02-17T21:46:57Z", "type": "commit"}, {"oid": "78a8bdf4c2622f3e168c61effcc14da8817ce0f8", "url": "https://github.com/codice/ddf/commit/78a8bdf4c2622f3e168c61effcc14da8817ce0f8", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js\n\nCo-Authored-By: kentmorrissey <kentmorrissey0@gmail.com>", "committedDate": "2020-02-17T21:47:18Z", "type": "commit"}, {"oid": "a66bd2b2c490dd6b026dbe728344b7549df8d60b", "url": "https://github.com/codice/ddf/commit/a66bd2b2c490dd6b026dbe728344b7549df8d60b", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js\n\nCo-Authored-By: kentmorrissey <kentmorrissey0@gmail.com>", "committedDate": "2020-02-17T21:47:42Z", "type": "commit"}, {"oid": "4d2c37222523e0f73793a0c18cd92813c33535f3", "url": "https://github.com/codice/ddf/commit/4d2c37222523e0f73793a0c18cd92813c33535f3", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js\n\nCo-Authored-By: kentmorrissey <kentmorrissey0@gmail.com>", "committedDate": "2020-02-17T21:48:03Z", "type": "commit"}, {"oid": "09ea380b1e53b8ebb748e5412dae593bbc656101", "url": "https://github.com/codice/ddf/commit/09ea380b1e53b8ebb748e5412dae593bbc656101", "message": "5652 formatting", "committedDate": "2020-02-17T22:21:45Z", "type": "commit"}, {"oid": "f01550edc6ebf27841818e4c5939d3194fb4f08a", "url": "https://github.com/codice/ddf/commit/f01550edc6ebf27841818e4c5939d3194fb4f08a", "message": "5652 remove fa class", "committedDate": "2020-02-17T22:32:47Z", "type": "commit"}, {"oid": "03c63512e8f11bc2bf3de31e66fd08e26b82bfd8", "url": "https://github.com/codice/ddf/commit/03c63512e8f11bc2bf3de31e66fd08e26b82bfd8", "message": "5652 refactor method and format", "committedDate": "2020-02-18T01:34:36Z", "type": "commit"}, {"oid": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "url": "https://github.com/codice/ddf/commit/faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "message": "5652 remove unncessary settingsMOdel and fix form", "committedDate": "2020-02-19T00:29:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwOTAwMQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r381509001", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                let settingsModel = this.props.settingsModel\n          \n          \n            \n                const settingsModel = this.props.settingsModel", "author": "mojogitoverhere", "createdAt": "2020-02-19T19:54:14Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js", "diffHunk": "@@ -125,7 +124,27 @@ class Filter extends React.Component {\n     this.updateSuggestions()\n     this.props.onChange(this.state)\n   }\n+  getListofSupportedAttributes = () => {\n+    // if no source is selected and settingsModel is present from parent component we want to present all attributes as available\n+    let settingsModel = this.props.settingsModel", "originalCommit": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMDYxMQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r381510611", "bodyText": "\u2757\ufe0f We should rename this variable (possibly supportedAttributes) if we aren't passing down the entire settings model anymore", "author": "mojogitoverhere", "createdAt": "2020-02-19T19:57:31Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js", "diffHunk": "@@ -100,6 +98,7 @@ class Filter extends React.Component {\n           includedAttributes={this.props.includedAttributes}\n           editing={this.props.editing}\n           onChange={this.updateAttribute}\n+          settingsModel={this.getListofSupportedAttributes()}", "originalCommit": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMDk0Mg==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r381510942", "bodyText": "\u2757\ufe0f This block should be removed", "author": "mojogitoverhere", "createdAt": "2020-02-19T19:58:11Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js", "diffHunk": "@@ -125,7 +124,27 @@ class Filter extends React.Component {\n     this.updateSuggestions()\n     this.props.onChange(this.state)\n   }\n+  getListofSupportedAttributes = () => {\n+    // if no source is selected and settingsModel is present from parent component we want to present all attributes as available\n+    let settingsModel = this.props.settingsModel\n+    // if settingsModel is not paased down from another parentConponent (other than advanced) return emoty list\n+    if (!settingsModel) {\n+      return []\n+    }\n \n+    if (settingsModel.length == 0) {\n+      return []\n+    }\n+    if (settingsModel.includes('GIMS_GIN')) {\n+      return ['ext.alternate-identifier-qualifier']\n+    }", "originalCommit": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMTI1NQ==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r381511255", "bodyText": "Some typos\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // if settingsModel is not paased down from another parentConponent (other than advanced) return emoty list\n          \n          \n            \n                // if settingsModel is not passed down from another parent Component (other than advanced) return empty list", "author": "mojogitoverhere", "createdAt": "2020-02-19T19:58:48Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js", "diffHunk": "@@ -125,7 +124,27 @@ class Filter extends React.Component {\n     this.updateSuggestions()\n     this.props.onChange(this.state)\n   }\n+  getListofSupportedAttributes = () => {\n+    // if no source is selected and settingsModel is present from parent component we want to present all attributes as available\n+    let settingsModel = this.props.settingsModel\n+    // if settingsModel is not paased down from another parentConponent (other than advanced) return emoty list", "originalCommit": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMjU3NA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r381512574", "bodyText": "\u270f\ufe0f These can be combined\n    if (!settingsModel || settingsModel.length === 0) {\n      return []\n    }", "author": "mojogitoverhere", "createdAt": "2020-02-19T20:01:27Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js", "diffHunk": "@@ -125,7 +124,27 @@ class Filter extends React.Component {\n     this.updateSuggestions()\n     this.props.onChange(this.state)\n   }\n+  getListofSupportedAttributes = () => {\n+    // if no source is selected and settingsModel is present from parent component we want to present all attributes as available\n+    let settingsModel = this.props.settingsModel\n+    // if settingsModel is not paased down from another parentConponent (other than advanced) return emoty list\n+    if (!settingsModel) {\n+      return []\n+    }\n \n+    if (settingsModel.length == 0) {\n+      return []\n+    }", "originalCommit": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxMzI3Mg==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r381513272", "bodyText": "We can return this result immediately and remove this intermediate variable (the function name is descriptive enough to figure out what the stream operations are doing)", "author": "mojogitoverhere", "createdAt": "2020-02-19T20:02:48Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js", "diffHunk": "@@ -125,7 +124,27 @@ class Filter extends React.Component {\n     this.updateSuggestions()\n     this.props.onChange(this.state)\n   }\n+  getListofSupportedAttributes = () => {\n+    // if no source is selected and settingsModel is present from parent component we want to present all attributes as available\n+    let settingsModel = this.props.settingsModel\n+    // if settingsModel is not paased down from another parentConponent (other than advanced) return emoty list\n+    if (!settingsModel) {\n+      return []\n+    }\n \n+    if (settingsModel.length == 0) {\n+      return []\n+    }\n+    if (settingsModel.includes('GIMS_GIN')) {\n+      return ['ext.alternate-identifier-qualifier']\n+    }\n+\n+    let allSupportedAttributes = sources.models", "originalCommit": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxNjMzNw==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r381516337", "bodyText": "\u270f\ufe0f I recommend reverting this change. The hanging comma on the last item makes it easier to add new keys in the future and makes it more obvious in the diff", "author": "mojogitoverhere", "createdAt": "2020-02-19T20:09:25Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/filter/filter.view.js", "diffHunk": "@@ -45,7 +46,7 @@ module.exports = Marionette.LayoutView.extend({\n     this.model.set({\n       type: attribute,\n       comparator,\n-      value: [value],\n+      value: [value]", "originalCommit": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUyMzYyMw==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r381523623", "bodyText": "This logic still feels like it should be raised to a higher level. I would expect each suggestion object to provide all these values, something like this (with some sensible defaults if they aren't set)\n            <EnumMenuItem\n              title={suggestion.title}\n              key={suggestion.value}\n              value={suggestion.value}\n              disabled={suggestion.disabled}\n            >", "author": "mojogitoverhere", "createdAt": "2020-02-19T20:24:16Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -60,16 +79,41 @@ const EnumInput = ({\n           )}\n         {filteredSuggestions.map(suggestion => {\n           return (\n-            <EnumMenuItem key={suggestion.value} value={suggestion.value}>\n+            <EnumMenuItem\n+              title={\n+                isAttributeDisabled(settingsModel, suggestion)\n+                  ? `Attribute is unsupported by the ${SOURCES} selected`\n+                  : ''\n+              }\n+              key={suggestion.value}\n+              value={suggestion.value}\n+              disabled={isAttributeDisabled(settingsModel, suggestion)}\n+            >", "originalCommit": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUyNjA2Ng==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r381526066", "bodyText": "Consider collapsing the active and disabled options into a single active option since disabled is the same as !active. This also prevents weird state issues like having both of them set to true or false", "author": "mojogitoverhere", "createdAt": "2020-02-19T20:29:39Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/menu/menu.tsx", "diffHunk": "@@ -249,5 +248,78 @@ export const MenuItem = (props: MenuItemProps) => {\n   )\n }\n \n+type MenutItemPropsDisabled = {\n+  /** A value to represent the current Item */\n+  value?: any\n+  /**\n+   * Children to display for menu item.\n+   *\n+   * @default value\n+   */\n+  children?: any\n+  /** Optional styles for root element. */\n+  style?: object\n+  onClick?: any\n+  selected?: any\n+  active?: any\n+  onHover?: any\n+  disabled?: any\n+  title?: any\n+}\n+\n+const ItemRootDisabled = styled.option<{ active: boolean; disabled: boolean }>`", "originalCommit": "faa4dfdaa3b4d263a0d4f1442b59d040e3e530f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c71f5bdbeff18ea62c4855ece3a3698c6d0bd2e3", "url": "https://github.com/codice/ddf/commit/c71f5bdbeff18ea62c4855ece3a3698c6d0bd2e3", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js\n\nCo-Authored-By: David Morales <david.morales@connexta.com>", "committedDate": "2020-02-20T16:33:06Z", "type": "commit"}, {"oid": "3839955aa710ab30c347cf34a9642068a7692a3d", "url": "https://github.com/codice/ddf/commit/3839955aa710ab30c347cf34a9642068a7692a3d", "message": "Update ui/packages/catalog-ui-search/src/main/webapp/react-component/filter/filter.js\n\nCo-Authored-By: David Morales <david.morales@connexta.com>", "committedDate": "2020-02-20T16:34:35Z", "type": "commit"}, {"oid": "18acb1e861a70549cd376896fa5e639d1d83fd1b", "url": "https://github.com/codice/ddf/commit/18acb1e861a70549cd376896fa5e639d1d83fd1b", "message": "5652 add Disabled prop to existing MenuItem and refactored disable behavior in enum-input", "committedDate": "2020-02-22T00:35:51Z", "type": "commit"}, {"oid": "d35394fb99254a73f411b296b690043f7a4858b4", "url": "https://github.com/codice/ddf/commit/d35394fb99254a73f411b296b690043f7a4858b4", "message": "5652 format", "committedDate": "2020-02-22T00:43:07Z", "type": "commit"}, {"oid": "a7035aabb1eea0ff60a3ad41ff3a8b5cb9044d9c", "url": "https://github.com/codice/ddf/commit/a7035aabb1eea0ff60a3ad41ff3a8b5cb9044d9c", "message": "5652 fix export in menu", "committedDate": "2020-02-24T15:08:49Z", "type": "commit"}, {"oid": "6b3702f4212a0ee7fc63cad4e4646ef1dc395947", "url": "https://github.com/codice/ddf/commit/6b3702f4212a0ee7fc63cad4e4646ef1dc395947", "message": "5652 rename settingsModel to supportedAttributes", "committedDate": "2020-02-24T18:31:31Z", "type": "commit"}, {"oid": "f4d0289e4dc3d0b44111297659db2aeb5105a82c", "url": "https://github.com/codice/ddf/commit/f4d0289e4dc3d0b44111297659db2aeb5105a82c", "message": "5652 use disabled prop for tooltip", "committedDate": "2020-02-24T18:52:19Z", "type": "commit"}, {"oid": "fa3e47e87a66f0f830bf5f02c9e2706b99895c25", "url": "https://github.com/codice/ddf/commit/fa3e47e87a66f0f830bf5f02c9e2706b99895c25", "message": "5652 remove space", "committedDate": "2020-02-24T19:09:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2NzA2MA==", "url": "https://github.com/codice/ddf/pull/5827#discussion_r384767060", "bodyText": "Need to use the SOURCES var here instead of hard coding \"content store(s)\"", "author": "mojogitoverhere", "createdAt": "2020-02-26T21:10:02Z", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/inputs/enum-input/enum-input.js", "diffHunk": "@@ -60,16 +98,37 @@ const EnumInput = ({\n           )}\n         {filteredSuggestions.map(suggestion => {\n           return (\n-            <EnumMenuItem key={suggestion.value} value={suggestion.value}>\n+            <EnumMenuItem\n+              key={suggestion.value}\n+              value={suggestion.value}\n+              supportedAttributes={supportedAttributes}\n+              disabled={suggestion.disabled}\n+            >\n               {suggestion.label}\n             </EnumMenuItem>\n           )\n         })}\n       </Menu>\n     </Dropdown>\n   )\n+  return (\n+    <div>\n+      {isAttributeDisabled(supportedAttributes, selected) ? (\n+        <div>\n+          <UnsupportedAttribute title=\"Attribute is unsupported by the content store(s) selected\">", "originalCommit": "fa3e47e87a66f0f830bf5f02c9e2706b99895c25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "22afcebbb8dd22906aecc0f33c136972db0dbc3d", "url": "https://github.com/codice/ddf/commit/22afcebbb8dd22906aecc0f33c136972db0dbc3d", "message": "5652 refactor title string", "committedDate": "2020-02-26T22:01:26Z", "type": "commit"}, {"oid": "d30b6ca413d50069e9577174e3e2b4032f22c027", "url": "https://github.com/codice/ddf/commit/d30b6ca413d50069e9577174e3e2b4032f22c027", "message": "5652 more format", "committedDate": "2020-02-26T22:36:36Z", "type": "commit"}, {"oid": "fb41775075b21480f145bb2c68e5a81f959c0657", "url": "https://github.com/codice/ddf/commit/fb41775075b21480f145bb2c68e5a81f959c0657", "message": "5652 check in filter if attributes are present", "committedDate": "2020-03-05T19:12:08Z", "type": "commit"}]}