{"pr_number": 5758, "pr_title": "DDF-5757 Fix the DefinitionParser-generated required attributes metacard validators", "pr_createdAt": "2020-01-11T00:35:04Z", "pr_url": "https://github.com/codice/ddf/pull/5758", "timeline": [{"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8", "url": "https://github.com/codice/ddf/commit/d20ec8b9927aef6dafae81b9e082a610cadb8de8", "message": "DDF-5757 Fix the DefinitionParser-generated required attributes metacard validators", "committedDate": "2020-01-11T00:28:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAwMjA1MQ==", "url": "https://github.com/codice/ddf/pull/5758#discussion_r368002051", "bodyText": "\u270f\ufe0f Good opportunity to refactor this whole thing:\n  List<Callable<Boolean>> registerMetacardValidator(\n      final BundleContext context,\n      final Changeset changeset,\n      final Entry<String, List<MetacardValidatorDefinition>> row) {\n    return getMetacardValidators(row.getKey(), row.getValue().get(0))\n        .stream()\n        .map(\n            metacardValidator -> {\n              try {\n                return (Callable<Boolean>)\n                    () -> {\n                      ServiceRegistration<MetacardValidator> registration =\n                          context.registerService(MetacardValidator.class, metacardValidator, null);\n                      changeset.metacardValidatorServices.add(registration);\n                      return registration != null;\n                    };\n              } catch (IllegalStateException ise) {\n                LOGGER.error(\n                    \"Could not register metacard validator for definition: {} {}\",\n                    row.getKey(),\n                    row.getValue(),\n                    ise);\n              }\n\n              return (Callable<Boolean>) () -> Boolean.FALSE;\n            })\n        .collect(Collectors.toList());\n  }\n\n  private List<Callable<Boolean>> registerMetacardValidators(\n      Changeset changeset,\n      List<Map<String, List<MetacardValidatorDefinition>>> metacardValidatorDefinitions) {\n    Function<Entry<String, List<MetacardValidatorDefinition>>, List<Callable<Boolean>>>\n        validatorRegistration =\n            row -> registerMetacardValidator(getBundleContext(), changeset, row);\n\n    return metacardValidatorDefinitions\n        .stream()\n        .map(Map::entrySet)\n        .flatMap(Set::stream)\n        .map(validatorRegistration)\n        .flatMap(List::stream)\n        .collect(Collectors.toList());\n  }", "author": "leo-sakh", "createdAt": "2020-01-17T15:45:21Z", "path": "catalog/core/catalog-core-definitionparser/src/main/java/ddf/catalog/definition/impl/DefinitionParser.java", "diffHunk": "@@ -436,7 +436,8 @@ private void processAttribute(\n     for (Map<String, List<MetacardValidatorDefinition>> mvdMap : metacardValidatorDefinitions) {\n       for (Entry<String, List<MetacardValidatorDefinition>> row : mvdMap.entrySet()) {\n         try {\n-          List<MetacardValidator> metacardValidators = getMetacardValidators(row.getValue().get(0));\n+          List<MetacardValidator> metacardValidators =", "originalCommit": "d20ec8b9927aef6dafae81b9e082a610cadb8de8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}