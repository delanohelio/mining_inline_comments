{"pr_number": 6222, "pr_title": "[2.19.x] DDF-6221 Make MatchAnyValidator to not get registered to AttributeValidatorRegistry if MatchAnyValidator with same content exists for an attribute", "pr_createdAt": "2020-08-05T19:07:11Z", "pr_url": "https://github.com/codice/ddf/pull/6222", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0OTAzMg==", "url": "https://github.com/codice/ddf/pull/6222#discussion_r465949032", "bodyText": "\u2753 I don't know the details of EqualsBuilder so how is equality of collections of objects handled? Is it pair-wise check of values in each index? Does it perform a sort before testing? If so then what kind of sort?", "author": "leo-sakh", "createdAt": "2020-08-05T19:19:40Z", "path": "catalog/core/catalog-core-validator/src/main/java/ddf/catalog/validation/impl/validator/MatchAnyValidator.java", "diffHunk": "@@ -94,4 +97,24 @@ public MatchAnyValidator(List<AttributeValidator> validators) {\n     }\n     return Optional.of(result);\n   }\n+\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder(23, 37).append(validators).toHashCode();\n+  }\n+\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (this == obj) {\n+      return true;\n+    }\n+\n+    if (obj == null || getClass() != obj.getClass()) {\n+      return false;\n+    }\n+\n+    MatchAnyValidator that = (MatchAnyValidator) obj;\n+\n+    return new EqualsBuilder().append(validators, that.validators).isEquals();", "originalCommit": "fcc4f54e64ce1c091ed2bb591503898a75b347a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0Njg4Nw==", "url": "https://github.com/codice/ddf/pull/6222#discussion_r466446887", "bodyText": "It doesn't guarantee that and a sort() is required before checking equality of list such as validators in this case. I added a new commit that adds sorting of validators based on hash code of each validators.", "author": "frnkshin", "createdAt": "2020-08-06T14:19:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0OTAzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU4ODExMg==", "url": "https://github.com/codice/ddf/pull/6222#discussion_r500588112", "bodyText": "\u2753 Should we also have a test for Arrays.asList(patternValidator, enumerationValidator) so the sorting behavior is defined explicitly?", "author": "Lambeaux", "createdAt": "2020-10-06T20:51:35Z", "path": "catalog/core/catalog-core-validator/src/test/java/ddf/catalog/validation/impl/MatchAnyValidatorTest.java", "diffHunk": "@@ -165,4 +168,22 @@ public void testMatchAnyValidatorPassesWithTwoEnumerationValidators() {\n     attributeValidationReportOptional = matchAnyValidator.validate(VALID_ATTRIBUTE_3);\n     assertThat(attributeValidationReportOptional.isPresent(), is(false));\n   }\n+\n+  @Test\n+  public void testNotEquals() {\n+    matchAnyValidator =\n+        new MatchAnyValidator(Arrays.asList(enumerationValidator, patternValidator));\n+    matchAnyValidator2 =\n+        new MatchAnyValidator(Arrays.asList(enumerationValidator2, patternValidator));\n+    assertThat(matchAnyValidator.equals(matchAnyValidator2), is(false));\n+  }", "originalCommit": "20ccdc40dda37c590383f89e3ca434f1e1fc2be6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3MzkyNw==", "url": "https://github.com/codice/ddf/pull/6222#discussion_r525373927", "bodyText": "MatchAnyValidatorTest.testEquals() should test for that.", "author": "frnkshin", "createdAt": "2020-11-17T18:02:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU4ODExMg=="}], "type": "inlineReview"}, {"oid": "815aabe6029e30d62eda272277a07488b6395643", "url": "https://github.com/codice/ddf/commit/815aabe6029e30d62eda272277a07488b6395643", "message": "Added hashCode() and equals() methods to MatchAnyValidator. Added equals and noequals tests to MatchAnyValidatorTest", "committedDate": "2020-11-18T02:04:44Z", "type": "commit"}, {"oid": "aeb00a7853a93a99a66e1b96816e61a14e941c49", "url": "https://github.com/codice/ddf/commit/aeb00a7853a93a99a66e1b96816e61a14e941c49", "message": "Updated MatchAnyValidator to sort when receiving a list of validators based on hashcode", "committedDate": "2020-11-18T02:04:44Z", "type": "commit"}, {"oid": "2c7f0178de1dd46f7b8ef0bf7d96c60077f47352", "url": "https://github.com/codice/ddf/commit/2c7f0178de1dd46f7b8ef0bf7d96c60077f47352", "message": "Fix styling issue", "committedDate": "2020-11-18T02:04:44Z", "type": "commit"}, {"oid": "2c7f0178de1dd46f7b8ef0bf7d96c60077f47352", "url": "https://github.com/codice/ddf/commit/2c7f0178de1dd46f7b8ef0bf7d96c60077f47352", "message": "Fix styling issue", "committedDate": "2020-11-18T02:04:44Z", "type": "forcePushed"}]}