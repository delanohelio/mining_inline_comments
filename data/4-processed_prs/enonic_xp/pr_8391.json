{"pr_number": 8391, "pr_title": "getVersionsForView API doesn't return unpublished version #8314", "pr_createdAt": "2020-09-21T15:01:26Z", "pr_url": "https://github.com/enonic/xp/pull/8391", "timeline": [{"oid": "5d62a1433a26f5d412f293819ea1dbabd90a531b", "url": "https://github.com/enonic/xp/commit/5d62a1433a26f5d412f293819ea1dbabd90a531b", "message": "getVersionsForView API doesn't return unpublished version #8314", "committedDate": "2020-09-21T15:34:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyODQwMw==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492228403", "bodyText": "Leave alone this broken implementation (Deprecate?). Write a separate Comparator. Also See #7440", "author": "rymsha", "createdAt": "2020-09-21T17:28:28Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/ContentVersion.java", "diffHunk": "@@ -76,14 +76,34 @@ public static Builder create()\n     }\n \n     @Override\n-    public int compareTo( final ContentVersion o )\n+    public int compareTo( final ContentVersion that )", "originalCommit": "5d62a1433a26f5d412f293819ea1dbabd90a531b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "624a59621891635aafd862280dec22bb501a31b1", "url": "https://github.com/enonic/xp/commit/624a59621891635aafd862280dec22bb501a31b1", "message": "getVersionsForView API doesn't return unpublished version #8314", "committedDate": "2020-09-22T10:19:09Z", "type": "forcePushed"}, {"oid": "f04c3bfc77a0418a1b7875520801c096d71d4d98", "url": "https://github.com/enonic/xp/commit/f04c3bfc77a0418a1b7875520801c096d71d4d98", "message": "getVersionsForView API doesn't return unpublished version #8314", "committedDate": "2020-09-22T10:41:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY3NTExMg==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492675112", "bodyText": "Instant is Comparable", "author": "rymsha", "createdAt": "2020-09-22T11:57:38Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/ContentVersion.java", "diffHunk": "@@ -1,15 +1,49 @@\n package com.enonic.xp.content;\n \n import java.time.Instant;\n+import java.util.Comparator;\n import java.util.Objects;\n \n import com.enonic.xp.annotation.PublicApi;\n import com.enonic.xp.security.PrincipalKey;\n \n @PublicApi\n public class ContentVersion\n-    implements Comparable<ContentVersion>\n {\n+    public static final Comparator<ContentVersion> COMPARATOR = ( final ContentVersion thisVersion, final ContentVersion thatVersion ) -> {\n+        Instant thisTime, thatTime;\n+\n+        if ( thisVersion.publishInfo != null && thisVersion.publishInfo.getTimestamp() != null )\n+        {\n+            thisTime = thisVersion.publishInfo.getTimestamp();\n+        }\n+        else\n+        {\n+            thisTime = thisVersion.modified;\n+\n+        }\n+        if ( thatVersion.publishInfo != null && thatVersion.publishInfo.getTimestamp() != null )\n+        {\n+            thatTime = thatVersion.publishInfo.getTimestamp();\n+        }\n+        else\n+        {\n+            thatTime = thatVersion.modified;\n+        }\n+\n+        if ( Objects.equals( thisTime, thatTime ) )", "originalCommit": "f04c3bfc77a0418a1b7875520801c096d71d4d98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY3NTcxMQ==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492675711", "bodyText": "Try to expose commit field and use it instead", "author": "rymsha", "createdAt": "2020-09-22T11:58:47Z", "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/json/content/GetContentVersionsForViewResultJson.java", "diffHunk": "@@ -90,7 +90,8 @@ private ContentVersions filterContentVersions( final FindContentVersionsResult a\n         while ( iterator.hasNext() )\n         {\n             final ContentVersion contentVersion = iterator.next();\n-            if ( Math.abs( previouslyAdded.getModified().toEpochMilli() - contentVersion.getModified().toEpochMilli() ) > msRangeFilter )\n+            if ( Math.abs( previouslyAdded.getModified().toEpochMilli() - contentVersion.getModified().toEpochMilli() ) > msRangeFilter ||", "originalCommit": "f04c3bfc77a0418a1b7875520801c096d71d4d98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY3NTg1OA==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492675858", "bodyText": "Out from this class", "author": "rymsha", "createdAt": "2020-09-22T11:59:04Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/ActiveContentVersionEntry.java", "diffHunk": "@@ -1,12 +1,18 @@\n package com.enonic.xp.content;\n \n+import java.util.Comparator;\n+\n import com.enonic.xp.annotation.PublicApi;\n import com.enonic.xp.branch.Branch;\n \n @PublicApi\n public class ActiveContentVersionEntry\n-    implements Comparable<ActiveContentVersionEntry>\n {\n+    public static final Comparator<ActiveContentVersionEntry> COMPARATOR = Comparator.", "originalCommit": "f04c3bfc77a0418a1b7875520801c096d71d4d98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY3NTkxNA==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492675914", "bodyText": "restore", "author": "rymsha", "createdAt": "2020-09-22T11:59:09Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/ActiveContentVersionEntry.java", "diffHunk": "@@ -1,12 +1,18 @@\n package com.enonic.xp.content;\n \n+import java.util.Comparator;\n+\n import com.enonic.xp.annotation.PublicApi;\n import com.enonic.xp.branch.Branch;\n \n @PublicApi\n public class ActiveContentVersionEntry\n-    implements Comparable<ActiveContentVersionEntry>", "originalCommit": "f04c3bfc77a0418a1b7875520801c096d71d4d98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY3NjAxNg==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492676016", "bodyText": "Out of this class", "author": "rymsha", "createdAt": "2020-09-22T11:59:20Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/ContentVersion.java", "diffHunk": "@@ -1,15 +1,49 @@\n package com.enonic.xp.content;\n \n import java.time.Instant;\n+import java.util.Comparator;\n import java.util.Objects;\n \n import com.enonic.xp.annotation.PublicApi;\n import com.enonic.xp.security.PrincipalKey;\n \n @PublicApi\n public class ContentVersion\n-    implements Comparable<ContentVersion>\n {\n+    public static final Comparator<ContentVersion> COMPARATOR = ( final ContentVersion thisVersion, final ContentVersion thatVersion ) -> {", "originalCommit": "f04c3bfc77a0418a1b7875520801c096d71d4d98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY3NjA2MA==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492676060", "bodyText": "restore", "author": "rymsha", "createdAt": "2020-09-22T11:59:26Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/ContentVersion.java", "diffHunk": "@@ -1,15 +1,49 @@\n package com.enonic.xp.content;\n \n import java.time.Instant;\n+import java.util.Comparator;\n import java.util.Objects;\n \n import com.enonic.xp.annotation.PublicApi;\n import com.enonic.xp.security.PrincipalKey;\n \n @PublicApi\n public class ContentVersion\n-    implements Comparable<ContentVersion>", "originalCommit": "f04c3bfc77a0418a1b7875520801c096d71d4d98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MDEwMw==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492680103", "bodyText": "Use list with sort", "author": "rymsha", "createdAt": "2020-09-22T12:06:58Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/ContentVersions.java", "diffHunk": "@@ -18,7 +16,7 @@\n \n     private ContentVersions( Builder builder )\n     {\n-        contentVersions = ImmutableSortedSet.copyOf( builder.contentVersions );\n+        contentVersions = builder.contentVersions.build();", "originalCommit": "f04c3bfc77a0418a1b7875520801c096d71d4d98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MTAyNg==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492681026", "bodyText": "Use list with sort", "author": "rymsha", "createdAt": "2020-09-22T12:08:43Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/GetActiveContentVersionsResult.java", "diffHunk": "@@ -14,7 +11,7 @@\n \n     private GetActiveContentVersionsResult( final Builder builder )\n     {\n-        this.activeContentVersions = ImmutableSortedSet.copyOf( builder.activeContentVersions );", "originalCommit": "f04c3bfc77a0418a1b7875520801c096d71d4d98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "76c1a2ecb10bad3bcdd83339fcc0a62fc127a52e", "url": "https://github.com/enonic/xp/commit/76c1a2ecb10bad3bcdd83339fcc0a62fc127a52e", "message": "getVersionsForView API doesn't return unpublished version #8314", "committedDate": "2020-09-22T13:51:33Z", "type": "forcePushed"}, {"oid": "c96741aa083ef626758189d54e53673385595b8f", "url": "https://github.com/enonic/xp/commit/c96741aa083ef626758189d54e53673385595b8f", "message": "getVersionsForView API doesn't return unpublished version #8314", "committedDate": "2020-09-22T14:00:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkzNjAwNQ==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492936005", "bodyText": "final\nOr maybe even internal of ContentVersions, because it is an implementation detail", "author": "rymsha", "createdAt": "2020-09-22T18:09:46Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/ContentVersionDateComparator.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.enonic.xp.content;\n+\n+import java.time.Instant;\n+import java.util.Comparator;\n+\n+public class ContentVersionDateComparator", "originalCommit": "c96741aa083ef626758189d54e53673385595b8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkzNjY5NQ==", "url": "https://github.com/enonic/xp/pull/8391#discussion_r492936695", "bodyText": "Let's have a second round of if/how we want to expose id", "author": "rymsha", "createdAt": "2020-09-22T18:10:52Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/content/ContentVersion.java", "diffHunk": "@@ -151,6 +165,8 @@ public int hashCode()\n \n         private WorkflowInfo workflowInfo;\n \n+        private NodeCommitId nodeCommitId;", "originalCommit": "c96741aa083ef626758189d54e53673385595b8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f8966caccf444cff9bf6706ce0e136fbe441bf86", "url": "https://github.com/enonic/xp/commit/f8966caccf444cff9bf6706ce0e136fbe441bf86", "message": "getVersionsForView API doesn't return unpublished version #8314", "committedDate": "2020-09-23T09:29:48Z", "type": "forcePushed"}, {"oid": "128d605bf7f1b8fb8aba8a788956d341a88fd948", "url": "https://github.com/enonic/xp/commit/128d605bf7f1b8fb8aba8a788956d341a88fd948", "message": "getVersionsForView API doesn't return unpublished version #8314", "committedDate": "2020-09-23T10:04:00Z", "type": "commit"}, {"oid": "128d605bf7f1b8fb8aba8a788956d341a88fd948", "url": "https://github.com/enonic/xp/commit/128d605bf7f1b8fb8aba8a788956d341a88fd948", "message": "getVersionsForView API doesn't return unpublished version #8314", "committedDate": "2020-09-23T10:04:00Z", "type": "forcePushed"}]}