{"pr_number": 8070, "pr_title": "Implement lib-project", "pr_createdAt": "2020-05-11T11:24:32Z", "pr_url": "https://github.com/enonic/xp/pull/8070", "timeline": [{"oid": "8f540db4415d0e36ba3e8059bf359ac38dd9b672", "url": "https://github.com/enonic/xp/commit/8f540db4415d0e36ba3e8059bf359ac38dd9b672", "message": "Implement lib-project #8068", "committedDate": "2020-05-11T11:29:02Z", "type": "forcePushed"}, {"oid": "a1739c5a7aaa0a155bb434378ee1376874451f37", "url": "https://github.com/enonic/xp/commit/a1739c5a7aaa0a155bb434378ee1376874451f37", "message": "Implement lib-project #8068", "committedDate": "2020-05-12T13:44:10Z", "type": "forcePushed"}, {"oid": "c0e0d71429a64412ebd3e8dc7019120e01b1e861", "url": "https://github.com/enonic/xp/commit/c0e0d71429a64412ebd3e8dc7019120e01b1e861", "message": "Implement lib-project #8068", "committedDate": "2020-05-12T14:09:55Z", "type": "forcePushed"}, {"oid": "9bc19a452490475b52761a34beb9c19a49e6221b", "url": "https://github.com/enonic/xp/commit/9bc19a452490475b52761a34beb9c19a49e6221b", "message": "Implement lib-project #8068", "committedDate": "2020-05-12T14:20:17Z", "type": "forcePushed"}, {"oid": "dcfdda46188b2dc4ee8cdeafd70c99942a2005a9", "url": "https://github.com/enonic/xp/commit/dcfdda46188b2dc4ee8cdeafd70c99942a2005a9", "message": "Implement lib-project #8068", "committedDate": "2020-05-12T15:17:50Z", "type": "forcePushed"}, {"oid": "1d2f087972fe13ba91ee014ac4cb3b7ec1c1c4be", "url": "https://github.com/enonic/xp/commit/1d2f087972fe13ba91ee014ac4cb3b7ec1c1c4be", "message": "Implement lib-project #8068", "committedDate": "2020-05-12T15:20:14Z", "type": "forcePushed"}, {"oid": "c0a5a5c93b18c0624e6bc813437c6e305924187c", "url": "https://github.com/enonic/xp/commit/c0a5a5c93b18c0624e6bc813437c6e305924187c", "message": "Implement lib-project #8068", "committedDate": "2020-05-13T15:25:48Z", "type": "forcePushed"}, {"oid": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "url": "https://github.com/enonic/xp/commit/9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "message": "Implement lib-project #8068", "committedDate": "2020-05-13T16:51:42Z", "type": "commit"}, {"oid": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "url": "https://github.com/enonic/xp/commit/9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "message": "Implement lib-project #8068", "committedDate": "2020-05-13T16:51:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDE1Ng==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590156", "bodyText": "Issue found: 'project' used outside of binding context.", "author": "jsi", "createdAt": "2020-05-13T16:56:54Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/create.js", "diffHunk": "@@ -0,0 +1,96 @@\n+// BEGIN\n+// Creates a Content Project with minimal properties\n+var projectLib = require('/lib/xp/project');\n+try {\n+    var project = projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+} catch (e) {\n+    log.error('Failed to create a project: ' + e);\n+}\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'permissions': [],\n+    'readAccess': {\n+        'public': true\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project with extended properties\n+var projectLib = require('/lib/xp/project');\n+var project = projectLib.create({", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDE3Mg==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590172", "bodyText": "Issue found: 'projectLib' is already defined.", "author": "jsi", "createdAt": "2020-05-13T16:56:55Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/create.js", "diffHunk": "@@ -0,0 +1,96 @@\n+// BEGIN\n+// Creates a Content Project with minimal properties\n+var projectLib = require('/lib/xp/project');\n+try {\n+    var project = projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+} catch (e) {\n+    log.error('Failed to create a project: ' + e);\n+}\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'permissions': [],\n+    'readAccess': {\n+        'public': true\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project with extended properties\n+var projectLib = require('/lib/xp/project');\n+var project = projectLib.create({\n+    id: 'my-project',\n+    displayName: 'My Content Project',\n+    description: 'Some exciting content is stored here',\n+    language: 'no',\n+    permissions: {\n+        owner: ['user:mystore:user1'],\n+        editor: ['user:mystore:user2'],\n+        author: ['user:mystore:user3'],\n+        contributor: ['user:mystore:user4'],\n+        viewer: ['user:mystore:user5']\n+    },\n+    readAccess: {\n+        public: false\n+    }\n+});\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'description': 'Some exciting content is stored here',\n+    'language': 'no',\n+    'permissions': {\n+        'owner': [\n+            'user:mystore:user1'\n+        ],\n+        'editor': [\n+            'user:mystore:user2'\n+        ],\n+        'author': [\n+            'user:mystore:user3'\n+        ],\n+        'contributor': [\n+            'user:mystore:user4'\n+        ],\n+        'viewer': [\n+            'user:mystore:user5'\n+        ]\n+    },\n+    readAccess: {\n+        'public': false\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDE3OQ==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590179", "bodyText": "Issue found: Missing semicolon.", "author": "jsi", "createdAt": "2020-05-13T16:56:56Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/modify.js", "diffHunk": "@@ -0,0 +1,44 @@\n+// BEGIN\n+// Modifies an existing content project\n+var projectLib = require('/lib/xp/project');\n+\n+var project = projectLib.modify({\n+    id: 'my-project',\n+    displayName: 'New project name',\n+    description: 'New project description',\n+    language: 'en'\n+});\n+// END\n+\n+// BEGIN\n+// Modifies an existing content project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');\n+var contextLib = require('/lib/xp/context');\n+\n+var modifyProject = function () {\n+    return projectLib.modify({\n+        id: 'my-project',\n+        displayName: 'New project name',\n+        description: 'New project description',\n+        language: 'en'\n+    });\n+}", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDE4OA==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590188", "bodyText": "Issue found: 'log' is not defined.", "author": "jsi", "createdAt": "2020-05-13T16:56:57Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/create.js", "diffHunk": "@@ -0,0 +1,96 @@\n+// BEGIN\n+// Creates a Content Project with minimal properties\n+var projectLib = require('/lib/xp/project');\n+try {\n+    var project = projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+} catch (e) {\n+    log.error('Failed to create a project: ' + e);", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDIwOQ==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590209", "bodyText": "Issue found: 'project' used outside of binding context.", "author": "jsi", "createdAt": "2020-05-13T16:56:58Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/create.js", "diffHunk": "@@ -0,0 +1,96 @@\n+// BEGIN\n+// Creates a Content Project with minimal properties\n+var projectLib = require('/lib/xp/project');\n+try {\n+    var project = projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+} catch (e) {\n+    log.error('Failed to create a project: ' + e);\n+}\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'permissions': [],\n+    'readAccess': {\n+        'public': true\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project with extended properties\n+var projectLib = require('/lib/xp/project');\n+var project = projectLib.create({\n+    id: 'my-project',\n+    displayName: 'My Content Project',\n+    description: 'Some exciting content is stored here',\n+    language: 'no',\n+    permissions: {\n+        owner: ['user:mystore:user1'],\n+        editor: ['user:mystore:user2'],\n+        author: ['user:mystore:user3'],\n+        contributor: ['user:mystore:user4'],\n+        viewer: ['user:mystore:user5']\n+    },\n+    readAccess: {\n+        public: false\n+    }\n+});\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'description': 'Some exciting content is stored here',\n+    'language': 'no',\n+    'permissions': {\n+        'owner': [\n+            'user:mystore:user1'\n+        ],\n+        'editor': [\n+            'user:mystore:user2'\n+        ],\n+        'author': [\n+            'user:mystore:user3'\n+        ],\n+        'contributor': [\n+            'user:mystore:user4'\n+        ],\n+        'viewer': [\n+            'user:mystore:user5'\n+        ]\n+    },\n+    readAccess: {\n+        'public': false\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');\n+var contextLib = require('/lib/xp/context');\n+\n+var createProject = function () {\n+    return projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+}\n+\n+var project = contextLib.run({", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDIxNQ==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590215", "bodyText": "Issue found: Missing semicolon.", "author": "jsi", "createdAt": "2020-05-13T16:56:59Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/delete.js", "diffHunk": "@@ -0,0 +1,28 @@\n+// BEGIN\n+// Deletes an existing content project\n+var projectLib = require('/lib/xp/project');\n+var result = projectLib.delete({\n+    id: 'my-project'\n+});\n+// END\n+\n+// BEGIN\n+// Deletes an existing content project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');\n+var contextLib = require('/lib/xp/context');\n+\n+var deleteProject = function () {\n+    return projectLib.delete({\n+        id: 'my-project'\n+    });\n+}", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDIyNg==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590226", "bodyText": "Issue found: Variable Assigned to Object Injection Sink", "author": "jsi", "createdAt": "2020-05-13T16:57:00Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/project.js", "diffHunk": "@@ -0,0 +1,200 @@\n+/**\n+ * Functions to manage Content Projects.\n+ *\n+ * @example\n+ * var projectLib = require('/lib/xp/project');\n+ *\n+ * @module project\n+ */\n+\n+/* global __ */\n+\n+function required(params, name) {\n+    var value = params[name];", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDI0OQ==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590249", "bodyText": "Issue found: Missing semicolon.", "author": "jsi", "createdAt": "2020-05-13T16:57:01Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/create.js", "diffHunk": "@@ -0,0 +1,96 @@\n+// BEGIN\n+// Creates a Content Project with minimal properties\n+var projectLib = require('/lib/xp/project');\n+try {\n+    var project = projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+} catch (e) {\n+    log.error('Failed to create a project: ' + e);\n+}\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'permissions': [],\n+    'readAccess': {\n+        'public': true\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project with extended properties\n+var projectLib = require('/lib/xp/project');\n+var project = projectLib.create({\n+    id: 'my-project',\n+    displayName: 'My Content Project',\n+    description: 'Some exciting content is stored here',\n+    language: 'no',\n+    permissions: {\n+        owner: ['user:mystore:user1'],\n+        editor: ['user:mystore:user2'],\n+        author: ['user:mystore:user3'],\n+        contributor: ['user:mystore:user4'],\n+        viewer: ['user:mystore:user5']\n+    },\n+    readAccess: {\n+        public: false\n+    }\n+});\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'description': 'Some exciting content is stored here',\n+    'language': 'no',\n+    'permissions': {\n+        'owner': [\n+            'user:mystore:user1'\n+        ],\n+        'editor': [\n+            'user:mystore:user2'\n+        ],\n+        'author': [\n+            'user:mystore:user3'\n+        ],\n+        'contributor': [\n+            'user:mystore:user4'\n+        ],\n+        'viewer': [\n+            'user:mystore:user5'\n+        ]\n+    },\n+    readAccess: {\n+        'public': false\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');\n+var contextLib = require('/lib/xp/context');\n+\n+var createProject = function () {\n+    return projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+}", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDI1OA==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590258", "bodyText": "Issue found: Strings must use singlequote.", "author": "jsi", "createdAt": "2020-05-13T16:57:02Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/delete.js", "diffHunk": "@@ -0,0 +1,28 @@\n+// BEGIN\n+// Deletes an existing content project\n+var projectLib = require('/lib/xp/project');\n+var result = projectLib.delete({\n+    id: 'my-project'\n+});\n+// END\n+\n+// BEGIN\n+// Deletes an existing content project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');\n+var contextLib = require('/lib/xp/context');\n+\n+var deleteProject = function () {\n+    return projectLib.delete({\n+        id: 'my-project'\n+    });\n+}\n+\n+var result = contextLib.run({\n+    principals: [\"role:system.admin\"]", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDI3Ng==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590276", "bodyText": "Issue found: 'result' is already defined.", "author": "jsi", "createdAt": "2020-05-13T16:57:04Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/delete.js", "diffHunk": "@@ -0,0 +1,28 @@\n+// BEGIN\n+// Deletes an existing content project\n+var projectLib = require('/lib/xp/project');\n+var result = projectLib.delete({\n+    id: 'my-project'\n+});\n+// END\n+\n+// BEGIN\n+// Deletes an existing content project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');\n+var contextLib = require('/lib/xp/context');\n+\n+var deleteProject = function () {\n+    return projectLib.delete({\n+        id: 'my-project'\n+    });\n+}\n+\n+var result = contextLib.run({", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDI5Ng==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590296", "bodyText": "Issue found: 'expected' is already defined.", "author": "jsi", "createdAt": "2020-05-13T16:57:05Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/create.js", "diffHunk": "@@ -0,0 +1,96 @@\n+// BEGIN\n+// Creates a Content Project with minimal properties\n+var projectLib = require('/lib/xp/project');\n+try {\n+    var project = projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+} catch (e) {\n+    log.error('Failed to create a project: ' + e);\n+}\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'permissions': [],\n+    'readAccess': {\n+        'public': true\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project with extended properties\n+var projectLib = require('/lib/xp/project');\n+var project = projectLib.create({\n+    id: 'my-project',\n+    displayName: 'My Content Project',\n+    description: 'Some exciting content is stored here',\n+    language: 'no',\n+    permissions: {\n+        owner: ['user:mystore:user1'],\n+        editor: ['user:mystore:user2'],\n+        author: ['user:mystore:user3'],\n+        contributor: ['user:mystore:user4'],\n+        viewer: ['user:mystore:user5']\n+    },\n+    readAccess: {\n+        public: false\n+    }\n+});\n+// END\n+\n+// BEGIN\n+var expected = {", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDMwNw==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590307", "bodyText": "Issue found: 'project' is already defined.", "author": "jsi", "createdAt": "2020-05-13T16:57:06Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/create.js", "diffHunk": "@@ -0,0 +1,96 @@\n+// BEGIN\n+// Creates a Content Project with minimal properties\n+var projectLib = require('/lib/xp/project');\n+try {\n+    var project = projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+} catch (e) {\n+    log.error('Failed to create a project: ' + e);\n+}\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'permissions': [],\n+    'readAccess': {\n+        'public': true\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project with extended properties\n+var projectLib = require('/lib/xp/project');\n+var project = projectLib.create({", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDMxNw==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590317", "bodyText": "Issue found: Strings must use singlequote.", "author": "jsi", "createdAt": "2020-05-13T16:57:07Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/create.js", "diffHunk": "@@ -0,0 +1,96 @@\n+// BEGIN\n+// Creates a Content Project with minimal properties\n+var projectLib = require('/lib/xp/project');\n+try {\n+    var project = projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+} catch (e) {\n+    log.error('Failed to create a project: ' + e);\n+}\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'permissions': [],\n+    'readAccess': {\n+        'public': true\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project with extended properties\n+var projectLib = require('/lib/xp/project');\n+var project = projectLib.create({\n+    id: 'my-project',\n+    displayName: 'My Content Project',\n+    description: 'Some exciting content is stored here',\n+    language: 'no',\n+    permissions: {\n+        owner: ['user:mystore:user1'],\n+        editor: ['user:mystore:user2'],\n+        author: ['user:mystore:user3'],\n+        contributor: ['user:mystore:user4'],\n+        viewer: ['user:mystore:user5']\n+    },\n+    readAccess: {\n+        public: false\n+    }\n+});\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'description': 'Some exciting content is stored here',\n+    'language': 'no',\n+    'permissions': {\n+        'owner': [\n+            'user:mystore:user1'\n+        ],\n+        'editor': [\n+            'user:mystore:user2'\n+        ],\n+        'author': [\n+            'user:mystore:user3'\n+        ],\n+        'contributor': [\n+            'user:mystore:user4'\n+        ],\n+        'viewer': [\n+            'user:mystore:user5'\n+        ]\n+    },\n+    readAccess: {\n+        'public': false\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');\n+var contextLib = require('/lib/xp/context');\n+\n+var createProject = function () {\n+    return projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+}\n+\n+var project = contextLib.run({\n+    principals: [\"role:system.admin\"]", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDMzMA==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590330", "bodyText": "Issue found: 'projectLib' is already defined.", "author": "jsi", "createdAt": "2020-05-13T16:57:08Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/modify.js", "diffHunk": "@@ -0,0 +1,44 @@\n+// BEGIN\n+// Modifies an existing content project\n+var projectLib = require('/lib/xp/project');\n+\n+var project = projectLib.modify({\n+    id: 'my-project',\n+    displayName: 'New project name',\n+    description: 'New project description',\n+    language: 'en'\n+});\n+// END\n+\n+// BEGIN\n+// Modifies an existing content project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDMzOA==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590338", "bodyText": "Issue found: 'project' is already defined.", "author": "jsi", "createdAt": "2020-05-13T16:57:09Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/modify.js", "diffHunk": "@@ -0,0 +1,44 @@\n+// BEGIN\n+// Modifies an existing content project\n+var projectLib = require('/lib/xp/project');\n+\n+var project = projectLib.modify({\n+    id: 'my-project',\n+    displayName: 'New project name',\n+    description: 'New project description',\n+    language: 'en'\n+});\n+// END\n+\n+// BEGIN\n+// Modifies an existing content project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');\n+var contextLib = require('/lib/xp/context');\n+\n+var modifyProject = function () {\n+    return projectLib.modify({\n+        id: 'my-project',\n+        displayName: 'New project name',\n+        description: 'New project description',\n+        language: 'en'\n+    });\n+}\n+\n+var project = contextLib.run({", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDM1Mw==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590353", "bodyText": "Issue found: 'projectLib' is already defined.", "author": "jsi", "createdAt": "2020-05-13T16:57:10Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/delete.js", "diffHunk": "@@ -0,0 +1,28 @@\n+// BEGIN\n+// Deletes an existing content project\n+var projectLib = require('/lib/xp/project');\n+var result = projectLib.delete({\n+    id: 'my-project'\n+});\n+// END\n+\n+// BEGIN\n+// Deletes an existing content project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDM2Mg==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590362", "bodyText": "Issue found: Unexpected use of undefined.", "author": "jsi", "createdAt": "2020-05-13T16:57:11Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/project.js", "diffHunk": "@@ -0,0 +1,200 @@\n+/**\n+ * Functions to manage Content Projects.\n+ *\n+ * @example\n+ * var projectLib = require('/lib/xp/project');\n+ *\n+ * @module project\n+ */\n+\n+/* global __ */\n+\n+function required(params, name) {\n+    var value = params[name];\n+    if (value === undefined) {\n+        throw 'Parameter \\'' + name + '\\' is required';\n+    }\n+\n+    return value;\n+}\n+\n+function nullOrValue(value) {\n+    if (value === undefined) {", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDM3MQ==", "url": "https://github.com/enonic/xp/pull/8070#discussion_r424590371", "bodyText": "Issue found: 'project' is already defined.", "author": "jsi", "createdAt": "2020-05-13T16:57:12Z", "path": "modules/lib/lib-project/src/main/resources/lib/xp/examples/project/create.js", "diffHunk": "@@ -0,0 +1,96 @@\n+// BEGIN\n+// Creates a Content Project with minimal properties\n+var projectLib = require('/lib/xp/project');\n+try {\n+    var project = projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+} catch (e) {\n+    log.error('Failed to create a project: ' + e);\n+}\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'permissions': [],\n+    'readAccess': {\n+        'public': true\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project with extended properties\n+var projectLib = require('/lib/xp/project');\n+var project = projectLib.create({\n+    id: 'my-project',\n+    displayName: 'My Content Project',\n+    description: 'Some exciting content is stored here',\n+    language: 'no',\n+    permissions: {\n+        owner: ['user:mystore:user1'],\n+        editor: ['user:mystore:user2'],\n+        author: ['user:mystore:user3'],\n+        contributor: ['user:mystore:user4'],\n+        viewer: ['user:mystore:user5']\n+    },\n+    readAccess: {\n+        public: false\n+    }\n+});\n+// END\n+\n+// BEGIN\n+var expected = {\n+    'id': 'my-project',\n+    'displayName': 'My Content Project',\n+    'description': 'Some exciting content is stored here',\n+    'language': 'no',\n+    'permissions': {\n+        'owner': [\n+            'user:mystore:user1'\n+        ],\n+        'editor': [\n+            'user:mystore:user2'\n+        ],\n+        'author': [\n+            'user:mystore:user3'\n+        ],\n+        'contributor': [\n+            'user:mystore:user4'\n+        ],\n+        'viewer': [\n+            'user:mystore:user5'\n+        ]\n+    },\n+    readAccess: {\n+        'public': false\n+    }\n+};\n+// END\n+\n+// BEGIN\n+// Creates a Content Project inside context with `system.admin` role\n+var projectLib = require('/lib/xp/project');\n+var contextLib = require('/lib/xp/context');\n+\n+var createProject = function () {\n+    return projectLib.create({\n+        id: 'my-project',\n+        displayName: 'My Content Project',\n+        readAccess: {\n+            public: true\n+        }\n+    });\n+}\n+\n+var project = contextLib.run({", "originalCommit": "9b568d3e383365b4ed6f99be98321d86d7c8f9fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}