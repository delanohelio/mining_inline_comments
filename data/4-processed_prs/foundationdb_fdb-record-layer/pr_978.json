{"pr_number": 978, "pr_title": "Fixes #977: RecordMetaData#recordTypesForIndex is N^2 with Universal index probing...", "pr_createdAt": "2020-06-17T23:56:44Z", "pr_url": "https://github.com/FoundationDB/fdb-record-layer/pull/978", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r441900679", "bodyText": "Would it make sense to cache the result of this function back inside the Index itself?\nFor most indexes, it will be the singleton, so that's not much more space and the meta-data has a reasonably long lifetime.", "author": "MMcM", "createdAt": "2020-06-18T00:16:25Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,7 +372,7 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n+        if (hasUniversalIndex(index.getName())) {\n             return getRecordTypes().values();\n         }\n         List<RecordType> result = new ArrayList<>();", "originalCommit": "ce0306d56913301c679cfb646b5bce047b14b8ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY4MTYyNQ==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r443681625", "bodyText": "I can take a look at @MMcM", "author": "jleach4", "createdAt": "2020-06-22T16:26:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE4MTk5Nw==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r445181997", "bodyText": "@MMcM I can cache it back but it seems out of place (universal logic is non-existent on the Index).  Let me know if you need me to do that.", "author": "jleach4", "createdAt": "2020-06-24T21:28:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE4NzYyNw==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r445187627", "bodyText": "Alternatively, instead of putting it in the index, it could go in the meta-data, constructed by the builder so that the Index doesn't need to have any notion of what types exist in the meta-data", "author": "alecgrieser", "createdAt": "2020-06-24T21:40:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5MDYzNA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r445190634", "bodyText": "Yes, caching in the RecordMetaData itself work just fine. There is precedent for caching in the individual meta-data objects with things like RecordType.recordTypeKey.", "author": "MMcM", "createdAt": "2020-06-24T21:47:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NDQ0MQ==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449184441", "bodyText": "@MMcM and @alecgrieser is this still true for an Index?\n   @Override\n    public int hashCode() {\n        // Within the context of a single RecordMetaData, this should be sufficient\n        return Objects.hash(name, type);\n    }", "author": "jleach4", "createdAt": "2020-07-02T18:00:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4ODQyNA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449188424", "bodyText": "That would still be true, I suppose, though in a single RecordMetaData, name.hashCode() would also be sufficient, I would think", "author": "alecgrieser", "createdAt": "2020-07-02T18:08:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}], "type": "inlineReview"}, {"oid": "8974959948d6699ca281b181bdd561cd9b8ddab9", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/8974959948d6699ca281b181bdd561cd9b8ddab9", "message": "Fixes #977: RecordMetaData#recordTypesForIndex is N^2 with Universal Index probing.", "committedDate": "2020-06-22T16:53:46Z", "type": "forcePushed"}, {"oid": "79ecda515f926d11d7d5e26f32574c371637fdfa", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/79ecda515f926d11d7d5e26f32574c371637fdfa", "message": "Fixes #977: RecordMetaData#recordTypesForIndex is N^2 with Universal Index probing.", "committedDate": "2020-06-24T21:25:10Z", "type": "forcePushed"}, {"oid": "3efad62049bfd8f8c0039d21200662012a0a7761", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/3efad62049bfd8f8c0039d21200662012a0a7761", "message": "Fixes #977: RecordMetaData#recordTypesForIndex is N^2 with Universal Index probing.", "committedDate": "2020-07-02T18:34:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMTQ2OA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449201468", "bodyText": "Does this need to be a ConcurrentHashMap? Alternatively, this could be populated at meta-data build time (for every index), I suppose, and then it's immutable, so concurrency doesn't matter.", "author": "alecgrieser", "createdAt": "2020-07-02T18:36:09Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -118,6 +119,7 @@ protected RecordMetaData(@Nonnull Descriptors.FileDescriptor recordsDescriptor,\n         this.usesSubspaceKeyCounter = usesSubspaceKeyCounter;\n         this.recordCountKey = recordCountKey;\n         this.usesLocalRecordsDescriptor = usesLocalRecordsDescriptor;\n+        this.recordTypesForIndex = new HashMap<>();", "originalCommit": "3efad62049bfd8f8c0039d21200662012a0a7761", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMzYwMQ==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449203601", "bodyText": "@alecgrieser Fixing...", "author": "jleach4", "createdAt": "2020-07-02T18:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMTQ2OA=="}], "type": "inlineReview"}, {"oid": "1964f32f2e7381a94dbf32954a018e2703054f09", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/1964f32f2e7381a94dbf32954a018e2703054f09", "message": "Fixes #977: RecordMetaData#recordTypesForIndex is N^2 with Universal Index probing.", "committedDate": "2020-07-02T18:40:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNDg2MQ==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449204861", "bodyText": "Should probably be MapsUtils.computeIfAbsent to avoid the lockup bug", "author": "alecgrieser", "createdAt": "2020-07-02T18:43:21Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,25 +375,28 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n-            return getRecordTypes().values();\n-        }\n-        List<RecordType> result = new ArrayList<>();\n-        for (RecordType recordType : getRecordTypes().values()) {\n-            if (recordType.getIndexes().contains(index)) {\n-                return Collections.singletonList(recordType);\n-            } else if (recordType.getMultiTypeIndexes().contains(index)) {\n-                result.add(recordType);\n-            }\n-        }\n-        for (SyntheticRecordType<?> recordType : getSyntheticRecordTypes().values()) {\n-            if (recordType.getIndexes().contains(index)) {\n-                return Collections.singletonList(recordType);\n-            } else if (recordType.getMultiTypeIndexes().contains(index)) {\n-                result.add(recordType);\n+        return recordTypesForIndex.computeIfAbsent(index, idx -> {", "originalCommit": "1964f32f2e7381a94dbf32954a018e2703054f09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNzE2Mw==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449207163", "bodyText": "ah yes...", "author": "jleach4", "createdAt": "2020-07-02T18:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNDg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNzIxNA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449207214", "bodyText": "fixing...", "author": "jleach4", "createdAt": "2020-07-02T18:48:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNDg2MQ=="}], "type": "inlineReview"}, {"oid": "f3e1594bde696f8ed59f989476944a5c4b9404f4", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/f3e1594bde696f8ed59f989476944a5c4b9404f4", "message": "Fixes #977: RecordMetaData#recordTypesForIndex is N^2 with Universal Index probing.", "committedDate": "2020-07-02T18:47:46Z", "type": "commit"}, {"oid": "f3e1594bde696f8ed59f989476944a5c4b9404f4", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/f3e1594bde696f8ed59f989476944a5c4b9404f4", "message": "Fixes #977: RecordMetaData#recordTypesForIndex is N^2 with Universal Index probing.", "committedDate": "2020-07-02T18:47:46Z", "type": "forcePushed"}]}