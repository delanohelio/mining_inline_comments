{"pr_number": 976, "pr_title": "Update main branch to 2.9", "pr_createdAt": "2020-06-17T22:49:36Z", "pr_url": "https://github.com/FoundationDB/fdb-record-layer/pull/976", "timeline": [{"oid": "1f38e32570a1e8d32cb4d26fa122c49808085b5f", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/1f38e32570a1e8d32cb4d26fa122c49808085b5f", "message": "Create 2.9 develop branch", "committedDate": "2019-11-21T22:10:00Z", "type": "commit"}, {"oid": "baba6e9c55c7b1cd093998eb81b3ca54f606b019", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/baba6e9c55c7b1cd093998eb81b3ca54f606b019", "message": "Resolves #702: Increase required FDB version to 6.2\n\nThis increases the required FDB client and server version to 6.2, and it updates our build infrastructure to use that newer version. The main feature that this will enable is it will allow us to use the new `getApproximateSize` feature in 6.2, but the work to use this in, say, index builds has not been done.", "committedDate": "2019-11-22T00:46:28Z", "type": "commit"}, {"oid": "11a3fa67ce1edc66efb1c29c21967cda40ca8052", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/11a3fa67ce1edc66efb1c29c21967cda40ca8052", "message": "Merge pull request #778 from alecgrieser/00702-increase-fdb-version-to-6.2\n\nResolves #702: Increase required FDB version to 6.2", "committedDate": "2019-12-02T18:07:21Z", "type": "commit"}, {"oid": "5c9e69e4d1750afec777e9d082a49f115336e548", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/5c9e69e4d1750afec777e9d082a49f115336e548", "message": "Merge branch 'master' into merge-master-to-2.9\n\nReleaseNotes hopefully correctly merged...\nFDBDatabaseFactory was just new fields near the change\nto use FDB api version 620\nI also had to update InstrumentedTransaction to implement\nthe new getApproximateSize method", "committedDate": "2020-04-17T23:31:47Z", "type": "commit"}, {"oid": "ed91a642e0fc9aecbd22cf5887372f1668b23832", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/ed91a642e0fc9aecbd22cf5887372f1668b23832", "message": "Merge pull request #909 from ScottDugas/merge-master-to-2.9\n\nMerge master to 2.9", "committedDate": "2020-04-20T17:52:29Z", "type": "commit"}, {"oid": "1fa523c6b9983dba379e073279fab0e20fabefa6", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/1fa523c6b9983dba379e073279fab0e20fabefa6", "message": "Resolves #910: Take Build Docker Java version to 11", "committedDate": "2020-04-21T23:03:07Z", "type": "commit"}, {"oid": "f8db5f471e5f4a40862b8c51f35ebe9ac815630b", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/f8db5f471e5f4a40862b8c51f35ebe9ac815630b", "message": "Resolves #325: Update javadoc references to asyncToSync after Java 11 upgrade", "committedDate": "2020-04-21T23:03:12Z", "type": "commit"}, {"oid": "8b3aa519d3e818cb5a3d19b0c31cd08e89b7af19", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/8b3aa519d3e818cb5a3d19b0c31cd08e89b7af19", "message": "Merge pull request #911 from alecgrieser/00910-build-docker-to-11\n\nResolves #910: Take build Docker Java version to 11", "committedDate": "2020-04-27T14:46:47Z", "type": "commit"}, {"oid": "a50eeb929b26a1ddae4105ebceb2844d75942240", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/a50eeb929b26a1ddae4105ebceb2844d75942240", "message": "Resolves #900: Gradle dependency refresh\n\nThis updates most of our dependencies to their most recent versions, just to stay current.", "committedDate": "2020-04-30T23:33:29Z", "type": "commit"}, {"oid": "6eca2cdc4304065d29fdb9df8721ce05e21657a1", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/6eca2cdc4304065d29fdb9df8721ce05e21657a1", "message": "Fixes #901: False positive of uniqueness violations prevents building indexes (#902)\n\n* Fixes #901: False positive of uniqueness violations prevents building indexes\r\n\r\n* Move uniqueness APIs down to StandardIndexMaintainer & Fixed a bug in removeUniquenessViolationsAsync & Improved tests\r\n\r\nThe main problem fixed by this PR is that: `FDBRecordStore.resolveUniquenessViolation` used to be relied on to delete the last uniqueness violation entry when delete the second last one. But this is not the only way the uniqueness violation is resolved. It doesn't cover the case that the violation is resolved when record is deleted organically. To resolve this problem, now it will delete the last entry as part of deleting records (See `removeUniquenessViolationsAsync`).\r\n\r\nThis change also tries to consolidate uniqueness logic at `StandardIndexMaintainer` level:\r\n- `FDBRecordStore .addUniquenessCheck`  -> `StandardIndexMaintainer.checkUniqueness`\r\n- `IndexMaintainer.updateUniquenessViolations` -> `StandardIndexMaintainer .addUniquenessViolations` and `StandardIndexMaintainer.removeUniquenessViolationsAsync`", "committedDate": "2020-05-21T00:19:48Z", "type": "commit"}, {"oid": "ff98f8b7b64ce2d1a42b3dfaa409cfa744b48fe8", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/ff98f8b7b64ce2d1a42b3dfaa409cfa744b48fe8", "message": "Merge pull request #912 from alecgrieser/00900-dependency-upgrade\n\nResolves #900: Gradle dependency refresh", "committedDate": "2020-05-21T21:47:37Z", "type": "commit"}, {"oid": "200702fff640eba3c07a121bd4d934ffa1b6f956", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/200702fff640eba3c07a121bd4d934ffa1b6f956", "message": "Fixes #952: Local version cache is keyed only by Tuple (i.e., primary key) not subspace\n\nThis changes the local version cache to be keyed by `byte[]` rather than by `Tuple`. Then the exact key (in the database) is used to represent the cache entry rather than the record's primary key. This allows multiple stores to be opened in the same transaction and for them to interact with versioned records with the same primary key in each store without having cache entries from one store pollute the cache entries of the other.\n\nThis meant changing the API. The previous API was just wrong, in that there was absolutely no way to protect oneself from the bug identified in #952, so it has just been removed (despite the fact that this violates are claims of API stability). These APIs probably should have been marked INTERNAL anyway, but I believe they pre-date the API stability annotations, which is why they weren't.", "committedDate": "2020-05-28T20:16:51Z", "type": "commit"}, {"oid": "0716849c7c0df4876ff88c1e601e873d122067de", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/0716849c7c0df4876ff88c1e601e873d122067de", "message": "Merge pull request #955 from alecgrieser/00952-local-version-cache-key\n\nFixes #952: Local version cache is keyed only by Tuple (i.e., primary key) not subspace", "committedDate": "2020-06-17T16:12:14Z", "type": "commit"}, {"oid": "f034a282e40428c450e82cd72d902fd73b6e5cdb", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/f034a282e40428c450e82cd72d902fd73b6e5cdb", "message": "Fixes #974: OrElseCursor doesn't properly support continuations.\n\nUse a new structured continuation object and protobuf serialization to\nrecord the complete state of the OrElseCursor, including which branch\nwas chosen. Rewrite OrElseCursor's logic in a simpler state-machine\nstyle, which makes it easy to resume the cursor before it has made a\ndecision about which branch to take.\n\nTo avoid problems like we saw with the FlatMapPipelinedCursor's\ncontinuations, deprecate the RecordCursor.orElse() fluent method and\nreplace it with a static method that interprets the continuation.\n\nBecause this changes the continuation format, this is a breaking change.", "committedDate": "2020-06-17T21:46:26Z", "type": "commit"}, {"oid": "9eb96fcb145d5b7b12f498077e8d271ae84014e4", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/9eb96fcb145d5b7b12f498077e8d271ae84014e4", "message": "Merge pull request #975 from nschiefer/or-else-continuation\n\nFixes #974: OrElseCursor doesn't properly support continuations.", "committedDate": "2020-06-17T22:17:59Z", "type": "commit"}, {"oid": "64b5d453036a92fb26872e3e36d062bf42c15621", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/64b5d453036a92fb26872e3e36d062bf42c15621", "message": "Resolves #967: Upgrade guava and protobuf versions for 2.9\n\nThere is only one breaking change in Guava 29.0 that isn't in 28.2, the previous version, according to its release notes, and it has to do with GWT-RPC code: https://github.com/google/guava/releases/tag/v29.0 We don't use the guava-gwt code directly, so the only people who would be affected would be a consumer of this library who also uses guava-gwt.\n\nNo callouts in the proto3 versions since 2.6.0 for Java that I could find that suggest that upgrading to 3.12.2 wouldn't be a good idea. I had thought that this version might allow us to remove the `-PcoreNotStrict` stuff, as I thought I saw some chatter about deprecation warnings being fixed in some newer 3.x protoc versions, but it appears that it's still an issue. I think this is what we're hitting: https://github.com/protocolbuffers/protobuf/issues/7271 (See also: https://github.com/protocolbuffers/protobuf/issues/7433.)\n\nThis resolves #967.", "committedDate": "2020-06-17T22:18:57Z", "type": "commit"}, {"oid": "f88374976b08d9a5149182c9a9c197228da59d05", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/f88374976b08d9a5149182c9a9c197228da59d05", "message": "Merge pull request #968 from alecgrieser/00967-update-proto-and-guava-2.9\n\nResolves #967: Upgrade guava and protobuf versions for 2.9", "committedDate": "2020-06-17T22:43:41Z", "type": "commit"}, {"oid": "1b260d4b64f42b44363a8ff7b5ce281702ca6920", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/1b260d4b64f42b44363a8ff7b5ce281702ca6920", "message": "Merge remote-tracking branch 'upstream/fdb-record-layer-develop-2.9' into merge-2.9", "committedDate": "2020-06-17T22:45:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3NTkwMg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/976#discussion_r441875902", "bodyText": "Uhm, that looks suspicious.", "author": "MMcM", "createdAt": "2020-06-17T22:51:34Z", "path": "docs/ReleaseNotes.md", "diffHunk": "@@ -100,6 +115,8 @@ The `FDBDatabase::getReadVersion()` method has been replaced with the `FDBRecord\n \n * **Bug fix** Opening a store with `ERROR_IF_NO_INFO_AND_HAS_RECORDS_OR_INDEXES` now allows opening a record store if the data is in the `INDEX_BUILD_SPACE` [(Issue #941)](https://github.com/FoundationDB/fdb-record-layer/issues/941)\n \n+=======\n+>>>>>>> upstream/fdb-record-layer-develop-2.9", "originalCommit": "1b260d4b64f42b44363a8ff7b5ce281702ca6920", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3NjE3Ng==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/976#discussion_r441876176", "bodyText": "Oh, whoops. Good point", "author": "alecgrieser", "createdAt": "2020-06-17T22:52:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3NTkwMg=="}], "type": "inlineReview"}, {"oid": "3a31c98d9247c34b381aab7deabb22c66176bcd9", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/3a31c98d9247c34b381aab7deabb22c66176bcd9", "message": "fix up a merge that did not quite include everything correctly", "committedDate": "2020-06-17T23:12:30Z", "type": "commit"}, {"oid": "bb4b58d47cdedddb64e9a148a2fb9043c39bafa5", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/bb4b58d47cdedddb64e9a148a2fb9043c39bafa5", "message": "resolve merge skew in `RankIndexMaintainer` between 2.8 and 2.9\n\nOne change, on 2.8 to resolve #482, conflicted with a change on 2.9 to resolve #901, as they both interacted with a list to store futures. This changes the code to use two separate data structures for the two use cases (within the method) to handle both.", "committedDate": "2020-06-17T23:29:29Z", "type": "commit"}, {"oid": "bb4b58d47cdedddb64e9a148a2fb9043c39bafa5", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/bb4b58d47cdedddb64e9a148a2fb9043c39bafa5", "message": "resolve merge skew in `RankIndexMaintainer` between 2.8 and 2.9\n\nOne change, on 2.8 to resolve #482, conflicted with a change on 2.9 to resolve #901, as they both interacted with a list to store futures. This changes the code to use two separate data structures for the two use cases (within the method) to handle both.", "committedDate": "2020-06-17T23:29:29Z", "type": "forcePushed"}]}