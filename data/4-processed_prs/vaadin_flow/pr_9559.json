{"pr_number": 9559, "pr_title": "feat: document level npm css", "pr_createdAt": "2020-12-03T07:53:44Z", "pr_url": "https://github.com/vaadin/flow/pull/9559", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwNjM0Mw==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535206343", "bodyText": "(stupid question): I cannot figure out where the target comes from to the generated file", "author": "pleku", "createdAt": "2020-12-03T12:58:44Z", "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);", "originalCommit": "0c229a34ce321766f4caa68c0cd921df7073d6d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIxNDI3NA==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535214274", "bodyText": "The generated theme.js will contain these inside export const applyTheme = (target) => {\nwhich is called from the generated-flow-imports.js with\nimport {applyTheme} from 'theme/theme-generated.js';\napplyTheme(document);\n\n=_= I can't compute today.", "author": "caalador", "createdAt": "2020-12-03T13:11:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwNjM0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535208502", "bodyText": "While this is the same as to the global files, maybe the reason why this needs to be injected to both could be documented here", "author": "pleku", "createdAt": "2020-12-03T13:02:04Z", "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -78,6 +79,15 @@ function generateThemeFile(themeFolder, themeName) {\n     globalCssCode.push(`injectGlobalCss(${variable}.toString(), target);\\n`);\n   });\n \n+  let i = 0;\n+  if (themeProperties.documentCss) {\n+    themeProperties.documentCss.forEach((cssImport) => {\n+      const variable = 'module' + i++;\n+      imports.push(`import ${variable} from '${cssImport}';\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), target);\\n`);\n+      globalCssCode.push(`    injectGlobalCss(${variable}.toString(), document);\\n`);", "originalCommit": "0c229a34ce321766f4caa68c0cd921df7073d6d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIxNDMxMg==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535214312", "bodyText": "it should perhaps not need to. will verify once we get the resource PR merged.", "author": "caalador", "createdAt": "2020-12-03T13:11:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2NTU4NQ==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535865585", "bodyText": "I guess the document level target is for webcomponents that need to have the css inside the shadowroot, but also on the document.\nLet's have this PR on hold as this is apparently a embedded feature as a normal application always injects to document.", "author": "caalador", "createdAt": "2020-12-04T06:26:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAxOTkwMg==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r539019902", "bodyText": "I'm not certain about the document level css feature. On the Embedded component only adding it to the global scope makes the css not apply into the embedded component, but adding it only to the shadow target works fine.\nAnother issue is that the shadow targeted css bleeds out from the shadow to the global space.\nFor non embedded the issue doesn't exist as they by default target document", "author": "caalador", "createdAt": "2020-12-09T05:38:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAyODQ5Nw==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545028497", "bodyText": "The documentCss needs to be injected both to the document root and to the shadow root as chrome has a bug in having font-face go into shadowRoot Issue 336876: @font-face definitions in shadowRoot cannot be used within the shadowRoot\nSo it needs to be defined on both levels.", "author": "caalador", "createdAt": "2020-12-17T11:47:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1MDk5NA==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545050994", "bodyText": "Can you add the issue reference as a comment to the code ?", "author": "pleku", "createdAt": "2020-12-17T12:26:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1ODY5Ng==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545058696", "bodyText": "Added.", "author": "caalador", "createdAt": "2020-12-17T12:39:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODUwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwOTE4OQ==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r535209189", "bodyText": "I thought this fort was a typo first \ud83e\udd26", "author": "pleku", "createdAt": "2020-12-03T13:03:20Z", "path": "flow-tests/test-themes/frontend/theme/app-theme/theme.json", "diffHunk": "@@ -1,4 +1,5 @@\n {\n+  \"documentCss\": [\"@fortawesome/fontawesome-free/css/all.css\"],", "originalCommit": "0c229a34ce321766f4caa68c0cd921df7073d6d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyNjU0Mg==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r540126542", "bodyText": "Same for me ;) I asked Google and wondered it's indeed fort, not font", "author": "mshabarov", "createdAt": "2020-12-10T12:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwOTE4OQ=="}], "type": "inlineReview"}, {"oid": "d77623c7f25f882c6512aebd8b08155f5d604c6e", "url": "https://github.com/vaadin/flow/commit/d77623c7f25f882c6512aebd8b08155f5d604c6e", "message": "feat: document level npm css\n\nNow there is a possibility to use the\n\"documentCss\" key in theme.json to\ninject npm css into the document rool level\nelement.\n\nThis is mostly for embedded web components\nas they do not target document by default\n\nFixes #9533", "committedDate": "2020-12-09T05:30:45Z", "type": "commit"}, {"oid": "d77623c7f25f882c6512aebd8b08155f5d604c6e", "url": "https://github.com/vaadin/flow/commit/d77623c7f25f882c6512aebd8b08155f5d604c6e", "message": "feat: document level npm css\n\nNow there is a possibility to use the\n\"documentCss\" key in theme.json to\ninject npm css into the document rool level\nelement.\n\nThis is mostly for embedded web components\nas they do not target document by default\n\nFixes #9533", "committedDate": "2020-12-09T05:30:45Z", "type": "forcePushed"}, {"oid": "d92c5b4b6ef1512212d66c8b3781567a47cb1c07", "url": "https://github.com/vaadin/flow/commit/d92c5b4b6ef1512212d66c8b3781567a47cb1c07", "message": "Dont allow faulty appshell configuration", "committedDate": "2020-12-09T05:37:24Z", "type": "commit"}, {"oid": "1c05dc10ace63969999e8c6823b0201eead19b00", "url": "https://github.com/vaadin/flow/commit/1c05dc10ace63969999e8c6823b0201eead19b00", "message": "Fix test expectation", "committedDate": "2020-12-09T06:19:29Z", "type": "commit"}, {"oid": "3ec5f8868660c4bf45248741c4f1db93dfe55b84", "url": "https://github.com/vaadin/flow/commit/3ec5f8868660c4bf45248741c4f1db93dfe55b84", "message": "Merge branch 'master' into issues/9533_document_level_css\n\n# Conflicts:\n#\tflow-server/src/main/resources/plugins/application-theme-plugin/package.json\n#\tflow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js\n#\tflow-server/src/main/resources/webpack.generated.js\n#\tflow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "committedDate": "2020-12-14T11:13:17Z", "type": "commit"}, {"oid": "750c24d43efbac89e9eb78ad881859c06398960f", "url": "https://github.com/vaadin/flow/commit/750c24d43efbac89e9eb78ad881859c06398960f", "message": "Merge branch 'master' into issues/9533_document_level_css\n\n# Conflicts:\n#\tflow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "committedDate": "2020-12-17T07:43:11Z", "type": "commit"}, {"oid": "bc73782cec69271b4bc68628ffc36f11fa129d97", "url": "https://github.com/vaadin/flow/commit/bc73782cec69271b4bc68628ffc36f11fa129d97", "message": "Use more targeted bookkeeping for globalCss\n\nHave a full map on where the global css\nhas been injected to so that if we add for\nshadow roots we don't add to document,\nbut we are able to add to other shadow roots.", "committedDate": "2020-12-17T09:37:27Z", "type": "commit"}, {"oid": "55b105123ba7231b005edfa9a656a30b727e816e", "url": "https://github.com/vaadin/flow/commit/55b105123ba7231b005edfa9a656a30b727e816e", "message": "Add comment on why we also inject to target", "committedDate": "2020-12-17T12:38:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3Nzc4Mw==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545077783", "bodyText": "Broken indent", "author": "pleku", "createdAt": "2020-12-17T13:10:21Z", "path": "flow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "diffHunk": "@@ -73,11 +68,34 @@ public void applicationTheme_GlobalCss_isUsedOnlyInEmbeddeComponent() {\n \n         Assert.assertNotEquals(\"Ostrich\", body.getCssValue(\"font-family\"));\n \n-        getDriver().get(getRootURL() + \"/VAADIN/static/themes/embedded-theme/img/bg.jpg\");\n+        Assert\n+            .assertEquals(\"Embedded style should not match external component\",\n+                \"rgba(0, 0, 255, 1)\",\n+                $(SpanElement.class).id(\"overflow\").getCssValue(\"color\"));\n+                getDriver().get(getRootURL() + \"/themes/embedded-theme/img/bg.jpg\");", "originalCommit": "bc73782cec69271b4bc68628ffc36f11fa129d97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3OTU5MQ==", "url": "https://github.com/vaadin/flow/pull/9559#discussion_r545079591", "bodyText": "I'll fix it if the build breaks.", "author": "caalador", "createdAt": "2020-12-17T13:13:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3Nzc4Mw=="}], "type": "inlineReview"}]}