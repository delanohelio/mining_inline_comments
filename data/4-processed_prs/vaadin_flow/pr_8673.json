{"pr_number": 8673, "pr_title": "fix: use default JSR-380 error messages in client-side validators", "pr_createdAt": "2020-07-01T11:22:35Z", "pr_url": "https://github.com/vaadin/flow/pull/8673", "timeline": [{"oid": "63d2388aa9ac8e5de0b057883f48d5ec29c694ba", "url": "https://github.com/vaadin/flow/commit/63d2388aa9ac8e5de0b057883f48d5ec29c694ba", "message": "fix: use default JSR-380 error messages\n\n - the default error messages in the built-in client-side validators are  interpolated in the same way as on the server-side\n - custom error messages (e.g. `@Size(message = \"my message {min} {max}\")` are not interpolated\n\nFixes #8385", "committedDate": "2020-07-01T11:00:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3NTA3Nw==", "url": "https://github.com/vaadin/flow/pull/8673#discussion_r448975077", "bodyText": "Why isn't this method name prefixed with underscore like the similar helpers above?", "author": "Haprog", "createdAt": "2020-07-02T12:47:01Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "diffHunk": "@@ -145,25 +230,41 @@ export class Digits extends AbstractValidator<string> {\n }\n \n export class Past extends AbstractValidator<any> {\n+  constructor(attrs?: ValidatorAttributes) {\n+    super({ message: 'must be a past date', ...attrs });\n+  }\n   validate = (value: any) => validator.isBefore(value);\n }\n export class PastOrPresent extends AbstractValidator<any> {\n+  constructor(attrs?: ValidatorAttributes) {\n+    super({ message: 'must be a date in the past or in the present', ...attrs });\n+  }\n   validate = () => { throw new Error('Form Validator for PastOrPresent not implemented yet') };\n }\n export class Future extends AbstractValidator<any> {\n+  constructor(attrs?: ValidatorAttributes) {\n+    super({ message: 'must be a future date', ...attrs });\n+  }\n   validate = (value: any) => validator.isAfter(value);\n }\n export class FutureOrPresent extends AbstractValidator<any> {\n+  constructor(attrs?: ValidatorAttributes) {\n+    super({ message: 'must be a date in the present or in the future', ...attrs });\n+  }\n   validate = () => { throw new Error('Form Validator for FutureOrPresent not implemented yet') };\n }\n \n+function regexp(attrs: PatternAttributes | string | RegExp) {", "originalCommit": "63d2388aa9ac8e5de0b057883f48d5ec29c694ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAwOTAxMg==", "url": "https://github.com/vaadin/flow/pull/8673#discussion_r449009012", "bodyText": "Good catch!", "author": "vlukashov", "createdAt": "2020-07-02T13:39:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3NTA3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3NjU0Nw==", "url": "https://github.com/vaadin/flow/pull/8673#discussion_r448976547", "bodyText": "This isn't exactly the same message as in https://beanvalidation.org/2.0/spec/#builtinconstraints where it is must match the following regular expression: {regexp} I think it would be clearer to use this longer version.", "author": "Haprog", "createdAt": "2020-07-02T12:49:39Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "diffHunk": "@@ -145,25 +230,41 @@ export class Digits extends AbstractValidator<string> {\n }\n \n export class Past extends AbstractValidator<any> {\n+  constructor(attrs?: ValidatorAttributes) {\n+    super({ message: 'must be a past date', ...attrs });\n+  }\n   validate = (value: any) => validator.isBefore(value);\n }\n export class PastOrPresent extends AbstractValidator<any> {\n+  constructor(attrs?: ValidatorAttributes) {\n+    super({ message: 'must be a date in the past or in the present', ...attrs });\n+  }\n   validate = () => { throw new Error('Form Validator for PastOrPresent not implemented yet') };\n }\n export class Future extends AbstractValidator<any> {\n+  constructor(attrs?: ValidatorAttributes) {\n+    super({ message: 'must be a future date', ...attrs });\n+  }\n   validate = (value: any) => validator.isAfter(value);\n }\n export class FutureOrPresent extends AbstractValidator<any> {\n+  constructor(attrs?: ValidatorAttributes) {\n+    super({ message: 'must be a date in the present or in the future', ...attrs });\n+  }\n   validate = () => { throw new Error('Form Validator for FutureOrPresent not implemented yet') };\n }\n \n+function regexp(attrs: PatternAttributes | string | RegExp) {\n+  return typeof attrs === 'string' ? new RegExp(attrs)\n+    : attrs instanceof RegExp ? attrs\n+      : typeof attrs.regexp === 'string' ? new RegExp(attrs.regexp) : attrs.regexp;\n+}\n+\n export class Pattern extends AbstractValidator<string> {\n   regexp: RegExp;\n   constructor(attrs: PatternAttributes | string | RegExp) {\n-    super(typeof attrs === 'string' || attrs instanceof RegExp ? {} : attrs);\n-    this.regexp = typeof attrs === 'string' ? new RegExp(attrs)\n-      : attrs instanceof RegExp ? attrs\n-        : typeof attrs.regexp === 'string' ? new RegExp(attrs.regexp) : attrs.regexp;\n+    super({ message: `must match \"${regexp(attrs)}\"`, ..._asValidatorAttributes(attrs) });", "originalCommit": "63d2388aa9ac8e5de0b057883f48d5ec29c694ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAwOTAzNg==", "url": "https://github.com/vaadin/flow/pull/8673#discussion_r449009036", "bodyText": "Nice catch! I copied the messages from the Hibernate implementation, and this one seems to differ from the spec :)\nhttps://github.com/hibernate/hibernate-validator/blob/master/engine/src/main/resources/org/hibernate/validator/ValidationMessages.properties#L19", "author": "vlukashov", "createdAt": "2020-07-02T13:39:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3NjU0Nw=="}], "type": "inlineReview"}, {"oid": "1f706c02fceebb17ce0d04d31cdeed7bc42e859b", "url": "https://github.com/vaadin/flow/commit/1f706c02fceebb17ce0d04d31cdeed7bc42e859b", "message": "address review comments\n\n - rename a local helper function from `regexp()` into `_regexp()` to follow the same naming pattern as for all other similar helpers\n - use the standard error message for `@Pattern`, as specified in https://beanvalidation.org/2.0-jsr380/spec/#standard-resolver-messages", "committedDate": "2020-07-02T13:39:30Z", "type": "commit"}]}