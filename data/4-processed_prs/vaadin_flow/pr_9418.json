{"pr_number": 9418, "pr_title": "feat: Theme component with app theme.", "pr_createdAt": "2020-11-17T07:35:37Z", "pr_url": "https://github.com/vaadin/flow/pull/9418", "timeline": [{"oid": "a590753c5bc760eb7f89de66e02b311b92fe10c4", "url": "https://github.com/vaadin/flow/commit/a590753c5bc760eb7f89de66e02b311b92fe10c4", "message": "feat: Theme component with app theme.\n\nAdded the feature that you can theme components\nwith the app theme by creating a css file in\n'frontend/theme/myTheme/components' with the\ncomponent tag name e.g. 'my-field'  should have 'my-field.css'\n\nFixes #9348", "committedDate": "2020-11-17T07:18:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NTIzNw==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r524975237", "bodyText": "Would it be good to add a test for lit template as well because it replaces polymer in the future?", "author": "knoobie", "createdAt": "2020-11-17T08:41:18Z", "path": "flow-tests/test-themes/frontend/my-field.js", "diffHunk": "@@ -0,0 +1,210 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import '@vaadin/vaadin-lumo-styles/color.js';\n+import '@vaadin/vaadin-lumo-styles/sizing.js';\n+import '@vaadin/vaadin-lumo-styles/spacing.js';\n+import '@vaadin/vaadin-lumo-styles/style.js';\n+import '@vaadin/vaadin-lumo-styles/typography.js';\n+import '@vaadin/vaadin-lumo-styles/mixins/required-field.js';\n+import '@vaadin/vaadin-lumo-styles/font-icons.js';\n+import '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\n+import { html } from '@polymer/polymer/lib/utils/html-tag.js';\n+\n+const $_documentContainer = html`<dom-module id=\"lumo-text-field\" theme-for=\"my-field\">\n+  <template>\n+    <style include=\"lumo-required-field lumo-field-button\">\n+      :host {\n+        --lumo-text-field-size: var(--lumo-size-m);\n+        color: var(--lumo-body-text-color);\n+        font-size: var(--lumo-font-size-m);\n+        font-family: var(--lumo-font-family);\n+        -webkit-font-smoothing: antialiased;\n+        -moz-osx-font-smoothing: grayscale;\n+        -webkit-tap-highlight-color: transparent;\n+        padding: var(--lumo-space-xs) 0;\n+        display: inline-flex;\n+        outline: none;\n+      }\n+\n+      :host::before {\n+        height: var(--lumo-text-field-size);\n+        box-sizing: border-box;\n+        display: inline-flex;\n+        align-items: center;\n+        content: \"\\\\2003\";\n+        width: 0;\n+        display: inline-block;\n+        /* Size and position this element on the same vertical position as the input-field element\n+           to make vertical align for the host element work as expected */\n+      }\n+\n+      :host([focused]:not([readonly])) [part=\"label\"] {\n+        color: var(--lumo-primary-text-color);\n+      }\n+\n+      [part=\"value\"],\n+      [part=\"input-field\"] ::slotted(input),\n+      [part=\"input-field\"] ::slotted(textarea),\n+      /* Slotted by vaadin-select-text-field */\n+      [part=\"input-field\"] ::slotted([part=\"value\"]) {\n+        cursor: inherit;\n+        min-height: var(--lumo-text-field-size);\n+        padding: 0 0.25em;\n+        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n+        -webkit-mask-image: var(--_lumo-text-field-overflow-mask-image);\n+      }\n+\n+      [part=\"value\"]:focus,\n+      :host([focused]) [part=\"input-field\"] ::slotted(input),\n+      :host([focused]) [part=\"input-field\"] ::slotted(textarea) {\n+        -webkit-mask-image: none;\n+        mask-image: none;\n+      }\n+\n+      [part=\"input-field\"] {\n+        border-radius: var(--lumo-border-radius);\n+        background-color: var(--lumo-contrast-10pct);\n+        padding: 0 calc(0.375em + var(--lumo-border-radius) / 4 - 1px);\n+        font-weight: 500;\n+        line-height: 1;\n+        position: relative;\n+        cursor: text;\n+        box-sizing: border-box;\n+      }\n+\n+      /* Used for hover and activation effects */\n+      [part=\"input-field\"]::after {\n+        content: \"\";\n+        position: absolute;\n+        top: 0;\n+        right: 0;\n+        bottom: 0;\n+        left: 0;\n+        border-radius: inherit;\n+        pointer-events: none;\n+        background-color: var(--lumo-contrast-50pct);\n+        opacity: 0;\n+        transition: transform 0.15s, opacity 0.2s;\n+        transform-origin: 100% 0;\n+      }\n+      \n+      /* Slotted content */\n+\n+      [part=\"input-field\"] ::slotted(:not([part]):not(iron-icon):not(input):not(textarea)) {\n+        color: var(--lumo-secondary-text-color);\n+        font-weight: 400;\n+      }\n+      \n+      .my-field-container {\n+        display: flex;\n+        flex-direction: column;\n+        min-width: 100%;\n+        max-width: 100%;\n+        width: var(--vaadin-text-field-default-width, 12em);\n+      }\n+\n+      [part=\"input-field\"] {\n+        display: flex;\n+        align-items: center;\n+        flex: auto;\n+      }\n+\n+      .my-field-container [part=\"input-field\"] {\n+        flex-grow: 0;\n+      }\n+\n+      /* Reset the native input styles */\n+      [part=\"value\"],\n+      [part=\"input-field\"] ::slotted(input),\n+      [part=\"input-field\"] ::slotted(textarea) {\n+        -webkit-appearance: none;\n+        -moz-appearance: none;\n+        outline: none;\n+        margin: 0;\n+        padding: 0;\n+        border: 0;\n+        border-radius: 0;\n+        min-width: 0;\n+        font: inherit;\n+        font-size: 1em;\n+        line-height: normal;\n+        color: inherit;\n+        background-color: transparent;\n+        /* Disable default invalid style in Firefox */\n+        box-shadow: none;\n+      }\n+\n+      [part=\"input-field\"] ::slotted(*) {\n+        flex: none;\n+      }\n+\n+      [part=\"value\"],\n+      [part=\"input-field\"] ::slotted(input),\n+      [part=\"input-field\"] ::slotted(textarea),\n+      /* Slotted by vaadin-select-text-field */\n+      [part=\"input-field\"] ::slotted([part=\"value\"]) {\n+        flex: auto;\n+        white-space: nowrap;\n+        overflow: hidden;\n+        width: 100%;\n+        height: 100%;\n+      }\n+\n+      [part=\"input-field\"] ::slotted(textarea) {\n+        resize: none;\n+      }\n+\n+      [part=\"value\"]::-ms-clear,\n+      [part=\"input-field\"] ::slotted(input)::-ms-clear {\n+        display: none;\n+      }\n+    </style>\n+  </template>\n+</dom-module>`;\n+\n+document.head.appendChild($_documentContainer.content);\n+\n+import { PolymerElement } from '@polymer/polymer/polymer-element.js';", "originalCommit": "a590753c5bc760eb7f89de66e02b311b92fe10c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyNjgyOA==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525026828", "bodyText": "It would, but I don't know how the theme handles in LIT.\n@jouni would you have a simple component sample for Lumo on LIT?", "author": "caalador", "createdAt": "2020-11-17T09:58:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NTIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MTg1MQ==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525151851", "bodyText": "Not sure what you mean by that. In any case, we should avoid using the <dom-module> element, and prefer using the official registerStyles method of injecting styles to component shadow roots: https://vaadin.com/docs/v14/themes/importing-style-sheets.html#component-styles\nIf the question is about ThemableMixin and LitElement, or how to the global Lumo style sheets, @web-padawan is the best to answer those questions.", "author": "jouni", "createdAt": "2020-11-17T13:28:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NTIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4Mjk5MA==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525282990", "bodyText": "The main question is how will the lit components and their theming work as compared to the polymer version.", "author": "caalador", "createdAt": "2020-11-17T16:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NTIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNzY5Ng==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525337696", "bodyText": "Right. They will support registerStyles, but not <dom-module> (AFAIK).", "author": "jouni", "createdAt": "2020-11-17T17:13:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NTIzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525152572", "bodyText": "Not sure if this is intentional, but it will conflict with the official Vaadin Text Field component style sheet, if both are imported to the same app. Prefer using unique IDs instead.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            const $_documentContainer = html`<dom-module id=\"lumo-text-field\" theme-for=\"my-field\">\n          \n          \n            \n            const $_documentContainer = html`<dom-module id=\"my-text-field\" theme-for=\"my-field\">", "author": "jouni", "createdAt": "2020-11-17T13:29:27Z", "path": "flow-tests/test-themes/frontend/my-field.js", "diffHunk": "@@ -0,0 +1,210 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import '@vaadin/vaadin-lumo-styles/color.js';\n+import '@vaadin/vaadin-lumo-styles/sizing.js';\n+import '@vaadin/vaadin-lumo-styles/spacing.js';\n+import '@vaadin/vaadin-lumo-styles/style.js';\n+import '@vaadin/vaadin-lumo-styles/typography.js';\n+import '@vaadin/vaadin-lumo-styles/mixins/required-field.js';\n+import '@vaadin/vaadin-lumo-styles/font-icons.js';\n+import '@vaadin/vaadin-lumo-styles/mixins/field-button.js';\n+import { html } from '@polymer/polymer/lib/utils/html-tag.js';\n+\n+const $_documentContainer = html`<dom-module id=\"lumo-text-field\" theme-for=\"my-field\">", "originalCommit": "a590753c5bc760eb7f89de66e02b311b92fe10c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MzA5OA==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525153098", "bodyText": "Note, that if we change to using registerStyles (see other thread), this is no longer relevant (no ID necessary).", "author": "jouni", "createdAt": "2020-11-17T13:30:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4MjI0Nw==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525282247", "bodyText": "This component is just here for testing purposes as we don't want Flow to depend on the components so its basically a ripped copy of the textField.", "author": "caalador", "createdAt": "2020-11-17T16:05:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzODYxNw==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525338617", "bodyText": "I would still change it to use registerStyles, to future-proof it if this test is ever converted to using LitElement instead of PolymerElement.", "author": "jouni", "createdAt": "2020-11-17T17:14:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgxNzEzNQ==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525817135", "bodyText": "Do we already have a component implementation using registerStyles internally?\nAs this should test that the feature works with the components.", "author": "caalador", "createdAt": "2020-11-18T05:04:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg4OTI1NQ==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525889255", "bodyText": "@caalador https://github.com/vaadin/vaadin-app-layout uses registerStyles for example in the branch next", "author": "knoobie", "createdAt": "2020-11-18T08:14:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkyMDY4NA==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525920684", "bodyText": "The big question is just that should we use here in the test something that we do not use in the actual version where the feature is coming out?", "author": "caalador", "createdAt": "2020-11-18T09:05:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk1NTE5OQ==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525955199", "bodyText": "I'm the wrong person to decide that ;) Just wanted to make sure, that theming is tested with both worlds because lit element is planned for V14.5 and V18.", "author": "knoobie", "createdAt": "2020-11-18T09:56:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk3OTMxNA==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525979314", "bodyText": "registerStyles is an officially supported part of the API already in 14.x series. All components support it.", "author": "jouni", "createdAt": "2020-11-18T10:32:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk4MDE2MQ==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r525980161", "bodyText": "The implementation of our components for 14.x is still Polymer 2 based (because of the need to support Bower-mode), and the automatic conversion to Polymer 3 generates the uglier version of the style modules, which is used here as well ($_documentContainer = ...).", "author": "jouni", "createdAt": "2020-11-18T10:34:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1MjU3Mg=="}], "type": "inlineReview"}, {"oid": "887705a1bfd9f042da84f74575f395f55eac72d4", "url": "https://github.com/vaadin/flow/commit/887705a1bfd9f042da84f74575f395f55eac72d4", "message": "Merge branch 'master' into issues/9348_component_theme\n\n# Conflicts:\n#\tflow-server/src/main/resources/plugins/application-theme-plugin/package.json\n#\tflow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/ThemeIT.java", "committedDate": "2020-11-18T05:07:38Z", "type": "commit"}, {"oid": "2fcd20872effb2377147390c32502f2099a4d1f2", "url": "https://github.com/vaadin/flow/commit/2fcd20872effb2377147390c32502f2099a4d1f2", "message": "Use npm components for theme test.", "committedDate": "2020-11-18T11:36:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxNTI0NA==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r528615244", "bodyText": "While not entirely connected to this PR, we should probably document this thing a bit, as it is quite unclear what does this applyTheme do and when it is used. At least when just reading the code again after I while, it makes me go wat, what is this for and why ...", "author": "pleku", "createdAt": "2020-11-23T10:50:27Z", "path": "flow-server/src/main/resources/plugins/application-theme-plugin/theme-generator.js", "diffHunk": "@@ -77,6 +107,10 @@ function generateThemeFile(themeFolder, themeName) {\n     ${globalCssCode.join('')}\n     target['${globalCssFlag}'] = true;\n   }\n+  if (!document['${componentCssFlag}']) {\n+    ${componentCssCode.join('')}\n+    document['${componentCssFlag}'] = true;\n+  }\n }", "originalCommit": "2fcd20872effb2377147390c32502f2099a4d1f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyNzc5Ng==", "url": "https://github.com/vaadin/flow/pull/9418#discussion_r528627796", "bodyText": "added some comment as there was need to merge and do conflict resolution.", "author": "caalador", "createdAt": "2020-11-23T11:13:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxNTI0NA=="}], "type": "inlineReview"}, {"oid": "c3530386142d8e98bc8032bec05734f8f9c20b20", "url": "https://github.com/vaadin/flow/commit/c3530386142d8e98bc8032bec05734f8f9c20b20", "message": "Merge branch 'master' into issues/9348_component_theme\n\n# Conflicts:\n#\tflow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/ThemeView.java", "committedDate": "2020-11-23T11:09:40Z", "type": "commit"}, {"oid": "b0da67d4b82fb375e5bfffb95e415aa179a8d3ab", "url": "https://github.com/vaadin/flow/commit/b0da67d4b82fb375e5bfffb95e415aa179a8d3ab", "message": "add comment for if", "committedDate": "2020-11-23T11:12:38Z", "type": "commit"}, {"oid": "7501575886343bd216ed8e80e25b78542b28e561", "url": "https://github.com/vaadin/flow/commit/7501575886343bd216ed8e80e25b78542b28e561", "message": "Fix merge conflict", "committedDate": "2020-11-23T12:55:38Z", "type": "commit"}, {"oid": "a2186ffffa732942cbb6d248c1d7a31d27ebdc4c", "url": "https://github.com/vaadin/flow/commit/a2186ffffa732942cbb6d248c1d7a31d27ebdc4c", "message": "Merge branch 'master' into issues/9348_component_theme\n\n# Conflicts:\n#\tflow-server/src/main/resources/plugins/application-theme-plugin/package.json\n#\tflow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/ThemeView.java\n#\tflow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/ThemeIT.java", "committedDate": "2020-11-24T06:24:12Z", "type": "commit"}]}