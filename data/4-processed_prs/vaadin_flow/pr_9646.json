{"pr_number": 9646, "pr_title": "test: add document.css level styles tests", "pr_createdAt": "2020-12-14T12:56:31Z", "pr_url": "https://github.com/vaadin/flow/pull/9646", "timeline": [{"oid": "827f06cbbd0b4b6f74045021f69e3152f03750bb", "url": "https://github.com/vaadin/flow/commit/827f06cbbd0b4b6f74045021f69e3152f03750bb", "message": "test: add document.css level styles tests", "committedDate": "2020-12-14T12:55:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA1NTExNw==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543055117", "bodyText": "Is there a reason to change the font away form Ostrich?\nAlso now that you didn't update the global.css that uses Ostrich the feature can't be validated visually by opening the application.", "author": "caalador", "createdAt": "2020-12-15T05:22:21Z", "path": "flow-tests/test-embedding/test-embedding-application-theme/frontend/themes/embedded-theme/document.css", "diffHunk": "@@ -1,4 +1,4 @@\n @font-face {\n-    font-family: \"Ostrich\";\n-    src: url(\"./font/ostrich-sans-regular.ttf\") format(\"TrueType\");\n+    font-family: \"Open Sans\";", "originalCommit": "827f06cbbd0b4b6f74045021f69e3152f03750bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE4ODMyOQ==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543188329", "bodyText": "I think I've just mixed up the semantics of global.css and document.css.\nAccording to a feature design doc:\n\nA special document.css stylesheet for css that doesn\u2019t work inside SD and need to be loaded into the document root, such as @font-face declarations, when these need to work for components embedded into a non-Vaadin-app such as the design system documentation tool (DocBuilder).\nJava components exported as WCs using Flow\u2019s WebComponentExporter apply the theme\u2019s styles automatically inside the exported WC and css defined in document.css (e.g. @font-face declarations) to the document itself.\n\nThe Ostrich font defined/imported in document.css and assigned in global.css within the :host block, should be propagated to document root and applied to an embedded component.\nSo, I've reverted the changes to global css and font folder and changed the tests accordingly.", "author": "mshabarov", "createdAt": "2020-12-15T09:37:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA1NTExNw=="}], "type": "inlineReview"}, {"oid": "7eadfbfae4e2e16aca97494da46e9b4bd7a6b23b", "url": "https://github.com/vaadin/flow/commit/7eadfbfae4e2e16aca97494da46e9b4bd7a6b23b", "message": "The font defined in global.css should be applied to embedded component", "committedDate": "2020-12-15T09:30:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzMzg5NA==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543233894", "bodyText": "I feel this doesn't check that the @font-face declaration has been inserted only that some arbitrary rule in position 0 contains ostrich as a string part.\nExpecting it to always be in index 0 is also easily broken by some minor change.\nI would propose to make it more robust by using for instance\nlet found = false;\nfor (let as=0; as<document.adoptedStyleSheets.length;++as) {\n    let styleSheetRules = document.adoptedStyleSheets[as].rules;\n    for (var ss = 0; ss < styleSheetRules.length; ++ss) {\n        let cssRule = styleSheetRules[ss];\n            if (cssRule instanceof CSSFontFaceRule && cssRule.cssText.startsWith(\"@font-face { font-family: Ostrich;\")) {\n                found = true;\n            } \n    }\n}\nreturn found;\n\nThis would guarantee that it is the @font-face declaration.", "author": "caalador", "createdAt": "2020-12-15T10:41:28Z", "path": "flow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "diffHunk": "@@ -88,4 +88,42 @@ public void componentThemeIsApplied_forPolymerAndLit() {\n         Assert.assertEquals(\"Lit radiobutton should have red background\",\n             \"rgba(255, 0, 0, 1)\", radio.getCssValue(\"background-color\"));\n     }\n+\n+    @Test\n+    public void documentCssFonts_fromLocalCssFile_fontAppliedToDocumentRoot() {\n+        open();\n+\n+        Long adoptedStyles = (Long) getCommandExecutor().executeScript(\n+                \"return document.adoptedStyleSheets !== undefined ? document\"\n+                        + \".adoptedStyleSheets.length : 0\");\n+\n+        Assert.assertTrue(\n+                \"Expected the document root to have the adopted styles\",\n+                adoptedStyles > 0);\n+\n+        Object ostrichFontStylesFound = getCommandExecutor().executeScript(\n+                \"return document.adoptedStyleSheets.map(styleSheet => styleSheet\"", "originalCommit": "7eadfbfae4e2e16aca97494da46e9b4bd7a6b23b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1OTQ4OA==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543259488", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-12-15T11:20:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzMzg5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNDU0Nw==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543234547", "bodyText": "Same script as above, but the result should be false as the @font-face declaration should not be added to the embedded component.", "author": "caalador", "createdAt": "2020-12-15T10:42:18Z", "path": "flow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "diffHunk": "@@ -88,4 +88,42 @@ public void componentThemeIsApplied_forPolymerAndLit() {\n         Assert.assertEquals(\"Lit radiobutton should have red background\",\n             \"rgba(255, 0, 0, 1)\", radio.getCssValue(\"background-color\"));\n     }\n+\n+    @Test\n+    public void documentCssFonts_fromLocalCssFile_fontAppliedToDocumentRoot() {\n+        open();\n+\n+        Long adoptedStyles = (Long) getCommandExecutor().executeScript(\n+                \"return document.adoptedStyleSheets !== undefined ? document\"\n+                        + \".adoptedStyleSheets.length : 0\");\n+\n+        Assert.assertTrue(\n+                \"Expected the document root to have the adopted styles\",\n+                adoptedStyles > 0);\n+\n+        Object ostrichFontStylesFound = getCommandExecutor().executeScript(\n+                \"return document.adoptedStyleSheets.map(styleSheet => styleSheet\"\n+                        + \".cssRules[0].cssText).filter(cssText => cssText\"\n+                        + \".indexOf('Ostrich') > 0).length > 0;\");\n+\n+        Assert.assertEquals(\n+                \"Expected Ostrich font to be applied to document root element\",\n+                Boolean.TRUE, ostrichFontStylesFound);\n+    }\n+\n+    @Test\n+    public void documentCssFonts_fromLocalCssFile_fontAppliedToEmbeddedComponent() {\n+        open();\n+\n+        Object ostrichFontStylesFoundForEmbedded = getCommandExecutor()\n+                .executeScript(\n+                        \"return document.getElementsByTagName('themed-component')[0]\"\n+                                + \".shadowRoot.adoptedStyleSheets.map(styleSheet => \"\n+                                + \"styleSheet.cssRules[0].cssText).filter(cssText => \"\n+                                + \"cssText.indexOf('Ostrich') > 0).length > 0;\");", "originalCommit": "7eadfbfae4e2e16aca97494da46e9b4bd7a6b23b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1OTc5Ng==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543259796", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-12-15T11:20:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNDU0Nw=="}], "type": "inlineReview"}, {"oid": "2a3da01d5e67e4e62a1f4937bcecc6010078773c", "url": "https://github.com/vaadin/flow/commit/2a3da01d5e67e4e62a1f4937bcecc6010078773c", "message": "Make the script more robust", "committedDate": "2020-12-15T11:19:59Z", "type": "commit"}]}