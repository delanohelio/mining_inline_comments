{"pr_number": 9657, "pr_title": "fix: use LinkedHashSet (not HashSet) for deterministic CompositeDataGenerator ", "pr_createdAt": "2020-12-15T10:04:58Z", "pr_url": "https://github.com/vaadin/flow/pull/9657", "timeline": [{"oid": "c03cc070b134178196d7fc945972ad5efab50ab8", "url": "https://github.com/vaadin/flow/commit/c03cc070b134178196d7fc945972ad5efab50ab8", "message": "Use ArrayList instead of HashSet to make CompositeDataGenerator deterministic\n\nFixes https://github.com/vaadin/flow/issues/9656", "committedDate": "2020-12-15T10:04:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNjIxOA==", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543306218", "bodyText": "Does this change API slightly in that addDataGenerator is no longer idempotent? Would perhaps be safer to use LinkedHashSet, which has set semantics but preserves order.", "author": "joheriks", "createdAt": "2020-12-15T12:37:26Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/CompositeDataGenerator.java", "diffHunk": "@@ -39,7 +39,7 @@\n public class CompositeDataGenerator<T>\n         implements DataGenerator<T>, HasDataGenerators<T> {\n \n-    private final Set<DataGenerator<T>> dataGenerators = new HashSet<>();\n+    private final List<DataGenerator<T>> dataGenerators = new ArrayList<>();", "originalCommit": "c03cc070b134178196d7fc945972ad5efab50ab8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxMjQ0OQ==", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543312449", "bodyText": "True", "author": "TatuLund", "createdAt": "2020-12-15T12:47:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwNjIxOA=="}], "type": "inlineReview"}, {"oid": "f5618cf242ebd6c67a57f41d5dda8ec2343df445", "url": "https://github.com/vaadin/flow/commit/f5618cf242ebd6c67a57f41d5dda8ec2343df445", "message": "Change to LinkedHashSet", "committedDate": "2020-12-15T12:46:24Z", "type": "commit"}, {"oid": "11fee5a6cfae00f92afee32b5d15ecadc4129cff", "url": "https://github.com/vaadin/flow/commit/11fee5a6cfae00f92afee32b5d15ecadc4129cff", "message": "Make testable", "committedDate": "2020-12-15T14:32:07Z", "type": "commit"}, {"oid": "4dd9540c899bed4b1feab5d438346d038c86859e", "url": "https://github.com/vaadin/flow/commit/4dd9540c899bed4b1feab5d438346d038c86859e", "message": "Add unit test", "committedDate": "2020-12-15T14:33:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyODQ0Nw==", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543428447", "bodyText": "Arrays may need import.", "author": "joheriks", "createdAt": "2020-12-15T15:09:51Z", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +196,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {\n+        CompositeDataGenerator<String> cdg = new CompositeDataGenerator<>();\n+        DataGenerator<String> dg1 = (String, JsonObject) -> {};\n+        DataGenerator<String> dg2 = (String, JsonObject) -> {};\n+        List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);", "originalCommit": "4dd9540c899bed4b1feab5d438346d038c86859e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyODY0Mg==", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543428642", "bodyText": "Assert.assertEquals or import.", "author": "joheriks", "createdAt": "2020-12-15T15:10:04Z", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +196,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {\n+        CompositeDataGenerator<String> cdg = new CompositeDataGenerator<>();\n+        DataGenerator<String> dg1 = (String, JsonObject) -> {};\n+        DataGenerator<String> dg2 = (String, JsonObject) -> {};\n+        List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);\n+        cdg.addDataGenerator(dg1);\n+        cdg.addDataGenerator(dg2);\n+        assertEquals(expected,new ArrayList<>(cdg.dataGenerators));", "originalCommit": "4dd9540c899bed4b1feab5d438346d038c86859e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d9bc0241f0eb3c5930a52f4338a1d8b476b48b23", "url": "https://github.com/vaadin/flow/commit/d9bc0241f0eb3c5930a52f4338a1d8b476b48b23", "message": "Adding missing imports", "committedDate": "2020-12-15T17:09:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2ODI1Mg==", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r543568252", "bodyText": "Make \"dataGenerators\" private or transient.", "author": "vaadin-bot", "createdAt": "2020-12-15T18:04:46Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/CompositeDataGenerator.java", "diffHunk": "@@ -39,7 +39,7 @@\n public class CompositeDataGenerator<T>\n         implements DataGenerator<T>, HasDataGenerators<T> {\n \n-    private final Set<DataGenerator<T>> dataGenerators = new HashSet<>();\n+    final Set<DataGenerator<T>> dataGenerators = new LinkedHashSet<>();", "originalCommit": "d9bc0241f0eb3c5930a52f4338a1d8b476b48b23", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzMzU5OQ==", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r544233599", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void orderIsPreserved() {\n          \n          \n            \n                public void addDataGenerator_orderIsPreserved() {", "author": "mshabarov", "createdAt": "2020-12-16T11:46:34Z", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +200,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {", "originalCommit": "d9bc0241f0eb3c5930a52f4338a1d8b476b48b23", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNDU5Ng==", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r544234596", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(expected,new ArrayList<>(cdg.dataGenerators));\n          \n          \n            \n                    assertEquals(expected, new ArrayList<>(cdg.dataGenerators));", "author": "mshabarov", "createdAt": "2020-12-16T11:48:12Z", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +200,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {\n+        CompositeDataGenerator<String> cdg = new CompositeDataGenerator<>();\n+        DataGenerator<String> dg1 = (String, JsonObject) -> {};\n+        DataGenerator<String> dg2 = (String, JsonObject) -> {};\n+        List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);\n+        cdg.addDataGenerator(dg1);\n+        cdg.addDataGenerator(dg2);\n+        assertEquals(expected,new ArrayList<>(cdg.dataGenerators));", "originalCommit": "d9bc0241f0eb3c5930a52f4338a1d8b476b48b23", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNDY5Mw==", "url": "https://github.com/vaadin/flow/pull/9657#discussion_r544234693", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);\n          \n          \n            \n                    List<DataGenerator<String>> expected = Arrays.asList(dg1, dg2);", "author": "mshabarov", "createdAt": "2020-12-16T11:48:24Z", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java", "diffHunk": "@@ -196,4 +200,14 @@ public void dataGeneratorRegistration_remove_dataIsDestroyed() {\n                 CoreMatchers.not(CoreMatchers.hasItem(\"item1\")));\n     }\n \n+    @Test\n+    public void orderIsPreserved() {\n+        CompositeDataGenerator<String> cdg = new CompositeDataGenerator<>();\n+        DataGenerator<String> dg1 = (String, JsonObject) -> {};\n+        DataGenerator<String> dg2 = (String, JsonObject) -> {};\n+        List<DataGenerator<String>> expected = Arrays.asList(dg1,dg2);", "originalCommit": "d9bc0241f0eb3c5930a52f4338a1d8b476b48b23", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c5833e78bf69a131380a5f176ceefd4c79bfe2a6", "url": "https://github.com/vaadin/flow/commit/c5833e78bf69a131380a5f176ceefd4c79bfe2a6", "message": "Update flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java\n\nCo-authored-by: Mikhail Shabarov <61410877+mshabarov@users.noreply.github.com>", "committedDate": "2020-12-16T13:32:20Z", "type": "commit"}, {"oid": "40b8eb9fd01ff6d923cea1e3547b941daa00f09f", "url": "https://github.com/vaadin/flow/commit/40b8eb9fd01ff6d923cea1e3547b941daa00f09f", "message": "Update flow-data/src/test/java/com/vaadin/flow/data/provider/CompositeDataGeneratorTest.java\n\nCo-authored-by: Mikhail Shabarov <61410877+mshabarov@users.noreply.github.com>", "committedDate": "2020-12-16T13:32:27Z", "type": "commit"}]}