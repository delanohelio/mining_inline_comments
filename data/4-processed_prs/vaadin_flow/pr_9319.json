{"pr_number": 9319, "pr_title": "Cherry Picks to 2.4", "pr_createdAt": "2020-11-04T21:55:30Z", "pr_url": "https://github.com/vaadin/flow/pull/9319", "timeline": [{"oid": "24e322312d3d2040145d0ff260a26a3b7b99c6a3", "url": "https://github.com/vaadin/flow/commit/24e322312d3d2040145d0ff260a26a3b7b99c6a3", "message": "fix: Sync HierarchicalDataCommunicator's expand state with client side (#9275)\n\nHierarchicalDataCommunicator's expanded state were not being synchronised with client side and TreeGrid's expanded nodes were being collapsed after re-attaching.\n\nWarranty: Sync TreeGrid expanded items state with the client side when detaching and reattaching\n\nFixes: https://github.com/vaadin/flow/issues/9175\n\n(cherry picked from commit bb51a2b5d3e04e28994f1fc619e7cf0848596625)", "committedDate": "2020-11-04T21:40:38Z", "type": "commit"}, {"oid": "297253a80ae5b522ad347a5a764bbe826b836db6", "url": "https://github.com/vaadin/flow/commit/297253a80ae5b522ad347a5a764bbe826b836db6", "message": "refactor the code to prevent minor change in maintenance version", "committedDate": "2020-11-04T21:52:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517863405", "bodyText": "This goes through all the expanded items that HierarchyMapper says are expanded.\nDoes the hierarchy mapper have items only related to the active range (on client side) or ? Just wondering what is the cost of this operation. I bet that it throws out items that are not in the active range (done by DataCommunicator), but just want to verify as this look suspicious and there is no comment in the code.", "author": "pleku", "createdAt": "2020-11-05T08:18:32Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.emptySet();\n+        }\n+\n+        Collection<T> expandedItems = new HashSet<>();\n+        getHierarchyMapper().fetchRootItems(null)\n+                .forEach(root -> expandedItems.addAll(getExpandedItems(root)));", "originalCommit": "297253a80ae5b522ad347a5a764bbe826b836db6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NDI2OQ==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517884269", "bodyText": "HierarchyMapper does not currently know anything about whether the expanded item is active or not. We could force the HierarchyMapper to hold only the active items somehow, but it looks like another fix/improvement.", "author": "mshabarov", "createdAt": "2020-11-05T08:53:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4ODc4MA==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517888780", "bodyText": "And another point is that the scroll position is not (?) preserved (after attach/detach/refresh page). So, if we were in the middle of TreeGrid and the active items list contains the items in the middle, and then we refresh the page and come back to 0 position...I would expect the items in the 0 position also preserve the expanding state, though they could be not in active range before page refreshing. Does it make sense?", "author": "mshabarov", "createdAt": "2020-11-05T08:59:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg5MDQ5Mw==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517890493", "bodyText": "HierarchyMapper#fetchRootItems(null) ignores the range by passing null, and fetches all the root nodes. HierarchyMapper has a set of fetchXXXItems methods accepting a Range object, I believe it stores the whole hierarchy rather than the active range.", "author": "taefi", "createdAt": "2020-11-05T09:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg5MzIzNg==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517893236", "bodyText": "Ok. So just thinking about the case where the user has expanded a lot of nodes, like thousands, then all of those are stored on the server side memory for now ? But this fix doesn't change that fact ? Then I think it is fine to document in as comment in code and move on, maybe think about if this could/should be improved and create another issue.\nOr would it be possible that here the code only limits the \"checking of expanded items\" to the active range to be, which means that\na) if the scrolling position is reset, it can guess that only couple of pages of nodes from the top should be reported for expanded state ?\nb) if the scrolling position is not reset (?), it would just try stick to reporting the expanded state of the active range of nodes\nBut yeah lets try to avoid premature optimization.", "author": "pleku", "createdAt": "2020-11-05T09:07:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk0ODI2OQ==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517948269", "bodyText": "I think the cost of the operation is not good for big data obviously, and @mshabarov's discussion also make sense. At least, the cost of traversing the whole hierarchicy can be omitted by having that public method in HierarchyMapper for the next minor version (2.5).", "author": "taefi", "createdAt": "2020-11-05T10:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3NDYwMg==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519774602", "bodyText": "So is it either done already for 2.5 and master changes or another issue opened so that it is not forgotten ?\nProbably would be also good to acknowledge the resolution to this discussion in the code as a comment to make it easier for maintainers. Like // FIXME This will cause xyz, to be fixed by #1234", "author": "pleku", "createdAt": "2020-11-09T12:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3NjMyNQ==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519776325", "bodyText": "Or well, this is already 2.4 branch so it makes little impact here to add the comment. Would have been different for master but didn't notice it then", "author": "pleku", "createdAt": "2020-11-09T12:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc5OTU4NQ==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519799585", "bodyText": "The public method is already there in master and 5.0 branches, but not in 2.5. So is it fine if I cherry pick the master changes directly to 2.5 instead of the // FIXME comment?", "author": "taefi", "createdAt": "2020-11-09T13:10:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgwMDE3MA==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519800170", "bodyText": "Ok", "author": "pleku", "createdAt": "2020-11-09T13:11:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyMDA2NA==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r519820064", "bodyText": "This issue should address this for the next minor version branches 2.5 and 4.1.", "author": "taefi", "createdAt": "2020-11-09T13:38:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2MzQwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg5ODc0Mw==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517898743", "bodyText": "Collections.emptySet() already produces empty unmodifiable set, as I recall, why do you wrap it again?", "author": "mshabarov", "createdAt": "2020-11-05T09:15:38Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HierarchicalDataCommunicator.java", "diffHunk": "@@ -545,4 +560,27 @@ private JsonValue generateJsonForExpandedOrCollapsedItem(T item) {\n         return json;\n     }\n \n+    private Collection<T> getHierarchyMapperExpandedItems() {\n+        HierarchyMapper<T, ?> hierarchyMapper = getHierarchyMapper();\n+        if (!hierarchyMapper.hasExpandedItems()) {\n+            return Collections.unmodifiableCollection(Collections.emptySet());", "originalCommit": "aba4809bc8f7b14079db559674188c1119c4fff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkxNjg5OA==", "url": "https://github.com/vaadin/flow/pull/9319#discussion_r517916898", "bodyText": "Correct, my bad. Undid it.", "author": "taefi", "createdAt": "2020-11-05T09:44:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg5ODc0Mw=="}], "type": "inlineReview"}, {"oid": "5ad84703c8d4dbe6246c13fbb3c998067d1d6e32", "url": "https://github.com/vaadin/flow/commit/5ad84703c8d4dbe6246c13fbb3c998067d1d6e32", "message": "fix: fix TreeGrid updating wrong expanded items state on setDataProvider (#9336)\n\nFixes: #9328\nDetails: HierarchicalDataProvider's reset method was called before recreating the HierrarchyMapper in setDataProvider. This was creating wrong updates for the client side.\n\n(cherry picked from commit 73ebb9eaf052afa2ad9843153a21b70eab67ee29)", "committedDate": "2020-11-09T11:07:27Z", "type": "commit"}, {"oid": "5ad84703c8d4dbe6246c13fbb3c998067d1d6e32", "url": "https://github.com/vaadin/flow/commit/5ad84703c8d4dbe6246c13fbb3c998067d1d6e32", "message": "fix: fix TreeGrid updating wrong expanded items state on setDataProvider (#9336)\n\nFixes: #9328\nDetails: HierarchicalDataProvider's reset method was called before recreating the HierrarchyMapper in setDataProvider. This was creating wrong updates for the client side.\n\n(cherry picked from commit 73ebb9eaf052afa2ad9843153a21b70eab67ee29)", "committedDate": "2020-11-09T11:07:27Z", "type": "forcePushed"}]}