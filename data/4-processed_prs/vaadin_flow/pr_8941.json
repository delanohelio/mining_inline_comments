{"pr_number": 8941, "pr_title": "feat(offline): emit offline resources list in generated webpack config", "pr_createdAt": "2020-09-03T11:02:38Z", "pr_url": "https://github.com/vaadin/flow/pull/8941", "timeline": [{"oid": "53bf3edcfd3f6ad08cef0470cbc1241e25c21e16", "url": "https://github.com/vaadin/flow/commit/53bf3edcfd3f6ad08cef0470cbc1241e25c21e16", "message": "--wip-- [skip ci] feat(TypeScript): emit offline resources list in generated webpack config", "committedDate": "2020-09-03T14:15:15Z", "type": "forcePushed"}, {"oid": "1183fea3f8165d2502a6ca9dcf87dc45eabe3cb9", "url": "https://github.com/vaadin/flow/commit/1183fea3f8165d2502a6ca9dcf87dc45eabe3cb9", "message": "feat(TypeScript): emit offline resources list in generated webpack config", "committedDate": "2020-09-04T11:41:54Z", "type": "commit"}, {"oid": "1183fea3f8165d2502a6ca9dcf87dc45eabe3cb9", "url": "https://github.com/vaadin/flow/commit/1183fea3f8165d2502a6ca9dcf87dc45eabe3cb9", "message": "feat(TypeScript): emit offline resources list in generated webpack config", "committedDate": "2020-09-04T11:41:54Z", "type": "forcePushed"}, {"oid": "ed14081e923608a62f56f21d920660dbe702ca24", "url": "https://github.com/vaadin/flow/commit/ed14081e923608a62f56f21d920660dbe702ca24", "message": "Move TaskUpdateWebpack from prepare-frontend to build-frontend", "committedDate": "2020-09-07T07:03:43Z", "type": "commit"}, {"oid": "7af567e3983836046dfd85d0afb661911a57e0bf", "url": "https://github.com/vaadin/flow/commit/7af567e3983836046dfd85d0afb661911a57e0bf", "message": "Fix frontend build tests after moving TaskUpdateWebpack", "committedDate": "2020-09-07T12:01:00Z", "type": "commit"}, {"oid": "c5c99402355388a6bcd97a026617ade974642300", "url": "https://github.com/vaadin/flow/commit/c5c99402355388a6bcd97a026617ade974642300", "message": "Apply code analysis suggestions", "committedDate": "2020-09-08T08:25:42Z", "type": "commit"}, {"oid": "277ddb41c9f6256e5bbc353e456bea87646643c7", "url": "https://github.com/vaadin/flow/commit/277ddb41c9f6256e5bbc353e456bea87646643c7", "message": "Always generate webpack config in DevModeInitialiser", "committedDate": "2020-09-08T08:25:53Z", "type": "commit"}, {"oid": "277ddb41c9f6256e5bbc353e456bea87646643c7", "url": "https://github.com/vaadin/flow/commit/277ddb41c9f6256e5bbc353e456bea87646643c7", "message": "Always generate webpack config in DevModeInitialiser", "committedDate": "2020-09-08T08:25:53Z", "type": "forcePushed"}, {"oid": "a1751c67bcf43cda5b66db91770e787e24fc85da", "url": "https://github.com/vaadin/flow/commit/a1751c67bcf43cda5b66db91770e787e24fc85da", "message": "Increase duration threshold in StartupPerformanceIT", "committedDate": "2020-09-08T10:45:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0OTMxOQ==", "url": "https://github.com/vaadin/flow/pull/8941#discussion_r484849319", "bodyText": "Immediately return this expression instead of assigning it to the temporary variable \"relativePath\".", "author": "vaadin-bot", "createdAt": "2020-09-08T11:37:10Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateWebpack.java", "diffHunk": "@@ -139,82 +150,83 @@ private void createWebpackConfig() throws IOException {\n     private List<String> modifyWebpackConfig(File generatedFile)\n             throws IOException {\n         List<String> lines = FileUtils.readLines(generatedFile, \"UTF-8\");\n+        List<Pair<String, String>> replacements = getReplacements();\n+        String declaration = \"%s = %s;\";\n \n-        String frontendLine = \"const frontendFolder = require('path').resolve(__dirname, '\"\n-                + getEscapedRelativeWebpackPath(frontendDirectory) + \"');\";\n-\n-        String outputLine = \"const mavenOutputFolderForFlowBundledFiles = require('path').resolve(__dirname, '\"\n-                + getEscapedRelativeWebpackPath(webpackOutputPath) + \"');\";\n-        String mainLine = \"const fileNameOfTheFlowGeneratedMainEntryPoint = require('path').resolve(__dirname, '\"\n-                + getEscapedRelativeWebpackPath(flowImportsFilePath) + \"');\";\n-        String isClientSideBootstrapModeLine = \"const useClientSideIndexFileForBootstrapping = \"\n-                + !useV14Bootstrapping + \";\";\n-        String devModeGizmoJSLine = \"const devmodeGizmoJS = require('path').resolve(__dirname, '\"\n-                + getEscapedRelativeWebpackPath(\n-                        flowResourcesFolder.resolve(\"VaadinDevmodeGizmo.js\"))\n-                + \"');\";\n         for (int i = 0; i < lines.size(); i++) {\n-            if (lines.get(i).startsWith(\n-                    \"const fileNameOfTheFlowGeneratedMainEntryPoint\")) {\n-                lines.set(i, mainLine);\n-            }\n-            if (lines.get(i)\n-                    .startsWith(\"const mavenOutputFolderForFlowBundledFiles\")) {\n-                lines.set(i, outputLine);\n-            }\n-            if (lines.get(i).startsWith(\"const frontendFolder\")) {\n-                lines.set(i, frontendLine);\n-            }\n-            if (lines.get(i).startsWith(\"const useClientSideIndexFileForBootstrapping\")) {\n-                lines.set(i, isClientSideBootstrapModeLine);\n-            }\n-            if (lines.get(i).startsWith(\"const clientSideIndexHTML\")) {\n-                lines.set(i, getIndexHtmlPath());\n-            }\n-\n-            if (lines.get(i).startsWith(\"const clientSideIndexEntryPoint\")) {\n-                lines.set(i, getClientEntryPoint());\n-            }\n-\n-            if (lines.get(i).startsWith(\"const devmodeGizmoJS\")) {\n-                lines.set(i, devModeGizmoJSLine);\n+            for (int j = 0; j < replacements.size(); j++) {\n+                Pair<String, String> pair = replacements.get(j);\n+                if (lines.get(i).startsWith(pair.getFirst())) {\n+                    lines.set(i, String.format(declaration, pair.getFirst(),\n+                            pair.getSecond()));\n+                }\n             }\n         }\n         return lines;\n     }\n \n+    private List<Pair<String, String>> getReplacements() {\n+        return Arrays.asList(\n+                new Pair<>(\"const frontendFolder\",\n+                        \"require('path').resolve\" + \"(__dirname, '\"\n+                                + getEscapedRelativeWebpackPath(\n+                                        frontendDirectory)\n+                                + \"')\"),\n+                new Pair<>(\"const mavenOutputFolderForFlowBundledFiles\",\n+                        \"require('path').resolve(__dirname, '\"\n+                                + getEscapedRelativeWebpackPath(\n+                                        webpackOutputPath)\n+                                + \"')\"),\n+                new Pair<>(\"const fileNameOfTheFlowGeneratedMainEntryPoint\",\n+                        \"require('path').resolve(__dirname, '\"\n+                                + getEscapedRelativeWebpackPath(\n+                                        flowImportsFilePath)\n+                                + \"')\"),\n+                new Pair<>(\"const useClientSideIndexFileForBootstrapping\",\n+                        Boolean.toString(!useV14Bootstrapping)),\n+                new Pair<>(\"const clientSideIndexHTML\", getIndexHtmlPath()),\n+                new Pair<>(\"const clientSideIndexEntryPoint\",\n+                        getClientEntryPoint()),\n+                new Pair<>(\"const devmodeGizmoJS\",\n+                        \"require('path').resolve(__dirname, '\"\n+                                + getEscapedRelativeWebpackPath(\n+                                        flowResourcesFolder.resolve(\n+                                                \"VaadinDevmodeGizmo.js\"))\n+                                + \"')\"),\n+                new Pair<>(\"const offlineResources\",\n+                        getOfflineResourcesJsArray()));\n+    }\n+\n     private String getIndexHtmlPath() {\n         boolean exists = new File(frontendDirectory.toFile(), INDEX_HTML)\n                 .exists();\n-        String declaration = \"const clientSideIndexHTML = %s;\";\n         if (!exists) {\n             Path path = Paths.get(\n                     getEscapedRelativeWebpackPath(webpackConfigPath), TARGET,\n                     INDEX_HTML);\n             String relativePath = String.format(\n                     \"require('path').resolve(__dirname, '%s')\",\n                     getEscapedRelativeWebpackPath(path));\n-            return String.format(declaration, relativePath);\n+            return relativePath;\n         } else {\n-            return String.format(declaration, \"'./\" + INDEX_HTML +\"'\");\n+            return \"'./\" + INDEX_HTML +\"'\";\n         }\n     }\n \n     private String getClientEntryPoint() {\n         boolean exists = new File(frontendDirectory.toFile(), INDEX_TS)\n                 .exists()\n                 || new File(frontendDirectory.toFile(), INDEX_JS).exists();\n-        String declaration = \"const clientSideIndexEntryPoint = %s;\";\n         if (!exists) {\n             Path path = Paths.get(\n                     getEscapedRelativeWebpackPath(webpackConfigPath), TARGET,\n                     INDEX_TS);\n             String relativePath = String.format(", "originalCommit": "a1751c67bcf43cda5b66db91770e787e24fc85da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b87a830c37f854b75e7077ef7b98b609b489d20d", "url": "https://github.com/vaadin/flow/commit/b87a830c37f854b75e7077ef7b98b609b489d20d", "message": "Remove unused import", "committedDate": "2020-09-08T12:04:40Z", "type": "commit"}, {"oid": "2e2807fa26293ee403dc4b5403626e522454477a", "url": "https://github.com/vaadin/flow/commit/2e2807fa26293ee403dc4b5403626e522454477a", "message": "Apply analysis suggestion", "committedDate": "2020-09-08T12:06:51Z", "type": "commit"}]}