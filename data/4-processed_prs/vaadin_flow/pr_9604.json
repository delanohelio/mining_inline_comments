{"pr_number": 9604, "pr_title": "fix(TypeScript): binder should allow typing decimal numbers", "pr_createdAt": "2020-12-08T11:10:01Z", "pr_url": "https://github.com/vaadin/flow/pull/9604", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAxODYyNA==", "url": "https://github.com/vaadin/flow/pull/9604#discussion_r540018624", "bodyText": "redundant string?", "author": "haijian-vaadin", "createdAt": "2020-12-10T09:41:13Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validators.ts", "diffHunk": "@@ -56,15 +56,30 @@ export class Required<T> extends AbstractValidator<T> {\n   }\n }\n \n-function _asValidatorAttributes(attrs: ValueNumberAttributes | number | string | PatternAttributes | RegExp) {\n+function _asValidatorAttributes(attrs: ValueNumberAttributes | number | string | PatternAttributes | string | RegExp) {", "originalCommit": "71564b9bf121b708d6154aca60908e6c966182bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "69335e574566c0673a9e9abd6bbbf4a48f69d595", "url": "https://github.com/vaadin/flow/commit/69335e574566c0673a9e9abd6bbbf4a48f69d595", "message": "WIP: fix(TypeScript): binder should allow typing decimal numbers\n\nFixes #9521\nFixes #9522", "committedDate": "2020-12-10T19:27:54Z", "type": "forcePushed"}, {"oid": "2740b6d06ea197d906f0139f82f2540ebb457394", "url": "https://github.com/vaadin/flow/commit/2740b6d06ea197d906f0139f82f2540ebb457394", "message": "WIP: fix(TypeScript): binder should allow typing decimal numbers\n\nFixes #9521\nFixes #9522", "committedDate": "2020-12-10T19:28:20Z", "type": "forcePushed"}, {"oid": "323bc1595870d641ac5b06faebff8311d9b769e1", "url": "https://github.com/vaadin/flow/commit/323bc1595870d641ac5b06faebff8311d9b769e1", "message": "fix: disallow incorrect decimal separator (,) and extra characters", "committedDate": "2020-12-14T13:06:17Z", "type": "forcePushed"}, {"oid": "5382d7d9cf75cd72f10a87d564aeea4f537d1612", "url": "https://github.com/vaadin/flow/commit/5382d7d9cf75cd72f10a87d564aeea4f537d1612", "message": "fix: disallow incorrect decimal separator (,) and extra characters", "committedDate": "2020-12-14T13:04:14Z", "type": "forcePushed"}, {"oid": "f25cfa0985233350ea45979475111a22b1775762", "url": "https://github.com/vaadin/flow/commit/f25cfa0985233350ea45979475111a22b1775762", "message": "WIP: fix(TypeScript): binder should allow typing decimal numbers\n\nFixes #9521\nFixes #9522", "committedDate": "2020-12-14T13:08:50Z", "type": "commit"}, {"oid": "c179aba54392d81a8aba8d2f235d0678e7562648", "url": "https://github.com/vaadin/flow/commit/c179aba54392d81a8aba8d2f235d0678e7562648", "message": "fix linter error", "committedDate": "2020-12-14T13:08:50Z", "type": "commit"}, {"oid": "180d8fd3f06b19e107d77e6d170989f22c3e7057", "url": "https://github.com/vaadin/flow/commit/180d8fd3f06b19e107d77e6d170989f22c3e7057", "message": "fix: disallow incorrect decimal separator (,) and extra characters", "committedDate": "2020-12-14T13:08:50Z", "type": "commit"}, {"oid": "180d8fd3f06b19e107d77e6d170989f22c3e7057", "url": "https://github.com/vaadin/flow/commit/180d8fd3f06b19e107d77e6d170989f22c3e7057", "message": "fix: disallow incorrect decimal separator (,) and extra characters", "committedDate": "2020-12-14T13:08:50Z", "type": "forcePushed"}, {"oid": "4c64e78daebd42962f58d510bbae841d6d7b75e4", "url": "https://github.com/vaadin/flow/commit/4c64e78daebd42962f58d510bbae841d6d7b75e4", "message": "fix linter errors", "committedDate": "2020-12-14T15:36:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY3NTg3Mw==", "url": "https://github.com/vaadin/flow/pull/9604#discussion_r542675873", "bodyText": "remove debugger?", "author": "haijian-vaadin", "createdAt": "2020-12-14T19:22:52Z", "path": "flow-client/src/test/frontend/form/FieldTests.ts", "diffHunk": "@@ -311,6 +394,76 @@ suite(\"form/Field\", () => {\n       sinon.assert.calledTwice(orderViewWithInput.customerFullNameField!.setAttributeSpy);\n       sinon.assert.calledOnce(orderViewWithInput.customerNickNameField!.setAttributeSpy);\n     });\n+\n+    suite('number model', () => {\n+      let view: OrderViewWithInput,\n+        priorityField: MockInputElement,\n+        binder: Binder<Order, OrderModel>;\n+\n+      beforeEach(async () => {\n+        view = orderViewWithInput;\n+        binder = view.binder;\n+        priorityField = view.priorityField!;\n+      });\n+\n+      test('should set initial zero', async () => {\n+        expect(priorityField.value).to.equal('0');\n+      });\n+\n+      test('should set number value from binder', async () => {\n+        priorityField.valueSpy.get.resetHistory();\n+        priorityField.valueSpy.set.resetHistory();\n+\n+        binder.for(binder.model.priority).value = 1.2;\n+        await view.updateComplete;\n+        sinon.assert.calledOnceWithExactly(priorityField.valueSpy.set, 1.2);\n+      });\n+\n+      test('should update binder value on typing', async () => {\n+        const cases: Array<[string, number]> = [\n+          ['1', 1],\n+          ['1.', NaN], // not allowed format\n+          ['1.2', 1.2],\n+          ['', NaN],\n+          ['not a number', NaN],\n+          ['.', NaN],\n+          ['.1', 0.1],\n+          // Invalid separator\n+          [',', NaN],\n+          [',2', NaN],\n+          ['1,', NaN],\n+          ['1,2', NaN]\n+        ];\n+\n+        for (const [inputValue, expectedNumber] of cases) {\n+          for (const eventName of ['input', 'change']) {\n+            debugger;", "originalCommit": "4c64e78daebd42962f58d510bbae841d6d7b75e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4MzMzOQ==", "url": "https://github.com/vaadin/flow/pull/9604#discussion_r542683339", "bodyText": "Maybe we could add validations for 1,2, 1,abc, abc etc?", "author": "haijian-vaadin", "createdAt": "2020-12-14T19:29:20Z", "path": "flow-client/src/test/frontend/form/ValidatorsTests.ts", "diffHunk": "@@ -120,6 +121,18 @@ suite(\"form/Validators\", () => {\n     assert.isFalse(validator.validate(true));\n   });\n \n+  test('IsNumber', () => {\n+    const validator = new IsNumber();\n+    assert.isNotTrue(validator.impliesRequired);\n+    assert.isTrue(validator.validate(0));\n+    assert.isTrue(validator.validate(1));\n+    assert.isTrue(validator.validate(1.2));", "originalCommit": "4c64e78daebd42962f58d510bbae841d6d7b75e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyOTQyMg==", "url": "https://github.com/vaadin/flow/pull/9604#discussion_r543229422", "bodyText": "This validator cannot check those cases \u2014\u00a0it only works on the number data type, which is the only type NumberModel works with.", "author": "platosha", "createdAt": "2020-12-15T10:34:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4MzMzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4Nzk2MQ==", "url": "https://github.com/vaadin/flow/pull/9604#discussion_r542687961", "bodyText": "remove debugger?", "author": "haijian-vaadin", "createdAt": "2020-12-14T19:33:31Z", "path": "flow-client/src/test/frontend/form/FieldTests.ts", "diffHunk": "@@ -311,6 +394,76 @@ suite(\"form/Field\", () => {\n       sinon.assert.calledTwice(orderViewWithInput.customerFullNameField!.setAttributeSpy);\n       sinon.assert.calledOnce(orderViewWithInput.customerNickNameField!.setAttributeSpy);\n     });\n+\n+    suite('number model', () => {\n+      let view: OrderViewWithInput,\n+        priorityField: MockInputElement,\n+        binder: Binder<Order, OrderModel>;\n+\n+      beforeEach(async () => {\n+        view = orderViewWithInput;\n+        binder = view.binder;\n+        priorityField = view.priorityField!;\n+      });\n+\n+      test('should set initial zero', async () => {\n+        expect(priorityField.value).to.equal('0');\n+      });\n+\n+      test('should set number value from binder', async () => {\n+        priorityField.valueSpy.get.resetHistory();\n+        priorityField.valueSpy.set.resetHistory();\n+\n+        binder.for(binder.model.priority).value = 1.2;\n+        await view.updateComplete;\n+        sinon.assert.calledOnceWithExactly(priorityField.valueSpy.set, 1.2);\n+      });\n+\n+      test('should update binder value on typing', async () => {\n+        const cases: Array<[string, number]> = [\n+          ['1', 1],\n+          ['1.', NaN], // not allowed format\n+          ['1.2', 1.2],\n+          ['', NaN],\n+          ['not a number', NaN],\n+          ['.', NaN],\n+          ['.1', 0.1],\n+          // Invalid separator\n+          [',', NaN],\n+          [',2', NaN],\n+          ['1,', NaN],\n+          ['1,2', NaN]\n+        ];\n+\n+        for (const [inputValue, expectedNumber] of cases) {\n+          for (const eventName of ['input', 'change']) {\n+            debugger;", "originalCommit": "4c64e78daebd42962f58d510bbae841d6d7b75e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyOTYyNQ==", "url": "https://github.com/vaadin/flow/pull/9604#discussion_r543229625", "bodyText": "done", "author": "platosha", "createdAt": "2020-12-15T10:35:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4Nzk2MQ=="}], "type": "inlineReview"}, {"oid": "3b8fa6df48306f57073acb02ee63bcd82461818e", "url": "https://github.com/vaadin/flow/commit/3b8fa6df48306f57073acb02ee63bcd82461818e", "message": "cleaup: remove debugger", "committedDate": "2020-12-15T10:28:28Z", "type": "commit"}]}