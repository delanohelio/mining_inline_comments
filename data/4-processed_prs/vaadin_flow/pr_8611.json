{"pr_number": 8611, "pr_title": "Allow Vaadin plugins to configure node download URL and version", "pr_createdAt": "2020-06-24T09:54:45Z", "pr_url": "https://github.com/vaadin/flow/pull/8611", "timeline": [{"oid": "205c9a30b52813dac82e6007b1999b430db527fc", "url": "https://github.com/vaadin/flow/commit/205c9a30b52813dac82e6007b1999b430db527fc", "message": "Allow Vaadin plugins to configure node download URL and version\n\nhttps://github.com/vaadin/flow/issues/8603 . Currently FrontendTools nor NodeTasks.Builder\ndoesn't allow you to override the node.js download URL. However, in firewalled corporate\nenvironments the node.js may be served from an intranet server.", "committedDate": "2020-06-24T09:53:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU0NTgyMQ==", "url": "https://github.com/vaadin/flow/pull/8611#discussion_r446545821", "bodyText": "task.nodeVersion = builder.nodeVersion;\ntask.nodeDownloadRoot = builder.nodeDownloadRoot;\n\nI think this approach is not good.\nAs I understand there is no any other usage of \"absent setters\" for nodeVersion  and nodeDownloadRoot.\nSo I don't see any reason do not use CTOR with extended parameters.\nSetters may be called at any time which mutates the state of the object. As a result it adds some additional semantic to the usage.\nParameters in the CTOR may not be changed once the instance is constructed.\nIt allow to eliminate any confusion.\nI'm pretty sure that CTOR parameters should work here better than setters.", "author": "denis-anisimov", "createdAt": "2020-06-27T17:04:14Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java", "diffHunk": "@@ -496,8 +513,12 @@ private NodeTasks(Builder builder) {\n             commands.add(packageUpdater);\n \n             if (builder.runNpmInstall) {\n-                commands.add(new TaskRunNpmInstall(classFinder, packageUpdater,\n-                        builder.enablePnpm, builder.requireHomeNodeExec));\n+                final TaskRunNpmInstall task = new TaskRunNpmInstall(\n+                        classFinder, packageUpdater,\n+                        builder.enablePnpm, builder.requireHomeNodeExec);\n+                task.nodeVersion = builder.nodeVersion;", "originalCommit": "205c9a30b52813dac82e6007b1999b430db527fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU0NTk0OA==", "url": "https://github.com/vaadin/flow/pull/8611#discussion_r446545948", "bodyText": "CTOR parameters please.", "author": "denis-anisimov", "createdAt": "2020-06-27T17:05:10Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskRunNpmInstall.java", "diffHunk": "@@ -306,6 +323,10 @@ private void runNpmInstall() throws ExecutionFailedException {\n \n         FrontendTools tools = new FrontendTools(baseDir,\n                 () -> FrontendUtils.getVaadinHomeDirectory().getAbsolutePath());\n+        if (nodeVersion != null) {", "originalCommit": "205c9a30b52813dac82e6007b1999b430db527fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4MjQ3MQ==", "url": "https://github.com/vaadin/flow/pull/8611#discussion_r446882471", "bodyText": "Adding ctor parameters is a backward-incompatible change and will make the Gradle plugin fail to work. I propose to continue with properties, which also the benefit of having default values.", "author": "mvysny", "createdAt": "2020-06-29T10:08:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU0NTk0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg5Nzg2OA==", "url": "https://github.com/vaadin/flow/pull/8611#discussion_r446897868", "bodyText": "I'm as a Flow developer not aware of Gradle.\nIt seems this is reversion of responsibility....\nAs a result I may imagine a situation when I decide to introduce a new parameter in any CTOR of internal class (being not aware of any third party usage).\nBackward compatibility doesn't matter for internal classes.  This is an internal class.\nI suggest to add one more CTOR in that case at least.\nMutability in this case is excessive and may introduce issues in code evolution.", "author": "denis-anisimov", "createdAt": "2020-06-29T11:28:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU0NTk0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNzU0OQ==", "url": "https://github.com/vaadin/flow/pull/8611#discussion_r447427549", "bodyText": "The API might be internal with respect of regular Vaadin apps, but both the Maven plugin and the Gradle plugins are using the API (and the API is intended to be used by those plugins), which implies that the API is external with respect to Maven and Gradle plugins.\nI've added an overloaded constructor.", "author": "mvysny", "createdAt": "2020-06-30T05:57:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU0NTk0OA=="}], "type": "inlineReview"}, {"oid": "ebacddee364a12fbe3b1a6e6e0bf1bdf7135ed4f", "url": "https://github.com/vaadin/flow/commit/ebacddee364a12fbe3b1a6e6e0bf1bdf7135ed4f", "message": "#8603 initialize FrontendTools and TaskRunNpmInstall fields in ctor", "committedDate": "2020-06-29T11:27:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg5ODYxNQ==", "url": "https://github.com/vaadin/flow/pull/8611#discussion_r446898615", "bodyText": "public parameter", "author": "denis-anisimov", "createdAt": "2020-06-29T11:29:35Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java", "diffHunk": "@@ -114,17 +114,16 @@\n         /**\n          * The node.js version to be used when node.js is installed\n          * automatically by Vaadin, for example <code>\"v12.16.0\"</code>.\n-         * Defaults to null which uses the default node version.\n+         * Defaults to {@value FrontendTools#DEFAULT_NODE_VERSION}.\n          */\n-        public String nodeVersion = null;\n+        public String nodeVersion = FrontendTools.DEFAULT_NODE_VERSION;", "originalCommit": "ebacddee364a12fbe3b1a6e6e0bf1bdf7135ed4f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg5ODY1MA==", "url": "https://github.com/vaadin/flow/pull/8611#discussion_r446898650", "bodyText": "public parameter", "author": "denis-anisimov", "createdAt": "2020-06-29T11:29:37Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java", "diffHunk": "@@ -114,17 +114,16 @@\n         /**\n          * The node.js version to be used when node.js is installed\n          * automatically by Vaadin, for example <code>\"v12.16.0\"</code>.\n-         * Defaults to null which uses the default node version.\n+         * Defaults to {@value FrontendTools#DEFAULT_NODE_VERSION}.\n          */\n-        public String nodeVersion = null;\n+        public String nodeVersion = FrontendTools.DEFAULT_NODE_VERSION;\n \n         /**\n          * Download node.js from this URL. Handy in heavily firewalled corporate\n          * environments where the node.js download can be provided from an\n-         * intranet mirror. Defaults to null which will cause the downloader\n-         * to use {@link NodeInstaller#DEFAULT_NODEJS_DOWNLOAD_ROOT}.\n+         * intranet mirror. Defaults to {@link NodeInstaller#DEFAULT_NODEJS_DOWNLOAD_ROOT}.\n          */\n-        public URI nodeDownloadRoot = null;\n+        public URI nodeDownloadRoot = URI.create(NodeInstaller.DEFAULT_NODEJS_DOWNLOAD_ROOT);", "originalCommit": "ebacddee364a12fbe3b1a6e6e0bf1bdf7135ed4f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db9a616e107a4c5b766dc77c9ce554b7b4ed665c", "url": "https://github.com/vaadin/flow/commit/db9a616e107a4c5b766dc77c9ce554b7b4ed665c", "message": "#8603 add test for FrontendTools.nodeVersion and nodeDownloadRoot", "committedDate": "2020-06-29T13:22:56Z", "type": "commit"}, {"oid": "ae33777eb087c0195882e5f262c89e0a11270261", "url": "https://github.com/vaadin/flow/commit/ae33777eb087c0195882e5f262c89e0a11270261", "message": "#8603 fixed javadoc", "committedDate": "2020-06-29T14:19:32Z", "type": "commit"}]}