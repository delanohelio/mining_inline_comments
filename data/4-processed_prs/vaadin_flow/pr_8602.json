{"pr_number": 8602, "pr_title": "Simplify ValidationCallback return type", "pr_createdAt": "2020-06-22T14:05:47Z", "pr_url": "https://github.com/vaadin/flow/pull/8602", "timeline": [{"oid": "9945d4379c34ba6293f3416c4ae54543bb4b6406", "url": "https://github.com/vaadin/flow/commit/9945d4379c34ba6293f3416c4ae54543bb4b6406", "message": "Simplify ValidationCallback return type\n\n- ValidationCallback may now return a single ValidationResult or an array of ValidationResult objects which don't need to specify the \"value\" or \"validator\" properties which were needed previously when ValueError was used in the return type.\n- ValidationResult may contain an optional \"message\" property for overriding the default error message (coming from validator) for a specific property.\n- ValueError now also directly has a \"message\" property so it's slightly simpler to get the error messages when working with a list of errors.\n- Update flow-client tsconfig to allow using Array.flat() etc.\n\nFixes #8552", "committedDate": "2020-06-22T13:37:41Z", "type": "commit"}, {"oid": "dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "url": "https://github.com/vaadin/flow/commit/dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "message": "Add Binder as a parameter to ValidationCallback", "committedDate": "2020-06-22T14:03:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU4NDczNw==", "url": "https://github.com/vaadin/flow/pull/8602#discussion_r443584737", "bodyText": "ValueError<any> | void> is replaced with ReadonlyArray<ValueError<any>> in most (if not all) cases. Empty array means no errors.", "author": "Haprog", "createdAt": "2020-06-22T14:08:42Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Binder.ts", "diffHunk": "@@ -35,7 +35,7 @@ export class Binder<T, M extends AbstractModel<T>> extends BinderNode<T, M> {\n   private [onChangeSymbol]: (oldValue?: T) => void;\n   private [onSubmitSymbol]: (value: T) => Promise<T|void>;\n \n-  private [validationsSymbol]: Map<AbstractModel<any>, Map<Validator<any>, Promise<ValueError<any> | void>>> = new Map();\n+  private [validationsSymbol]: Map<AbstractModel<any>, Map<Validator<any>, Promise<ReadonlyArray<ValueError<any>>>>> = new Map();", "originalCommit": "dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU4NTEyOQ==", "url": "https://github.com/vaadin/flow/pull/8602#discussion_r443585129", "bodyText": "Promise.resolve() wrapping was completely unnecessary here.", "author": "Haprog", "createdAt": "2020-06-22T14:09:18Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Binder.ts", "diffHunk": "@@ -134,12 +134,12 @@ export class Binder<T, M extends AbstractModel<T>> extends BinderNode<T, M> {\n     await this.performValidation();\n \n     if (modelValidations.has(validator)) {\n-      return modelValidations.get(validator);\n+      return modelValidations.get(validator) as Promise<ReadonlyArray<ValueError<NT>>>;\n     }\n \n-    const promise = Promise.resolve(runValidator(model, validator));\n+    const promise = runValidator(model, validator);", "originalCommit": "dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU4NjI0NA==", "url": "https://github.com/vaadin/flow/pull/8602#discussion_r443586244", "bodyText": "Since the above promises now always return arrays of ValueError instead of individual ValueErrors, use Array.flat().", "author": "Haprog", "createdAt": "2020-06-22T14:10:50Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/BinderNode.ts", "diffHunk": "@@ -113,7 +113,7 @@ export class BinderNode<T, M extends AbstractModel<T>> {\n     const errors = (await Promise.all([\n       ...this.requestValidationOfDescendants(),\n       ...this.requestValidationWithAncestors()\n-    ])).filter(valueError => valueError) as ReadonlyArray<ValueError<any>>;\n+    ])).flat().filter(valueError => valueError) as ReadonlyArray<ValueError<any>>;", "originalCommit": "dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5NDg1NA==", "url": "https://github.com/vaadin/flow/pull/8602#discussion_r443594854", "bodyText": "This is added here as a non-optional for convenience so you can always easilly get the relevant message for an error directly from valueError.message instead of having to separately check valueError.message and valueError.validator.message when the message may be inherited from validator or might be overridden for a specific error in a ValidationResult. By default this message is set to validator.message unless overridden in ValidationResult.", "author": "Haprog", "createdAt": "2020-06-22T14:22:14Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validation.ts", "diffHunk": "@@ -7,24 +7,31 @@ import {\n   getValue,\n } from \"./Models\";\n import { Required } from \"./Validators\";\n+import {Binder} from \"./Binder\";\n \n export interface ValueError<T> {\n   property: string |\u00a0AbstractModel<any>,\n+  message: string,", "originalCommit": "dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5Njc0Mg==", "url": "https://github.com/vaadin/flow/pull/8602#discussion_r443596742", "bodyText": "New simpler value type for ValidationCallback (instead of ValueError) so we can drop the value and validator properties so the user doesn't need to explicitly set them.", "author": "Haprog", "createdAt": "2020-06-22T14:24:41Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validation.ts", "diffHunk": "@@ -7,24 +7,31 @@ import {\n   getValue,\n } from \"./Models\";\n import { Required } from \"./Validators\";\n+import {Binder} from \"./Binder\";\n \n export interface ValueError<T> {\n   property: string |\u00a0AbstractModel<any>,\n+  message: string,\n   value: T,\n   validator: Validator<T>\n }\n \n+export interface ValidationResult {\n+  property: string |\u00a0AbstractModel<any>,\n+  message?: string\n+}", "originalCommit": "dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5NzcwMg==", "url": "https://github.com/vaadin/flow/pull/8602#discussion_r443597702", "bodyText": "Adding the return type here explicitly makes some problems more visible when modifying this method.", "author": "Haprog", "createdAt": "2020-06-22T14:25:58Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validation.ts", "diffHunk": "@@ -38,19 +45,22 @@ export class ServerValidator implements Validator<any> {\n   validate = () => false;\n }\n \n-export async function runValidator<T>(model: AbstractModel<T>, validator: Validator<T>) {\n+export async function runValidator<T>(model: AbstractModel<T>, validator: Validator<T>): Promise<ReadonlyArray<ValueError<T>>> {", "originalCommit": "dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5ODU0NA==", "url": "https://github.com/vaadin/flow/pull/8602#discussion_r443598544", "bodyText": "runValidator() now always returns an array for simplicity. Empty array means no errors.", "author": "Haprog", "createdAt": "2020-06-22T14:27:00Z", "path": "flow-client/src/main/resources/META-INF/resources/frontend/form/Validation.ts", "diffHunk": "@@ -38,19 +45,22 @@ export class ServerValidator implements Validator<any> {\n   validate = () => false;\n }\n \n-export async function runValidator<T>(model: AbstractModel<T>, validator: Validator<T>) {\n+export async function runValidator<T>(model: AbstractModel<T>, validator: Validator<T>): Promise<ReadonlyArray<ValueError<T>>> {\n   const value = getValue(model);\n   // if model is not required and value empty, do not run any validator\n   if (!getBinderNode(model).required && !new Required().validate(value)) {\n-    return;\n+    return [];", "originalCommit": "dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5OTk1MQ==", "url": "https://github.com/vaadin/flow/pull/8602#discussion_r443599951", "bodyText": "This was needed for being able to use Array.flat() etc. without TS compiler failing/complaining. See --lib docs at https://www.typescriptlang.org/docs/handbook/compiler-options.html", "author": "Haprog", "createdAt": "2020-06-22T14:28:50Z", "path": "flow-client/tsconfig.json", "diffHunk": "@@ -2,6 +2,7 @@\n   \"compilerOptions\": {\n     \"sourceMap\": true,\n     \"inlineSources\": true,\n+    \"lib\": [\"DOM\", \"ES2019.Array\"],", "originalCommit": "dd4a19eb18c0389f1a9498e141fd36c51cbbb545", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "08a94707a215d5a1219ed98306311dae013ec5af", "url": "https://github.com/vaadin/flow/commit/08a94707a215d5a1219ed98306311dae013ec5af", "message": "Fix linter errors", "committedDate": "2020-06-22T14:33:19Z", "type": "commit"}]}