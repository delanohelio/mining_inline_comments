{"pr_number": 4701, "pr_title": "Use unpack to support use of schema plugins as artifacts", "pr_createdAt": "2020-05-21T00:15:54Z", "pr_url": "https://github.com/geonetwork/core-geonetwork/pull/4701", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2MzQwOQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429163409", "bodyText": "Small typo in resoruces", "author": "josegar74", "createdAt": "2020-05-22T10:16:09Z", "path": "schemas/README.md", "diffHunk": "@@ -1,17 +1,146 @@\n # Maven module containing schema plugins\n \n-## Plugin structure\n+## Schema Plugin Definition\n \n-A schema plugin is composed off:\n+* `src/main/plugin/<folder>` plugin contents:\n+   \n+  * `schema-ident.xml` configuration file\n+  * schema definition `xsd` files\n+  * transformations `xsl` files\n+  * See [GeoNetwork Manual](https://geonetwork-opensource.org/manuals/trunk/en/customizing-application/implementing-a-schema-plugin.html)\n \n-* A configuration folder containing XML file for configuration,\n-the schema as XSDs and a set of transformation (See http://geonetwork-opensource.org/manuals/trunk/eng/developer/schemaPlugins/index.html).\n+* `src/main/java` providing:\n+  \n+  * Optional: SchemaPlugin bean\n+  * Optional: ApplicationListener<ServerStartup> to auto install plugin\n \n-* (optional) A SchemaPlugin bean\n+## Recommended: Artifact unpack\n \n+1. Be sure your plugin includes `src/main/plugin`.\n \n-## Add a plugin to the build\n+2. Use `mvn install` to install your schema plugin in your local repository.\n \n-To include a new schema plugin in a build, copy the schema folder\n-here and add it to the copy-schemas execution in web/pom.xml.\n+3. Add a profile to `web/pom.xml` unpacking your schema plugin.\n+   \n+   ```xml\n+    <profile>\n+      <id>hnap</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139.ca.HNAP</artifactId>\n+                <version>${gn.schemas.version>}</version>\n+              </dependency>\n+            </dependencies>\n+            <executions>\n+              <execution>\n+                <id>iso19139.ca.HNAP-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>org.geonetwork-opensource</groupId>\n+                      <artifactId>schema-iso19139.ca.HNAP</artifactId>\n+                      <version>${gn.schemas.version>}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>src/main/plugin</includes>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+   ```\n \n+4. Use your profile, for example `mvn process-resources -Phnap`, to extract plugin from artifact during build.\n+\n+## Option: Fork and add a plugin to the build\n+\n+To include a new schema plugin in a build:\n+\n+1. Add schema plugin:\n+   \n+   * As a git submodule if you are making a fork\n+   * As a folder, using `.gitignore` to avoid accidentally commiting.\n+`\n+2. Use a profile (activated by your folder being present) to include your schema plugin to the list of modules in `pom.xml`.\n+   \n+   ```xml\n+   <profiles>\n+     <profile>\n+       <id>hnap</id>\n+       <activation>\n+       <file>\n+         <exists>iso19139.ca.HNAP</exists>\n+       </file>\n+       </activation>\n+       <modules>\n+         <module>iso19139.ca.HNAP</module>\n+       </modules>\n+     </profile>\n+   </profiles>\n+   ```\n+\n+3. Add your schema to the `copy-schemas` execution in `web/pom.xml`.\n+   \n+   ```xml\n+   <resource>\n+     <directory>${project.basedir}/../schemas/iso19139.ca.HNAP/src/main/plugin</directory>\n+     <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+     </targetPath>\n+   </resource>\n+   ```\n+\n+4. Use `mvn process-resoruces -Dcopy` to activate `copy-schemas` execution.", "originalCommit": "7f6d2dd11d4705b85ce35e8ae268a5e4115e019e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNTA1NQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429425055", "bodyText": "Thanks, especially for README.md please use your access as a committer to modify this PR directly (you can click edit when reviewing).", "author": "jodygarnett", "createdAt": "2020-05-22T19:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2MzQwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NjIxNA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429166214", "bodyText": "I would add this commented as an example or in the developer documentation.", "author": "josegar74", "createdAt": "2020-05-22T10:22:39Z", "path": "web/pom.xml", "diffHunk": "@@ -875,10 +800,259 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+    <!--\n+    Schema management profiles.\n+    -->\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>\n+      <activation> <!-- default, disabled by -Dcopy -->\n+        <property><name>!copy</name></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <!-- Add dependencies to schema plugin having a custom Bean to be loaded. -->\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-csw-record</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19110</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-dublin-core</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19115-3.2018</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+            </dependencies>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19139</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-csw-record</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19110</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-dublin-core</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Copy schema resources using relative paths -->\n+    <profile>\n+      <id>copy-schemas</id>\n+      <activation> <!-- use -Dcopy to activate       -->\n+        <property><name>copy</name></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-resources-plugin</artifactId>\n+            <!-- Add dependencies to schema plugin having a custom Bean to be loaded. -->\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-csw-record</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19110</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-dublin-core</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19115-3.2018</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+            </dependencies>\n+            <!-- copy schema resources using relative paths -->\n+            <executions>\n+              <execution>\n+                <id>copy-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals>\n+                  <goal>copy-resources</goal>\n+                </goals>\n+                <configuration>\n+                  <includeEmptyDirs>true</includeEmptyDirs>\n+                  <overwrite>true</overwrite>\n+                  <outputDirectory>${build.webapp.resources}</outputDirectory>\n+                  <resources>\n+                    <!-- Copy the schema folder to the webapp folder source directory\n+                    in order to be loaded by the application when running mvn jetty:run.\n+                    -->\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/iso19139/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/iso19110/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/dublin-core/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/csw-record/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/iso19115-3.2018/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <!-- Copy the documentation in the webapp. -->\n+                    <resource>\n+                      <directory>${project.basedir}/../docs/manuals/target/doc</directory>\n+                      <targetPath>${basedir}/src/main/webapp/doc</targetPath>\n+                    </resource>\n+                  </resources>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Example: Unpack hnap schema plugin -->\n+    <profile>", "originalCommit": "7f6d2dd11d4705b85ce35e8ae268a5e4115e019e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNDgwMg==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429424802", "bodyText": "Developer docs are managed here in README.md files, as per this activity.", "author": "jodygarnett", "createdAt": "2020-05-22T19:39:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NjIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429875855", "bodyText": "Are you adding the hnap schema plugin profile to the geonetwork core?  Any reason this would be added but not the other schema plugins from metadata 101? Was this used for testing and accidentally added to this pull request?", "author": "ianwallen", "createdAt": "2020-05-25T11:06:01Z", "path": "schemas/pom.xml", "diffHunk": "@@ -51,8 +51,29 @@\n     <module>dublin-core</module>\n     <module>iso19110</module>\n     <module>iso19139</module>\n-    <module>iso19115-3.2018</module>\n   </modules>\n+\n+  <profiles>\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <file><exists>iso19115-3.2018</exists></file>\n+      </activation>\n+      <modules>\n+        <module>iso19115-3.2018</module>\n+      </modules>\n+    </profile>\n+    <profile>\n+      <id>hnap</id>\n+      <activation>", "originalCommit": "e9c9bf97bd0b4752d7e2ad61d2d894c0a34bbd49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk0NDk5Mw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429944993", "bodyText": "I am using this as an example. One benefit of this approach is that all the modules can be in profiles. No need to build locally once they have been updated to include plugin folder and deploy to OSGeo repo.\nI felt including an example was useful at this time, and it helped me write the docs.", "author": "jodygarnett", "createdAt": "2020-05-25T13:49:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2MTc0Nw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431061747", "bodyText": "My personal preference is to remove it as I believe there are already too many profiles and I personally found it difficult to identify the meaning of all these profiles when I was starting with the code.  I believe \"iso19115-3.2018\" should be the example as everyone will probably know what that means.  I don't believe many will understand what hnap is?\nIf we add hnap then maybe we should add them all (or all the active ones) - but it could end up creating a large pom file?  If they are added then it will definitely make it easier for us to build hnap as we will just need to specify the profile.\nIf we are going to add these then there should be a better naming standard so that it is clear that this is a plugin. i.e. maybe plugin-iso19115-3.2018 and plugin-iso19139.ca.HNAP... So that if we add others then it is clear that these profiles are for adding plugins", "author": "ianwallen", "createdAt": "2020-05-27T11:58:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxNTc2OQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431215769", "bodyText": "Good discussion @ianwallen, thank you for your feedback. I will use iso19115-3.2018 as the example of selectively enabling a profile if the submodule is added. I think the instructions could move to web/pom.xml since they are now all about that folder.\nI agree with your feedback, and would like to implement it.\n\n\nAdding profiles to web/pom.xml for each schema is way to keep the build the same for everyone.\n\n\nIt is possible to enable profiles in ~/.m2/settings.xml if you wish to always build with the same set of schema plugins:\n\n\n<settings>\n  ...\n  <activeProfiles>\n      <activeProfile>iso19139.ca.HNAP</activeProfile>\n    </activeProfiles>\n\nThe community benefit is we all end up working on the same geonetwork project, rather than being forced to fork :) (This community building aspect is important to me and one reason I am working on the build system and shared osgeo repository)", "author": "jodygarnett", "createdAt": "2020-05-27T15:08:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTIzOQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431795239", "bodyText": "Regarding adding the profile to web/pom.xml, isn't that the purpose of the add_schema.sh? It is a way to add the standard expected code to the pom file for cases where you may want it.  I agree that if it is already there, then it is easy to turn it off and on but I don't think it is reasonable to expect that we will have the full list of schemas in the pom files. This is why I was suggesting that we (I can do this) create  a add_schema_profile.sh that would allow the user to add the standard profile settings.  You did mention an option using ant in an email - I did not fully understand this option so I'm waiting to see a sample of this as this may be a better option.\n.m2 modification is no an option for us as this would not be easily portable to build env as well as getting developers to add this settings locally will cause issues.  Also I have several build folder on my pc and regularly create others for testing - in some cases, I build hnap and other cases I don't and I don't want to hit debug issues related to this being activated and I had forgotten.", "author": "ianwallen", "createdAt": "2020-05-28T12:25:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3NTMyOQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431975329", "bodyText": "I understand about .m2 modification to list activeProfiles not working for you.\nCan I ask how many profiles you usually work with? There are two recommended ways of managing this:\n\nUse active by default (this does not work across teams)\nUse of settings.xml\n\nIf you must fork I would prefer if you fork and add:\n    <activation>\n      <activeByDefault>true</activeByDefault>\n    </activation>\n\nTo your required profiles.\nHowever I would like to check if the work I have done already takes away this need?\n\nCheckout the metadata101 plugins you need to into schemas folder\nMake sure they are added to a schemas/.gitignore to avoid accidentally commiting\nA profile in schemas/pom.xml will check for the folder being present and include the module\nA profile in web/pom.xml will check for the folder being present and include the dependency and unpack the artifact\n\nThis should address the issue for you to one of initial setup, and avoid having to make any pom.xml changes to work with you desired schema plugins.", "author": "jodygarnett", "createdAt": "2020-05-28T16:40:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxNjE4NQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432416185", "bodyText": "The only reason this would work for us is because hnap module is pre-added.  I don't believe we are trying to set it up just so I don't have to fork?  For this to work with the full geonetwork community, we would need to have all possible profiles in the pom.xml which I don't believe is feasible.   If I wanted to avoid a fork, then I would simply add the hnap post deployment.\nGeonetwork seems to require lots of config changes that can only be done with a fork. We currently need to do a fork just to change the spring security in our deployment.   It may take time before all these config options can be configured based on one war file without doing post deployment changes. Hopefully we can make it there someday...\nLots of documentation states to say away from <activeByDefault> - in our case we generally setup the deployment so that it works by default without having to modify profiles.  So in this case we would be adding the hnap schema to the pom file either manually as a small configuration change or we will use the one that it pre-installed in the pom if it is already there.", "author": "ianwallen", "createdAt": "2020-05-29T11:13:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwMzM0MA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432503340", "bodyText": "I expect to add all metadata101 profiles here over time: goal is not to require forking.\nIn a subsequent pull request we will add one of these profiles for each metadata101 module.\nIn your fork (if you must) you can add hnap as a sub module to the schemas folder - and because the folder is there it will be used.", "author": "jodygarnett", "createdAt": "2020-05-29T14:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3ODQ1NQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429878455", "bodyText": "Is this option the same as using the \"add-schema.sh\"?\nIf so then the syntax for add-schema.sh should probably be added to this section.  It seems that the instructions to use this option should be consistent between this document and the schema plugin documentation.  The hnap module indicates to use add-schema.sh but this documentation indicates to update the file manually.\nWe could also add a similar script for the first option that would work similarly.(future enhancement). Unless add-schema.sh is being depreciated?", "author": "ianwallen", "createdAt": "2020-05-25T11:13:15Z", "path": "schemas/README.md", "diffHunk": "@@ -1,17 +1,146 @@\n # Maven module containing schema plugins\n \n-## Plugin structure\n+## Schema Plugin Definition\n \n-A schema plugin is composed off:\n+* `src/main/plugin/<folder>` plugin contents:\n+   \n+  * `schema-ident.xml` configuration file\n+  * schema definition `xsd` files\n+  * transformations `xsl` files\n+  * See [GeoNetwork Manual](https://geonetwork-opensource.org/manuals/trunk/en/customizing-application/implementing-a-schema-plugin.html)\n \n-* A configuration folder containing XML file for configuration,\n-the schema as XSDs and a set of transformation (See http://geonetwork-opensource.org/manuals/trunk/eng/developer/schemaPlugins/index.html).\n+* `src/main/java` providing:\n+  \n+  * Optional: SchemaPlugin bean\n+  * Optional: ApplicationListener<ServerStartup> to auto install plugin\n \n-* (optional) A SchemaPlugin bean\n+## Recommended: Artifact unpack\n \n+1. Be sure your plugin includes `src/main/plugin`.\n \n-## Add a plugin to the build\n+2. Use `mvn install` to install your schema plugin in your local repository.\n \n-To include a new schema plugin in a build, copy the schema folder\n-here and add it to the copy-schemas execution in web/pom.xml.\n+3. Add a profile to `web/pom.xml` unpacking your schema plugin.\n+   \n+   ```xml\n+    <profile>\n+      <id>hnap</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139.ca.HNAP</artifactId>\n+                <version>${gn.schemas.version>}</version>\n+              </dependency>\n+            </dependencies>\n+            <executions>\n+              <execution>\n+                <id>iso19139.ca.HNAP-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>org.geonetwork-opensource</groupId>\n+                      <artifactId>schema-iso19139.ca.HNAP</artifactId>\n+                      <version>${gn.schemas.version>}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>src/main/plugin</includes>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+   ```\n \n+4. Use your profile, for example `mvn process-resources -Phnap`, to extract plugin from artifact during build.\n+\n+## Option: Fork and add a plugin to the build", "originalCommit": "e9c9bf97bd0b4752d7e2ad61d2d894c0a34bbd49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk0NTQwOA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429945408", "bodyText": "This replaces add-schema.sh, like you can do it and use the \u2019-Dcopy\u2019 flag but it was a poor use of maven to start with.\nI would be happy to remove the -Dcopy workflow completely. But figured it would be easier to review if it was easy to change between old and new approach.", "author": "jodygarnett", "createdAt": "2020-05-25T13:50:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3ODQ1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3Njk0Mg==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431576942", "bodyText": "I updated the README.md to mention add-schema.sh here, I am not quite sure how to use it.", "author": "jodygarnett", "createdAt": "2020-05-28T04:38:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3ODQ1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3NTQyOA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432275428", "bodyText": "The maven-ant-plugin technique worked, It does not appear that add-schema.sh script is required or will function as written.\nI could also not tell from reading the add-schema.sh if it added additional dependencies to web/pom.xml (but I did not look too closely).", "author": "jodygarnett", "createdAt": "2020-05-29T06:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3ODQ1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2OTAxNA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431469014", "bodyText": "Missing ending element for  <fileMappers>", "author": "ianwallen", "createdAt": "2020-05-27T22:04:03Z", "path": "web/README.md", "diffHunk": "@@ -1,2 +1,152 @@\n+# GeoNetwork Web application\n+\n The web module contains the static resources and configuration file for building the final web application WAR.\n-# Web Application Configuration\n+\n+1. Run embedded Jetty server:\n+   \n+   ```\n+   mvn jetty:run -Penv-dev\n+   ```\n+   \n+   The `env-dev` profile above ensures geonetwork runs without a javascript cache allowing testing of changes to `web-ui`.\n+\n+2. After a moment, GeoNetwork should be accessible at:\n+   \n+   * http://localhost:8080/geonetwork\n+   \n+3. For changes related to the user interface in the `web-ui` module or the metadata schemas, can be deployed in jetty:\n+\n+   ```\n+   mvn process-resources\n+   ```\n+   Jetty is configured to use `src/main/webapp` and classpath and will reload any changes. Use of `process-resources` or `install` will be picked up by the running application.\n+\n+# Management of Schema Plugins\n+\n+The web application `src/main/webapp` contains `WEB-INF/data/config/schema_plugins` used\n+by the application.\n+\n+1. To include additional schema plugins use the appropriate profile:\n+   \n+   ```\n+   mvn process-resources -Piso19139.xyz\n+   mvn jetty:run -Piso19139.xyz\n+   ```\n+\n+2. The profile makes use of the artifact `schema-iso19139.xyz`.\n+   \n+   When testing you can build this artifact from a local checkout:\n+   \n+   ```\n+   cd iso19139.xyz\n+   mvn install\n+   ```\n+   \n+   And test using `process-resources` as shown above.\n+\n+3. Tip: If you commonly work with a set series of plugins you can manage via [settings.xml](https://maven.apache.org/settings.html):\n+   \n+   ```xml\n+   <settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n+     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+     xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0\n+                         https://maven.apache.org/xsd/settings-1.0.0.xsd\">\n+     ...\n+     <activeProfiles>\n+       <activeProfile>iso19139.xyz</activeProfile>\n+     </activeProfiles>\n+   </settings>\n+   ```\n+\n+## Include a schema plugin\n+\n+To include your schema plugin in `web/pom.xml`:\n+\n+1.  Add a profile to `web/pom.xml` unpacking your schema plugin.\n+   \n+   ```xml\n+    <profile>\n+      <id>iso19139.xyz</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139.xyz</artifactId>\n+                <version>${gn.schemas.version>}</version>\n+              </dependency>\n+            </dependencies>\n+            <executions>\n+              <execution>\n+                <id>iso19139.xyz-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>iso19139.xyz</artifactId>\n+                      <version>${gn.schemas.version>}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>", "originalCommit": "6b4ec123bdb2dea9119f0b379ac877e6be244d0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4OTUwNQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431789505", "bodyText": "I like the idea that you are using the same id for both web and schema pom but unfortunately it does not work - only one is activated.  So it may need to be renamed - maybe schema-iso19115-3.2018 and module-iso19115-3.2018?", "author": "ianwallen", "createdAt": "2020-05-28T12:14:34Z", "path": "schemas/pom.xml", "diffHunk": "@@ -51,8 +51,29 @@\n     <module>dublin-core</module>\n     <module>iso19110</module>\n     <module>iso19139</module>\n-    <module>iso19115-3.2018</module>\n   </modules>\n+\n+  <profiles>\n+    <profile>\n+      <id>iso19115-3.2018</id>", "originalCommit": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3Nzg2Mw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431977863", "bodyText": "I think they both should activate (we use the same pattern in geoserver codebase). I am going to double check if my automatic automation is wrong :P", "author": "jodygarnett", "createdAt": "2020-05-28T16:44:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4OTUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3NTk3OA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432275978", "bodyText": "I have successfully used the same profile name in both schemas/pom.xml and web/pom.xml.\nI tested by excluding on the command line:\nmvn clean install -P-schema-iso19115-3-2018\ncd web\nmvn jetty:run -P-schema-iso19115-3-2018", "author": "jodygarnett", "createdAt": "2020-05-29T06:15:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4OTUwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NjY4OA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431796688", "bodyText": "copy is fairly generic.  i.e. -Dcopy is not that meaningful.  I would recommend that we use -Dcopy_schema or -DcopySchema of something along those lines.", "author": "ianwallen", "createdAt": "2020-05-28T12:27:40Z", "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,211 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <property><name>!copy</name></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>\n+      <activation> <!-- default, disabled by -Dcopy -->\n+        <property><name>!copy</name></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19139</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-csw-record</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19110</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-dublin-core</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Copy schema resources using relative paths -->\n+    <profile>\n+      <id>copy-schemas</id>\n+      <activation> <!-- use -Dcopy to activate       -->\n+        <property><name>copy</name></property>", "originalCommit": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3NjE1Mw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432276153", "bodyText": "copySchema is now used", "author": "jodygarnett", "createdAt": "2020-05-29T06:16:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NjY4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5OTE5MA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431799190", "bodyText": "The 2 profiles - unpack-schemas and copy-schemas - they are not grouped correctly when showing the maven toolbox in Intellij.  I see the env settings for prod/dev/inspire grouped together because they all start with env- and this makes it easier to see the options.  So I'm recommending that these be renamed to schemas-unpack and schemas-copy so that they are grouped next to each other in the maven toolbar.", "author": "ianwallen", "createdAt": "2020-05-28T12:32:05Z", "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,211 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <property><name>!copy</name></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>\n+      <activation> <!-- default, disabled by -Dcopy -->\n+        <property><name>!copy</name></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>", "originalCommit": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4MDE3MA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431980170", "bodyText": "I was not sure if it would be polite to rename copy-schemas so I matched its naming convention. I agree that renaming both to sort into the same spot in the IDE is a nice touch.\nHowever for these I did not want either profile used, I wanted folks to use -Dcopy=true or -Dcopy=false so only one profile enables at a time. This is a best practice for setting up either/or profiles.\nI guess that is hard to manage in IntelliJ so you need to do that by hand?", "author": "jodygarnett", "createdAt": "2020-05-28T16:48:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5OTE5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3NjUxNQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432276515", "bodyText": "I have renamed to schemas-unpack and schemas-copy, I also named the schema profiles to sort into the same section of the list.", "author": "jodygarnett", "createdAt": "2020-05-29T06:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5OTE5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxODUyNw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432418527", "bodyText": "Looks better - thank you.\nIt would have been nice to also rename all the related variables/properties as well to be in line with the profile name but it is fine is these cannot be changed..", "author": "ianwallen", "createdAt": "2020-05-29T11:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5OTE5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0MjAyOA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432842028", "bodyText": "renamed the property to match.", "author": "jodygarnett", "createdAt": "2020-05-30T13:31:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5OTE5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMTYyMQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431801621", "bodyText": "I noticed that if I run mvn -Pcopy-schemas then it will run both the copy-schemas (because I mentioned it in the profile) and the unpack_schemas (because -Dcopy does not exists).  The same issues probably happens when using the -P to set env variables.   I quickly looked online and did see others with similar issues but I did not see a easy fix - so this may not be easy to fix.  Just wanted to bring it to your attention as you may know of a way to fix this.", "author": "ianwallen", "createdAt": "2020-05-28T12:36:40Z", "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,211 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <property><name>!copy</name></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>\n+      <activation> <!-- default, disabled by -Dcopy -->\n+        <property><name>!copy</name></property>", "originalCommit": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4MTM0Ng==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431981346", "bodyText": "Are you confusing -D and -P?\nYou can force a profile to run using -P<profile> (or not run using -P!<profile>.\nI think this is a case where in your IDE you are manually enabling/disabling some profiles rather than passing in -Dcopy=true as intended.", "author": "jodygarnett", "createdAt": "2020-05-28T16:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMTYyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4NzU3NQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431987575", "bodyText": "I would like to experiment if we can manage -Dcopy=true in InteilJ and have it correctly activate (and deactivate) the two alternative profiles.\nIf not we are stuck:\n\nAdding -Pcopy-schema -P!unpack-schema to the run/debug configuration.\nEnabling/disabling profiles in IntilliJ maven tool window\n\nReference: work with maven profiles IntelliJ", "author": "jodygarnett", "createdAt": "2020-05-28T17:01:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMTYyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3NjczMw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432276733", "bodyText": "Enabling/disabiling profiles in maven tool window worked.", "author": "jodygarnett", "createdAt": "2020-05-29T06:18:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMTYyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMjAyOQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431802029", "bodyText": "Other profile use \"-\" for separator so we may want to be consistent.", "author": "ianwallen", "createdAt": "2020-05-28T12:37:21Z", "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,211 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <property><name>!copy</name></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>", "originalCommit": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxNjU1Ng==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432416556", "bodyText": "I though this was going to be removed?  If not then it should be renamed to schema-iso19139.ca.HNAP to be consistent.", "author": "ianwallen", "createdAt": "2020-05-29T11:14:21Z", "path": "schemas/pom.xml", "diffHunk": "@@ -51,8 +51,29 @@\n     <module>dublin-core</module>\n     <module>iso19110</module>\n     <module>iso19139</module>\n-    <module>iso19115-3.2018</module>\n   </modules>\n+\n+  <profiles>\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <file><exists>iso19115-3.2018</exists></file>\n+      </activation>\n+      <modules>\n+        <module>iso19115-3.2018</module>\n+      </modules>\n+    </profile>\n+    <profile>\n+      <id>hnap</id>", "originalCommit": "739bc2b8939404c5ddd1dd3e45b5d62c1a55cd38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwNTQ5NA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432505494", "bodyText": "This is a built-in schema that is handled as a sub module (it was a sub module before i started).\nSince it was already here I can use it as a working example of how the metadata101 modules are integrated.", "author": "jodygarnett", "createdAt": "2020-05-29T14:06:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxNjU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2MjAwNA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432862004", "bodyText": "Sorry - I'm confused?\niso19115-3-2018 is a build in schema that is handled as a submodule.  I see that you have moved    iso19115-3-2018  to a profile that should only include  iso19115-3-2018  module if the folder exists.\nHNAP is a submodule as well but it it was not there before you started.  So I don't understand your comment \"(it was a sub module before i started)\".  I think you  are referring to  iso19115-3-2018 profile but I'm referring to hnap profile.", "author": "ianwallen", "createdAt": "2020-05-30T15:14:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxNjU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDg3NQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432864875", "bodyText": "I just noticed in the comment below that you mentioned that you will be adding HNAP and many other profiles in the future.  So it sound like you are not removing HNAP. So in this case I propose that it be renamed to schema-iso19139.ca.HNAP.", "author": "ianwallen", "createdAt": "2020-05-30T15:42:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxNjU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2Mzc3Ng==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433163776", "bodyText": "Should be -DschemasCopy=true", "author": "ianwallen", "createdAt": "2020-06-01T10:43:53Z", "path": "web/README.md", "diffHunk": "@@ -1,2 +1,180 @@\n+# GeoNetwork Web application\n+\n The web module contains the static resources and configuration file for building the final web application WAR.\n-# Web Application Configuration\n+\n+1. Run embedded Jetty server:\n+   \n+   ```\n+   mvn jetty:run -Penv-dev\n+   ```\n+   \n+   The `env-dev` profile above ensures geonetwork runs without a javascript cache allowing testing of changes to `web-ui`.\n+\n+2. After a moment, GeoNetwork should be accessible at:\n+   \n+   * http://localhost:8080/geonetwork\n+\n+4. Jetty is configured to use `src/main/webapp` and maven classpath and will reload changes:\n+   \n+   * For changes related to the user interface in the `web-ui` module:\n+     \n+     ```\n+     mvn process-resources\n+     ```\n+   \n+   * For changes to schema plugins:\n+   \n+     ```\n+     cd ../schemas\n+     mvn install\n+     cd ../web\n+     mvn process-resources\n+     ```\n+   \n+   * You may also try the following (which just copies between folders):\n+     \n+     ```\n+     mvn process-resources -DschemasCopy=true\n+     ```\n+\n+# Managing Schema Plugins\n+\n+The web application `src/main/webapp` contains `WEB-INF/data/config/schema_plugins` used\n+by the application.\n+\n+If your plugin is in the `schemas` folder:\n+\n+1. The `web/pom.xml` is setup to run jetty and automatically include any additional\n+   schema plugins in the `schemas` folder.\n+   \n+\n+If your plugin is not in the `schemas` folder:\n+\n+2. If you are building a metadata101 plugin separately, or working with your own plugin:\n+\n+   ```\n+   cd iso19139.xyz\n+   mvn install\n+   ```\n+\n+3. Use `jetty:run` with an additional profile to test your plugin:\n+   \n+   ```\n+   mvn install -Pschema-iso19139.xyz\n+   mvn jetty:run -Pschema-iso19139.xyz\n+   ```\n+\n+2. In the example above the profile `-Pschema-iso19139.xyz`:\n+   \n+   * Includes `schema-iso19139.xyz` artifact as a dependency, making the schema plugin bean is available on the CLASSPATH.\n+   * Unpacks the `schema-iso19139.xyz` artifact `plugin` folder into `WEB-INF/data/config/schema_plugins`\n+\n+4. The profile can also be used with `process-resources` while jetty is running:\n+   \n+   ```\n+   cd web\n+   mvn process-resources -Pschema-iso19139.xyz\n+   ```\n+\n+5. Tip: If you commonly work with a set series of plugins you can manage via [settings.xml](https://maven.apache.org/settings.html).\n+\n+## Including additional schema plugins\n+\n+To include your schema plugin in `web/pom.xml`:\n+\n+1.  Add a profile to `web/pom.xml` unpacking your schema plugin.\n+\n+    Use the `iso19115-3.2018` as an example, at the time of writing:\n+   \n+   ```xml\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+   ```\n+\n+2. This profile example has several interesting features:\n+   \n+   * Activates automatically if the `schemas/iso19115-3.2018` folder is present\n+   * Disabled if `-DcopySchemas=true` property is set", "originalCommit": "4d589d2400d81e0c78066b974ece1d6e9c6702ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2NDM3OQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433164379", "bodyText": "Should be schema-iso19139.xyz to be consistent with documentation.", "author": "ianwallen", "createdAt": "2020-06-01T10:45:22Z", "path": "schemas/README.md", "diffHunk": "@@ -1,17 +1,60 @@\n # Maven module containing schema plugins\n \n-## Plugin structure\n-\n-A schema plugin is composed off:\n-\n-* A configuration folder containing XML file for configuration,\n-the schema as XSDs and a set of transformation (See http://geonetwork-opensource.org/manuals/trunk/eng/developer/schemaPlugins/index.html).\n-\n-* (optional) A SchemaPlugin bean\n-\n+## Schema Plugin Definition\n+\n+#. `src/main/plugin/<folder>` plugin contents:\n+   \n+  * `schema-ident.xml` configuration file\n+  * schema definition `xsd` files\n+  * transformations `xsl` files\n+  * See [GeoNetwork Manual](https://geonetwork-opensource.org/manuals/trunk/en/customizing-application/implementing-a-schema-plugin.html)\n+\n+#. `src/main/java` providing:\n+  \n+  * Optional: SchemaPlugin bean\n+  * Optional: ApplicationListener<ServerStartup> to auto install plugin\n+\n+#. Be sure your plugin includes `src/main/plugin`:\n+   \n+   ```xml\n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+      </resource>\n+      <resource>\n+        <directory>src/main/plugin</directory>\n+        <targetPath>plugin</targetPath>\n+      </resource>\n+    </resources>\n+   ```\n+\n+#. Use `mvn install` to install your schema plugin in your local repository.\n \n ## Add a plugin to the build\n \n-To include a new schema plugin in a build, copy the schema folder\n-here and add it to the copy-schemas execution in web/pom.xml.\n+While schema plugins can be built idependently, they can be conditionally included in the build:\n+\n+1. Add schema plugin:\n+\n+   * As a folder, using `.gitignore` to avoid accidentally commiting.\n+   \n+   * As a git submodule if you are making a fork\n+`\n+2. Use a profile (activated by your folder being present) to include your schema plugin to the list of modules in `pom.xml`.\n+   \n+   ```xml\n+   <profiles>\n+     <profile>\n+       <id>iso19139.xyz</id>", "originalCommit": "4d589d2400d81e0c78066b974ece1d6e9c6702ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2NjQ3OQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433166479", "bodyText": "Should be \"schemas-copy\"  (remove trailing s)\nShould be \"web/pom.xml\" to make it clear that this is the web/pom.xml", "author": "ianwallen", "createdAt": "2020-06-01T10:50:38Z", "path": "web/README.md", "diffHunk": "@@ -1,2 +1,180 @@\n+# GeoNetwork Web application\n+\n The web module contains the static resources and configuration file for building the final web application WAR.\n-# Web Application Configuration\n+\n+1. Run embedded Jetty server:\n+   \n+   ```\n+   mvn jetty:run -Penv-dev\n+   ```\n+   \n+   The `env-dev` profile above ensures geonetwork runs without a javascript cache allowing testing of changes to `web-ui`.\n+\n+2. After a moment, GeoNetwork should be accessible at:\n+   \n+   * http://localhost:8080/geonetwork\n+\n+4. Jetty is configured to use `src/main/webapp` and maven classpath and will reload changes:\n+   \n+   * For changes related to the user interface in the `web-ui` module:\n+     \n+     ```\n+     mvn process-resources\n+     ```\n+   \n+   * For changes to schema plugins:\n+   \n+     ```\n+     cd ../schemas\n+     mvn install\n+     cd ../web\n+     mvn process-resources\n+     ```\n+   \n+   * You may also try the following (which just copies between folders):\n+     \n+     ```\n+     mvn process-resources -DschemasCopy=true\n+     ```\n+\n+# Managing Schema Plugins\n+\n+The web application `src/main/webapp` contains `WEB-INF/data/config/schema_plugins` used\n+by the application.\n+\n+If your plugin is in the `schemas` folder:\n+\n+1. The `web/pom.xml` is setup to run jetty and automatically include any additional\n+   schema plugins in the `schemas` folder.\n+   \n+\n+If your plugin is not in the `schemas` folder:\n+\n+2. If you are building a metadata101 plugin separately, or working with your own plugin:\n+\n+   ```\n+   cd iso19139.xyz\n+   mvn install\n+   ```\n+\n+3. Use `jetty:run` with an additional profile to test your plugin:\n+   \n+   ```\n+   mvn install -Pschema-iso19139.xyz\n+   mvn jetty:run -Pschema-iso19139.xyz\n+   ```\n+\n+2. In the example above the profile `-Pschema-iso19139.xyz`:\n+   \n+   * Includes `schema-iso19139.xyz` artifact as a dependency, making the schema plugin bean is available on the CLASSPATH.\n+   * Unpacks the `schema-iso19139.xyz` artifact `plugin` folder into `WEB-INF/data/config/schema_plugins`\n+\n+4. The profile can also be used with `process-resources` while jetty is running:\n+   \n+   ```\n+   cd web\n+   mvn process-resources -Pschema-iso19139.xyz\n+   ```\n+\n+5. Tip: If you commonly work with a set series of plugins you can manage via [settings.xml](https://maven.apache.org/settings.html).\n+\n+## Including additional schema plugins\n+\n+To include your schema plugin in `web/pom.xml`:\n+\n+1.  Add a profile to `web/pom.xml` unpacking your schema plugin.\n+\n+    Use the `iso19115-3.2018` as an example, at the time of writing:\n+   \n+   ```xml\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+   ```\n+\n+2. This profile example has several interesting features:\n+   \n+   * Activates automatically if the `schemas/iso19115-3.2018` folder is present\n+   * Disabled if `-DcopySchemas=true` property is set\n+   * Adds a dependency using a version range so that the schema plugin jar is included\n+   * Unpacks a `plugin` folder into the webapp `schema_plugins` folder\n+\n+3. Over time we expect active metadata101 schema plugins be listed.\n+\n+## Alternative: Add schema plugin to `copy-schemas` profile\n+\n+An alternative approach of copying folders is available using the `-DschemasCopy` flag:\n+\n+* `-DschemasCopy=true`: copies folders from `../schemas` location\n+* `-DschemasCopy=false`: default approach, using artifact and maven repository\n+\n+To add your schema plugin to the `schemas-copy` profile:\n+\n+1. Locate the `schemas-copys` profile in `pom.xml`:", "originalCommit": "4d589d2400d81e0c78066b974ece1d6e9c6702ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MTUzMg==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433181532", "bodyText": "Intellij give me an error on this line.  It indicates that encoding is not allowed here?  Based on the following\nhttps://maven.apache.org/plugins/maven-resources-plugin/examples/encoding.html the encoding is on a configuration element under plugin not execution.", "author": "ianwallen", "createdAt": "2020-06-01T11:28:26Z", "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,221 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>", "originalCommit": "4d589d2400d81e0c78066b974ece1d6e9c6702ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxMTA0MA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433511040", "bodyText": "Thanks, that took some research to double check:\n\nConfiguration is allowed in both cases\nMy mistake is that encoding is not supported at all", "author": "jodygarnett", "createdAt": "2020-06-01T21:54:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MTUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MjI4OQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433182289", "bodyText": "Shouldn't the copy resource for schema-iso19115-3.2018 be here?  And iso19139.xyz can be removed in this case as iso19139.xyz is not supplied as a sample in all the other locations.", "author": "ianwallen", "createdAt": "2020-06-01T11:30:25Z", "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,221 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>schemas-unpack</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19139</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-csw-record</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19110</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-dublin-core</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Copy schema resources using relative paths -->\n+    <profile>\n+      <id>schemas-copy</id>\n+      <activation> <!-- use -DcopySchemas=true to activate       -->\n+        <property><name>schemasCopy</name><value>true</value></property>\n+      </activation>\n+      <!-- Add dependencies to schema plugin having a custom Bean to be loaded. -->\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-antrun-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>copy-schemas-ant</id>\n+                <phase>process-resources</phase>\n+                <goals>\n+                  <goal>run</goal>\n+                </goals>\n+                <configuration>\n+                    <!-- Copy all the src/main/plugin folders in schemas to the webapp folder\n+                    in order to be loaded by the application when running mvn jetty:run.\n+                    -->\n+                  <target description=\"copy from schemas to schema_plugins folder\">\n+                    <copy todir=\"${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\">\n+                      <fileset dir=\"${basedir}/../schemas/\">\n+                        <include name=\"**/src/main/plugin/**\"/>\n+                      </fileset>\n+                      <regexpmapper handledirsep=\"yes\"\n+                        from=\"^[-_a-zA-Z0-9]+/src/main/plugin/(.*)\"\n+                          to=\"\\1\" />\n+                    </copy>\n+                  </target>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-resources-plugin</artifactId>\n+            <!-- copy schema resources using relative paths -->\n+            <executions>\n+              <execution>\n+                <id>copy-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals>\n+                  <goal>copy-resources</goal>\n+                </goals>\n+                <configuration>\n+                  <includeEmptyDirs>true</includeEmptyDirs>\n+                  <overwrite>true</overwrite>\n+                  <outputDirectory>${build.webapp.resources}</outputDirectory>\n+                  <resources>\n+                    <!-- Copy src/main/plugin folder to webapp folder source directory", "originalCommit": "4d589d2400d81e0c78066b974ece1d6e9c6702ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxMjE3OQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433512179", "bodyText": "The execution copy-schemas-ant above handles all the contents in the schemas folder.\nThis example is provided if folks need to copy in something that is not in the schemas folder.", "author": "jodygarnett", "createdAt": "2020-06-01T21:57:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MjI4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0NDEzNQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433544135", "bodyText": "Ian / Jose your changes to add-schema.sh work as expected (thank you).\nIan your change to add-schema.sh fill in this section, while it does no harm it is no longer required (and only useful if you are working with a schema plugin that is not in the schemas folder.", "author": "jodygarnett", "createdAt": "2020-06-01T23:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MjI4OQ=="}], "type": "inlineReview"}, {"oid": "7cf015b7d6ae9a8e3876db28ac044d0406ab8b72", "url": "https://github.com/geonetwork/core-geonetwork/commit/7cf015b7d6ae9a8e3876db28ac044d0406ab8b72", "message": "Add choice to unpack or copy schema plugins\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-06-01T22:28:41Z", "type": "forcePushed"}, {"oid": "6e3c65f4c4f3eac3a7784e72f78d04eff52fa186", "url": "https://github.com/geonetwork/core-geonetwork/commit/6e3c65f4c4f3eac3a7784e72f78d04eff52fa186", "message": "Add choice to unpack or copy schema plugins\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-06-29T21:40:26Z", "type": "commit"}, {"oid": "93aff0047bdeaeefd0728900f2e0f67cfd92649f", "url": "https://github.com/geonetwork/core-geonetwork/commit/93aff0047bdeaeefd0728900f2e0f67cfd92649f", "message": "Do not commit .bak files\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-06-29T21:40:26Z", "type": "commit"}, {"oid": "93aff0047bdeaeefd0728900f2e0f67cfd92649f", "url": "https://github.com/geonetwork/core-geonetwork/commit/93aff0047bdeaeefd0728900f2e0f67cfd92649f", "message": "Do not commit .bak files\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-06-29T21:40:26Z", "type": "forcePushed"}, {"oid": "72bbfea807ee7f4f68740a24c805eb03bec24119", "url": "https://github.com/geonetwork/core-geonetwork/commit/72bbfea807ee7f4f68740a24c805eb03bec24119", "message": "Consistently use 3.11.0-SNAPSHOT\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-06-30T05:55:18Z", "type": "commit"}, {"oid": "780454d7de354b5c6644b9b94467abfc75f44f6b", "url": "https://github.com/geonetwork/core-geonetwork/commit/780454d7de354b5c6644b9b94467abfc75f44f6b", "message": "Test use of zip using dublin core\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-06-30T21:58:08Z", "type": "commit"}, {"oid": "3d2b5953cbe417e13bc4a53507fdec4915c5ae23", "url": "https://github.com/geonetwork/core-geonetwork/commit/3d2b5953cbe417e13bc4a53507fdec4915c5ae23", "message": "Assemble schema plugins as zip archives and unpack into web\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-06-30T22:45:38Z", "type": "commit"}, {"oid": "5b515b06aad9648090f3a9c6c439336951252e0e", "url": "https://github.com/geonetwork/core-geonetwork/commit/5b515b06aad9648090f3a9c6c439336951252e0e", "message": "Update readme instructions and add-schema.sh\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-06-30T23:08:15Z", "type": "commit"}, {"oid": "bc18709fc405604dd3f3694c12160f51bc64e591", "url": "https://github.com/geonetwork/core-geonetwork/commit/bc18709fc405604dd3f3694c12160f51bc64e591", "message": "Add notes on how web-app is built\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-07-02T06:21:11Z", "type": "commit"}, {"oid": "84314393a88e06709a5ad0a6437b3c3a5b65096f", "url": "https://github.com/geonetwork/core-geonetwork/commit/84314393a88e06709a5ad0a6437b3c3a5b65096f", "message": "include comments in all the filters for ease of comparison\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-07-02T06:21:55Z", "type": "commit"}, {"oid": "2e293e5a61180a3f313e0de44a17e731d3a5eb97", "url": "https://github.com/geonetwork/core-geonetwork/commit/2e293e5a61180a3f313e0de44a17e731d3a5eb97", "message": "Remove build process research from README.md into a core-geonetwork proposal", "committedDate": "2020-07-08T00:17:42Z", "type": "commit"}, {"oid": "a121a6ee84d0477fbee4fa2a25e1f88b7487c332", "url": "https://github.com/geonetwork/core-geonetwork/commit/a121a6ee84d0477fbee4fa2a25e1f88b7487c332", "message": "Remove submodule and Include iso19115-3 directly\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-07-08T17:00:40Z", "type": "commit"}, {"oid": "0bdcb0706e9fae57309486e09bff2712af9cc021", "url": "https://github.com/geonetwork/core-geonetwork/commit/0bdcb0706e9fae57309486e09bff2712af9cc021", "message": "resolve regex for iso19115-3.2018\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-07-08T20:31:38Z", "type": "commit"}, {"oid": "bbb2615054a5f3789db313f7a98958c2d8acf7f8", "url": "https://github.com/geonetwork/core-geonetwork/commit/bbb2615054a5f3789db313f7a98958c2d8acf7f8", "message": "Update example snippet in add-schema.sh\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-07-08T20:55:04Z", "type": "commit"}, {"oid": "bc3646dcc3c8c6ad02c9bfacf641bb63018b83aa", "url": "https://github.com/geonetwork/core-geonetwork/commit/bc3646dcc3c8c6ad02c9bfacf641bb63018b83aa", "message": "Add escapes so schema-plugins.dir is used in generated web/pom.xml unpack\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-07-08T21:23:57Z", "type": "commit"}, {"oid": "11382c909b61dd84f3c511467ac36464ae3babd9", "url": "https://github.com/geonetwork/core-geonetwork/commit/11382c909b61dd84f3c511467ac36464ae3babd9", "message": "Merge branch 'master' into artifact_unpack", "committedDate": "2020-07-23T06:44:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxNzUyMw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r468517523", "bodyText": "This looks quite similar to the one above no? Can we get rid of it?", "author": "fxprunayre", "createdAt": "2020-08-11T11:42:55Z", "path": "schemas/dublin-core/pom.xml", "diffHunk": "@@ -42,6 +45,44 @@\n           </execution>\n         </executions>\n       </plugin>\n+\n+      <!-- package up plugin folder as a zip -->\n+      <plugin>\n+        <artifactId>maven-assembly-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>plugin-assembly</id>\n+            <phase>package</phase>\n+            <goals><goal>single</goal></goals>\n+            <inherited>false</inherited>\n+            <configuration>\n+             <appendAssemblyId>false</appendAssemblyId>\n+             <descriptors>\n+              <descriptor>src/assembly/schema-plugin.xml</descriptor>\n+             </descriptors>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n+      <plugin>", "originalCommit": "11382c909b61dd84f3c511467ac36464ae3babd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3OTYxNA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r468879614", "bodyText": "Yes, not sure why it was duplicated.", "author": "jodygarnett", "createdAt": "2020-08-11T21:38:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxNzUyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r468548234", "bodyText": "@jodygarnett, questions you may have hints on.\n\nwhen a file is removed from a plugin, it is not removed from the data dir. I tried overWrite true without success. BTW overwrite helps when a file is removed from the datadir (which should not happen often) but when switching from one branch to another, you may end up with the wrong version? Maybe there is a clean first option ?\nWe used to be able to do mvn process-resources to update the plugin in the datadir - how do you do know? We have to build the plugin first and then process-resource for unpack or do you have a one step command?\n\nThanks", "author": "fxprunayre", "createdAt": "2020-08-11T12:40:07Z", "path": "web/pom.xml", "diffHunk": "@@ -922,10 +891,146 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>schemas-unpack</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <!-- unpack built-in schema plugins into schema-plugins directory -->\n+                    <artifactItem>\n+                      <groupId>org.geonetwork-opensource.schemas</groupId>\n+                      <artifactId>schema-iso19139</artifactId>\n+                      <type>zip</type>\n+                      <overWrite>false</overWrite>", "originalCommit": "11382c909b61dd84f3c511467ac36464ae3babd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg4NzQ5MA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r468887490", "bodyText": "removed files:\n\nI agree it would be smart to run \"mvn clean\" when switching branches.\nReading overright rules is interesting but shows no way to have files removed\n\nCorrect two steps are required using this approach, but:\n\nYou can still use mvn process-resources -DschemasCopy=true if you want a one step command\nSee next proposal[(https://github.com/geonetwork/core-geonetwork/wiki/Resolve-competing-web-module-war-definitions) for a long term solution...\n\n(I corrected the above text to use the correct -D property name)", "author": "jodygarnett", "createdAt": "2020-08-11T21:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk3MjAxOA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r472972018", "bodyText": "You can still use mvn process-resources -PschemaCopy=true if you want a one step command\n\n\nLooks to not be working - maybe I'm doing something wrong? Ended up using #4946 which is faster.", "author": "fxprunayre", "createdAt": "2020-08-19T11:54:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNDA5MQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r473004091", "bodyText": "I have a proposal to make things easier long term for your consideration: https://github.com/geonetwork/core-geonetwork/wiki/Resolve-competing-web-module-war-definitions\nCan I ask what \"looks not to be working\" means, do you have a concrete example to test?  The existing setup has schema plugins spliced into the war in multiple locations (and directly watched also). Were you able to see your change copied into the correct location? Was it still not recognized?", "author": "jodygarnett", "createdAt": "2020-08-19T12:51:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwODMwMw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r473008303", "bodyText": "Test case:\n\nWith GeoNetwork running with mvn jetty:run, in the schemas project, change a file, for example: SOURCES/schemas/iso19139/src/main/plugin/iso19139/layout/layout.xsl\n\nAdding for example this following line <xsl:message>TEST</xsl:message>, below:\nhttps://github.com/geonetwork/core-geonetwork/blob/master/schemas/iso19139/src/main/plugin/iso19139/layout/layout.xsl, adding a message in \n  \n    \n      core-geonetwork/schemas/iso19139/src/main/plugin/iso19139/layout/layout.xsl\n    \n    \n        Lines 65 to 67\n      in\n      5706648\n    \n    \n    \n    \n\n        \n          \n           <xsl:template mode=\"mode-iso19139\" match=\"gn:child\" priority=\"2000\"> \n        \n\n        \n          \n             <xsl:param name=\"schema\" select=\"$schema\" required=\"no\"/> \n        \n\n        \n          \n             <xsl:param name=\"labels\" select=\"$labels\" required=\"no\"/> \n        \n    \n  \n\n\n\n\nFrom the web module, execute `mvn process-resources -PschemaCopy=true``\n\n\nCheck the file deployed: SOURCES/web/src/main/webapp/WEB-INF/data/config/schema_plugins/iso19139/layout/layout.xsl, doesn't contain the previous change.", "author": "josegar74", "createdAt": "2020-08-19T12:58:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAxNzU3MQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r473017571", "bodyText": "Please use -DschemasCopy=true command line option, you can also run with -X and should be able to see it copy in the logs.", "author": "jodygarnett", "createdAt": "2020-08-19T13:12:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAyOTE2MQ==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r473029161", "bodyText": "I tested locally by changing the following preservelastmodified=\"true\" verbose=\"true\":\n                  <target description=\"copy from schemas to schema_plugins folder\">\n                    <copy todir=\"${schema-plugins.dir}\" preservelastmodified=\"true\" verbose=\"true\">\n                      <fileset dir=\"${basedir}/../schemas/\">\n                        <include name=\"**/src/main/plugin/**\"/>\n                      </fileset>\n                      <regexpmapper handledirsep=\"yes\"\n                        from=\"^[-_\\.a-zA-Z0-9]+/src/main/plugin/(.*)\"\n                          to=\"\\1\" />\n                    </copy>\n\nAnd using mvn process-resources -DschemasCopy=true, it shows:\n[INFO] --- maven-antrun-plugin:3.0.0:run (copy-schemas-ant) @ web-app ---\n[INFO] Executing tasks\n[INFO]      [copy] Copying 1 file to /Users/jgarnett/java/geonetwork/core-geonetwork/web/src/main/webapp/WEB-INF/data/config/schema_plugins\n[INFO]      [copy] Copying /Users/jgarnett/java/geonetwork/core-geonetwork/schemas/iso19139/src/main/plugin/iso19139/layout/layout.xsl to /Users/jgarnett/java/geonetwork/core-geonetwork/web/src/main/webapp/WEB-INF/data/config/schema_plugins/iso19139/layout/layout.xsl\n[INFO] Executed tasks\n\nThanks for the test case @josegar74, is it copying into the correct location?", "author": "jodygarnett", "createdAt": "2020-08-19T13:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAzNDUxOA==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r473034518", "bodyText": "The documentation appears correct in web/README.md, I am sorry it appears I had the -D example incorrect in this thread earlier and confused everyone. I am much more focused on making sure the docs are correct.", "author": "jodygarnett", "createdAt": "2020-08-19T13:36:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAzNTUxNg==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r473035516", "bodyText": "@josegar74 I like the use of preservelastmodified=\"true\" above, perhaps you can add that to master, it uses the original last modified time for the copied files making it easier to confirm exactly what is being run.", "author": "jodygarnett", "createdAt": "2020-08-19T13:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA5MTM0Nw==", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r473091347", "bodyText": "Here is a small PR for that #4948", "author": "jodygarnett", "createdAt": "2020-08-19T14:52:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA=="}], "type": "inlineReview"}]}