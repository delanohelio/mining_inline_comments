{"pr_number": 1889, "pr_title": "Add more values to coap-adapter configuration.", "pr_createdAt": "2020-04-08T12:38:58Z", "pr_url": "https://github.com/eclipse/hono/pull/1889", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMTYwNw==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405501607", "bodyText": "There is no need for the @value tag here as this is already the place where it is defined.\nUsing the @value tag makes sense in JavaDoc comments of other methods where you would like to refer to the value of the constant instead of the definition (as you already do below) ...", "author": "sophokles73", "createdAt": "2020-04-08T12:54:48Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -23,16 +23,52 @@\n public class CoapAdapterProperties extends ProtocolAdapterProperties {\n \n     /**\n-     * The default regular expression to split the identity into authority and tenant.\n+     * The default regular expression to split the identity into authority and tenant. Value", "originalCommit": "d00bb8c56f6e6e30b490a370739165f22697f6d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNDUzNw==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405534537", "bodyText": "OK", "author": "boaks", "createdAt": "2020-04-08T13:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMTYwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMjIzNA==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405502234", "bodyText": "are these values supposed to be per processor core?", "author": "sophokles73", "createdAt": "2020-04-08T12:55:52Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -23,16 +23,52 @@\n public class CoapAdapterProperties extends ProtocolAdapterProperties {\n \n     /**\n-     * The default regular expression to split the identity into authority and tenant.\n+     * The default regular expression to split the identity into authority and tenant. Value\n+     * {@value #DEFAULT_ID_SPLIT_REGEX}.\n      */\n     public static final String DEFAULT_ID_SPLIT_REGEX = \"@\";\n+    /**\n+     * The default number of threads for the connector. Value {@value #DEFAULT_CONNECTOR_THREADS}.\n+     */\n+    public static final int DEFAULT_CONNECTOR_THREADS = 2;\n+    /**\n+     * The default number of threads for the coap protocol stack. Value {@value #DEFAULT_COAP_THREADS}.\n+     */\n+    public static final int DEFAULT_COAP_THREADS = 16;\n+    /**\n+     * The default number of threads for the dtls connector. Value {@value #DEFAULT_DTLS_THREADS}.\n+     */\n+    public static final int DEFAULT_DTLS_THREADS = 32;", "originalCommit": "d00bb8c56f6e6e30b490a370739165f22697f6d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNDYyNQ==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405534625", "bodyText": "No, per java-vm", "author": "boaks", "createdAt": "2020-04-08T13:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMjIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0MjAyOA==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405542028", "bodyText": "I don't think I can follow. Does this mean that the same value is supposed to be the right one for a VM with 1 (virtual) core and also for a VM with 64 cores?", "author": "sophokles73", "createdAt": "2020-04-08T13:52:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMjIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0NDU0Ng==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405544546", "bodyText": "Yes, because of the current PSK limitation ;-(.", "author": "boaks", "createdAt": "2020-04-08T13:56:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMjIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0NDc3MQ==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405544771", "bodyText": "And, if you have 64 cores, just configure a larger value.", "author": "boaks", "createdAt": "2020-04-08T13:56:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMjIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3ODAyNg==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405578026", "bodyText": "So this value is indeed per core, right? If I have one core, 32 is a good value. If I have two cores, 64 is a good value? Or is there a certain minimum number of threads that we want to have?", "author": "sophokles73", "createdAt": "2020-04-08T14:42:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMjIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU4MzkwOQ==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405583909", "bodyText": "Currently I see this configuration value more as possibility to try out, what fits best. The actual default value is no based on too much experience.", "author": "boaks", "createdAt": "2020-04-08T14:50:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMjIzNA=="}], "type": "inlineReview"}, {"oid": "52824c9bbadd7714c700d66e635f10991960da4a", "url": "https://github.com/eclipse/hono/commit/52824c9bbadd7714c700d66e635f10991960da4a", "message": "Add more values to coap-adapter configuration.\n\ndtls threads: improve handshake processing\ndtls retransmission timeout: support constraint embedded devices.\nexchange lifetime: reduce heap consumption\nmessage offloading: reduce heap consumption\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>", "committedDate": "2020-04-08T14:10:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1NDQ4OA==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405654488", "bodyText": "is milliseconds the right unit here? My understanding is that the lifetime is defined in seconds rather than millis ...", "author": "sophokles73", "createdAt": "2020-04-08T16:28:13Z", "path": "site/documentation/content/admin-guide/coap-adapter-config.md", "diffHunk": "@@ -28,8 +28,11 @@ The following table provides an overview of the configuration variables and corr\n | `HONO_COAP_BIND_ADDRESS`<br>`--hono.coap.bindAddress` | no | `127.0.0.1` | The IP address of the network interface that the secure port should be bound to.<br>See [Port Configuration]({{< relref \"#port-configuration\" >}}) below for details. |\n | `HONO_COAP_CERT_PATH`<br>`--hono.coap.certPath` | no | - | The absolute path to the PEM file containing the certificate that the protocol adapter should use for authenticating to clients. This option must be used in conjunction with `HONO_COAP_KEY_PATH`.<br>Alternatively, the `HONO_COAP_KEY_STORE_PATH` option can be used to configure a key store containing both the key as well as the certificate. |\n | `HONO_COAP_COAP_THREADS`<br>`--hono.coap.coapThreads` | no | 2 | The number of threads to use for processing CoAP message exchanges at the protocol layer. |\n-| `HONO_COAP_CONNECTOR_THREADS`<br>`--hono.coap.connectorThreads` | no | 1 | The number of threads to use for receiving/sending UDP packets. The connector will start the given number of threads for each direction, outbound (sending) as well as inbound (receiving). |\n+| `HONO_COAP_CONNECTOR_THREADS`<br>`--hono.coap.connectorThreads` | no | 2 | The number of threads to use for receiving/sending UDP packets. The connector will start the given number of threads for each direction, outbound (sending) as well as inbound (receiving). |\n+| `HONO_COAP_DTLS_THREADS`<br>`--hono.coap.dtlsThreads` | no | 32 | The number of threads to use for processing DTLS message exchanges at the connection layer. |\n+| `HONO_COAP_DTLS_RETRANSMISSION_TIMEOUT`<br>`--hono.coap.dtlsRetransmissionTimeout` | no | 2000 | The timeout in milliseconds for DTLS retransmissionsnumber. |\n | `HONO_COAP_DEFAULTS_ENABLED`<br>`--hono.coap.defaultsEnabled` | no | `true` | If set to `true` the protocol adapter uses *default values* registered for a device to augment messages published by the device with missing information like a content type. In particular, the protocol adapter adds default values registered for the device as (application) properties with the same name to the AMQP 1.0 messages it sends downstream to the AMQP Messaging Network. |\n+| `HONO_COAP_EXCHANGE_LIFETIME`<br>`--hono.coap.exchangeLifetime` | no | 247000 | The exchange lifetime in milliseconds. According RFC 7252, that value is 247s. Such a large time requires also a huge amount of heap. That time includes a processing time of 100s and retransmissions of CON messages. Therefore a practical value could be much smaller.|", "originalCommit": "52824c9bbadd7714c700d66e635f10991960da4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyMTk3Mw==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405721973", "bodyText": "It's the unit used by californium since years. If other units are used here, I'm not sure, if that doesn't mix up users, which are also common to Californium. So I would keep the millis.", "author": "boaks", "createdAt": "2020-04-08T18:18:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1NDQ4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwMDg0NA==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r406000844", "bodyText": "Then let's stick to millis for the time being", "author": "sophokles73", "createdAt": "2020-04-09T07:13:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1NDQ4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1NDY0OA==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405654648", "bodyText": "retransmissionsnumber ?", "author": "sophokles73", "createdAt": "2020-04-08T16:28:26Z", "path": "site/documentation/content/admin-guide/coap-adapter-config.md", "diffHunk": "@@ -28,8 +28,11 @@ The following table provides an overview of the configuration variables and corr\n | `HONO_COAP_BIND_ADDRESS`<br>`--hono.coap.bindAddress` | no | `127.0.0.1` | The IP address of the network interface that the secure port should be bound to.<br>See [Port Configuration]({{< relref \"#port-configuration\" >}}) below for details. |\n | `HONO_COAP_CERT_PATH`<br>`--hono.coap.certPath` | no | - | The absolute path to the PEM file containing the certificate that the protocol adapter should use for authenticating to clients. This option must be used in conjunction with `HONO_COAP_KEY_PATH`.<br>Alternatively, the `HONO_COAP_KEY_STORE_PATH` option can be used to configure a key store containing both the key as well as the certificate. |\n | `HONO_COAP_COAP_THREADS`<br>`--hono.coap.coapThreads` | no | 2 | The number of threads to use for processing CoAP message exchanges at the protocol layer. |\n-| `HONO_COAP_CONNECTOR_THREADS`<br>`--hono.coap.connectorThreads` | no | 1 | The number of threads to use for receiving/sending UDP packets. The connector will start the given number of threads for each direction, outbound (sending) as well as inbound (receiving). |\n+| `HONO_COAP_CONNECTOR_THREADS`<br>`--hono.coap.connectorThreads` | no | 2 | The number of threads to use for receiving/sending UDP packets. The connector will start the given number of threads for each direction, outbound (sending) as well as inbound (receiving). |\n+| `HONO_COAP_DTLS_THREADS`<br>`--hono.coap.dtlsThreads` | no | 32 | The number of threads to use for processing DTLS message exchanges at the connection layer. |\n+| `HONO_COAP_DTLS_RETRANSMISSION_TIMEOUT`<br>`--hono.coap.dtlsRetransmissionTimeout` | no | 2000 | The timeout in milliseconds for DTLS retransmissionsnumber. |", "originalCommit": "52824c9bbadd7714c700d66e635f10991960da4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyMjQzMw==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405722433", "bodyText": "\"number\" will be removed :-)", "author": "boaks", "createdAt": "2020-04-08T18:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1NDY0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1NTExNw==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405655117", "bodyText": "serialized messages from the CoAP stack's deduplicator", "author": "sophokles73", "createdAt": "2020-04-08T16:29:10Z", "path": "site/documentation/content/admin-guide/coap-adapter-config.md", "diffHunk": "@@ -39,6 +42,7 @@ The following table provides an overview of the configuration variables and corr\n | `HONO_COAP_KEY_STORE_PATH`<br>`--hono.coap.keyStorePath` | no | - | The absolute path to the Java key store containing the private key and certificate that the protocol adapter should use for authenticating to clients. Either this option or the `HONO_COAP_KEY_PATH` and `HONO_COAP_CERT_PATH` options need to be set in order to enable TLS secured connections with clients. The key store format can be either `JKS` or `PKCS12` indicated by a `.jks` or `.p12` file suffix respectively. |\n | `HONO_COAP_MAX_CONNECTIONS`<br>`--hono.coap.maxConnections` | no | `0` | The maximum number of concurrent DTLS connections that the protocol adapter should accept. If set to `0`, the protocol adapter determines a reasonable value based on the available resources like memory and CPU. |\n | `HONO_COAP_MAX_PAYLOAD_SIZE`<br>`--hono.coap.maxPayloadSize` | no | `2048` | The maximum allowed size of an incoming CoAP request's body in bytes. Requests with a larger body size are rejected with a 4.13 `Request entity too large` response. |\n+| `HONO_COAP_MESSAGE_OFFLOADING`<br>`--hono.coap.messageOffloading` | no | true | Enables to clear payload and serilaized messages in order to reduce the heap consumpion. Experimental. |", "originalCommit": "52824c9bbadd7714c700d66e635f10991960da4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyMjg1NQ==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405722855", "bodyText": "yes, I will add a reference to the deduplicator.", "author": "boaks", "createdAt": "2020-04-08T18:19:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1NTExNw=="}], "type": "inlineReview"}, {"oid": "cdaaf79e1fefed071b7b5682ab0d4d20a92e9d18", "url": "https://github.com/eclipse/hono/commit/cdaaf79e1fefed071b7b5682ab0d4d20a92e9d18", "message": "Add more values to coap-adapter configuration.\n\ndtls threads: improve handshake processing\ndtls retransmission timeout: support constraint embedded devices.\nexchange lifetime: reduce heap consumption\nmessage offloading: reduce heap consumption\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>", "committedDate": "2020-04-09T06:36:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk5OTg0MA==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r405999840", "bodyText": "this can be removed as well", "author": "sophokles73", "createdAt": "2020-04-09T07:11:14Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -26,13 +26,47 @@\n      * The default regular expression to split the identity into authority and tenant.\n      */\n     public static final String DEFAULT_ID_SPLIT_REGEX = \"@\";\n+    /**\n+     * The default number of threads for the connector.\n+     */\n+    public static final int DEFAULT_CONNECTOR_THREADS = 2;\n+    /**\n+     * The default number of threads for the coap protocol stack.\n+     */\n+    public static final int DEFAULT_COAP_THREADS = 2;\n+    /**\n+     * The default number of threads for the dtls connector.\n+     */\n+    public static final int DEFAULT_DTLS_THREADS = 32;\n+    /**\n+     * The default timeout in milliseconds for DTLS retransmissions.\n+     */\n+    public static final int DEFAULT_DTLS_RETRANSMISSION_TIMEOUT = 2000;\n+    /**\n+     * The default exchange lifetime in milliseconds.\n+     * \n+     * According <a href= \"https://tools.ietf.org/html/rfc7252#page-30\"> RFC 7252 - 4.8. Transmission Parameters</a> the\n+     * default value is 247 seconds. Such a large time requires also a huge amount of heap. That time includes a\n+     * processing time of 100s and retransmissions of CON messages. Therefore a practical value could be much smaller.\n+     */\n+    public static final int DEFAULT_EXCHANGE_LIFETIME = 247000;\n+    /**\n+     * The default for message offloading. When messages are kept for deduplication, some parts of the messages are not\n+     * longer required and could be release earlier. That helps to reduce the heap consumption. Value\n+     * {@value #DEFAULT_MESSAGE_OFFLOADING}.", "originalCommit": "cdaaf79e1fefed071b7b5682ab0d4d20a92e9d18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwOTkwMg==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r406009902", "bodyText": "OK", "author": "boaks", "createdAt": "2020-04-09T07:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk5OTg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwMDMxMw==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r406000313", "bodyText": "please rename this to messageOffloadingEnabled", "author": "sophokles73", "createdAt": "2020-04-09T07:12:05Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -26,13 +26,47 @@\n      * The default regular expression to split the identity into authority and tenant.\n      */\n     public static final String DEFAULT_ID_SPLIT_REGEX = \"@\";\n+    /**\n+     * The default number of threads for the connector.\n+     */\n+    public static final int DEFAULT_CONNECTOR_THREADS = 2;\n+    /**\n+     * The default number of threads for the coap protocol stack.\n+     */\n+    public static final int DEFAULT_COAP_THREADS = 2;\n+    /**\n+     * The default number of threads for the dtls connector.\n+     */\n+    public static final int DEFAULT_DTLS_THREADS = 32;\n+    /**\n+     * The default timeout in milliseconds for DTLS retransmissions.\n+     */\n+    public static final int DEFAULT_DTLS_RETRANSMISSION_TIMEOUT = 2000;\n+    /**\n+     * The default exchange lifetime in milliseconds.\n+     * \n+     * According <a href= \"https://tools.ietf.org/html/rfc7252#page-30\"> RFC 7252 - 4.8. Transmission Parameters</a> the\n+     * default value is 247 seconds. Such a large time requires also a huge amount of heap. That time includes a\n+     * processing time of 100s and retransmissions of CON messages. Therefore a practical value could be much smaller.\n+     */\n+    public static final int DEFAULT_EXCHANGE_LIFETIME = 247000;\n+    /**\n+     * The default for message offloading. When messages are kept for deduplication, some parts of the messages are not\n+     * longer required and could be release earlier. That helps to reduce the heap consumption. Value\n+     * {@value #DEFAULT_MESSAGE_OFFLOADING}.\n+     */\n+    public static final boolean DEFAULT_MESSAGE_OFFLOADING = true;\n \n     private String idSplitRegex = DEFAULT_ID_SPLIT_REGEX;\n     private String networkConfig = null;\n     private String secureNetworkConfig = null;\n     private String insecureNetworkConfig = null;\n-    private int connectorThreads = 1;\n-    private int coapThreads = 2;\n+    private int connectorThreads = DEFAULT_CONNECTOR_THREADS;\n+    private int coapThreads = DEFAULT_COAP_THREADS;\n+    private int dtlsThreads = DEFAULT_DTLS_THREADS;\n+    private int dtlsRetransmissionTimeout = DEFAULT_DTLS_RETRANSMISSION_TIMEOUT;\n+    private int exchangeLifetime = DEFAULT_EXCHANGE_LIFETIME;\n+    private boolean messageOffloading = DEFAULT_MESSAGE_OFFLOADING;", "originalCommit": "cdaaf79e1fefed071b7b5682ab0d4d20a92e9d18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA0NTYzNw==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r406045637", "bodyText": "done", "author": "boaks", "createdAt": "2020-04-09T08:36:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwMDMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwMDUwOA==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r406000508", "bodyText": "please rename to isMessageOffloadingEnabled", "author": "sophokles73", "createdAt": "2020-04-09T07:12:30Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -201,4 +235,122 @@ public final void setCoapThreads(final int threads) {\n         this.coapThreads = threads;\n     }\n \n+    /**\n+     * Gets the number of threads used for processing DTLS message exchanges at the\n+     * connection layer.\n+     * <p>\n+     * The default value of this property is {@value #DEFAULT_DTLS_THREADS}.\n+     * \n+     * @return The number of threads.\n+     */\n+    public final int getDtlsThreads() {\n+        return dtlsThreads;\n+    }\n+\n+    /**\n+     * Sets the number of threads to be used for processing DTLS message exchanges at the\n+     * connection layer.\n+     * <p>\n+     * The default value of this property is {@value #DEFAULT_DTLS_THREADS}.\n+     * \n+     * @param threads The number of threads.\n+     * @throws IllegalArgumentException if threads is &lt; 1.\n+     */\n+    public final void setDtlsThreads(final int threads) {\n+        if (threads < 1) {\n+            throw new IllegalArgumentException(\"dtls thread count must be at least 1\");\n+        }\n+        this.dtlsThreads = threads;\n+    }\n+\n+    /**\n+     * Gets the DTLS retransmission timeout.\n+     * <p>\n+     * Timeout to wait before retransmit a flight, if no response is received.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_DTLS_RETRANSMISSION_TIMEOUT},\n+     * {@value #DEFAULT_DTLS_RETRANSMISSION_TIMEOUT} milliseconds.\n+     * \n+     * @return The timeout in milliseconds.\n+     */\n+    public final int getDtlsRetransmissionTimeout() {\n+        return dtlsRetransmissionTimeout;\n+    }\n+\n+    /**\n+     * Sets the DTLS retransmission timeout.\n+     * <p>\n+     * Timeout to wait before retransmit a flight, if no response is received.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_DTLS_RETRANSMISSION_TIMEOUT},\n+     * {@value #DEFAULT_DTLS_RETRANSMISSION_TIMEOUT} milliseconds.\n+     * \n+     * @param dtlsRetransmissionTimeout timeout in milliseconds to retransmit a flight.\n+     * @throws IllegalArgumentException if dtlsRetransmissionTimeout is &lt; 1.\n+     */\n+    public final void setDtlsRetransmissionTimeout(final int dtlsRetransmissionTimeout) {\n+        if (dtlsRetransmissionTimeout < 1) {\n+            throw new IllegalArgumentException(\"dtls retransmission timeout must be at least 1\");\n+        }\n+        this.dtlsRetransmissionTimeout = dtlsRetransmissionTimeout;\n+    }\n+\n+    /**\n+     * Gets the exchange lifetime.\n+     * <p>\n+     * Time to keep coap request for deduplication.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_EXCHANGE_LIFETIME}, {@value #DEFAULT_EXCHANGE_LIFETIME}\n+     * milliseconds.\n+     * \n+     * @return The exchange lifetime in milliseconds.\n+     */\n+    public final int getExchangeLifetime() {\n+        return exchangeLifetime;\n+    }\n+\n+    /**\n+     * Gets the exchange lifetime.\n+     * <p>\n+     * Time to keep coap request for deduplication.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_EXCHANGE_LIFETIME}, {@value #DEFAULT_EXCHANGE_LIFETIME}\n+     * milliseconds.\n+     * \n+     * @param exchangeLifetime the exchange lifetime in milliseconds to keep the request for deduplication.\n+     * @throws IllegalArgumentException if exchangeLifetime is &lt; 1.\n+     */\n+    public final void setExchangeLifetime(final int exchangeLifetime) {\n+        if (exchangeLifetime < 1) {\n+            throw new IllegalArgumentException(\"exchange lifetime must be at least -1\");\n+        }\n+        this.exchangeLifetime = exchangeLifetime;\n+    }\n+\n+    /**\n+     * Gets the message offloading mode.\n+     * <p>\n+     * When messages are kept for deduplication, parts of the message could be offloaded to reduce the heap consumption.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_MESSAGE_OFFLOADING}, {@value #DEFAULT_MESSAGE_OFFLOADING}.\n+     * \n+     * @return {@code true} enable message offloading, {@code false} disable message offloading.\n+     */\n+    public final boolean getMessageOffloading() {", "originalCommit": "cdaaf79e1fefed071b7b5682ab0d4d20a92e9d18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAxMDQ5Mg==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r406010492", "bodyText": "OK", "author": "boaks", "createdAt": "2020-04-09T07:33:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwMDUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwMDcxMQ==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r406000711", "bodyText": "please rename to setMessageOffloadingEnabled", "author": "sophokles73", "createdAt": "2020-04-09T07:12:53Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -201,4 +235,122 @@ public final void setCoapThreads(final int threads) {\n         this.coapThreads = threads;\n     }\n \n+    /**\n+     * Gets the number of threads used for processing DTLS message exchanges at the\n+     * connection layer.\n+     * <p>\n+     * The default value of this property is {@value #DEFAULT_DTLS_THREADS}.\n+     * \n+     * @return The number of threads.\n+     */\n+    public final int getDtlsThreads() {\n+        return dtlsThreads;\n+    }\n+\n+    /**\n+     * Sets the number of threads to be used for processing DTLS message exchanges at the\n+     * connection layer.\n+     * <p>\n+     * The default value of this property is {@value #DEFAULT_DTLS_THREADS}.\n+     * \n+     * @param threads The number of threads.\n+     * @throws IllegalArgumentException if threads is &lt; 1.\n+     */\n+    public final void setDtlsThreads(final int threads) {\n+        if (threads < 1) {\n+            throw new IllegalArgumentException(\"dtls thread count must be at least 1\");\n+        }\n+        this.dtlsThreads = threads;\n+    }\n+\n+    /**\n+     * Gets the DTLS retransmission timeout.\n+     * <p>\n+     * Timeout to wait before retransmit a flight, if no response is received.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_DTLS_RETRANSMISSION_TIMEOUT},\n+     * {@value #DEFAULT_DTLS_RETRANSMISSION_TIMEOUT} milliseconds.\n+     * \n+     * @return The timeout in milliseconds.\n+     */\n+    public final int getDtlsRetransmissionTimeout() {\n+        return dtlsRetransmissionTimeout;\n+    }\n+\n+    /**\n+     * Sets the DTLS retransmission timeout.\n+     * <p>\n+     * Timeout to wait before retransmit a flight, if no response is received.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_DTLS_RETRANSMISSION_TIMEOUT},\n+     * {@value #DEFAULT_DTLS_RETRANSMISSION_TIMEOUT} milliseconds.\n+     * \n+     * @param dtlsRetransmissionTimeout timeout in milliseconds to retransmit a flight.\n+     * @throws IllegalArgumentException if dtlsRetransmissionTimeout is &lt; 1.\n+     */\n+    public final void setDtlsRetransmissionTimeout(final int dtlsRetransmissionTimeout) {\n+        if (dtlsRetransmissionTimeout < 1) {\n+            throw new IllegalArgumentException(\"dtls retransmission timeout must be at least 1\");\n+        }\n+        this.dtlsRetransmissionTimeout = dtlsRetransmissionTimeout;\n+    }\n+\n+    /**\n+     * Gets the exchange lifetime.\n+     * <p>\n+     * Time to keep coap request for deduplication.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_EXCHANGE_LIFETIME}, {@value #DEFAULT_EXCHANGE_LIFETIME}\n+     * milliseconds.\n+     * \n+     * @return The exchange lifetime in milliseconds.\n+     */\n+    public final int getExchangeLifetime() {\n+        return exchangeLifetime;\n+    }\n+\n+    /**\n+     * Gets the exchange lifetime.\n+     * <p>\n+     * Time to keep coap request for deduplication.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_EXCHANGE_LIFETIME}, {@value #DEFAULT_EXCHANGE_LIFETIME}\n+     * milliseconds.\n+     * \n+     * @param exchangeLifetime the exchange lifetime in milliseconds to keep the request for deduplication.\n+     * @throws IllegalArgumentException if exchangeLifetime is &lt; 1.\n+     */\n+    public final void setExchangeLifetime(final int exchangeLifetime) {\n+        if (exchangeLifetime < 1) {\n+            throw new IllegalArgumentException(\"exchange lifetime must be at least -1\");\n+        }\n+        this.exchangeLifetime = exchangeLifetime;\n+    }\n+\n+    /**\n+     * Gets the message offloading mode.\n+     * <p>\n+     * When messages are kept for deduplication, parts of the message could be offloaded to reduce the heap consumption.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_MESSAGE_OFFLOADING}, {@value #DEFAULT_MESSAGE_OFFLOADING}.\n+     * \n+     * @return {@code true} enable message offloading, {@code false} disable message offloading.\n+     */\n+    public final boolean getMessageOffloading() {\n+        return messageOffloading;\n+    }\n+\n+    /**\n+     * Sets the message offloading mode.\n+     * <p>\n+     * When messages are kept for deduplication, parts of the message could be offloaded to reduce the heap consumption.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_MESSAGE_OFFLOADING}, {@value #DEFAULT_MESSAGE_OFFLOADING}.\n+     * \n+     * @param messageOffloading {@code true} enable message offloading, {@code false} disable message offloading.\n+     */\n+    public final void setMessageOffloading(final boolean messageOffloading) {", "originalCommit": "cdaaf79e1fefed071b7b5682ab0d4d20a92e9d18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA0NTU2NQ==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r406045565", "bodyText": "done", "author": "boaks", "createdAt": "2020-04-09T08:36:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwMDcxMQ=="}], "type": "inlineReview"}, {"oid": "1ac40fb72c5a179504246ca13f9fdeb65cadea8e", "url": "https://github.com/eclipse/hono/commit/1ac40fb72c5a179504246ca13f9fdeb65cadea8e", "message": "Add more values to coap-adapter configuration.\n\ndtls threads: improve handshake processing\ndtls retransmission timeout: support constraint embedded devices.\nexchange lifetime: reduce heap consumption\nmessage offloading: reduce heap consumption\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>", "committedDate": "2020-04-09T07:35:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA4NjEyMA==", "url": "https://github.com/eclipse/hono/pull/1889#discussion_r406086120", "bodyText": "HONO_COAP_MESSAGE_OFFLOADING_ENABLED", "author": "sophokles73", "createdAt": "2020-04-09T09:46:22Z", "path": "site/documentation/content/admin-guide/coap-adapter-config.md", "diffHunk": "@@ -39,6 +42,7 @@ The following table provides an overview of the configuration variables and corr\n | `HONO_COAP_KEY_STORE_PATH`<br>`--hono.coap.keyStorePath` | no | - | The absolute path to the Java key store containing the private key and certificate that the protocol adapter should use for authenticating to clients. Either this option or the `HONO_COAP_KEY_PATH` and `HONO_COAP_CERT_PATH` options need to be set in order to enable TLS secured connections with clients. The key store format can be either `JKS` or `PKCS12` indicated by a `.jks` or `.p12` file suffix respectively. |\n | `HONO_COAP_MAX_CONNECTIONS`<br>`--hono.coap.maxConnections` | no | `0` | The maximum number of concurrent DTLS connections that the protocol adapter should accept. If set to `0`, the protocol adapter determines a reasonable value based on the available resources like memory and CPU. |\n | `HONO_COAP_MAX_PAYLOAD_SIZE`<br>`--hono.coap.maxPayloadSize` | no | `2048` | The maximum allowed size of an incoming CoAP request's body in bytes. Requests with a larger body size are rejected with a 4.13 `Request entity too large` response. |\n+| `HONO_COAP_MESSAGE_OFFLOADING`<br>`--hono.coap.messageOffloading` | no | true | Enables to clear payload and serilaized messages kept for deduplication in order to reduce the heap consumpion. Experimental. |", "originalCommit": "1ac40fb72c5a179504246ca13f9fdeb65cadea8e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bea25d7fb644d9de884feb97e4379f3ad8f0d4d1", "url": "https://github.com/eclipse/hono/commit/bea25d7fb644d9de884feb97e4379f3ad8f0d4d1", "message": "Add more values to coap-adapter configuration.\n\ndtls threads: improve handshake processing\ndtls retransmission timeout: support constraint embedded devices.\nexchange lifetime: reduce heap consumption\nmessage offloading: reduce heap consumption\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>", "committedDate": "2020-04-09T09:51:33Z", "type": "commit"}, {"oid": "bea25d7fb644d9de884feb97e4379f3ad8f0d4d1", "url": "https://github.com/eclipse/hono/commit/bea25d7fb644d9de884feb97e4379f3ad8f0d4d1", "message": "Add more values to coap-adapter configuration.\n\ndtls threads: improve handshake processing\ndtls retransmission timeout: support constraint embedded devices.\nexchange lifetime: reduce heap consumption\nmessage offloading: reduce heap consumption\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>", "committedDate": "2020-04-09T09:51:33Z", "type": "forcePushed"}]}