{"pr_number": 2106, "pr_title": "actility enterprise provider added + ability to configure multiple URIs per loraProvider", "pr_createdAt": "2020-08-10T13:50:02Z", "pr_url": "https://github.com/eclipse/hono/pull/2106", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk2NjMyNA==", "url": "https://github.com/eclipse/hono/pull/2106#discussion_r467966324", "bodyText": "Are these methods supposed to be overridden by subclasses? If not then I would suggest to declare them final in order to prevent hard to find problems when somebody does ...", "author": "sophokles73", "createdAt": "2020-08-10T15:01:07Z", "path": "adapters/lora-vertx/src/main/java/org/eclipse/hono/adapter/lora/providers/ActilityBaseProvider.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+\n+package org.eclipse.hono.adapter.lora.providers;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import org.eclipse.hono.adapter.lora.LoraMessageType;\n+import org.eclipse.hono.adapter.lora.LoraMetaData;\n+\n+import com.google.common.io.BaseEncoding;\n+\n+import io.vertx.core.buffer.Buffer;\n+import io.vertx.core.json.JsonObject;\n+\n+/**\n+ * A base class for the actility {@link LoraProvider}s.\n+ */\n+abstract class ActilityBaseProvider extends JsonBasedLoraProvider {\n+    protected static final String FIELD_ACTILITY_CHANNEL = \"Channel\";\n+    protected static final String FIELD_ACTILITY_FPORT = \"FPort\";\n+    protected static final String FIELD_ACTILITY_FRAME_COUNT_UPLINK = \"FCntUp\";\n+    protected static final String FIELD_ACTILITY_LATITUTDE = \"LrrLAT\";\n+    protected static final String FIELD_ACTILITY_LONGITUDE = \"LrrLON\";\n+    protected static final String FIELD_ACTILITY_LRR = \"Lrr\";\n+    protected static final String FIELD_ACTILITY_LRR_ID = \"Lrrid\";\n+    protected static final String FIELD_ACTILITY_LRR_RSSI = \"LrrRSSI\";\n+    protected static final String FIELD_ACTILITY_LRR_SNR = \"LrrSNR\";\n+    protected static final String FIELD_ACTILITY_LRRS = \"Lrrs\";\n+    protected static final String FIELD_ACTILITY_SPREADING_FACTOR = \"SpFact\";\n+    private static final String FIELD_ACTILITY_DEVICE_EUI = \"DevEUI\";\n+    private static final String FIELD_ACTILITY_ROOT_OBJECT = \"DevEUI_uplink\";\n+    private static final String FIELD_ACTILITY_PAYLOAD = \"payload_hex\";\n+\n+    protected Optional<JsonObject> getRootObject(final JsonObject loraMessage) {\n+        return LoraUtils.getChildObject(loraMessage, FIELD_ACTILITY_ROOT_OBJECT, JsonObject.class);\n+    }\n+\n+    @Override\n+    protected String getDevEui(final JsonObject loraMessage) {\n+\n+        Objects.requireNonNull(loraMessage);\n+        return getRootObject(loraMessage)\n+                .map(root -> root.getValue(FIELD_ACTILITY_DEVICE_EUI))\n+                .filter(String.class::isInstance)\n+                .map(String.class::cast)\n+                .orElseThrow(() -> new LoraProviderMalformedPayloadException(\"message does not contain String valued device EUI property\"));\n+    }\n+\n+    @Override\n+    protected Buffer getPayload(final JsonObject loraMessage) {\n+        Objects.requireNonNull(loraMessage);\n+        return getRootObject(loraMessage)\n+                .map(root -> root.getValue(FIELD_ACTILITY_PAYLOAD))\n+                .filter(String.class::isInstance)\n+                .map(String.class::cast)\n+                .map(s -> Buffer.buffer(BaseEncoding.base16().decode(s.toUpperCase())))\n+                .orElseThrow(() -> new LoraProviderMalformedPayloadException(\"message does not contain String valued payload property\"));\n+    }\n+\n+    @Override\n+    protected LoraMessageType getMessageType(final JsonObject loraMessage) {\n+        Objects.requireNonNull(loraMessage);\n+        return getRootObject(loraMessage)\n+                .map(root -> LoraMessageType.UPLINK)\n+                .orElse(LoraMessageType.UNKNOWN);\n+    }\n+\n+    /**\n+     * Gets the frequency corresponding to the channel ID used by Actility/ThingWork\n+     * as described in section 2.4 of the\n+     * <a href=\"https://partners.thingpark.com/sites/default/files/2017-11/AdvancedThingParkDeveloperGuide_V4.pdf\">\n+     * Advanced Developer Guide</a>.\n+     *\n+     * @param logicalChannelId The channel ID.\n+     * @return The frequency in MHz or {@code null} if the identifier is unknown.\n+     */\n+    protected Double getFrequency(final String logicalChannelId) {\n+        switch (logicalChannelId) {\n+        case \"LC1\":\n+            return 868.1;\n+        case \"LC2\":\n+            return 868.3;\n+        case \"LC3\":\n+            return 868.5;\n+        case \"RX2\":\n+            return 869.525;\n+        default:\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    protected LoraMetaData getMetaData(final JsonObject loraMessage) {\n+\n+        Objects.requireNonNull(loraMessage);\n+\n+        return getRootObject(loraMessage)\n+            .map(this::extractMetaData)\n+            .orElse(null);\n+    }", "originalCommit": "a116348949a1d63e63f9ad9419ff11c6661e4fc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM2NjI5Mw==", "url": "https://github.com/eclipse/hono/pull/2106#discussion_r468366293", "bodyText": "no they are not, changed it according to your proposal", "author": "BobClaerhout", "createdAt": "2020-08-11T06:58:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk2NjMyNA=="}], "type": "inlineReview"}, {"oid": "aeaedd7a80d46c6bfa46f7e1d35463a0f424414f", "url": "https://github.com/eclipse/hono/commit/aeaedd7a80d46c6bfa46f7e1d35463a0f424414f", "message": "actility enterprise provider added + ability to configure multiple URIs per loraProvider\n\nSigned-off-by: Bob Claerhout <claerhout.bob@gmail.com>", "committedDate": "2020-08-11T06:57:02Z", "type": "forcePushed"}, {"oid": "16bb0678fcc4bdd4348b8d2fdb7199473887a925", "url": "https://github.com/eclipse/hono/commit/16bb0678fcc4bdd4348b8d2fdb7199473887a925", "message": "actility enterprise provider added + ability to configure multiple URIs per loraProvider\n\nSigned-off-by: Bob Claerhout <claerhout.bob@gmail.com>", "committedDate": "2020-08-11T10:17:09Z", "type": "forcePushed"}, {"oid": "4bbc06fa251444a1b4959029fb43b0d7ce7b0a48", "url": "https://github.com/eclipse/hono/commit/4bbc06fa251444a1b4959029fb43b0d7ce7b0a48", "message": "actility enterprise provider added + ability to configure multiple URIs per loraProvider\n\nSigned-off-by: Bob Claerhout <claerhout.bob@gmail.com>", "committedDate": "2020-08-11T11:20:34Z", "type": "commit"}, {"oid": "4bbc06fa251444a1b4959029fb43b0d7ce7b0a48", "url": "https://github.com/eclipse/hono/commit/4bbc06fa251444a1b4959029fb43b0d7ce7b0a48", "message": "actility enterprise provider added + ability to configure multiple URIs per loraProvider\n\nSigned-off-by: Bob Claerhout <claerhout.bob@gmail.com>", "committedDate": "2020-08-11T11:20:34Z", "type": "forcePushed"}]}