{"pr_number": 1744, "pr_title": "[#1726] Fix: accept command responses without payload in AMQP adapter.", "pr_createdAt": "2020-02-04T13:59:27Z", "pr_url": "https://github.com/eclipse/hono/pull/1744", "timeline": [{"oid": "cb606f3de5aed33a9d949649299e8256e74ca4e4", "url": "https://github.com/eclipse/hono/commit/cb606f3de5aed33a9d949649299e8256e74ca4e4", "message": "[#1726] Fix: accept command responses without payload in AMQP adapter.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>", "committedDate": "2020-02-04T13:51:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r374740631", "bodyText": "FMPOV the only thing that needs to be changed/fixed is the isPayloadOfIndicatedType method which should verify that the payload is indeed empty if the content type is EventConstants.CONTENT_TYPE_EMPTY_NOTIFICATION but otherwise return true. WDYT?", "author": "sophokles73", "createdAt": "2020-02-04T15:28:14Z", "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -978,20 +978,20 @@ protected void onCommandReceived(final TenantObject tenantObject, final ProtonSe\n                     \"empty notifications must not contain payload\"));\n         }\n \n-        return contentTypeCheck.future()\n-                .compose(ok -> {\n-                    switch (context.getEndpoint()) {\n-                    case TELEMETRY:\n-                        return doUploadMessage(context, resource, getTelemetrySender(resource.getTenantId()), currentSpan);\n-                    case EVENT:\n-                        return doUploadMessage(context, resource, getEventSender(resource.getTenantId()), currentSpan);\n-                    case COMMAND_RESPONSE:\n-                        return doUploadCommandResponseMessage(context, resource, currentSpan);\n-                    default:\n-                        return Future\n-                                .failedFuture(new ClientErrorException(HttpURLConnection.HTTP_NOT_FOUND, \"unknown endpoint\"));\n-                    }\n-                });\n+        switch (context.getEndpoint()) {\n+        case TELEMETRY:\n+            return contentTypeCheck.future()\n+                    .compose(ok -> doUploadMessage(context, resource, getTelemetrySender(resource.getTenantId()),\n+                            currentSpan));\n+        case EVENT:\n+            return contentTypeCheck.future()\n+                    .compose(ok -> doUploadMessage(context, resource, getEventSender(resource.getTenantId()),\n+                            currentSpan));\n+        case COMMAND_RESPONSE:\n+            return doUploadCommandResponseMessage(context, resource, currentSpan);\n+        default:\n+            return Future.failedFuture(new ClientErrorException(HttpURLConnection.HTTP_NOT_FOUND, \"unknown endpoint\"));\n+        }", "originalCommit": "cb606f3de5aed33a9d949649299e8256e74ca4e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0OTkwMg==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375149902", "bodyText": "That makes sense. The problem I see here is that the method does not do what its name promises, and the method is called in all protocol adapters for every telemetry and event message. My suggestion would be to change it to the way you described it. Additionally, we rename it, for example to isEmtpyNotificationReallyEmpty.\nDo we also want to change the invocations so that it is only executed for events?", "author": "b-abel", "createdAt": "2020-02-05T09:42:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE1NTE2Mw==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375155163", "bodyText": "My suggestion would be to change it to the way you described it. Additionally, we rename it, for example to isEmtpyNotificationReallyEmpty.\n\n+1\n\nDo we also want to change the invocations so that it is only executed for events?\n\nNo, let's keep it the way it is. IIRC we allow devices to send empty notifications as both telemetry as well as event messages ...", "author": "sophokles73", "createdAt": "2020-02-05T09:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE4OTg3OA==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375189878", "bodyText": "Just to be sure: we are changing the behavior of the protocol adapters by that in that they now generally accept empty messages, aren't we? At least one unit test suggest that it was intended to block empty messages (except the empty notification): \n  \n    \n      hono/service-base/src/test/java/org/eclipse/hono/service/AbstractProtocolAdapterBaseTest.java\n    \n    \n         Line 483\n      in\n      0840f2e\n    \n    \n    \n    \n\n        \n          \n           public void testEmptyGeneralMessage() { \n        \n    \n  \n\n\nThis test fails with the change discussed here. I've seen no failing IT for this.", "author": "b-abel", "createdAt": "2020-02-05T11:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIwMDI1Ng==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375200256", "bodyText": "Yeah, we originally thought it would have value to prevent devices from sending empty messages. However, I can't recall what that value would actually be. On the other hand, I can imagine a device sending an empty message with an application specific content-type which can be used to trigger some behavior in a downstream application. Requiring the device to include a byte in the payload seems useless, doesn't it?\nThe Telemetry API currently defines that the payload of a message MUST consist of a Data section. The same definition is used by the Event API which doesn't seem to make sense since we already allow the payload to be empty for empty notification (events). The C&C API explicitly allows the payload of a command response to be empty.\nSo, FMPOV we should\n\nproceed as discussed with this PR\nremove the conflicting unit test\nadapt the Telemetry API wording to make the payload optional", "author": "sophokles73", "createdAt": "2020-02-05T11:24:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIxOTUyNg==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375219526", "bodyText": "The user guides of the protocol adapters state as well that the payload is required. Should we change the documentation there as well? FMPOV this needs to be tested before changing the user guide. If we remove the explicit check, empty messages might or might not work in the adapters.", "author": "b-abel", "createdAt": "2020-02-05T12:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIyMjA1Nw==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375222057", "bodyText": "You could add corresponding unit tests, I guess", "author": "sophokles73", "createdAt": "2020-02-05T12:16:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIyNzAxMQ==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375227011", "bodyText": "And yes, I think we should adapt the user guides accordingly as well.", "author": "sophokles73", "createdAt": "2020-02-05T12:29:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIzODcxMA==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375238710", "bodyText": "The MQTT adapter does not allow an empty payload and explicitly checks that (removing this check involves adding null checks further down...). The HTTP adapter, on the other hand, takes messages with empty payload, but then does not set the content type (MessageHelper.setPayload()).  The Telemetry and Event APIs require a content-type to be set. Specifics of the respective protocols need possibly to be considered as well...\nOf course, this could be changed, but I'm not sure if we want to change the behavior of the protocol adapters in a fix for one specific adapter on the last day before the release.\nAnyway, we should have a separate issue for this.FMPOV allowing empty messages with custom content types is a great idea but a separate feature and not part of this bug fix. WDYT?", "author": "b-abel", "createdAt": "2020-02-05T12:56:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI0ODI2Mw==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375248263", "bodyText": "That is probably true. Do the other adapters allow empty command responses?", "author": "sophokles73", "createdAt": "2020-02-05T13:17:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI2Nzg3Ng==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375267876", "bodyText": "COAP: no, Lora: no, Sigfox: yes.", "author": "b-abel", "createdAt": "2020-02-05T13:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3NDMzOQ==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375274339", "bodyText": "Well at least the CoAP and Sigfox adapters do not support C&C at all.\nThe Lora adapter should be fixed as well, I guess. What about the MQTT and HTTP adapters?", "author": "sophokles73", "createdAt": "2020-02-05T14:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI5Nzc0Mw==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375297743", "bodyText": "I'm sorry @sophokles73, I misread your question. My answer referred to which adapters explicitly reject empty payload for messages in general (i.e. especially telemetry and events). The bug in this ticket affects definitively only the AMQP adapter. All other adapters seem to have no problem with empty command responses.", "author": "b-abel", "createdAt": "2020-02-05T14:45:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMwNjY2NQ==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375306665", "bodyText": "ok, then let's fix the AMQP adapter and add unit tests that make sure that all adapters which support C&C accept empty command responses.", "author": "sophokles73", "createdAt": "2020-02-05T14:59:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ=="}], "type": "inlineReview"}, {"oid": "a05a884ad94987cbd16f493d195bc21a37592bdc", "url": "https://github.com/eclipse/hono/commit/a05a884ad94987cbd16f493d195bc21a37592bdc", "message": "[#1726] Verify that MQTT and HTTP adapters accept empty command response.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>", "committedDate": "2020-02-05T20:48:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3MzUwNw==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375673507", "bodyText": "I am not sure if this is the same as no payload. Can you change this to null?", "author": "sophokles73", "createdAt": "2020-02-06T07:24:33Z", "path": "adapters/http-vertx-base/src/test/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapterTest.java", "diffHunk": "@@ -527,6 +527,46 @@ public void testUploadCommandResponseWaitsForAcceptedOutcome() {\n                 any());\n     }\n \n+    /**\n+     * Verifies that the adapter accepts a command response message with an empty body.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    @Test\n+    public void testUploadEmptyCommandResponseSucceeds() {\n+\n+        // GIVEN an adapter with a downstream application attached\n+        final CommandResponseSender sender = mock(CommandResponseSender.class);\n+        when(sender.sendCommandResponse(any(CommandResponse.class), (SpanContext) any())).thenReturn(Future.succeededFuture(mock(ProtonDelivery.class)));\n+\n+        when(commandConsumerFactory.getCommandResponseSender(anyString(), anyString())).thenReturn(Future.succeededFuture(sender));\n+\n+        final HttpServer server = getHttpServer(false);\n+        final AbstractVertxBasedHttpProtocolAdapter<HttpProtocolAdapterProperties> adapter = getAdapter(server, null);\n+\n+        // WHEN a device publishes a command response with an empty payload\n+        final Buffer payload = Buffer.buffer();", "originalCommit": "a05a884ad94987cbd16f493d195bc21a37592bdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcwMzgzOA==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375703838", "bodyText": "From what I understand Netty (and thus Vert.x MQTT) does not support this:\nhttps://github.com/netty/netty/blob/56055f4404fbebeb6403165d352d62330a1bf81d/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttPublishMessage.java#L41-L52\nThe MQTT 3.1.1 standard says: \" It is valid for a PUBLISH Packet to contain a zero length payload.\" Which of course does not tell how this is implemented...\nHono's MQTT adapter will throw null pointer exceptions.", "author": "b-abel", "createdAt": "2020-02-06T08:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3MzUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MDkyNQ==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375760925", "bodyText": "@sophokles73 If you prefer I can still change the test so that the payload is null and fix the (few) places where this would cause NPEs in the HTTP and MQTT adapters.", "author": "b-abel", "createdAt": "2020-02-06T10:42:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3MzUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc3MjExOQ==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375772119", "bodyText": "no", "author": "sophokles73", "createdAt": "2020-02-06T11:06:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3MzUwNw=="}], "type": "inlineReview"}, {"oid": "1f57b952088199d449a7fdc2abc814b79411058b", "url": "https://github.com/eclipse/hono/commit/1f57b952088199d449a7fdc2abc814b79411058b", "message": "[#1726] HTTP and MQTT adapters can now handle command response where payload is null.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>", "committedDate": "2020-02-06T13:35:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg2ODQ3OA==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375868478", "bodyText": "this  should be ctx.succeeding(Handler<T>) and the assertion should be put into the handler. Otherwise the test context will most likely be (successfully) completed before the assertion is executed.\nBTW IMHO you should also verify that the command sender has been invoked ...", "author": "sophokles73", "createdAt": "2020-02-06T14:35:01Z", "path": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapterTest.java", "diffHunk": "@@ -679,6 +681,49 @@ public void testUploadTelemetryMessageSendsPubAckOnSuccess(final VertxTestContex\n                 });\n     }\n \n+    /**\n+     * Verifies that the adapter accepts a command response message with an empty body.\n+     *\n+     * @param ctx The vert.x test context.\n+     */\n+    @Test\n+    public void testUploadEmptyCommandResponseSucceeds(final VertxTestContext ctx) {\n+\n+        // GIVEN an adapter with a command response consumer\n+        final CommandResponseSender sender = mock(CommandResponseSender.class);\n+        when(sender.sendCommandResponse(any(CommandResponse.class), (SpanContext) any()))\n+                .thenReturn(Future.succeededFuture(mock(ProtonDelivery.class)));\n+        when(commandConsumerFactory.getCommandResponseSender(anyString(), anyString()))\n+                .thenReturn(Future.succeededFuture(sender));\n+\n+        // WHEN forwarding a command response that has been published\n+        final MqttServer server = getMqttServer(false);\n+        final AbstractVertxBasedMqttProtocolAdapter<MqttProtocolAdapterProperties> adapter = getAdapter(server);\n+\n+        final MqttEndpoint endpoint = mockEndpoint();\n+        when(endpoint.isConnected()).thenReturn(Boolean.TRUE);\n+        final MqttPublishMessage messageFromDevice = mock(MqttPublishMessage.class);\n+        when(messageFromDevice.qosLevel()).thenReturn(MqttQoS.AT_MOST_ONCE);\n+        when(messageFromDevice.messageId()).thenReturn(5555555);\n+        when(messageFromDevice.topicName()).thenReturn(\"command///res/1010f8ab0b53-bd96-4d99-9d9c-56b868474a6a/200\");\n+\n+        // ... with an empty payload\n+        when(messageFromDevice.payload()).thenReturn(null);\n+        final ResourceIdentifier address = ResourceIdentifier\n+                .fromString(\"command/my-tenant/4712/res/1010f8ab0b53-bd96-4d99-9d9c-56b868474a6a/200\");\n+        adapter.uploadCommandResponseMessage(newMqttContext(messageFromDevice, endpoint), address)\n+                .setHandler(ctx.completing());", "originalCommit": "1f57b952088199d449a7fdc2abc814b79411058b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5Mzk0OA==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375893948", "bodyText": "I pushed a fix.", "author": "b-abel", "createdAt": "2020-02-06T15:15:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg2ODQ3OA=="}], "type": "inlineReview"}, {"oid": "0e8a5b7ea36ef8a422b4d2c8cb9be1f364256fde", "url": "https://github.com/eclipse/hono/commit/0e8a5b7ea36ef8a422b4d2c8cb9be1f364256fde", "message": "[#1726] Fix verification in AbstractVertxBasedMqttProtocolAdapterTest.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>", "committedDate": "2020-02-06T15:12:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NjM4Nw==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375896387", "bodyText": "this needs to be wrapped in ctx.verify(Handler<Void>)", "author": "sophokles73", "createdAt": "2020-02-06T15:19:11Z", "path": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapterTest.java", "diffHunk": "@@ -712,16 +719,19 @@ public void testUploadEmptyCommandResponseSucceeds(final VertxTestContext ctx) {\n         final ResourceIdentifier address = ResourceIdentifier\n                 .fromString(\"command/my-tenant/4712/res/1010f8ab0b53-bd96-4d99-9d9c-56b868474a6a/200\");\n         adapter.uploadCommandResponseMessage(newMqttContext(messageFromDevice, endpoint), address)\n-                .setHandler(ctx.completing());\n+                .setHandler(ctx.succeeding(result -> {\n+                    verify(sender).sendCommandResponse(any(), any());", "originalCommit": "0e8a5b7ea36ef8a422b4d2c8cb9be1f364256fde", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5OTM1OQ==", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375899359", "bodyText": "Right. Sorry. Done that.", "author": "b-abel", "createdAt": "2020-02-06T15:23:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NjM4Nw=="}], "type": "inlineReview"}, {"oid": "cbbe05e08ce6b4eb773cac43db5171652a24c3cf", "url": "https://github.com/eclipse/hono/commit/cbbe05e08ce6b4eb773cac43db5171652a24c3cf", "message": "[#1726] Add context.verify to AbstractVertxBasedMqttProtocolAdapterTest.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>", "committedDate": "2020-02-06T15:23:19Z", "type": "commit"}]}