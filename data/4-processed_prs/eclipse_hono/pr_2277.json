{"pr_number": 2277, "pr_title": "[#2267] Add AMQP 1.0 based TenantClient implementation", "pr_createdAt": "2020-11-02T12:37:48Z", "pr_url": "https://github.com/eclipse/hono/pull/2277", "timeline": [{"oid": "b699763479436631ca430abf323cb774ae34f886", "url": "https://github.com/eclipse/hono/commit/b699763479436631ca430abf323cb774ae34f886", "message": "[#2267] Add AMQP 1.0 based TenantClient implementation\n\nAdded implementations of the adapter client's TenantClient interface\nwhich simply wraps the existing vertx-proton based\n\"legacy\" TenantClientImpl.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "committedDate": "2020-11-02T12:34:14Z", "type": "commit"}, {"oid": "d4bb643c10f7d148fa77cbbd3e713d1554bf00d5", "url": "https://github.com/eclipse/hono/commit/d4bb643c10f7d148fa77cbbd3e713d1554bf00d5", "message": "Fix JavaDoc\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "committedDate": "2020-11-02T14:30:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2NTM5Mg==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516065392", "bodyText": "How about renaming this fieldtenantClientFactory to tenantClient?", "author": "kaniyan", "createdAt": "2020-11-02T15:48:00Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/DefaultDeviceResolver.java", "diffHunk": "@@ -79,7 +79,7 @@\n     private final String adapterName;\n     private final CoapAdapterProperties config;\n     private final CredentialsClientFactory credentialsClientFactory;\n-    private final TenantClientFactory tenantClientFactory;\n+    private final TenantClient tenantClientFactory;", "originalCommit": "b699763479436631ca430abf323cb774ae34f886", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzODY5MA==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516638690", "bodyText": "I'd also rename this.", "author": "calohmn", "createdAt": "2020-11-03T12:44:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2NTM5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0MjcwNA==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516642704", "bodyText": "@kaniyan anything else that needs to be changed? If not, could you approve the PR?\n\nThe above comment regarding renaming the variable is still pending. But it should not hinder from merging this and its a minor one.", "author": "kaniyan", "createdAt": "2020-11-03T12:51:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2NTM5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0ODcwOA==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516648708", "bodyText": "sure, I forgot about this one .... will rename and merge ...", "author": "sophokles73", "createdAt": "2020-11-03T13:01:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2NTM5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2OTUwMQ==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516069501", "bodyText": "How about using getTenantClient().get(tenantId) instead of getTenantClient().get(tenantId, null)?", "author": "kaniyan", "createdAt": "2020-11-02T15:53:39Z", "path": "service-base/src/main/java/org/eclipse/hono/service/monitoring/AbstractMessageSenderConnectionEventProducer.java", "diffHunk": "@@ -74,7 +72,7 @@ protected AbstractMessageSenderConnectionEventProducer() {\n         final String tenantId = authenticatedDevice.getTenantId();\n         final String deviceId = authenticatedDevice.getDeviceId();\n \n-        return getTenant(context.getTenantClientFactory(), tenantId)\n+        return context.getTenantClient().get(tenantId, null)", "originalCommit": "b699763479436631ca430abf323cb774ae34f886", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4NzgzMg==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516487832", "bodyText": "org.eclipse.hono.adapter.client.registry.TenantClient has no method accepting just the tenant ID.", "author": "sophokles73", "createdAt": "2020-11-03T08:19:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2OTUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4OTkzNQ==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516489935", "bodyText": "Sorry, then I am mixed it up with org.eclipse.hono.client.TenantClient", "author": "kaniyan", "createdAt": "2020-11-03T08:24:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2OTUwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4ODc1OQ==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516088759", "bodyText": "@throws NullPointerException if any of context or configuration are {@code null} doesn't reflect the actual null checks in this method. Shouldn't it be @throws NullPointerException if any of the parameters except cacheProvider is {@code null}.", "author": "kaniyan", "createdAt": "2020-11-02T16:20:41Z", "path": "clients/adapter-amqp/src/main/java/org/eclipse/hono/adapter/client/registry/amqp/AbstractRequestResponseClient.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016, 2019 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.adapter.client.registry.amqp;\n+\n+import org.eclipse.hono.adapter.client.amqp.AbstractServiceClient;\n+import org.eclipse.hono.cache.CacheProvider;\n+import org.eclipse.hono.client.HonoConnection;\n+import org.eclipse.hono.client.SendMessageSampler;\n+import org.eclipse.hono.config.ProtocolAdapterProperties;\n+import org.eclipse.hono.util.RequestResponseResult;\n+\n+/**\n+ * A vertx-proton based parent class for the implementation of API clients that follow the request response pattern.\n+ * <p>\n+ * Provides access to a {@link CacheProvider} which can be used to create caches for service response messages.\n+ *\n+ * @param <R> The type of result this client expects the peer to return.\n+ *\n+ */\n+public abstract class AbstractRequestResponseClient<R extends RequestResponseResult<?>>\n+        extends AbstractServiceClient {\n+\n+    /**\n+     * A provider for caches to use for responses received from the service.\n+     */\n+    protected CacheProvider responseCacheProvider;\n+\n+    /**\n+     * Creates a request-response client.\n+     *\n+     * @param connection The connection to the service.\n+     * @param samplerFactory The factory for creating samplers for tracing AMQP messages being sent.\n+     * @param adapterConfig The protocol adapter's configuration properties.\n+     * @param cacheProvider The provider to use for creating cache instances for service responses.\n+     * @throws NullPointerException if any of context or configuration are {@code null}.", "originalCommit": "d4bb643c10f7d148fa77cbbd3e713d1554bf00d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5MDU1OQ==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516090559", "bodyText": "cacheProvider is not being null checked. In that case, it should be @throws NullPointerException if any of the parameters except cacheProvider is {@code null}.", "author": "kaniyan", "createdAt": "2020-11-02T16:23:15Z", "path": "clients/adapter-amqp/src/main/java/org/eclipse/hono/adapter/client/registry/amqp/ProtonBasedTenantClient.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+\n+package org.eclipse.hono.adapter.client.registry.amqp;\n+\n+import javax.security.auth.x500.X500Principal;\n+\n+import org.eclipse.hono.adapter.client.registry.TenantClient;\n+import org.eclipse.hono.cache.CacheProvider;\n+import org.eclipse.hono.client.HonoConnection;\n+import org.eclipse.hono.client.SendMessageSampler;\n+import org.eclipse.hono.client.impl.CachingClientFactory;\n+import org.eclipse.hono.client.impl.TenantClientImpl;\n+import org.eclipse.hono.config.ProtocolAdapterProperties;\n+import org.eclipse.hono.util.TenantConstants;\n+import org.eclipse.hono.util.TenantObject;\n+import org.eclipse.hono.util.TenantResult;\n+\n+import io.opentracing.SpanContext;\n+import io.vertx.core.Future;\n+\n+\n+/**\n+ * A vertx-proton based client of Hono's Tenant service.\n+ *\n+ */\n+public final class ProtonBasedTenantClient extends AbstractRequestResponseClient<TenantResult<TenantObject>> implements TenantClient {\n+\n+    private final CachingClientFactory<org.eclipse.hono.client.TenantClient> tenantClientFactory;\n+\n+    /**\n+     * Creates a new client for a connection.\n+     *\n+     * @param connection The connection to the service.\n+     * @param samplerFactory The factory for creating samplers for tracing AMQP messages being sent.\n+     * @param adapterConfig The protocol adapter's configuration properties.\n+     * @param cacheProvider The cache provider to use for creating the cache for service responses.\n+     * @throws NullPointerException if any of the parameters are {@code null}.", "originalCommit": "d4bb643c10f7d148fa77cbbd3e713d1554bf00d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "70979999a9e8a711db9a3e63e3213cdff9b75537", "url": "https://github.com/eclipse/hono/commit/70979999a9e8a711db9a3e63e3213cdff9b75537", "message": "Fix JavaDoc\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "committedDate": "2020-11-03T08:24:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYzODI5Mw==", "url": "https://github.com/eclipse/hono/pull/2277#discussion_r516638293", "bodyText": "2020", "author": "calohmn", "createdAt": "2020-11-03T12:43:22Z", "path": "clients/adapter-amqp/src/main/java/org/eclipse/hono/adapter/client/registry/amqp/AbstractRequestResponseClient.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016, 2019 Contributors to the Eclipse Foundation", "originalCommit": "70979999a9e8a711db9a3e63e3213cdff9b75537", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a377af56c0d7c40509159a276980885ab8b99826", "url": "https://github.com/eclipse/hono/commit/a377af56c0d7c40509159a276980885ab8b99826", "message": "Rename property\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "committedDate": "2020-11-03T13:03:11Z", "type": "commit"}]}