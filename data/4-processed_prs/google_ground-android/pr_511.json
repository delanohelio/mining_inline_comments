{"pr_number": 511, "pr_title": "[Offline base map] Notify user when \"download\" clicked", "pr_createdAt": "2020-06-30T21:38:35Z", "pr_url": "https://github.com/google/ground-android/pull/511", "timeline": [{"oid": "a04f07a4a2b1ff42ee963c62dc2801e156baf260", "url": "https://github.com/google/ground-android/commit/a04f07a4a2b1ff42ee963c62dc2801e156baf260", "message": "Fix GeoJson coordinate parsing\n\nThe GeoJson spec states that positions must be described by a longitude followed by a latitude; we previously assumed the reverse order, leading to errors.", "committedDate": "2020-06-11T19:00:03Z", "type": "commit"}, {"oid": "66d3f3b48eb81c7c1671850ae9c4b608ea9d1699", "url": "https://github.com/google/ground-android/commit/66d3f3b48eb81c7c1671850ae9c4b608ea9d1699", "message": "Merge branch 'master' of https://github.com/google/ground-android", "committedDate": "2020-06-30T20:43:55Z", "type": "commit"}, {"oid": "7018931c22a32c055ad8a8c5d569a713b75e2d54", "url": "https://github.com/google/ground-android/commit/7018931c22a32c055ad8a8c5d569a713b75e2d54", "message": "Display an emphemeral popup on area download; navigate back\n\nPreviously, we gave users no indication that a download had initiated after selecting the Download button. Now, we display a popup to let the user know the download started and navigate them back to the offline area list (where they'll see the new entry for the area).", "committedDate": "2020-06-30T21:12:27Z", "type": "commit"}, {"oid": "d85af3f4d33995a4cec0cec5ad8c87afbdb06e62", "url": "https://github.com/google/ground-android/commit/d85af3f4d33995a4cec0cec5ad8c87afbdb06e62", "message": "Differentiate between successfully initiated downloads and failures\n\nWe now display a different toast in case an offline area download initialization fails.", "committedDate": "2020-06-30T21:34:30Z", "type": "commit"}, {"oid": "4d9b4a6f17a630134fe5e6ede2ba4d0ff3b18390", "url": "https://github.com/google/ground-android/commit/4d9b4a6f17a630134fe5e6ede2ba4d0ff3b18390", "message": "Merge branch 'master' into download-popup", "committedDate": "2020-07-01T14:43:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNTM1Mw==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448415353", "bodyText": "I believe in this case the toast will re-appear every time to view is restored (e.g. after configuration change). To ensure they're single use, you can wrap DownloadTrigger in our custom class  Event<>.", "author": "gino-m", "createdAt": "2020-07-01T14:46:01Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,51 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n+  private final LiveData<DownloadTrigger> downloads;", "originalCommit": "4d9b4a6f17a630134fe5e6ede2ba4d0ff3b18390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxNDMwMg==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448514302", "bodyText": "Done", "author": "scolsen", "createdAt": "2020-07-01T17:31:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNTM1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNTc1MQ==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448415751", "bodyText": "downloads -> downloadEvents?", "author": "gino-m", "createdAt": "2020-07-01T14:46:39Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,51 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n+  private final LiveData<DownloadTrigger> downloads;", "originalCommit": "4d9b4a6f17a630134fe5e6ede2ba4d0ff3b18390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxNDM1MQ==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448514351", "bodyText": "Done", "author": "scolsen", "createdAt": "2020-07-01T17:31:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNTc1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNjA5Mw==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448416093", "bodyText": "DownloadEvent?", "author": "gino-m", "createdAt": "2020-07-01T14:47:07Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,51 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n+  private final LiveData<DownloadTrigger> downloads;\n+\n+  public LiveData<DownloadTrigger> getDownloadTriggers() {\n+    return this.downloads;\n+  }\n+\n+  enum DownloadTrigger {", "originalCommit": "4d9b4a6f17a630134fe5e6ede2ba4d0ff3b18390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxNDM5Nw==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448514397", "bodyText": "Done", "author": "scolsen", "createdAt": "2020-07-01T17:31:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNjA5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNjgxMQ==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448416811", "bodyText": "Please add a TODO to handle this asynchronously instead of blocking the UI.", "author": "gino-m", "createdAt": "2020-07-01T14:48:05Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,51 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n+  private final LiveData<DownloadTrigger> downloads;\n+\n+  public LiveData<DownloadTrigger> getDownloadTriggers() {\n+    return this.downloads;\n+  }\n+\n+  enum DownloadTrigger {\n+    Started,\n+    Failure\n+  }\n+\n   private final OfflineAreaRepository offlineAreaRepository;\n+  private final PublishSubject<DownloadTrigger> downloadsPublishSubject = PublishSubject.create();\n \n   @Inject\n   OfflineAreaSelectorViewModel(OfflineAreaRepository offlineAreaRepository) {\n     this.offlineAreaRepository = offlineAreaRepository;\n+    this.downloads =\n+        LiveDataReactiveStreams.fromPublisher(\n+            downloadsPublishSubject.toFlowable(BackpressureStrategy.LATEST));\n   }\n \n   // TODO: Use an abstraction over LatLngBounds\n   public void onDownloadClick(LatLngBounds viewport) {\n     Timber.d(\"viewport:%s\", viewport);\n-    offlineAreaRepository.addAreaAndEnqueue(viewport)\n-      .doOnError(err -> Timber.e(\"Failed to add area and queue downloads: %s\", err.getMessage()))\n-      .onErrorComplete()\n-      .blockingAwait();\n+    offlineAreaRepository\n+        .addAreaAndEnqueue(viewport)\n+        .doOnError(\n+            err -> {\n+              Timber.e(\"Failed to add area and queue downloads: %s\", err.getMessage());\n+              downloadsPublishSubject.onNext(DownloadTrigger.Failure);\n+            })\n+        .doOnComplete(() -> downloadsPublishSubject.onNext(DownloadTrigger.Started))\n+        .blockingAwait();", "originalCommit": "4d9b4a6f17a630134fe5e6ede2ba4d0ff3b18390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxNDU3Ng==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448514576", "bodyText": "I just made it non-blocking by introducing a click stream+subscription", "author": "scolsen", "createdAt": "2020-07-01T17:31:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNjgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNzQ5OQ==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448417499", "bodyText": "Since you're blocking, you can just move this operation outside of the stream immediately following the blockingAwait().", "author": "gino-m", "createdAt": "2020-07-01T14:49:07Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,51 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n+  private final LiveData<DownloadTrigger> downloads;\n+\n+  public LiveData<DownloadTrigger> getDownloadTriggers() {\n+    return this.downloads;\n+  }\n+\n+  enum DownloadTrigger {\n+    Started,\n+    Failure\n+  }\n+\n   private final OfflineAreaRepository offlineAreaRepository;\n+  private final PublishSubject<DownloadTrigger> downloadsPublishSubject = PublishSubject.create();\n \n   @Inject\n   OfflineAreaSelectorViewModel(OfflineAreaRepository offlineAreaRepository) {\n     this.offlineAreaRepository = offlineAreaRepository;\n+    this.downloads =\n+        LiveDataReactiveStreams.fromPublisher(\n+            downloadsPublishSubject.toFlowable(BackpressureStrategy.LATEST));\n   }\n \n   // TODO: Use an abstraction over LatLngBounds\n   public void onDownloadClick(LatLngBounds viewport) {\n     Timber.d(\"viewport:%s\", viewport);\n-    offlineAreaRepository.addAreaAndEnqueue(viewport)\n-      .doOnError(err -> Timber.e(\"Failed to add area and queue downloads: %s\", err.getMessage()))\n-      .onErrorComplete()\n-      .blockingAwait();\n+    offlineAreaRepository\n+        .addAreaAndEnqueue(viewport)\n+        .doOnError(\n+            err -> {\n+              Timber.e(\"Failed to add area and queue downloads: %s\", err.getMessage());\n+              downloadsPublishSubject.onNext(DownloadTrigger.Failure);\n+            })\n+        .doOnComplete(() -> downloadsPublishSubject.onNext(DownloadTrigger.Started))", "originalCommit": "4d9b4a6f17a630134fe5e6ede2ba4d0ff3b18390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxODA2NQ==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448418065", "bodyText": "This will report the error but it won't catch it; I believe blockingAwait() will throw an exception for unhandled errors, so may want to use try{} catch around this call instead so you'd catch both cases.", "author": "gino-m", "createdAt": "2020-07-01T14:50:01Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,51 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n+  private final LiveData<DownloadTrigger> downloads;\n+\n+  public LiveData<DownloadTrigger> getDownloadTriggers() {\n+    return this.downloads;\n+  }\n+\n+  enum DownloadTrigger {\n+    Started,\n+    Failure\n+  }\n+\n   private final OfflineAreaRepository offlineAreaRepository;\n+  private final PublishSubject<DownloadTrigger> downloadsPublishSubject = PublishSubject.create();\n \n   @Inject\n   OfflineAreaSelectorViewModel(OfflineAreaRepository offlineAreaRepository) {\n     this.offlineAreaRepository = offlineAreaRepository;\n+    this.downloads =\n+        LiveDataReactiveStreams.fromPublisher(\n+            downloadsPublishSubject.toFlowable(BackpressureStrategy.LATEST));\n   }\n \n   // TODO: Use an abstraction over LatLngBounds\n   public void onDownloadClick(LatLngBounds viewport) {\n     Timber.d(\"viewport:%s\", viewport);\n-    offlineAreaRepository.addAreaAndEnqueue(viewport)\n-      .doOnError(err -> Timber.e(\"Failed to add area and queue downloads: %s\", err.getMessage()))\n-      .onErrorComplete()\n-      .blockingAwait();\n+    offlineAreaRepository\n+        .addAreaAndEnqueue(viewport)\n+        .doOnError(", "originalCommit": "4d9b4a6f17a630134fe5e6ede2ba4d0ff3b18390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxNDc4Mw==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448514783", "bodyText": "Handled via subscribe instead", "author": "scolsen", "createdAt": "2020-07-01T17:32:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxODA2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxODgwMQ==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448418801", "bodyText": "Enum values are constants so they're general ALL_CAPS in Java.", "author": "gino-m", "createdAt": "2020-07-01T14:50:56Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,51 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n+  private final LiveData<DownloadTrigger> downloads;\n+\n+  public LiveData<DownloadTrigger> getDownloadTriggers() {\n+    return this.downloads;\n+  }\n+\n+  enum DownloadTrigger {\n+    Started,\n+    Failure", "originalCommit": "4d9b4a6f17a630134fe5e6ede2ba4d0ff3b18390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxNDgxNA==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448514814", "bodyText": "Done", "author": "scolsen", "createdAt": "2020-07-01T17:32:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxODgwMQ=="}], "type": "inlineReview"}, {"oid": "02a874348104d771f91e9d0137e04d1b1fc7c608", "url": "https://github.com/google/ground-android/commit/02a874348104d771f91e9d0137e04d1b1fc7c608", "message": "Capitalize downloadTrigger enum values", "committedDate": "2020-07-01T16:10:01Z", "type": "commit"}, {"oid": "6ccc0c59502b59d2a36e07c772c62bc82e0a7c18", "url": "https://github.com/google/ground-android/commit/6ccc0c59502b59d2a36e07c772c62bc82e0a7c18", "message": "Wrap download events in Event\n\nThe Event class prevents us from unwittingly re-presenting UIs on view restoration.\n\nI've also renamed downloadTrigger to downloadEvent.", "committedDate": "2020-07-01T16:21:21Z", "type": "commit"}, {"oid": "3972bdb4ab994ffc42af7a15de97b303756e6f2a", "url": "https://github.com/google/ground-android/commit/3972bdb4ab994ffc42af7a15de97b303756e6f2a", "message": "Make download click handling non-blocking\n\nInstead of using blockingAwait, we use a click subject and subscribe to its emissions to fire off downloads and react appropriately in the fragment.", "committedDate": "2020-07-01T17:30:40Z", "type": "commit"}, {"oid": "6de3e69e1f740f3e07e5ba4a5a7d6c7a7ab982fd", "url": "https://github.com/google/ground-android/commit/6de3e69e1f740f3e07e5ba4a5a7d6c7a7ab982fd", "message": "Merge branch 'download-popup' of https://github.com/scolsen/ground-android into download-popup", "committedDate": "2020-07-01T17:32:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4MTc2OA==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448581768", "bodyText": "Add \"break;\" here and below.", "author": "gino-m", "createdAt": "2020-07-01T19:49:53Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorFragment.java", "diffHunk": "@@ -56,6 +61,24 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n     // TODO: use the viewmodel\n     Single<MapAdapter> mapAdapter = mapProvider.getMapAdapter();\n     mapAdapter.as(autoDisposable(this)).subscribe(this::onMapReady);\n+    viewModel\n+        .getDownloadEvents()\n+        .observe(\n+            this,\n+            e -> {\n+              e.ifUnhandled(this::onDownloadEvent);\n+            });\n+  }\n+\n+  private void onDownloadEvent(DownloadEvent downloadEvent) {\n+    switch (downloadEvent) {\n+      case FAILURE:\n+        EphemeralPopups.showError(getContext(), R.string.offline_area_download_failed);\n+        navigator.navigateUp();", "originalCommit": "6de3e69e1f740f3e07e5ba4a5a7d6c7a7ab982fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4MTkzOA==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448581938", "bodyText": "Pls move enum declaration to start of class.", "author": "gino-m", "createdAt": "2020-07-01T19:50:09Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,62 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n+import com.google.android.gnd.rx.Event;\n+import com.google.android.gnd.rx.Schedulers;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.Observable;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n-  private final OfflineAreaRepository offlineAreaRepository;\n+  private final LiveData<Event<DownloadEvent>> downloadEvents;\n+\n+  public LiveData<Event<DownloadEvent>> getDownloadEvents() {\n+    return this.downloadEvents;\n+  }\n+\n+  enum DownloadEvent {", "originalCommit": "6de3e69e1f740f3e07e5ba4a5a7d6c7a7ab982fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4Mjg0MA==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448582840", "bodyText": "I think maybe here you'd just want to use flatMapCompletable without the additional andThen?", "author": "gino-m", "createdAt": "2020-07-01T19:52:06Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,62 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n+import com.google.android.gnd.rx.Event;\n+import com.google.android.gnd.rx.Schedulers;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.Observable;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n-  private final OfflineAreaRepository offlineAreaRepository;\n+  private final LiveData<Event<DownloadEvent>> downloadEvents;\n+\n+  public LiveData<Event<DownloadEvent>> getDownloadEvents() {\n+    return this.downloadEvents;\n+  }\n+\n+  enum DownloadEvent {\n+    STARTED,\n+    FAILURE\n+  }\n+\n+  private final PublishSubject<DownloadEvent> downloadsPublishSubject = PublishSubject.create();\n+  private final PublishSubject<LatLngBounds> downloadClickSubject = PublishSubject.create();\n \n   @Inject\n-  OfflineAreaSelectorViewModel(OfflineAreaRepository offlineAreaRepository) {\n-    this.offlineAreaRepository = offlineAreaRepository;\n+  OfflineAreaSelectorViewModel(OfflineAreaRepository offlineAreaRepository, Schedulers schedulers) {\n+\n+    disposeOnClear(\n+        downloadClickSubject\n+            .flatMap(", "originalCommit": "6de3e69e1f740f3e07e5ba4a5a7d6c7a7ab982fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYxODQ4Mg==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448618482", "bodyText": "@gino-m\nunfortunately, flatMapCompletable won't work here unless we call onComplete explicitly on the PublishSubject , from the docs:\n\nMaps each element of the upstream Observable into CompletableSources, subscribes to them and waits until the upstream and all CompletableSources complete.\n\nSo, since a PublishSubject continually listens for clicks, it never completes and the flatmap will never complete either (since it's perpetually waiting for the subject to complete). Contrarily normal flatmap works as intended here since it doesn't await completions, only emissions.\nI added the comment just above the lambda to describe this predicament\nUnless there's a subject we should use instead of PublishSubject? We could also force it to complete, but that would ensure the user can only ever click Download once, which is the current effect anyway. wdyt?", "author": "scolsen", "createdAt": "2020-07-01T21:11:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4Mjg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyMjA1Mg==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448622052", "bodyText": "I think if we're ok with limiting the user to a single click, the right approach is probably to use a SingleSubject for the clicks, then we can use flatMapCompletable since calling onSuccess will immediately complete the upstream", "author": "scolsen", "createdAt": "2020-07-01T21:20:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4Mjg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4MzgyNw==", "url": "https://github.com/google/ground-android/pull/511#discussion_r448583827", "bodyText": "Following up on the more idiomatic use about, you should then be able to do:\n  .toSingleDefault(DownloadEvent.STARTED)\n  .onErrorReturn(DownloadEvent.FAILURE)\n  .subscribe(downloadsPublishSubject::onNext);", "author": "gino-m", "createdAt": "2020-07-01T19:54:22Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorViewModel.java", "diffHunk": "@@ -16,27 +16,62 @@\n \n package com.google.android.gnd.ui.offlinearea.selector;\n \n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n import com.google.android.gms.maps.model.LatLngBounds;\n import com.google.android.gnd.repository.OfflineAreaRepository;\n+import com.google.android.gnd.rx.Event;\n+import com.google.android.gnd.rx.Schedulers;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.BackpressureStrategy;\n+import io.reactivex.Observable;\n+import io.reactivex.subjects.PublishSubject;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n public class OfflineAreaSelectorViewModel extends AbstractViewModel {\n \n-  private final OfflineAreaRepository offlineAreaRepository;\n+  private final LiveData<Event<DownloadEvent>> downloadEvents;\n+\n+  public LiveData<Event<DownloadEvent>> getDownloadEvents() {\n+    return this.downloadEvents;\n+  }\n+\n+  enum DownloadEvent {\n+    STARTED,\n+    FAILURE\n+  }\n+\n+  private final PublishSubject<DownloadEvent> downloadsPublishSubject = PublishSubject.create();\n+  private final PublishSubject<LatLngBounds> downloadClickSubject = PublishSubject.create();\n \n   @Inject\n-  OfflineAreaSelectorViewModel(OfflineAreaRepository offlineAreaRepository) {\n-    this.offlineAreaRepository = offlineAreaRepository;\n+  OfflineAreaSelectorViewModel(OfflineAreaRepository offlineAreaRepository, Schedulers schedulers) {\n+\n+    disposeOnClear(\n+        downloadClickSubject\n+            .flatMap(\n+                // We need to handle this in the inner lambda instead of using a combinator such as\n+                // flatMapCompletable because the PublishSubject will never actually complete.\n+                // andThen enables us to fill the resulting stream w/ items to propagate completion.\n+                viewport ->\n+                    offlineAreaRepository\n+                        .addAreaAndEnqueue(viewport)\n+                        .andThen(Observable.just(new Object())))\n+            .observeOn(schedulers.ui())\n+            .doOnError(e -> Timber.e(\"Failed to add area and queue downloads: %s\", e.getMessage()))\n+            .subscribe(", "originalCommit": "6de3e69e1f740f3e07e5ba4a5a7d6c7a7ab982fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f52e781703b4006d252994fc358fd7c7135f3528", "url": "https://github.com/google/ground-android/commit/f52e781703b4006d252994fc358fd7c7135f3528", "message": "Merge branch 'master' into download-popup", "committedDate": "2020-07-01T20:21:00Z", "type": "commit"}, {"oid": "3eb55d43ede72a2c41e3773575eb0a562977bec2", "url": "https://github.com/google/ground-android/commit/3eb55d43ede72a2c41e3773575eb0a562977bec2", "message": "Convert download messages to idiomatic RxJava", "committedDate": "2020-07-01T22:16:35Z", "type": "commit"}, {"oid": "056d556ce8b6f329846a6fabad832cffde6adf49", "url": "https://github.com/google/ground-android/commit/056d556ce8b6f329846a6fabad832cffde6adf49", "message": "Rename remaining DownloadEvent instances", "committedDate": "2020-07-01T22:19:08Z", "type": "commit"}, {"oid": "5b842c381ab0664f14be1de77445878f32c87ae4", "url": "https://github.com/google/ground-android/commit/5b842c381ab0664f14be1de77445878f32c87ae4", "message": "Use more generic type", "committedDate": "2020-07-01T22:29:36Z", "type": "commit"}, {"oid": "30692ef061146e9e3a349cd085ee1de5e57e3355", "url": "https://github.com/google/ground-android/commit/30692ef061146e9e3a349cd085ee1de5e57e3355", "message": "Reverse order of declarations", "committedDate": "2020-07-01T22:29:54Z", "type": "commit"}, {"oid": "ae89b51cdcf15a2167690aa47aeaef0d2f8c23b4", "url": "https://github.com/google/ground-android/commit/ae89b51cdcf15a2167690aa47aeaef0d2f8c23b4", "message": "Merge pull request #1 from gino-m/pr-511\n\nSuggestions to convert download messages to idiomatic RxJava", "committedDate": "2020-07-02T02:07:12Z", "type": "commit"}, {"oid": "b31f966a12124df85b47e8cf49f98d67af9c78e8", "url": "https://github.com/google/ground-android/commit/b31f966a12124df85b47e8cf49f98d67af9c78e8", "message": "Fix switch statement checkstyle errors\n\nWe need a default case! And we should break :)", "committedDate": "2020-07-14T14:27:18Z", "type": "commit"}, {"oid": "94e1eea3f5b586c372748864adb586fd45cd3a8d", "url": "https://github.com/google/ground-android/commit/94e1eea3f5b586c372748864adb586fd45cd3a8d", "message": "Merge branch 'master' of https://github.com/google/ground-android into download-popup", "committedDate": "2020-07-14T14:28:25Z", "type": "commit"}, {"oid": "ea47af48d5c65a872313e368a5d61690478d87be", "url": "https://github.com/google/ground-android/commit/ea47af48d5c65a872313e368a5d61690478d87be", "message": "Remove unused import and constructor param", "committedDate": "2020-07-14T15:01:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU2MTI4NA==", "url": "https://github.com/google/ground-android/pull/511#discussion_r454561284", "bodyText": "Why default? Doesn't this make above line case FAILURE redundant?", "author": "shobhitagarwal1612", "createdAt": "2020-07-14T18:32:39Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/selector/OfflineAreaSelectorFragment.java", "diffHunk": "@@ -55,6 +60,21 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n     // TODO: use the viewmodel\n     Single<MapAdapter> mapAdapter = mapProvider.getMapAdapter();\n     mapAdapter.as(autoDisposable(this)).subscribe(this::onMapReady);\n+    viewModel.getDownloadMessages().observe(this, e -> e.ifUnhandled(this::onDownloadMessage));\n+  }\n+\n+  private void onDownloadMessage(DownloadMessage message) {\n+    switch (message) {\n+      case STARTED:\n+        EphemeralPopups.showSuccess(getContext(), R.string.offline_area_download_started);\n+        navigator.navigateUp();\n+        break;\n+      case FAILURE:\n+      default:", "originalCommit": "ea47af48d5c65a872313e368a5d61690478d87be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3MDQxNg==", "url": "https://github.com/google/ground-android/pull/511#discussion_r454570416", "bodyText": "It does, but I believe PMD (or some other check) requires a default clause. We could drop the FAILURE clause, but I think it's ok to keep for now in case we decide we want to handle that case differently--this way we're explicit about discriminating over all the enum values.", "author": "scolsen", "createdAt": "2020-07-14T18:48:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU2MTI4NA=="}], "type": "inlineReview"}]}