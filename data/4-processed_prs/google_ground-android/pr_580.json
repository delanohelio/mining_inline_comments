{"pr_number": 580, "pr_title": "[Offline base maps] Add support for deleting areas", "pr_createdAt": "2020-09-22T20:58:45Z", "pr_url": "https://github.com/google/ground-android/pull/580", "timeline": [{"oid": "41caaefd31d1c06523535a24eda630823605c564", "url": "https://github.com/google/ground-android/commit/41caaefd31d1c06523535a24eda630823605c564", "message": "Update local data store to manage tile/area cross references\n\nTo simplify our handling of offline area deletions, we now keep an association object in the database to track associations between tile sources and offline areas. When deleting an offline area, we can only delete tiles that are unique to the area in question. This cross-table approach simplifies accounting for this, since we can simply fetch tiles along with the areas that depend on them directly from the data store.\n\nThis change also includes the area deletion functionality we need in the data store and offline area repository. I've also updated our File utility to handle deleting files relative to the app's file directory.", "committedDate": "2020-09-22T20:55:30Z", "type": "commit"}, {"oid": "251278150c43c72e8578891725666128992a5bd3", "url": "https://github.com/google/ground-android/commit/251278150c43c72e8578891725666128992a5bd3", "message": "Fix code style errors", "committedDate": "2020-09-23T21:39:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MTk1OA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r493971958", "bodyText": "=>2020", "author": "gino-m", "createdAt": "2020-09-24T00:29:18Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/dao/OfflineAreaTileSourceCrossRefDao.java", "diffHunk": "@@ -1,9 +1,25 @@\n+/*\n+ * Copyright 2019 Google LLC", "originalCommit": "251278150c43c72e8578891725666128992a5bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MjE3Mg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r493972172", "bodyText": "Nit: Extra '/ ' here", "author": "gino-m", "createdAt": "2020-09-24T00:29:58Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -187,7 +188,7 @@ public Completable addAreaAndEnqueue(LatLngBounds bounds) {\n                     .collect(toImmutableSet()));\n   }\n \n-  //** Delete an offline area and the unique tile sources associated with it. */\n+  // ** Delete an offline area and the unique tile sources associated with it. */", "originalCommit": "251278150c43c72e8578891725666128992a5bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3Mjc1Nw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r493972757", "bodyText": "Imo logging should be done in the subscriber (where possible) to avoid duplicate logging messages - lmk what you think!", "author": "gino-m", "createdAt": "2020-09-24T00:32:17Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -583,4 +604,50 @@ public Completable insertOrUpdateOfflineArea(OfflineArea area) {\n         .toSingle()\n         .subscribeOn(schedulers.io());\n   }\n+\n+  private Completable deleteTiles(OfflineAreaEntity offlineAreaEntity) {\n+    return tileSourceDao\n+        .getTileSourcesWithOfflineAreas()\n+        .toSingle()\n+        .map(\n+            sources ->\n+                stream(sources)\n+                    .filter(\n+                        source ->\n+                            // We only remove tiles when the given area is the only one that depends\n+                            // on them.\n+                            source.offlineAreaEntities.contains(offlineAreaEntity)\n+                                && source.offlineAreaEntities.size() == 1)\n+                    .map(source -> source.tileSourceEntity)\n+                    .collect(toImmutableList()))\n+        .flatMapObservable(Observable::fromIterable)\n+        .flatMapCompletable(\n+            tile ->\n+                // TODO: Ideally, we'll want to decouple the file deletion from the local data store\n+                Completable.fromAction(() -> fileUtil.deleteFile(tile.getPath()))\n+                    .andThen(\n+                        tileSourceDao\n+                            .delete(tile)\n+                            .andThen(\n+                                offlineAreaTileSourceCrossRefDao.delete(\n+                                    OfflineAreaTileSourceCrossRef.builder()\n+                                        .setOfflineAreaId(offlineAreaEntity.getId())\n+                                        .setTileSourcePath(tile.getPath())\n+                                        .build()))))\n+        .doOnComplete(() -> Timber.d(\"Removed tiles\"))\n+        .doOnError(throwable -> Timber.e(throwable, \"Failed to delete tiles\"));", "originalCommit": "251278150c43c72e8578891725666128992a5bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MjkwOA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r493972908", "bodyText": "Is there any way to split this stream up to make it more readable and self documenting?", "author": "gino-m", "createdAt": "2020-09-24T00:32:48Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -583,4 +604,50 @@ public Completable insertOrUpdateOfflineArea(OfflineArea area) {\n         .toSingle()\n         .subscribeOn(schedulers.io());\n   }\n+\n+  private Completable deleteTiles(OfflineAreaEntity offlineAreaEntity) {\n+    return tileSourceDao", "originalCommit": "251278150c43c72e8578891725666128992a5bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MzAzMg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r493973032", "bodyText": "Iirc there are some iterable Rx operations, like flatMapIterable. Do any of those help here?", "author": "gino-m", "createdAt": "2020-09-24T00:33:17Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -583,4 +604,50 @@ public Completable insertOrUpdateOfflineArea(OfflineArea area) {\n         .toSingle()\n         .subscribeOn(schedulers.io());\n   }\n+\n+  private Completable deleteTiles(OfflineAreaEntity offlineAreaEntity) {\n+    return tileSourceDao\n+        .getTileSourcesWithOfflineAreas()\n+        .toSingle()\n+        .map(\n+            sources ->\n+                stream(sources)\n+                    .filter(\n+                        source ->\n+                            // We only remove tiles when the given area is the only one that depends\n+                            // on them.\n+                            source.offlineAreaEntities.contains(offlineAreaEntity)\n+                                && source.offlineAreaEntities.size() == 1)\n+                    .map(source -> source.tileSourceEntity)\n+                    .collect(toImmutableList()))\n+        .flatMapObservable(Observable::fromIterable)", "originalCommit": "251278150c43c72e8578891725666128992a5bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bd0bfb2f866acd7c85604c74af57a782fecdfdd7", "url": "https://github.com/google/ground-android/commit/bd0bfb2f866acd7c85604c74af57a782fecdfdd7", "message": "Manage tile/area references using reference counting\n\nRather than manage cross-reference entities, we now use simple reference counting to determine how many offline areas a tile source is associated with. As part of this change:\n\n- A tile source's URL, *not its UID* is now used as the primary key for tile sources, this is necessary to update reference counts, since we generate new UIDs every time we fetch tiles from a basemap source.\n- We now delete tiles only when the reference count of areas is < 1", "committedDate": "2020-10-12T21:19:16Z", "type": "commit"}, {"oid": "9ed2eed17a929c87375dcee97278719634ae06dd", "url": "https://github.com/google/ground-android/commit/9ed2eed17a929c87375dcee97278719634ae06dd", "message": "Remove unused tile/area cross reference tables classes/methods\n\nThe previous commit obviates the need for these classes and methods since we now use reference counting to manage associations between tile sources and offline areas.", "committedDate": "2020-10-12T21:37:11Z", "type": "commit"}, {"oid": "243de8f86db75485b9587f533bc9d6a90b792c98", "url": "https://github.com/google/ground-android/commit/243de8f86db75485b9587f533bc9d6a90b792c98", "message": "Merge branch 'master' of https://github.com/google/ground-android into delete-areas", "committedDate": "2020-10-12T21:37:32Z", "type": "commit"}, {"oid": "a764651ada43760db9edd3f9e80019270b38513f", "url": "https://github.com/google/ground-android/commit/a764651ada43760db9edd3f9e80019270b38513f", "message": "Update tile source tests", "committedDate": "2020-10-13T14:49:48Z", "type": "commit"}, {"oid": "fa3c572bdfb7a7971feb6252d65d917232697bdb", "url": "https://github.com/google/ground-android/commit/fa3c572bdfb7a7971feb6252d65d917232697bdb", "message": "Merge branch 'master' of https://github.com/google/ground-android into delete-areas", "committedDate": "2020-10-15T15:12:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzOTUzMQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505639531", "bodyText": "Nit: Extra leading /", "author": "gino-m", "createdAt": "2020-10-15T15:32:26Z", "path": "gnd/src/main/java/com/google/android/gnd/model/basemap/tile/TileSource.java", "diffHunk": "@@ -22,6 +22,11 @@\n @AutoValue\n public abstract class TileSource {\n \n+  //** Increment the area reference count of a tile source by one. */", "originalCommit": "fa3c572bdfb7a7971feb6252d65d917232697bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDIxMQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505680211", "bodyText": "e542aae", "author": "scolsen", "createdAt": "2020-10-15T16:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzOTUzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzOTc3Mg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505639772", "bodyText": "Style nit: Please use full name \"incrementAreaCount()\"", "author": "gino-m", "createdAt": "2020-10-15T15:32:46Z", "path": "gnd/src/main/java/com/google/android/gnd/model/basemap/tile/TileSource.java", "diffHunk": "@@ -22,6 +22,11 @@\n @AutoValue\n public abstract class TileSource {\n \n+  //** Increment the area reference count of a tile source by one. */\n+  public static TileSource incAreaCount(TileSource tileSource) {", "originalCommit": "fa3c572bdfb7a7971feb6252d65d917232697bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MDE2OQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505680169", "bodyText": "e542aae", "author": "scolsen", "createdAt": "2020-10-15T16:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzOTc3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTkyOA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505641928", "bodyText": "It's generally safer to use artificial ids (id) as PK, and to declare other unique columns as unique if necessary. If there's no specific reason for making this PK, can we move it back to id?", "author": "gino-m", "createdAt": "2020-10-15T15:35:44Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/entity/TileSourceEntity.java", "diffHunk": "@@ -41,6 +40,7 @@\n \n   @CopyAnnotations\n   @NonNull\n+  @PrimaryKey", "originalCommit": "fa3c572bdfb7a7971feb6252d65d917232697bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MTEwMg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505681102", "bodyText": "Sorry, I was under the impression we'd need to use this as the PK if we want insertOrUpdate to work correctly and replace tiles with incremented area counts--will setting URL to Unique achieve the same?", "author": "scolsen", "createdAt": "2020-10-15T16:31:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4Mjc0OQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505682749", "bodyText": "for reference\n\nThe implementation of the method will update its parameters in the database if they already exists (checked by primary keys). If they don't already exists, this option will not change the database.\n\nhttps://developer.android.com/reference/androidx/room/Update", "author": "scolsen", "createdAt": "2020-10-15T16:34:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4MzExOA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505683118", "bodyText": "@gino-m (just to ensure it winds up in your notifications! ...I can never tell w/ github)", "author": "scolsen", "createdAt": "2020-10-15T16:34:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg0NzY0MQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505847641", "bodyText": "I think what you want here is the following in the DAO:\n@query(\"UPDATE tile_source SET reference_count=:newCount WHERE id = :id\")\nvoid updateReferenceCount(String id, int newCount);\nYou probably could also do the increment directly in SQL, but that might be overkill here.\nNote that we've been following the convention that the table or entity is named after what each row describes, in this case \"tile_source\" instead of \"tile_sources'.", "author": "gino-m", "createdAt": "2020-10-15T21:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNDQ0OA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r507214448", "bodyText": "We can do that, but we'd have to change our tile source retrieval logic. At the moment it roughly looks like this:\n\nFetch the basemap JSON from the URL specified in the project\nUse the JSON parser to parse tile sources that intersect with the selected area\nConstruct a tile source for each source\nDownload tiles sources and add them to the DB.\n\nStep 3. is the problematic one. We generate a new UID every time we determine intersecting tiles, so, if a user adds an area that overlaps with an existing area, we can't rely on UIDs to update the reference counts of existing tiles, since these are uniquely determined at JSON parsing time. Thus assuming tile source A exists in the db and has and equivalent URL and extent as tile B (newly parsed), the UIDs for each of them will still be unique thus any updates to the DB that rely on a UID primary key will fail and instead fallback to inserting a new entry (for the same. tile).\nHopefully that explanation makes sense, we can still keep UIDs as the primary key if that's better, we'd just need to add an additional DB call at JSON parsing time to eliminate disregard parsed tiles whose URLs already collide w/ those in the db (since this indicates the reference count should be incremented). This also puts us into a a weird situation in which it more than likely makes the most sense to perform count incrementation in the JSON parser...which seems to be a bad crossing of boundaries imo.\nHopefully this explanation makes sense. Happy to walk through the code as well if its easier. @gino-m", "author": "scolsen", "createdAt": "2020-10-18T21:14:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM4MTExMw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r514381113", "bodyText": "Hi @scolsen sorry I didn't see this before - I think we resolved this in our VCs, please cmiiw!", "author": "gino-m", "createdAt": "2020-10-29T16:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MjM2Ng==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505642366", "bodyText": "If area count can never be null please use int instead.", "author": "gino-m", "createdAt": "2020-10-15T15:36:21Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/entity/TileSourceEntity.java", "diffHunk": "@@ -117,6 +131,8 @@ public static Builder builder() {\n \n     public abstract Builder setState(TileEntityState newState);\n \n+    public abstract Builder setAreaCount(Integer areaCount);", "originalCommit": "fa3c572bdfb7a7971feb6252d65d917232697bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY4NDk0Mg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505684942", "bodyText": "048dd80", "author": "scolsen", "createdAt": "2020-10-15T16:37:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MjM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MzkwNQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505643905", "bodyText": "My intuition is that there's a simpler way of doing this using RxJava fromIterable and recombining the result (combine()?) but would take some tinkering to figure it out. If you don't want to explore that now please add a TODO to simplifying this block.", "author": "gino-m", "createdAt": "2020-10-15T15:38:29Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -96,12 +97,21 @@ private File downloadOfflineBaseMapSource(OfflineBaseMapSource offlineBaseMapSou\n \n   /** Enqueue a single area and its tile sources for download. */\n   private Completable enqueueDownload(OfflineArea area, ImmutableList<TileSource> tileSources) {\n+\n     return localDataStore\n         .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n         .andThen(\n             Completable.merge(\n                 stream(tileSources.asList())\n-                    .map(localDataStore::insertOrUpdateTileSource)\n+                    .map(", "originalCommit": "fa3c572bdfb7a7971feb6252d65d917232697bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczNzcxNw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505737717", "bodyText": "b86a87a", "author": "scolsen", "createdAt": "2020-10-15T18:03:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MzkwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0NDE5MQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505644191", "bodyText": "Any way we can reduce nesting here? Maybe just refactor part of this into its own method?", "author": "gino-m", "createdAt": "2020-10-15T15:38:52Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -170,13 +180,28 @@ public Completable addAreaAndEnqueue(LatLngBounds bounds) {\n         .flatMapPublisher(\n             tiles ->\n                 getDownloadedTileSourcesOnceAndStream()\n-                    .map(ts -> stream(ts).filter(tiles::contains).collect(toImmutableSet())))\n+                    .map(", "originalCommit": "fa3c572bdfb7a7971feb6252d65d917232697bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczNzY4NA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505737684", "bodyText": "b86a87a", "author": "scolsen", "createdAt": "2020-10-15T18:03:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0NDE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0NDc2Mg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505644762", "bodyText": "A better explanation might be \"Delete an offline area, including any tile sources that don't overlap with other existing offline areas.\"", "author": "gino-m", "createdAt": "2020-10-15T15:39:39Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -186,4 +211,27 @@ public Completable addAreaAndEnqueue(LatLngBounds bounds) {\n                     .filter(tileSource -> tileSource.getState() == TileSource.State.DOWNLOADED)\n                     .collect(toImmutableSet()));\n   }\n+\n+  /** Delete an offline area and the unique tile sources associated with it. */", "originalCommit": "fa3c572bdfb7a7971feb6252d65d917232697bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczNzY0Nw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505737647", "bodyText": "b86a87a", "author": "scolsen", "createdAt": "2020-10-15T18:03:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0NDc2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0NjMwMg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505646302", "bodyText": "Same here.. Any way to make this more readable?", "author": "gino-m", "createdAt": "2020-10-15T15:41:41Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -186,4 +211,27 @@ public Completable addAreaAndEnqueue(LatLngBounds bounds) {\n                     .filter(tileSource -> tileSource.getState() == TileSource.State.DOWNLOADED)\n                     .collect(toImmutableSet()));\n   }\n+\n+  /** Delete an offline area and the unique tile sources associated with it. */\n+  public Completable deleteArea(String offlineAreaId) {\n+    return localDataStore\n+        .getOfflineAreaById(offlineAreaId)\n+        .flatMapMaybe(this::getIntersectingDownloadedTileSourcesOnce)\n+        .flatMapCompletable(", "originalCommit": "fa3c572bdfb7a7971feb6252d65d917232697bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczNzYxNA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r505737614", "bodyText": "b86a87a", "author": "scolsen", "createdAt": "2020-10-15T18:03:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0NjMwMg=="}], "type": "inlineReview"}, {"oid": "6db79f59caf5c1e0e476dfc9231f351eed814554", "url": "https://github.com/google/ground-android/commit/6db79f59caf5c1e0e476dfc9231f351eed814554", "message": "Merge branch 'master' of https://github.com/google/ground-android into delete-areas", "committedDate": "2020-10-15T15:42:34Z", "type": "commit"}, {"oid": "e542aaec0a6c830d38886fde0ebfb2815282dabb", "url": "https://github.com/google/ground-android/commit/e542aaec0a6c830d38886fde0ebfb2815282dabb", "message": "Rename incAreaCount -> incrementAreaCount", "committedDate": "2020-10-15T16:29:26Z", "type": "commit"}, {"oid": "048dd804729d4b574c985380030b349b90b0dd8f", "url": "https://github.com/google/ground-android/commit/048dd804729d4b574c985380030b349b90b0dd8f", "message": "Use int instead of Integer for tile area counts.", "committedDate": "2020-10-15T16:36:34Z", "type": "commit"}, {"oid": "b86a87ab45ecb164530b0e3e8f7cda2a5087e1c7", "url": "https://github.com/google/ground-android/commit/b86a87ab45ecb164530b0e3e8f7cda2a5087e1c7", "message": "Readability fixes for the OfflineBaseMapRespository", "committedDate": "2020-10-15T18:02:57Z", "type": "commit"}, {"oid": "9027ebe61a15c931e27ed575f17531f4554c6005", "url": "https://github.com/google/ground-android/commit/9027ebe61a15c931e27ed575f17531f4554c6005", "message": "Merge branch 'master' into delete-areas", "committedDate": "2020-10-15T21:04:45Z", "type": "commit"}, {"oid": "572bdbca876c655c9e32f605814c76dbad0022b7", "url": "https://github.com/google/ground-android/commit/572bdbca876c655c9e32f605814c76dbad0022b7", "message": "Merge branch 'master' into delete-areas", "committedDate": "2020-10-29T09:50:55Z", "type": "commit"}, {"oid": "7bf8d74f07e78443bbb824d17c2ff1fc1fcda780", "url": "https://github.com/google/ground-android/commit/7bf8d74f07e78443bbb824d17c2ff1fc1fcda780", "message": "Use a custom query to update tile area counts\n\nFor integrity reasons, we shouldn't use URL as the primary key for tile sources and should use a UID instead. However, this means we can't rely on Room's automatic update/delete methods which perform selections against primary keys. This commit restores the tile source UID as the primary key and adds custom queries for updating area counts and deleting tile sources based on the URL of the tile source.", "committedDate": "2020-11-02T20:16:07Z", "type": "commit"}, {"oid": "0b72c84631d3edb88752bbf97966e4f2c4ec33be", "url": "https://github.com/google/ground-android/commit/0b72c84631d3edb88752bbf97966e4f2c4ec33be", "message": "Merge branch 'delete-areas' of https://github.com/scolsen/ground-android into delete-areas", "committedDate": "2020-11-02T20:17:13Z", "type": "commit"}, {"oid": "e2200f87a48690a76eb3368d360c25c61fcec2ee", "url": "https://github.com/google/ground-android/commit/e2200f87a48690a76eb3368d360c25c61fcec2ee", "message": "Merge branch 'master' into delete-areas", "committedDate": "2020-11-02T20:18:56Z", "type": "commit"}, {"oid": "a4450fe2bb4255506b31ded5ab22ddd5e813084e", "url": "https://github.com/google/ground-android/commit/a4450fe2bb4255506b31ded5ab22ddd5e813084e", "message": "Merge branch 'master' into delete-areas", "committedDate": "2020-11-03T10:12:36Z", "type": "commit"}, {"oid": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "url": "https://github.com/google/ground-android/commit/469c2a9f5e7de8347198f010bb9bca2610d4f125", "message": "Fix errors introduced by bad merge.\n\ne2200f87 introduced a regression by doubly defining a function in the GeoJsonParser. I used the github UI to perform the merge...lesson learned. -.-", "committedDate": "2020-11-03T15:13:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MTg0Nw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517161847", "bodyText": "Since this operates on a tile source, can you make this non-static and modify this instead?", "author": "gino-m", "createdAt": "2020-11-04T08:13:27Z", "path": "gnd/src/main/java/com/google/android/gnd/model/basemap/tile/TileSource.java", "diffHunk": "@@ -22,6 +22,11 @@\n @AutoValue\n public abstract class TileSource {\n \n+  /** Increment the area reference count of a tile source by one. */\n+  public static TileSource incrementAreaCount(TileSource tileSource) {", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1NzQxNA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517657414", "bodyText": "Done, thanks!", "author": "scolsen", "createdAt": "2020-11-04T22:03:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MTg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MjAwOA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517162008", "bodyText": "then here you could just call TileSource::incrementAreaCount", "author": "gino-m", "createdAt": "2020-11-04T08:13:48Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/geojson/GeoJsonParser.java", "diffHunk": "@@ -48,6 +48,32 @@\n     this.uuidGenerator = uuidGenerator;\n   }\n \n+  /**\n+   * Returns the immutable list of tiles specified in {@param geojson} that intersect {@param\n+   * bounds}.\n+   */\n+  public ImmutableList<TileSource> intersectingTiles(LatLngBounds bounds, File file) {\n+    try {\n+      String fileContents = FileUtils.readFileToString(file, Charset.forName(JSON_SOURCE_CHARSET));\n+      // TODO: Separate parsing and intersection checks, make asyc (single, completable).\n+      JSONObject geoJson = new JSONObject(fileContents);\n+      // TODO: Make features constant.\n+      JSONArray features = geoJson.getJSONArray(FEATURES_KEY);\n+\n+      return stream(toArrayList(features))\n+          .map(GeoJsonTile::new)\n+          .filter(tile -> tile.boundsIntersect(bounds))\n+          .map(this::jsonToTileSource)\n+          .map(tileSource -> tileSource.toBuilder().setAreaCount(1).build())", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1NzM0MA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517657340", "bodyText": "done, thanks!", "author": "scolsen", "createdAt": "2020-11-04T22:02:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MjAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MjQ3OA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517162478", "bodyText": "Nit: Calling it \"reference count\" might make the purpose of this field more obvious.", "author": "gino-m", "createdAt": "2020-11-04T08:14:43Z", "path": "gnd/src/main/java/com/google/android/gnd/model/basemap/tile/TileSource.java", "diffHunk": "@@ -37,6 +42,8 @@\n \n   public abstract State getState();\n \n+  public abstract int getAreaCount();", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYzMzQwOQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517633409", "bodyText": "I actually find referenceCount more ambiguous--references to what, exactly?\nMaybe associatedBasemapCount or basemapReferenceCount?", "author": "scolsen", "createdAt": "2020-11-04T21:10:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MjQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1NzI3OA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517657278", "bodyText": "Changed to basemapReferenceCount", "author": "scolsen", "createdAt": "2020-11-04T22:02:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MjQ3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MzIwMA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517163200", "bodyText": "\" Delete an offline area and any tiles that are no longer needed.\" might be clearer here.", "author": "gino-m", "createdAt": "2020-11-04T08:16:07Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/LocalDataStore.java", "diffHunk": "@@ -164,6 +164,18 @@\n   /** Returns all queued, failed, and completed offline areas from the local data store. */\n   Flowable<ImmutableList<OfflineBaseMap>> getOfflineAreasOnceAndStream();\n \n+  /** Delete an offline area and its *unique* tiles. */\n+  Completable deleteOfflineArea(String offlineAreaId);", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1NzE4Nw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517657187", "bodyText": "Done, nice edit, thanks!", "author": "scolsen", "createdAt": "2020-11-04T22:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MzIwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MzYxMg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517163612", "bodyText": "I'd expect this to accept the URL and new count; this makes what's happening more obvious and reduces the surface area of the internal API.\nAlso, returning a Completable here may be more correct.", "author": "gino-m", "createdAt": "2020-11-04T08:16:54Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/LocalDataStore.java", "diffHunk": "@@ -164,6 +164,18 @@\n   /** Returns all queued, failed, and completed offline areas from the local data store. */\n   Flowable<ImmutableList<OfflineBaseMap>> getOfflineAreasOnceAndStream();\n \n+  /** Delete an offline area and its *unique* tiles. */\n+  Completable deleteOfflineArea(String offlineAreaId);\n+\n   /** Returns the offline area with the specified id. */\n   Single<OfflineBaseMap> getOfflineAreaById(String id);\n+\n+  /**\n+   * Update the area count of an existing tile source in the local data store with the area count of\n+   * {@param tilesource}.\n+   */\n+  Single<TileSource> updateTileSourceAreaCountByUrl(TileSource tilesource);", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1NzEyOA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517657128", "bodyText": "done, thanks!", "author": "scolsen", "createdAt": "2020-11-04T22:02:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2MzYxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2NDkyMg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517164922", "bodyText": "Why do we need to find the area in order to delete it? We should be able to just deleted by id, no?", "author": "gino-m", "createdAt": "2020-11-04T08:19:29Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -585,4 +586,32 @@ public Completable insertOrUpdateOfflineArea(OfflineBaseMap area) {\n         .toSingle()\n         .subscribeOn(schedulers.io());\n   }\n+\n+  @Override\n+  public Completable deleteOfflineArea(String id) {\n+    return offlineBaseMapDao\n+        .findById(id)\n+        .toSingle()\n+        .doOnSubscribe(__ -> Timber.d(\"Deleting offline area: %s\", id))\n+        .flatMapCompletable(offlineBaseMapDao::delete)", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2NTA5Mg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517165092", "bodyText": "Can we return a Completable here instead?", "author": "gino-m", "createdAt": "2020-11-04T08:19:49Z", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -585,4 +586,32 @@ public Completable insertOrUpdateOfflineArea(OfflineBaseMap area) {\n         .toSingle()\n         .subscribeOn(schedulers.io());\n   }\n+\n+  @Override\n+  public Completable deleteOfflineArea(String id) {\n+    return offlineBaseMapDao\n+        .findById(id)\n+        .toSingle()\n+        .doOnSubscribe(__ -> Timber.d(\"Deleting offline area: %s\", id))\n+        .flatMapCompletable(offlineBaseMapDao::delete)\n+        .subscribeOn(schedulers.io());\n+  }\n+\n+  @Override\n+  public Single<TileSource> updateTileSourceAreaCountByUrl(TileSource tileSource) {\n+    return tileSourceDao\n+        .updateAreaCount(tileSource.getAreaCount(), tileSource.getUrl())\n+        .map(__ -> tileSource);", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2NjMzMg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517166332", "bodyText": "Naming nit: ->deleteFileIfExists", "author": "gino-m", "createdAt": "2020-11-04T08:22:13Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/util/FileUtil.java", "diffHunk": "@@ -84,4 +84,14 @@ public File getFileFromRawResource(@RawRes int resourceId, String filename) thro\n     }\n     return file;\n   }\n+\n+  /** Attempts to delete a file relative to the app's file directory when it exists. */\n+  public void deleteFile(String filename) {", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjM1Nw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517172357", "bodyText": "Please move this logic into subscribe() instead of side effect.", "author": "gino-m", "createdAt": "2020-11-04T08:32:58Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinebasemap/viewer/OfflineBaseMapViewerFragment.java", "diffHunk": "@@ -109,6 +112,11 @@ public void onRemoveClick() {\n       return;\n     }\n \n-    viewModel.onRemoveClick();\n+    Timber.d(\"Removing offline area %s\", viewModel.getOfflineArea());\n+    viewModel\n+        .onRemoveClick()\n+        .doOnComplete(() -> navigator.navigateUp())", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1OTYzNw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517659637", "bodyText": "done!", "author": "scolsen", "createdAt": "2020-11-04T22:08:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjM1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjgxNg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517172816", "bodyText": "Can we avoid casting to Flowable here to simplify a bit?", "author": "gino-m", "createdAt": "2020-11-04T08:33:54Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineBaseMapRepository.java", "diffHunk": "@@ -186,4 +212,23 @@ public Completable addAreaAndEnqueue(LatLngBounds bounds) {\n                     .filter(tileSource -> tileSource.getState() == TileSource.State.DOWNLOADED)\n                     .collect(toImmutableSet()));\n   }\n+\n+  /**\n+   * Delete an offline base map and any tile sources associated with it that do not overlap with\n+   * other offline base maps .\n+   */\n+  public Completable deleteArea(String offlineAreaId) {\n+    return localDataStore\n+        .getOfflineAreaById(offlineAreaId)\n+        .flatMapMaybe(this::getIntersectingDownloadedTileSourcesOnce)\n+        .flatMapPublisher(Flowable::fromIterable)", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0NzEwMg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517647102", "bodyText": "Unless I'm missing something we'll either need to cast the initial iterable into a flowable or flatten a list of resulting  Completables using merge. I find converting an iterable to a stream of items and mapping over the stream to be more idiomatic and simpler to understand. For comparison, here's the current approach:\n.getOfflineAreaById(offlineAreaId)\n        .flatMapMaybe(this::getIntersectingDownloadedTileSourcesOnce)\n        .flatMapPublisher(Flowable::fromIterable) // convert List<TileSource> to a stream of <TileSource>\n        .map(TileSource::decrementAreaCount) // from here on, just use straightforward RX stream operations to manipulate each item\n        .flatMapCompletable(\n            tile ->\n                localDataStore\n                    .updateTileSourceAreaCountByUrl(tile.getAreaCount(), tile.getUrl())\n                    .andThen(localDataStore.deleteTileByUrl(tile)))\n        .andThen(localDataStore.deleteOfflineArea(offlineAreaId));\nversus the alternative explicit iteration over the iterable:\nCompletable.merge(\n  localdatastore.getOfflineAreaById(offlineAreaId)\n        .flatMapMaybe(this::getIntersectingDownloadedTileSourcesOnce)\n        .map(tileSources -> \n                    stream(tileSources).map( // we could have just converted this into an RX stream but instead we use a Java 8 stream...within a stream\n                       tile ->\n                          localDataStore\n                          .updateTileSourceAreaCountByUrl(tile.getAreaCount(), tile.getUrl())\n                          .andThen(localDataStore.deleteTileByUrl(tile))).collect(toImmutableList))) // list of Completable\n        .andThen(localDataStore.deleteOfflineArea(offlineAreaId));\nor something similar. I think the first, simply casting an iterable into terms of RX java streams has a few advantages:\n\neliminate stream util code (since rx java operates on streams and provides conversions from iterables into streams, isn't somewhat silly for us to stream(listofThings).map...etc. within a stream, we're effectively using two different but equivalent stream languages (java 8 and RX) at different levels)?\neliminate recollection and flattenting\noperate on a stream of values rather than a pseudo stream of a single value which is itself a streamable collection.\n\nI think the interior stream approach makes sense when we want to continue talking about a collection of values in the RX stream (for instance, if we were collecting these after transforming them into ints) but when the final value is something like a Completable I think it makes more sense just to up-level the items to the RX stream level.\nThat said I'm not sure what the relative (if any) performance trade offs are between each approach, so this is mostly a stylistic preference. I just think thinking in terms of streams of tiles at a single level (RX) is simpler than having to think in terms of streams at two levels (the RX stream and the stream of tiles within that stream) and have to flatten an iterable of stream/observable types (which arguably I think you should only be doing when you have some more meaningful combination of multiple observables, such as observables that emit different items that need to be combined)", "author": "scolsen", "createdAt": "2020-11-04T21:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1OTY4NQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517659685", "bodyText": "@gino-m", "author": "scolsen", "createdAt": "2020-11-04T22:08:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA3NDE4Mw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r518074183", "bodyText": "Sorry, I should have been more clear - I think unpacking the collection makes sense, I was wondering if we can use Observable::fromIterable here instead of Flowable::fromIterable", "author": "gino-m", "createdAt": "2020-11-05T14:04:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUzNzQyOA==", "url": "https://github.com/google/ground-android/pull/580#discussion_r519537428", "bodyText": "oh! Indeed we can! And it's better since we've no real need for backpressure here.", "author": "scolsen", "createdAt": "2020-11-09T03:42:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUzNzgyNw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r519537827", "bodyText": "364195f", "author": "scolsen", "createdAt": "2020-11-09T03:44:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MjgxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MzcyMQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517173721", "bodyText": "It might be nice to have a tileSource.decrementTileCount() called here instead (better encapsulated and for consistency with increment..", "author": "gino-m", "createdAt": "2020-11-04T08:35:30Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineBaseMapRepository.java", "diffHunk": "@@ -186,4 +212,23 @@ public Completable addAreaAndEnqueue(LatLngBounds bounds) {\n                     .filter(tileSource -> tileSource.getState() == TileSource.State.DOWNLOADED)\n                     .collect(toImmutableSet()));\n   }\n+\n+  /**\n+   * Delete an offline base map and any tile sources associated with it that do not overlap with\n+   * other offline base maps .\n+   */\n+  public Completable deleteArea(String offlineAreaId) {\n+    return localDataStore\n+        .getOfflineAreaById(offlineAreaId)\n+        .flatMapMaybe(this::getIntersectingDownloadedTileSourcesOnce)\n+        .flatMapPublisher(Flowable::fromIterable)\n+        .map(\n+            tileSource ->\n+                tileSource.toBuilder().setAreaCount(tileSource.getAreaCount() - 1).build())", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1Njk0MQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517656941", "bodyText": "Done, thanks!", "author": "scolsen", "createdAt": "2020-11-04T22:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MzcyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3NDAyMg==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517174022", "bodyText": "Also, if the previous stream is a Completable, here we could just use andThen.", "author": "gino-m", "createdAt": "2020-11-04T08:36:04Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineBaseMapRepository.java", "diffHunk": "@@ -186,4 +212,23 @@ public Completable addAreaAndEnqueue(LatLngBounds bounds) {\n                     .filter(tileSource -> tileSource.getState() == TileSource.State.DOWNLOADED)\n                     .collect(toImmutableSet()));\n   }\n+\n+  /**\n+   * Delete an offline base map and any tile sources associated with it that do not overlap with\n+   * other offline base maps .\n+   */\n+  public Completable deleteArea(String offlineAreaId) {\n+    return localDataStore\n+        .getOfflineAreaById(offlineAreaId)\n+        .flatMapMaybe(this::getIntersectingDownloadedTileSourcesOnce)\n+        .flatMapPublisher(Flowable::fromIterable)\n+        .map(\n+            tileSource ->\n+                tileSource.toBuilder().setAreaCount(tileSource.getAreaCount() - 1).build())\n+        .flatMapCompletable(", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1Njg4Nw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517656887", "bodyText": "done", "author": "scolsen", "createdAt": "2020-11-04T22:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3NDAyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3NDEyOQ==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517174129", "bodyText": "Same here.", "author": "gino-m", "createdAt": "2020-11-04T08:36:16Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineBaseMapRepository.java", "diffHunk": "@@ -186,4 +212,23 @@ public Completable addAreaAndEnqueue(LatLngBounds bounds) {\n                     .filter(tileSource -> tileSource.getState() == TileSource.State.DOWNLOADED)\n                     .collect(toImmutableSet()));\n   }\n+\n+  /**\n+   * Delete an offline base map and any tile sources associated with it that do not overlap with\n+   * other offline base maps .\n+   */\n+  public Completable deleteArea(String offlineAreaId) {\n+    return localDataStore\n+        .getOfflineAreaById(offlineAreaId)\n+        .flatMapMaybe(this::getIntersectingDownloadedTileSourcesOnce)\n+        .flatMapPublisher(Flowable::fromIterable)\n+        .map(\n+            tileSource ->\n+                tileSource.toBuilder().setAreaCount(tileSource.getAreaCount() - 1).build())\n+        .flatMapCompletable(\n+            tile ->\n+                Completable.fromSingle(localDataStore.updateTileSourceAreaCountByUrl(tile))\n+                    .andThen(localDataStore.deleteTileByUrl(tile)))", "originalCommit": "469c2a9f5e7de8347198f010bb9bca2610d4f125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1Njg0Mw==", "url": "https://github.com/google/ground-android/pull/580#discussion_r517656843", "bodyText": "done", "author": "scolsen", "createdAt": "2020-11-04T22:01:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3NDEyOQ=="}], "type": "inlineReview"}, {"oid": "aaf0c83e9eed7502190539964bc3d1d27b748f60", "url": "https://github.com/google/ground-android/commit/aaf0c83e9eed7502190539964bc3d1d27b748f60", "message": "Stylistic improvements to TileSource\n\n- Rename areaCount -> basemapReferenceCount\n- Add a decrement method for reference counts\n- Remove static from increment method\n- Update the signature of updateTileSourceBasemapReferenceCountByUrl signature.", "committedDate": "2020-11-04T22:01:10Z", "type": "commit"}, {"oid": "302135cac4d3cc4ebc1618cfdd22a551a910eb1e", "url": "https://github.com/google/ground-android/commit/302135cac4d3cc4ebc1618cfdd22a551a910eb1e", "message": "Move navigation logic in basemap viewer fragment into subscribe", "committedDate": "2020-11-04T22:07:34Z", "type": "commit"}, {"oid": "364195fac7361f20c62e687efaf522f4f13a1a0a", "url": "https://github.com/google/ground-android/commit/364195fac7361f20c62e687efaf522f4f13a1a0a", "message": "OfflineBaseMapRepository: Cast maybe to observable\n\nWe don't need backpressure here, thus, we have no need for a flowable.", "committedDate": "2020-11-09T03:41:53Z", "type": "commit"}, {"oid": "4fb5ad85686959179985f6921b3f52720e11e774", "url": "https://github.com/google/ground-android/commit/4fb5ad85686959179985f6921b3f52720e11e774", "message": "Merge branch 'master' into delete-areas", "committedDate": "2020-11-09T10:20:40Z", "type": "commit"}]}