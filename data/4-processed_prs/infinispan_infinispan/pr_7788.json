{"pr_number": 7788, "pr_title": "ISPN-11226 Set the cache manager in the task context for distributed \u2026", "pr_createdAt": "2020-01-24T17:07:24Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7788", "timeline": [{"oid": "c5336a0bc8c3ac4af7c1563abeb3c0a4eaa603f6", "url": "https://github.com/infinispan/infinispan/commit/c5336a0bc8c3ac4af7c1563abeb3c0a4eaa603f6", "message": "ISPN-11226 Set the cache manager in the task context for distributed tasks", "committedDate": "2020-01-29T14:58:17Z", "type": "forcePushed"}, {"oid": "0c641a9e0c48c1ebe4badda08c607a2934be1667", "url": "https://github.com/infinispan/infinispan/commit/0c641a9e0c48c1ebe4badda08c607a2934be1667", "message": "ISPN-11226 Set the cache manager in the task context for distributed tasks", "committedDate": "2020-02-03T16:11:16Z", "type": "forcePushed"}, {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef", "url": "https://github.com/infinispan/infinispan/commit/fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef", "message": "ISPN-11226 Set the cache manager in the task context for distributed tasks", "committedDate": "2020-02-03T17:15:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzMjkyMA==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374232920", "bodyText": "This is much simpler than +5 etc. I'll update the class to use this approach for all values in the future.", "author": "ryanemerson", "createdAt": "2020-02-03T17:21:48Z", "path": "commons/src/main/java/org/infinispan/commons/marshall/ProtoStreamTypeIds.java", "diffHunk": "@@ -78,10 +78,12 @@\n    int FILE_READ_LOCK_KEY = LUCENE_LOWER_BOUND + 4;\n    int FILE_LIST_CACHE_VALUE = LUCENE_LOWER_BOUND + 5;\n \n-   // Scripting 4800 -> 4999\n+   // Tasks + Scripting 4800 -> 4999\n    int SCRIPTING_LOWER_BOUND = LUCENE_LOWER_BOUND + 200;\n    int EXECUTION_MODE = SCRIPTING_LOWER_BOUND;\n    int SCRIPT_METADATA = SCRIPTING_LOWER_BOUND + 1;\n+   int DISTRIBUTED_SERVER_TASK = SCRIPT_METADATA + 1;\n+   int DISTRIBUTED_SERVER_TASK_PARAMETER = DISTRIBUTED_SERVER_TASK + 1;", "originalCommit": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0MDI5Ng==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374240296", "bodyText": "You just can't comment them out arbitrarily anymore though :D", "author": "wburns", "createdAt": "2020-02-03T17:36:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzMjkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNDI2Mw==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374234263", "bodyText": "Is this an old comment? It doesn't seem to belong here anymore.", "author": "ryanemerson", "createdAt": "2020-02-03T17:24:29Z", "path": "server/runtime/src/main/java/org/infinispan/server/Extensions.java", "diffHunk": "@@ -84,6 +84,7 @@ private void loadServerTasks(ClassLoader classLoader) {\n    }\n \n    public TaskEngine getServerTaskEngine(EmbeddedCacheManager cm) {\n+      // Create marshallers for all tasks", "originalCommit": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM0NTUzNQ==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374345535", "bodyText": "Removed", "author": "tristantarrant", "createdAt": "2020-02-03T21:17:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNDI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNjk0MA==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374236940", "bodyText": "Class variable serverTaskEngine is never used, so we can remove the constructor.", "author": "ryanemerson", "createdAt": "2020-02-03T17:29:52Z", "path": "server/runtime/src/main/java/org/infinispan/server/tasks/DistributedServerTaskRunner.java", "diffHunk": "@@ -36,8 +38,9 @@ public DistributedServerTaskRunner(ServerTaskEngine serverTaskEngine) {\n             results.add(v);\n          }\n       };\n-      CompletableFuture<Void> future = clusterExecutor.submitConsumer(new DistributedServerTask<>(\n-            masterCacheNode.getName(), taskName, context.getParameters()), triConsumer);\n+      List<TaskParameter> taskParams = context.getParameters().orElse(Collections.emptyMap()).entrySet().stream().map(e -> new TaskParameter(e.getKey(), e.getValue().toString())).collect(Collectors.toList());", "originalCommit": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM0NTQ4MQ==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374345481", "bodyText": "Removed", "author": "tristantarrant", "createdAt": "2020-02-03T21:17:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNjk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNzQ2NQ==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374237465", "bodyText": "Can be package-private", "author": "ryanemerson", "createdAt": "2020-02-03T17:30:51Z", "path": "server/runtime/src/main/java/org/infinispan/server/tasks/PersistenceContextInitializer.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.infinispan.server.tasks;\n+\n+import org.infinispan.protostream.SerializationContextInitializer;\n+import org.infinispan.protostream.annotations.AutoProtoSchemaBuilder;\n+\n+/**\n+ * Interface used to initialise a {@link org.infinispan.protostream.SerializationContext} using the specified Pojos,\n+ * Marshaller implementations and provided .proto schemas.\n+ *\n+ * @author Tristan Tarrant\n+ * @since 11.0\n+ */\n+@AutoProtoSchemaBuilder(\n+      includeClasses = {\n+            TaskParameter.class,\n+            DistributedServerTask.class\n+      },\n+      schemaFileName = \"persistence.servertasks.proto\",\n+      schemaFilePath = \"proto/generated\",\n+      schemaPackageName = \"org.infinispan.persistence.servertasks\")\n+public interface PersistenceContextInitializer extends SerializationContextInitializer {", "originalCommit": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM0NTQyNA==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374345424", "bodyText": "Done", "author": "tristantarrant", "createdAt": "2020-02-03T21:16:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNzQ2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzODEzOQ==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374238139", "bodyText": "Class and constructor can be package-private as only used internally.", "author": "ryanemerson", "createdAt": "2020-02-03T17:32:06Z", "path": "server/runtime/src/main/java/org/infinispan/server/tasks/TaskParameter.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.infinispan.server.tasks;\n+\n+import org.infinispan.commons.marshall.ProtoStreamTypeIds;\n+import org.infinispan.protostream.annotations.ProtoFactory;\n+import org.infinispan.protostream.annotations.ProtoField;\n+import org.infinispan.protostream.annotations.ProtoTypeId;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@ProtoTypeId(ProtoStreamTypeIds.DISTRIBUTED_SERVER_TASK_PARAMETER)\n+public class TaskParameter {\n+   @ProtoField(number = 1)\n+   String key;\n+\n+   @ProtoField(number = 2)\n+   String value;\n+\n+   @ProtoFactory\n+   public TaskParameter(String key, String value) {", "originalCommit": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM0NTM2OA==", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374345368", "bodyText": "Fixed", "author": "tristantarrant", "createdAt": "2020-02-03T21:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzODEzOQ=="}], "type": "inlineReview"}, {"oid": "d4dae7fe5a21f0a52fe196658b062e426a28d285", "url": "https://github.com/infinispan/infinispan/commit/d4dae7fe5a21f0a52fe196658b062e426a28d285", "message": "ISPN-11226 Set the cache manager in the task context for distributed tasks", "committedDate": "2020-02-03T21:10:22Z", "type": "forcePushed"}, {"oid": "3c759d749a7f7addf6283652bd0af5fc26ebe141", "url": "https://github.com/infinispan/infinispan/commit/3c759d749a7f7addf6283652bd0af5fc26ebe141", "message": "ISPN-11226 Set the cache manager in the task context for distributed tasks", "committedDate": "2020-02-06T07:43:23Z", "type": "forcePushed"}, {"oid": "9b11d6ebe74cf6b9b2c21969df47b2e21710334e", "url": "https://github.com/infinispan/infinispan/commit/9b11d6ebe74cf6b9b2c21969df47b2e21710334e", "message": "ISPN-11226 Set the cache manager in the task context for distributed tasks", "committedDate": "2020-02-06T15:34:13Z", "type": "commit"}, {"oid": "9b11d6ebe74cf6b9b2c21969df47b2e21710334e", "url": "https://github.com/infinispan/infinispan/commit/9b11d6ebe74cf6b9b2c21969df47b2e21710334e", "message": "ISPN-11226 Set the cache manager in the task context for distributed tasks", "committedDate": "2020-02-06T15:34:13Z", "type": "forcePushed"}]}