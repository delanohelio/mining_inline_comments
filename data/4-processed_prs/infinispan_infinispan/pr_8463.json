{"pr_number": 8463, "pr_title": "ISPN-11980 Storage type HEAP should default to application/x-java-object", "pr_createdAt": "2020-06-11T05:19:21Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8463", "timeline": [{"oid": "4e18273a1c43be1113d4c116cb0cb3b5c555d954", "url": "https://github.com/infinispan/infinispan/commit/4e18273a1c43be1113d4c116cb0cb3b5c555d954", "message": "ISPN-11980 Storage type HEAP should default to application/x-java-object", "committedDate": "2020-06-10T10:51:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMzgyOQ==", "url": "https://github.com/infinispan/infinispan/pull/8463#discussion_r438613829", "bodyText": "I reckon configuration.memory().storage() == StorageType.HEAP is the only check you need, since the config will translate from the old attributes. Do you have a failing test for this JIRA @danberindei or was it just something you noticed?", "author": "gustavonalle", "createdAt": "2020-06-11T08:06:55Z", "path": "core/src/main/java/org/infinispan/encoding/impl/StorageConfigurationManager.java", "diffHunk": "@@ -109,6 +108,8 @@ private MediaType getStorageMediaType(Configuration configuration, boolean embed\n       if (internalCache) return MediaType.APPLICATION_OBJECT;\n \n       if (embeddedMode) {\n+         boolean heap = configuration.memory().storage() == StorageType.OBJECT ||\n+                        configuration.memory().storage() == StorageType.HEAP;", "originalCommit": "4e18273a1c43be1113d4c116cb0cb3b5c555d954", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMDQwMg==", "url": "https://github.com/infinispan/infinispan/pull/8463#discussion_r438710402", "bodyText": "I don't have a test, I just noticed it while testing the anchored keys module, which at the time replaced cache values with Address instances and then treated them as protostream-encoded byte[].\nAnd it looks like I got the problem wrong: my test was using the deprecated MemoryStorageConfigurationBuilder.storageType(), and HEAP actually stopped working when I switched it to the new MemoryConfigurationBuilder.storage(). That's because they use 2 independent attributes, and MemoryConfigurationBuilder doesn't just translate OBJECT->HEAP when the attribute is set, it also translates back STORAGE=HEAP -> STORAGE_TYPE=OBJECT in read(). IMO the less magic in the configuration (or anywhere else, for that matter) the better, so personally I would remove the translation OBJECT->HEAP and back, and allow both OBJECT and HEAP here.", "author": "danberindei", "createdAt": "2020-06-11T11:11:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMzgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxOTYyNw==", "url": "https://github.com/infinispan/infinispan/pull/8463#discussion_r438819627", "bodyText": "my test was using the deprecated MemoryStorageConfigurationBuilder.storageType(), and HEAP actually stopped working\n\nStill don't get it. Were you using storageType(HEAP) and then moved to storage(HEAP) or storageType(OBJECT) and moved to storage(HEAP)?", "author": "gustavonalle", "createdAt": "2020-06-11T14:15:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMzgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNTg0Mw==", "url": "https://github.com/infinispan/infinispan/pull/8463#discussion_r438825843", "bodyText": "Yeah, looking at ScaleUpWithoutStateTransferTest, it is the former", "author": "gustavonalle", "createdAt": "2020-06-11T14:25:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMzgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg5NzUyOQ==", "url": "https://github.com/infinispan/infinispan/pull/8463#discussion_r438897529", "bodyText": "I finally wrote a comprehensive test, and the only broken config is\nconfigurationBuilder.memory().storageType(StorageType.HEAP);\nassertStorageMediaTypes(configurationBuilder, StorageType.HEAP, StorageType.HEAP,\n                              MediaType.APPLICATION_PROTOSTREAM);", "author": "danberindei", "createdAt": "2020-06-11T15:58:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMzgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwNTk1Mg==", "url": "https://github.com/infinispan/infinispan/pull/8463#discussion_r438905952", "bodyText": "ok, just waiting for CI", "author": "gustavonalle", "createdAt": "2020-06-11T16:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMzgyOQ=="}], "type": "inlineReview"}]}