{"pr_number": 8403, "pr_title": "ISPN-11929 Add query boolean property", "pr_createdAt": "2020-05-28T16:07:52Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8403", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1NzU0Nw==", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r431957547", "bodyText": "Should test for both MediaType.APPLICATION_PROTOSTREAM and MediaType.APPLICATION_OBJECT\nInstead of == should use .match()\ncache.getCacheConfiguration().encoding().valueDataType() can be null if I'm not mistaken", "author": "gustavonalle", "createdAt": "2020-05-28T16:13:01Z", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -302,6 +303,9 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       InfinispanQueryStatisticsInfo.IndexStatistics indexStatistics = getIndexStatistics(cache);\n       boolean rehashInProgress = distributionManager != null && distributionManager.isRehashInProgress();\n       boolean indexingInProgress = indexStatistics != null && indexStatistics.getReindexing();\n+      boolean indexed =  configuration.indexing().enabled();\n+      boolean query = indexed ||\n+            cache.getCacheConfiguration().encoding().valueDataType().mediaType() == MediaType.APPLICATION_PROTOSTREAM;", "originalCommit": "462d9f18dbee297ec7d558c264bed2f7ff74cdfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMzk5MQ==", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r432333991", "bodyText": "It still can cause a NPE", "author": "gustavonalle", "createdAt": "2020-05-29T08:28:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1NzU0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0NjMxOQ==", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r432346319", "bodyText": "ahhh I did not reproduce debugging but I was super tired y", "author": "karesti", "createdAt": "2020-05-29T08:51:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1NzU0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1OTIzNA==", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r431959234", "bodyText": "queryable would be better", "author": "gustavonalle", "createdAt": "2020-05-28T16:15:07Z", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -404,5 +409,6 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       public boolean hasRemoteBackup;\n       public boolean indexingInProgress;\n       public boolean statistics;\n+      public boolean query;", "originalCommit": "462d9f18dbee297ec7d558c264bed2f7ff74cdfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExNTgzOQ==", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r432115839", "bodyText": "ok", "author": "karesti", "createdAt": "2020-05-28T20:51:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1OTIzNA=="}], "type": "inlineReview"}, {"oid": "332ad8b6112d7d6826a6f91a73e5ae4bd7a2f049", "url": "https://github.com/infinispan/infinispan/commit/332ad8b6112d7d6826a6f91a73e5ae4bd7a2f049", "message": "ISPN-11929 Add query boolean property", "committedDate": "2020-05-28T20:52:44Z", "type": "forcePushed"}, {"oid": "60c6215dad05603a0e3f54e047f1584f308854e5", "url": "https://github.com/infinispan/infinispan/commit/60c6215dad05603a0e3f54e047f1584f308854e5", "message": "ISPN-11929 Add query boolean property", "committedDate": "2020-05-29T08:56:29Z", "type": "forcePushed"}, {"oid": "714efea0e49c486ff0a321a9216cc0ccc797584f", "url": "https://github.com/infinispan/infinispan/commit/714efea0e49c486ff0a321a9216cc0ccc797584f", "message": "ISPN-11929 Add query boolean property", "committedDate": "2020-05-29T10:21:56Z", "type": "forcePushed"}, {"oid": "1d758ad05f9308c2ef7c7a5da05e16d2b1b429f1", "url": "https://github.com/infinispan/infinispan/commit/1d758ad05f9308c2ef7c7a5da05e16d2b1b429f1", "message": "ISPN-11929 Add query boolean property", "committedDate": "2020-05-29T10:23:20Z", "type": "commit"}, {"oid": "1d758ad05f9308c2ef7c7a5da05e16d2b1b429f1", "url": "https://github.com/infinispan/infinispan/commit/1d758ad05f9308c2ef7c7a5da05e16d2b1b429f1", "message": "ISPN-11929 Add query boolean property", "committedDate": "2020-05-29T10:23:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTM4NA==", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r433705384", "bodyText": "It's wrong to assume a cache without an explicit encoding configuration is not queryable, because depending on the storage type it will either use APPLICATION_OBJECT or the user marshaller's media type (which is APPLICATION_PROTOSTREAM with the default serialization configuration).\nYou should use cache.getValueDataConversion().getStorageMediaType() to get the actual media type, but I'd much rather make this a method in query-core", "author": "danberindei", "createdAt": "2020-06-02T08:25:17Z", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -302,7 +303,11 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       InfinispanQueryStatisticsInfo.IndexStatistics indexStatistics = getIndexStatistics(cache);\n       boolean rehashInProgress = distributionManager != null && distributionManager.isRehashInProgress();\n       boolean indexingInProgress = indexStatistics != null && indexStatistics.getReindexing();\n-\n+      boolean indexed =  configuration.indexing().enabled();\n+      ContentTypeConfiguration valueDataType = cache.getCacheConfiguration().encoding().valueDataType();\n+      boolean queryable = indexed || (valueDataType != null && valueDataType.mediaType()!= null &&", "originalCommit": "1d758ad05f9308c2ef7c7a5da05e16d2b1b429f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwODgzOQ==", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r433708839", "bodyText": "@danberindei You are right, I will send a follow up PR to have a method in StorageManager to verify the runtime storage", "author": "gustavonalle", "createdAt": "2020-06-02T08:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwOTA0MQ==", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r433709041", "bodyText": "This will also come handy for many other places that need this info", "author": "gustavonalle", "createdAt": "2020-06-02T08:31:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcxNzM3Ng==", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r433717376", "bodyText": "The PR already exists it's #8389  :)", "author": "gustavonalle", "createdAt": "2020-06-02T08:45:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTM4NA=="}], "type": "inlineReview"}]}