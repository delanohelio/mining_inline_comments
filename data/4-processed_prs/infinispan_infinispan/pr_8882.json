{"pr_number": 8882, "pr_title": "ISPN-12500 Custom server paths", "pr_createdAt": "2020-11-24T08:47:00Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8882", "timeline": [{"oid": "0356025c8aa1158fc0235cfa5d8a9687a39375b8", "url": "https://github.com/infinispan/infinispan/commit/0356025c8aa1158fc0235cfa5d8a9687a39375b8", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-11-24T08:51:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMyNDc3MA==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r529324770", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * directory undert the server root.\n          \n          \n            \n                * directory under the server root.", "author": "oraNod", "createdAt": "2020-11-24T09:13:02Z", "path": "server/runtime/src/main/java/org/infinispan/server/loader/Loader.java", "diffHunk": "@@ -32,6 +34,11 @@\n     * directory under the server home.\n     */\n    public static final String INFINISPAN_SERVER_ROOT_PATH = \"infinispan.server.root.path\";\n+   /**\n+    * Property name indicating the paths to the server lib directories. If unspecified, defaults to the <i>lib</i>\n+    * directory undert the server root.", "originalCommit": "0356025c8aa1158fc0235cfa5d8a9687a39375b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMyOTY3OQ==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r529329679", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - `/server/lib`: server extensions files for custom filters, listeners, and so on. This directory will be scanned recursively and used as a classpath. Can be ovverridden with the `infinispan.server.lib.path` system property which can specify multiple paths separated by the platform path separator (`:` on Unix, `;` on Windows)\n          \n          \n            \n            - `/server/lib`: server extensions files for custom filters, listeners, and so on. This directory will be scanned recursively and used as a classpath. Override with the `infinispan.server.lib.path` system property to set a custom location with multiple paths separated by the `:` character on Unix or the `;` character on Windows.", "author": "oraNod", "createdAt": "2020-11-24T09:16:48Z", "path": "server/runtime/src/main/server/README.md", "diffHunk": "@@ -89,3 +89,22 @@ The default server configuration requires client authentication. Create a user w\n Stopping the Server\n -------------------\n To stop a server, simply interrupt it (Ctrl-C from the terminal it was launched or kill the process via the TERM signal)\n+\n+\n+Server Filesystem\n+-----------------\n+\n+The server has the following directory structure:\n+\n+* `/bin`: scripts to start the server and the CLI.\n+* `/boot`: `JAR` files to boot the server.\n+* `/docs`: examples, configuration schemas, component licenses, etc.\n+* `/lib`: server `JAR` files. Should not be used for custom jars.\n+* `/server`: default server instance folder. Can be overridden with the `-s` or `--server-root` argument.\n+- `/server/conf`: configuration files. Can be overridden with the `infinispan.server.conf.path` system property.\n+- `/server/data`: data files organized by container name. Can be overridden with the `infinispan.server.data.path` system property.\n+- `/server/lib`: server extensions files for custom filters, listeners, and so on. This directory will be scanned recursively and used as a classpath. Can be ovverridden with the `infinispan.server.lib.path` system property which can specify multiple paths separated by the platform path separator (`:` on Unix, `;` on Windows)", "originalCommit": "0356025c8aa1158fc0235cfa5d8a9687a39375b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "753ce1acf800c3a553223943c5bc063193249d56", "url": "https://github.com/infinispan/infinispan/commit/753ce1acf800c3a553223943c5bc063193249d56", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-11-24T11:50:29Z", "type": "forcePushed"}, {"oid": "1d562e8c2026fb8d7acdd3ef02e9b85d0062efce", "url": "https://github.com/infinispan/infinispan/commit/1d562e8c2026fb8d7acdd3ef02e9b85d0062efce", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-11-24T14:23:33Z", "type": "forcePushed"}, {"oid": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "url": "https://github.com/infinispan/infinispan/commit/83089ac7fa494bd09c1fbc848caf502ca2c02493", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-11-25T16:00:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2NzAyOA==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534067028", "bodyText": "nit: can you normalize the path?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        try {\n          \n          \n            \n                        try {\n          \n          \n            \n                            p = p.toAbsolutePath().normalize();\n          \n      \n    \n    \n  \n\nJust to get a \"more readable\" error message than this :)\nException in thread \"main\" java.lang.IllegalArgumentException: Duplicate JARs:\n../../../../counter/target/infinispan-clustered-counter-12.0.0-SNAPSHOT-test-sources.jar\nfile:/home/pedro/Work/infinispan/server/runtime/target/infinispan-server-12.0.0-SNAPSHOT/../../../../counter/target/infinispan-clustered-counter-12.0.0-SNAPSHOT-sources.jar", "author": "pruivo", "createdAt": "2020-12-02T10:41:30Z", "path": "server/runtime/src/main/java/org/infinispan/server/loader/Loader.java", "diffHunk": "@@ -82,21 +90,27 @@ public static void run(String[] args, Properties properties) {\n \n    public static ClassLoader classLoaderFromPath(Path path, ClassLoader parent) {\n       try {\n-         Map<String, URL> jars = new HashMap<>();\n-         Files.walk(path)\n-               .filter(f -> f.toString().endsWith(\".jar\"))\n-               .forEach(jar -> {\n-                  try {\n-                     String artifact = extractArtifactName(jar.getFileName().toString());\n-                     if (jars.containsKey(artifact)) {\n-                        throw new IllegalArgumentException(\"Duplicate JARs:\\n\" + jar + \"\\n\" + jars.get(artifact));\n-                     } else {\n-                        jars.put(artifact, jar.toUri().toURL());\n-                     }\n-                  } catch (MalformedURLException e) {\n+         if (!Files.exists(path)) {\n+            return parent;\n+         }\n+         Map<String, URL> urls = new LinkedHashMap<>();\n+         Files.find(path, Integer.MAX_VALUE, (p, a) -> p.toString().endsWith(\".jar\") || a.isDirectory(), FileVisitOption.FOLLOW_LINKS).forEach(p -> {\n+            try {", "originalCommit": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0NjU2OQ==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534146569", "bodyText": "Ok", "author": "tristantarrant", "createdAt": "2020-12-02T12:57:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2NzAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2NzkzNQ==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534067935", "bodyText": "is this required? I think find() will enter the directory and give you the jars.", "author": "pruivo", "createdAt": "2020-12-02T10:42:52Z", "path": "server/runtime/src/main/java/org/infinispan/server/loader/Loader.java", "diffHunk": "@@ -82,21 +90,27 @@ public static void run(String[] args, Properties properties) {\n \n    public static ClassLoader classLoaderFromPath(Path path, ClassLoader parent) {\n       try {\n-         Map<String, URL> jars = new HashMap<>();\n-         Files.walk(path)\n-               .filter(f -> f.toString().endsWith(\".jar\"))\n-               .forEach(jar -> {\n-                  try {\n-                     String artifact = extractArtifactName(jar.getFileName().toString());\n-                     if (jars.containsKey(artifact)) {\n-                        throw new IllegalArgumentException(\"Duplicate JARs:\\n\" + jar + \"\\n\" + jars.get(artifact));\n-                     } else {\n-                        jars.put(artifact, jar.toUri().toURL());\n-                     }\n-                  } catch (MalformedURLException e) {\n+         if (!Files.exists(path)) {\n+            return parent;\n+         }\n+         Map<String, URL> urls = new LinkedHashMap<>();\n+         Files.find(path, Integer.MAX_VALUE, (p, a) -> p.toString().endsWith(\".jar\") || a.isDirectory(), FileVisitOption.FOLLOW_LINKS).forEach(p -> {\n+            try {\n+               if (p.toString().endsWith(\".jar\")) {\n+                  String artifact = extractArtifactName(p.getFileName().toString());\n+                  if (urls.containsKey(artifact)) {\n+                     throw new IllegalArgumentException(\"Duplicate JARs:\\n\" + p + \"\\n\" + urls.get(artifact));\n+                  } else {\n+                     urls.put(artifact, p.toUri().toURL());\n                   }\n-               });\n-         final URL[] array = jars.values().toArray(new URL[jars.size()]);\n+               } else {\n+                  // It's a directory", "originalCommit": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0NzY3OA==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534147678", "bodyText": "find() returns both files and directories and we need to process them differently. URLClassLoader treats non-jar URIs as root paths where to look for \"bare\" resources such as property files.", "author": "tristantarrant", "createdAt": "2020-12-02T12:59:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2NzkzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NDA2OQ==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534074069", "bodyText": "this isn't working for me.\n$  ./bin/server.sh -Dinfinispan.server.conf.path=./server2/conf -c infinispan-other.xml\n...\nCaused by: java.io.FileNotFoundException: /home/pedro/Work/infinispan/server/runtime/target/infinispan-server-12.0.0-SNAPSHOT/server/conf/infinispan-other.xml (No such file or directory)\n\n$ ls server2/conf/\ngroups.properties  infinispan-local.xml  infinispan-other.xml  infinispan.xml  infinispan-xsite.xml  log4j2.xml  users.properties", "author": "pruivo", "createdAt": "2020-12-02T10:52:45Z", "path": "server/runtime/src/main/server/README.adoc", "diffHunk": "@@ -0,0 +1,262 @@\n+[id='server_readme']\n+= ${infinispan.brand.name} Server ${infinispan.brand.version}\n+\n+Welcome to ${infinispan.brand.name} Server!\n+\n+== Requirements\n+${infinispan.brand.name} Server requires JDK 11 or later.\n+\n+== Starting servers\n+Use the `server` script to run ${infinispan.brand.name} Server instances.\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat\n+----\n+\n+[TIP]\n+====\n+Include the `--help` or `-h` option to view command arguments.\n+====\n+\n+== Stopping servers\n+Use the [command]`shutdown` command with the CLI to perform a graceful shutdown.\n+\n+Alternatively, enter Ctrl-C from the terminal to interrupt the server process or kill it via the TERM signal.\n+\n+== Configuration\n+Server configuration extends ${infinispan.brand.name} configuration with the following server-specific elements:\n+\n+`cache-container`:: Defines cache containers for managing cache lifecycles.\n+`endpoints`:: Enables and configures endpoint connectors for client protocols.\n+`security`:: Configures endpoint security realms.\n+`socket-bindings`:: Maps endpoint connectors to interfaces and ports.\n+\n+The default configuration file is `<SERVER_HOME>/server/conf/infinispan.xml`.\n+\n+Use different configuration files with the `-c` argument, as in the following example that starts a server without clustering capabilities:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -c infinispan-local.xml\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -c infinispan-local.xml\n+----\n+\n+== Bind address\n+${infinispan.brand.name} Server binds to the loopback IP address `localhost` on your network by default.\n+\n+Use the `-b` argument to set a different IP address, as in the following example that binds to all network interfaces:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -b 0.0.0.0\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -b 0.0.0.0\n+----\n+\n+== Bind port\n+${infinispan.brand.name} Server listens on port `11222` by default.\n+\n+Use the `-p` argument to set an alternative port:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -p 30000\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -p 30000\n+----\n+\n+== Clustering address\n+${infinispan.brand.name} Server configuration defines cluster transport so multiple instances on the same network discover each other and automatically form clusters.\n+\n+Use the `-k` argument to change the IP address for cluster traffic:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -k 192.168.1.100\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -k 192.168.1.100\n+----\n+\n+== Cluster stacks\n+JGroups stacks configure the protocols for cluster transport.\n+${infinispan.brand.name} Server uses the `tcp` stack by default.\n+\n+Use alternative cluster stacks with the `-j` argument, as in the following example that uses UDP for cluster transport:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -j udp\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -j udp\n+----\n+\n+== Authentication\n+${infinispan.brand.name} Server requires authentication.\n+\n+Create a username and password with the CLI as follows:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/cli.sh user create username -p \"qwer1234!\"\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\cli.bat user create username -p \"qwer1234!\"\n+----\n+\n+[id='server_home']\n+== Server home directory\n+\n+${infinispan.brand.name} Server uses the `infinispan.server.home` path to locate the contents of the server distribution on the host filesystem.\n+\n+The server home directory, referred to as `<SERVER_HOME>`, contains the following folders:\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+\u251c\u2500\u2500 bin\n+\u251c\u2500\u2500 boot\n+\u251c\u2500\u2500 docs\n+\u251c\u2500\u2500 lib\n+\u251c\u2500\u2500 server\n+\u2514\u2500\u2500 static\n+----\n+\n+[%header,cols=2*]\n+|===\n+|Folder\n+|Description\n+\n+|`/bin`\n+|Contains scripts to start servers and CLI.\n+\n+|`/boot`\n+|Contains `JAR` files to boot servers.\n+\n+|`/docs`\n+|Provides configuration examples, schemas, component licenses, and other resources.\n+\n+|`/lib`\n+|Contains `JAR` files that servers require internally. +\n+Do not place custom `JAR` files in this folder.\n+\n+|`/server`\n+|Provides a root folder for ${infinispan.brand.name} Server instances.\n+\n+|`/static`\n+|Contains static resources for ${infinispan.brand.name} Console.\n+\n+|===\n+\n+[id='server_root']\n+== Server root directory\n+\n+${infinispan.brand.name} Server uses the `infinispan.server.root` path to locate configuration files and data for ${infinispan.brand.name} Server instances.\n+\n+You can create multiple server root folders in the same directory or in different directories and then specify the locations with the `-s` or `--server-root` argument, as in the following example:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -s server2\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -s server2\n+----\n+\n+Each server root directory contains the following folders:\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+\u251c\u2500\u2500 server\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 conf\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 data\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib\n+\u2502\u00a0\u00a0 \u2514\u2500\u2500 log\n+----\n+\n+[%header,cols=3*]\n+|===\n+|Folder\n+|Description\n+|System property override\n+\n+|`/server/conf`\n+|Contains server configuration files.\n+|`infinispan.server.conf.path`", "originalCommit": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzNDU0Ng==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534234546", "bodyText": "That's because it's infinispan.server.config.path. I've fixed the doc.", "author": "tristantarrant", "createdAt": "2020-12-02T15:00:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NDA2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NzU2OQ==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534077569", "bodyText": "probably worth mentioning that it can be overwritten with --logging-config @oraNod  :)\nAlso, put a warning saying~ isn't resolved so avoid using in the path.\n$ ./bin/server.sh --logging-config=~/.opt/etc/log4j2-w.xml\nCannot read /home/pedro/Work/infinispan/server/runtime/target/infinispan-server-12.0.0-SNAPSHOT/server/conf/~/.opt/etc/log4j2-w.xml", "author": "pruivo", "createdAt": "2020-12-02T10:58:21Z", "path": "server/runtime/src/main/server/README.adoc", "diffHunk": "@@ -0,0 +1,262 @@\n+[id='server_readme']\n+= ${infinispan.brand.name} Server ${infinispan.brand.version}\n+\n+Welcome to ${infinispan.brand.name} Server!\n+\n+== Requirements\n+${infinispan.brand.name} Server requires JDK 11 or later.\n+\n+== Starting servers\n+Use the `server` script to run ${infinispan.brand.name} Server instances.\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat\n+----\n+\n+[TIP]\n+====\n+Include the `--help` or `-h` option to view command arguments.\n+====\n+\n+== Stopping servers\n+Use the [command]`shutdown` command with the CLI to perform a graceful shutdown.\n+\n+Alternatively, enter Ctrl-C from the terminal to interrupt the server process or kill it via the TERM signal.\n+\n+== Configuration\n+Server configuration extends ${infinispan.brand.name} configuration with the following server-specific elements:\n+\n+`cache-container`:: Defines cache containers for managing cache lifecycles.\n+`endpoints`:: Enables and configures endpoint connectors for client protocols.\n+`security`:: Configures endpoint security realms.\n+`socket-bindings`:: Maps endpoint connectors to interfaces and ports.\n+\n+The default configuration file is `<SERVER_HOME>/server/conf/infinispan.xml`.\n+\n+Use different configuration files with the `-c` argument, as in the following example that starts a server without clustering capabilities:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -c infinispan-local.xml\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -c infinispan-local.xml\n+----\n+\n+== Bind address\n+${infinispan.brand.name} Server binds to the loopback IP address `localhost` on your network by default.\n+\n+Use the `-b` argument to set a different IP address, as in the following example that binds to all network interfaces:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -b 0.0.0.0\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -b 0.0.0.0\n+----\n+\n+== Bind port\n+${infinispan.brand.name} Server listens on port `11222` by default.\n+\n+Use the `-p` argument to set an alternative port:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -p 30000\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -p 30000\n+----\n+\n+== Clustering address\n+${infinispan.brand.name} Server configuration defines cluster transport so multiple instances on the same network discover each other and automatically form clusters.\n+\n+Use the `-k` argument to change the IP address for cluster traffic:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -k 192.168.1.100\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -k 192.168.1.100\n+----\n+\n+== Cluster stacks\n+JGroups stacks configure the protocols for cluster transport.\n+${infinispan.brand.name} Server uses the `tcp` stack by default.\n+\n+Use alternative cluster stacks with the `-j` argument, as in the following example that uses UDP for cluster transport:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -j udp\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -j udp\n+----\n+\n+== Authentication\n+${infinispan.brand.name} Server requires authentication.\n+\n+Create a username and password with the CLI as follows:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/cli.sh user create username -p \"qwer1234!\"\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\cli.bat user create username -p \"qwer1234!\"\n+----\n+\n+[id='server_home']\n+== Server home directory\n+\n+${infinispan.brand.name} Server uses the `infinispan.server.home` path to locate the contents of the server distribution on the host filesystem.\n+\n+The server home directory, referred to as `<SERVER_HOME>`, contains the following folders:\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+\u251c\u2500\u2500 bin\n+\u251c\u2500\u2500 boot\n+\u251c\u2500\u2500 docs\n+\u251c\u2500\u2500 lib\n+\u251c\u2500\u2500 server\n+\u2514\u2500\u2500 static\n+----\n+\n+[%header,cols=2*]\n+|===\n+|Folder\n+|Description\n+\n+|`/bin`\n+|Contains scripts to start servers and CLI.\n+\n+|`/boot`\n+|Contains `JAR` files to boot servers.\n+\n+|`/docs`\n+|Provides configuration examples, schemas, component licenses, and other resources.\n+\n+|`/lib`\n+|Contains `JAR` files that servers require internally. +\n+Do not place custom `JAR` files in this folder.\n+\n+|`/server`\n+|Provides a root folder for ${infinispan.brand.name} Server instances.\n+\n+|`/static`\n+|Contains static resources for ${infinispan.brand.name} Console.\n+\n+|===\n+\n+[id='server_root']\n+== Server root directory\n+\n+${infinispan.brand.name} Server uses the `infinispan.server.root` path to locate configuration files and data for ${infinispan.brand.name} Server instances.\n+\n+You can create multiple server root folders in the same directory or in different directories and then specify the locations with the `-s` or `--server-root` argument, as in the following example:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -s server2\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -s server2\n+----\n+\n+Each server root directory contains the following folders:\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+\u251c\u2500\u2500 server\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 conf\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 data\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib\n+\u2502\u00a0\u00a0 \u2514\u2500\u2500 log\n+----\n+\n+[%header,cols=3*]\n+|===\n+|Folder\n+|Description\n+|System property override\n+\n+|`/server/conf`\n+|Contains server configuration files.\n+|`infinispan.server.conf.path`\n+\n+|`/server/data`\n+|Contains data files organized by container name.\n+|`infinispan.server.data.path`\n+\n+|`/server/lib`\n+|Contains server extension files. +\n+This directory is scanned recursively and used as a classpath.\n+|`infinispan.server.lib.path` +\n+Separate multiple paths with the following delimiters: +\n+`:` on Unix / Linux +\n+`;` on Windows\n+\n+|`/server/log`\n+|Contains server log files.\n+|`infinispan.server.log.path`\n+\n+|===\n+\n+== Logging\n+Configure ${infinispan.brand.name} Server logging with the `log4j2.xml` file in the `server/conf` folder.", "originalCommit": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3ODc4MA==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534078780", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               public static void main(String args[]) {\n          \n          \n            \n               public static void main(String[] args) {", "author": "pruivo", "createdAt": "2020-12-02T11:00:12Z", "path": "server/runtime/src/test/java/org/infinispan/server/loader/LoaderTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.infinispan.server.loader;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URLClassLoader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.exporter.ZipExporter;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.Test;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 12.0\n+ **/\n+public class LoaderTest {\n+\n+   @Test\n+   public void testLoader() throws IOException {\n+      Path path = Paths.get(System.getProperty(\"build.directory\"), \"test-classes\", \"server\");\n+      Path lib1 = path.resolve(\"lib1\");\n+      Path lib2 = path.resolve(\"lib2\");\n+      Path lib3 = Files.createDirectories(lib2.resolve(\"lib3\"));\n+      ShrinkWrap.create(JavaArchive.class,\"two.jar\")\n+            .addClasses(TwoClass.class).as(ZipExporter.class).exportTo(lib2.resolve(\"two.jar\").toFile(), true);\n+      ShrinkWrap.create(JavaArchive.class,\"three.jar\")\n+            .addClasses(ThreeClass.class).as(ZipExporter.class).exportTo(lib3.resolve(\"three.jar\").toFile(), true);\n+      Properties properties = new Properties();\n+      properties.put(Loader.INFINISPAN_SERVER_LIB_PATH, String.join(File.pathSeparator, lib1.toString(), lib2.toString(), lib3.toString()));\n+      Loader.run(new String[]{LoaderTest.class.getName()}, properties);\n+   }\n+\n+   public static void main(String args[]) {", "originalCommit": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NTIxMQ==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534085211", "bodyText": "@oraNod is this intentional? (removing from community)", "author": "pruivo", "createdAt": "2020-12-02T11:10:54Z", "path": "documentation/src/main/asciidoc/stories/assembly_server_reference.adoc", "diffHunk": "@@ -1,14 +1,10 @@\n [id='server_reference']\n-:context: server\n+:context: server-info\n = Reference\n \n-//Community", "originalCommit": "83089ac7fa494bd09c1fbc848caf502ca2c02493", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NTc2MA==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534085760", "bodyText": "ps. I think this file isn't consumed anywhere now", "author": "pruivo", "createdAt": "2020-12-02T11:11:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NTIxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEwMzQ2Ng==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534103466", "bodyText": "@pruivo Yes, this is not included in the community edition of the Server Guide. I do want to leave the assembly in the community doc set. I'm planning to come back to this and figure it out separately from this PR.", "author": "oraNod", "createdAt": "2020-12-02T11:43:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NTIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEwNTcyMw==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534105723", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <SERVER_HOME>/bin/server.sh --logging-config=/.opt/etc/log4j2-w.xml\n          \n          \n            \n            <SERVER_HOME>/bin/server.sh --logging-config=/path/to/log4j2.xml", "author": "pruivo", "createdAt": "2020-12-02T11:47:12Z", "path": "server/runtime/src/main/server/README.adoc", "diffHunk": "@@ -0,0 +1,280 @@\n+[id='server_readme']\n+= ${infinispan.brand.name} Server ${infinispan.brand.version}\n+\n+Welcome to ${infinispan.brand.name} Server!\n+\n+== Requirements\n+${infinispan.brand.name} Server requires JDK 11 or later.\n+\n+== Starting servers\n+Use the `server` script to run ${infinispan.brand.name} Server instances.\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat\n+----\n+\n+[TIP]\n+====\n+Include the `--help` or `-h` option to view command arguments.\n+====\n+\n+== Stopping servers\n+Use the [command]`shutdown` command with the CLI to perform a graceful shutdown.\n+\n+Alternatively, enter Ctrl-C from the terminal to interrupt the server process or kill it via the TERM signal.\n+\n+== Configuration\n+Server configuration extends ${infinispan.brand.name} configuration with the following server-specific elements:\n+\n+`cache-container`:: Defines cache containers for managing cache lifecycles.\n+`endpoints`:: Enables and configures endpoint connectors for client protocols.\n+`security`:: Configures endpoint security realms.\n+`socket-bindings`:: Maps endpoint connectors to interfaces and ports.\n+\n+The default configuration file is `<SERVER_HOME>/server/conf/infinispan.xml`.\n+\n+Use different configuration files with the `-c` argument, as in the following example that starts a server without clustering capabilities:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -c infinispan-local.xml\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -c infinispan-local.xml\n+----\n+\n+== Bind address\n+${infinispan.brand.name} Server binds to the loopback IP address `localhost` on your network by default.\n+\n+Use the `-b` argument to set a different IP address, as in the following example that binds to all network interfaces:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -b 0.0.0.0\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -b 0.0.0.0\n+----\n+\n+== Bind port\n+${infinispan.brand.name} Server listens on port `11222` by default.\n+\n+Use the `-p` argument to set an alternative port:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -p 30000\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -p 30000\n+----\n+\n+== Clustering address\n+${infinispan.brand.name} Server configuration defines cluster transport so multiple instances on the same network discover each other and automatically form clusters.\n+\n+Use the `-k` argument to change the IP address for cluster traffic:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -k 192.168.1.100\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -k 192.168.1.100\n+----\n+\n+== Cluster stacks\n+JGroups stacks configure the protocols for cluster transport.\n+${infinispan.brand.name} Server uses the `tcp` stack by default.\n+\n+Use alternative cluster stacks with the `-j` argument, as in the following example that uses UDP for cluster transport:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -j udp\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -j udp\n+----\n+\n+== Authentication\n+${infinispan.brand.name} Server requires authentication.\n+\n+Create a username and password with the CLI as follows:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/cli.sh user create username -p \"qwer1234!\"\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\cli.bat user create username -p \"qwer1234!\"\n+----\n+\n+[id='server_home']\n+== Server home directory\n+\n+${infinispan.brand.name} Server uses the `infinispan.server.home` path to locate the contents of the server distribution on the host filesystem.\n+\n+The server home directory, referred to as `<SERVER_HOME>`, contains the following folders:\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+\u251c\u2500\u2500 bin\n+\u251c\u2500\u2500 boot\n+\u251c\u2500\u2500 docs\n+\u251c\u2500\u2500 lib\n+\u251c\u2500\u2500 server\n+\u2514\u2500\u2500 static\n+----\n+\n+[%header,cols=2*]\n+|===\n+|Folder\n+|Description\n+\n+|`/bin`\n+|Contains scripts to start servers and CLI.\n+\n+|`/boot`\n+|Contains `JAR` files to boot servers.\n+\n+|`/docs`\n+|Provides configuration examples, schemas, component licenses, and other resources.\n+\n+|`/lib`\n+|Contains `JAR` files that servers require internally. +\n+Do not place custom `JAR` files in this folder.\n+\n+|`/server`\n+|Provides a root folder for ${infinispan.brand.name} Server instances.\n+\n+|`/static`\n+|Contains static resources for ${infinispan.brand.name} Console.\n+\n+|===\n+\n+[id='server_root']\n+== Server root directory\n+\n+${infinispan.brand.name} Server uses the `infinispan.server.root` path to locate configuration files and data for ${infinispan.brand.name} Server instances.\n+\n+You can create multiple server root folders in the same directory or in different directories and then specify the locations with the `-s` or `--server-root` argument, as in the following example:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -s server2\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -s server2\n+----\n+\n+Each server root directory contains the following folders:\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+\u251c\u2500\u2500 server\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 conf\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 data\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib\n+\u2502\u00a0\u00a0 \u2514\u2500\u2500 log\n+----\n+\n+[%header,cols=3*]\n+|===\n+|Folder\n+|Description\n+|System property override\n+\n+|`/server/conf`\n+|Contains server configuration files.\n+|`infinispan.server.conf.path`\n+\n+|`/server/data`\n+|Contains data files organized by container name.\n+|`infinispan.server.data.path`\n+\n+|`/server/lib`\n+|Contains server extension files. +\n+This directory is scanned recursively and used as a classpath.\n+|`infinispan.server.lib.path` +\n+Separate multiple paths with the following delimiters: +\n+`:` on Unix / Linux +\n+`;` on Windows\n+\n+|`/server/log`\n+|Contains server log files.\n+|`infinispan.server.log.path`\n+\n+|===\n+\n+== Logging\n+Configure ${infinispan.brand.name} Server logging with the `log4j2.xml` file in the `server/conf` folder.\n+\n+Use the `--logging-config=<path_to_logfile>` argument to use custom paths, as follows:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh --logging-config=/.opt/etc/log4j2-w.xml", "originalCommit": "ecdff7917749151eae44afb7e84dafaf5f6b21cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEwNTg0Mg==", "url": "https://github.com/infinispan/infinispan/pull/8882#discussion_r534105842", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <SERVER_HOME>\\bin\\server.bat --logging-config=path\\to\\log4j2-w.xml\n          \n          \n            \n            <SERVER_HOME>\\bin\\server.bat --logging-config=path\\to\\log4j2.xml", "author": "pruivo", "createdAt": "2020-12-02T11:47:26Z", "path": "server/runtime/src/main/server/README.adoc", "diffHunk": "@@ -0,0 +1,280 @@\n+[id='server_readme']\n+= ${infinispan.brand.name} Server ${infinispan.brand.version}\n+\n+Welcome to ${infinispan.brand.name} Server!\n+\n+== Requirements\n+${infinispan.brand.name} Server requires JDK 11 or later.\n+\n+== Starting servers\n+Use the `server` script to run ${infinispan.brand.name} Server instances.\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat\n+----\n+\n+[TIP]\n+====\n+Include the `--help` or `-h` option to view command arguments.\n+====\n+\n+== Stopping servers\n+Use the [command]`shutdown` command with the CLI to perform a graceful shutdown.\n+\n+Alternatively, enter Ctrl-C from the terminal to interrupt the server process or kill it via the TERM signal.\n+\n+== Configuration\n+Server configuration extends ${infinispan.brand.name} configuration with the following server-specific elements:\n+\n+`cache-container`:: Defines cache containers for managing cache lifecycles.\n+`endpoints`:: Enables and configures endpoint connectors for client protocols.\n+`security`:: Configures endpoint security realms.\n+`socket-bindings`:: Maps endpoint connectors to interfaces and ports.\n+\n+The default configuration file is `<SERVER_HOME>/server/conf/infinispan.xml`.\n+\n+Use different configuration files with the `-c` argument, as in the following example that starts a server without clustering capabilities:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -c infinispan-local.xml\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -c infinispan-local.xml\n+----\n+\n+== Bind address\n+${infinispan.brand.name} Server binds to the loopback IP address `localhost` on your network by default.\n+\n+Use the `-b` argument to set a different IP address, as in the following example that binds to all network interfaces:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -b 0.0.0.0\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -b 0.0.0.0\n+----\n+\n+== Bind port\n+${infinispan.brand.name} Server listens on port `11222` by default.\n+\n+Use the `-p` argument to set an alternative port:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -p 30000\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -p 30000\n+----\n+\n+== Clustering address\n+${infinispan.brand.name} Server configuration defines cluster transport so multiple instances on the same network discover each other and automatically form clusters.\n+\n+Use the `-k` argument to change the IP address for cluster traffic:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -k 192.168.1.100\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -k 192.168.1.100\n+----\n+\n+== Cluster stacks\n+JGroups stacks configure the protocols for cluster transport.\n+${infinispan.brand.name} Server uses the `tcp` stack by default.\n+\n+Use alternative cluster stacks with the `-j` argument, as in the following example that uses UDP for cluster transport:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -j udp\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -j udp\n+----\n+\n+== Authentication\n+${infinispan.brand.name} Server requires authentication.\n+\n+Create a username and password with the CLI as follows:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/cli.sh user create username -p \"qwer1234!\"\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\cli.bat user create username -p \"qwer1234!\"\n+----\n+\n+[id='server_home']\n+== Server home directory\n+\n+${infinispan.brand.name} Server uses the `infinispan.server.home` path to locate the contents of the server distribution on the host filesystem.\n+\n+The server home directory, referred to as `<SERVER_HOME>`, contains the following folders:\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+\u251c\u2500\u2500 bin\n+\u251c\u2500\u2500 boot\n+\u251c\u2500\u2500 docs\n+\u251c\u2500\u2500 lib\n+\u251c\u2500\u2500 server\n+\u2514\u2500\u2500 static\n+----\n+\n+[%header,cols=2*]\n+|===\n+|Folder\n+|Description\n+\n+|`/bin`\n+|Contains scripts to start servers and CLI.\n+\n+|`/boot`\n+|Contains `JAR` files to boot servers.\n+\n+|`/docs`\n+|Provides configuration examples, schemas, component licenses, and other resources.\n+\n+|`/lib`\n+|Contains `JAR` files that servers require internally. +\n+Do not place custom `JAR` files in this folder.\n+\n+|`/server`\n+|Provides a root folder for ${infinispan.brand.name} Server instances.\n+\n+|`/static`\n+|Contains static resources for ${infinispan.brand.name} Console.\n+\n+|===\n+\n+[id='server_root']\n+== Server root directory\n+\n+${infinispan.brand.name} Server uses the `infinispan.server.root` path to locate configuration files and data for ${infinispan.brand.name} Server instances.\n+\n+You can create multiple server root folders in the same directory or in different directories and then specify the locations with the `-s` or `--server-root` argument, as in the following example:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh -s server2\n+----\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat -s server2\n+----\n+\n+Each server root directory contains the following folders:\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+\u251c\u2500\u2500 server\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 conf\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 data\n+\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib\n+\u2502\u00a0\u00a0 \u2514\u2500\u2500 log\n+----\n+\n+[%header,cols=3*]\n+|===\n+|Folder\n+|Description\n+|System property override\n+\n+|`/server/conf`\n+|Contains server configuration files.\n+|`infinispan.server.conf.path`\n+\n+|`/server/data`\n+|Contains data files organized by container name.\n+|`infinispan.server.data.path`\n+\n+|`/server/lib`\n+|Contains server extension files. +\n+This directory is scanned recursively and used as a classpath.\n+|`infinispan.server.lib.path` +\n+Separate multiple paths with the following delimiters: +\n+`:` on Unix / Linux +\n+`;` on Windows\n+\n+|`/server/log`\n+|Contains server log files.\n+|`infinispan.server.log.path`\n+\n+|===\n+\n+== Logging\n+Configure ${infinispan.brand.name} Server logging with the `log4j2.xml` file in the `server/conf` folder.\n+\n+Use the `--logging-config=<path_to_logfile>` argument to use custom paths, as follows:\n+\n+.Unix / Linux\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>/bin/server.sh --logging-config=/.opt/etc/log4j2-w.xml\n+----\n+\n+TIP: To ensure custom paths take effect, do not use the `~` shortcut.\n+\n+.Windows\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+<SERVER_HOME>\\bin\\server.bat --logging-config=path\\to\\log4j2-w.xml", "originalCommit": "ecdff7917749151eae44afb7e84dafaf5f6b21cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "98b28dbe7fee92505c0d76fa3bc0f418a9c3c7ba", "url": "https://github.com/infinispan/infinispan/commit/98b28dbe7fee92505c0d76fa3bc0f418a9c3c7ba", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-12-02T14:59:36Z", "type": "forcePushed"}, {"oid": "dc80df18abec9cb1882ec4d6ba284fcd9a180685", "url": "https://github.com/infinispan/infinispan/commit/dc80df18abec9cb1882ec4d6ba284fcd9a180685", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-12-02T16:06:04Z", "type": "commit"}, {"oid": "dc80df18abec9cb1882ec4d6ba284fcd9a180685", "url": "https://github.com/infinispan/infinispan/commit/dc80df18abec9cb1882ec4d6ba284fcd9a180685", "message": "ISPN-12500 Custom server paths", "committedDate": "2020-12-02T16:06:04Z", "type": "forcePushed"}]}