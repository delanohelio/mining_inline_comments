{"pr_number": 8075, "pr_title": "ISPN-10135 Performance Regression for HotRod-TX", "pr_createdAt": "2020-03-23T11:57:19Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8075", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4Nzk1Nw==", "url": "https://github.com/infinispan/infinispan/pull/8075#discussion_r402087957", "bodyText": "I'd simplify this to only use the key owner on the first try.\nIMO retries should be rare enough that we shouldn't worry about the server we're retrying on being a key owner, and we're going to send the request to an unrelated server anyway if the 2nd modification's key is owned by the failed server.", "author": "danberindei", "createdAt": "2020-04-02T06:51:39Z", "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/transaction/operations/PrepareTransactionOperation.java", "diffHunk": "@@ -80,8 +82,18 @@ protected void executeOperation(Channel channel) {\n       channel.writeAndFlush(buf);\n    }\n \n+   @Override\n+   protected void fetchChannelAndInvoke(int retryCount, Set<SocketAddress> failedServers) {\n+      if (retryCount < modifications.size()) {", "originalCommit": "6e89abf508a21e6e2767d811af82ebb4a1881c37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyNTI0OA==", "url": "https://github.com/infinispan/infinispan/pull/8075#discussion_r402125248", "bodyText": "I don't see any advantage in doing that.\nIf there is a chance of hitting a primary owner of some key, I'll take it.\nIf you are worried about modifications.size(), the list is an ArrayList; it just reads a field.", "author": "pruivo", "createdAt": "2020-04-02T08:04:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4Nzk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk5MjMzNQ==", "url": "https://github.com/infinispan/infinispan/pull/8075#discussion_r407992335", "bodyText": "I wasn't worried about size(), I was just thinking it's simpler if we use the same logic here as we use for other multi-key operations:\n\n  \n    \n      infinispan/client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/operations/PutAllOperation.java\n    \n    \n         Line 76\n      in\n      a2a183a\n    \n    \n    \n    \n\n        \n          \n           channelFactory.fetchChannelAndInvoke(map.keySet().iterator().next(), failedServers, cacheName, this);", "author": "danberindei", "createdAt": "2020-04-14T09:23:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4Nzk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTgwMg==", "url": "https://github.com/infinispan/infinispan/pull/8075#discussion_r408029802", "bodyText": "@danberindei  done.", "author": "pruivo", "createdAt": "2020-04-14T10:24:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4Nzk1Nw=="}], "type": "inlineReview"}, {"oid": "a87240c9e0e733aaa033f5ae137793d3ad227e1d", "url": "https://github.com/infinispan/infinispan/commit/a87240c9e0e733aaa033f5ae137793d3ad227e1d", "message": "ISPN-10135 Performance Regression for HotRod-TX\n\n* try to prepare the transaction in the primary owner", "committedDate": "2020-04-13T10:18:46Z", "type": "forcePushed"}, {"oid": "2671e07280c961d59ccf22deedc033d11a739694", "url": "https://github.com/infinispan/infinispan/commit/2671e07280c961d59ccf22deedc033d11a739694", "message": "ISPN-10135 Performance Regression for HotRod-TX\n\n* try to prepare the transaction in the primary owner", "committedDate": "2020-04-14T10:19:30Z", "type": "forcePushed"}, {"oid": "2f51a5b7d1b78ead93734942967a927f417fb88e", "url": "https://github.com/infinispan/infinispan/commit/2f51a5b7d1b78ead93734942967a927f417fb88e", "message": "ISPN-10135 Performance Regression for HotRod-TX\n\n* try to prepare the transaction in the primary owner", "committedDate": "2020-04-14T17:39:10Z", "type": "commit"}, {"oid": "2f51a5b7d1b78ead93734942967a927f417fb88e", "url": "https://github.com/infinispan/infinispan/commit/2f51a5b7d1b78ead93734942967a927f417fb88e", "message": "ISPN-10135 Performance Regression for HotRod-TX\n\n* try to prepare the transaction in the primary owner", "committedDate": "2020-04-14T17:39:10Z", "type": "forcePushed"}]}