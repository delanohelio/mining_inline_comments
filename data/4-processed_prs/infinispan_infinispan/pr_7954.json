{"pr_number": 7954, "pr_title": "ISPN-11378 Split StateRequestCommand into individual commands", "pr_createdAt": "2020-02-26T10:19:07Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7954", "timeline": [{"oid": "ac430f13097c445f41e6cb55f40d2ab1f2fb03a6", "url": "https://github.com/infinispan/infinispan/commit/ac430f13097c445f41e6cb55f40d2ab1f2fb03a6", "message": "ISPN-11378 Move StateResponseCommand to org.infinispan.commands.statetransfer\n\nStateResponseCommand extends AbstractStateTransferCommand", "committedDate": "2020-02-26T10:43:17Z", "type": "forcePushed"}, {"oid": "e2fee8677bd2573f453c43927dd1683739a782a6", "url": "https://github.com/infinispan/infinispan/commit/e2fee8677bd2573f453c43927dd1683739a782a6", "message": "ISPN-11378 Move StateResponseCommand to org.infinispan.commands.statetransfer\n\nStateResponseCommand extends AbstractStateTransferCommand", "committedDate": "2020-02-26T15:26:29Z", "type": "forcePushed"}, {"oid": "9f16845d8d3365dbe347a98db9a16d1823ecaee3", "url": "https://github.com/infinispan/infinispan/commit/9f16845d8d3365dbe347a98db9a16d1823ecaee3", "message": "ISPN-11378 Move StateResponseCommand to org.infinispan.commands.statetransfer\n\nStateResponseCommand extends AbstractStateTransferCommand", "committedDate": "2020-02-26T15:38:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5NzMyOA==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386297328", "bodyText": "origin is always rpcManager.getAddress().\nIt is not necessary to set it in the constructor neither sending it through the wire.", "author": "pruivo", "createdAt": "2020-03-02T10:03:38Z", "path": "core/src/main/java/org/infinispan/commands/statetransfer/AbstractStateTransferCommand.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.infinispan.commands.statetransfer;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+\n+import org.infinispan.commands.TopologyAffectedCommand;\n+import org.infinispan.commands.remote.BaseRpcCommand;\n+import org.infinispan.commons.util.IntSet;\n+import org.infinispan.remoting.transport.Address;\n+import org.infinispan.util.ByteString;\n+\n+/**\n+ * Base class for commands related to state transfer.\n+ *\n+ * @author Ryan Emerson\n+ * @since 11.0\n+ */\n+abstract class AbstractStateTransferCommand extends BaseRpcCommand implements TopologyAffectedCommand {\n+\n+   private byte commandId;\n+   protected int topologyId;\n+   protected IntSet segments;\n+\n+   AbstractStateTransferCommand(byte commandId, ByteString cacheName) {\n+      super(cacheName);\n+      this.commandId = commandId;\n+   }\n+\n+   AbstractStateTransferCommand(byte commandId, ByteString cacheName, Address origin, int topologyId, IntSet segments) {\n+      this(commandId, cacheName);\n+      this.origin = origin;", "originalCommit": "9f16845d8d3365dbe347a98db9a16d1823ecaee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5ODI4Nw==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386298287", "bodyText": "what about using IntSetsExternalization.writeTo() and IntSetsExternalization.readFrom()?", "author": "pruivo", "createdAt": "2020-03-02T10:05:33Z", "path": "core/src/main/java/org/infinispan/commands/statetransfer/AbstractStateTransferCommand.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.infinispan.commands.statetransfer;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+\n+import org.infinispan.commands.TopologyAffectedCommand;\n+import org.infinispan.commands.remote.BaseRpcCommand;\n+import org.infinispan.commons.util.IntSet;\n+import org.infinispan.remoting.transport.Address;\n+import org.infinispan.util.ByteString;\n+\n+/**\n+ * Base class for commands related to state transfer.\n+ *\n+ * @author Ryan Emerson\n+ * @since 11.0\n+ */\n+abstract class AbstractStateTransferCommand extends BaseRpcCommand implements TopologyAffectedCommand {\n+\n+   private byte commandId;\n+   protected int topologyId;\n+   protected IntSet segments;\n+\n+   AbstractStateTransferCommand(byte commandId, ByteString cacheName) {\n+      super(cacheName);\n+      this.commandId = commandId;\n+   }\n+\n+   AbstractStateTransferCommand(byte commandId, ByteString cacheName, Address origin, int topologyId, IntSet segments) {\n+      this(commandId, cacheName);\n+      this.origin = origin;\n+      this.topologyId = topologyId;\n+      this.segments = segments;\n+   }\n+\n+   @Override\n+   public boolean isReturnValueExpected() {\n+      return true;\n+   }\n+\n+   @Override\n+   public boolean canBlock() {\n+      // All state request commands need to wait for the proper topology\n+      return true;\n+   }\n+\n+   @Override\n+   public int getTopologyId() {\n+      return topologyId;\n+   }\n+\n+   @Override\n+   public void setTopologyId(int topologyId) {\n+      this.topologyId = topologyId;\n+   }\n+\n+   public IntSet getSegments() {\n+      return segments;\n+   }\n+\n+   @Override\n+   public byte getCommandId() {\n+      return commandId;\n+   }\n+\n+   @Override\n+   public void writeTo(ObjectOutput output) throws IOException {\n+      output.writeObject(origin);\n+      output.writeObject(segments);", "originalCommit": "9f16845d8d3365dbe347a98db9a16d1823ecaee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMDcwNQ==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386300705", "bodyText": "[opinion]\nI'm not sure about this anymore :) we are allocating +4 bytes per instance just to avoid implementing byte getCommandId()", "author": "pruivo", "createdAt": "2020-03-02T10:10:00Z", "path": "core/src/main/java/org/infinispan/commands/statetransfer/AbstractStateTransferCommand.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.infinispan.commands.statetransfer;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+\n+import org.infinispan.commands.TopologyAffectedCommand;\n+import org.infinispan.commands.remote.BaseRpcCommand;\n+import org.infinispan.commons.util.IntSet;\n+import org.infinispan.remoting.transport.Address;\n+import org.infinispan.util.ByteString;\n+\n+/**\n+ * Base class for commands related to state transfer.\n+ *\n+ * @author Ryan Emerson\n+ * @since 11.0\n+ */\n+abstract class AbstractStateTransferCommand extends BaseRpcCommand implements TopologyAffectedCommand {\n+\n+   private byte commandId;", "originalCommit": "9f16845d8d3365dbe347a98db9a16d1823ecaee3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMyNzY4OA==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386327688", "bodyText": "Why +4? Is it not just  a single byte per instance?\nI'm against removing it though", "author": "ryanemerson", "createdAt": "2020-03-02T11:03:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMDcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMzMjEyMQ==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386332121", "bodyText": "1 byte + 3 bytes alignment.\norg.infinispan.commands.statetransfer.AbstractStateTransferCommand object internals:\n OFFSET  SIZE         TYPE DESCRIPTION                               VALUE\n      0    12              (object header)                           N/A\n     12     4   ByteString BaseRpcCommand.cacheName                  N/A\n     16     4      Address BaseRpcCommand.origin                     N/A\n     20     4          int AbstractStateTransferCommand.topologyId   N/A\n     24     1         byte AbstractStateTransferCommand.commandId    N/A\n     25     3              (alignment/padding gap)                  \n     28     4       IntSet AbstractStateTransferCommand.segments     N/A\nInstance size: 32 bytes\nSpace losses: 3 bytes internal + 0 bytes external = 3 bytes total", "author": "pruivo", "createdAt": "2020-03-02T11:13:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMDcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMzMzI4Nw==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386333287", "bodyText": "I'm against removing it though\n\nHonestly there was meant to be a not in there \ud83d\ude06\nOk, I'll remove \ud83d\udc4d", "author": "ryanemerson", "createdAt": "2020-03-02T11:15:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMDcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMzMzkzMA==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386333930", "bodyText": "actually, I may be wrong. I think the JVM has to align to 32 bytes anyway...", "author": "pruivo", "createdAt": "2020-03-02T11:17:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMDcwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMzQxNA==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386303414", "bodyText": "can be removed and use StateTransferCancelCommand\nI'm aware boolean isReturnValueExpected() is different but both commands are sent async (any response is discarded) and both commands return null.", "author": "pruivo", "createdAt": "2020-03-02T10:15:07Z", "path": "core/src/main/java/org/infinispan/commands/statetransfer/ConflictResolutionCancelCommand.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package org.infinispan.commands.statetransfer;\n+\n+import java.util.concurrent.CompletionStage;\n+\n+import org.infinispan.commons.util.IntSet;\n+import org.infinispan.factories.ComponentRegistry;\n+import org.infinispan.remoting.transport.Address;\n+import org.infinispan.statetransfer.StateProvider;\n+import org.infinispan.util.ByteString;\n+import org.infinispan.util.concurrent.CompletableFutures;\n+\n+/**\n+ * Cancel conflict resolution.\n+ *\n+ * @author Ryan Emerson\n+ * @since 11.0\n+ */\n+public class ConflictResolutionCancelCommand extends AbstractStateTransferCommand {", "originalCommit": "9f16845d8d3365dbe347a98db9a16d1823ecaee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwNTQ5Mg==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386305492", "bodyText": "extend AbstractStateTransferCommand?", "author": "pruivo", "createdAt": "2020-03-02T10:19:09Z", "path": "core/src/main/java/org/infinispan/commands/statetransfer/ScatteredStateConfirmRevokedCommand.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.infinispan.commands.statetransfer;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+import java.util.concurrent.CompletionStage;\n+\n+import org.infinispan.commands.TopologyAffectedCommand;\n+import org.infinispan.commands.remote.BaseRpcCommand;\n+import org.infinispan.commons.util.IntSet;\n+import org.infinispan.factories.ComponentRegistry;\n+import org.infinispan.scattered.BiasManager;\n+import org.infinispan.scattered.ScatteredStateProvider;\n+import org.infinispan.util.ByteString;\n+\n+/**\n+ * Invoke {@link ScatteredStateProvider#confirmRevokedSegments(int)}.\n+ *\n+ * @author Ryan Emerson\n+ * @since 11.0\n+ */\n+public class ScatteredStateConfirmRevokedCommand extends BaseRpcCommand implements TopologyAffectedCommand {", "originalCommit": "9f16845d8d3365dbe347a98db9a16d1823ecaee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxMTcyNg==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386311726", "bodyText": "why TopologyAffectedCommand? you can use CacheRpcCommand", "author": "pruivo", "createdAt": "2020-03-02T10:31:24Z", "path": "core/src/main/java/org/infinispan/statetransfer/StateConsumerImpl.java", "diffHunk": "@@ -973,9 +975,9 @@ private void processTransactionsResponse(IntSet segments, Map<Address, IntSet> s\n       }\n       if (trace)\n          log.tracef(\"Requesting cluster listeners of cache %s from node %s\", cacheName, sources);\n-      StateRequestCommand cmd =\n-            commandsFactory.buildStateRequestCommand(StateRequestCommand.Type.GET_CACHE_LISTENERS,\n-                                                     rpcManager.getAddress(), topologyId, null);\n+\n+      TopologyAffectedCommand cmd = commandsFactory.buildStateTransferGetListenersCommand(topologyId);", "originalCommit": "9f16845d8d3365dbe347a98db9a16d1823ecaee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "79aa14a9d629d1c7f46bdcad52374e3805a31eea", "url": "https://github.com/infinispan/infinispan/commit/79aa14a9d629d1c7f46bdcad52374e3805a31eea", "message": "ISPN-11378 Move StateResponseCommand to org.infinispan.commands.statetransfer\n\nStateResponseCommand extends AbstractStateTransferCommand", "committedDate": "2020-03-02T11:58:00Z", "type": "forcePushed"}, {"oid": "7fbc3ba16b44e97cb8623abba40ce93ac3953b6e", "url": "https://github.com/infinispan/infinispan/commit/7fbc3ba16b44e97cb8623abba40ce93ac3953b6e", "message": "ISPN-11378 Move StateResponseCommand to org.infinispan.commands.statetransfer\n\nStateResponseCommand extends AbstractStateTransferCommand", "committedDate": "2020-03-02T12:04:39Z", "type": "forcePushed"}, {"oid": "064ab83a06a59aa4acbd4c912d793404b84df5d1", "url": "https://github.com/infinispan/infinispan/commit/064ab83a06a59aa4acbd4c912d793404b84df5d1", "message": "ISPN-11378 Move StateResponseCommand to org.infinispan.commands.statetransfer\n\nStateResponseCommand no longer serializes origin", "committedDate": "2020-03-02T13:20:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU0NzY1OQ==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386547659", "bodyText": "can be removed.", "author": "pruivo", "createdAt": "2020-03-02T17:47:31Z", "path": "core/src/main/java/org/infinispan/statetransfer/InboundTransferTask.java", "diffHunk": "@@ -232,9 +234,8 @@ public boolean isCancelled() {\n    }\n \n    private void sendCancelCommand(IntSet cancelledSegments) {\n-      StateRequestCommand.Type requestType = applyState ? StateRequestCommand.Type.CANCEL_STATE_TRANSFER : StateRequestCommand.Type.CANCEL_CONSISTENCY_CHECK;\n-      StateRequestCommand cmd = commandsFactory.buildStateRequestCommand(requestType, rpcManager.getAddress(),\n-            topologyId, cancelledSegments);\n+      Address origin = rpcManager.getAddress();", "originalCommit": "064ab83a06a59aa4acbd4c912d793404b84df5d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU0OTA3NQ==", "url": "https://github.com/infinispan/infinispan/pull/7954#discussion_r386549075", "bodyText": "nitpick: can be final :)", "author": "pruivo", "createdAt": "2020-03-02T17:50:06Z", "path": "core/src/main/java/org/infinispan/commands/statetransfer/AbstractStateTransferCommand.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package org.infinispan.commands.statetransfer;\n+\n+import java.io.IOException;\n+import java.io.ObjectInput;\n+import java.io.ObjectOutput;\n+\n+import org.infinispan.commands.TopologyAffectedCommand;\n+import org.infinispan.commands.remote.BaseRpcCommand;\n+import org.infinispan.commons.util.IntSet;\n+import org.infinispan.commons.util.IntSetsExternalization;\n+import org.infinispan.util.ByteString;\n+\n+/**\n+ * Base class for commands related to state transfer.\n+ *\n+ * @author Ryan Emerson\n+ * @since 11.0\n+ */\n+abstract class AbstractStateTransferCommand extends BaseRpcCommand implements TopologyAffectedCommand {\n+\n+   private byte commandId;", "originalCommit": "064ab83a06a59aa4acbd4c912d793404b84df5d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "63c03f4de3c2d7daf6f085134b65c5a4aafd1813", "url": "https://github.com/infinispan/infinispan/commit/63c03f4de3c2d7daf6f085134b65c5a4aafd1813", "message": "ISPN-11378 Move StateResponseCommand to org.infinispan.commands.statetransfer\n\nStateResponseCommand no longer serializes origin", "committedDate": "2020-03-02T17:55:36Z", "type": "forcePushed"}, {"oid": "0b3ef7e8ec2c67e04002ff85614c4bb0e8b36d41", "url": "https://github.com/infinispan/infinispan/commit/0b3ef7e8ec2c67e04002ff85614c4bb0e8b36d41", "message": "ISPN-11378 Split StateRequestCommand into individual commands", "committedDate": "2020-03-04T17:59:12Z", "type": "commit"}, {"oid": "27ea735871ddbe1a8e18766421056963412b4929", "url": "https://github.com/infinispan/infinispan/commit/27ea735871ddbe1a8e18766421056963412b4929", "message": "ISPN-11378 Move StateResponseCommand to org.infinispan.commands.statetransfer\n\nStateResponseCommand no longer serializes origin", "committedDate": "2020-03-04T18:09:44Z", "type": "commit"}, {"oid": "27ea735871ddbe1a8e18766421056963412b4929", "url": "https://github.com/infinispan/infinispan/commit/27ea735871ddbe1a8e18766421056963412b4929", "message": "ISPN-11378 Move StateResponseCommand to org.infinispan.commands.statetransfer\n\nStateResponseCommand no longer serializes origin", "committedDate": "2020-03-04T18:09:44Z", "type": "forcePushed"}]}