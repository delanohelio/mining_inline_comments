{"pr_number": 7927, "pr_title": "ISPN-10842 store migrator docs", "pr_createdAt": "2020-02-19T20:46:40Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7927", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU3NjE1NQ==", "url": "https://github.com/infinispan/infinispan/pull/7927#discussion_r382576155", "bodyText": "Should we link to our rolling upgrade docs here?", "author": "ryanemerson", "createdAt": "2020-02-21T13:18:30Z", "path": "documentation/src/main/asciidoc/stories/assembly_migrating_cache_stores.adoc", "diffHunk": "@@ -1,8 +1,43 @@\n [id='cache_store_migration']\n :context: configure\n-= Migrating Cache Stores Between {brandname} Versions\n+= Migrating Data Between {brandname} Versions\n+Upgrading to the latest {brandname} version typically involves creating new\n+clusters with the target version running in parallel to the version from which\n+you are migrating. You can then create a shared persistent cache store between", "originalCommit": "f1f0412d35954abb870280d1bb61ac0308df6b38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzY1OA==", "url": "https://github.com/infinispan/infinispan/pull/7927#discussion_r382587658", "bodyText": "tbh I'd rather reuse the content as part of an upgrading guide. essentially we'd have the same content under Configuration > Persistence and Upgrading. I'll set this up and show you. explaining here might not be clear.", "author": "oraNod", "createdAt": "2020-02-21T13:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU3NjE1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU3NjQ5NQ==", "url": "https://github.com/infinispan/infinispan/pull/7927#discussion_r382576495", "bodyText": "It's 100% no possible between Major versions e.g. Infinispan 8 -> 9 -> 10.", "author": "ryanemerson", "createdAt": "2020-02-21T13:19:18Z", "path": "documentation/src/main/asciidoc/stories/assembly_migrating_cache_stores.adoc", "diffHunk": "@@ -1,8 +1,43 @@\n [id='cache_store_migration']\n :context: configure\n-= Migrating Cache Stores Between {brandname} Versions\n+= Migrating Data Between {brandname} Versions\n+Upgrading to the latest {brandname} version typically involves creating new\n+clusters with the target version running in parallel to the version from which\n+you are migrating. You can then create a shared persistent cache store between\n+the two clusters and switch client connections to the target.\n \n-include::{topics}/persistence_storemigrator.adoc[leveloffset=+1]\n+However, functional differences between {brandname} versions mean that backwards\n+compatibility is not always possible.", "originalCommit": "f1f0412d35954abb870280d1bb61ac0308df6b38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU3Njc5Mg==", "url": "https://github.com/infinispan/infinispan/pull/7927#discussion_r382576792", "bodyText": "incompatibilities", "author": "ryanemerson", "createdAt": "2020-02-21T13:20:00Z", "path": "documentation/src/main/asciidoc/stories/assembly_migrating_cache_stores.adoc", "diffHunk": "@@ -1,8 +1,43 @@\n [id='cache_store_migration']\n :context: configure\n-= Migrating Cache Stores Between {brandname} Versions\n+= Migrating Data Between {brandname} Versions\n+Upgrading to the latest {brandname} version typically involves creating new\n+clusters with the target version running in parallel to the version from which\n+you are migrating. You can then create a shared persistent cache store between\n+the two clusters and switch client connections to the target.\n \n-include::{topics}/persistence_storemigrator.adoc[leveloffset=+1]\n+However, functional differences between {brandname} versions mean that backwards\n+compatibility is not always possible.\n+\n+For example, {brandname}\n+ifndef::productized[]\n+10.1\n+endif::productized[]\n+ifdef::productized[]\n+8.0\n+endif::productized[]\n+changes the default marshaller to Protostream. In previous {brandname}\n+versions, cache stores use a binary format that is not compatible with the\n+changes to marshalling. This means that {brandname}\n+ifndef::productized[]\n+10.1\n+endif::productized[]\n+ifdef::productized[]\n+8.0\n+endif::productized[]\n+cannot read from cache stores with previous {brandname} versions.\n+\n+In other cases {brandname} versions deprecate or remove cache store\n+implementations, such as JDBC Mixed and Binary stores.\n+\n+To overcome incompatibility with cache stores, {brandname} provides a utility", "originalCommit": "f1f0412d35954abb870280d1bb61ac0308df6b38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4MTM2NQ==", "url": "https://github.com/infinispan/infinispan/pull/7927#discussion_r382581365", "bodyText": "\"from a previous version's cache store and recreates it using the latest {brandname} implementation\" ?", "author": "ryanemerson", "createdAt": "2020-02-21T13:30:47Z", "path": "documentation/src/main/asciidoc/topics/con_store_migrator.adoc", "diffHunk": "@@ -0,0 +1,14 @@\n+[id='store_migrator']\n+= Cache Store Migrator\n+{brandname} provides the `StoreMigrator.java` utility that reads data from\n+cache stores from previous versions and rewrites it for compatibility with the\n+latest {brandname} version.", "originalCommit": "f1f0412d35954abb870280d1bb61ac0308df6b38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0dd24230bccf1d4d359cf74199c30cc39bec8170", "url": "https://github.com/infinispan/infinispan/commit/0dd24230bccf1d4d359cf74199c30cc39bec8170", "message": "edits, adding upgrade assembly, rocksdb properties", "committedDate": "2020-02-21T14:21:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwOTY3Ng==", "url": "https://github.com/infinispan/infinispan/pull/7927#discussion_r382609676", "bodyText": "The protostream conversion actually happened in 10.0", "author": "ryanemerson", "createdAt": "2020-02-21T14:28:02Z", "path": "documentation/src/main/asciidoc/stories/assembly_migrating_data.adoc", "diffHunk": "@@ -0,0 +1,44 @@\n+[id='data_migration']\n+:context: upgrade\n+= Migrating Data Between {brandname} Versions\n+Upgrading to the latest {brandname} version typically involves creating new\n+clusters with the target version running in parallel to the version from which\n+you are migrating. You can then create a shared persistent cache store between\n+the two clusters and switch client connections to the target.\n+\n+However, functional differences between major {brandname} versions mean that\n+backwards compatibility is not possible.\n+\n+For example, {brandname}\n+ifndef::productized[]\n+10.1", "originalCommit": "0dd24230bccf1d4d359cf74199c30cc39bec8170", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3267349630edc719f8c5acbbc9fa7313560f3a6e", "url": "https://github.com/infinispan/infinispan/commit/3267349630edc719f8c5acbbc9fa7313560f3a6e", "message": "protostream was 10.0 not 10.1", "committedDate": "2020-02-21T14:36:31Z", "type": "forcePushed"}, {"oid": "1efc3488458aa991e4beec7f7c3ddf9a233835ef", "url": "https://github.com/infinispan/infinispan/commit/1efc3488458aa991e4beec7f7c3ddf9a233835ef", "message": "ISPN-10842 store migrator docs", "committedDate": "2020-02-24T10:26:29Z", "type": "commit"}, {"oid": "1efc3488458aa991e4beec7f7c3ddf9a233835ef", "url": "https://github.com/infinispan/infinispan/commit/1efc3488458aa991e4beec7f7c3ddf9a233835ef", "message": "ISPN-10842 store migrator docs", "committedDate": "2020-02-24T10:26:29Z", "type": "forcePushed"}]}