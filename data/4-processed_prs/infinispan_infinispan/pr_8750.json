{"pr_number": 8750, "pr_title": "ISPN-12383 improve marshalling docs", "pr_createdAt": "2020-10-06T14:35:38Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8750", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3MjA2NQ==", "url": "https://github.com/infinispan/infinispan/pull/8750#discussion_r500872065", "bodyText": "This isn't required for protostream, so this should just be linked from the docs of Marshallers that require it, e.g. JavaSerializationMarshaller or JbossUserMarshaller.", "author": "ryanemerson", "createdAt": "2020-10-07T09:33:12Z", "path": "documentation/src/main/asciidoc/stories/assembly_marshalling_user_types.adoc", "diffHunk": "@@ -0,0 +1,16 @@\n+[id='marshalling_user_types']\n+:context: marshalling\n+= Marshalling User Types with ProtoStream\n+User types are Java objects that {brandname} does not support out of the box.\n+To marshall user types, you implement the `SerializationContextInitializer`\n+interface to describe your Java objects so that the ProtoStream library can\n+encode them to Protobuf format and {brandname} can transmit and store them.\n+\n+include::{topics}/proc_generating_protostream_sci.adoc[leveloffset=+1]\n+include::{topics}/proc_manually_registering_sci.adoc[leveloffset=+2]\n+include::{topics}/proc_implementing_protostream_sci.adoc[leveloffset=+1]\n+include::{topics}/proc_adding_deserialization_allowlist.adoc[leveloffset=+1]", "originalCommit": "a69b3121b60a78704b5a198a555fb076207a01e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDIyMg==", "url": "https://github.com/infinispan/infinispan/pull/8750#discussion_r500890222", "bodyText": "ah... OK. I thought it was required for all cases where user objects were used. will fix.", "author": "oraNod", "createdAt": "2020-10-07T10:02:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3MjA2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NDY3OA==", "url": "https://github.com/infinispan/infinispan/pull/8750#discussion_r500874678", "bodyText": "When manually creating a SCI it's necessary to register it with the configuration as described in Manually Registering Serialization Context Initializers. This is a usability issue until Adrian's new API is available, as it means that if users have to create a single manual SCI for external types, then they also have to register all generated SCIs manually.", "author": "ryanemerson", "createdAt": "2020-10-07T09:37:23Z", "path": "documentation/src/main/asciidoc/topics/proc_implementing_protostream_sci.adoc", "diffHunk": "@@ -0,0 +1,56 @@\n+[id='implementing_proto_marshallers']\n+= Manually Implementing Serialization Context Initializers\n+In some cases you might need to manually define Protobuf schemas and implement\n+ProtoStream marshallers. For example, if you cannot modify Java object classes\n+to add annotations.\n+\n+[NOTE]\n+====\n+This method for manually implementing the `SerializationContextInitializer`\n+interface is deprecated.\n+//Adrian to provide details on API change as an alternative. Users can provide annotations in different context to create bridge classes.\n+====\n+\n+.Procedure\n+\n+. Create a Protobuf schema, `.proto` file, that provides a structured\n+representations of the Java objects to marshall.\n++\n+[source,proto]\n+----\n+include::config_examples/library.proto[]\n+----\n++\n+The preceding `.library.proto` file defines an entity (Protobuf message type)\n+named _Book_ that is contained in the _book_sample_ package. _Book_ declares\n+several fields of primitive types and an array (Protobuf repeatable field)\n+named _authors_, which is the _Author_ message type.\n++\n+* You can nest messages but the resulting structure is strictly a tree, never a graph.\n+* Type inheritance is not possible.\n+* Collections are not supported but you can emulate arrays with repeated fields.\n++\n+. Use the `org.infinispan.protostream.MessageMarshaller` interface to implement\n+marshallers for your classes.\n++\n+[source,java]\n+.BookMarshaller.java\n+----\n+include::code_examples/BookMarshaller.java[]\n+----\n++\n+[source,java]\n+.AuthorMarshaller.java\n+----\n+include::code_examples/AuthorMarshaller.java[]\n+----\n++\n+. Create a `SerializationContextInitializer` implementation that registers the\n+`.proto` schema and the ProtoStream marshaller implementations with a\n+`SerializationContext`.\n++\n+[source,java]\n+.ManualSerializationContextInitializer.java\n+----\n+include::code_examples/ManualSerializationContextInitializer.java[]\n+----", "originalCommit": "a69b3121b60a78704b5a198a555fb076207a01e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk0NDY5Mg==", "url": "https://github.com/infinispan/infinispan/pull/8750#discussion_r500944692", "bodyText": "thanks! fixed.", "author": "oraNod", "createdAt": "2020-10-07T11:43:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NDY3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NTk4OQ==", "url": "https://github.com/infinispan/infinispan/pull/8750#discussion_r500875989", "bodyText": "Is this story included anywhere?", "author": "ryanemerson", "createdAt": "2020-10-07T09:39:32Z", "path": "documentation/src/main/asciidoc/stories/assembly_marshaller_implementations.adoc", "diffHunk": "@@ -0,0 +1,17 @@\n+[id='marshaller_implementations']", "originalCommit": "a69b3121b60a78704b5a198a555fb076207a01e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDk3Mw==", "url": "https://github.com/infinispan/infinispan/pull/8750#discussion_r500890973", "bodyText": "yep. it's nested under the main assembly_marshalling.adoc story.", "author": "oraNod", "createdAt": "2020-10-07T10:03:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NTk4OQ=="}], "type": "inlineReview"}, {"oid": "5b77f5440744a62d67a5e83199ee5966715a16c0", "url": "https://github.com/infinispan/infinispan/commit/5b77f5440744a62d67a5e83199ee5966715a16c0", "message": "ISPN-12383 improve marshalling docs", "committedDate": "2020-10-07T11:42:34Z", "type": "forcePushed"}, {"oid": "4c4dced2d0fd5b352351544c4d19d07ec869d519", "url": "https://github.com/infinispan/infinispan/commit/4c4dced2d0fd5b352351544c4d19d07ec869d519", "message": "ISPN-12383 improve marshalling docs", "committedDate": "2020-10-08T13:33:13Z", "type": "commit"}, {"oid": "4c4dced2d0fd5b352351544c4d19d07ec869d519", "url": "https://github.com/infinispan/infinispan/commit/4c4dced2d0fd5b352351544c4d19d07ec869d519", "message": "ISPN-12383 improve marshalling docs", "committedDate": "2020-10-08T13:33:13Z", "type": "forcePushed"}, {"oid": "86a4268f1ed2240aa8b4de724e2c282b5ae69166", "url": "https://github.com/infinispan/infinispan/commit/86a4268f1ed2240aa8b4de724e2c282b5ae69166", "message": "Merge branch 'master' into ISPN-12383_marshalling", "committedDate": "2020-10-19T19:38:06Z", "type": "commit"}]}