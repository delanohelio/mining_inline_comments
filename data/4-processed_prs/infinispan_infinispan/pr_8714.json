{"pr_number": 8714, "pr_title": "ISPN-12353 REST allow backup restore progress to be submitted and polled", "pr_createdAt": "2020-09-24T14:08:33Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8714", "timeline": [{"oid": "59d1ed5a5ca1043261d387936632561ffdb969b7", "url": "https://github.com/infinispan/infinispan/commit/59d1ed5a5ca1043261d387936632561ffdb969b7", "message": "ISPN-12353 REST allow backup restore progress to be submitted and polled", "committedDate": "2020-09-24T14:13:07Z", "type": "forcePushed"}, {"oid": "9e7475c150dfd141600dbbce60f1c791b34a7e96", "url": "https://github.com/infinispan/infinispan/commit/9e7475c150dfd141600dbbce60f1c791b34a7e96", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-02T12:17:47Z", "type": "forcePushed"}, {"oid": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "url": "https://github.com/infinispan/infinispan/commit/ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-02T12:45:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3OTY1Mg==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499479652", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  @Option(shortName = 'n', description = \"The name of the restore request\")\n          \n          \n            \n                  @Option(shortName = 'n', description = \"Defines a name for the restore request.\")", "author": "oraNod", "createdAt": "2020-10-05T09:55:54Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Backup.java", "diffHunk": "@@ -149,6 +149,9 @@ protected void additionalArgs(CommandInputLine cmd) {\n       @Argument(description = \"The path of the backup file \", completer = FileOptionCompleter.class, required = true)\n       Resource path;\n \n+      @Option(shortName = 'n', description = \"The name of the restore request\")", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4MTU2OQ==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499481569", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Remove restore requests from the server. This does not remove any restored content, it\n          \n          \n            \n            Remove restore requests from the server. This action does not remove any restored content, it", "author": "oraNod", "createdAt": "2020-10-05T09:59:09Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_cache_managers.adoc", "diffHunk": "@@ -369,3 +371,39 @@ Content-Length: 7353\n <zip-bytes>\n --5ec9bc07-f069-4662-a535-46069afeda32--\n ----\n+\n+[id='rest_v2_restore_manager_list']\n+= Listing Restores\n+Retrieve the names of all restore requests that are in progress, completed, or\n+failed.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/cache-managers/{cacheManagerName}/restores\n+----\n+\n+[id='rest_v2_restore_manager_head']\n+= Checking Restore Progress\n+Verify that a restore operation is complete. A `200` response indicates the\n+restore operation has completed. A `202` response indicates the backup operation is\n+in progress.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+HEAD /rest/v2/cache-managers/{cacheManagerName}/restores/{restoreName}\n+----\n+\n+[id='rest_v2_restore_manager_delete']\n+= Deleting Restore Requests\n+Remove restore requests from the server. This does not remove any restored content, it", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4MzA2MQ==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499483061", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            simply removes all meta information associated with a given request, therefore allowing\n          \n          \n            \n            removes all metadata for the restore request only. You can then use the", "author": "oraNod", "createdAt": "2020-10-05T10:01:29Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_cache_managers.adoc", "diffHunk": "@@ -369,3 +371,39 @@ Content-Length: 7353\n <zip-bytes>\n --5ec9bc07-f069-4662-a535-46069afeda32--\n ----\n+\n+[id='rest_v2_restore_manager_list']\n+= Listing Restores\n+Retrieve the names of all restore requests that are in progress, completed, or\n+failed.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/cache-managers/{cacheManagerName}/restores\n+----\n+\n+[id='rest_v2_restore_manager_head']\n+= Checking Restore Progress\n+Verify that a restore operation is complete. A `200` response indicates the\n+restore operation has completed. A `202` response indicates the backup operation is\n+in progress.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+HEAD /rest/v2/cache-managers/{cacheManagerName}/restores/{restoreName}\n+----\n+\n+[id='rest_v2_restore_manager_delete']\n+= Deleting Restore Requests\n+Remove restore requests from the server. This does not remove any restored content, it\n+simply removes all meta information associated with a given request, therefore allowing", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4MzU5OQ==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499483599", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            subsequent restore requests to re-use a past request name.\n          \n          \n            \n            name of the request to perform subsequent restore operations.", "author": "oraNod", "createdAt": "2020-10-05T10:02:21Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_cache_managers.adoc", "diffHunk": "@@ -369,3 +371,39 @@ Content-Length: 7353\n <zip-bytes>\n --5ec9bc07-f069-4662-a535-46069afeda32--\n ----\n+\n+[id='rest_v2_restore_manager_list']\n+= Listing Restores\n+Retrieve the names of all restore requests that are in progress, completed, or\n+failed.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/cache-managers/{cacheManagerName}/restores\n+----\n+\n+[id='rest_v2_restore_manager_head']\n+= Checking Restore Progress\n+Verify that a restore operation is complete. A `200` response indicates the\n+restore operation has completed. A `202` response indicates the backup operation is\n+in progress.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+HEAD /rest/v2/cache-managers/{cacheManagerName}/restores/{restoreName}\n+----\n+\n+[id='rest_v2_restore_manager_delete']\n+= Deleting Restore Requests\n+Remove restore requests from the server. This does not remove any restored content, it\n+simply removes all meta information associated with a given request, therefore allowing\n+subsequent restore requests to re-use a past request name.", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4Mzk2OA==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499483968", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            response indicates that the restore request has been accepted for processing.\n          \n          \n            \n            response indicates that the restore request is accepted for processing.", "author": "oraNod", "createdAt": "2020-10-05T10:02:55Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_clusters.adoc", "diffHunk": "@@ -93,7 +93,8 @@ DELETE /rest/v2/cluster/backups/{backupName}\n \n [id='rest_v2_restore_cluster']\n = Restoring {brandname} Cluster Resources\n-Apply resources in a backup archive to restore {brandname} clusters.\n+Apply resources in a backup archive to restore {brandname} clusters. A `202`\n+response indicates that the restore request has been accepted for processing.", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4NDM0MQ==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499484341", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            indicates that the restore operation is in progress but will be deleted when the operation\n          \n          \n            \n            indicates that the restore operation is in progress and will be deleted when the operation", "author": "oraNod", "createdAt": "2020-10-05T10:03:35Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_cache_managers.adoc", "diffHunk": "@@ -369,3 +371,39 @@ Content-Length: 7353\n <zip-bytes>\n --5ec9bc07-f069-4662-a535-46069afeda32--\n ----\n+\n+[id='rest_v2_restore_manager_list']\n+= Listing Restores\n+Retrieve the names of all restore requests that are in progress, completed, or\n+failed.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/cache-managers/{cacheManagerName}/restores\n+----\n+\n+[id='rest_v2_restore_manager_head']\n+= Checking Restore Progress\n+Verify that a restore operation is complete. A `200` response indicates the\n+restore operation has completed. A `202` response indicates the backup operation is\n+in progress.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+HEAD /rest/v2/cache-managers/{cacheManagerName}/restores/{restoreName}\n+----\n+\n+[id='rest_v2_restore_manager_delete']\n+= Deleting Restore Requests\n+Remove restore requests from the server. This does not remove any restored content, it\n+simply removes all meta information associated with a given request, therefore allowing\n+subsequent restore requests to re-use a past request name.\n+\n+A `204` response indicates that the  restore request has been deleted. A `202` response\n+indicates that the restore operation is in progress but will be deleted when the operation", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4NDU2Nw==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499484567", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            restore operation has completed. A `202` response indicates the backup operation is\n          \n          \n            \n            restore operation is complete. A `202` response indicates the backup operation is", "author": "oraNod", "createdAt": "2020-10-05T10:04:00Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_clusters.adoc", "diffHunk": "@@ -161,3 +162,39 @@ Content-Length: 7353\n <zip-bytes>\n --5ec9bc07-f069-4662-a535-46069afeda32--\n ----\n+\n+[id='rest_v2_restore_cluster_list']\n+= Listing Restores\n+Retrieve the names of all restore requests that are in progress, completed, or\n+failed.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/cluster/restores\n+----\n+\n+[id='rest_v2_restore_cluster_head']\n+= Checking Restore Progress\n+Verify that a restore operation is complete. A `200` response indicates the\n+restore operation has completed. A `202` response indicates the backup operation is", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4NDk5NQ==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499484995", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            indicates that the restore operation is in progress but will be deleted when the operation\n          \n          \n            \n            indicates that the restore operation is in progress and will be deleted when the operation", "author": "oraNod", "createdAt": "2020-10-05T10:04:47Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_clusters.adoc", "diffHunk": "@@ -161,3 +162,39 @@ Content-Length: 7353\n <zip-bytes>\n --5ec9bc07-f069-4662-a535-46069afeda32--\n ----\n+\n+[id='rest_v2_restore_cluster_list']\n+= Listing Restores\n+Retrieve the names of all restore requests that are in progress, completed, or\n+failed.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/cluster/restores\n+----\n+\n+[id='rest_v2_restore_cluster_head']\n+= Checking Restore Progress\n+Verify that a restore operation is complete. A `200` response indicates the\n+restore operation has completed. A `202` response indicates the backup operation is\n+in progress.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+HEAD /rest/v2/cluster/restores/{restoreName}\n+----\n+\n+[id='rest_v2_restore_cluster_delete']\n+= Deleting Restore Requests\n+Remove restore requests from the server. This does not remove any restored content, it\n+simply removes all meta information associated with a given request, therefore allowing\n+subsequent restore requests to re-use a past request name.\n+\n+A `204` response indicates that the  restore request has been deleted. A `202` response\n+indicates that the restore operation is in progress but will be deleted when the operation", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4Njg3Ng==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499486876", "bodyText": "Same as the previous comment. Maybe we should change the heading as well?\n= Deleting Request Metadata\nRemove metadata for restore requests from the server. This action removes all metadata associated with restore requests but does not delete any restored content. If you delete the request metadata, you can use the request name to perform subsequent restore operations.", "author": "oraNod", "createdAt": "2020-10-05T10:08:09Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_clusters.adoc", "diffHunk": "@@ -161,3 +162,39 @@ Content-Length: 7353\n <zip-bytes>\n --5ec9bc07-f069-4662-a535-46069afeda32--\n ----\n+\n+[id='rest_v2_restore_cluster_list']\n+= Listing Restores\n+Retrieve the names of all restore requests that are in progress, completed, or\n+failed.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/cluster/restores\n+----\n+\n+[id='rest_v2_restore_cluster_head']\n+= Checking Restore Progress\n+Verify that a restore operation is complete. A `200` response indicates the\n+restore operation has completed. A `202` response indicates the backup operation is\n+in progress.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+HEAD /rest/v2/cluster/restores/{restoreName}\n+----\n+\n+[id='rest_v2_restore_cluster_delete']\n+= Deleting Restore Requests\n+Remove restore requests from the server. This does not remove any restored content, it\n+simply removes all meta information associated with a given request, therefore allowing\n+subsequent restore requests to re-use a past request name.", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MDU0NA==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r500170544", "bodyText": "I like it, I have used your suggestion but with the title changed to \"Deleting Restore Metadata\"", "author": "ryanemerson", "createdAt": "2020-10-06T10:31:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4Njg3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3MzE2NQ==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499473165", "bodyText": "This is not strictly related to this PR, but for all the backup/restore REST API we've worked on so far.\nThose two maps (and lock) are all local; the REST API can be called through a load balancer that will cause some calls to hit different instances at runtime and thus cause results to be inconsistent. The calls affectd are those that are async and you can track later, such as starting a backup to the file system and check the stats, same as the restore.", "author": "gustavonalle", "createdAt": "2020-10-05T09:45:05Z", "path": "server/core/src/main/java/org/infinispan/server/core/backup/BackupManagerImpl.java", "diffHunk": "@@ -45,6 +45,7 @@\n    final Lock restoreLock;\n    final Map<String, DefaultCacheManager> cacheManagers;\n    final Map<String, BackupRequest> backupMap;\n+   final Map<String, CompletionStage<Void>> restoreMap;", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUzNjk5MA==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499536990", "bodyText": "Currently a ClusteredLock is used if a transport is configured to ensure that only a single backup or restore can occur at anyone time.\nThe maps are local because the resources that they create/read are also local to the server. For the operator, loadbalancing is not an issue, as the the backup/restore operation is always executed on a single kubernetes pod and the controller interacts with this pod directly.\nI agree that we can improve this situation though. We could utilise an internal cache to track the progress of a backup/restore state, including the node it's executing on. This would allow us to handle status requests from all Infinispan nodes, as well as allowing a 3xx response to be sent when an attempt is made to retrieve a backup on a node that does not contain the files.", "author": "ryanemerson", "createdAt": "2020-10-05T11:44:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3MzE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU0ODY5NQ==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499548695", "bodyText": "a 3xx response to be sent when an attempt is made to retrieve a backup on a node that does not contain the files.\n\nThe redirection has issues by itself. IMO, the REST APIs should be consistent if part of the cluster resource, otherwise we run into various issues such as CORS (console can't call an internal server unless explicitly allowing in config), network (can't reach an internal load balanced server directly) and consistency (same URL returns 2xx or 3xx when using load balancer).\nOne way to solve it is to have every REST server accept the request and forward it to the internal node if the request can only be satisfied by a local node, but I think all these matters should be handled in a separate JIRA since it would make this PR a lot bigger", "author": "gustavonalle", "createdAt": "2020-10-05T12:06:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3MzE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0Mzg5NQ==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499743895", "bodyText": "Will you create a JIRA @ryanemerson or should I?", "author": "gustavonalle", "createdAt": "2020-10-05T17:01:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3MzE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA4NDIxOQ==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r500084219", "bodyText": "I've created ISPN-12393", "author": "ryanemerson", "createdAt": "2020-10-06T08:08:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3MzE2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4NzYxNg==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499487616", "bodyText": "It's not totally clear what {restoreName} is about (not only here, but throughout the doc), could you elaborate it is an arbitrary name set by user for tracking purposes?", "author": "gustavonalle", "createdAt": "2020-10-05T10:09:31Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_clusters.adoc", "diffHunk": "@@ -161,3 +162,39 @@ Content-Length: 7353\n <zip-bytes>\n --5ec9bc07-f069-4662-a535-46069afeda32--\n ----\n+\n+[id='rest_v2_restore_cluster_list']\n+= Listing Restores\n+Retrieve the names of all restore requests that are in progress, completed, or\n+failed.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/cluster/restores\n+----\n+\n+[id='rest_v2_restore_cluster_head']\n+= Checking Restore Progress\n+Verify that a restore operation is complete. A `200` response indicates the\n+restore operation has completed. A `202` response indicates the backup operation is\n+in progress.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+HEAD /rest/v2/cluster/restores/{restoreName}", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUzMDY5Mg==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499530692", "bodyText": "Purely for tracking purposes at the minute. I'll update the docs to clarify this.", "author": "ryanemerson", "createdAt": "2020-10-05T11:32:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4NzYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5MDc4MA==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r499490780", "bodyText": "I noticed that the REST resources related to backup/restore don't always include the output format for the calls. Could you add a description or example of each one? This helps the user a lot to understand everything that can be returned from a call instead of trying out and risking missing some of the fields that a response may eventually contain.", "author": "gustavonalle", "createdAt": "2020-10-05T10:15:25Z", "path": "documentation/src/main/asciidoc/topics/ref_rest_clusters.adoc", "diffHunk": "@@ -161,3 +162,39 @@ Content-Length: 7353\n <zip-bytes>\n --5ec9bc07-f069-4662-a535-46069afeda32--\n ----\n+\n+[id='rest_v2_restore_cluster_list']\n+= Listing Restores\n+Retrieve the names of all restore requests that are in progress, completed, or\n+failed.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/cluster/restores\n+----", "originalCommit": "ce09c9a4fe4123edd985c0ebb9d9b0d457023294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2Mjk1NA==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r500162954", "bodyText": "Actually, looking at this more, the only endpoints that actually return a value are /backups and /restores which are simply the names available, as well as the GET for /backups/{backupName} but that simply returns a application/zip payload which is documented. So I'm not sure there is anything to add?", "author": "ryanemerson", "createdAt": "2020-10-06T10:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5MDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2NDg1MA==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r500164850", "bodyText": "so only pasting an example output or describing the format (I assume it's a JSON array?) is enough", "author": "gustavonalle", "createdAt": "2020-10-06T10:20:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5MDc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4MjUyNw==", "url": "https://github.com/infinispan/infinispan/pull/8714#discussion_r500182527", "bodyText": "Sure, added. FYI this is missing in a lot of the REST examples from what I could see.", "author": "ryanemerson", "createdAt": "2020-10-06T10:53:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5MDc4MA=="}], "type": "inlineReview"}, {"oid": "ec29fa6fb38df1624d230d03962c35671cc1c9c5", "url": "https://github.com/infinispan/infinispan/commit/ec29fa6fb38df1624d230d03962c35671cc1c9c5", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-06T10:36:12Z", "type": "forcePushed"}, {"oid": "4b2c189c344a22303e16359c01e9676f957220e0", "url": "https://github.com/infinispan/infinispan/commit/4b2c189c344a22303e16359c01e9676f957220e0", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-06T10:52:48Z", "type": "forcePushed"}, {"oid": "470482c69ea41bda8079c595f273f2feb39f6ff5", "url": "https://github.com/infinispan/infinispan/commit/470482c69ea41bda8079c595f273f2feb39f6ff5", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-06T15:06:15Z", "type": "forcePushed"}, {"oid": "3a7ef4ec6f655bc2ae4f64906e53393a843fddbe", "url": "https://github.com/infinispan/infinispan/commit/3a7ef4ec6f655bc2ae4f64906e53393a843fddbe", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-07T09:17:04Z", "type": "forcePushed"}, {"oid": "397d1d8b4cfeccc7f49a0f938955af2688cf91f3", "url": "https://github.com/infinispan/infinispan/commit/397d1d8b4cfeccc7f49a0f938955af2688cf91f3", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-07T09:51:09Z", "type": "forcePushed"}, {"oid": "061202ea1212e817499af87b6ad34f7705336e24", "url": "https://github.com/infinispan/infinispan/commit/061202ea1212e817499af87b6ad34f7705336e24", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-07T12:37:00Z", "type": "forcePushed"}, {"oid": "2642b290887c6cc514e13c98200f7fdd203253aa", "url": "https://github.com/infinispan/infinispan/commit/2642b290887c6cc514e13c98200f7fdd203253aa", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-08T16:28:47Z", "type": "forcePushed"}, {"oid": "7c068687c816db41611d1a9d3d9d398d6479ce73", "url": "https://github.com/infinispan/infinispan/commit/7c068687c816db41611d1a9d3d9d398d6479ce73", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-09T12:57:41Z", "type": "forcePushed"}, {"oid": "2bc227d9ba09522383f6b42eb9c06ca347e6fc2a", "url": "https://github.com/infinispan/infinispan/commit/2bc227d9ba09522383f6b42eb9c06ca347e6fc2a", "message": "ISPN-12394 Allow templates to be defined clusterwide and persisted", "committedDate": "2020-10-13T13:56:03Z", "type": "commit"}, {"oid": "155b1ff04ca5322b446cf00c6af8825628d6717a", "url": "https://github.com/infinispan/infinispan/commit/155b1ff04ca5322b446cf00c6af8825628d6717a", "message": "ISPN-12411 org.infinispan.CONFIG should ignore zero-capacity-node=true", "committedDate": "2020-10-13T13:56:03Z", "type": "commit"}, {"oid": "c1c2f0d522cbc6d90b5aa00943229fd4c80f4401", "url": "https://github.com/infinispan/infinispan/commit/c1c2f0d522cbc6d90b5aa00943229fd4c80f4401", "message": "ISPN-12353 REST allow backup restore progress to be submitted and polled", "committedDate": "2020-10-13T13:59:01Z", "type": "commit"}, {"oid": "bc49e47f9bb5b38e73d33133b3e70b7c60856e5d", "url": "https://github.com/infinispan/infinispan/commit/bc49e47f9bb5b38e73d33133b3e70b7c60856e5d", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-13T13:59:01Z", "type": "commit"}, {"oid": "bc49e47f9bb5b38e73d33133b3e70b7c60856e5d", "url": "https://github.com/infinispan/infinispan/commit/bc49e47f9bb5b38e73d33133b3e70b7c60856e5d", "message": "ISPN-12381 Cache restore operations not executed across the cluster\n\nInternalMetadataImpl.Externalizer reinstated until ISPN-9622 is in place.", "committedDate": "2020-10-13T13:59:01Z", "type": "forcePushed"}]}