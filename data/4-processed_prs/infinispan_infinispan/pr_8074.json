{"pr_number": 8074, "pr_title": "ISPN-10608 embedded docs", "pr_createdAt": "2020-03-23T10:50:23Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8074", "timeline": [{"oid": "e7460787d2c79909751b0f9f828e8f2602c8a164", "url": "https://github.com/infinispan/infinispan/commit/e7460787d2c79909751b0f9f828e8f2602c8a164", "message": "ISPN-10608 embedded docs", "committedDate": "2020-03-24T12:50:42Z", "type": "forcePushed"}, {"oid": "40ef1c430e902e90469df7e3ff82be55cdf23d52", "url": "https://github.com/infinispan/infinispan/commit/40ef1c430e902e90469df7e3ff82be55cdf23d52", "message": "ISPN-10608 embedded docs", "committedDate": "2020-03-25T14:58:54Z", "type": "forcePushed"}, {"oid": "5a180845bfa2c0d0489a10f38bbe0f0564b7fbde", "url": "https://github.com/infinispan/infinispan/commit/5a180845bfa2c0d0489a10f38bbe0f0564b7fbde", "message": "ISPN-10608 embedded docs", "committedDate": "2020-03-26T09:28:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzMzgxOA==", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398433818", "bodyText": "Incorrect: the above code creates a clustered cache manager.", "author": "tristantarrant", "createdAt": "2020-03-26T09:38:59Z", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, local Cache Manager. Cache Managers", "originalCommit": "5a180845bfa2c0d0489a10f38bbe0f0564b7fbde", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NDQ0NQ==", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398444445", "bodyText": "argh. sorry that should be totally obvious. I guess I got hold of a bad batch of TP moonshine. fixed.", "author": "oraNod", "createdAt": "2020-03-26T09:55:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzMzgxOA=="}], "type": "inlineReview"}, {"oid": "ea1be0743de996199b0701e0193d0fd18657b286", "url": "https://github.com/infinispan/infinispan/commit/ea1be0743de996199b0701e0193d0fd18657b286", "message": "ISPN-10608 embedded docs", "committedDate": "2020-03-26T09:54:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0ODQ0OQ==", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398448449", "bodyText": "you don't have to use the bom, but if you do, you need to import it:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                   <dependency>\n          \n          \n            \n                       <groupId>org.infinispan</groupId>\n          \n          \n            \n                       <artifactId>infinispan-bom</artifactId>\n          \n          \n            \n                       <version>${version.infinispan}</version>\n          \n          \n            \n                   </dependency>\n          \n          \n            \n                   <dependency>\n          \n          \n            \n                       <groupId>org.infinispan</groupId>\n          \n          \n            \n                       <artifactId>infinispan-bom</artifactId>\n          \n          \n            \n                       <version>${version.infinispan}</version>\n          \n          \n            \n                       <type>pom</type>\n          \n          \n            \n                       <scope>import</scope>\n          \n          \n            \n                   </dependency>\n          \n      \n    \n    \n  \n\nyou have an example in spring-boot repo: https://github.com/infinispan/infinispan-spring-boot/blob/master/pom.xml#L95", "author": "pruivo", "createdAt": "2020-03-26T10:01:29Z", "path": "documentation/src/main/asciidoc/topics/dependencies_maven/ispn_embedded.xml", "diffHunk": "@@ -1,5 +1,13 @@\n-<dependency>\n-  <groupId>org.infinispan</groupId>\n-  <artifactId>infinispan-embedded</artifactId>\n-  <version>${version.infinispan}</version>\n-</dependency>\n+<dependencyManagement>\n+    <dependencies>\n+       <dependency>\n+           <groupId>org.infinispan</groupId>\n+           <artifactId>infinispan-bom</artifactId>\n+           <version>${version.infinispan}</version>\n+       </dependency>", "originalCommit": "ea1be0743de996199b0701e0193d0fd18657b286", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NDYzMg==", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398454632", "bodyText": "can you align the spaces?", "author": "pruivo", "createdAt": "2020-03-26T10:11:17Z", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);", "originalCommit": "ea1be0743de996199b0701e0193d0fd18657b286", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NTgxOA==", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398455818", "bodyText": "is it worth to mention that the cache is created in all the nodes in the cluster?", "author": "pruivo", "createdAt": "2020-03-26T10:13:18Z", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, clustered Cache Manager. Cache\n+Managers contain your cache definitions and control cache lifecycles.\n+\n+{brandname} does not provide default cache definitions so after initializing\n+the default Cache Manager, you need to add at least one cache instance. This\n+example uses the `ConfigurationBuilder` class to create a cache definition that\n+uses the distributed, synchronous cache mode. You then call the `getOrCreate()`\n+method that either creates a cache named \"myCache\" or returns it if it already", "originalCommit": "ea1be0743de996199b0701e0193d0fd18657b286", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NjI5Mg==", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398456292", "bodyText": "what do you think of keeping only the code and remove the imports?", "author": "pruivo", "createdAt": "2020-03-26T10:14:03Z", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;", "originalCommit": "ea1be0743de996199b0701e0193d0fd18657b286", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NzE0NA==", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398457144", "bodyText": "A / is missing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * link:{javadocroot}org/infinispan/manager/DefaultCacheManager.html[org.infinispan.manager.DefaultCacheManager]\n          \n          \n            \n            * link:{javadocroot}/org/infinispan/manager/DefaultCacheManager.html[org.infinispan.manager.DefaultCacheManager]", "author": "pruivo", "createdAt": "2020-03-26T10:15:24Z", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, clustered Cache Manager. Cache\n+Managers contain your cache definitions and control cache lifecycles.\n+\n+{brandname} does not provide default cache definitions so after initializing\n+the default Cache Manager, you need to add at least one cache instance. This\n+example uses the `ConfigurationBuilder` class to create a cache definition that\n+uses the distributed, synchronous cache mode. You then call the `getOrCreate()`\n+method that either creates a cache named \"myCache\" or returns it if it already\n+exists.\n+\n+.Next steps\n+\n+Now that you have a running Cache Manager with a cache created, you can add\n+some more cache definitions, configure a cluster transport layer, put some data\n+into the cache, or configure {brandname} as needed.\n+\n+.Reference\n+\n+* link:{config_docs}#programmatic-configuring[Configuring {brandname} Programmatically]\n+* link:{javadocroot}/org/infinispan/Cache.html[org.infinispan.Cache]\n+* link:{javadocroot}/org/infinispan/commons/api/CacheContainerAdmin.html[org.infinispan.commons.api.CacheContainerAdmin]\n+* link:{javadocroot}/org/infinispan/configuration/cache/CacheMode.html[org.infinispan.configuration.cache.CacheMode]\n+* link:{javadocroot}/org/infinispan/configuration/cache/Configuration.html[org.infinispan.configuration.cache.Configuration]\n+* link:{javadocroot}/org/infinispan/configuration/cache/ConfigurationBuilder.html[org.infinispan.configuration.cache.ConfigurationBuilder]\n+* link:{javadocroot}/org/infinispan/configuration/global/GlobalConfigurationBuilder.html[org.infinispan.configuration.global.GlobalConfigurationBuilder]\n+* link:{javadocroot}org/infinispan/manager/DefaultCacheManager.html[org.infinispan.manager.DefaultCacheManager]", "originalCommit": "ea1be0743de996199b0701e0193d0fd18657b286", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NzcxMg==", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398457712", "bodyText": "the transport must be configured before instantiating the DefaultCacheManager.", "author": "pruivo", "createdAt": "2020-03-26T10:16:25Z", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, clustered Cache Manager. Cache\n+Managers contain your cache definitions and control cache lifecycles.\n+\n+{brandname} does not provide default cache definitions so after initializing\n+the default Cache Manager, you need to add at least one cache instance. This\n+example uses the `ConfigurationBuilder` class to create a cache definition that\n+uses the distributed, synchronous cache mode. You then call the `getOrCreate()`\n+method that either creates a cache named \"myCache\" or returns it if it already\n+exists.\n+\n+.Next steps\n+\n+Now that you have a running Cache Manager with a cache created, you can add\n+some more cache definitions, configure a cluster transport layer, put some data", "originalCommit": "ea1be0743de996199b0701e0193d0fd18657b286", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2ceb88de707dd894ce29768d7d70b1f2f899ed05", "url": "https://github.com/infinispan/infinispan/commit/2ceb88de707dd894ce29768d7d70b1f2f899ed05", "message": "ISPN-10608 embedded docs", "committedDate": "2020-03-26T10:44:38Z", "type": "commit"}, {"oid": "2ceb88de707dd894ce29768d7d70b1f2f899ed05", "url": "https://github.com/infinispan/infinispan/commit/2ceb88de707dd894ce29768d7d70b1f2f899ed05", "message": "ISPN-10608 embedded docs", "committedDate": "2020-03-26T10:44:38Z", "type": "forcePushed"}, {"oid": "3d6bd4c28dc3e415f9b21997c78e9fdf778b98fd", "url": "https://github.com/infinispan/infinispan/commit/3d6bd4c28dc3e415f9b21997c78e9fdf778b98fd", "message": "fix for invalid assembly ID", "committedDate": "2020-03-26T11:23:51Z", "type": "commit"}]}