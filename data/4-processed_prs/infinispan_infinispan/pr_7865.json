{"pr_number": 7865, "pr_title": "ISPN-11297 Prevent creating clustered caches incompatible with global state", "pr_createdAt": "2020-02-11T08:49:28Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7865", "timeline": [{"oid": "624e60e2fcdd3782c0c06239844d9e9790a604be", "url": "https://github.com/infinispan/infinispan/commit/624e60e2fcdd3782c0c06239844d9e9790a604be", "message": "ISPN-11297 Prevent creating clustered caches incompatible with global state at start", "committedDate": "2020-02-11T13:49:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMxODMwMw==", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379318303", "bodyText": "I'd leave them the way they were, neither changing all the components nor having a different convention per file doesn't sound very appealing.", "author": "danberindei", "createdAt": "2020-02-14T09:07:47Z", "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -49,12 +49,18 @@\n \n    public static final String CACHE_SCOPE = \"cache\";\n \n-   @Inject EmbeddedCacheManager cacheManager;\n-   @Inject LocalTopologyManager localTopologyManager;\n-   @Inject ConfigurationManager configurationManager;\n-   @Inject InternalCacheRegistry internalCacheRegistry;\n-   @Inject GlobalComponentRegistry globalComponentRegistry;\n-   @Inject @ComponentName(KnownComponentNames.ASYNC_OPERATIONS_EXECUTOR)\n+   @Inject\n+   EmbeddedCacheManager cacheManager;", "originalCommit": "624e60e2fcdd3782c0c06239844d9e9790a604be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2MzEwNg==", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379363106", "bodyText": "That was my IDE reformatting at work :)", "author": "tristantarrant", "createdAt": "2020-02-14T10:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMxODMwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0ODM2Nw==", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379348367", "bodyText": "This is kind of confusing, both the local persistent state and the state cache can be said to hold existing configuration state. Could you rename the variables a bit to make it clear where each came from?", "author": "danberindei", "createdAt": "2020-02-14T10:11:00Z", "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -85,18 +91,42 @@ void start() {\n       parserRegistry = new ParserRegistry();\n \n       localConfigurationManager.initialize(cacheManager, configurationManager, executorService);\n+\n+      // Load any state we previously had", "originalCommit": "624e60e2fcdd3782c0c06239844d9e9790a604be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2NTMxMg==", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379365312", "bodyText": "I have renamed things to make things clearer", "author": "tristantarrant", "createdAt": "2020-02-14T10:46:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0ODM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM1MDgzOQ==", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379350839", "bodyText": "I'm not sure if this is ok. Some attributes are validated against the global configuration, and they may not be valid with the current global configuration.", "author": "danberindei", "createdAt": "2020-02-14T10:15:54Z", "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -172,11 +202,15 @@ void start() {\n \n    CompletableFuture<Void> createCacheLocally(String name, CacheState state) {\n       log.debugf(\"Create cache %s\", name);\n-      ConfigurationBuilderHolder builderHolder = parserRegistry.parse(state.getConfiguration());\n-      Configuration configuration = builderHolder.getNamedConfigurationBuilders().get(name).build();\n+      Configuration configuration = buildConfiguration(name, state);\n       return localConfigurationManager.createCache(name, state.getTemplate(), configuration, state.getFlags());\n    }\n \n+   private Configuration buildConfiguration(String name, CacheState state) {\n+      ConfigurationBuilderHolder builderHolder = parserRegistry.parse(state.getConfiguration());\n+      return builderHolder.getNamedConfigurationBuilders().get(name).build();", "originalCommit": "624e60e2fcdd3782c0c06239844d9e9790a604be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2NTE3OQ==", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379365179", "bodyText": "I now build against the global configuration", "author": "tristantarrant", "createdAt": "2020-02-14T10:46:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM1MDgzOQ=="}], "type": "inlineReview"}, {"oid": "9df1fdf5dcc63377ab4d63364fd2f5cf75afdd12", "url": "https://github.com/infinispan/infinispan/commit/9df1fdf5dcc63377ab4d63364fd2f5cf75afdd12", "message": "ISPN-11297 Prevent creating clustered caches incompatible with global state at start", "committedDate": "2020-02-14T10:45:51Z", "type": "commit"}, {"oid": "9df1fdf5dcc63377ab4d63364fd2f5cf75afdd12", "url": "https://github.com/infinispan/infinispan/commit/9df1fdf5dcc63377ab4d63364fd2f5cf75afdd12", "message": "ISPN-11297 Prevent creating clustered caches incompatible with global state at start", "committedDate": "2020-02-14T10:45:51Z", "type": "forcePushed"}]}