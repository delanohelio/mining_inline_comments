{"pr_number": 7922, "pr_title": "ISPN-11366 Remove Deprecated ConsistentHash methods", "pr_createdAt": "2020-02-19T15:57:55Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7922", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NDM1NA==", "url": "https://github.com/infinispan/infinispan/pull/7922#discussion_r382064354", "bodyText": "We should be able to remove PartitionerConsistentHash altogether.", "author": "danberindei", "createdAt": "2020-02-20T15:15:49Z", "path": "core/src/main/java/org/infinispan/distribution/group/impl/PartitionerConsistentHash.java", "diffHunk": "@@ -41,11 +41,6 @@ public int getNumOwners() {\n       return ch.getMembers();\n    }\n \n-   @Override\n-   public int getSegment(Object key) {", "originalCommit": "34d35759aec27249e61b7b8cd526eee2d5b7d926", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NTk5Mw==", "url": "https://github.com/infinispan/infinispan/pull/7922#discussion_r382065993", "bodyText": "Could use LocalizedCacheTopology#getLocalReadSegments", "author": "danberindei", "createdAt": "2020-02-20T15:18:09Z", "path": "core/src/main/java/org/infinispan/interceptors/distribution/NonTxDistributionInterceptor.java", "diffHunk": "@@ -483,29 +483,30 @@ public Object visitWriteOnlyKeyCommand(InvocationContext ctx, WriteOnlyKeyComman\n    }\n \n    private <C extends WriteCommand> Object writeManyRemoteCallback(WriteManyCommandHelper<C , ?, ?> helper,InvocationContext ctx, C command, Object rv) {\n-         ConsistentHash ch = checkTopologyId(command).getWriteConsistentHash();\n-         // We have already checked that the command topology is actual, so we can assume that we really are primary owner\n-         Map<Address, IntSet> backups = backupOwnersOfSegments(ch, IntSets.from(ch.getPrimarySegmentsForOwner(rpcManager.getAddress())));\n-         if (backups.isEmpty()) {\n-            return rv;\n-         }\n-         boolean isSync = isSynchronous(command);\n-         CompletableFuture[] futures = isSync ? new CompletableFuture[backups.size()] : null;\n-         int future = 0;\n-         for (Entry<Address, IntSet> backup : backups.entrySet()) {\n-            C copy = helper.copyForBackup(command, ch, backup.getValue());\n-            copy.setTopologyId(command.getTopologyId());\n-            Address backupOwner = backup.getKey();\n-            if (isSync) {\n-               futures[future++] = rpcManager\n-                     .invokeCommand(backupOwner, copy, SingleResponseCollector.validOnly(),\n-                                    rpcManager.getSyncRpcOptions())\n-                     .toCompletableFuture();\n-            } else {\n-               rpcManager.sendTo(backupOwner, copy, DeliverOrder.PER_SENDER);\n-            }\n+      LocalizedCacheTopology topology = checkTopologyId(command);\n+      ConsistentHash ch = topology.getWriteConsistentHash();\n+      // We have already checked that the command topology is actual, so we can assume that we really are primary owner\n+      Map<Address, IntSet> backups = backupOwnersOfSegments(ch, IntSets.from(ch.getPrimarySegmentsForOwner(rpcManager.getAddress())));", "originalCommit": "34d35759aec27249e61b7b8cd526eee2d5b7d926", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4MzA4MA==", "url": "https://github.com/infinispan/infinispan/pull/7922#discussion_r382083080", "bodyText": "This is kind of outdated, the test should iterate over the segments and check the owners of each segment instead.", "author": "danberindei", "createdAt": "2020-02-20T15:42:55Z", "path": "core/src/test/java/org/infinispan/distribution/topologyaware/TopologyAwareConsistentHashFactoryTest.java", "diffHunk": "@@ -62,45 +65,50 @@ public void testNumberOfOwners() {\n       addNode(testAddresses[0], \"m0\", null, null);\n \n       updateConsistentHash(1);\n-      assertEquals(ch.locateOwners(testAddresses[0]).size(), 1);\n+      assertNumberOwners(testAddresses[0], 1);\n       updateConsistentHash(2);\n-      assertEquals(ch.locateOwners(testAddresses[0]).size(), 1);\n+      assertNumberOwners(testAddresses[0], 1);\n \n       addNode(testAddresses[1], \"m1\", null, null);\n \n       updateConsistentHash(1);\n-      for (Address testAddress : testAddresses) {\n-         assertEquals(ch.locateOwners(testAddress).size(), 1);\n+      for (Address testAddress : ch.getMembers()) {", "originalCommit": "34d35759aec27249e61b7b8cd526eee2d5b7d926", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4MzgzNQ==", "url": "https://github.com/infinispan/infinispan/pull/7922#discussion_r382083835", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  ConsistentHash ch = cache(a0).getAdvancedCache().getDistributionManager().getReadConsistentHash();\n          \n          \n            \n                  LocalizedCacheTopology cacheTopology = cache(a0).getAdvancedCache().getDistributionManager().getCacheTopology();", "author": "danberindei", "createdAt": "2020-02-20T15:44:02Z", "path": "core/src/test/java/org/infinispan/partitionhandling/NumOwnersNodeCrashInSequenceTest.java", "diffHunk": "@@ -148,7 +148,7 @@ public boolean isSatisfied() throws Exception {\n       ConsistentHash ch = cache(a0).getAdvancedCache().getDistributionManager().getReadConsistentHash();", "originalCommit": "34d35759aec27249e61b7b8cd526eee2d5b7d926", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4NjA3OA==", "url": "https://github.com/infinispan/infinispan/pull/7922#discussion_r382086078", "bodyText": "I think the parameter should be the KP, not the CH.", "author": "danberindei", "createdAt": "2020-02-20T15:47:30Z", "path": "core/src/test/java/org/infinispan/statetransfer/TestKey.java", "diffHunk": "@@ -32,10 +34,11 @@ public TestKey(String name, int segmentId, ConsistentHash ch) {\n       this.name = name;\n \n       Random rnd = new Random();\n+      KeyPartitioner keyPartitioner = new HashFunctionPartitioner(ch.getNumSegments());", "originalCommit": "34d35759aec27249e61b7b8cd526eee2d5b7d926", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4b94254c9577f99e85f569e230f561c5ec0fe74d", "url": "https://github.com/infinispan/infinispan/commit/4b94254c9577f99e85f569e230f561c5ec0fe74d", "message": "ISPN-11366 Remove Deprecated ConsistentHash methods\n\nConsistentHash::getNumOwners remains", "committedDate": "2020-02-20T23:13:48Z", "type": "forcePushed"}, {"oid": "6d624f3299f7a39ec3c5ae66b0e32abd608c0b46", "url": "https://github.com/infinispan/infinispan/commit/6d624f3299f7a39ec3c5ae66b0e32abd608c0b46", "message": "ISPN-11366 Remove Deprecated ConsistentHash methods\n\nConsistentHash::getNumOwners remains", "committedDate": "2020-02-20T23:17:29Z", "type": "forcePushed"}, {"oid": "f6f2a2dbeabf7f26fa45f17061eb629e25f7af34", "url": "https://github.com/infinispan/infinispan/commit/f6f2a2dbeabf7f26fa45f17061eb629e25f7af34", "message": "Remove getNumOwners - Rebalance hanging", "committedDate": "2020-02-21T12:10:18Z", "type": "forcePushed"}, {"oid": "b7d827524eaf9c55fc95ace8ad188ec32213ec77", "url": "https://github.com/infinispan/infinispan/commit/b7d827524eaf9c55fc95ace8ad188ec32213ec77", "message": "ISPN-11366 Remove Deprecated ConsistentHash methods", "committedDate": "2020-02-21T14:59:35Z", "type": "forcePushed"}, {"oid": "ea192f2f8a3ada45e40411e6ebe3ff38e7a38a02", "url": "https://github.com/infinispan/infinispan/commit/ea192f2f8a3ada45e40411e6ebe3ff38e7a38a02", "message": "ISPN-11366 Remove Deprecated ConsistentHash methods", "committedDate": "2020-02-23T22:43:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc5NjYxNQ==", "url": "https://github.com/infinispan/infinispan/pull/7922#discussion_r383796615", "bodyText": "Can stay on the same line", "author": "danberindei", "createdAt": "2020-02-25T10:39:32Z", "path": "core/src/test/java/org/infinispan/util/ControlledConsistentHashFactory.java", "diffHunk": "@@ -124,7 +124,8 @@ public void setMembersToUse(List<Address> membersToUse) {\n    @SerializeWith(Externalizer.class)\n    public static class Default extends ControlledConsistentHashFactory<DefaultConsistentHash> {\n       public Default(int primaryOwnerIndex, int... backupOwnerIndexes) {\n-         super(new DefaultTrait(), primaryOwnerIndex, backupOwnerIndexes);\n+         super(new DefaultTrait(),\n+               primaryOwnerIndex, backupOwnerIndexes);", "originalCommit": "ea192f2f8a3ada45e40411e6ebe3ff38e7a38a02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc5NjcyMg==", "url": "https://github.com/infinispan/infinispan/pull/7922#discussion_r383796722", "bodyText": "No longer needed", "author": "danberindei", "createdAt": "2020-02-25T10:39:44Z", "path": "core/src/test/java/org/infinispan/util/BaseControlledConsistentHashFactory.java", "diffHunk": "@@ -99,23 +98,32 @@ public CH union(CH ch1, CH ch2) {\n       return trait.union(ch1, ch2);\n    }\n \n-   protected abstract int[][] assignOwners(int numSegments, int numOwners, List<Address> members);\n+   protected abstract int[][] assignOwners(int numSegments, List<Address> members);\n \n    private void assertNumberOfSegments(int numSegments) {\n       assertEquals(\"Wrong number of segments.\", this.numSegments, numSegments);\n    }\n \n    protected interface Trait<CH extends ConsistentHash> {\n-      CH create(Hash hashFunction, int numOwners, int numSegments, List<Address> members, Map<Address, Float> capacityFactors, List<Address>[] segmentOwners, boolean rebalanced);\n+      CH create(int numOwners, int numSegments, List<Address> members, Map<Address, Float> capacityFactors,\n+                List<Address>[] segmentOwners, boolean rebalanced);\n       CH union(CH ch1, CH ch2);\n \n       boolean requiresPrimaryOwner();\n+\n+      int getNumOwners(CH ch);\n    }\n \n    public static class DefaultTrait implements Trait<DefaultConsistentHash> {\n+\n+      public DefaultTrait() {", "originalCommit": "ea192f2f8a3ada45e40411e6ebe3ff38e7a38a02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "59cf6673a669200527e6494185bd086836b8cabb", "url": "https://github.com/infinispan/infinispan/commit/59cf6673a669200527e6494185bd086836b8cabb", "message": "ISPN-11366 Remove Deprecated ConsistentHash methods", "committedDate": "2020-02-25T10:42:16Z", "type": "commit"}, {"oid": "59cf6673a669200527e6494185bd086836b8cabb", "url": "https://github.com/infinispan/infinispan/commit/59cf6673a669200527e6494185bd086836b8cabb", "message": "ISPN-11366 Remove Deprecated ConsistentHash methods", "committedDate": "2020-02-25T10:42:16Z", "type": "forcePushed"}]}