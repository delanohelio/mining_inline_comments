{"pr_number": 4913, "pr_title": "GEODE-7943 add synchronization to Subscriptions class", "pr_createdAt": "2020-04-07T15:53:04Z", "pr_url": "https://github.com/apache/geode/pull/4913", "timeline": [{"oid": "9f5453b641aa9d6a0aa9fac083f0e1227c204dd4", "url": "https://github.com/apache/geode/commit/9f5453b641aa9d6a0aa9fac083f0e1227c204dd4", "message": "GEOE-7943 add synchronization to Subscriptions class", "committedDate": "2020-04-07T15:52:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4MTA0Nw==", "url": "https://github.com/apache/geode/pull/4913#discussion_r404981047", "bodyText": "Technically I think size() needs to be synchronized as well.", "author": "upthewaterspout", "createdAt": "2020-04-07T17:20:34Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/Subscriptions.java", "diffHunk": "@@ -55,30 +55,37 @@ public boolean exists(Object channelOrPattern, Client client) {\n    * @param channelOrPattern the channel or pattern\n    * @return a list of subscriptions\n    */\n-  public List<Subscription> findSubscriptions(String channelOrPattern) {\n-    return this.subscriptions.stream()\n+  public synchronized List<Subscription> findSubscriptions(String channelOrPattern) {\n+    return subscriptions.stream()\n         .filter(subscription -> subscription.matches(channelOrPattern))\n         .collect(Collectors.toList());\n   }\n \n   /**\n    * Add a new subscription\n    */\n-  public void add(Subscription subscription) {\n-    this.subscriptions.add(subscription);\n+  public synchronized void add(Subscription subscription) {\n+    subscriptions.add(subscription);\n   }\n \n   /**\n    * Remove all subscriptions for a given client\n    */\n-  public void remove(Client client) {\n-    this.subscriptions.removeIf(subscription -> subscription.matchesClient(client));\n+  public synchronized void remove(Client client) {\n+    subscriptions.removeIf(subscription -> subscription.matchesClient(client));\n   }\n \n   /**\n    * Remove a single subscription\n    */\n-  public void remove(Object channel, Client client) {\n-    this.subscriptions.removeIf(subscription -> subscription.isEqualTo(channel, client));\n+  public synchronized void remove(Object channel, Client client) {\n+    subscriptions.removeIf(subscription -> subscription.isEqualTo(channel, client));\n+  }\n+\n+  /**\n+   * @return the total number of all local subscriptions\n+   */\n+  public int size() {", "originalCommit": "9f5453b641aa9d6a0aa9fac083f0e1227c204dd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzNjM5Nw==", "url": "https://github.com/apache/geode/pull/4913#discussion_r405136397", "bodyText": "I've switched to using a CopyOnWriteArrayList.", "author": "jdeppe-pivotal", "createdAt": "2020-04-07T21:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4MTA0Nw=="}], "type": "inlineReview"}, {"oid": "4becd43529d9cf6a1dbca26885c956149cdfaae9", "url": "https://github.com/apache/geode/commit/4becd43529d9cf6a1dbca26885c956149cdfaae9", "message": "Switch to using CopyOnWriteArrayList as the backing structure\n\nAuthored-by: Jens Deppe <jdeppe@vmware.com>", "committedDate": "2020-04-07T21:51:58Z", "type": "commit"}, {"oid": "e2eef94690cd1b33ff14cfb67963e3982d585bbd", "url": "https://github.com/apache/geode/commit/e2eef94690cd1b33ff14cfb67963e3982d585bbd", "message": "Revert \"Switch to using CopyOnWriteArrayList as the backing structure\"\n\nThis reverts commit 4becd43529d9cf6a1dbca26885c956149cdfaae9.", "committedDate": "2020-04-08T03:21:39Z", "type": "commit"}, {"oid": "01c708f2a5d2d694ccc5da0222e707a3631a5196", "url": "https://github.com/apache/geode/commit/01c708f2a5d2d694ccc5da0222e707a3631a5196", "message": "Add synchronized to size()", "committedDate": "2020-04-08T14:12:07Z", "type": "commit"}, {"oid": "7b4e2787f1b313025c8f9cb13077a8c58ae99fdb", "url": "https://github.com/apache/geode/commit/7b4e2787f1b313025c8f9cb13077a8c58ae99fdb", "message": "Trigger CI", "committedDate": "2020-04-08T15:25:03Z", "type": "commit"}, {"oid": "9d60ae103a8f9473d84abdcf75b172fd2e1c290b", "url": "https://github.com/apache/geode/commit/9d60ae103a8f9473d84abdcf75b172fd2e1c290b", "message": "wat", "committedDate": "2020-04-09T03:57:01Z", "type": "commit"}, {"oid": "40c027e24fa34d04512cd2b7ab2faddebf609179", "url": "https://github.com/apache/geode/commit/40c027e24fa34d04512cd2b7ab2faddebf609179", "message": "Move test to integrationTest", "committedDate": "2020-04-09T04:23:42Z", "type": "commit"}, {"oid": "ad583e053bb8506d9acac8db62f12701c3b1ff0d", "url": "https://github.com/apache/geode/commit/ad583e053bb8506d9acac8db62f12701c3b1ff0d", "message": "Switch back to CopyOnWriteList since it appears not to really introduce memory issues", "committedDate": "2020-04-09T16:31:21Z", "type": "commit"}, {"oid": "8ea5f0f9a3295367b9f3f1de7d15aba74ce075de", "url": "https://github.com/apache/geode/commit/8ea5f0f9a3295367b9f3f1de7d15aba74ce075de", "message": "It seems that mock Subscription objects produce a ton of garbage\n\n- Also fix a small cleanup issue in ExpireAtIntegrationTest\n\nAuthored-by: Jens Deppe <jdeppe@vmware.com>", "committedDate": "2020-04-10T04:16:32Z", "type": "commit"}]}