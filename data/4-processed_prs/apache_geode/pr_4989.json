{"pr_number": 4989, "pr_title": "GEODE-8014: Sets and Hashes should be deleted once they are empty", "pr_createdAt": "2020-04-23T14:58:55Z", "pr_url": "https://github.com/apache/geode/pull/4989", "timeline": [{"oid": "7844427418ddf08113b38ac897332dc8d61f0c8a", "url": "https://github.com/apache/geode/commit/7844427418ddf08113b38ac897332dc8d61f0c8a", "message": "GEODE 8014: Sets and Hashes should be deleted once they are empty", "committedDate": "2020-04-23T14:57:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4OTA0NA==", "url": "https://github.com/apache/geode/pull/4989#discussion_r413989044", "bodyText": "Instead of \".size() == 0\" I think \".isEmpty()\" is better.", "author": "dschneider-pivotal", "createdAt": "2020-04-23T17:31:38Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/GeodeRedisHashSynchronized.java", "diffHunk": "@@ -89,6 +89,11 @@ public int hdel(List<ByteArrayWrapper> subList) {\n       numDeleted.set(oldHash.size() - newHash.size());\n       return newHash;\n     });\n+\n+    if (hgetall().size() == 0) {", "originalCommit": "7844427418ddf08113b38ac897332dc8d61f0c8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MjQ4Mw==", "url": "https://github.com/apache/geode/pull/4989#discussion_r413992483", "bodyText": "Calling \"hgetall\" and then checking the size does not seem thread safe. Couldn't another  thread add to this set and find the existing one we emptied out and add to it right after this thread checks the size and then we will unregister a non-empty hash?\nIf we do have a concurrency issue I'm still okay with this change since it fixes the non-concurrent case. Maybe we could just add a TODO comment that concurrency needs to be addressed?", "author": "dschneider-pivotal", "createdAt": "2020-04-23T17:36:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4OTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3NDg1NQ==", "url": "https://github.com/apache/geode/pull/4989#discussion_r414574855", "bodyText": "True, I will update to .isEmpty()", "author": "sabbey37", "createdAt": "2020-04-24T13:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4OTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3ODA2OQ==", "url": "https://github.com/apache/geode/pull/4989#discussion_r414578069", "bodyText": "Yeah, I think we just put in the non-concurrent case for now since we are still deciding on an approach (compound key vs. function/delta vs. something else).  I will add a TODO, though.", "author": "sabbey37", "createdAt": "2020-04-24T13:31:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4OTA0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NDg3OQ==", "url": "https://github.com/apache/geode/pull/4989#discussion_r413994879", "bodyText": "It seems like this code should only unregister if the current type is REDIS_HASH. I thought you were unregistering here but does getRegionProvider().removeKey change the keyRegistar? I will talk with Sarah about this. I might just not understand this code", "author": "dschneider-pivotal", "createdAt": "2020-04-23T17:40:34Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/GeodeRedisHashSynchronized.java", "diffHunk": "@@ -89,6 +89,11 @@ public int hdel(List<ByteArrayWrapper> subList) {\n       numDeleted.set(oldHash.size() - newHash.size());\n       return newHash;\n     });\n+\n+    if (hgetall().size() == 0) {\n+      RedisDataType type = context.getKeyRegistrar().getType(key);", "originalCommit": "7844427418ddf08113b38ac897332dc8d61f0c8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3OTQxNg==", "url": "https://github.com/apache/geode/pull/4989#discussion_r414579416", "bodyText": "Yes, the removeKey method unregisters the key from the keyRegistrar in addition to deleting it.", "author": "sabbey37", "createdAt": "2020-04-24T13:33:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NDg3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NTY2MA==", "url": "https://github.com/apache/geode/pull/4989#discussion_r413995660", "bodyText": "Same comments on this block as the above hdel", "author": "dschneider-pivotal", "createdAt": "2020-04-23T17:41:37Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/GeodeRedisSetSynchronized.java", "diffHunk": "@@ -59,8 +60,15 @@ public long srem(Collection<ByteArrayWrapper> membersToRemove) {\n       Set<ByteArrayWrapper> newValue = createSet(oldValue);\n       newValue.removeAll(membersToRemove);\n       removedCount.set(oldValue.size() - newValue.size());\n+\n       return newValue;\n     });\n+\n+    if (members().size() == 0) {", "originalCommit": "7844427418ddf08113b38ac897332dc8d61f0c8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3ODM2MA==", "url": "https://github.com/apache/geode/pull/4989#discussion_r414578360", "bodyText": "I will update and add a TODO.", "author": "sabbey37", "createdAt": "2020-04-24T13:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NTY2MA=="}], "type": "inlineReview"}, {"oid": "29b17c22b6f878380537f9a0db909b3a6b5a2c35", "url": "https://github.com/apache/geode/commit/29b17c22b6f878380537f9a0db909b3a6b5a2c35", "message": "Makes suggested PR review changes and adds concurrent HDel and SRem tests", "committedDate": "2020-04-24T16:12:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwMzgzMQ==", "url": "https://github.com/apache/geode/pull/4989#discussion_r416203831", "bodyText": "It seems wrong here to refetch the RedisDataType and then blow it away without checking if the type is what we expect. For example here should we check to see if it is == REDIS_SET before calling removeKey?", "author": "dschneider-pivotal", "createdAt": "2020-04-27T22:54:24Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/GeodeRedisSetSynchronized.java", "diffHunk": "@@ -59,8 +60,19 @@ public long srem(Collection<ByteArrayWrapper> membersToRemove) {\n       Set<ByteArrayWrapper> newValue = createSet(oldValue);\n       newValue.removeAll(membersToRemove);\n       removedCount.set(oldValue.size() - newValue.size());\n+\n+      // if(newValue.isEmpty()) {\n+      // context.getRegionProvider().removeKey(key, context.getKeyRegistrar().getType(key));\n+      // }\n+\n       return newValue;\n     });\n+\n+    if (members().isEmpty()) {\n+      RedisDataType type = context.getKeyRegistrar().getType(key);", "originalCommit": "29b17c22b6f878380537f9a0db909b3a6b5a2c35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYwMjc0Mg==", "url": "https://github.com/apache/geode/pull/4989#discussion_r416602742", "bodyText": "We actually check the data type in the SREM executor before we create the synchronized set and call SREM.  We can add it again here. We also added a test to make sure the error is thrown and check the message.", "author": "sabbey37", "createdAt": "2020-04-28T13:15:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwMzgzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwMzkwNg==", "url": "https://github.com/apache/geode/pull/4989#discussion_r416203906", "bodyText": "It seems wrong here to refetch the RedisDataType and then blow it away without checking if the type is what we expect. For example here should we check to see if it is == REDIS_HASH before calling removeKey?", "author": "dschneider-pivotal", "createdAt": "2020-04-27T22:54:38Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/GeodeRedisHashSynchronized.java", "diffHunk": "@@ -89,6 +89,11 @@ public int hdel(List<ByteArrayWrapper> subList) {\n       numDeleted.set(oldHash.size() - newHash.size());\n       return newHash;\n     });\n+\n+    if (hgetall().isEmpty()) {\n+      RedisDataType type = context.getKeyRegistrar().getType(key);", "originalCommit": "29b17c22b6f878380537f9a0db909b3a6b5a2c35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYzMzQzNw==", "url": "https://github.com/apache/geode/pull/4989#discussion_r416633437", "bodyText": "Turns out the type was not getting checked for HDel, so we added a test and updated the HDelExecutor and hdel method in GeodeRedisHashSynchronized.  Thanks for pointing this out!", "author": "sabbey37", "createdAt": "2020-04-28T13:55:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwMzkwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwNDAwNQ==", "url": "https://github.com/apache/geode/pull/4989#discussion_r416204005", "bodyText": "should this commented out code be removed?", "author": "dschneider-pivotal", "createdAt": "2020-04-27T22:54:53Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/GeodeRedisSetSynchronized.java", "diffHunk": "@@ -59,8 +60,19 @@ public long srem(Collection<ByteArrayWrapper> membersToRemove) {\n       Set<ByteArrayWrapper> newValue = createSet(oldValue);\n       newValue.removeAll(membersToRemove);\n       removedCount.set(oldValue.size() - newValue.size());\n+\n+      // if(newValue.isEmpty()) {", "originalCommit": "29b17c22b6f878380537f9a0db909b3a6b5a2c35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU5ODU0OA==", "url": "https://github.com/apache/geode/pull/4989#discussion_r416598548", "bodyText": "Yes.  We were experimenting with adding it into compute. Thank you for finding that!", "author": "sabbey37", "createdAt": "2020-04-28T13:09:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwNDAwNQ=="}], "type": "inlineReview"}, {"oid": "a6fcea8f7cb9a188ae8d2556eb3ddb222c0cef28", "url": "https://github.com/apache/geode/commit/a6fcea8f7cb9a188ae8d2556eb3ddb222c0cef28", "message": "Adds tests for key that has a value that is the wrong data type getting passed to SREM and HDEL, updates HDEL to check data type", "committedDate": "2020-04-28T13:57:00Z", "type": "commit"}, {"oid": "226c62c7fc66d075912a40f2dacc4e8c6ca5512b", "url": "https://github.com/apache/geode/commit/226c62c7fc66d075912a40f2dacc4e8c6ca5512b", "message": "Removes unit test case that was already covered in an integration test", "committedDate": "2020-04-28T15:37:49Z", "type": "commit"}, {"oid": "bd33ce0b2593c49a30296c9cef47bb89d1e637f7", "url": "https://github.com/apache/geode/commit/bd33ce0b2593c49a30296c9cef47bb89d1e637f7", "message": "Updates HDEL and SREM to check region type again before removing key", "committedDate": "2020-04-28T15:54:36Z", "type": "commit"}]}