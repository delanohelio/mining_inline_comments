{"pr_number": 4798, "pr_title": "GEODE-7863: Reduce ServerCQImpl Contention", "pr_createdAt": "2020-03-12T14:09:51Z", "pr_url": "https://github.com/apache/geode/pull/4798", "timeline": [{"oid": "8f4074c065c7e64fc26b9a223220f1cf288b81e2", "url": "https://github.com/apache/geode/commit/8f4074c065c7e64fc26b9a223220f1cf288b81e2", "message": "GEODE-7863: Reduce ServerCQImpl Contention\n\nWe don't need to lock the entire internal cache for Partitioned\nregions so the implementation is now split by region type, this will\nus to improve/change them independently in the future.\n\n- Removed redundant checks.\n- Keep current behavior for Replicate Regions.\n- Use ConcurrentMap instead of locking the entire internal cache on\nevery operation for Partition Regions.\n- Keep the lock on ServerCQImpl instance only while executing the\nquery and leave stats operations outside of the synchronized block.", "committedDate": "2020-03-12T14:07:51Z", "type": "commit"}, {"oid": "7d7b5facceda551e3a65771c3d0a8cfa7a361dba", "url": "https://github.com/apache/geode/commit/7d7b5facceda551e3a65771c3d0a8cfa7a361dba", "message": "GEODE-7863: Changed attributes to be final, they do not need to be volatile.", "committedDate": "2020-03-13T13:54:13Z", "type": "commit"}, {"oid": "a8502ca3d8d88375ee1b1ac42c897505bb9951a4", "url": "https://github.com/apache/geode/commit/a8502ca3d8d88375ee1b1ac42c897505bb9951a4", "message": "GEODE-7863: Remove defaults from the interface and add a no-op cache implementation for those cases on which cache is disabled.", "committedDate": "2020-03-13T16:39:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyOTA5MA==", "url": "https://github.com/apache/geode/pull/4798#discussion_r392029090", "bodyText": "Not for this diff, but it would be nice to have both cache types set initialized at the same place \ud83e\udd37\u200d\u2642", "author": "jhuynh1", "createdAt": "2020-03-13T04:50:19Z", "path": "geode-cq/src/main/java/org/apache/geode/cache/query/cq/internal/ServerCQImpl.java", "diffHunk": "@@ -232,17 +218,17 @@ public void registerCq(ClientProxyMembershipID p_clientProxyId, CacheClientNotif\n \n     // Initialize CQ results (key) cache.\n     if (CqServiceProvider.MAINTAIN_KEYS) {\n-      this.cqResultKeys = new HashMap<>();\n       // Currently the CQ Result keys are not cached for the Partitioned\n       // Regions. Supporting this with PR needs more work like forcing\n       // query execution on primary buckets only; and handling the bucket\n       // re-balancing. Once this is added remove the check with PR region.\n       // Only the events which are seen during event processing is\n       // added to the results cache (not from the CQ Results).\n       if (this.isPR) {\n-        this.setCqResultsCacheInitialized();\n+        serverCQCache = new ServerCQCachePartitionRegionImpl();\n+        setCqResultsCacheInitialized();", "originalCommit": "8f4074c065c7e64fc26b9a223220f1cf288b81e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkxNjc5MQ==", "url": "https://github.com/apache/geode/pull/4798#discussion_r392916791", "bodyText": "\ud83d\udc4d", "author": "jujoramos", "createdAt": "2020-03-16T10:30:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyOTA5MA=="}], "type": "inlineReview"}]}