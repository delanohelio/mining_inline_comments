{"pr_number": 4673, "pr_title": "GEODE-7717: ClusterManagementListResult should show a list of EntityInfo", "pr_createdAt": "2020-02-05T01:21:00Z", "pr_url": "https://github.com/apache/geode/pull/4673", "timeline": [{"oid": "37989dd57d7ec6af5c80abf0e74b74418c3cdebb", "url": "https://github.com/apache/geode/commit/37989dd57d7ec6af5c80abf0e74b74418c3cdebb", "message": "fix tests and rework list member responses", "committedDate": "2020-02-06T01:34:21Z", "type": "forcePushed"}, {"oid": "142348b251b68123db96cfb1f937d0a141e9116d", "url": "https://github.com/apache/geode/commit/142348b251b68123db96cfb1f937d0a141e9116d", "message": "fix tests and rework list member responses", "committedDate": "2020-02-06T03:24:41Z", "type": "forcePushed"}, {"oid": "dd5cb59238ce85e6bf0c127459752db0480c7ca5", "url": "https://github.com/apache/geode/commit/dd5cb59238ce85e6bf0c127459752db0480c7ca5", "message": "fix tests and rework list member responses", "committedDate": "2020-02-06T03:46:23Z", "type": "forcePushed"}, {"oid": "beb4ab9d25b7967aa6f1f0f92b8afcaed9dcc8f9", "url": "https://github.com/apache/geode/commit/beb4ab9d25b7967aa6f1f0f92b8afcaed9dcc8f9", "message": "GEODE-7717: ClusterManagementListResult should show a list of EntityInfo", "committedDate": "2020-02-06T16:34:59Z", "type": "commit"}, {"oid": "43be5b091db08e189ade10107eab37feb08ebc9a", "url": "https://github.com/apache/geode/commit/43be5b091db08e189ade10107eab37feb08ebc9a", "message": "only show links in the EntityInfo level", "committedDate": "2020-02-06T16:34:59Z", "type": "commit"}, {"oid": "3981de9fdc42a5c14ce36533e6838d3ebd6963ab", "url": "https://github.com/apache/geode/commit/3981de9fdc42a5c14ce36533e6838d3ebd6963ab", "message": "fix tests and rework list member responses", "committedDate": "2020-02-06T16:35:00Z", "type": "commit"}, {"oid": "3981de9fdc42a5c14ce36533e6838d3ebd6963ab", "url": "https://github.com/apache/geode/commit/3981de9fdc42a5c14ce36533e6838d3ebd6963ab", "message": "fix tests and rework list member responses", "committedDate": "2020-02-06T16:35:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwNDIwMw==", "url": "https://github.com/apache/geode/pull/4673#discussion_r376104203", "bodyText": "Would groupInfo be a better name for this field (and the corresponding getter and setter)?", "author": "demery-pivotal", "createdAt": "2020-02-06T21:55:49Z", "path": "geode-management/src/main/java/org/apache/geode/management/api/EntityInfo.java", "diffHunk": "@@ -39,13 +40,13 @@\n   private String id;\n   @JsonInclude\n   @JsonProperty\n-  private List<EntityGroupInfo<T, R>> configurationByGroup = new ArrayList<>();\n+  private List<EntityGroupInfo<T, R>> groups = new ArrayList<>();\n \n   public EntityInfo() {}\n \n-  public EntityInfo(String id, List<EntityGroupInfo<T, R>> configurationByGroup) {\n+  public EntityInfo(String id, List<EntityGroupInfo<T, R>> groups) {", "originalCommit": "3981de9fdc42a5c14ce36533e6838d3ebd6963ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxODIwMQ==", "url": "https://github.com/apache/geode/pull/4673#discussion_r376218201", "bodyText": "I think \"id\" and \"groups\" seem to go together in this class. I would prefer to make the keys of the json short.", "author": "jinmeiliao", "createdAt": "2020-02-07T05:17:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwNDIwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwNDQ5Nw==", "url": "https://github.com/apache/geode/pull/4673#discussion_r376104497", "bodyText": "Whatever you decide to name the field, change the label here to match.", "author": "demery-pivotal", "createdAt": "2020-02-06T21:56:26Z", "path": "geode-management/src/main/java/org/apache/geode/management/api/EntityInfo.java", "diffHunk": "@@ -88,19 +97,19 @@ public boolean equals(Object o) {\n     }\n     EntityInfo<?, ?> that = (EntityInfo<?, ?>) o;\n     return Objects.equals(id, that.id) &&\n-        Objects.equals(configurationByGroup, that.configurationByGroup);\n+        Objects.equals(groups, that.groups);\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hash(id, configurationByGroup);\n+    return Objects.hash(id, groups);\n   }\n \n   @Override\n   public String toString() {\n     return \"ConfigurationInfo{\" +\n         \"id='\" + id + '\\'' +\n-        \", configurationByGroup=\" + configurationByGroup +\n+        \", configurationByGroup=\" + groups +", "originalCommit": "3981de9fdc42a5c14ce36533e6838d3ebd6963ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0ODk2Mw==", "url": "https://github.com/apache/geode/pull/4673#discussion_r376148963", "bodyText": "result and results don't seem like good names. How about entityGroupInfo and entityGroupInfos?", "author": "dschneider-pivotal", "createdAt": "2020-02-06T23:58:42Z", "path": "geode-management/src/main/java/org/apache/geode/management/api/ClusterManagementListResult.java", "diffHunk": "@@ -34,50 +34,72 @@\n @Experimental\n public class ClusterManagementListResult<T extends AbstractConfiguration<R>, R extends RuntimeInfo>\n     extends ClusterManagementResult {\n-  /**\n-   * for internal use only\n-   */\n+\n   public ClusterManagementListResult() {}\n \n-  /**\n-   * for internal use only\n-   */\n   public ClusterManagementListResult(StatusCode statusCode, String message) {\n     super(statusCode, message);\n   }\n \n-  // Override the mapper setting so that we always show result\n-  @JsonInclude\n-  @JsonProperty\n-  private List<EntityGroupInfo<T, R>> result = new ArrayList<>();\n+  private Map<String, EntityInfo<T, R>> entities = new HashMap<>();\n \n   /**\n    * Returns the combined payload of the list call\n    */\n-  public List<EntityGroupInfo<T, R>> getResult() {\n-    return result;\n+  @JsonIgnore\n+  public List<EntityGroupInfo<T, R>> getEntityGroupInfo() {\n+    return entities.values().stream()\n+        .flatMap(x -> x.getGroups().stream())\n+        .collect(Collectors.toList());\n+  }\n+\n+  // this annotation makes sure we always show the result even though it's an empty list\n+  @JsonInclude\n+  public List<EntityInfo<T, R>> getResult() {\n+    return entities.values().stream().collect(Collectors.toList());\n+  }\n+\n+  public void setResult(List<EntityInfo<T, R>> entities) {\n+    this.entities.clear();\n+    for (EntityInfo entity : entities) {\n+      this.entities.put(entity.getId(), entity);\n+    }\n+  }\n+\n+  public void addEntityInfo(EntityInfo<T, R> entityInfo) {\n+    this.entities.put(entityInfo.getId(), entityInfo);\n+  }\n+\n+  @JsonIgnore\n+  public void setEntityGroupInfo(List<EntityGroupInfo<T, R>> results) {\n+    this.entities.clear();\n+    for (EntityGroupInfo result : results) {", "originalCommit": "3981de9fdc42a5c14ce36533e6838d3ebd6963ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1MDAyOQ==", "url": "https://github.com/apache/geode/pull/4673#discussion_r376150029", "bodyText": "groups.isEmpty() is a little better", "author": "dschneider-pivotal", "createdAt": "2020-02-07T00:02:11Z", "path": "geode-management/src/main/java/org/apache/geode/management/api/EntityInfo.java", "diffHunk": "@@ -56,28 +57,36 @@ public void setId(String id) {\n     this.id = id;\n   }\n \n-  public List<EntityGroupInfo<T, R>> getConfigurationByGroup() {\n-    return configurationByGroup;\n+  public List<EntityGroupInfo<T, R>> getGroups() {\n+    return groups;\n   }\n \n-  public void setConfigurationByGroup(List<EntityGroupInfo<T, R>> configurationByGroup) {\n-    this.configurationByGroup = configurationByGroup;\n+  public void setGroups(List<EntityGroupInfo<T, R>> groups) {\n+    this.groups = groups;\n   }\n \n   @JsonIgnore\n   public List<T> getConfigurations() {\n-    return configurationByGroup.stream()\n+    return groups.stream()\n         .map(EntityGroupInfo::getConfiguration)\n         .collect(toList());\n   }\n \n   @JsonIgnore\n   public List<R> getRuntimeInfos() {\n-    return configurationByGroup.stream()\n+    return groups.stream()\n         .flatMap(r -> r.getRuntimeInfo().stream())\n         .collect(toList());\n   }\n \n+  @JsonProperty(access = JsonProperty.Access.READ_ONLY)\n+  public Links getLinks() {\n+    if (groups.size() == 0) {", "originalCommit": "3981de9fdc42a5c14ce36533e6838d3ebd6963ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1MDQ0OA==", "url": "https://github.com/apache/geode/pull/4673#discussion_r376150448", "bodyText": "make this \"final\" if this is the only assignment", "author": "dschneider-pivotal", "createdAt": "2020-02-07T00:03:38Z", "path": "geode-management/src/main/java/org/apache/geode/management/api/ClusterManagementListResult.java", "diffHunk": "@@ -34,50 +34,72 @@\n @Experimental\n public class ClusterManagementListResult<T extends AbstractConfiguration<R>, R extends RuntimeInfo>\n     extends ClusterManagementResult {\n-  /**\n-   * for internal use only\n-   */\n+\n   public ClusterManagementListResult() {}\n \n-  /**\n-   * for internal use only\n-   */\n   public ClusterManagementListResult(StatusCode statusCode, String message) {\n     super(statusCode, message);\n   }\n \n-  // Override the mapper setting so that we always show result\n-  @JsonInclude\n-  @JsonProperty\n-  private List<EntityGroupInfo<T, R>> result = new ArrayList<>();\n+  private Map<String, EntityInfo<T, R>> entities = new HashMap<>();", "originalCommit": "3981de9fdc42a5c14ce36533e6838d3ebd6963ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cc2bf5d4f580e585f8d93c756abb4cbf73b6cf83", "url": "https://github.com/apache/geode/commit/cc2bf5d4f580e585f8d93c756abb4cbf73b6cf83", "message": "review changes", "committedDate": "2020-02-07T05:16:15Z", "type": "commit"}]}