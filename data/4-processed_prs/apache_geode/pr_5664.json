{"pr_number": 5664, "pr_title": "GEODE-8650: Support multiple instances of DistributedReference", "pr_createdAt": "2020-10-23T20:27:40Z", "pr_url": "https://github.com/apache/geode/pull/5664", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5ODA2OQ==", "url": "https://github.com/apache/geode/pull/5664#discussion_r511198069", "bodyText": "Could we not leverage method overloading here.\nInstead of toFalse((AtomicBoolean)object) we use close(object) and then have a close(AtomicBoolean) in the CompletionUtils?", "author": "kohlmu-pivotal", "createdAt": "2020-10-23T23:38:59Z", "path": "geode-dunit/src/main/java/org/apache/geode/test/dunit/rules/DistributedReference.java", "diffHunk": "@@ -187,47 +197,76 @@ public V get() {\n    * @param newValue the new value\n    */\n   public DistributedReference<V> set(V newValue) {\n-    REFERENCE.set(newValue);\n+    REFERENCE.get().put(identity, newValue);\n     return this;\n   }\n \n+  @Override\n+  protected void before() {\n+    invoker().invokeInEveryVMAndController(() -> invokeBefore());\n+  }\n+\n   @Override\n   protected void after() {\n-    invoker().invokeInEveryVMAndController(this::invokeAfter);\n+    invoker().invokeInEveryVMAndController(() -> invokeAfter());\n+  }\n+\n+  protected void afterCreateVM(VM vm) {\n+    vm.invoke(() -> invokeBefore());\n+  }\n+\n+  protected void beforeBounceVM(VM vm) {\n+    // override if needed\n+  }\n+\n+  protected void afterBounceVM(VM vm) {\n+    vm.invoke(() -> invokeBefore());\n+  }\n+\n+  private void invokeBefore() {\n+    REFERENCE.compareAndSet(null, new HashMap<>());\n+    REFERENCE.get().putIfAbsent(identity, null);\n   }\n \n   private void invokeAfter() {\n-    V value = get();\n-    if (value == null) {\n+    Map<Integer, Object> references = REFERENCE.getAndSet(null);\n+    if (references == null) {\n+      return;\n+    }\n+\n+    for (Object object : references.values()) {\n+      invokeAfter(object);\n+    }\n+  }\n+\n+  private void invokeAfter(Object object) {\n+    if (object == null) {\n       return;\n     }\n-    REFERENCE.set(null);\n \n     if (autoClose.get()) {\n-      autoClose(value);\n+      autoClose(object);\n     }\n   }\n \n-  private void autoClose(V value) {\n-    if (value instanceof AutoCloseable) {\n-      close((AutoCloseable) value);\n+  private void autoClose(Object object) {\n+    if (object instanceof AutoCloseable) {\n+      close((AutoCloseable) object);\n \n-    } else if (hasMethod(value.getClass(), \"close\")) {\n-      invokeMethod(value, \"close\");\n+    } else if (object instanceof AtomicBoolean) {\n+      toFalse((AtomicBoolean) object);\n \n-    } else if (hasMethod(value.getClass(), \"disconnect\")) {\n-      invokeMethod(value, \"disconnect\");\n+    } else if (object instanceof CountDownLatch) {\n+      openLatch((CountDownLatch) object);\n \n-    } else if (hasMethod(value.getClass(), \"stop\")) {\n-      invokeMethod(value, \"stop\");\n-    }\n-  }\n+    } else if (hasMethod(object.getClass(), \"close\")) {\n+      invokeMethod(object, \"close\");", "originalCommit": "6f8bff1b948a18937c22a128c015fdb176be136a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTIzNTE4Mg==", "url": "https://github.com/apache/geode/pull/5664#discussion_r511235182", "bodyText": "Do we really want a method called close(AtomicBoolean) that sets the specified value to false? I started out with multiple close methods and then I changed them from that to:\n\ntoFalse(AtomicBoolean)\nopenLatch(CountDownLatch)\n\nAnd then what about opening CountDownLatch? Do we change that to close as well even tho close is the opposite of open?\nI was thinking that my creation of CompletionUtils might be slightly more controversial because it's of dubious value outside DistributedReference.", "author": "kirklund", "createdAt": "2020-10-24T01:26:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5ODA2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQwMjU0Mw==", "url": "https://github.com/apache/geode/pull/5664#discussion_r511402543", "bodyText": "I imagine that the effort to write toFalse would be the same as close(AtomicBoolean).\nI don't mind the CompletionUtils class.\nIt is test only code anyway. I just thought the code would be cleaner with just a single close(*) call. Then all the logic for closing, even all the method look ups, could be contained in the CompletionUtils class.", "author": "kohlmu-pivotal", "createdAt": "2020-10-24T11:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5ODA2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE0NTU4Nw==", "url": "https://github.com/apache/geode/pull/5664#discussion_r512145587", "bodyText": "New commit includes \"Rename all CompletionUtils to close\". Please review again. Thanks!", "author": "kirklund", "createdAt": "2020-10-26T17:34:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5ODA2OQ=="}], "type": "inlineReview"}, {"oid": "ecd8bff893dc00848f98eb6289728012ffadbf0c", "url": "https://github.com/apache/geode/commit/ecd8bff893dc00848f98eb6289728012ffadbf0c", "message": "GEODE-8650: Support multiple instances of DistributedReference\n\nIncludes additional improvements for usage of DistributedReference\nin tests.", "committedDate": "2020-10-24T00:38:54Z", "type": "commit"}, {"oid": "ecd8bff893dc00848f98eb6289728012ffadbf0c", "url": "https://github.com/apache/geode/commit/ecd8bff893dc00848f98eb6289728012ffadbf0c", "message": "GEODE-8650: Support multiple instances of DistributedReference\n\nIncludes additional improvements for usage of DistributedReference\nin tests.", "committedDate": "2020-10-24T00:38:54Z", "type": "forcePushed"}, {"oid": "4fa546320d448ff1e39407d758539bbb2a5355e3", "url": "https://github.com/apache/geode/commit/4fa546320d448ff1e39407d758539bbb2a5355e3", "message": "* Rename all CompletionUtils to close\n* Annotate all overridden methods\n* Suppress false warnings", "committedDate": "2020-10-26T17:31:58Z", "type": "commit"}]}