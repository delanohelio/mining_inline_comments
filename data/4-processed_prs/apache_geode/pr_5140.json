{"pr_number": 5140, "pr_title": "GEODE-8151: Convert hash commands to return RedisResponse", "pr_createdAt": "2020-05-20T14:36:32Z", "pr_url": "https://github.com/apache/geode/pull/5140", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyNDcxNw==", "url": "https://github.com/apache/geode/pull/5140#discussion_r428424717", "bodyText": "What do you think of supporting a flavor of \"integer(boolean)\" that would respond with 1 if true and 0 if false? I've seen a large number of redis commands that do this", "author": "dschneider-pivotal", "createdAt": "2020-05-21T03:25:21Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/HExistsExecutor.java", "diffHunk": "@@ -53,12 +54,7 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n     RedisHash map = getRedisHash(context, key);\n     boolean hasField = map.containsKey(field);\n \n-    if (hasField) {\n-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), EXISTS));\n-    } else {\n-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), NOT_EXISTS));\n-    }\n-\n+    return RedisResponse.integer(hasField ? EXISTS : NOT_EXISTS);", "originalCommit": "2a174b344c5295f8b77c4d9a8048245321025e68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2NTQyMA==", "url": "https://github.com/apache/geode/pull/5140#discussion_r429265420", "bodyText": "Yes, good idea.", "author": "jdeppe-pivotal", "createdAt": "2020-05-22T14:03:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyNDcxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyNTIxMw==", "url": "https://github.com/apache/geode/pull/5140#discussion_r428425213", "bodyText": "a static import of ERROR_ILLEGAL_GLOB would be nice", "author": "dschneider-pivotal", "createdAt": "2020-05-21T03:27:27Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/HScanExecutor.java", "diffHunk": "@@ -95,28 +94,24 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n           count = Coder.bytesToInt(bytes);\n         }\n       } catch (NumberFormatException e) {\n-        command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_COUNT));\n-        return;\n+        return RedisResponse.error(ERROR_COUNT);\n       }\n     }\n \n     if (count < 0) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_COUNT));\n-      return;\n+      return RedisResponse.error(ERROR_COUNT);\n     }\n \n     try {\n       matchPattern = convertGlobToRegex(globMatchPattern);\n     } catch (PatternSyntaxException e) {\n-      command.setResponse(\n-          Coder.getErrorResponse(context.getByteBufAllocator(), RedisConstants.ERROR_ILLEGAL_GLOB));\n-      return;\n+      return RedisResponse.error(RedisConstants.ERROR_ILLEGAL_GLOB);", "originalCommit": "2a174b344c5295f8b77c4d9a8048245321025e68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56f7b6499a52327e39d9b218f9089e2d497d8b00", "url": "https://github.com/apache/geode/commit/56f7b6499a52327e39d9b218f9089e2d497d8b00", "message": "GEODE-8151: Convert hash commands to return RedisResponse\n\n- Convert hash tests to use assertj", "committedDate": "2020-05-22T13:48:37Z", "type": "commit"}, {"oid": "c528e7fe68de24de1a020c8bd94acf62d84e9f08", "url": "https://github.com/apache/geode/commit/c528e7fe68de24de1a020c8bd94acf62d84e9f08", "message": "Review updates", "committedDate": "2020-05-22T13:53:30Z", "type": "commit"}, {"oid": "4d9f67a7576124754931d866c489647c955c5a97", "url": "https://github.com/apache/geode/commit/4d9f67a7576124754931d866c489647c955c5a97", "message": "Merge changes", "committedDate": "2020-05-22T14:02:39Z", "type": "commit"}, {"oid": "4d9f67a7576124754931d866c489647c955c5a97", "url": "https://github.com/apache/geode/commit/4d9f67a7576124754931d866c489647c955c5a97", "message": "Merge changes", "committedDate": "2020-05-22T14:02:39Z", "type": "forcePushed"}]}