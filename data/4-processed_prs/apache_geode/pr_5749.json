{"pr_number": 5749, "pr_title": "GEODE-8711: Enable SLOWLOG Redis command", "pr_createdAt": "2020-11-13T22:16:05Z", "pr_url": "https://github.com/apache/geode/pull/5749", "timeline": [{"oid": "8fe5abf37ee9b3eded452f8973ee70c02f84f465", "url": "https://github.com/apache/geode/commit/8fe5abf37ee9b3eded452f8973ee70c02f84f465", "message": "GEODE-8711: Enable SLOWLOG Redis command", "committedDate": "2020-11-13T22:14:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM4NzgyMg==", "url": "https://github.com/apache/geode/pull/5749#discussion_r524387822", "bodyText": "I don't think you need the new MaximumParameterRequirements(3, ERROR_SYNTAX) here.  In Redis, when more than 3 parameters are provided, the following error is returned: ERR Unknown subcommand or wrong number of arguments for '[WHATEVER OPTION YOU TYPED]'. Try SLOWLOG HELP. (not syntax error).", "author": "sabbey37", "createdAt": "2020-11-16T16:13:24Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -265,6 +267,9 @@\n   FLUSHDB(new FlushAllExecutor(), UNSUPPORTED, new MaximumParameterRequirements(2, ERROR_SYNTAX)),\n   INFO(new InfoExecutor(), UNSUPPORTED, new MaximumParameterRequirements(2, ERROR_SYNTAX)),\n   SHUTDOWN(new ShutDownExecutor(), UNSUPPORTED, new MaximumParameterRequirements(2, ERROR_SYNTAX)),\n+  SLOWLOG(new SlowlogExecutor(), UNSUPPORTED, new MinimumParameterRequirements(2)\n+      .and(new MaximumParameterRequirements(3, ERROR_SYNTAX))\n+      .and(new SlowlogParameterRequirements())),", "originalCommit": "8fe5abf37ee9b3eded452f8973ee70c02f84f465", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUzOTc5Mg==", "url": "https://github.com/apache/geode/pull/5749#discussion_r525539792", "bodyText": "Yeah, we refactored the validation considerably. I would agree that using validators for specific commands should be avoided in general. But for specific commands with unique requirements (SLOWLOG takes three subcommands, one of which takes an optional argument, etc.) that a specific validator helps make the code more readable. The validator has responsibility for examining the arguments, and the executor has the responsibility for carrying out the (pre-validated) command.", "author": "ringles", "createdAt": "2020-11-17T21:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM4NzgyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM5MDAxNA==", "url": "https://github.com/apache/geode/pull/5749#discussion_r524390014", "bodyText": "We should add tests for the error messages that get returned if less than 2 arguments are provided (so just SLOWLOG) and if more than 3 arguments are provided (like SLOWLOG get 2 extraArg)", "author": "sabbey37", "createdAt": "2020-11-16T16:16:12Z", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/internal/executor/server/AbstractSlowlogIntegrationTest.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import java.util.List;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+import redis.clients.jedis.Protocol;\n+import redis.clients.jedis.util.Slowlog;\n+\n+import org.apache.geode.test.awaitility.GeodeAwaitility;\n+import org.apache.geode.test.dunit.rules.RedisPortSupplier;\n+\n+public abstract class AbstractSlowlogIntegrationTest implements RedisPortSupplier {", "originalCommit": "8fe5abf37ee9b3eded452f8973ee70c02f84f465", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0MDAwNQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r525540005", "bodyText": "Yup, we've added more tests. Thanks!", "author": "ringles", "createdAt": "2020-11-17T21:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM5MDAxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM5MDczMg==", "url": "https://github.com/apache/geode/pull/5749#discussion_r524390732", "bodyText": "It would be nice to put the full error message here and verify that it matches exactly (so hasMessage() vs. hasMessageContaining() (if we end up returning the same messages as Redis).", "author": "sabbey37", "createdAt": "2020-11-16T16:17:09Z", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/internal/executor/server/AbstractSlowlogIntegrationTest.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import java.util.List;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+import redis.clients.jedis.Protocol;\n+import redis.clients.jedis.util.Slowlog;\n+\n+import org.apache.geode.test.awaitility.GeodeAwaitility;\n+import org.apache.geode.test.dunit.rules.RedisPortSupplier;\n+\n+public abstract class AbstractSlowlogIntegrationTest implements RedisPortSupplier {\n+\n+  private Jedis jedis;\n+  private static final int REDIS_CLIENT_TIMEOUT =\n+      Math.toIntExact(GeodeAwaitility.getTimeout().toMillis());\n+\n+  @Before\n+  public void setUp() {\n+    jedis = new Jedis(\"localhost\", getPort(), REDIS_CLIENT_TIMEOUT);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    jedis.close();\n+  }\n+\n+  abstract int getExposedPort();\n+\n+  @Test\n+  public void shouldReturnEmptyArray_whenGetSubcommandSpecified() {\n+    List<Slowlog> actualResult = jedis.slowlogGet();\n+\n+    assertThat(actualResult.size()).isEqualTo(0);\n+  }\n+\n+  @Test\n+  public void shouldReturnEmptyArray_whenGetSubcommandSpecified_withLengthParameter() {\n+    List<Slowlog> actualResult = jedis.slowlogGet(200);\n+\n+    assertThat(actualResult.size()).isEqualTo(0);\n+  }\n+\n+  @Test\n+  public void shouldReturnEmptyArray_whenGetSubcommandSpecified_withNegativeLengthParameter() {\n+    List<Slowlog> actualResult = jedis.slowlogGet(-200);\n+\n+    assertThat(actualResult.size()).isEqualTo(0);\n+  }\n+\n+  @Test\n+  public void shouldReturnZero_whenLenSubcommandSpecified() {\n+    Long length = jedis.slowlogLen();\n+\n+    assertThat(length).isEqualTo(0L);\n+  }\n+\n+  @Test\n+  public void shouldReturnOK_whenResetSubcommandSpecified() {\n+    String response = jedis.slowlogReset();\n+\n+    assertThat(response).isEqualTo(\"OK\");\n+  }\n+\n+  @Test\n+  public void shouldThrowException_IfResetGivenAParameter() {\n+    assertThatThrownBy(\n+        () -> jedis.sendCommand(\n+            Protocol.Command.SLOWLOG, \"RESET\", \"Superfluous\"))\n+                .hasMessageContaining(\"ERR Unknown subcommand or wrong number of arguments for\");", "originalCommit": "8fe5abf37ee9b3eded452f8973ee70c02f84f465", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0MDI4NQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r525540285", "bodyText": "Done! Good call!", "author": "ringles", "createdAt": "2020-11-17T21:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM5MDczMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ0MDk0Mw==", "url": "https://github.com/apache/geode/pull/5749#discussion_r524440943", "bodyText": "I think we'd want to put the command.getStringKey() here instead of the command (if we want to match what Redis does, not sure if this was discussed and we decided to do something different).", "author": "sabbey37", "createdAt": "2020-11-16T17:22:01Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ParameterRequirements/SlowlogParameterRequirements.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.ParameterRequirements;\n+\n+import static org.apache.geode.redis.internal.RedisConstants.ERROR_NOT_INTEGER;\n+\n+import org.apache.geode.redis.internal.netty.Command;\n+import org.apache.geode.redis.internal.netty.ExecutionHandlerContext;\n+\n+public class SlowlogParameterRequirements implements ParameterRequirements {\n+  @Override\n+  public void checkParameters(Command command, ExecutionHandlerContext context) {\n+    if (command.getProcessedCommand().size() == 3) {\n+      if (!command.getStringKey().toLowerCase().equals(\"get\")) {\n+        throw new RedisParametersMismatchException(\n+            unknownSubcommandOrWrongNumberOfArgumentsErrorMessage(command.getCommandType()\n+                .name()));\n+      }\n+      try {\n+        Integer.parseInt(new String(command.getProcessedCommand().get(2)));\n+      } catch (NumberFormatException nex) {\n+        throw new RedisParametersMismatchException(ERROR_NOT_INTEGER);\n+      }\n+    }\n+  }\n+\n+  public String unknownSubcommandOrWrongNumberOfArgumentsErrorMessage(String command) {\n+    String result;\n+    result =\n+        String.format(\"Unknown subcommand or wrong number of arguments for '%s'. Try SLOWLOG HELP.\",\n+            command);", "originalCommit": "8fe5abf37ee9b3eded452f8973ee70c02f84f465", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0MDQ1Mw==", "url": "https://github.com/apache/geode/pull/5749#discussion_r525540453", "bodyText": "This was fixed in the refactor.", "author": "ringles", "createdAt": "2020-11-17T21:36:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ0MDk0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ0MjI5NQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r524442295", "bodyText": "It seems kind of weird that we have this hard coded to len... right now if I type in slowlog sjls, I get ERR Unknown subcommand or wrong number of arguments for 'len'. Try SLOWLOG HELP. instead of ERR Unknown subcommand or wrong number of arguments for 'sjls'. Try SLOWLOG HELP. It also might be good to add this Error to the RedisConstants class.", "author": "sabbey37", "createdAt": "2020-11-16T17:24:13Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/server/SlowlogExecutor.java", "diffHunk": "@@ -30,7 +27,21 @@\n   @Override\n   public RedisResponse executeCommand(Command command,\n       ExecutionHandlerContext context) {\n-    List<ByteArrayWrapper> values = new ArrayList<ByteArrayWrapper>();\n-    return RedisResponse.array(values);\n+    String subCommand = command.getStringKey();\n+    if (subCommand.toLowerCase().equals(\"get\")) {\n+      return RedisResponse.emptyArray();\n+    } else if (subCommand.toLowerCase().equals(\"len\")) {\n+      return RedisResponse.integer(0);\n+    } else if (subCommand.toLowerCase().equals(\"reset\")) {\n+      return RedisResponse.ok();\n+    }\n+    throw new RedisParametersMismatchException(wrongNumberOfArgumentsErrorMessage());\n+  }\n+\n+  public String wrongNumberOfArgumentsErrorMessage() {\n+    String result;\n+    result = String\n+        .format(\"Unknown subcommand or wrong number of arguments for 'len'. Try SLOWLOG HELP.\");\n+    return result;", "originalCommit": "8fe5abf37ee9b3eded452f8973ee70c02f84f465", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0MDU5MA==", "url": "https://github.com/apache/geode/pull/5749#discussion_r525540590", "bodyText": "Also fixed when we refactored. Thanks!", "author": "ringles", "createdAt": "2020-11-17T21:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ0MjI5NQ=="}], "type": "inlineReview"}, {"oid": "ff66a77dc36e81cad17c833617b016420e52e1c3", "url": "https://github.com/apache/geode/commit/ff66a77dc36e81cad17c833617b016420e52e1c3", "message": "GEODE-8711: refactor SLOWLOG param validation, improve tests", "committedDate": "2020-11-17T21:31:24Z", "type": "commit"}, {"oid": "f7c5b90729f006d35629fbbca2ea743fe22c2c75", "url": "https://github.com/apache/geode/commit/f7c5b90729f006d35629fbbca2ea743fe22c2c75", "message": "GEODE-8711: format with spA and not just IntelliJ rules", "committedDate": "2020-11-17T21:57:23Z", "type": "commit"}, {"oid": "6fe62defdf27ef457dd2f907ce39bae0f2716dc7", "url": "https://github.com/apache/geode/commit/6fe62defdf27ef457dd2f907ce39bae0f2716dc7", "message": "GEODE-8711: doc, test update", "committedDate": "2020-11-17T22:17:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEzNzU3NA==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526137574", "bodyText": "This method is never used.  Sorry I didn't notice this in the first review.", "author": "sabbey37", "createdAt": "2020-11-18T14:38:44Z", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/internal/executor/server/AbstractSlowlogIntegrationTest.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import java.util.List;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+import redis.clients.jedis.Protocol;\n+import redis.clients.jedis.util.Slowlog;\n+\n+import org.apache.geode.test.awaitility.GeodeAwaitility;\n+import org.apache.geode.test.dunit.rules.RedisPortSupplier;\n+\n+public abstract class AbstractSlowlogIntegrationTest implements RedisPortSupplier {\n+\n+  private Jedis jedis;\n+  private static final int REDIS_CLIENT_TIMEOUT =\n+      Math.toIntExact(GeodeAwaitility.getTimeout().toMillis());\n+\n+  @Before\n+  public void setUp() {\n+    jedis = new Jedis(\"localhost\", getPort(), REDIS_CLIENT_TIMEOUT);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    jedis.close();\n+  }\n+\n+  abstract int getExposedPort();", "originalCommit": "6fe62defdf27ef457dd2f907ce39bae0f2716dc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1NTAyNg==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526255026", "bodyText": "Done.", "author": "ringles", "createdAt": "2020-11-18T17:05:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEzNzU3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODEzMw==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526168133", "bodyText": "We could use assertThat(actualResult).isEmpty() here (and for the ones below) .  This might be preferable because if the result is not empty, the error message will display the contents of the array rather than just the length.  Sorry I didn't notice this in the first review.", "author": "sabbey37", "createdAt": "2020-11-18T15:17:19Z", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/internal/executor/server/AbstractSlowlogIntegrationTest.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import java.util.List;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+import redis.clients.jedis.Protocol;\n+import redis.clients.jedis.util.Slowlog;\n+\n+import org.apache.geode.test.awaitility.GeodeAwaitility;\n+import org.apache.geode.test.dunit.rules.RedisPortSupplier;\n+\n+public abstract class AbstractSlowlogIntegrationTest implements RedisPortSupplier {\n+\n+  private Jedis jedis;\n+  private static final int REDIS_CLIENT_TIMEOUT =\n+      Math.toIntExact(GeodeAwaitility.getTimeout().toMillis());\n+\n+  @Before\n+  public void setUp() {\n+    jedis = new Jedis(\"localhost\", getPort(), REDIS_CLIENT_TIMEOUT);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    jedis.close();\n+  }\n+\n+  abstract int getExposedPort();\n+\n+  @Test\n+  public void shouldReturnEmptyArray_whenGetSubcommandSpecified() {\n+    List<Slowlog> actualResult = jedis.slowlogGet();\n+\n+    assertThat(actualResult.size()).isEqualTo(0);", "originalCommit": "6fe62defdf27ef457dd2f907ce39bae0f2716dc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwNzg2MA==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526307860", "bodyText": "Done!", "author": "ringles", "createdAt": "2020-11-18T18:00:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODEzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3MzEyOA==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526173128", "bodyText": "I think LGTM is suggesting that this could just be an else, instead of an else if", "author": "sabbey37", "createdAt": "2020-11-18T15:23:27Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ParameterRequirements/SlowlogParameterRequirements.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.ParameterRequirements;\n+\n+import static org.apache.geode.redis.internal.RedisConstants.ERROR_NOT_INTEGER;\n+import static org.apache.geode.redis.internal.RedisConstants.ERROR_UNKNOWN_SLOWLOG_SUBCOMMAND;\n+\n+import org.apache.geode.redis.internal.netty.Command;\n+import org.apache.geode.redis.internal.netty.ExecutionHandlerContext;\n+\n+public class SlowlogParameterRequirements implements ParameterRequirements {\n+  @Override\n+  public void checkParameters(Command command, ExecutionHandlerContext context) {\n+    int numberOfArguments = command.getProcessedCommand().size();\n+\n+    if (numberOfArguments < 2) {\n+      throw new RedisParametersMismatchException(command.wrongNumberOfArgumentsErrorMessage());\n+    } else if (numberOfArguments == 2) {\n+      confirmKnownSubcommands(command);\n+    } else if (numberOfArguments == 3) {\n+      confirmArgumentsToGetSubcommand(command);\n+    } else if (numberOfArguments > 3) {", "originalCommit": "6fe62defdf27ef457dd2f907ce39bae0f2716dc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5NDk5OQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526194999", "bodyText": "Functionally it's the same. I agree with LGTM that it's technically redundant... but I think it's marginally more readable, making clear to a human reading it what the intent is. Perhaps we could add a comment instead?", "author": "ringles", "createdAt": "2020-11-18T15:50:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3MzEyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM1NjgxMQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526356811", "bodyText": "That totally makes sense. I'm not sure how much LGTM alerts matter? @jdeppe-pivotal do you know?", "author": "sabbey37", "createdAt": "2020-11-18T19:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3MzEyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4NDM2MQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526384361", "bodyText": "Demoted to comment, just to keep LGTM happy.", "author": "ringles", "createdAt": "2020-11-18T20:04:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3MzEyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3NzM5NA==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526177394", "bodyText": "You can delete this since the method is never used.", "author": "sabbey37", "createdAt": "2020-11-18T15:28:39Z", "path": "geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/server/SlowlogNativeRedisAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.server;\n+\n+import org.junit.ClassRule;\n+\n+import org.apache.geode.NativeRedisTestRule;\n+\n+public class SlowlogNativeRedisAcceptanceTest extends AbstractSlowlogIntegrationTest {\n+\n+  @ClassRule\n+  public static NativeRedisTestRule redis = new NativeRedisTestRule();\n+\n+  @Override\n+  public int getPort() {\n+    return redis.getPort();\n+  }\n+\n+  @Override\n+  int getExposedPort() {\n+    return redis.getExposedPort();\n+  }", "originalCommit": "6fe62defdf27ef457dd2f907ce39bae0f2716dc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1NDgyNg==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526254826", "bodyText": "Done.", "author": "ringles", "createdAt": "2020-11-18T17:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3NzM5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3NzgyMQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526177821", "bodyText": "You can delete this since the method is never used.", "author": "sabbey37", "createdAt": "2020-11-18T15:29:10Z", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/internal/executor/server/SlowlogIntegrationTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.server;\n+\n+import static org.apache.geode.distributed.ConfigurationProperties.LOG_LEVEL;\n+\n+import org.junit.ClassRule;\n+\n+import org.apache.geode.redis.GeodeRedisServerRule;\n+\n+public class SlowlogIntegrationTest extends AbstractSlowlogIntegrationTest {\n+\n+  @ClassRule\n+  public static GeodeRedisServerRule server = new GeodeRedisServerRule()\n+      .withProperty(LOG_LEVEL, \"info\");\n+\n+  @Override\n+  public int getPort() {\n+    return server.getPort();\n+  }\n+\n+  @Override\n+  public int getExposedPort() {\n+    return getPort();\n+  }", "originalCommit": "6fe62defdf27ef457dd2f907ce39bae0f2716dc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1NDc0MQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526254741", "bodyText": "Also done.", "author": "ringles", "createdAt": "2020-11-18T17:04:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3NzgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3OTIxMQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526179211", "bodyText": "Good call adding this to the README! We also need to add it to the list of unsupported commands in this file: redis_api_for_geode.html.md.erb", "author": "sabbey37", "createdAt": "2020-11-18T15:30:50Z", "path": "geode-redis/README.md", "diffHunk": "@@ -200,16 +200,16 @@ start server \\\n |                    \t| SINTER                                             \t| CLUSTER INFO                  \t|\n |                    \t| SINTERSTORE                                        \t| CLUSTER KEYSLOT                 \t|\n |                    \t| SISMEMBER                                          \t| CLUSTER MEET                     \t|\n-|                    \t| SMOVE                                              \t| CLUSTER MYID                   \t|\n-|                    \t| SPOP                                               \t| CLUSTER NODES                 \t|\n-|                    \t| SRANDMEMBER                                        \t| CLUSTER REPLICAS                 \t|\n-|                    \t| SSCAN                                              \t| CLUSTER REPLICATE              \t|\n-|                    \t| STRLEN                                             \t| CLUSTER RESET                  \t|\n-|                    \t| SUNION                                             \t| CLUSTER SAVECONFIG                |\n-|                    \t| SUNIONSTORE                                        \t| CLUSTER SET-CONFIG-EPOCH          |\n-|                    \t| TIME                                               \t| CLUSTER SETSLOT                 \t|\n-|                    \t| UNLINK [1]                                         \t| CLUSTER SLAVES                  \t|\n-|                    \t|                                                    \t| CLUSTER SLOTS                 \t|\n+|                    \t| SLOWLOG                                            \t| CLUSTER MYID                   \t|", "originalCommit": "6fe62defdf27ef457dd2f907ce39bae0f2716dc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1Mjg2NQ==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526252865", "bodyText": "Done, thanks!", "author": "ringles", "createdAt": "2020-11-18T17:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3OTIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE4NTcyOA==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526185728", "bodyText": "Looks like this is one of those situations where Redis uses a long instead of an integer. We could also add a test for this.", "author": "sabbey37", "createdAt": "2020-11-18T15:39:01Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ParameterRequirements/SlowlogParameterRequirements.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.ParameterRequirements;\n+\n+import static org.apache.geode.redis.internal.RedisConstants.ERROR_NOT_INTEGER;\n+import static org.apache.geode.redis.internal.RedisConstants.ERROR_UNKNOWN_SLOWLOG_SUBCOMMAND;\n+\n+import org.apache.geode.redis.internal.netty.Command;\n+import org.apache.geode.redis.internal.netty.ExecutionHandlerContext;\n+\n+public class SlowlogParameterRequirements implements ParameterRequirements {\n+  @Override\n+  public void checkParameters(Command command, ExecutionHandlerContext context) {\n+    int numberOfArguments = command.getProcessedCommand().size();\n+\n+    if (numberOfArguments < 2) {\n+      throw new RedisParametersMismatchException(command.wrongNumberOfArgumentsErrorMessage());\n+    } else if (numberOfArguments == 2) {\n+      confirmKnownSubcommands(command);\n+    } else if (numberOfArguments == 3) {\n+      confirmArgumentsToGetSubcommand(command);\n+    } else if (numberOfArguments > 3) {\n+      throw new RedisParametersMismatchException(\n+          String.format(ERROR_UNKNOWN_SLOWLOG_SUBCOMMAND, command.getStringKey()));\n+    }\n+  }\n+\n+  private void confirmKnownSubcommands(Command command) {\n+    if (!command.getStringKey().toLowerCase().equals(\"reset\") &&\n+        !command.getStringKey().toLowerCase().equals(\"len\") &&\n+        !command.getStringKey().toLowerCase().equals(\"get\")) {\n+      throw new RedisParametersMismatchException(\n+          String.format(ERROR_UNKNOWN_SLOWLOG_SUBCOMMAND, command.getStringKey()));\n+    }\n+  }\n+\n+  private void confirmArgumentsToGetSubcommand(Command command) {\n+    if (!command.getStringKey().toLowerCase().equals(\"get\")) {\n+      throw new RedisParametersMismatchException(\n+          String.format(ERROR_UNKNOWN_SLOWLOG_SUBCOMMAND, command.getStringKey()));\n+    }\n+    try {\n+      Integer.parseInt(new String(command.getProcessedCommand().get(2)));", "originalCommit": "6fe62defdf27ef457dd2f907ce39bae0f2716dc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1MjcyMg==", "url": "https://github.com/apache/geode/pull/5749#discussion_r526252722", "bodyText": "Test added, and passing.", "author": "ringles", "createdAt": "2020-11-18T17:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE4NTcyOA=="}], "type": "inlineReview"}, {"oid": "dec4b25ee599a87ab54e88f061de284663c32714", "url": "https://github.com/apache/geode/commit/dec4b25ee599a87ab54e88f061de284663c32714", "message": "GEODE-8711: unused method cleanup, long argument, readme tweak", "committedDate": "2020-11-18T17:10:00Z", "type": "commit"}, {"oid": "f5217c1d640f14a650892d7a6299f60a458b8638", "url": "https://github.com/apache/geode/commit/f5217c1d640f14a650892d7a6299f60a458b8638", "message": "GEODE-8711: hush LGTM alert", "committedDate": "2020-11-18T19:40:02Z", "type": "commit"}]}