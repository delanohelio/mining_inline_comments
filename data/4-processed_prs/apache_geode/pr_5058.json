{"pr_number": 5058, "pr_title": "GEODE-8089: more redis set ops use functions", "pr_createdAt": "2020-05-06T01:28:31Z", "pr_url": "https://github.com/apache/geode/pull/5058", "timeline": [{"oid": "f3e17829657d03920f72cf88e4b27b909b967bc6", "url": "https://github.com/apache/geode/commit/f3e17829657d03920f72cf88e4b27b909b967bc6", "message": "scard now uses function", "committedDate": "2020-05-08T00:45:24Z", "type": "commit"}, {"oid": "149d2ae526c902c1639f5c99de31db291c066bb3", "url": "https://github.com/apache/geode/commit/149d2ae526c902c1639f5c99de31db291c066bb3", "message": "sismember now uses function", "committedDate": "2020-05-08T00:53:52Z", "type": "commit"}, {"oid": "ad7135c5a72f39c1e7b6823c812651fbc06fee1d", "url": "https://github.com/apache/geode/commit/ad7135c5a72f39c1e7b6823c812651fbc06fee1d", "message": "srandmember now uses a function", "committedDate": "2020-05-08T01:06:36Z", "type": "commit"}, {"oid": "a7084de70be2d4481a121145e1c8e768e465861f", "url": "https://github.com/apache/geode/commit/a7084de70be2d4481a121145e1c8e768e465861f", "message": "spop now uses a function", "committedDate": "2020-05-08T01:16:57Z", "type": "commit"}, {"oid": "39ac47a1a6fcb601623b2a9513a09ba6e46ed82f", "url": "https://github.com/apache/geode/commit/39ac47a1a6fcb601623b2a9513a09ba6e46ed82f", "message": "fixed build warnings\nspop now removes RedisSet from region if it was emptied", "committedDate": "2020-05-08T01:19:59Z", "type": "commit"}, {"oid": "464f6e09185dabb7730a64934346d26a44bd2ecc", "url": "https://github.com/apache/geode/commit/464f6e09185dabb7730a64934346d26a44bd2ecc", "message": "sscan now uses a function", "committedDate": "2020-05-08T01:26:54Z", "type": "commit"}, {"oid": "75d8f79f5c342f1f586209adc35bc1a17082de19", "url": "https://github.com/apache/geode/commit/75d8f79f5c342f1f586209adc35bc1a17082de19", "message": "renamed members to smembers", "committedDate": "2020-05-08T01:31:10Z", "type": "commit"}, {"oid": "ac86d46a3835cd9007d4eebcd96f59a9ede20a52", "url": "https://github.com/apache/geode/commit/ac86d46a3835cd9007d4eebcd96f59a9ede20a52", "message": "fixed compiliation issues from merge", "committedDate": "2020-05-08T01:32:06Z", "type": "commit"}, {"oid": "831e94d0fa6420ed7b9a48fe33d0d245a83347c0", "url": "https://github.com/apache/geode/commit/831e94d0fa6420ed7b9a48fe33d0d245a83347c0", "message": "spotless", "committedDate": "2020-05-08T01:32:54Z", "type": "commit"}, {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "url": "https://github.com/apache/geode/commit/3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "message": "renamed members to smembers", "committedDate": "2020-05-08T01:40:14Z", "type": "commit"}, {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "url": "https://github.com/apache/geode/commit/3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "message": "renamed members to smembers", "committedDate": "2020-05-08T01:40:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNTgzOQ==", "url": "https://github.com/apache/geode/pull/5058#discussion_r421915839", "bodyText": "I don't think returnList can ever be null.  In that case, this check is unnecessary", "author": "prettyClouds", "createdAt": "2020-05-08T03:26:25Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/SScanExecutor.java", "diffHunk": "@@ -108,53 +99,17 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       return;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    List<ByteArrayWrapper> returnList =\n-        (List<ByteArrayWrapper>) getIteration(new ArrayList<>(set), matchPattern,\n-            count, cursor);\n-\n+    RedisSetCommands redisSetCommands =\n+        new RedisSetCommandsFunctionExecutor(context.getRegionProvider().getSetRegion());\n+    List<Object> returnList = redisSetCommands.sscan(key, matchPattern, count, cursor);\n+    if (returnList == null) {\n+      returnList = Collections.emptyList();\n+    }", "originalCommit": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNTQzMQ==", "url": "https://github.com/apache/geode/pull/5058#discussion_r421935431", "bodyText": "done", "author": "dschneider-pivotal", "createdAt": "2020-05-08T04:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNTgzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNzIzOA==", "url": "https://github.com/apache/geode/pull/5058#discussion_r421917238", "bodyText": "does the calling code differentiate between null and an empty collection? If not, can we just return an empty collection and get rid of the upstream null checks.", "author": "prettyClouds", "createdAt": "2020-05-08T03:31:49Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/RedisSet.java", "diffHunk": "@@ -98,6 +102,156 @@ public static boolean del(Region<ByteArrayWrapper, RedisSet> region,\n     }\n   }\n \n+  public static int scard(Region<ByteArrayWrapper, RedisSet> region, ByteArrayWrapper key) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.size();\n+    } else {\n+      return -1;\n+    }\n+  }\n+\n+  public static boolean sismember(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, ByteArrayWrapper member) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.contains(member);\n+    } else {\n+      return false;\n+    }\n+  }\n+\n+  public static Collection<ByteArrayWrapper> srandmember(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, int count) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.srandmember(count);\n+    } else {\n+      return null;\n+    }\n+  }\n+\n+  public static Collection<ByteArrayWrapper> spop(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, int popCount) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.doSpop(region, key, popCount);\n+    } else {\n+      return null;\n+    }\n+  }\n+\n+  public static List<Object> sscan(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, Pattern matchPattern, int count, int cursor) {\n+    RedisSet RedisSet = region.get(key);\n+    if (RedisSet != null) {\n+      return RedisSet.doSscan(matchPattern, count, cursor);\n+    } else {\n+      return null;", "originalCommit": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNTQ5MQ==", "url": "https://github.com/apache/geode/pull/5058#discussion_r421935491", "bodyText": "done", "author": "dschneider-pivotal", "createdAt": "2020-05-08T04:47:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNzIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNzM1Ng==", "url": "https://github.com/apache/geode/pull/5058#discussion_r421917356", "bodyText": "does the calling code differentiate between null and an empty collection? If not, can we just return an empty collection and get rid of the upstream null checks.", "author": "prettyClouds", "createdAt": "2020-05-08T03:32:25Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/RedisSet.java", "diffHunk": "@@ -98,6 +102,156 @@ public static boolean del(Region<ByteArrayWrapper, RedisSet> region,\n     }\n   }\n \n+  public static int scard(Region<ByteArrayWrapper, RedisSet> region, ByteArrayWrapper key) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.size();\n+    } else {\n+      return -1;\n+    }\n+  }\n+\n+  public static boolean sismember(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, ByteArrayWrapper member) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.contains(member);\n+    } else {\n+      return false;\n+    }\n+  }\n+\n+  public static Collection<ByteArrayWrapper> srandmember(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, int count) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.srandmember(count);\n+    } else {\n+      return null;\n+    }\n+  }\n+\n+  public static Collection<ByteArrayWrapper> spop(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, int popCount) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.doSpop(region, key, popCount);\n+    } else {\n+      return null;", "originalCommit": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNjAxNg==", "url": "https://github.com/apache/geode/pull/5058#discussion_r421936016", "bodyText": "done", "author": "dschneider-pivotal", "createdAt": "2020-05-08T04:49:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNzM1Ng=="}], "type": "inlineReview"}, {"oid": "d96c75f8aa68497a054cfcc4d40330ac52db8e91", "url": "https://github.com/apache/geode/commit/d96c75f8aa68497a054cfcc4d40330ac52db8e91", "message": "review feedback", "committedDate": "2020-05-08T04:55:00Z", "type": "commit"}]}