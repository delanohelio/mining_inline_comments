{"pr_number": 5271, "pr_title": "Add Mass Test Run pipeline.", "pr_createdAt": "2020-06-17T21:13:16Z", "pr_url": "https://github.com/apache/geode/pull/5271", "timeline": [{"oid": "7b45b4e6d6dec91b31b5e00915d886c5d4897aa0", "url": "https://github.com/apache/geode/commit/7b45b4e6d6dec91b31b5e00915d886c5d4897aa0", "message": "Add Mass Test Run pipeline.\n\nThis commit includes:\n* Creating a new test run pipeline that runs the distributed test\n  multiple number of times.\n* Update the meta pipeline to add mass test run pipeline.\n* Logs into concourse using Vault creds to get fly token.\n* Poll for test run completion, to trigger report-generation.\n* Use 'try' around test job, so we can trigger on it's completion state", "committedDate": "2020-06-17T21:11:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1Mzg4OQ==", "url": "https://github.com/apache/geode/pull/5271#discussion_r441853889", "bodyText": "You might want to rename the variable if now you are looking at failed and succeeded builds.", "author": "mhansonp", "createdAt": "2020-06-17T21:49:45Z", "path": "ci/bin/concourse_job_performance.py", "diffHunk": "@@ -58,7 +60,7 @@ def main(url, team, pipeline, job, number_of_builds, authorization_cookie, threa\n     builds = get_builds_summary_sheet(url, team, pipeline, job, number_of_builds+10, authorization_cookie)\n \n     build_to_examine = get_builds_to_examine(builds, number_of_builds)\n-    expected_failed_builds = [int(b['name']) for b in build_to_examine if b['status'] == 'failed']\n+    expected_failed_builds = [int(b['name']) for b in build_to_examine if b['status'] in ['failed', 'succeeded']]", "originalCommit": "7b45b4e6d6dec91b31b5e00915d886c5d4897aa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2MTQ1MA==", "url": "https://github.com/apache/geode/pull/5271#discussion_r441861450", "bodyText": "done", "author": "rhoughton-pivot", "createdAt": "2020-06-17T22:08:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1Mzg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1ODE3Nw==", "url": "https://github.com/apache/geode/pull/5271#discussion_r441858177", "bodyText": "Please also add enableFeature mass-test-run to ci/pipelines/meta/deploy_meta.sh line ~285 just below where pr is enabled", "author": "onichols-pivotal", "createdAt": "2020-06-17T22:00:22Z", "path": "ci/pipelines/meta/deploy_meta.sh", "diffHunk": "@@ -256,6 +256,7 @@ set +x\n if [[ \"${GEODE_FORK}\" != \"${UPSTREAM_FORK}\" ]]; then\n   echo \"Disabling unnecessary jobs for forks.\"\n   pauseJobs ${META_PIPELINE} set-reaper-pipeline\n+  pauseJobs ${META_PIPELINE} set-mass-test-run-pipeline", "originalCommit": "7b45b4e6d6dec91b31b5e00915d886c5d4897aa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2MTQxMg==", "url": "https://github.com/apache/geode/pull/5271#discussion_r441861412", "bodyText": "done", "author": "rhoughton-pivot", "createdAt": "2020-06-17T22:08:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1ODE3Nw=="}], "type": "inlineReview"}, {"oid": "1741b97c00cc25b36beeb957d03320c1594fe0ff", "url": "https://github.com/apache/geode/commit/1741b97c00cc25b36beeb957d03320c1594fe0ff", "message": "Rename variale following feedback from original author", "committedDate": "2020-06-17T22:06:39Z", "type": "commit"}, {"oid": "5d5fa4b721f15858c1b91ce0fce0fa1734ab7f96", "url": "https://github.com/apache/geode/commit/5d5fa4b721f15858c1b91ce0fce0fa1734ab7f96", "message": "Enable mass-test-run for apache/develop\n\nAuthored-by: Robert Houghton <rhoughton@pivotal.io>", "committedDate": "2020-06-17T22:08:09Z", "type": "commit"}, {"oid": "b559ae6b149e3aa4ee11ea20b6ec37aba1526b44", "url": "https://github.com/apache/geode/commit/b559ae6b149e3aa4ee11ea20b6ec37aba1526b44", "message": "use 'enableFeature' better in deploy_meta", "committedDate": "2020-06-17T22:10:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2OTE2MQ==", "url": "https://github.com/apache/geode/pull/5271#discussion_r441869161", "bodyText": "@mhansonp I know there's been discussion in the past about how much value we get out of 100 vs 200.  Can you mention the benefits of 200 vs 100?  My back-of-the-envelope calculations suggest 200 takes about 4 days, while 100 could be finished in a weekend (and about $900 cheaper, if anyone cares)", "author": "onichols-pivotal", "createdAt": "2020-06-17T22:30:23Z", "path": "ci/pipelines/shared/jinja.variables.yml", "diffHunk": "@@ -67,6 +67,7 @@ java_test_versions:\n \n metadata:\n   initial_version: 1.14.0-((semver-prerelease-token)).0\n+  mass_test_run_iterations: 200", "originalCommit": "b559ae6b149e3aa4ee11ea20b6ec37aba1526b44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNzczMw==", "url": "https://github.com/apache/geode/pull/5271#discussion_r441907733", "bodyText": "Basically, 200 gives us a big enough sample size to tell the 1 off from the 2 or more. I think running 100 might be fine. Especially if the report generator script is doing a last 200 check.", "author": "mhansonp", "createdAt": "2020-06-18T00:45:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2OTE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQyOTY4OA==", "url": "https://github.com/apache/geode/pull/5271#discussion_r442429688", "bodyText": "Why would I run 100 jobs against SHA abcdef and then run a report containing 200 jobs mixed of abcdef and 123456 ?", "author": "rhoughton-pivot", "createdAt": "2020-06-18T18:43:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2OTE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzMDk2OA==", "url": "https://github.com/apache/geode/pull/5271#discussion_r442430968", "bodyText": "So you would use the SHA as normal, but you would run 100 tests and report against the last 200. That will give us a historical result set for the last two weeks. Or to just keep it simple, we can just do 100 and report on 100.", "author": "mhansonp", "createdAt": "2020-06-18T18:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2OTE2MQ=="}], "type": "inlineReview"}]}