{"pr_number": 4720, "pr_title": "GEODE-6532: Use implementation, not compile, as build configuration", "pr_createdAt": "2020-02-19T16:41:59Z", "pr_url": "https://github.com/apache/geode/pull/4720", "timeline": [{"oid": "6637a2d80a5e394b58dc1ddf40ef1da2e37241b9", "url": "https://github.com/apache/geode/commit/6637a2d80a5e394b58dc1ddf40ef1da2e37241b9", "message": "GEODE-6532: Use implementation, not compile, as build configuration", "committedDate": "2020-02-19T16:33:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwMTMwNQ==", "url": "https://github.com/apache/geode/pull/4720#discussion_r383601305", "bodyText": "why api and not merely implementation here?", "author": "Bill", "createdAt": "2020-02-25T00:52:26Z", "path": "geode-gfsh/build.gradle", "diffHunk": "@@ -21,26 +21,33 @@ apply from: \"${project.projectDir}/../gradle/publish-java.gradle\"\n \n dependencies {\n     api(platform(project(':boms:geode-all-bom')))\n-    compile(project(':geode-core'))\n-    compile(project(':geode-logging'))\n-    compile(project(':geode-membership'))\n-    compile(project(':geode-serialization'))\n-    compile(project(':geode-unsafe'))\n \n-    compile('com.healthmarketscience.rmiio:rmiio')\n+    api(project(':geode-core'))\n+    api(project(':geode-common'))", "originalCommit": "6637a2d80a5e394b58dc1ddf40ef1da2e37241b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NjU4NQ==", "url": "https://github.com/apache/geode/pull/4720#discussion_r384066585", "bodyText": "In geode-gfsh, the non-internal, public abstract class org.apache.geode.management.cli.GfshCommand has public methods such as authorize that takes a ResourePermission.Resource, defined in the  geode-core project. My understanding is, this makes geode-core an API-level dependency of geode-gfsh.\nSimilar reasoning for geode-common, in that it uses org.apache.geode.annotations.Immutable in a non-internal abstract class.", "author": "rhoughton-pivot", "createdAt": "2020-02-25T19:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwMTMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExNjM4MQ==", "url": "https://github.com/apache/geode/pull/4720#discussion_r384116381", "bodyText": "Golly, I didn't know that GfshCommand was meant to be extended by users. I see it's in a non-internal package. Does that mean we really have to actually support users extending that thing? @jinmeiliao do you have an opinion? Seems to me like it was a mistake to make GfshCommand non-internal.", "author": "Bill", "createdAt": "2020-02-25T20:46:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwMTMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEyNTE2MA==", "url": "https://github.com/apache/geode/pull/4720#discussion_r384125160", "bodyText": "for a long time there was a vision to make Geode more modular, with each module providing its own gfsh commands (the ability for users to also write their own gfsh commands is sort of a side-effect of this...I too am curious if any users actually have done so).  If we wanted to change course and say that gfsh is a fixed, non-extensible set of commands, we could also get rid of fast-classpath-scanner and a lot of other baggage...", "author": "onichols-pivotal", "createdAt": "2020-02-25T21:05:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwMTMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzNjIyNg==", "url": "https://github.com/apache/geode/pull/4720#discussion_r384136226", "bodyText": "Yes, gfsh commands are meant to be extensible, you can write your own gfsh commands and have them loaded in the command executor. GfshCommand is public for that reason.", "author": "jinmeiliao", "createdAt": "2020-02-25T21:27:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwMTMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3OTE4MA==", "url": "https://github.com/apache/geode/pull/4720#discussion_r384179180", "bodyText": "ok thanks. @rhoughton-pivot this code is fine.", "author": "Bill", "createdAt": "2020-02-25T23:00:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwMTMwNQ=="}], "type": "inlineReview"}, {"oid": "c65b4c589281870747860b18cf0b2b94fe93e043", "url": "https://github.com/apache/geode/commit/c65b4c589281870747860b18cf0b2b94fe93e043", "message": "Merge remote-tracking branch 'origin/develop' into feature/GEODE-6532", "committedDate": "2020-02-26T17:29:55Z", "type": "commit"}]}