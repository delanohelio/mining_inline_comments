{"pr_number": 5071, "pr_title": "GEODE-8091: fix AuthenticationRequiredException when starting a locat\u2026", "pr_createdAt": "2020-05-07T23:36:09Z", "pr_url": "https://github.com/apache/geode/pull/5071", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAzMTIyNQ==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422031225", "bodyText": "Regular users will likely never notice this property is deprecated as they rarely check the source code.\nThe documentation is already updated , though, but maybe it's a good idea to log a warning as part of the start locator command when the property is actually used?.", "author": "jujoramos", "createdAt": "2020-05-08T09:01:05Z", "path": "geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java", "diffHunk": "@@ -1144,7 +1144,10 @@\n    * <U>Allowed values</U>: true or false\n    * </p>\n    * <U>Since</U>: GemFire 8.0\n+   *\n+   * @deprecated Since Geode 1.6 use \"import cluster-configuration\" command instead\n    */\n+  @Deprecated", "originalCommit": "b689e1ba3e5d3ad72beb672a4bce3c3ac89cd69f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMjgzMA==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422222830", "bodyText": "the gfsh help message  contains the \"deprecated\" explanation since 1.6. Bug logging a warning seems a good idea, but not the scope of this PR.", "author": "jinmeiliao", "createdAt": "2020-05-08T15:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAzMTIyNQ=="}], "type": "inlineReview"}, {"oid": "c66590b7d1706fbcf826f16953cef444c14f629d", "url": "https://github.com/apache/geode/commit/c66590b7d1706fbcf826f16953cef444c14f629d", "message": "GEODE-8091: fix AuthenticationRequiredException when starting a locator with security manager and preload cluster configuration.\n\nsuppress compiler warning\n\nsuppress compiler warning", "committedDate": "2020-05-08T16:29:39Z", "type": "commit"}, {"oid": "c66590b7d1706fbcf826f16953cef444c14f629d", "url": "https://github.com/apache/geode/commit/c66590b7d1706fbcf826f16953cef444c14f629d", "message": "GEODE-8091: fix AuthenticationRequiredException when starting a locator with security manager and preload cluster configuration.\n\nsuppress compiler warning\n\nsuppress compiler warning", "committedDate": "2020-05-08T16:29:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MjM4NA==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422272384", "bodyText": "Might want to log this at debug or trace level.", "author": "kirklund", "createdAt": "2020-05-08T17:31:35Z", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/InternalConfigurationPersistenceService.java", "diffHunk": "@@ -841,8 +842,15 @@ private Configuration readConfiguration(File groupConfigDir) throws IOException\n     return configuration;\n   }\n \n-  private String getDeployedBy() {\n-    Subject subject = cache.getSecurityService().getSubject();\n+  String getDeployedBy() {\n+    Subject subject = null;\n+    try {\n+      subject = cache.getSecurityService().getSubject();\n+    } catch (AuthenticationRequiredException exception) {\n+      // ignored. No user logged in for the deployment", "originalCommit": "c66590b7d1706fbcf826f16953cef444c14f629d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5NjMxNg==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422296316", "bodyText": "done.", "author": "jinmeiliao", "createdAt": "2020-05-08T18:20:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MjM4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NDE3OQ==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422274179", "bodyText": "In general, I would encourage you to not use @SuppressWarnings(\"deprecation\"). All that does it hide how much we're using deprecated APIs, whereas I think we need to be aware of how much deprecated code we're calling and eventually change it. If it's hidden we'll forget and not revisit it.", "author": "kirklund", "createdAt": "2020-05-08T17:35:20Z", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartLocatorCommand.java", "diffHunk": "@@ -139,6 +139,7 @@ public ResultModel startLocator(\n \n   }\n \n+  @SuppressWarnings(\"deprecation\")", "originalCommit": "c66590b7d1706fbcf826f16953cef444c14f629d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5NTg1Mg==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422295852", "bodyText": "our build would fail if we don't suppress it. I believe Jake just put in a check to prevent the compiler to build successfully if we introduced warning. but in this case, we had to use the deprecated variable since \"start locator\" still needs to support it.", "author": "jinmeiliao", "createdAt": "2020-05-08T18:19:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NDE3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwNzkyOQ==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422307929", "bodyText": "Hmm. That is actually really bad if true, because many of the API are not properly type and are raw. So in writing new tests, there would be a real problem.", "author": "mhansonp", "createdAt": "2020-05-08T18:43:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NDE3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxNTQ4OQ==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422315489", "bodyText": "Fix the root problem. We need to stop propagating bad habits and warnings. If the method is deprecated, don't use it.", "author": "pivotal-jbarrett", "createdAt": "2020-05-08T18:58:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NDE3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwODU5Ng==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422408596", "bodyText": "Fix the root problem. We need to stop propagating bad habits and warnings. If the method is deprecated, don't use it.\n\n@pivotal-jbarrett the code needs to refer to the ConfigurationProperties.LOAD_CLUSTER_CONFIGURATION_FROM_DIR directly, hence the warning, are you saying we need to change it to a string literal here?", "author": "jinmeiliao", "createdAt": "2020-05-08T22:44:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NDE3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0NDI2MQ==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422444261", "bodyText": "If the use of this property is truly deprecated then it should not be deprecated. If there is some legitimate reason for us of a deprecated property or method then isolate it and suppress that single statement. Suppressing this entire method could mask other issues. Suppression should be at the smallest scope possible.", "author": "pivotal-jbarrett", "createdAt": "2020-05-09T02:41:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NDE3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0NTIyOA==", "url": "https://github.com/apache/geode/pull/5071#discussion_r422445228", "bodyText": "Replace the offending line 197 with a method like this:\n  @SuppressWarnings(\"deprecation\")\n  private void setLoadClusterConfigurationFromDir(Properties gemfireProperties,\n                                                  boolean loadSharedConfigurationFromDirectory) {\n    StartMemberUtils.setPropertyIfNotNull(gemfireProperties,\n        ConfigurationProperties.LOAD_CLUSTER_CONFIGURATION_FROM_DIR,\n        loadSharedConfigurationFromDirectory);\n  }\nThis isolates the suppression to the single statement that needs it.", "author": "pivotal-jbarrett", "createdAt": "2020-05-09T02:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NDE3OQ=="}], "type": "inlineReview"}, {"oid": "d6ad3009f5cd701764ffc0c97fdbb81a9598b0e7", "url": "https://github.com/apache/geode/commit/d6ad3009f5cd701764ffc0c97fdbb81a9598b0e7", "message": "review changes.", "committedDate": "2020-05-08T18:19:38Z", "type": "commit"}, {"oid": "26ed13af02c05b7cfde85c5c432877466a6e0c0f", "url": "https://github.com/apache/geode/commit/26ed13af02c05b7cfde85c5c432877466a6e0c0f", "message": "retrigger CI", "committedDate": "2020-05-08T20:46:06Z", "type": "commit"}, {"oid": "d6338f47aa5eaf071f2d1321b9a4729fe4c16772", "url": "https://github.com/apache/geode/commit/d6338f47aa5eaf071f2d1321b9a4729fe4c16772", "message": "revert deprecation changes since it's not related to this PR", "committedDate": "2020-05-10T15:55:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzMjM3MA==", "url": "https://github.com/apache/geode/pull/5071#discussion_r423332370", "bodyText": "Are you missing a {} in the string.", "author": "mhansonp", "createdAt": "2020-05-11T21:32:22Z", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/InternalConfigurationPersistenceService.java", "diffHunk": "@@ -841,8 +842,16 @@ private Configuration readConfiguration(File groupConfigDir) throws IOException\n     return configuration;\n   }\n \n-  private String getDeployedBy() {\n-    Subject subject = cache.getSecurityService().getSubject();\n+  String getDeployedBy() {\n+    Subject subject = null;\n+    try {\n+      subject = cache.getSecurityService().getSubject();\n+    } catch (AuthenticationRequiredException e) {\n+      // ignored. No user logged in for the deployment\n+      // this would happen for offline commands like \"start locator\" and loading the cluster config\n+      // from a directory\n+      logger.debug(\"getDeployedBy: no user information is found.\", e.getMessage());", "originalCommit": "d6338f47aa5eaf071f2d1321b9a4729fe4c16772", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzNDc1Nw==", "url": "https://github.com/apache/geode/pull/5071#discussion_r423334757", "bodyText": "Might be good to check for directory existence before we assume the creates were successful, or just issue the delete on the directory pre-emptively.", "author": "mhansonp", "createdAt": "2020-05-11T21:37:34Z", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/LoadClusterConfigFromDirIntegrationTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.distributed;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Collection;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import org.apache.geode.distributed.internal.InternalConfigurationPersistenceService;\n+import org.apache.geode.examples.SimpleSecurityManager;\n+import org.apache.geode.management.configuration.Deployment;\n+import org.apache.geode.management.internal.configuration.domain.Configuration;\n+import org.apache.geode.test.compiler.JarBuilder;\n+import org.apache.geode.test.junit.rules.LocatorStarterRule;\n+\n+public class LoadClusterConfigFromDirIntegrationTest {\n+  @Rule\n+  public LocatorStarterRule locator = new LocatorStarterRule();\n+\n+  private File clusterConfigDir;\n+\n+  @Before\n+  public void before() throws IOException {\n+    clusterConfigDir = new File(locator.getWorkingDir(), \"cluster_config\");\n+    File groupDir = new File(clusterConfigDir, \"cluster\");\n+    groupDir.mkdirs();\n+    File jarFile = new File(groupDir, \"test.jar\");\n+    JarBuilder jarBuilder = new JarBuilder();", "originalCommit": "d6338f47aa5eaf071f2d1321b9a4729fe4c16772", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1NzY2NA==", "url": "https://github.com/apache/geode/pull/5071#discussion_r423357664", "bodyText": "Can the \"getDeployedBy()\" be called other than \"offline command like start locator\"; can this be valid exception in those cases that needs to be handled. Sorry, looking at the code I could not make it if its called in offline mode.", "author": "agingade", "createdAt": "2020-05-11T22:32:27Z", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/InternalConfigurationPersistenceService.java", "diffHunk": "@@ -841,8 +842,16 @@ private Configuration readConfiguration(File groupConfigDir) throws IOException\n     return configuration;\n   }\n \n-  private String getDeployedBy() {\n-    Subject subject = cache.getSecurityService().getSubject();\n+  String getDeployedBy() {\n+    Subject subject = null;\n+    try {\n+      subject = cache.getSecurityService().getSubject();\n+    } catch (AuthenticationRequiredException e) {", "originalCommit": "d6338f47aa5eaf071f2d1321b9a4729fe4c16772", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzMTM2Mw==", "url": "https://github.com/apache/geode/pull/5071#discussion_r423431363", "bodyText": "only for offline commands we can get this kind of exception. For online commands, there is always a subject present.", "author": "jinmeiliao", "createdAt": "2020-05-12T02:50:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1NzY2NA=="}], "type": "inlineReview"}]}