{"pr_number": 13498, "pr_title": "[FLINK-19430][docs-zh] Translate page datastream_tutorial into Chinese", "pr_createdAt": "2020-09-28T07:15:08Z", "pr_url": "https://github.com/apache/flink/pull/13498", "timeline": [{"oid": "84117cb7218b909348d276f2803bdb11c8a81ba9", "url": "https://github.com/apache/flink/commit/84117cb7218b909348d276f2803bdb11c8a81ba9", "message": "[FLINK-19430][docs-zh] Translate page datastream_tutorial into Chinese", "committedDate": "2020-09-28T07:11:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyNzYwNw==", "url": "https://github.com/apache/flink/pull/13498#discussion_r497227607", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7279\u522b\u662f\uff0cApache Flink [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) \u4e00\u76f4\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\uff0c\u4e5f\u662f\u5feb\u901f\u83b7\u5f97\u5e2e\u52a9\u7684\u597d\u65b9\u6cd5\u3002\n          \n          \n            \n            \u7279\u522b\u662f\uff0cApache Flink [\u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/zh/community.html#mailing-lists) \u4e00\u76f4\u88ab\u8bc4\u4e3a\u6240\u6709Apache\u9879\u76ee\u4e2d\u6700\u6d3b\u8dc3\u7684\u4e00\u4e2a\uff0c\u4e5f\u662f\u5feb\u901f\u83b7\u5f97\u5e2e\u52a9\u7684\u597d\u65b9\u6cd5\u3002", "author": "dianfu", "createdAt": "2020-09-30T03:50:58Z", "path": "docs/dev/python/datastream_tutorial.zh.md", "diffHunk": "@@ -22,76 +22,77 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Apache Flink offers a DataStream API for building robust, stateful streaming applications. It provides fine-grained control over state and time, which allows for the implementation of advanced event-driven systems. In this step-by-step guide, you\u2019ll learn how to build a simple streaming application with PyFlink and the DataStream API.\n+Apache Flink \u63d0\u4f9b\u4e86 DataStream API\uff0c\u7528\u4e8e\u6784\u5efa\u5065\u58ee\u7684\u3001\u6709\u72b6\u6001\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u5bf9\u72b6\u6001\u548c\u65f6\u95f4\u7ec6\u7c92\u5ea6\u63a7\u5236\uff0c\u4ece\u800c\u5141\u8bb8\u5b9e\u73b0\u9ad8\u7ea7\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u3002\n+\u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 PyFlink \u548c DataStream API \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\n \n * This will be replaced by the TOC\n {:toc}\n \n-## What Will You Be Building? \n+## \u4f60\u5c06\u6784\u5efa\u4ec0\u4e48\uff1f\n \n-In this tutorial, you will learn how to write a simple Python DataStream job.\n-The pipeline will read data from a non-empty collection and write the results to the local file system.\n+\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python DataStream \u4f5c\u4e1a\u3002\n+\u4f8b\u5b50\u662f\u4ece\u975e\u7a7a\u96c6\u5408\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002\n \n-## Prerequisites\n+## \u5148\u51b3\u6761\u4ef6\n \n-This walkthrough assumes that you have some familiarity with Python, but you should be able to follow along even if you come from a different programming language.\n+\u672c\u6559\u7a0b\u5047\u8bbe\u4f60\u5bf9 Python \u6709\u4e00\u5b9a\u7684\u719f\u6089\uff0c\u4f46\u662f\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u4e5f\u5e94\u8be5\u80fd\u591f\u5b66\u4f1a\u3002\n \n-## Help, I\u2019m Stuck! \n+## \u5e2e\u52a9\uff0c\u6211\u5f88\u56f0\u60d1\uff01\n \n-If you get stuck, check out the [community support resources](https://flink.apache.org/zh/community.html).\n-In particular, Apache Flink's [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) consistently ranks as one of the most active of any Apache project and a great way to get help quickly. \n+\u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [community support resources](https://flink.apache.org/zh/community.html)\u3002\n+\u7279\u522b\u662f\uff0cApache Flink [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) \u4e00\u76f4\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\uff0c\u4e5f\u662f\u5feb\u901f\u83b7\u5f97\u5e2e\u52a9\u7684\u597d\u65b9\u6cd5\u3002", "originalCommit": "84117cb7218b909348d276f2803bdb11c8a81ba9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyNzg0MQ==", "url": "https://github.com/apache/flink/pull/13498#discussion_r497227841", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [community support resources](https://flink.apache.org/zh/community.html)\u3002\n          \n          \n            \n            \u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [\u793e\u533a\u652f\u6301\u8d44\u6e90](https://flink.apache.org/zh/community.html)\u3002", "author": "dianfu", "createdAt": "2020-09-30T03:51:43Z", "path": "docs/dev/python/datastream_tutorial.zh.md", "diffHunk": "@@ -22,76 +22,77 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Apache Flink offers a DataStream API for building robust, stateful streaming applications. It provides fine-grained control over state and time, which allows for the implementation of advanced event-driven systems. In this step-by-step guide, you\u2019ll learn how to build a simple streaming application with PyFlink and the DataStream API.\n+Apache Flink \u63d0\u4f9b\u4e86 DataStream API\uff0c\u7528\u4e8e\u6784\u5efa\u5065\u58ee\u7684\u3001\u6709\u72b6\u6001\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u5bf9\u72b6\u6001\u548c\u65f6\u95f4\u7ec6\u7c92\u5ea6\u63a7\u5236\uff0c\u4ece\u800c\u5141\u8bb8\u5b9e\u73b0\u9ad8\u7ea7\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u3002\n+\u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 PyFlink \u548c DataStream API \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\n \n * This will be replaced by the TOC\n {:toc}\n \n-## What Will You Be Building? \n+## \u4f60\u5c06\u6784\u5efa\u4ec0\u4e48\uff1f\n \n-In this tutorial, you will learn how to write a simple Python DataStream job.\n-The pipeline will read data from a non-empty collection and write the results to the local file system.\n+\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python DataStream \u4f5c\u4e1a\u3002\n+\u4f8b\u5b50\u662f\u4ece\u975e\u7a7a\u96c6\u5408\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002\n \n-## Prerequisites\n+## \u5148\u51b3\u6761\u4ef6\n \n-This walkthrough assumes that you have some familiarity with Python, but you should be able to follow along even if you come from a different programming language.\n+\u672c\u6559\u7a0b\u5047\u8bbe\u4f60\u5bf9 Python \u6709\u4e00\u5b9a\u7684\u719f\u6089\uff0c\u4f46\u662f\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u4e5f\u5e94\u8be5\u80fd\u591f\u5b66\u4f1a\u3002\n \n-## Help, I\u2019m Stuck! \n+## \u5e2e\u52a9\uff0c\u6211\u5f88\u56f0\u60d1\uff01\n \n-If you get stuck, check out the [community support resources](https://flink.apache.org/zh/community.html).\n-In particular, Apache Flink's [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) consistently ranks as one of the most active of any Apache project and a great way to get help quickly. \n+\u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [community support resources](https://flink.apache.org/zh/community.html)\u3002", "originalCommit": "84117cb7218b909348d276f2803bdb11c8a81ba9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyODA5OA==", "url": "https://github.com/apache/flink/pull/13498#discussion_r497228098", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ## \u5982\u4f55\u8ddf\u8fdb\n          \n          \n            \n            ## \u600e\u6837\u8ddf\u7740\u6559\u7a0b\u7ec3\u4e60", "author": "dianfu", "createdAt": "2020-09-30T03:52:45Z", "path": "docs/dev/python/datastream_tutorial.zh.md", "diffHunk": "@@ -22,76 +22,77 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Apache Flink offers a DataStream API for building robust, stateful streaming applications. It provides fine-grained control over state and time, which allows for the implementation of advanced event-driven systems. In this step-by-step guide, you\u2019ll learn how to build a simple streaming application with PyFlink and the DataStream API.\n+Apache Flink \u63d0\u4f9b\u4e86 DataStream API\uff0c\u7528\u4e8e\u6784\u5efa\u5065\u58ee\u7684\u3001\u6709\u72b6\u6001\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u5bf9\u72b6\u6001\u548c\u65f6\u95f4\u7ec6\u7c92\u5ea6\u63a7\u5236\uff0c\u4ece\u800c\u5141\u8bb8\u5b9e\u73b0\u9ad8\u7ea7\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u3002\n+\u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 PyFlink \u548c DataStream API \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\n \n * This will be replaced by the TOC\n {:toc}\n \n-## What Will You Be Building? \n+## \u4f60\u5c06\u6784\u5efa\u4ec0\u4e48\uff1f\n \n-In this tutorial, you will learn how to write a simple Python DataStream job.\n-The pipeline will read data from a non-empty collection and write the results to the local file system.\n+\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python DataStream \u4f5c\u4e1a\u3002\n+\u4f8b\u5b50\u662f\u4ece\u975e\u7a7a\u96c6\u5408\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002\n \n-## Prerequisites\n+## \u5148\u51b3\u6761\u4ef6\n \n-This walkthrough assumes that you have some familiarity with Python, but you should be able to follow along even if you come from a different programming language.\n+\u672c\u6559\u7a0b\u5047\u8bbe\u4f60\u5bf9 Python \u6709\u4e00\u5b9a\u7684\u719f\u6089\uff0c\u4f46\u662f\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u4e5f\u5e94\u8be5\u80fd\u591f\u5b66\u4f1a\u3002\n \n-## Help, I\u2019m Stuck! \n+## \u5e2e\u52a9\uff0c\u6211\u5f88\u56f0\u60d1\uff01\n \n-If you get stuck, check out the [community support resources](https://flink.apache.org/zh/community.html).\n-In particular, Apache Flink's [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) consistently ranks as one of the most active of any Apache project and a great way to get help quickly. \n+\u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [community support resources](https://flink.apache.org/zh/community.html)\u3002\n+\u7279\u522b\u662f\uff0cApache Flink [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) \u4e00\u76f4\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\uff0c\u4e5f\u662f\u5feb\u901f\u83b7\u5f97\u5e2e\u52a9\u7684\u597d\u65b9\u6cd5\u3002\n \n-## How To Follow Along\n+## \u5982\u4f55\u8ddf\u8fdb", "originalCommit": "84117cb7218b909348d276f2803bdb11c8a81ba9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyODM1Nw==", "url": "https://github.com/apache/flink/pull/13498#discussion_r497228357", "bodyText": "\u9996\u5148\uff0c\u4f60\u9700\u8981\u5728\u4f60\u7684\u7535\u8111\u4e0a\u51c6\u5907\u4ee5\u4e0b\u73af\u5883\uff1a", "author": "dianfu", "createdAt": "2020-09-30T03:53:42Z", "path": "docs/dev/python/datastream_tutorial.zh.md", "diffHunk": "@@ -22,76 +22,77 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Apache Flink offers a DataStream API for building robust, stateful streaming applications. It provides fine-grained control over state and time, which allows for the implementation of advanced event-driven systems. In this step-by-step guide, you\u2019ll learn how to build a simple streaming application with PyFlink and the DataStream API.\n+Apache Flink \u63d0\u4f9b\u4e86 DataStream API\uff0c\u7528\u4e8e\u6784\u5efa\u5065\u58ee\u7684\u3001\u6709\u72b6\u6001\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u5bf9\u72b6\u6001\u548c\u65f6\u95f4\u7ec6\u7c92\u5ea6\u63a7\u5236\uff0c\u4ece\u800c\u5141\u8bb8\u5b9e\u73b0\u9ad8\u7ea7\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u3002\n+\u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 PyFlink \u548c DataStream API \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\n \n * This will be replaced by the TOC\n {:toc}\n \n-## What Will You Be Building? \n+## \u4f60\u5c06\u6784\u5efa\u4ec0\u4e48\uff1f\n \n-In this tutorial, you will learn how to write a simple Python DataStream job.\n-The pipeline will read data from a non-empty collection and write the results to the local file system.\n+\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python DataStream \u4f5c\u4e1a\u3002\n+\u4f8b\u5b50\u662f\u4ece\u975e\u7a7a\u96c6\u5408\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002\n \n-## Prerequisites\n+## \u5148\u51b3\u6761\u4ef6\n \n-This walkthrough assumes that you have some familiarity with Python, but you should be able to follow along even if you come from a different programming language.\n+\u672c\u6559\u7a0b\u5047\u8bbe\u4f60\u5bf9 Python \u6709\u4e00\u5b9a\u7684\u719f\u6089\uff0c\u4f46\u662f\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u4e5f\u5e94\u8be5\u80fd\u591f\u5b66\u4f1a\u3002\n \n-## Help, I\u2019m Stuck! \n+## \u5e2e\u52a9\uff0c\u6211\u5f88\u56f0\u60d1\uff01\n \n-If you get stuck, check out the [community support resources](https://flink.apache.org/zh/community.html).\n-In particular, Apache Flink's [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) consistently ranks as one of the most active of any Apache project and a great way to get help quickly. \n+\u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [community support resources](https://flink.apache.org/zh/community.html)\u3002\n+\u7279\u522b\u662f\uff0cApache Flink [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) \u4e00\u76f4\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\uff0c\u4e5f\u662f\u5feb\u901f\u83b7\u5f97\u5e2e\u52a9\u7684\u597d\u65b9\u6cd5\u3002\n \n-## How To Follow Along\n+## \u5982\u4f55\u8ddf\u8fdb\n \n-If you want to follow along, you will require a computer with: ", "originalCommit": "84117cb7218b909348d276f2803bdb11c8a81ba9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyODc4NQ==", "url": "https://github.com/apache/flink/pull/13498#discussion_r497228785", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4f7f\u7528 Python DataStream API \u9700\u8981\u5b89\u88c5 PyFlink\uff0c\u5b89\u88c5\u5730\u5740 [PyPI](https://pypi.org/project/apache-flink/) \uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 `pip` \u5feb\u901f\u5b89\u88c5\u3002 \n          \n          \n            \n            \u4f7f\u7528 Python DataStream API \u9700\u8981\u5b89\u88c5 PyFlink\uff0cPyFlink \u53d1\u5e03\u5728 [PyPI](https://pypi.org/project/apache-flink/) \u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 `pip` \u5feb\u901f\u5b89\u88c5\u3002", "author": "dianfu", "createdAt": "2020-09-30T03:55:22Z", "path": "docs/dev/python/datastream_tutorial.zh.md", "diffHunk": "@@ -22,76 +22,77 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Apache Flink offers a DataStream API for building robust, stateful streaming applications. It provides fine-grained control over state and time, which allows for the implementation of advanced event-driven systems. In this step-by-step guide, you\u2019ll learn how to build a simple streaming application with PyFlink and the DataStream API.\n+Apache Flink \u63d0\u4f9b\u4e86 DataStream API\uff0c\u7528\u4e8e\u6784\u5efa\u5065\u58ee\u7684\u3001\u6709\u72b6\u6001\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u5bf9\u72b6\u6001\u548c\u65f6\u95f4\u7ec6\u7c92\u5ea6\u63a7\u5236\uff0c\u4ece\u800c\u5141\u8bb8\u5b9e\u73b0\u9ad8\u7ea7\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u3002\n+\u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 PyFlink \u548c DataStream API \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\n \n * This will be replaced by the TOC\n {:toc}\n \n-## What Will You Be Building? \n+## \u4f60\u5c06\u6784\u5efa\u4ec0\u4e48\uff1f\n \n-In this tutorial, you will learn how to write a simple Python DataStream job.\n-The pipeline will read data from a non-empty collection and write the results to the local file system.\n+\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python DataStream \u4f5c\u4e1a\u3002\n+\u4f8b\u5b50\u662f\u4ece\u975e\u7a7a\u96c6\u5408\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002\n \n-## Prerequisites\n+## \u5148\u51b3\u6761\u4ef6\n \n-This walkthrough assumes that you have some familiarity with Python, but you should be able to follow along even if you come from a different programming language.\n+\u672c\u6559\u7a0b\u5047\u8bbe\u4f60\u5bf9 Python \u6709\u4e00\u5b9a\u7684\u719f\u6089\uff0c\u4f46\u662f\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u4e5f\u5e94\u8be5\u80fd\u591f\u5b66\u4f1a\u3002\n \n-## Help, I\u2019m Stuck! \n+## \u5e2e\u52a9\uff0c\u6211\u5f88\u56f0\u60d1\uff01\n \n-If you get stuck, check out the [community support resources](https://flink.apache.org/zh/community.html).\n-In particular, Apache Flink's [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) consistently ranks as one of the most active of any Apache project and a great way to get help quickly. \n+\u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [community support resources](https://flink.apache.org/zh/community.html)\u3002\n+\u7279\u522b\u662f\uff0cApache Flink [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) \u4e00\u76f4\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\uff0c\u4e5f\u662f\u5feb\u901f\u83b7\u5f97\u5e2e\u52a9\u7684\u597d\u65b9\u6cd5\u3002\n \n-## How To Follow Along\n+## \u5982\u4f55\u8ddf\u8fdb\n \n-If you want to follow along, you will require a computer with: \n+\u5982\u679c\u4f60\u60f3\u5b66\u4e60\uff0c\u4f60\u9700\u8981\u4e00\u53f0\u88c5\u6709\u4ee5\u4e0b\u73af\u5883\u7684\u7535\u8111:\n \n * Java 8 or 11\n * Python 3.5, 3.6 or 3.7\n \n-Using Python DataStream API requires installing PyFlink, which is available on [PyPI](https://pypi.org/project/apache-flink/) and can be easily installed using `pip`. \n+\u4f7f\u7528 Python DataStream API \u9700\u8981\u5b89\u88c5 PyFlink\uff0c\u5b89\u88c5\u5730\u5740 [PyPI](https://pypi.org/project/apache-flink/) \uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 `pip` \u5feb\u901f\u5b89\u88c5\u3002 ", "originalCommit": "84117cb7218b909348d276f2803bdb11c8a81ba9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyODg0MA==", "url": "https://github.com/apache/flink/pull/13498#discussion_r497228840", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e00\u65e6 PyFlink \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199 Python DataStream \u4f5c\u4e1a\u3002\n          \n          \n            \n            \u4e00\u65e6 PyFlink \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199 Python DataStream \u4f5c\u4e1a\u4e86\u3002", "author": "dianfu", "createdAt": "2020-09-30T03:55:38Z", "path": "docs/dev/python/datastream_tutorial.zh.md", "diffHunk": "@@ -22,76 +22,77 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Apache Flink offers a DataStream API for building robust, stateful streaming applications. It provides fine-grained control over state and time, which allows for the implementation of advanced event-driven systems. In this step-by-step guide, you\u2019ll learn how to build a simple streaming application with PyFlink and the DataStream API.\n+Apache Flink \u63d0\u4f9b\u4e86 DataStream API\uff0c\u7528\u4e8e\u6784\u5efa\u5065\u58ee\u7684\u3001\u6709\u72b6\u6001\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u5bf9\u72b6\u6001\u548c\u65f6\u95f4\u7ec6\u7c92\u5ea6\u63a7\u5236\uff0c\u4ece\u800c\u5141\u8bb8\u5b9e\u73b0\u9ad8\u7ea7\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u3002\n+\u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 PyFlink \u548c DataStream API \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\n \n * This will be replaced by the TOC\n {:toc}\n \n-## What Will You Be Building? \n+## \u4f60\u5c06\u6784\u5efa\u4ec0\u4e48\uff1f\n \n-In this tutorial, you will learn how to write a simple Python DataStream job.\n-The pipeline will read data from a non-empty collection and write the results to the local file system.\n+\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python DataStream \u4f5c\u4e1a\u3002\n+\u4f8b\u5b50\u662f\u4ece\u975e\u7a7a\u96c6\u5408\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002\n \n-## Prerequisites\n+## \u5148\u51b3\u6761\u4ef6\n \n-This walkthrough assumes that you have some familiarity with Python, but you should be able to follow along even if you come from a different programming language.\n+\u672c\u6559\u7a0b\u5047\u8bbe\u4f60\u5bf9 Python \u6709\u4e00\u5b9a\u7684\u719f\u6089\uff0c\u4f46\u662f\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u4e5f\u5e94\u8be5\u80fd\u591f\u5b66\u4f1a\u3002\n \n-## Help, I\u2019m Stuck! \n+## \u5e2e\u52a9\uff0c\u6211\u5f88\u56f0\u60d1\uff01\n \n-If you get stuck, check out the [community support resources](https://flink.apache.org/zh/community.html).\n-In particular, Apache Flink's [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) consistently ranks as one of the most active of any Apache project and a great way to get help quickly. \n+\u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [community support resources](https://flink.apache.org/zh/community.html)\u3002\n+\u7279\u522b\u662f\uff0cApache Flink [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) \u4e00\u76f4\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\uff0c\u4e5f\u662f\u5feb\u901f\u83b7\u5f97\u5e2e\u52a9\u7684\u597d\u65b9\u6cd5\u3002\n \n-## How To Follow Along\n+## \u5982\u4f55\u8ddf\u8fdb\n \n-If you want to follow along, you will require a computer with: \n+\u5982\u679c\u4f60\u60f3\u5b66\u4e60\uff0c\u4f60\u9700\u8981\u4e00\u53f0\u88c5\u6709\u4ee5\u4e0b\u73af\u5883\u7684\u7535\u8111:\n \n * Java 8 or 11\n * Python 3.5, 3.6 or 3.7\n \n-Using Python DataStream API requires installing PyFlink, which is available on [PyPI](https://pypi.org/project/apache-flink/) and can be easily installed using `pip`. \n+\u4f7f\u7528 Python DataStream API \u9700\u8981\u5b89\u88c5 PyFlink\uff0c\u5b89\u88c5\u5730\u5740 [PyPI](https://pypi.org/project/apache-flink/) \uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 `pip` \u5feb\u901f\u5b89\u88c5\u3002 \n \n {% highlight bash %}\n $ python -m pip install apache-flink\n {% endhighlight %}\n \n-Once PyFlink is installed, you can move on to write a Python DataStream job.\n+\u4e00\u65e6 PyFlink \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199 Python DataStream \u4f5c\u4e1a\u3002", "originalCommit": "84117cb7218b909348d276f2803bdb11c8a81ba9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyOTU5MQ==", "url": "https://github.com/apache/flink/pull/13498#discussion_r497229591", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            DataStream API \u5e94\u7528\u7a0b\u5e8f\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u6267\u884c\u73af\u5883\uff08`StreamExecutionEnvironment`\uff09\uff0c\u662f\u6d41\u5f0f\u7a0b\u5e8f\u6267\u884c\u7684\u4e0a\u4e0b\u6587\u3002\u4f60\u5c06\u4f7f\u7528\u5b83\u6765\u8bbe\u7f6e\u4f5c\u4e1a\u7684\u5c5e\u6027(\u4f8b\u5982\u9ed8\u8ba4\u5e76\u884c\u6027\u3001\u91cd\u542f\u7b56\u7565)\u3001\u521b\u5efa\u6e90\uff0c\u5e76\u6700\u7ec8\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002\n          \n          \n            \n            DataStream API \u5e94\u7528\u7a0b\u5e8f\u9996\u5148\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u6267\u884c\u73af\u5883\uff08`StreamExecutionEnvironment`\uff09\uff0c\u8fd9\u662f\u6d41\u5f0f\u7a0b\u5e8f\u6267\u884c\u7684\u4e0a\u4e0b\u6587\u3002\u4f60\u5c06\u901a\u8fc7\u5b83\u6765\u8bbe\u7f6e\u4f5c\u4e1a\u7684\u5c5e\u6027\uff08\u4f8b\u5982\u9ed8\u8ba4\u5e76\u53d1\u5ea6\u3001\u91cd\u542f\u7b56\u7565\u7b49\uff09\u3001\u521b\u5efa\u6e90\u3001\u5e76\u6700\u7ec8\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002", "author": "dianfu", "createdAt": "2020-09-30T03:59:07Z", "path": "docs/dev/python/datastream_tutorial.zh.md", "diffHunk": "@@ -22,76 +22,77 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Apache Flink offers a DataStream API for building robust, stateful streaming applications. It provides fine-grained control over state and time, which allows for the implementation of advanced event-driven systems. In this step-by-step guide, you\u2019ll learn how to build a simple streaming application with PyFlink and the DataStream API.\n+Apache Flink \u63d0\u4f9b\u4e86 DataStream API\uff0c\u7528\u4e8e\u6784\u5efa\u5065\u58ee\u7684\u3001\u6709\u72b6\u6001\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u5bf9\u72b6\u6001\u548c\u65f6\u95f4\u7ec6\u7c92\u5ea6\u63a7\u5236\uff0c\u4ece\u800c\u5141\u8bb8\u5b9e\u73b0\u9ad8\u7ea7\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u3002\n+\u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 PyFlink \u548c DataStream API \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\n \n * This will be replaced by the TOC\n {:toc}\n \n-## What Will You Be Building? \n+## \u4f60\u5c06\u6784\u5efa\u4ec0\u4e48\uff1f\n \n-In this tutorial, you will learn how to write a simple Python DataStream job.\n-The pipeline will read data from a non-empty collection and write the results to the local file system.\n+\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python DataStream \u4f5c\u4e1a\u3002\n+\u4f8b\u5b50\u662f\u4ece\u975e\u7a7a\u96c6\u5408\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002\n \n-## Prerequisites\n+## \u5148\u51b3\u6761\u4ef6\n \n-This walkthrough assumes that you have some familiarity with Python, but you should be able to follow along even if you come from a different programming language.\n+\u672c\u6559\u7a0b\u5047\u8bbe\u4f60\u5bf9 Python \u6709\u4e00\u5b9a\u7684\u719f\u6089\uff0c\u4f46\u662f\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u4e5f\u5e94\u8be5\u80fd\u591f\u5b66\u4f1a\u3002\n \n-## Help, I\u2019m Stuck! \n+## \u5e2e\u52a9\uff0c\u6211\u5f88\u56f0\u60d1\uff01\n \n-If you get stuck, check out the [community support resources](https://flink.apache.org/zh/community.html).\n-In particular, Apache Flink's [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) consistently ranks as one of the most active of any Apache project and a great way to get help quickly. \n+\u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [community support resources](https://flink.apache.org/zh/community.html)\u3002\n+\u7279\u522b\u662f\uff0cApache Flink [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) \u4e00\u76f4\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\uff0c\u4e5f\u662f\u5feb\u901f\u83b7\u5f97\u5e2e\u52a9\u7684\u597d\u65b9\u6cd5\u3002\n \n-## How To Follow Along\n+## \u5982\u4f55\u8ddf\u8fdb\n \n-If you want to follow along, you will require a computer with: \n+\u5982\u679c\u4f60\u60f3\u5b66\u4e60\uff0c\u4f60\u9700\u8981\u4e00\u53f0\u88c5\u6709\u4ee5\u4e0b\u73af\u5883\u7684\u7535\u8111:\n \n * Java 8 or 11\n * Python 3.5, 3.6 or 3.7\n \n-Using Python DataStream API requires installing PyFlink, which is available on [PyPI](https://pypi.org/project/apache-flink/) and can be easily installed using `pip`. \n+\u4f7f\u7528 Python DataStream API \u9700\u8981\u5b89\u88c5 PyFlink\uff0c\u5b89\u88c5\u5730\u5740 [PyPI](https://pypi.org/project/apache-flink/) \uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 `pip` \u5feb\u901f\u5b89\u88c5\u3002 \n \n {% highlight bash %}\n $ python -m pip install apache-flink\n {% endhighlight %}\n \n-Once PyFlink is installed, you can move on to write a Python DataStream job.\n+\u4e00\u65e6 PyFlink \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199 Python DataStream \u4f5c\u4e1a\u3002\n \n-## Writing a Flink Python DataStream API Program\n+## \u7f16\u5199\u4e00\u4e2a Flink Python DataStream API \u7a0b\u5e8f\n \n-DataStream API applications begin by declaring an execution environment (`StreamExecutionEnvironment`), the context in which a streaming program is executed. This is what you will use to set the properties of your job (e.g. default parallelism, restart strategy), create your sources and finally trigger the execution of the job.\n+DataStream API \u5e94\u7528\u7a0b\u5e8f\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u6267\u884c\u73af\u5883\uff08`StreamExecutionEnvironment`\uff09\uff0c\u662f\u6d41\u5f0f\u7a0b\u5e8f\u6267\u884c\u7684\u4e0a\u4e0b\u6587\u3002\u4f60\u5c06\u4f7f\u7528\u5b83\u6765\u8bbe\u7f6e\u4f5c\u4e1a\u7684\u5c5e\u6027(\u4f8b\u5982\u9ed8\u8ba4\u5e76\u884c\u6027\u3001\u91cd\u542f\u7b56\u7565)\u3001\u521b\u5efa\u6e90\uff0c\u5e76\u6700\u7ec8\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002", "originalCommit": "84117cb7218b909348d276f2803bdb11c8a81ba9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzMDE4MA==", "url": "https://github.com/apache/flink/pull/13498#discussion_r497230180", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u6700\u540e\u4e00\u6b65\u662f\u6267\u884c\u771f\u5b9e\u7684 PyFlink DataStream API \u4f5c\u4e1a\u3002PyFlink applications \u662f\u60f0\u6027\u6784\u5efa\u7684\uff0c\u5e76\u4e14\u53ea\u6709\u5b8c\u5168\u6784\u5efa\u4e4b\u540e\u624d\u4f1a\u63d0\u4ea4\u7ed9\u96c6\u7fa4\u6267\u884c\u3002\u8981\u6267\u884c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u53ea\u9700\u7b80\u5355\u7684\u8c03\u7528 `env.execute(job_name)`\u3002\n          \n          \n            \n            \u6700\u540e\u4e00\u6b65\u662f\u6267\u884c\u771f\u5b9e\u7684 PyFlink DataStream API \u4f5c\u4e1a\u3002PyFlink applications \u662f\u61d2\u52a0\u8f7d\u7684\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u5b8c\u5168\u6784\u5efa\u4e4b\u540e\u624d\u4f1a\u63d0\u4ea4\u7ed9\u96c6\u7fa4\u4e0a\u6267\u884c\u3002\u8981\u6267\u884c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u53ea\u9700\u7b80\u5355\u5730\u8c03\u7528 `env.execute(job_name)`\u3002", "author": "dianfu", "createdAt": "2020-09-30T04:01:27Z", "path": "docs/dev/python/datastream_tutorial.zh.md", "diffHunk": "@@ -22,76 +22,77 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Apache Flink offers a DataStream API for building robust, stateful streaming applications. It provides fine-grained control over state and time, which allows for the implementation of advanced event-driven systems. In this step-by-step guide, you\u2019ll learn how to build a simple streaming application with PyFlink and the DataStream API.\n+Apache Flink \u63d0\u4f9b\u4e86 DataStream API\uff0c\u7528\u4e8e\u6784\u5efa\u5065\u58ee\u7684\u3001\u6709\u72b6\u6001\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u5bf9\u72b6\u6001\u548c\u65f6\u95f4\u7ec6\u7c92\u5ea6\u63a7\u5236\uff0c\u4ece\u800c\u5141\u8bb8\u5b9e\u73b0\u9ad8\u7ea7\u4e8b\u4ef6\u9a71\u52a8\u7cfb\u7edf\u3002\n+\u5728\u8fd9\u7bc7\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 PyFlink \u548c DataStream API \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6d41\u5f0f\u5e94\u7528\u7a0b\u5e8f\u3002\n \n * This will be replaced by the TOC\n {:toc}\n \n-## What Will You Be Building? \n+## \u4f60\u5c06\u6784\u5efa\u4ec0\u4e48\uff1f\n \n-In this tutorial, you will learn how to write a simple Python DataStream job.\n-The pipeline will read data from a non-empty collection and write the results to the local file system.\n+\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Python DataStream \u4f5c\u4e1a\u3002\n+\u4f8b\u5b50\u662f\u4ece\u975e\u7a7a\u96c6\u5408\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002\n \n-## Prerequisites\n+## \u5148\u51b3\u6761\u4ef6\n \n-This walkthrough assumes that you have some familiarity with Python, but you should be able to follow along even if you come from a different programming language.\n+\u672c\u6559\u7a0b\u5047\u8bbe\u4f60\u5bf9 Python \u6709\u4e00\u5b9a\u7684\u719f\u6089\uff0c\u4f46\u662f\u5373\u4f7f\u4f60\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u4e5f\u5e94\u8be5\u80fd\u591f\u5b66\u4f1a\u3002\n \n-## Help, I\u2019m Stuck! \n+## \u5e2e\u52a9\uff0c\u6211\u5f88\u56f0\u60d1\uff01\n \n-If you get stuck, check out the [community support resources](https://flink.apache.org/zh/community.html).\n-In particular, Apache Flink's [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) consistently ranks as one of the most active of any Apache project and a great way to get help quickly. \n+\u5982\u679c\u4f60\u6709\u7591\u60d1\uff0c\u53ef\u4ee5\u67e5\u9605 [community support resources](https://flink.apache.org/zh/community.html)\u3002\n+\u7279\u522b\u662f\uff0cApache Flink [user mailing list](https://flink.apache.org/zh/community.html#mailing-lists) \u4e00\u76f4\u662f\u6700\u6d3b\u8dc3\u7684Apache\u9879\u76ee\u4e4b\u4e00\uff0c\u4e5f\u662f\u5feb\u901f\u83b7\u5f97\u5e2e\u52a9\u7684\u597d\u65b9\u6cd5\u3002\n \n-## How To Follow Along\n+## \u5982\u4f55\u8ddf\u8fdb\n \n-If you want to follow along, you will require a computer with: \n+\u5982\u679c\u4f60\u60f3\u5b66\u4e60\uff0c\u4f60\u9700\u8981\u4e00\u53f0\u88c5\u6709\u4ee5\u4e0b\u73af\u5883\u7684\u7535\u8111:\n \n * Java 8 or 11\n * Python 3.5, 3.6 or 3.7\n \n-Using Python DataStream API requires installing PyFlink, which is available on [PyPI](https://pypi.org/project/apache-flink/) and can be easily installed using `pip`. \n+\u4f7f\u7528 Python DataStream API \u9700\u8981\u5b89\u88c5 PyFlink\uff0c\u5b89\u88c5\u5730\u5740 [PyPI](https://pypi.org/project/apache-flink/) \uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 `pip` \u5feb\u901f\u5b89\u88c5\u3002 \n \n {% highlight bash %}\n $ python -m pip install apache-flink\n {% endhighlight %}\n \n-Once PyFlink is installed, you can move on to write a Python DataStream job.\n+\u4e00\u65e6 PyFlink \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199 Python DataStream \u4f5c\u4e1a\u3002\n \n-## Writing a Flink Python DataStream API Program\n+## \u7f16\u5199\u4e00\u4e2a Flink Python DataStream API \u7a0b\u5e8f\n \n-DataStream API applications begin by declaring an execution environment (`StreamExecutionEnvironment`), the context in which a streaming program is executed. This is what you will use to set the properties of your job (e.g. default parallelism, restart strategy), create your sources and finally trigger the execution of the job.\n+DataStream API \u5e94\u7528\u7a0b\u5e8f\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u6267\u884c\u73af\u5883\uff08`StreamExecutionEnvironment`\uff09\uff0c\u662f\u6d41\u5f0f\u7a0b\u5e8f\u6267\u884c\u7684\u4e0a\u4e0b\u6587\u3002\u4f60\u5c06\u4f7f\u7528\u5b83\u6765\u8bbe\u7f6e\u4f5c\u4e1a\u7684\u5c5e\u6027(\u4f8b\u5982\u9ed8\u8ba4\u5e76\u884c\u6027\u3001\u91cd\u542f\u7b56\u7565)\u3001\u521b\u5efa\u6e90\uff0c\u5e76\u6700\u7ec8\u89e6\u53d1\u4f5c\u4e1a\u7684\u6267\u884c\u3002\n \n {% highlight python %}\n env = StreamExecutionEnvironment.get_execution_environment()\n env.set_parallelism(1)\n {% endhighlight %}\n \n-Once a `StreamExecutionEnvironment` is created, you can use it to declare your _source_. Sources ingest data from external systems, such as Apache Kafka, Rabbit MQ, or Apache Pulsar, into Flink Jobs. \n+\u4e00\u65e6\u521b\u5efa\u4e86 `StreamExecutionEnvironment` \u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u58f0\u660e\u6570\u636e\u6e90\u3002\u6570\u636e\u6e90\u4ece\u5916\u90e8\u7cfb\u7edf\uff08\u5982 Apache Kafka\u3001Rabbit MQ \u6216 Apache Pulsar\uff09\u62c9\u53d6\u6570\u636e\u5230 Flink \u4f5c\u4e1a\u91cc\u3002\n \n-To keep things simple, this walkthrough uses a source that is backed by a collection of elements.\n+\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u672c\u6559\u7a0b\u4f7f\u7528\u5143\u7d20\u96c6\u5408\u4f5c\u4e3a\u6570\u636e\u6e90\u3002\n \n {% highlight python %}\n ds = env.from_collection(\n     collection=[(1, 'aaa'), (2, 'bbb')],\n     type_info=Types.ROW([Types.INT(), Types.STRING()]))\n {% endhighlight %}\n \n-This creates a data stream from the given collection, with the same type as that of the elements in it (here, a `ROW` type with a INT field and a STRING field).\n+\u8fd9\u91cc\u4ece\u76f8\u540c\u7c7b\u578b\u6570\u636e\u96c6\u5408\u4e2d\u521b\u5efa\u6570\u636e\u6d41\uff08\u4e00\u4e2a\u5e26\u6709 INT \u548c STRING \u7c7b\u578b\u5b57\u6bb5\u7684 `ROW` \u7c7b\u578b\uff09\u3002\n \n-You can now perform transformations on this data stream, or just write the data to an external system using a _sink_. This walkthrough uses the `StreamingFileSink` sink connector to write the data into a file in the `/tmp/output` directory.\n+\u4f60\u73b0\u5728\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6570\u636e\u6d41\u4e0a\u6267\u884c\u8f6c\u6362\u64cd\u4f5c\uff0c\u6216\u8005\u4f7f\u7528 _sink_ \u5c06\u6570\u636e\u5199\u5165\u5916\u90e8\u7cfb\u7edf\u3002\u672c\u6559\u7a0b\u4f7f\u7528 `StreamingFileSink` \u5c06\u6570\u636e\u5199\u5165 `/tmp/output` \u6587\u4ef6\u76ee\u5f55\u4e2d\u3002\n \n {% highlight python %}\n ds.add_sink(StreamingFileSink\n     .for_row_format('/tmp/output', SimpleStringEncoder())\n     .build())\n {% endhighlight %}\n \n-The last step is to execute the actual PyFlink DataStream API job. PyFlink applications are built lazily and shipped to the cluster for execution only once fully formed. To execute an application, you simply call `env.execute(job_name)`.\n+\u6700\u540e\u4e00\u6b65\u662f\u6267\u884c\u771f\u5b9e\u7684 PyFlink DataStream API \u4f5c\u4e1a\u3002PyFlink applications \u662f\u60f0\u6027\u6784\u5efa\u7684\uff0c\u5e76\u4e14\u53ea\u6709\u5b8c\u5168\u6784\u5efa\u4e4b\u540e\u624d\u4f1a\u63d0\u4ea4\u7ed9\u96c6\u7fa4\u6267\u884c\u3002\u8981\u6267\u884c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u53ea\u9700\u7b80\u5355\u7684\u8c03\u7528 `env.execute(job_name)`\u3002", "originalCommit": "84117cb7218b909348d276f2803bdb11c8a81ba9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzMDU1MQ==", "url": "https://github.com/apache/flink/pull/13498#discussion_r497230551", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u672c\u6559\u7a0b\u4e3a\u4f60\u5f00\u59cb\u7f16\u5199\u81ea\u5df1\u7684 PyFlink DataStream API \u7a0b\u5e8f\u63d0\u4f9b\u4e86\u57fa\u7840\u3002\u4e3a\u4e86\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Python DataStream API \u7684\u4f7f\u7528\uff0c\u8bf7\u67e5\u9605 [Flink Python API Docs]({{ site.pythondocs_baseurl }}/api/python)\u3002\n          \n          \n            \n            \u672c\u6559\u7a0b\u4e3a\u4f60\u5f00\u59cb\u7f16\u5199\u81ea\u5df1\u7684 PyFlink DataStream API \u7a0b\u5e8f\u63d0\u4f9b\u4e86\u57fa\u7840\u3002\u5982\u679c\u9700\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Python DataStream API \u7684\u4f7f\u7528\uff0c\u8bf7\u67e5\u9605 [Flink Python API Docs]({{ site.pythondocs_baseurl }}/api/python)\u3002", "author": "dianfu", "createdAt": "2020-09-30T04:03:18Z", "path": "docs/dev/python/datastream_tutorial.zh.md", "diffHunk": "@@ -116,28 +117,28 @@ if __name__ == '__main__':\n     tutorial()\n {% endhighlight %}\n \n-## Executing a Flink Python DataStream API Program\n+## \u6267\u884c\u4e00\u4e2a Flink Python DataStream API \u7a0b\u5e8f\n \n-Now that you defined your PyFlink program, you can run it! First, make sure that the output directory doesn't exist:\n+\u73b0\u5728\u4f60\u5df2\u7ecf\u7f16\u5199\u597d PyFlink \u7a0b\u5e8f\uff0c\u53ef\u4ee5\u8fd0\u884c\u5b83\u4e86\uff01\u9996\u5148\uff0c\u9700\u8981\u786e\u4fdd\u8f93\u51fa\u76ee\u5f55\u4e0d\u5b58\u5728:\n \n {% highlight bash %}\n rm -rf /tmp/output\n {% endhighlight %}\n \n-Next, you can run the example you just created on the command line:\n+\u63a5\u4e0b\u6765\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fd0\u884c\u521a\u521a\u521b\u5efa\u7684\u793a\u4f8b:\n \n {% highlight bash %}\n $ python datastream_tutorial.py\n {% endhighlight %}\n \n-The command builds and runs your PyFlink program in a local mini cluster. You can alternatively submit it to a remote cluster using the instructions detailed in [Job Submission Examples]({{ site.baseurl }}/zh/ops/cli.html#job-submission-examples).\n+\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5728\u672c\u5730\u96c6\u7fa4\u4e2d\u6784\u5efa\u5e76\u8fd0\u884c PyFlink \u7a0b\u5e8f\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 [Job Submission Examples]({{ site.baseurl }}/zh/ops/cli.html#job-submission-examples) \u4e2d\u63cf\u8ff0\u7684\u547d\u4ee4\u5c06\u5176\u63d0\u4ea4\u5230\u8fdc\u7a0b\u96c6\u7fa4\u3002\n \n-Finally, you can see the execution result on the command line:\n+\u6700\u540e\uff0c\u4f60\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e0a\u770b\u5230\u6267\u884c\u7ed3\u679c:\n \n {% highlight bash %}\n $ find /tmp/output -type f -exec cat {} \\;\n 1,aaa\n 2,bbb\n {% endhighlight %}\n \n-This walkthrough gives you the foundations to get started writing your own PyFlink DataStream API programs. To learn more about the Python DataStream API, please refer to [Flink Python API Docs]({{ site.pythondocs_baseurl }}/api/python) for more details.\n+\u672c\u6559\u7a0b\u4e3a\u4f60\u5f00\u59cb\u7f16\u5199\u81ea\u5df1\u7684 PyFlink DataStream API \u7a0b\u5e8f\u63d0\u4f9b\u4e86\u57fa\u7840\u3002\u4e3a\u4e86\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Python DataStream API \u7684\u4f7f\u7528\uff0c\u8bf7\u67e5\u9605 [Flink Python API Docs]({{ site.pythondocs_baseurl }}/api/python)\u3002", "originalCommit": "84117cb7218b909348d276f2803bdb11c8a81ba9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c0c75114398a77e11051dee962d63007bd2806bf", "url": "https://github.com/apache/flink/commit/c0c75114398a77e11051dee962d63007bd2806bf", "message": "[FLINK-19430][docs-zh][python] Fix comments", "committedDate": "2020-09-30T05:30:30Z", "type": "commit"}, {"oid": "36e941c325c99378eefbc97d31138fc418ea72fb", "url": "https://github.com/apache/flink/commit/36e941c325c99378eefbc97d31138fc418ea72fb", "message": "[FLINK-19430][docs-zh][python] Fix comments", "committedDate": "2020-09-30T05:33:08Z", "type": "commit"}]}