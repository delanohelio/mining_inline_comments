{"pr_number": 12099, "pr_title": "[FLINK-17633][table-common] Improve FactoryUtil to align with new format options keys", "pr_createdAt": "2020-05-12T11:46:08Z", "pr_url": "https://github.com/apache/flink/pull/12099", "timeline": [{"oid": "8b8289144871d40e47b0d8856e2e73c28f406ee2", "url": "https://github.com/apache/flink/commit/8b8289144871d40e47b0d8856e2e73c28f406ee2", "message": "[FLINK-17633][table-common] Improve FactoryUtil to align with new format options keys", "committedDate": "2020-05-12T11:41:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NDE2MQ==", "url": "https://github.com/apache/flink/pull/12099#discussion_r423674161", "bodyText": "We can move those 3 format options into FactoryUtil and add a description to them. Because there is a implicit dependency on the string format.", "author": "twalthr", "createdAt": "2020-05-12T11:55:27Z", "path": "flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestDynamicTableFactory.java", "diffHunk": "@@ -56,12 +56,17 @@\n \t\t.defaultValue(100L);\n \n \tpublic static final ConfigOption<String> KEY_FORMAT = ConfigOptions", "originalCommit": "8b8289144871d40e47b0d8856e2e73c28f406ee2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwMzI1Nw==", "url": "https://github.com/apache/flink/pull/12099#discussion_r423703257", "bodyText": "What should the description be? In my understanding, the description is different for different connectors. For example, for kafka, 'value.format' is the serialization format of message values in the topic, which supports json, csv, avro. However, for elasticsearch, there is no concept of topic values and only support json.", "author": "wuchong", "createdAt": "2020-05-12T12:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NDE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0OTQzMw==", "url": "https://github.com/apache/flink/pull/12099#discussion_r423749433", "bodyText": "I think we can make the description generic. If connectors want to support a custom description. They can still wrap the option. How about:\nDefines the format identifier for encoding key data. The identifier is used to discover a suitable format factory.\nDefines the format identifier for encoding value data. The identifier is used to discover a suitable format factory.", "author": "twalthr", "createdAt": "2020-05-12T13:50:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NDE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1MDU4MA==", "url": "https://github.com/apache/flink/pull/12099#discussion_r423750580", "bodyText": "For the plain format option, we can use:\nDefines the format identifier for encoding data. The identifier is used to discover a suitable format factory.", "author": "twalthr", "createdAt": "2020-05-12T13:52:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NDE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1MjEzNA==", "url": "https://github.com/apache/flink/pull/12099#discussion_r423752134", "bodyText": "Sounds good to me. Connectors can easily refer to the format option and apply a new description.", "author": "wuchong", "createdAt": "2020-05-12T13:54:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NDE2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4MTQwOQ==", "url": "https://github.com/apache/flink/pull/12099#discussion_r423681409", "bodyText": "If we require an formatOption here, we should definitely provide the default ones as static fields in FactoryUtil. We can then also link them in the Java doc. Instead of copying this big text 4 times, I would suggest to add it to the createTableFactoryHelper.", "author": "twalthr", "createdAt": "2020-05-12T12:08:45Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/factories/FactoryUtil.java", "diffHunk": "@@ -378,13 +376,17 @@ private TableFactoryHelper(DynamicTableFactory tableFactory, DynamicTableFactory\n \t\t/**\n \t\t * Discovers a {@link ScanFormat} of the given type using the given option as factory identifier.\n \t\t *\n-\t\t * <p>A prefix, e.g. {@link #KEY_FORMAT_PREFIX}, projects the options for the format factory.\n+\t\t * <p>The format option key must be 'format' or with '.format' suffix. The discovery logic\n+\t\t * will replace 'format' with the factory identifier value as the format prefix.\n+\t\t * For example, assuming the identifier is 'json', if format option key is 'format',\n+\t\t * then format prefix is 'json.'. If format option key is 'value.format', then format\n+\t\t * prefix is 'value.json'. The format prefix is used to project the options for the\n+\t\t * format factory.\n \t\t */\n \t\tpublic <I, F extends ScanFormatFactory<I>> ScanFormat<I> discoverScanFormat(\n \t\t\t\tClass<F> formatFactoryClass,\n-\t\t\t\tConfigOption<String> formatOption,\n-\t\t\t\tString formatPrefix) {\n-\t\t\treturn discoverOptionalScanFormat(formatFactoryClass, formatOption, formatPrefix)\n+\t\t\t\tConfigOption<String> formatOption) {", "originalCommit": "8b8289144871d40e47b0d8856e2e73c28f406ee2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f5c28dbc318a940e8a5f0611b5ae1be8a295b98c", "url": "https://github.com/apache/flink/commit/f5c28dbc318a940e8a5f0611b5ae1be8a295b98c", "message": "address comments.", "committedDate": "2020-05-12T12:46:26Z", "type": "commit"}, {"oid": "d0ad3f7c6731942a2ee66d02b6373a22dc1085e3", "url": "https://github.com/apache/flink/commit/d0ad3f7c6731942a2ee66d02b6373a22dc1085e3", "message": "add description for format ConfigOptions.", "committedDate": "2020-05-12T13:59:41Z", "type": "commit"}]}