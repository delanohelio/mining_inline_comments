{"pr_number": 12237, "pr_title": "[FLINK-17290] [chinese-translation, Documentation / Training] Transla\u2026", "pr_createdAt": "2020-05-19T03:25:38Z", "pr_url": "https://github.com/apache/flink/pull/12237", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA1NDI5MA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427054290", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ## \u4e8b\u4ef6\u65f6\u95f4\u548c\u6c34\u5370\n          \n          \n            \n            ## Event Time \u548c Watermarks", "author": "yangyichao-mango", "createdAt": "2020-05-19T06:18:03Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -27,125 +27,101 @@ under the License.\n * This will be replaced by the TOC\n {:toc}\n \n-## Event Time and Watermarks\n+## \u4e8b\u4ef6\u65f6\u95f4\u548c\u6c34\u5370", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA1NDg1MA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427054850", "bodyText": "I think is will be better that we do not translate this title", "author": "yangyichao-mango", "createdAt": "2020-05-19T06:19:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA1NDI5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIwMTM4MQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427201381", "bodyText": "\u8fd9\u4e2a\u5730\u65b9\u4e13\u6709\u540d\u8bcd\u4e0d\u5efa\u8bae\u7ffb\u8bd1\uff0c\u5177\u4f53\u7684\u53c2\u8003 wiki \u5982\u679c\u6709\u7591\u95ee\u7684\uff08\u6bd4\u5982\u7ffb\u8bd1\u6210\u4ec0\u4e48\u4f1a\u6bd4\u8f83\u597d\uff09\u53ef\u4ee5\u5728 github \u4e0a\u56de\u590d\uff0c\u4e5f\u53ef\u4ee5\u5f80 dev \u90ae\u7bb1\u5217\u8868\u53d1\u90ae\u4ef6\u63d0\u95ee", "author": "klion26", "createdAt": "2020-05-19T10:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA1NDI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA1NzM1NQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427057355", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n          \n          \n            \n            Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u4f7f\u7528\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:", "author": "yangyichao-mango", "createdAt": "2020-05-19T06:26:04Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -27,125 +27,101 @@ under the License.\n * This will be replaced by the TOC\n {:toc}\n \n-## Event Time and Watermarks\n+## \u4e8b\u4ef6\u65f6\u95f4\u548c\u6c34\u5370\n \n-### Introduction\n+### \u7b80\u4ecb\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u7684\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4:_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4:_ Flink \u63d0\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4:_ Flink \u4e2d\u901a\u8fc7\u7279\u5b9a\u7684\u64cd\u4f5c\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u65f6\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u4e8b\u4ef6\u7684\u751f\u6210\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u65b0\u5206\u6790\u5386\u53f2\u6570\u636e\u548c\u6d4b\u8bd5\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+### \u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u4e8b\u4ef6\u65f6\u95f4:", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA1NzYyNA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427057624", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c\u6c34\u5370\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n          \n          \n            \n            \u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9", "author": "yangyichao-mango", "createdAt": "2020-05-19T06:26:47Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -27,125 +27,101 @@ under the License.\n * This will be replaced by the TOC\n {:toc}\n \n-## Event Time and Watermarks\n+## \u4e8b\u4ef6\u65f6\u95f4\u548c\u6c34\u5370\n \n-### Introduction\n+### \u7b80\u4ecb\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u7684\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4:_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4:_ Flink \u63d0\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4:_ Flink \u4e2d\u901a\u8fc7\u7279\u5b9a\u7684\u64cd\u4f5c\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u65f6\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u4e8b\u4ef6\u7684\u751f\u6210\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u65b0\u5206\u6790\u5386\u53f2\u6570\u636e\u548c\u6d4b\u8bd5\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+### \u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c\u6c34\u5370\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIwMDU4NA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427200584", "bodyText": "\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u4fee\u6539\u5462\uff1f", "author": "klion26", "createdAt": "2020-05-19T10:35:21Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -3,7 +3,7 @@ title: Streaming Analytics\n nav-id: analytics\n nav-pos: 4\n nav-title: Streaming Analytics\n-nav-parent_id: training\n+nav-parent_id: tutorials", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyMDc0MQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r428620741", "bodyText": "\u6211\u4e0d\u592a\u786e\u5b9a\u4e3a\u4ec0\u4e48@david Anderson\u5bf9\u5f53\u524d\u6587\u4ef6\u505a\u4e86patch\uff0c\u901a\u8fc7\u8fd9\u4e2aJira Id\u53ef\u4ee5\u770b\u5230\uff1a\nFLINIK-17432(Rename Tutorials to Training for better SEO (#11931))", "author": "twentyworld", "createdAt": "2020-05-21T12:27:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIwMDU4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MDEwMQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r429050101", "bodyText": "\u6211\u7684\u610f\u601d\u662f\uff0c\u6700\u65b0\u7248\u7684 \u82f1\u6587 \u6587\u6863\u4e2d\u8fd9\u91cc\u662f training \u4e3a\u4ec0\u4e48\u8981\u628a training \u518d\u6539\u6210 tutorials \u5462\uff1f\u4f60\u7ed9\u7684 PR \u4e2d\u4e5f\u662f\u628a tutorials \u6539\u6210 training\uff0c\u4f60\u8fd9\u6837\u7684\u6539\u52a8\u76f8\u5f53\u4e8e\u53c8\u6539\u56de\u53bb\u4e86\u3002", "author": "klion26", "createdAt": "2020-05-22T05:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIwMDU4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkxNjI0Mg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r429916242", "bodyText": "\u5df2\u7ecf\u6539\u6389\u8fd9\u4e2a\u95ee\u9898\uff0c\u665a\u70b9\u63d0\u4ea4\u3002\n\u7ecf\u8fc7\u786e\u8ba4\uff0c\u8fd9\u662f\u6211\u7684\u95ee\u9898\uff0c\u5728\u63d0\u4ea4\u4e4b\u524d\uff0c\u6211\u6ca1\u6709rebase\u5230\u6700\u65b0\u4ee3\u7801\u3002\n\u7b2c\u4e00\u6b21\u63d0\u4ea4\u6587\u6863\uff0c\u662f\u6211\u7684\u95ee\u9898\uff0c\u5982\u679c\u4e0b\u6b21\u8fd8\u6709\u673a\u4f1a\u7684\u8bdd\uff0c\u5c3d\u91cf\u4e0d\u8ba9\u5927\u5bb6\u8fd9\u4e48\u8d39\u5fc3\u4e86\u3002", "author": "twentyworld", "createdAt": "2020-05-25T12:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIwMDU4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzMjI0NQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427432245", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Flink\u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *\u6c34\u5370\u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\uff0c\u79f0\u4e3a *\u6c34\u5370*\u3002\u65f6\u95f4 _t_ \u7684\u6c34\u5370\u662f\n          \n          \n            \n            Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermark*\u3002\u65f6\u95f4 _t_ \u7684 watermark \u8868\u793a", "author": "XBaith", "createdAt": "2020-05-19T16:22:16Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -27,125 +27,101 @@ under the License.\n * This will be replaced by the TOC\n {:toc}\n \n-## Event Time and Watermarks\n+## \u4e8b\u4ef6\u65f6\u95f4\u548c\u6c34\u5370\n \n-### Introduction\n+### \u7b80\u4ecb\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u7684\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4:_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4:_ Flink \u63d0\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4:_ Flink \u4e2d\u901a\u8fc7\u7279\u5b9a\u7684\u64cd\u4f5c\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u65f6\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u4e8b\u4ef6\u7684\u751f\u6210\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u65b0\u5206\u6790\u5386\u53f2\u6570\u636e\u548c\u6d4b\u8bd5\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+### \u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c\u6c34\u5370\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528\u6c34\u5370]({% linktutorials/streaming_analytics.md %}#\u4f7f\u7528\u6c34\u5370)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+\u6c34\u5370\u662f\u4ec0\u4e48\u3002\n \n-### Watermarks\n+### \u6c34\u5370\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\uff0c\u8be5\u793a\u4f8b\u5c06\u8bf4\u660e\u4e3a\u4ec0\u4e48\u9700\u8981\u6c34\u5370\u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n+\u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\n+\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u52301\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a2\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f\u6c34\u5370\u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink\u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *\u6c34\u5370\u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\uff0c\u79f0\u4e3a *\u6c34\u5370*\u3002\u65f6\u95f4 _t_ \u7684\u6c34\u5370\u662f", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyNzExMQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r428627111", "bodyText": "\u8c22\u8c22\uff0c\u6211\u4e5f\u633a\u60f3\u548c\u5927\u5bb6\u63a2\u8ba8\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\nWatermarks \u5982\u679c\u6709\u4e00\u4e9b\u573a\u666f\u9700\u8981\u88ab\u7ffb\u8bd1\u7684\u8bdd\uff08\u5f53\u7136\uff0c\u5df2\u7ecf\u88ab\u5efa\u8bae\u6700\u597d\u4e0d\u8981\u7ffb\u8bd1\uff0c\u4ee5\u514d\u8bef\u8bfb\uff09\uff0c\u6211\u77e5\u9053\u7684\u662f\u5728\u4e00\u4e9b\u5176\u4ed6\u6846\u67b6\u5185\uff0c\u6bd4\u5982Kafka\uff0c\u5927\u5bb6\u4f1a\u628a\u4ed6\u53eb\u505a\u6c34\u4f4d\u7ebf\uff0c\u8fd9\u4e2a\u5f62\u5bb9\u4e5f\u66f4\u5f62\u8c61\uff0c\u4f46\u662f\u5728Flink(\u6211\u63a5\u89e6\u7684\u4e0d\u7b97\u5f88\u591a\uff0c\u53ea\u662f\u5728\u5de5\u4f5c\u548c\u9605\u8bfb\u6e90\u7801)\uff0c\u7ed3\u5408\u6211\u770b\u5230\u7684\u6709\u4e00\u4e9b\u6df1\u5ea6\u7684\u6587\u7ae0\uff0c\u6211\u4e2a\u4eba\u611f\u89c9\u6c34\u5370\u66f4\u7b26\u5408Flink\u8d4b\u4e88\u7684\u6982\u5ff5\uff1a\n\n\u6bcf\u4e00\u4e2a\u4e8b\u4ef6\u90fd\u88ab\u6253\u4e86\u4e00\u4e2a\u6233\nFlink\u5904\u7406\u4e8b\u4ef6\u6d41\u4f1a\u6839\u636e\u65f6\u95f4\u6233\u6765\u5904\u7406\n\n\u5982\u679c\u6709\u4e0d\u5bf9\u7684\u5730\u65b9\u6216\u8005\u4e0d\u5168\u9762(\u6216\u8005\u6709\u4e00\u4e9b\u66f4\u597d\u7684\u6587\u6863\uff0c\u4ee3\u7801)\uff0c\u5e0c\u671b\u5927\u5bb6\u6307\u6b63\u3002", "author": "twentyworld", "createdAt": "2020-05-21T12:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzMjI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMTIyMQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r429011221", "bodyText": "\u8c22\u8c22\uff0c\u6211\u4e2a\u4eba\u7684\u7406\u89e3\u662f\u8fd9\u6837\u7684\uff1a\n\u6c34\u5370\uff1a\u6211\u4ece\u5b57\u9762\u610f\u601d\u7406\u89e3\u7684\u8bdd\u5c31\u662f\u5982\u4f60\u6240\u8bf4\u7684\u662f\u4e00\u79cd\u6253\u6233\u7684\u6982\u5ff5\n\u6c34\u4f4d\u7ebf\uff1a\u6211\u4ece\u5b57\u9762\u610f\u601d\u7406\u89e3\u4f1a\u5305\u542b\u9608\u503c\u7684\u6982\u5ff5\n\u6211\u4e2a\u4eba\u7406\u89e3\u5728 Flink \u4e2d\uff0cWatermark \u662f\u4e3a\u4e86\u89e3\u51b3\u4e8b\u4ef6\u4e71\u5e8f\u800c\u5f15\u5165\u7684\u6982\u5ff5\uff0c\u7528\u6765\u5728\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u4e0b\u5904\u7406\u4e71\u5e8f\u95ee\u9898\u7684\uff0c\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\u7528\u6237\u7f16\u5199\u4e86\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14\u914d\u7f6e\u4e86\u5173\u4e8e Watermarks \u7684\u8ba1\u7b97\u751f\u6210\u65b9\u5f0f\uff0c\u90a3\u4e48\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u5047\u8bbe\u5f53\u524d\u7684 Watermark \u4e3a10\uff0c\u90a3\u4e48\u4ee3\u8868\u7528\u6237\u4e3b\u89c2\u8ba4\u4e3a\u518d\u4e5f\u4e0d\u4f1a\u51fa\u73b0 Watermark < 10\u7684\u6570\u636e\uff0c\u6211\u7406\u89e3\u8fd9\u5176\u5b9e\u4e5f\u662f\u4e00\u79cd\u9608\u503c\u7684\u6982\u5ff5\uff0c\u56e0\u6b64\u6211\u89c9\u5f97\u7ffb\u8bd1\u4e3a\u6c34\u4f4d\u7ebf\uff08\u6216\u4e0d\u7ffb\u8bd1\uff09\u6216\u8bb8\u6bd4\u7ffb\u8bd1\u4e3a\u6c34\u5370\u80fd\u8ba9\u7528\u6237\u66f4\u5bb9\u6613\u7406\u89e3\u3002\n\u5982\u679c\u6709\u7406\u89e3\u4e0d\u5bf9\u7684\u5730\u65b9\u6216\u8005\u4e0d\u5168\u9762(\u6216\u8005\u6709\u4e00\u4e9b\u66f4\u597d\u7684\u6587\u6863\uff0c\u4ee3\u7801)\uff0c\u5e0c\u671b\u5927\u5bb6\u53ef\u4ee5\u6307\u6b63\u3002", "author": "yangyichao-mango", "createdAt": "2020-05-22T02:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzMjI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkxMjc4Mw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r429912783", "bodyText": "\u55ef\u55ef\uff0c\u9608\u503c\u7684\u89d2\u5ea6\u7684\u8bdd\u6765\u89e3\u91ca\uff0cWatermark\u7684\u786e\u5e94\u8be5\u88ab\u7ffb\u8bd1\u6210\u6c34\u4f4d\u7ebf\uff08\u5982\u679c\u9700\u8981\uff09\uff0c\u8c22\u8c22\uff0c\u6c34\u4f4d\u7ebf\u4e5f\u66f4\u52a0\u9002\u5408\u3002", "author": "twentyworld", "createdAt": "2020-05-25T12:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzMjI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAxNDAzMQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r430014031", "bodyText": "\u611f\u8c22\u79ef\u6781\u8ba8\u8bba\uff0c\u6211\u4e2a\u4eba\u8d5e\u6210 @yangyichao-mango \u7684\u8bf4\u6cd5\uff0c\u786e\u5b9e\u6c34\u4f4d\u7ebf\u53ef\u80fd\u66f4\u5bb9\u6613\u8ba9\u4eba\u4eec\u7406\u89e3\u3002", "author": "XBaith", "createdAt": "2020-05-25T16:39:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzMjI0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzNzU4MA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427437580", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u65ad\u8a00\u8be5\u4e8b\u4ef6\u6d41\u73b0\u5728\u5230\u65f6\u95f4 _t_ \u5df2\uff08\u53ef\u80fd\uff09\u5b8c\u6210\u3002\n          \n          \n            \n            \u6d41\u5728 _t_ \u4e4b\u524d\uff08\u5f88\u53ef\u80fd\uff09\u5df2\u7ecf\u5904\u7406\u5b8c\u6210\u4e86\u3002\n          \n      \n    \n    \n  \n\n\u8fd9\u91cc\u76f4\u8bd1\u4f9d\u7136\u89c9\u5f97\u4e0d\u660e\u4e0d\u767d\uff0c\u6211\u5efa\u8bae\u628a\u8fd9\u91cc\u610f\u8bd1\uff0c\u6bd4\u5982\u8bf4\uff1a\u201c\u4e8b\u4ef6\u65f6\u95f4 t \u7684 watermark \u4ee3\u8868 t \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u6ca1\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002\u201d", "author": "XBaith", "createdAt": "2020-05-19T16:30:08Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -27,125 +27,101 @@ under the License.\n * This will be replaced by the TOC\n {:toc}\n \n-## Event Time and Watermarks\n+## \u4e8b\u4ef6\u65f6\u95f4\u548c\u6c34\u5370\n \n-### Introduction\n+### \u7b80\u4ecb\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u7684\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4:_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4:_ Flink \u63d0\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4:_ Flink \u4e2d\u901a\u8fc7\u7279\u5b9a\u7684\u64cd\u4f5c\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u65f6\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u4e8b\u4ef6\u7684\u751f\u6210\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u65b0\u5206\u6790\u5386\u53f2\u6570\u636e\u548c\u6d4b\u8bd5\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+### \u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c\u6c34\u5370\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528\u6c34\u5370]({% linktutorials/streaming_analytics.md %}#\u4f7f\u7528\u6c34\u5370)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+\u6c34\u5370\u662f\u4ec0\u4e48\u3002\n \n-### Watermarks\n+### \u6c34\u5370\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\uff0c\u8be5\u793a\u4f8b\u5c06\u8bf4\u660e\u4e3a\u4ec0\u4e48\u9700\u8981\u6c34\u5370\u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n+\u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\n+\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u52301\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a2\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f\u6c34\u5370\u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink\u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *\u6c34\u5370\u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\uff0c\u79f0\u4e3a *\u6c34\u5370*\u3002\u65f6\u95f4 _t_ \u7684\u6c34\u5370\u662f\n+\u65ad\u8a00\u8be5\u4e8b\u4ef6\u6d41\u73b0\u5728\u5230\u65f6\u95f4 _t_ \u5df2\uff08\u53ef\u80fd\uff09\u5b8c\u6210\u3002", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzOTU5Mg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427439592", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *\u8fd9\u6b63\u662f\u6c34\u5370\u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n          \n          \n            \n            *\u8fd9\u6b63\u662f watermark \u7684\u4f5c\u7528* \u2014 \u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u4e4b\u524d\u7684\u4e8b\u4ef6\u3002", "author": "XBaith", "createdAt": "2020-05-19T16:32:47Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -27,125 +27,101 @@ under the License.\n * This will be replaced by the TOC\n {:toc}\n \n-## Event Time and Watermarks\n+## \u4e8b\u4ef6\u65f6\u95f4\u548c\u6c34\u5370\n \n-### Introduction\n+### \u7b80\u4ecb\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u7684\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4:_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4:_ Flink \u63d0\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4:_ Flink \u4e2d\u901a\u8fc7\u7279\u5b9a\u7684\u64cd\u4f5c\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u65f6\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u4e8b\u4ef6\u7684\u751f\u6210\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u65b0\u5206\u6790\u5386\u53f2\u6570\u636e\u548c\u6d4b\u8bd5\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+### \u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u4e8b\u4ef6\u65f6\u95f4:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c\u6c34\u5370\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528\u6c34\u5370]({% linktutorials/streaming_analytics.md %}#\u4f7f\u7528\u6c34\u5370)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+\u6c34\u5370\u662f\u4ec0\u4e48\u3002\n \n-### Watermarks\n+### \u6c34\u5370\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\uff0c\u8be5\u793a\u4f8b\u5c06\u8bf4\u660e\u4e3a\u4ec0\u4e48\u9700\u8981\u6c34\u5370\u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n+\u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\n+\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u52301\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a2\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f\u6c34\u5370\u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ0MjQ1OQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427442459", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### \u7a97\u53e3\u5206\u914d\n          \n          \n            \n            ### \u7a97\u53e3\u5206\u914d\u5668", "author": "XBaith", "createdAt": "2020-05-19T16:37:15Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -207,67 +180,64 @@ stream.\n     .reduce|aggregate|process(<window function>)\n {% endhighlight %}\n \n-You can also use windowing with non-keyed streams, but keep in mind that in this case, the\n-processing will _not_ be done in parallel:\n+\u60a8\u4e0d\u662f\u5fc5\u987b\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff0c\u4f46\u662f\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u5c31\u4e0d\u80fd _\u5e76\u884c_ \u5904\u7406\u3002\n \n {% highlight java %}\n stream.\n     .windowAll(<window assigner>)\n     .reduce|aggregate|process(<window function>)\n {% endhighlight %}\n \n-### Window Assigners\n+### \u7a97\u53e3\u5206\u914d", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ0MzUzNg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427443536", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### \u7a97\u53e3\u65b9\u6cd5\n          \n          \n            \n            ### \u7a97\u53e3\u5e94\u7528\u51fd\u6570\n          \n      \n    \n    \n  \n\n\u8fd9\u91cc\u53c2\u7167\u300a\u57fa\u4e8e Apache Flink \u7684\u6d41\u5904\u7406\u300b\u7684\u7ffb\u8bd1", "author": "XBaith", "createdAt": "2020-05-19T16:38:57Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -207,67 +180,64 @@ stream.\n     .reduce|aggregate|process(<window function>)\n {% endhighlight %}\n \n-You can also use windowing with non-keyed streams, but keep in mind that in this case, the\n-processing will _not_ be done in parallel:\n+\u60a8\u4e0d\u662f\u5fc5\u987b\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff0c\u4f46\u662f\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u5c31\u4e0d\u80fd _\u5e76\u884c_ \u5904\u7406\u3002\n \n {% highlight java %}\n stream.\n     .windowAll(<window assigner>)\n     .reduce|aggregate|process(<window function>)\n {% endhighlight %}\n \n-### Window Assigners\n+### \u7a97\u53e3\u5206\u914d\n \n-Flink has several built-in types of window assigners, which are illustrated below:\n+Flink \u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u7a97\u53e3\u5206\u914d\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n \n <img src=\"{{ site.baseurl }}/fig/window-assigners.svg\" alt=\"Window assigners\" class=\"center\" width=\"80%\" />\n \n-Some examples of what these window assigners might be used for, and how to specify them:\n+\u901a\u8fc7\u4e00\u4e9b\u793a\u4f8b\u6765\u5c55\u793a\u5173\u4e8e\u8fd9\u4e9b\u7a97\u53e3\u5982\u4f55\u4f7f\u7528\uff0c\u6216\u8005\u5982\u4f55\u533a\u5206\u5b83\u4eec\uff1a\n \n-* Tumbling time windows\n-  * _page views per minute_\n+* \u6eda\u52a8\u65f6\u95f4\u7a97\u53e3\n+  * _\u6bcf\u5206\u949f\u9875\u9762\u6d4f\u89c8\u91cf_\n   * `TumblingEventTimeWindows.of(Time.minutes(1))`\n-* Sliding time windows\n-  * _page views per minute computed every 10 seconds_\n+* \u6ed1\u52a8\u65f6\u95f4\u7a97\u53e3\n+  * _\u6bcf10\u79d2\u949f\u8ba1\u7b97\u524d1\u5206\u949f\u7684\u9875\u9762\u6d4f\u89c8\u91cf_\n   * `SlidingEventTimeWindows.of(Time.minutes(1), Time.seconds(10))`\n-* Session windows \n-  * _page views per session, where sessions are defined by a gap of at least 30 minutes between sessions_\n+* \u4f1a\u8bdd\u7a97\u53e3\n+  * _\u6bcf\u4e2a\u4f1a\u8bdd\u7684\u7f51\u9875\u6d4f\u89c8\u91cf\uff0c\u5176\u4e2d\u4f1a\u8bdd\u4e4b\u95f4\u7684\u95f4\u9694\u81f3\u5c11\u4e3a30\u5206\u949f_\n   * `EventTimeSessionWindows.withGap(Time.minutes(30))`\n \n-Durations can be specified using one of `Time.milliseconds(n)`, `Time.seconds(n)`, `Time.minutes(n)`, `Time.hours(n)`, and `Time.days(n)`.\n+\u4ee5\u4e0b\u90fd\u662f\u4e00\u4e9b\u53ef\u4ee5\u4f7f\u7528\u7684\u95f4\u9694\u65f6\u95f4 `Time.milliseconds(n)`, `Time.seconds(n)`, `Time.minutes(n)`,\n+ `Time.hours(n)`, and `Time.days(n)`\u3002\n \n-The time-based window assigners (including session windows) come in both event time and processing\n-time flavors. There are significant tradeoffs between these two types of time windows. With\n-processing time windowing you have to accept these limitations:\n+\u57fa\u4e8e\u65f6\u95f4\u7684\u7a97\u53e3\u5206\u914d\u5668\uff08\u5305\u62ec\u4f1a\u8bdd\u65f6\u95f4\uff09\u65e2\u53ef\u4ee5\u5904\u7406 `\u4e8b\u4ef6\u65f6\u95f4`\uff0c\u4e5f\u53ef\u4ee5\u5904\u7406 `\u5904\u7406\u65f6\u95f4`\u3002\u8fd9\u4e24\u79cd\u57fa\u4e8e\u65f6\u95f4\u7684\u5904\u7406\u6ca1\u6709\n+\u54ea\u4e00\u4e2a\u66f4\u597d\uff0c\u6211\u4eec\u5fc5\u987b\u6298\u8877\u3002\u4f7f\u7528 `\u5904\u7406\u65f6\u95f4`\uff0c\u6211\u4eec\u5fc5\u987b\u63a5\u53d7\u4ee5\u4e0b\u9650\u5236\uff1a\n \n-* can not correctly process historic data,\n-* can not correctly handle out-of-order data,\n-* results will be non-deterministic,\n+* \u65e0\u6cd5\u6b63\u786e\u5904\u7406\u5386\u53f2\u6570\u636e,\n+* \u65e0\u6cd5\u6b63\u786e\u5904\u7406\u8d85\u8fc7\u6700\u5927\u4e71\u5e8f\u8fb9\u754c\u7684\u6570\u636e,\n+* \u7ed3\u679c\u5c06\u662f\u4e0d\u786e\u5b9a\u7684,\n \n-but with the advantage of lower latency. \n+\u4f46\u662f\u6709\u81ea\u5df1\u7684\u4f18\u52bf\uff0c\u8f83\u4f4e\u7684\u5ef6\u8fdf\u3002\n \n-When working with count-based windows, keep in mind that these windows will not fire until a batch\n-is complete. There's no option to time-out and process a partial window, though you could implement\n-that behavior yourself with a custom Trigger.\n+\u4f7f\u7528\u57fa\u4e8e\u8ba1\u6570\u7684\u7a97\u53e3\u65f6\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u76f4\u5230\u5b8c\u6210\u6279\u5904\u7406\u540e\uff0c\u8fd9\u4e9b\u7a97\u53e3\u624d\u4f1a\u89e6\u53d1\u3002\u5c3d\u7ba1\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u89e6\u53d1\u5668\u81ea\u5df1\u5b9e\u73b0\u8be5\u884c\u4e3a\uff0c\u4f46\u65e0\u6cd5\n+\u5e94\u5bf9\u8d85\u65f6\u548c\u5904\u7406\u90e8\u5206\u7a97\u53e3\u3002\n \n-A global window assigner assigns every event (with the same key) to the same global window. This is\n-only useful if you are going to do your own custom windowing, with a custom Trigger. In many cases\n-where this might seem useful you will be better off using a `ProcessFunction` as described\n-[in another section]({% link training/event_driven.zh.md %}#process-functions).\n+\u4ec5\u5f53\u60a8\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u89e6\u53d1\u5668\u8fdb\u884c\u81ea\u5b9a\u4e49\u7a97\u53e3\u65f6\uff0c\u5168\u5c40\u7a97\u53e3\u5206\u914d\u5668\u5c06\u6bcf\u4e2a\u4e8b\u4ef6\uff08\u5177\u6709\u76f8\u540c\u7684\u952e\uff09\u5206\u914d\u7ed9\u76f8\u540c\u7684\u5168\u5c40\u7a97\u53e3\u3002 \u5f88\u591a\u60c5\n+\u51b5\u4e0b\uff0c\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u5efa\u8bae\u662f\u4f7f\u7528 `ProcessFunction`\uff0c\u5177\u4f53\u4ecb\u7ecd\u5728[\u8fd9\u91cc]({% link tutorials/event_driven.md %}#process-functions)\u3002\n \n-### Window Functions\n+### \u7a97\u53e3\u65b9\u6cd5", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ0NjA5Mw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427446093", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e00\u4e2a\u867d\u7136\u5ef6\u8fdf\u4f46\u662f\u66f4\u52a0\u51c6\u786e\u5730\u7ed3\u679c\u3002\n          \n          \n            \n            \u4e00\u4e2a\u867d\u7136\u6709\u5ef6\u8fdf\u4f46\u662f\u66f4\u52a0\u51c6\u786e\u5730\u7ed3\u679c\u3002", "author": "XBaith", "createdAt": "2020-05-19T16:42:56Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -437,39 +394,32 @@ stream\n     .reduce(<same reduce function>)\n {% endhighlight %}\n \n-You might expect Flink's runtime to be smart enough to do this parallel pre-aggregation for you\n-(provided you are using a ReduceFunction or AggregateFunction), but it's not.\n+\u53ef\u80fd\u6211\u4eec\u4f1a\u731c\u6d4b\u4ee5 Flink \u7684\u80fd\u529b\uff0c\u60f3\u8981\u505a\u5230\u8fd9\u6837\u770b\u8d77\u6765\u662f\u53ef\u884c\u7684\uff08\u524d\u63d0\u662f\u60a8\u4f7f\u7528\u7684\u662fReduceFunction\u6216AggregateFunction\uff09\uff0c\u4f46\u4e0d\u662f\u3002\n \n-The reason why this works is that the events produced by a time window are assigned timestamps\n-based on the time at the end of the window. So, for example, all of the events produced\n-by an hour-long window will have timestamps marking the end of an hour. Any subsequent window\n-consuming those events should have a duration that is the same as, or a multiple of, the\n-previous window.\n+\u4e4b\u6240\u4ee5\u53ef\u884c\uff0c\u662f\u56e0\u4e3a\u65f6\u95f4\u7a97\u53e3\u4ea7\u751f\u7684\u4e8b\u4ef6\u662f\u6839\u636e\u7a97\u53e3\u7ed3\u675f\u65f6\u7684\u65f6\u95f4\u5206\u914d\u65f6\u95f4\u6233\u7684\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5c0f\u65f6\u5c0f\u65f6\u7684\u7a97\u53e3\u6240\u4ea7\u751f\u7684\u6240\u6709\u4e8b\n+\u4ef6\u90fd\u5c06\u5e26\u6709\u6807\u8bb0\u4e00\u4e2a\u5c0f\u65f6\u7ed3\u675f\u7684\u65f6\u95f4\u6233\u3002\u540e\u9762\u7684\u7a97\u53e3\u5185\u7684\u6570\u636e\u6d88\u8d39\u548c\u524d\u9762\u7684\u6d41\u4ea7\u751f\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\u3002\n \n-#### No Results for Empty TimeWindows\n+#### \u7a7a\u7684\u7a97\u53e3\u4e0d\u4f1a\u4ea7\u51fa\u7ed3\u679c\n \n-Windows are only created when events are assigned to them. So if there are no events in a given time\n-frame, no results will be reported.\n+\u4e8b\u4ef6\u4f1a\u89e6\u53d1\u7a97\u53e3\u7684\u521b\u5efa\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u5728\u7279\u5b9a\u7684\u7a97\u53e3\u5185\u6ca1\u6709\u4e8b\u4ef6\uff0c\u5c31\u4e0d\u4f1a\u6709\u7a97\u53e3\uff0c\u5c31\u4e0d\u4f1a\u6709\u8f93\u51fa\u7ed3\u679c\u3002\n \n #### Late Events Can Cause Late Merges\n \n-Session windows are based on an abstraction of windows that can _merge_. Each element is initially\n-assigned to a new window, after which windows are merged whenever the gap between them is small\n-enough. In this way, a late event can bridge the gap separating two previously separate sessions,\n-producing a late merge.\n+\u4f1a\u8bdd\u7a97\u53e3\u7684\u5b9e\u73b0\u662f\u57fa\u4e8e\u7a97\u53e3\u7684\u4e00\u4e2a\u62bd\u8c61\u80fd\u529b\uff0c\u7a97\u53e3\u53ef\u4ee5_\u805a\u5408_\u3002\u4f1a\u8bdd\u7a97\u53e3\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5728\u521d\u59cb\u88ab\u6d88\u8d39\u65f6\uff0c\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u65b0\u7684\n+\u7a97\u53e3\uff0c\u4f46\u662f\u5982\u679c\u7a97\u53e3\u4e4b\u95f4\u7684\u95f4\u9694\u8db3\u591f\u5c0f\uff0c\u591a\u4e2a\u7a97\u53e3\u5c31\u4f1a\u88ab\u805a\u5408\u3002\u5ef6\u8fdf\u4e8b\u4ef6\u53ef\u4ee5\u5f25\u5408\u5206\u9694\u4e24\u4e2a\u5148\u524d\u5206\u5f00\u7684\u4f1a\u8bdd\u7684\u95f4\u9694\uff0c\u4ece\u800c\u4ea7\u751f\n+\u4e00\u4e2a\u867d\u7136\u5ef6\u8fdf\u4f46\u662f\u66f4\u52a0\u51c6\u786e\u5730\u7ed3\u679c\u3002", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ0NzcwOA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r427447708", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7a97\u53e3\uff0c\u4f46\u662f\u5982\u679c\u7a97\u53e3\u4e4b\u95f4\u7684\u95f4\u9694\u8db3\u591f\u5c0f\uff0c\u591a\u4e2a\u7a97\u53e3\u5c31\u4f1a\u88ab\u805a\u5408\u3002\u5ef6\u8fdf\u4e8b\u4ef6\u53ef\u4ee5\u5f25\u5408\u5206\u9694\u4e24\u4e2a\u5148\u524d\u5206\u5f00\u7684\u4f1a\u8bdd\u7684\u95f4\u9694\uff0c\u4ece\u800c\u4ea7\u751f\n          \n          \n            \n            \u7a97\u53e3\uff0c\u4f46\u662f\u5982\u679c\u7a97\u53e3\u4e4b\u95f4\u7684\u95f4\u9694\u8db3\u591f\u5c0f\uff0c\u591a\u4e2a\u7a97\u53e3\u5c31\u4f1a\u88ab\u805a\u5408\u3002\u5ef6\u8fdf\u4e8b\u4ef6\u53ef\u4ee5\u5f25\u5408\u4e24\u4e2a\u5148\u524d\u5206\u5f00\u7684\u4f1a\u8bdd\u95f4\u9694\uff0c\u4ece\u800c\u4ea7\u751f", "author": "XBaith", "createdAt": "2020-05-19T16:45:23Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -437,39 +394,32 @@ stream\n     .reduce(<same reduce function>)\n {% endhighlight %}\n \n-You might expect Flink's runtime to be smart enough to do this parallel pre-aggregation for you\n-(provided you are using a ReduceFunction or AggregateFunction), but it's not.\n+\u53ef\u80fd\u6211\u4eec\u4f1a\u731c\u6d4b\u4ee5 Flink \u7684\u80fd\u529b\uff0c\u60f3\u8981\u505a\u5230\u8fd9\u6837\u770b\u8d77\u6765\u662f\u53ef\u884c\u7684\uff08\u524d\u63d0\u662f\u60a8\u4f7f\u7528\u7684\u662fReduceFunction\u6216AggregateFunction\uff09\uff0c\u4f46\u4e0d\u662f\u3002\n \n-The reason why this works is that the events produced by a time window are assigned timestamps\n-based on the time at the end of the window. So, for example, all of the events produced\n-by an hour-long window will have timestamps marking the end of an hour. Any subsequent window\n-consuming those events should have a duration that is the same as, or a multiple of, the\n-previous window.\n+\u4e4b\u6240\u4ee5\u53ef\u884c\uff0c\u662f\u56e0\u4e3a\u65f6\u95f4\u7a97\u53e3\u4ea7\u751f\u7684\u4e8b\u4ef6\u662f\u6839\u636e\u7a97\u53e3\u7ed3\u675f\u65f6\u7684\u65f6\u95f4\u5206\u914d\u65f6\u95f4\u6233\u7684\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5c0f\u65f6\u5c0f\u65f6\u7684\u7a97\u53e3\u6240\u4ea7\u751f\u7684\u6240\u6709\u4e8b\n+\u4ef6\u90fd\u5c06\u5e26\u6709\u6807\u8bb0\u4e00\u4e2a\u5c0f\u65f6\u7ed3\u675f\u7684\u65f6\u95f4\u6233\u3002\u540e\u9762\u7684\u7a97\u53e3\u5185\u7684\u6570\u636e\u6d88\u8d39\u548c\u524d\u9762\u7684\u6d41\u4ea7\u751f\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\u3002\n \n-#### No Results for Empty TimeWindows\n+#### \u7a7a\u7684\u7a97\u53e3\u4e0d\u4f1a\u4ea7\u51fa\u7ed3\u679c\n \n-Windows are only created when events are assigned to them. So if there are no events in a given time\n-frame, no results will be reported.\n+\u4e8b\u4ef6\u4f1a\u89e6\u53d1\u7a97\u53e3\u7684\u521b\u5efa\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u5728\u7279\u5b9a\u7684\u7a97\u53e3\u5185\u6ca1\u6709\u4e8b\u4ef6\uff0c\u5c31\u4e0d\u4f1a\u6709\u7a97\u53e3\uff0c\u5c31\u4e0d\u4f1a\u6709\u8f93\u51fa\u7ed3\u679c\u3002\n \n #### Late Events Can Cause Late Merges\n \n-Session windows are based on an abstraction of windows that can _merge_. Each element is initially\n-assigned to a new window, after which windows are merged whenever the gap between them is small\n-enough. In this way, a late event can bridge the gap separating two previously separate sessions,\n-producing a late merge.\n+\u4f1a\u8bdd\u7a97\u53e3\u7684\u5b9e\u73b0\u662f\u57fa\u4e8e\u7a97\u53e3\u7684\u4e00\u4e2a\u62bd\u8c61\u80fd\u529b\uff0c\u7a97\u53e3\u53ef\u4ee5_\u805a\u5408_\u3002\u4f1a\u8bdd\u7a97\u53e3\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5728\u521d\u59cb\u88ab\u6d88\u8d39\u65f6\uff0c\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u65b0\u7684\n+\u7a97\u53e3\uff0c\u4f46\u662f\u5982\u679c\u7a97\u53e3\u4e4b\u95f4\u7684\u95f4\u9694\u8db3\u591f\u5c0f\uff0c\u591a\u4e2a\u7a97\u53e3\u5c31\u4f1a\u88ab\u805a\u5408\u3002\u5ef6\u8fdf\u4e8b\u4ef6\u53ef\u4ee5\u5f25\u5408\u5206\u9694\u4e24\u4e2a\u5148\u524d\u5206\u5f00\u7684\u4f1a\u8bdd\u7684\u95f4\u9694\uff0c\u4ece\u800c\u4ea7\u751f", "originalCommit": "0c911fb0b8ae6fc7dabf929ae10b27b24e0b604d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MDYxMw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r429050613", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5c06\u5728\u9009\u8282[\u4f7f\u7528Watermarks]({% linktutorials/streaming_analytics.zh.md %}#\u4f7f\u7528Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n          \n          \n            \n            \u5c06\u5728\u9009\u8282[\u4f7f\u7528Watermarks]({% link training/streaming_analytics.zh.md %}#\u4f7f\u7528Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n          \n      \n    \n    \n  \n\n\u8fd9\u4e2a\u5728\u672c\u5730\u6267\u884c sh docs/build.sh -p \u7684\u65f6\u5019\u4f1a\u6709\u62a5\u9519\u4fe1\u606f\u7684\uff0c\u82f1\u6587\u539f\u6587\u4e2d\u662f\u6709\u7a7a\u884c\u7684\uff0c\u56e0\u6b64 link \u548c tutorials \u4e2d\u95f4\u5c31\u6709\u7a7a\u683c\u4e86\n\u53e6\u5916\u7ffb\u8bd1\u4e0d\u592a\u5efa\u8bae\u5728\u7ffb\u8bd1 PR \u4e2d\u76f4\u63a5\u4fee\u6539\u4e00\u4e9b\u4e0d\u786e\u5b9a\u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684\u628a training \u6539\u6210 toturials\uff0c\u9664\u975e\u80af\u5b9a\u8fd9\u4e2a\u5730\u65b9\u662f\u9700\u8981\u4fee\u6539\u7684\uff0c\u5982\u679c\u4e0d\u662f\u975e\u5e38\u80af\u5b9a\uff0c\u5efa\u8bae\u629b\u51fa\u6765\u5927\u5bb6\u8ba8\u8bba\u4e0b\u518d\u51b3\u5b9a\uff0c\u907f\u514d\u8fd4\u5de5\u6d6a\u8d39\u4f60\u7684\u65f6\u95f4~", "author": "klion26", "createdAt": "2020-05-22T05:33:24Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,99 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4:_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4:_ Flink \u63d0\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4:_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u65f6\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u4e8b\u4ef6\u7684\u751f\u6210\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u65b0\u5206\u6790\u5386\u53f2\u6570\u636e\u548c\u6d4b\u8bd5\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528Watermarks]({% linktutorials/streaming_analytics.zh.md %}#\u4f7f\u7528Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b", "originalCommit": "bc9d6c2516b7c689079cd9aa2558820334f5ca73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MTQxNQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r429051415", "bodyText": "\u201c\u8bfb\u53d6\u4e8b\u4ef6\u201c \u4f1a\u66f4\u597d\u4e00\u4e9b\u5417\uff1f", "author": "klion26", "createdAt": "2020-05-22T05:36:51Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,99 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4:_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4:_ Flink \u63d0\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\u6233", "originalCommit": "bc9d6c2516b7c689079cd9aa2558820334f5ca73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcxMTEyMA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r429711120", "bodyText": "\u611f\u89c9\u8981\u597d\u5f88\u591a", "author": "twentyworld", "createdAt": "2020-05-25T02:46:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MTQxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkyNTgzOA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433925838", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### \u4f7f\u7528Watermarks\n          \n          \n            \n            ### \u4f7f\u7528 Watermarks", "author": "klion26", "createdAt": "2020-06-02T14:35:31Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n+\u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\n+\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u52301\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a2\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f watermarks \u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermarks*\u3002\u4e8b\u4ef6\n+\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u4e0d\u4f1a\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002\n \n-When should this stream sorter stop waiting, and push out the 2 to start the sorted stream? When a\n-watermark arrives with a timestamp of 2, or greater.\n+\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u63a8\u51fa2\u4ee5\u542f\u52a8\u5df2\u5206\u7c7b\u7684\u6d41\uff1f\u5f53 watermark \u4ee52\u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff01\n \n-(4) You might imagine different policies for deciding how to generate watermarks.\n+(4) \u6211\u4eec\u53ef\u80fd\u4f1a\u601d\u8003\uff0c\u5982\u4f55\u51b3\u5b9a watermarks \u7684\u4e0d\u540c\u751f\u6210\u7b56\u7565\n \n-Each event arrives after some delay, and these delays vary, so some events are delayed more than\n-others. One simple approach is to assume that these delays are bounded by some maximum delay. Flink\n-refers to this strategy as *bounded-out-of-orderness* watermarking. It is easy to imagine more\n-complex approaches to watermarking, but for most applications a fixed delay works well enough.\n+\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u4f1a\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u540e\u5230\u8fbe\uff0c\u7136\u800c\u8fd9\u4e9b\u5ef6\u8fdf\u6709\u6240\u4e0d\u540c\uff0c\u6709\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u5176\u4ed6\u4e8b\u4ef6\u5ef6\u8fdf\u5f97\u66f4\u591a\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5047\u5b9a\u8fd9\u4e9b\n+\u5ef6\u8fdf\u53d7\u67d0\u4e2a\u6700\u5927\u5ef6\u8fdf\u7684\u9650\u5236\u3002Flink \u5c06\u6b64\u7b56\u7565\u79f0\u4e3a *\u6700\u5927\u65e0\u5e8f\u8fb9\u754c(bounded-out-of-orderness)* watermark\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u50cf\n+\u51fa\u66f4\u597d\u7684\u751f\u6210 watermark \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u800c\u8a00\uff0c\u56fa\u5b9a\u5ef6\u8fdf\u7b56\u7565\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\n \n-### Latency vs. Completeness\n+<a name=\"Latency-vs.-Completeness\"></a>\n+### \u5ef6\u8fdf VS \u6b63\u786e\u6027\n \n-Another way to think about watermarks is that they give you, the developer of a streaming\n-application, control over the tradeoff between latency and completeness. Unlike in batch processing,\n-where one has the luxury of being able to have complete knowledge of the input before producing any\n-results, with streaming you must eventually stop waiting to see more of the input, and produce some\n-sort of result.\n+watermarks \u7ed9\u4e86\u5f00\u53d1\u8005\u6d41\u5904\u7406\u7684\u4e00\u79cd\u9009\u62e9\uff0c\u5b83\u4eec\u4f7f\u5f00\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u662f\u53ef\u4ee5\u63a7\u5236\u5ef6\u8fdf\u548c\u5b8c\u6574\u6027\u4e4b\u95f4\u7684\u6743\u8861\u3002\u4e0e\u6279\u5904\u7406\u4e0d\u540c\uff0c\u6279\n+\u5904\u7406\u4e2d\u7684\u5962\u4f88\u4e4b\u5904\u5728\u4e8e\u53ef\u4ee5\u5728\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\u4e4b\u524d\u5b8c\u5168\u4e86\u89e3\u8f93\u5165\uff0c\u800c\u4f7f\u7528\u6d41\u5f0f\u4f20\u8f93\uff0c\u6211\u4eec\u4e0d\u88ab\u5141\u8bb8\u7b49\u5f85\u6240\u6709\u7684\u65f6\u95f4\u90fd\u4ea7\u751f\u4e86\uff0c\u624d\n+\u8f93\u51fa\u6392\u5e8f\u597d\u7684\u6570\u636e\uff0c\u8fd9\u4e0e\u6d41\u76f8\u8fdd\u80cc\u3002\n \n-You can either configure your watermarking aggressively, with a short bounded delay, and thereby\n-take the risk of producing results with rather incomplete knowledge of the input -- i.e., a possibly\n-wrong result, produced quickly. Or you can wait longer, and produce results that take advantage of\n-having more complete knowledge of the input stream(s).\n+\u6211\u4eec\u53ef\u4ee5\u628a watermarks \u7684\u8fb9\u754c\u65f6\u95f4\u914d\u7f6e\u7684\u76f8\u5bf9\u8f83\u77ed\uff0c\u4ece\u800c\u5192\u7740\u5728\u8f93\u5165\u4e86\u89e3\u4e0d\u5b8c\u5168\u7684\u60c5\u51b5\u4e0b\u4ea7\u751f\u7ed3\u679c\u7684\u98ce\u9669-\u5373\u53ef\u80fd\u4f1a\u5f88\u5feb\u4ea7\u751f\u9519\u8bef\u7684\n+\u7ed3\u679c\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u7b49\u5f85\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u5e76\u5229\u7528\u5bf9\u8f93\u5165\u6d41\u7684\u66f4\u5168\u9762\u7684\u4e86\u89e3\u6765\u4ea7\u751f\u7ed3\u679c\u3002\n \n-It is also possible to implement hybrid solutions that produce initial results quickly, and then\n-supply updates to those results as additional (late) data is processed. This is a good approach for\n-some applications.\n+\u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9e\u65bd\u6df7\u5408\u89e3\u51b3\u65b9\u6848\uff0c\u5148\u5feb\u901f\u4ea7\u751f\u521d\u6b65\u7ed3\u679c\uff0c\u7136\u540e\u5728\u5904\u7406\u5176\u4ed6\uff08\u6700\u65b0\uff09\u6570\u636e\u65f6\u5411\u8fd9\u4e9b\u7ed3\u679c\u63d0\u4f9b\u66f4\u65b0\u3002\u5bf9\u4e8e\u6709\u4e00\u4e9b\u5bf9\u5ef6\n+\u8fdf\u7684\u5bb9\u5fcd\u7a0b\u5ea6\u5f88\u4f4e\uff0c\u4f46\u662f\u53c8\u5bf9\u7ed3\u679c\u6709\u5f88\u4e25\u683c\u7684\u8981\u6c42\u7684\u573a\u666f\u4e0b\uff0c\u6216\u8bb8\u662f\u4e00\u4e2a\u798f\u97f3\u3002\n \n-### Lateness\n+<a name=\"Latency\"></a>\n+### \u5ef6\u8fdf\n \n-Lateness is defined relative to the watermarks. A `Watermark(t)` asserts that the stream is complete\n-up through time _t_; any event following this watermark whose timestamp is &le; _t_ is late.\n+\u5ef6\u8fdf\u662f\u76f8\u5bf9\u4e8e watermarks \u5b9a\u4e49\u7684\u3002`Watermark(t)` \u5224\u5b9a\u4e8b\u4ef6\u6d41\u7684\u65f6\u95f4\u5df2\u7ecf\u5230\u8fbe\u4e86 _t_; watermark \u4e4b\u540e\u7684\u65f6\u95f4\u6233\u4e3a &le; _t_ \u7684\n+\u4efb\u4f55\u4e8b\u4ef6\u90fd\u88ab\u79f0\u4e4b\u4e3a\u5ef6\u8fdf\u4e8b\u4ef6\u3002\n \n-### Working with Watermarks\n+<a name=\"Working-with-Watermarks\"></a>\n+### \u4f7f\u7528Watermarks", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkyNjk3Ng==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433926976", "bodyText": "\u8fd9\u91cc 44 \u884c\u9700\u8981\u548c 43 \u884c\u5408\u5e76\uff0c\u5426\u5219 \u201c\u65e0\u8bba\u201d \u548c \u201c\u4ec0\u4e48\u201d \u4e4b\u95f4\u4f1a\u6709\u7a7a\u683c\n45 \u548c 44 \u4e5f\u9700\u8981\u5408\u5e76\uff0c\u5426\u5219 \u201c\u6240\u51b3\u201d \u548c \u201c\u5b9a\u201d \u4e4b\u95f4\u6709\u7a7a\u683c\nThis kind of real-time application is sometimes performed using processing time, but then the results are determined by the events that happen to be processed during that hour, rather than the events that occurred then. \u8fd9\u53e5\u8bdd\u7684\u7ffb\u8bd1\u76f4\u63a5\u7ffb\u8bd1\u5373\u53ef\uff0c\u6bd4\u5982 \u7136\u540e\u4f7f\u7528 processing time \u7684\u90a3\u4e9b\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u5904\u7406\u7ed3\u679c\uff0c\u5219\u7531\u90a3\u4e00\u5c0f\u65f6\u4e2d\u6240\u5904\u7406\u7684\u6570\u636e\u6240\u51b3\u5b9a\uff08\u4e0d\u4e00\u5b9a\u662f\u8fd9\u4e2a\u7ffb\u8bd1\uff0c\u53ef\u4ee5\u7528\u4f60\u81ea\u5df1\u7684\u8bed\u53e5\u63cf\u8ff0\uff09", "author": "klion26", "createdAt": "2020-06-02T14:37:07Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMDk0Mw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433930943", "bodyText": "\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4 \u8fd9\u53e5\u8bdd\u8bfb\u8d77\u6765\u4e0d\u901a\u987a\uff0c\u57fa\u4e8e\u5904\u7406\u65f6\u95f4 \u4f1a\u5bfc\u81f4 \u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c \u8fd9\u91cc\u5e94\u8be5\u662f\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u7684\u8ba1\u7b97\uff1f\u6216\u8005\u5176\u4ed6\u7684\u52a8\u4f5c", "author": "klion26", "createdAt": "2020-06-02T14:42:41Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwMzA2OA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r437403068", "bodyText": "\u662f\u7684\uff0c\u8fd9\u4e00\u70b9\uff0c\u6211\u53cd\u590d\u659f\u914c\uff0c\u8fd8\u662f\u6ca1\u5f04\u597d\uff0c\u8fd9\u91cc\u4e2d\u95f4 \u52a0\u4e0a \u7684\u8ba1\u7b97 \u4f1a\u597d\u5f88\u591a\u3002\n\u6216\u8005\u8fd9\u6837\uff1a\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u76f8\u540c?\n\u611f\u89c9\u8fd9\u6837\u7684\u8bdd\uff0c\u5f88\u6e05\u6670\uff0c\u4e5f\u5f88\u76f4\u767d\u3002", "author": "twentyworld", "createdAt": "2020-06-09T13:09:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMDk0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMTg0MQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433931841", "bodyText": "\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u7ee7\u7eed\u4fee\u6539 \u4f1a\u66f4\u597d\u4e00\u4e9b\u5417\uff1f", "author": "klion26", "createdAt": "2020-06-02T14:43:58Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMjE5Mw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433932193", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n          \n          \n            \n            \u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9", "author": "klion26", "createdAt": "2020-06-02T14:44:29Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMjM5NA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433932394", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n          \n          \n            \n            \u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b", "author": "klion26", "createdAt": "2020-06-02T14:44:45Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMzU2NQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433933565", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n          \n          \n            \n            \u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n          \n      \n    \n    \n  \n\n1 \u8fd9\u4e00\u884c\u9700\u8981\u548c\u4e0a\u4e00\u884c\u5408\u5e76\uff0c\u5426\u5219 \u201c\u8fbe\u5230\u7684\u201d \u548c \u201c\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u201d\u4e2d\u95f4\u6709\u7a7a\u683c\n2 \u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2 \u5176\u4e2d\u7684 \u65f6\u95f4 4 \u548c \u65f6\u95f4 2 \u8fd9\u4e2a\u63cf\u8ff0\u548c\u6b63\u5e38\u7684\u4e2d\u6587\u63cf\u8ff0\u6709\u70b9\u4e0d\u4e00\u6837\uff0c", "author": "klion26", "createdAt": "2020-06-02T14:46:07Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzNjEwMA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433936100", "bodyText": "74 \u884c\u9700\u8981\u548c 73 \u884c\u5408\u5e76\uff0c\u53e6\u5916\u8fd9\u53e5\u8bdd\u80fd\u591f\u518d\u4f18\u5316\u4e00\u4e0b\u5417\uff1f", "author": "klion26", "createdAt": "2020-06-02T14:49:36Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxMDk1Nw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r437410957", "bodyText": "\u8fd9\u53e5\u8bdd\u7ffb\u8bd1\u8d77\u6765\u6709\u70b9\u610f\u601d\uff0c\u611f\u89c9\u62ff\u634f\u7684\u4e0d\u597d\uff1a\n\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u6709\u4e00\u4e2a\u7b97\u5b50\uff08\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u6392\u5e8f\uff09\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u7b97\u5b50\u6240\u8f93\u51fa\u7684\u6d41\u662f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u597d\u7684\u3002", "author": "twentyworld", "createdAt": "2020-06-09T13:20:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzNjEwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzNzIwMw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433937203", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n          \n          \n            \n            (1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f 4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n          \n      \n    \n    \n  \n\n\u7b2c\u4e00\u4e2a\u5143\u7d20\u8f93\u51fa \u4f1a\u597d\u4e00\u4e9b\u5417\uff1f\u91ca\u653e \u5728\u8fd9\u91cc\u4e0d\u592a\u5408\u9002", "author": "klion26", "createdAt": "2020-06-02T14:51:12Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzNzU0OA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433937548", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n          \n          \n            \n            \u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u5230 2 \u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n          \n      \n    \n    \n  \n\n79 \u9700\u8981\u548c 78 \u884c\u5408\u5e76", "author": "klion26", "createdAt": "2020-06-02T14:51:40Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MDExMw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433940113", "bodyText": "\u56fa\u6267\u7684\u7b49\u5f85 -> \u65e0\u5c3d\u7684\u7b49\u5f85 \u4f1a\u597d\u4e00\u4e9b\u5417\uff1f\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n          \n          \n            \n            (2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f4 4 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n          \n      \n    \n    \n  \n\n\u8fd9\u91cc\u5e94\u8be5\u662f\u8bf4\u770b\u5230\u4e00\u4e2a time 4 \u7684\u4e8b\u4ef6\uff0c\u7136\u540e\u662f\u4e00\u4e2a time 2 \u7684\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u91cd\u65b0\u8c03\u6574\u4e0b\u8bed\u53e5", "author": "klion26", "createdAt": "2020-06-02T14:55:02Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MTI1Mg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433941252", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\n          \n          \n            \n            \u95f4 2 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e 2 \u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211", "author": "klion26", "createdAt": "2020-06-02T14:56:27Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n+\u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MTgzMg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433941832", "bodyText": "85 \u884c\u9700\u8981\u548c\u4e0a\u9762\u7684\u5408\u5e76\u3002\u5177\u4f53\u6548\u679c\u4f60\u53ef\u4ee5\u6267\u884c ./docs/build.sh -p \u4e4b\u540e\u8fdb\u884c\u67e5\u770b", "author": "klion26", "createdAt": "2020-06-02T14:57:13Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n+\u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\n+\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u52301\u3002", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MzQwNg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433943406", "bodyText": "\u5e76\u53d1\u51fa\u6307\u4ee4 \u8fd9\u91cc\u9700\u8981\u4fee\u6539\u4e0b\uff0c\u8fd9\u4e2a\u610f\u601d\u4e0d\u5bf9\u3002\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a2\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n          \n          \n            \n            *\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a 2 \u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*", "author": "klion26", "createdAt": "2020-06-02T14:59:17Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n+\u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\n+\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u52301\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a2\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0NDI5Mw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433944293", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u63a8\u51fa2\u4ee5\u542f\u52a8\u5df2\u5206\u7c7b\u7684\u6d41\uff1f\u5f53 watermark \u4ee52\u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff01\n          \n          \n            \n            \u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u63a8\u51fa 2 \u4ee5\u542f\u52a8\u5df2\u5206\u7c7b\u7684\u6d41\uff1f\u5f53 watermark \u4ee5 2 \u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff01\n          \n      \n    \n    \n  \n\n\u5f53 watermark \u4ee5 2 \u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6 \u8fd9\u53e5\u8bdd\u9700\u8981\u8c03\u6574\n\n\u4e0d\u50cf\u6b63\u5e38\u4e2d\u6587\u7684\u63cf\u8ff0\n\u53ef\u4ee5\u7b80\u5316\u4e0b\u63cf\u8ff0", "author": "klion26", "createdAt": "2020-06-02T15:00:28Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n+\u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\n+\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u52301\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a2\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f watermarks \u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermarks*\u3002\u4e8b\u4ef6\n+\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u4e0d\u4f1a\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002\n \n-When should this stream sorter stop waiting, and push out the 2 to start the sorted stream? When a\n-watermark arrives with a timestamp of 2, or greater.\n+\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u63a8\u51fa2\u4ee5\u542f\u52a8\u5df2\u5206\u7c7b\u7684\u6d41\uff1f\u5f53 watermark \u4ee52\u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff01", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxMzUwMQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r437413501", "bodyText": "\u5f53 watermark \u4ee5 2 \u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff0c\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u63a8\u51fa 2 \u4f5c\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\u6d41\u3002\n\u8fd9\u6837\u4f1a\u597d\u4e00\u70b9\uff0c\u611f\u89c9", "author": "twentyworld", "createdAt": "2020-06-09T13:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0NDI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxMzg4NA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r437413884", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u63a8\u51fa2\u4ee5\u542f\u52a8\u5df2\u5206\u7c7b\u7684\u6d41\uff1f\u5f53 watermark \u4ee52\u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff01\n          \n          \n            \n            \u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u63a8\u51fa2\u4ee5\u542f\u52a8\u5df2\u5206\u7c7b\u7684\u6d41\uff1f\u5f53 watermark \u4ee52\u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff01\n          \n      \n    \n    \n  \n\n\u5f53 watermark \u4ee5 2 \u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff0c\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u8f93\u51fa 2 \u4f5c\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\u6d41\u3002", "author": "twentyworld", "createdAt": "2020-06-09T13:24:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0NDI5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0NjYyNw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433946627", "bodyText": "\u8fd9\u4e00\u884c\u548c\u4e0a\u4e00\u884c\u5408\u5e76", "author": "klion26", "createdAt": "2020-06-02T15:03:40Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,104 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\n+\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u6709\u4e9b\u4eba\uff0c\u5728\u5b9e\u65f6\u8ba1\u7b97\u5e94\u7528\u4e2d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u4f1a\u88ab\u5904\u7406\u65f6\u95f4\u70b9\u6240\u51b3\n+\u5b9a\uff0c\u800c\u4e0d\u662f\u751f\u4ea7\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u57fa\u4e8e\u5904\u7406\u65f6\u95f4\u4f1a\u5bfc\u81f4\u591a\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-training/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\n+\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link training/streaming_analytics.zh.md %}#Working-with-Watermarks)\u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b\n+ watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\n+\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f44\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f42\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\uff0c\u5e76\u53d1\u51fa\u5305\u542b\u76f8\u540c\n+\u4e8b\u4ef6\u4f46\u6309\u5176\u65f6\u95f4\u6233\u6392\u5e8f\u7684\u65b0\u6d41\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\n+\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u52302\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f44\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\n+\u95f42\u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e2\u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\n+\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u52301\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a2\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f watermarks \u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermarks*\u3002\u4e8b\u4ef6\n+\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u4e0d\u4f1a\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002\n \n-When should this stream sorter stop waiting, and push out the 2 to start the sorted stream? When a\n-watermark arrives with a timestamp of 2, or greater.\n+\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u63a8\u51fa2\u4ee5\u542f\u52a8\u5df2\u5206\u7c7b\u7684\u6d41\uff1f\u5f53 watermark \u4ee52\u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff01\n \n-(4) You might imagine different policies for deciding how to generate watermarks.\n+(4) \u6211\u4eec\u53ef\u80fd\u4f1a\u601d\u8003\uff0c\u5982\u4f55\u51b3\u5b9a watermarks \u7684\u4e0d\u540c\u751f\u6210\u7b56\u7565\n \n-Each event arrives after some delay, and these delays vary, so some events are delayed more than\n-others. One simple approach is to assume that these delays are bounded by some maximum delay. Flink\n-refers to this strategy as *bounded-out-of-orderness* watermarking. It is easy to imagine more\n-complex approaches to watermarking, but for most applications a fixed delay works well enough.\n+\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u4f1a\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u540e\u5230\u8fbe\uff0c\u7136\u800c\u8fd9\u4e9b\u5ef6\u8fdf\u6709\u6240\u4e0d\u540c\uff0c\u6709\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u5176\u4ed6\u4e8b\u4ef6\u5ef6\u8fdf\u5f97\u66f4\u591a\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5047\u5b9a\u8fd9\u4e9b\n+\u5ef6\u8fdf\u53d7\u67d0\u4e2a\u6700\u5927\u5ef6\u8fdf\u7684\u9650\u5236\u3002Flink \u5c06\u6b64\u7b56\u7565\u79f0\u4e3a *\u6700\u5927\u65e0\u5e8f\u8fb9\u754c(bounded-out-of-orderness)* watermark\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u50cf\n+\u51fa\u66f4\u597d\u7684\u751f\u6210 watermark \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u800c\u8a00\uff0c\u56fa\u5b9a\u5ef6\u8fdf\u7b56\u7565\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\n \n-### Latency vs. Completeness\n+<a name=\"Latency-vs.-Completeness\"></a>\n+### \u5ef6\u8fdf VS \u6b63\u786e\u6027\n \n-Another way to think about watermarks is that they give you, the developer of a streaming\n-application, control over the tradeoff between latency and completeness. Unlike in batch processing,\n-where one has the luxury of being able to have complete knowledge of the input before producing any\n-results, with streaming you must eventually stop waiting to see more of the input, and produce some\n-sort of result.\n+watermarks \u7ed9\u4e86\u5f00\u53d1\u8005\u6d41\u5904\u7406\u7684\u4e00\u79cd\u9009\u62e9\uff0c\u5b83\u4eec\u4f7f\u5f00\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u662f\u53ef\u4ee5\u63a7\u5236\u5ef6\u8fdf\u548c\u5b8c\u6574\u6027\u4e4b\u95f4\u7684\u6743\u8861\u3002\u4e0e\u6279\u5904\u7406\u4e0d\u540c\uff0c\u6279\n+\u5904\u7406\u4e2d\u7684\u5962\u4f88\u4e4b\u5904\u5728\u4e8e\u53ef\u4ee5\u5728\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\u4e4b\u524d\u5b8c\u5168\u4e86\u89e3\u8f93\u5165\uff0c\u800c\u4f7f\u7528\u6d41\u5f0f\u4f20\u8f93\uff0c\u6211\u4eec\u4e0d\u88ab\u5141\u8bb8\u7b49\u5f85\u6240\u6709\u7684\u65f6\u95f4\u90fd\u4ea7\u751f\u4e86\uff0c\u624d\n+\u8f93\u51fa\u6392\u5e8f\u597d\u7684\u6570\u636e\uff0c\u8fd9\u4e0e\u6d41\u76f8\u8fdd\u80cc\u3002\n \n-You can either configure your watermarking aggressively, with a short bounded delay, and thereby\n-take the risk of producing results with rather incomplete knowledge of the input -- i.e., a possibly\n-wrong result, produced quickly. Or you can wait longer, and produce results that take advantage of\n-having more complete knowledge of the input stream(s).\n+\u6211\u4eec\u53ef\u4ee5\u628a watermarks \u7684\u8fb9\u754c\u65f6\u95f4\u914d\u7f6e\u7684\u76f8\u5bf9\u8f83\u77ed\uff0c\u4ece\u800c\u5192\u7740\u5728\u8f93\u5165\u4e86\u89e3\u4e0d\u5b8c\u5168\u7684\u60c5\u51b5\u4e0b\u4ea7\u751f\u7ed3\u679c\u7684\u98ce\u9669-\u5373\u53ef\u80fd\u4f1a\u5f88\u5feb\u4ea7\u751f\u9519\u8bef\u7684\n+\u7ed3\u679c\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u7b49\u5f85\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u5e76\u5229\u7528\u5bf9\u8f93\u5165\u6d41\u7684\u66f4\u5168\u9762\u7684\u4e86\u89e3\u6765\u4ea7\u751f\u7ed3\u679c\u3002\n \n-It is also possible to implement hybrid solutions that produce initial results quickly, and then\n-supply updates to those results as additional (late) data is processed. This is a good approach for\n-some applications.\n+\u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9e\u65bd\u6df7\u5408\u89e3\u51b3\u65b9\u6848\uff0c\u5148\u5feb\u901f\u4ea7\u751f\u521d\u6b65\u7ed3\u679c\uff0c\u7136\u540e\u5728\u5904\u7406\u5176\u4ed6\uff08\u6700\u65b0\uff09\u6570\u636e\u65f6\u5411\u8fd9\u4e9b\u7ed3\u679c\u63d0\u4f9b\u66f4\u65b0\u3002\u5bf9\u4e8e\u6709\u4e00\u4e9b\u5bf9\u5ef6\n+\u8fdf\u7684\u5bb9\u5fcd\u7a0b\u5ea6\u5f88\u4f4e\uff0c\u4f46\u662f\u53c8\u5bf9\u7ed3\u679c\u6709\u5f88\u4e25\u683c\u7684\u8981\u6c42\u7684\u573a\u666f\u4e0b\uff0c\u6216\u8bb8\u662f\u4e00\u4e2a\u798f\u97f3\u3002\n \n-### Lateness\n+<a name=\"Latency\"></a>\n+### \u5ef6\u8fdf\n \n-Lateness is defined relative to the watermarks. A `Watermark(t)` asserts that the stream is complete\n-up through time _t_; any event following this watermark whose timestamp is &le; _t_ is late.\n+\u5ef6\u8fdf\u662f\u76f8\u5bf9\u4e8e watermarks \u5b9a\u4e49\u7684\u3002`Watermark(t)` \u5224\u5b9a\u4e8b\u4ef6\u6d41\u7684\u65f6\u95f4\u5df2\u7ecf\u5230\u8fbe\u4e86 _t_; watermark \u4e4b\u540e\u7684\u65f6\u95f4\u6233\u4e3a &le; _t_ \u7684\n+\u4efb\u4f55\u4e8b\u4ef6\u90fd\u88ab\u79f0\u4e4b\u4e3a\u5ef6\u8fdf\u4e8b\u4ef6\u3002", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0Nzg5Ng==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433947896", "bodyText": "\u7ed9\u8fd9\u4e9b\u6807\u9898\u589e\u52a0\u4e00\u4e2a\u6807\u7b7e\u662f\u4e00\u4e2a\u597d\u4e60\u60ef\uff0c\u8fd9\u6837\u5982\u679c\u6709\u9875\u5185\u8df3\u8f6c\u7684\u8bdd\uff0c\u5c31\u4e0d\u4f1a\u5931\u6548\u4e86 \ud83d\udc4d", "author": "klion26", "createdAt": "2020-06-02T15:05:17Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -167,38 +148,36 @@ public static class TimestampsAndWatermarks\n }\n {% endhighlight %}\n \n-Note that the constructor for `BoundedOutOfOrdernessTimestampExtractor` takes a parameter which\n-specifies the maximum expected out-of-orderness (10 seconds, in this example).\n+\u8bf7\u4ed4\u7ec6\u89c2\u5bdf, `BoundedOutOfOrdernessTimestampExtractor` \u7684\u6784\u9020\u51fd\u6570\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e38\u91cf\u7528\u6765\u6307\u5b9a\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u7a0b\u5ea6\uff08\u5728\u6b64\u793a\u4f8b\u4e2d\u4e3a10\u79d2\uff09\u3002\n \n {% top %}\n \n ## Windows\n \n-Flink features very expressive window semantics.\n+Flink \u5728\u7a97\u53e3\u7684\u573a\u666f\u5904\u7406\u4e0a\u975e\u5e38\u6709\u8868\u73b0\u529b\u3002\n \n-In this section you will learn:\n+\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\uff1a\n \n-* how windows are used to compute aggregates on unbounded streams,\n-* which types of windows Flink supports, and\n-* how to implement a DataStream program with a windowed aggregation\n+* \u5982\u4f55\u4f7f\u7528\u7a97\u53e3\u6765\u8ba1\u7b97\u65e0\u754c\u6d41\u4e0a\u7684\u805a\u5408,\n+* Flink \u652f\u6301\u54ea\u79cd\u7c7b\u578b\u7684\u7a97\u53e3\uff0c\u4ee5\u53ca\n+* \u5982\u4f55\u4f7f\u7528\u7a97\u53e3\u805a\u5408\u6765\u5b9e\u73b0 DataStream \u7a0b\u5e8f\n \n-### Introduction\n+<a name=\"Introduction\"></a>", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0ODE3Mg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433948172", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u4e00\u822c\u8fd9\u6837\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff08\u57fa\u4e8ekey\u5206\u7ec4\u7684\u8f93\u5165\u4e8b\u4ef6\u6d41\uff09\uff1a\n          \n          \n            \n            \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u4e00\u822c\u8fd9\u6837\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff08\u57fa\u4e8e key \u5206\u7ec4\u7684\u8f93\u5165\u4e8b\u4ef6\u6d41\uff09\uff1a", "author": "klion26", "createdAt": "2020-06-02T15:05:40Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -167,38 +148,36 @@ public static class TimestampsAndWatermarks\n }\n {% endhighlight %}\n \n-Note that the constructor for `BoundedOutOfOrdernessTimestampExtractor` takes a parameter which\n-specifies the maximum expected out-of-orderness (10 seconds, in this example).\n+\u8bf7\u4ed4\u7ec6\u89c2\u5bdf, `BoundedOutOfOrdernessTimestampExtractor` \u7684\u6784\u9020\u51fd\u6570\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e38\u91cf\u7528\u6765\u6307\u5b9a\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u7a0b\u5ea6\uff08\u5728\u6b64\u793a\u4f8b\u4e2d\u4e3a10\u79d2\uff09\u3002\n \n {% top %}\n \n ## Windows\n \n-Flink features very expressive window semantics.\n+Flink \u5728\u7a97\u53e3\u7684\u573a\u666f\u5904\u7406\u4e0a\u975e\u5e38\u6709\u8868\u73b0\u529b\u3002\n \n-In this section you will learn:\n+\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\uff1a\n \n-* how windows are used to compute aggregates on unbounded streams,\n-* which types of windows Flink supports, and\n-* how to implement a DataStream program with a windowed aggregation\n+* \u5982\u4f55\u4f7f\u7528\u7a97\u53e3\u6765\u8ba1\u7b97\u65e0\u754c\u6d41\u4e0a\u7684\u805a\u5408,\n+* Flink \u652f\u6301\u54ea\u79cd\u7c7b\u578b\u7684\u7a97\u53e3\uff0c\u4ee5\u53ca\n+* \u5982\u4f55\u4f7f\u7528\u7a97\u53e3\u805a\u5408\u6765\u5b9e\u73b0 DataStream \u7a0b\u5e8f\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-It is natural when doing stream processing to want to compute aggregated analytics on bounded subsets\n-of the streams in order to answer questions like these:\n+\u6211\u4eec\u5728\u64cd\u4f5c\u65e0\u754c\u6570\u636e\u6d41\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u5e94\u5bf9\u4ee5\u4e0b\u95ee\u9898\uff0c\u6211\u4eec\u7ecf\u5e38\u628a\u65e0\u754c\u6570\u636e\u6d41\u5206\u89e3\u6210\u6709\u754c\u6570\u636e\u6d41\u805a\u5408\u5206\u6790:\n \n-* number of page views per minute\n-* number of sessions per user per week\n-* maximum temperature per sensor per minute\n+* \u6bcf\u5206\u949f\u7684\u6d4f\u89c8\u91cf\n+* \u6bcf\u4f4d\u7528\u6237\u6bcf\u5468\u7684\u4f1a\u8bdd\u6570\n+* \u6bcf\u4e2a\u4f20\u611f\u5668\u6bcf\u5206\u949f\u7684\u6700\u9ad8\u6e29\u5ea6\n \n-Computing windowed analytics with Flink depends on two principal abstractions: _Window Assigners_\n-that assign events to windows (creating new window objects as necessary), and _Window Functions_\n-that are applied to the events assigned to a window.\n+\u7528 Flink \u8ba1\u7b97\u7a97\u53e3\u5206\u6790\u53d6\u51b3\u4e8e\u4e24\u4e2a\u4e3b\u8981\u7684\u62bd\u8c61\u64cd\u4f5c\uff1a_Window Assigners_\uff0c\u5c06\u4e8b\u4ef6\u5206\u914d\u7ed9\u7a97\u53e3\uff08\u6839\u636e\u9700\u8981\u521b\u5efa\u65b0\u7684\u7a97\u53e3\u5bf9\u8c61\uff09\uff0c\n+\u4ee5\u53ca _Window Functions_\uff0c\u5904\u7406\u7a97\u53e3\u5185\u7684\u6570\u636e\u3002\n \n-Flink's windowing API also has notions of _Triggers_, which determine when to call the window\n-function, and _Evictors_, which can remove elements collected in a window.\n+Flink \u7684\u7a97\u53e3 API \u8fd8\u5177\u6709 _Triggers_ \u548c _Evictors_ \u7684\u6982\u5ff5\uff0c_Triggers_ \u786e\u5b9a\u4f55\u65f6\u8c03\u7528\u7a97\u53e3\u51fd\u6570\uff0c\u800c _Evictors_ \u5219\n+\u53ef\u4ee5\u5220\u9664\u5728\u7a97\u53e3\u4e2d\u6536\u96c6\u7684\u5143\u7d20\u3002\n \n-In its basic form, you apply windowing to a keyed stream like this:\n+\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u4e00\u822c\u8fd9\u6837\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff08\u57fa\u4e8ekey\u5206\u7ec4\u7684\u8f93\u5165\u4e8b\u4ef6\u6d41\uff09\uff1a", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0OTUxMA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433949510", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u672c\u8282\u9644\u5e26\u7684\u52a8\u624b\u7ec3\u4e60\u662f[Hourly Tips\n          \n          \n            \n            \u672c\u8282\u9644\u5e26\u7684\u52a8\u624b\u7ec3\u4e60\u662f [Hourly Tips", "author": "klion26", "createdAt": "2020-06-02T15:07:30Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -437,37 +407,32 @@ stream\n     .reduce(<same reduce function>)\n {% endhighlight %}\n \n-You might expect Flink's runtime to be smart enough to do this parallel pre-aggregation for you\n-(provided you are using a ReduceFunction or AggregateFunction), but it's not.\n+\u53ef\u80fd\u6211\u4eec\u4f1a\u731c\u6d4b\u4ee5 Flink \u7684\u80fd\u529b\uff0c\u60f3\u8981\u505a\u5230\u8fd9\u6837\u770b\u8d77\u6765\u662f\u53ef\u884c\u7684\uff08\u524d\u63d0\u662f\u60a8\u4f7f\u7528\u7684\u662fReduceFunction\u6216AggregateFunction\uff09\uff0c\u4f46\u4e0d\u662f\u3002\n \n-The reason why this works is that the events produced by a time window are assigned timestamps\n-based on the time at the end of the window. So, for example, all of the events produced\n-by an hour-long window will have timestamps marking the end of an hour. Any subsequent window\n-consuming those events should have a duration that is the same as, or a multiple of, the\n-previous window.\n+\u4e4b\u6240\u4ee5\u53ef\u884c\uff0c\u662f\u56e0\u4e3a\u65f6\u95f4\u7a97\u53e3\u4ea7\u751f\u7684\u4e8b\u4ef6\u662f\u6839\u636e\u7a97\u53e3\u7ed3\u675f\u65f6\u7684\u65f6\u95f4\u5206\u914d\u65f6\u95f4\u6233\u7684\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5c0f\u65f6\u5c0f\u65f6\u7684\u7a97\u53e3\u6240\u4ea7\u751f\u7684\u6240\u6709\u4e8b\n+\u4ef6\u90fd\u5c06\u5e26\u6709\u6807\u8bb0\u4e00\u4e2a\u5c0f\u65f6\u7ed3\u675f\u7684\u65f6\u95f4\u6233\u3002\u540e\u9762\u7684\u7a97\u53e3\u5185\u7684\u6570\u636e\u6d88\u8d39\u548c\u524d\u9762\u7684\u6d41\u4ea7\u751f\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\u3002\n \n-#### No Results for Empty TimeWindows\n+<a name=\"No-Results-for-Empty-TimeWindows\"></a>\n+#### \u7a7a\u7684\u65f6\u95f4\u7a97\u53e3\u4e0d\u4f1a\u4ea7\u51fa\u7ed3\u679c\n \n-Windows are only created when events are assigned to them. So if there are no events in a given time\n-frame, no results will be reported.\n+\u4e8b\u4ef6\u4f1a\u89e6\u53d1\u7a97\u53e3\u7684\u521b\u5efa\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u5728\u7279\u5b9a\u7684\u7a97\u53e3\u5185\u6ca1\u6709\u4e8b\u4ef6\uff0c\u5c31\u4e0d\u4f1a\u6709\u7a97\u53e3\uff0c\u5c31\u4e0d\u4f1a\u6709\u8f93\u51fa\u7ed3\u679c\u3002\n \n #### Late Events Can Cause Late Merges\n \n-Session windows are based on an abstraction of windows that can _merge_. Each element is initially\n-assigned to a new window, after which windows are merged whenever the gap between them is small\n-enough. In this way, a late event can bridge the gap separating two previously separate sessions,\n-producing a late merge.\n+\u4f1a\u8bdd\u7a97\u53e3\u7684\u5b9e\u73b0\u662f\u57fa\u4e8e\u7a97\u53e3\u7684\u4e00\u4e2a\u62bd\u8c61\u80fd\u529b\uff0c\u7a97\u53e3\u53ef\u4ee5_\u805a\u5408_\u3002\u4f1a\u8bdd\u7a97\u53e3\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5728\u521d\u59cb\u88ab\u6d88\u8d39\u65f6\uff0c\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u65b0\u7684\n+\u7a97\u53e3\uff0c\u4f46\u662f\u5982\u679c\u7a97\u53e3\u4e4b\u95f4\u7684\u95f4\u9694\u8db3\u591f\u5c0f\uff0c\u591a\u4e2a\u7a97\u53e3\u5c31\u4f1a\u88ab\u805a\u5408\u3002\u5ef6\u8fdf\u4e8b\u4ef6\u53ef\u4ee5\u5f25\u5408\u4e24\u4e2a\u5148\u524d\u5206\u5f00\u7684\u4f1a\u8bdd\u95f4\u9694\uff0c\u4ece\u800c\u4ea7\u751f\n+\u4e00\u4e2a\u867d\u7136\u6709\u5ef6\u8fdf\u4f46\u662f\u66f4\u52a0\u51c6\u786e\u5730\u7ed3\u679c\u3002\n \n {% top %}\n \n-## Hands-on\n+## \u52a8\u624b\u7ec3\u4e60\n \n-The hands-on exercise that goes with this section is the [Hourly Tips\n+\u672c\u8282\u9644\u5e26\u7684\u52a8\u624b\u7ec3\u4e60\u662f[Hourly Tips", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0OTcxMg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433949712", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4f1a\u8bdd\u7a97\u53e3\u7684\u5b9e\u73b0\u662f\u57fa\u4e8e\u7a97\u53e3\u7684\u4e00\u4e2a\u62bd\u8c61\u80fd\u529b\uff0c\u7a97\u53e3\u53ef\u4ee5_\u805a\u5408_\u3002\u4f1a\u8bdd\u7a97\u53e3\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5728\u521d\u59cb\u88ab\u6d88\u8d39\u65f6\uff0c\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u65b0\u7684\n          \n          \n            \n            \u4f1a\u8bdd\u7a97\u53e3\u7684\u5b9e\u73b0\u662f\u57fa\u4e8e\u7a97\u53e3\u7684\u4e00\u4e2a\u62bd\u8c61\u80fd\u529b\uff0c\u7a97\u53e3\u53ef\u4ee5 _\u805a\u5408_\u3002\u4f1a\u8bdd\u7a97\u53e3\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5728\u521d\u59cb\u88ab\u6d88\u8d39\u65f6\uff0c\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u65b0\u7684\n          \n      \n    \n    \n  \n\n\u8fd9\u4e2a\u4f60\u53ef\u4ee5\u518d\u672c\u5730\u8d77\u6765\u7684 server \u4e2d\u67e5\u770b\u5177\u4f53\u7684\u6548\u679c\u3002", "author": "klion26", "createdAt": "2020-06-02T15:07:48Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -437,37 +407,32 @@ stream\n     .reduce(<same reduce function>)\n {% endhighlight %}\n \n-You might expect Flink's runtime to be smart enough to do this parallel pre-aggregation for you\n-(provided you are using a ReduceFunction or AggregateFunction), but it's not.\n+\u53ef\u80fd\u6211\u4eec\u4f1a\u731c\u6d4b\u4ee5 Flink \u7684\u80fd\u529b\uff0c\u60f3\u8981\u505a\u5230\u8fd9\u6837\u770b\u8d77\u6765\u662f\u53ef\u884c\u7684\uff08\u524d\u63d0\u662f\u60a8\u4f7f\u7528\u7684\u662fReduceFunction\u6216AggregateFunction\uff09\uff0c\u4f46\u4e0d\u662f\u3002\n \n-The reason why this works is that the events produced by a time window are assigned timestamps\n-based on the time at the end of the window. So, for example, all of the events produced\n-by an hour-long window will have timestamps marking the end of an hour. Any subsequent window\n-consuming those events should have a duration that is the same as, or a multiple of, the\n-previous window.\n+\u4e4b\u6240\u4ee5\u53ef\u884c\uff0c\u662f\u56e0\u4e3a\u65f6\u95f4\u7a97\u53e3\u4ea7\u751f\u7684\u4e8b\u4ef6\u662f\u6839\u636e\u7a97\u53e3\u7ed3\u675f\u65f6\u7684\u65f6\u95f4\u5206\u914d\u65f6\u95f4\u6233\u7684\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5c0f\u65f6\u5c0f\u65f6\u7684\u7a97\u53e3\u6240\u4ea7\u751f\u7684\u6240\u6709\u4e8b\n+\u4ef6\u90fd\u5c06\u5e26\u6709\u6807\u8bb0\u4e00\u4e2a\u5c0f\u65f6\u7ed3\u675f\u7684\u65f6\u95f4\u6233\u3002\u540e\u9762\u7684\u7a97\u53e3\u5185\u7684\u6570\u636e\u6d88\u8d39\u548c\u524d\u9762\u7684\u6d41\u4ea7\u751f\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\u3002\n \n-#### No Results for Empty TimeWindows\n+<a name=\"No-Results-for-Empty-TimeWindows\"></a>\n+#### \u7a7a\u7684\u65f6\u95f4\u7a97\u53e3\u4e0d\u4f1a\u4ea7\u51fa\u7ed3\u679c\n \n-Windows are only created when events are assigned to them. So if there are no events in a given time\n-frame, no results will be reported.\n+\u4e8b\u4ef6\u4f1a\u89e6\u53d1\u7a97\u53e3\u7684\u521b\u5efa\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u5728\u7279\u5b9a\u7684\u7a97\u53e3\u5185\u6ca1\u6709\u4e8b\u4ef6\uff0c\u5c31\u4e0d\u4f1a\u6709\u7a97\u53e3\uff0c\u5c31\u4e0d\u4f1a\u6709\u8f93\u51fa\u7ed3\u679c\u3002\n \n #### Late Events Can Cause Late Merges\n \n-Session windows are based on an abstraction of windows that can _merge_. Each element is initially\n-assigned to a new window, after which windows are merged whenever the gap between them is small\n-enough. In this way, a late event can bridge the gap separating two previously separate sessions,\n-producing a late merge.\n+\u4f1a\u8bdd\u7a97\u53e3\u7684\u5b9e\u73b0\u662f\u57fa\u4e8e\u7a97\u53e3\u7684\u4e00\u4e2a\u62bd\u8c61\u80fd\u529b\uff0c\u7a97\u53e3\u53ef\u4ee5_\u805a\u5408_\u3002\u4f1a\u8bdd\u7a97\u53e3\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5728\u521d\u59cb\u88ab\u6d88\u8d39\u65f6\uff0c\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u65b0\u7684", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MDU2MA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433950560", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e00\u4e2a\u7a97\u53e3\u5c06\u957f55\u5206\u949f\uff0c\u5e76\u57281:00\u5173\u95ed\u3002\n          \n          \n            \n            \u4e00\u4e2a\u7a97\u53e3\u5c06\u957f 55 \u5206\u949f\uff0c\u5e76\u5728 1:00 \u5173\u95ed\u3002", "author": "klion26", "createdAt": "2020-06-02T15:08:57Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -397,36 +369,34 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u4ec0\u4e48\u662f\u60ca\u559c\n \n-Some aspects of Flink's windowing API may not behave in the way you would expect. Based on\n-frequently asked questions on the [flink-user mailing\n-list](https://flink.apache.org/community.html#mailing-lists) and elsewhere, here are some facts\n-about windows that may surprise you.\n+Flink \u7684\u7a97\u53e3 API \u67d0\u4e9b\u65b9\u9762\u6709\u4e00\u4e9b\u5947\u602a\u7684\u884c\u4e3a\uff0c\u53ef\u80fd\u65e0\u6cd5\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u6839\n+\u636e[Flink\u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/community.html#mailing-lists) \u548c\u5176\u4ed6\u5730\u65b9\u4e00\u4e9b\u9891\u7e41\u88ab\u95ee\u8d77\n+\u7684\u95ee\u9898, \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u5173Windows\u7684\u5e95\u5c42\u4e8b\u5b9e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u60a8\u611f\u5230\u60ca\u8bb6\u3002\n \n-#### Sliding Windows Make Copies\n+<a name=\"Sliding-Windows-Make-Copies\"></a>\n+#### \u6ed1\u52a8\u7a97\u53e3\u4f1a\u590d\u5236\u51fa\u5f88\u591a\u7684\u4e8b\u4ef6\n \n-Sliding window assigners can create lots of window objects, and will copy each event into every\n-relevant window. For example, if you have sliding windows every 15 minutes that are 24-hours in\n-length, each event will be copied into 4 * 24 = 96 windows.\n+\u6ed1\u52a8\u7a97\u53e3\u5206\u914d\u5668\u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u7a97\u53e3\u5bf9\u8c61\uff0c\u5e76\u5c06\u6bcf\u4e2a\u4e8b\u4ef6\u590d\u5236\u5230\u6bcf\u4e2a\u76f8\u5173\u7684\u7a97\u53e3\u4e2d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6bcf\u969415\u5206\u949f\u5c31\u670924\u5c0f\u65f6\u7684\u6ed1\u52a8\n+\u7a97\u53e3\uff0c\u5219\u6bcf\u4e2a\u4e8b\u4ef6\u5c06\u88ab\u590d\u5236\u52304 * 24 = 96\u4e2a\u7a97\u53e3\u4e2d\u3002\n \n-#### Time Windows are Aligned to the Epoch\n+<a name=\"Time-Windows-are-Aligned-to-the-Epoch\"></a>\n+#### \u65f6\u95f4\u7a97\u53e3\u4f1a\u548c\u65f6\u95f4\u5bf9\u9f50\n \n-Just because you are using hour-long processing-time windows and start your application running at\n-12:05 does not mean that the first window will close at 1:05. The first window will be 55 minutes\n-long and close at 1:00.\n+\u4ec5\u4ec5\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u5c0f\u65f6\u7684\u5904\u7406\u65f6\u95f4\u7a97\u53e3\u5e76\u572812:05\u5f00\u59cb\u8fd0\u884c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u7b2c\u4e00\u4e2a\u7a97\u53e3\u5c06\u57281:05\u5173\u95ed\u3002\u7b2c\n+\u4e00\u4e2a\u7a97\u53e3\u5c06\u957f55\u5206\u949f\uff0c\u5e76\u57281:00\u5173\u95ed\u3002", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MDgyOA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433950828", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u636e[Flink\u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/community.html#mailing-lists) \u548c\u5176\u4ed6\u5730\u65b9\u4e00\u4e9b\u9891\u7e41\u88ab\u95ee\u8d77\n          \n          \n            \n            \u636e [Flink \u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/community.html#mailing-lists) \u548c\u5176\u4ed6\u5730\u65b9\u4e00\u4e9b\u9891\u7e41\u88ab\u95ee\u8d77", "author": "klion26", "createdAt": "2020-06-02T15:09:19Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -397,36 +369,34 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u4ec0\u4e48\u662f\u60ca\u559c\n \n-Some aspects of Flink's windowing API may not behave in the way you would expect. Based on\n-frequently asked questions on the [flink-user mailing\n-list](https://flink.apache.org/community.html#mailing-lists) and elsewhere, here are some facts\n-about windows that may surprise you.\n+Flink \u7684\u7a97\u53e3 API \u67d0\u4e9b\u65b9\u9762\u6709\u4e00\u4e9b\u5947\u602a\u7684\u884c\u4e3a\uff0c\u53ef\u80fd\u65e0\u6cd5\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u6839\n+\u636e[Flink\u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/community.html#mailing-lists) \u548c\u5176\u4ed6\u5730\u65b9\u4e00\u4e9b\u9891\u7e41\u88ab\u95ee\u8d77", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MTAxMw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433951013", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7684\u95ee\u9898, \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u5173Windows\u7684\u5e95\u5c42\u4e8b\u5b9e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u60a8\u611f\u5230\u60ca\u8bb6\u3002\n          \n          \n            \n            \u7684\u95ee\u9898, \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u5173 Windows \u7684\u5e95\u5c42\u4e8b\u5b9e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u60a8\u611f\u5230\u60ca\u8bb6\u3002\n          \n      \n    \n    \n  \n\n\u8fd9\u91cc\u7684\u610f\u601d\u662f user mail list \u548c\u5176\u4ed6\u5730\u65b9\u7684\u63d0\u95ee\uff0c\u53cd\u6620\u4e86 window \u7684\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u53ef\u80fd\u4f1a\u548c\u7528\u6237\u7684\u9884\u671f\u4e0d\u4e00\u6837", "author": "klion26", "createdAt": "2020-06-02T15:09:34Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -397,36 +369,34 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u4ec0\u4e48\u662f\u60ca\u559c\n \n-Some aspects of Flink's windowing API may not behave in the way you would expect. Based on\n-frequently asked questions on the [flink-user mailing\n-list](https://flink.apache.org/community.html#mailing-lists) and elsewhere, here are some facts\n-about windows that may surprise you.\n+Flink \u7684\u7a97\u53e3 API \u67d0\u4e9b\u65b9\u9762\u6709\u4e00\u4e9b\u5947\u602a\u7684\u884c\u4e3a\uff0c\u53ef\u80fd\u65e0\u6cd5\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u6839\n+\u636e[Flink\u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/community.html#mailing-lists) \u548c\u5176\u4ed6\u5730\u65b9\u4e00\u4e9b\u9891\u7e41\u88ab\u95ee\u8d77\n+\u7684\u95ee\u9898, \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u5173Windows\u7684\u5e95\u5c42\u4e8b\u5b9e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u60a8\u611f\u5230\u60ca\u8bb6\u3002", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MjAyNA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433952024", "bodyText": "\u8fd9\u4e2a\u7ffb\u8bd1\u9700\u8981\u4f18\u5316\u4e0b\uff0c\u8fd9\u91cc\u7684\u610f\u601d\u662f\u8bf4\u201c\u7ed9\u7528\u6237\u60ca\u559c\u201d\uff0c\u8fd9\u4e9b\u60ca\u559c\u548c\u7528\u6237\u7684\u9884\u671f\u884c\u4e3a\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4e0b\u9762\u7ed9\u4e86\u4e00\u4e9b\u5177\u4f53\u7684 case", "author": "klion26", "createdAt": "2020-06-02T15:11:00Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -397,36 +369,34 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u4ec0\u4e48\u662f\u60ca\u559c", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMzg1OQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r437423859", "bodyText": "\u83ab\u540d\u5176\u5999\u5417\uff1f \u4e0d \u662f\u6709\u539f\u56e0\u7684 \u4ee5\u5f80\u751a\u81f3\u7ed9\u51fa\u8fc7\u8fd9\u4e2a\u7ffb\u8bd1\uff0c\u4f46\u662f\u81ea\u5df1\u90fd\u7b11\u4e86\uff0c\u7136\u540e\u6539\u6389\u4e86\u3002\n\u8fd9\u4e2a\u5355\u8bcd\u662f\u5168\u7bc7\u6700\u6709\u610f\u601d\u7684\u4e00\u53e5\u8bdd\uff0c\u4ed6\u5176\u5b9e\u5e76\u4e0d\u662f\u4ee3\u8868\u60ca\u559c\uff0c\u6587\u6863\u4e4b\u5185\u66f4\u591a\u7684\u6536\u83b7\uff0c\u5176\u5b9e\u66f4\u50cf\u7b54\u7591\u89e3\u60d1\u3002\u6240\u4ee5\u6211\u5f00\u59cb\u5728\u7ffb\u8bd1\u7684\u65f6\u5019\uff0c\u671f\u5f85\u88abreview\u51fa\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u804a\u4e00\u4e0b\u7684\u3002\n\u6211\u611f\u89c9\u4ee5\u4e0b\u4f1a\u597d\u5f88\u591a\uff1a\n\n\u7b54\u7591\u89e3\u60d1\n\u9001\u5206\u9898\n\u83ab\u540d\u5176\u5999\uff1f\n\u60ca\u559c\n\u4f46\u603b\u662f\u6709\u70b9\u8bcd\u4e0d\u8fbe\u610f\u7684\u611f\u89c9\u3002\n\u5f53\u7136\uff0c @klion26 \u4f60\u611f\u89c9\u600e\u4e48\u7ffb\u8bd1\u80fd\u6bd4\u8f83\u597d\u4e00\u70b9\uff1f", "author": "twentyworld", "createdAt": "2020-06-09T13:38:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MjAyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MjQyNA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433952424", "bodyText": "\u53ef\u80fd\u65e0\u6cd5\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u65b9\u5f0f\u8fd0\u884c -> \u53ef\u80fd\u548c\u6211\u4eec\u671f\u671b\u884c\u4e3a\u4e0d\u4e00\u81f4 \u4f1a\u597d\u4e00\u4e9b\u5417\uff1f", "author": "klion26", "createdAt": "2020-06-02T15:11:37Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -397,36 +369,34 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u4ec0\u4e48\u662f\u60ca\u559c\n \n-Some aspects of Flink's windowing API may not behave in the way you would expect. Based on\n-frequently asked questions on the [flink-user mailing\n-list](https://flink.apache.org/community.html#mailing-lists) and elsewhere, here are some facts\n-about windows that may surprise you.\n+Flink \u7684\u7a97\u53e3 API \u67d0\u4e9b\u65b9\u9762\u6709\u4e00\u4e9b\u5947\u602a\u7684\u884c\u4e3a\uff0c\u53ef\u80fd\u65e0\u6cd5\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u6839", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MzIyNQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433953225", "bodyText": "\u8fd9\u4e2a\u9700\u8981\u4f18\u5316\u4e0b", "author": "klion26", "createdAt": "2020-06-02T15:12:44Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -397,36 +369,34 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u4ec0\u4e48\u662f\u60ca\u559c\n \n-Some aspects of Flink's windowing API may not behave in the way you would expect. Based on\n-frequently asked questions on the [flink-user mailing\n-list](https://flink.apache.org/community.html#mailing-lists) and elsewhere, here are some facts\n-about windows that may surprise you.\n+Flink \u7684\u7a97\u53e3 API \u67d0\u4e9b\u65b9\u9762\u6709\u4e00\u4e9b\u5947\u602a\u7684\u884c\u4e3a\uff0c\u53ef\u80fd\u65e0\u6cd5\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u6839\n+\u636e[Flink\u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/community.html#mailing-lists) \u548c\u5176\u4ed6\u5730\u65b9\u4e00\u4e9b\u9891\u7e41\u88ab\u95ee\u8d77\n+\u7684\u95ee\u9898, \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u5173Windows\u7684\u5e95\u5c42\u4e8b\u5b9e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u60a8\u611f\u5230\u60ca\u8bb6\u3002\n \n-#### Sliding Windows Make Copies\n+<a name=\"Sliding-Windows-Make-Copies\"></a>\n+#### \u6ed1\u52a8\u7a97\u53e3\u4f1a\u590d\u5236\u51fa\u5f88\u591a\u7684\u4e8b\u4ef6", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MzM1OA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433953358", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7a97\u53e3\uff0c\u5219\u6bcf\u4e2a\u4e8b\u4ef6\u5c06\u88ab\u590d\u5236\u52304 * 24 = 96\u4e2a\u7a97\u53e3\u4e2d\u3002\n          \n          \n            \n            \u7a97\u53e3\uff0c\u5219\u6bcf\u4e2a\u4e8b\u4ef6\u5c06\u88ab\u590d\u5236\u5230 4 * 24 = 96 \u4e2a\u7a97\u53e3\u4e2d\u3002", "author": "klion26", "createdAt": "2020-06-02T15:12:54Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -397,36 +369,34 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u4ec0\u4e48\u662f\u60ca\u559c\n \n-Some aspects of Flink's windowing API may not behave in the way you would expect. Based on\n-frequently asked questions on the [flink-user mailing\n-list](https://flink.apache.org/community.html#mailing-lists) and elsewhere, here are some facts\n-about windows that may surprise you.\n+Flink \u7684\u7a97\u53e3 API \u67d0\u4e9b\u65b9\u9762\u6709\u4e00\u4e9b\u5947\u602a\u7684\u884c\u4e3a\uff0c\u53ef\u80fd\u65e0\u6cd5\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u6839\n+\u636e[Flink\u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/community.html#mailing-lists) \u548c\u5176\u4ed6\u5730\u65b9\u4e00\u4e9b\u9891\u7e41\u88ab\u95ee\u8d77\n+\u7684\u95ee\u9898, \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u5173Windows\u7684\u5e95\u5c42\u4e8b\u5b9e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u60a8\u611f\u5230\u60ca\u8bb6\u3002\n \n-#### Sliding Windows Make Copies\n+<a name=\"Sliding-Windows-Make-Copies\"></a>\n+#### \u6ed1\u52a8\u7a97\u53e3\u4f1a\u590d\u5236\u51fa\u5f88\u591a\u7684\u4e8b\u4ef6\n \n-Sliding window assigners can create lots of window objects, and will copy each event into every\n-relevant window. For example, if you have sliding windows every 15 minutes that are 24-hours in\n-length, each event will be copied into 4 * 24 = 96 windows.\n+\u6ed1\u52a8\u7a97\u53e3\u5206\u914d\u5668\u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u7a97\u53e3\u5bf9\u8c61\uff0c\u5e76\u5c06\u6bcf\u4e2a\u4e8b\u4ef6\u590d\u5236\u5230\u6bcf\u4e2a\u76f8\u5173\u7684\u7a97\u53e3\u4e2d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6bcf\u969415\u5206\u949f\u5c31\u670924\u5c0f\u65f6\u7684\u6ed1\u52a8\n+\u7a97\u53e3\uff0c\u5219\u6bcf\u4e2a\u4e8b\u4ef6\u5c06\u88ab\u590d\u5236\u52304 * 24 = 96\u4e2a\u7a97\u53e3\u4e2d\u3002", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1NTMyMw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r433955323", "bodyText": "\u8fd9\u53e5\u8bdd\u9700\u8981\u8c03\u6574\u4e0b\uff0c\u8fd9\u91cc\u7684\u610f\u601d\u662f\u4ee5\u4e0b\u9762\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u95ee\u9898\uff0cwindow \u540e\u9762\u63a5 window \u7684\u95ee\u9898", "author": "klion26", "createdAt": "2020-06-02T15:15:35Z", "path": "docs/training/streaming_analytics.zh.md", "diffHunk": "@@ -397,36 +369,34 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u4ec0\u4e48\u662f\u60ca\u559c\n \n-Some aspects of Flink's windowing API may not behave in the way you would expect. Based on\n-frequently asked questions on the [flink-user mailing\n-list](https://flink.apache.org/community.html#mailing-lists) and elsewhere, here are some facts\n-about windows that may surprise you.\n+Flink \u7684\u7a97\u53e3 API \u67d0\u4e9b\u65b9\u9762\u6709\u4e00\u4e9b\u5947\u602a\u7684\u884c\u4e3a\uff0c\u53ef\u80fd\u65e0\u6cd5\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u6839\n+\u636e[Flink\u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/community.html#mailing-lists) \u548c\u5176\u4ed6\u5730\u65b9\u4e00\u4e9b\u9891\u7e41\u88ab\u95ee\u8d77\n+\u7684\u95ee\u9898, \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u5173Windows\u7684\u5e95\u5c42\u4e8b\u5b9e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u60a8\u611f\u5230\u60ca\u8bb6\u3002\n \n-#### Sliding Windows Make Copies\n+<a name=\"Sliding-Windows-Make-Copies\"></a>\n+#### \u6ed1\u52a8\u7a97\u53e3\u4f1a\u590d\u5236\u51fa\u5f88\u591a\u7684\u4e8b\u4ef6\n \n-Sliding window assigners can create lots of window objects, and will copy each event into every\n-relevant window. For example, if you have sliding windows every 15 minutes that are 24-hours in\n-length, each event will be copied into 4 * 24 = 96 windows.\n+\u6ed1\u52a8\u7a97\u53e3\u5206\u914d\u5668\u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u7a97\u53e3\u5bf9\u8c61\uff0c\u5e76\u5c06\u6bcf\u4e2a\u4e8b\u4ef6\u590d\u5236\u5230\u6bcf\u4e2a\u76f8\u5173\u7684\u7a97\u53e3\u4e2d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6bcf\u969415\u5206\u949f\u5c31\u670924\u5c0f\u65f6\u7684\u6ed1\u52a8\n+\u7a97\u53e3\uff0c\u5219\u6bcf\u4e2a\u4e8b\u4ef6\u5c06\u88ab\u590d\u5236\u52304 * 24 = 96\u4e2a\u7a97\u53e3\u4e2d\u3002\n \n-#### Time Windows are Aligned to the Epoch\n+<a name=\"Time-Windows-are-Aligned-to-the-Epoch\"></a>\n+#### \u65f6\u95f4\u7a97\u53e3\u4f1a\u548c\u65f6\u95f4\u5bf9\u9f50\n \n-Just because you are using hour-long processing-time windows and start your application running at\n-12:05 does not mean that the first window will close at 1:05. The first window will be 55 minutes\n-long and close at 1:00.\n+\u4ec5\u4ec5\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u5c0f\u65f6\u7684\u5904\u7406\u65f6\u95f4\u7a97\u53e3\u5e76\u572812:05\u5f00\u59cb\u8fd0\u884c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u7b2c\u4e00\u4e2a\u7a97\u53e3\u5c06\u57281:05\u5173\u95ed\u3002\u7b2c\n+\u4e00\u4e2a\u7a97\u53e3\u5c06\u957f55\u5206\u949f\uff0c\u5e76\u57281:00\u5173\u95ed\u3002\n \n-Note, however, that the tumbling and sliding window assigners take an optional offset parameter\n-that can be used to change the alignment of the windows. See\n-[Tumbling Windows]({% link dev/stream/operators/windows.zh.md %}#tumbling-windows) and\n-[Sliding Windows]({% link dev/stream/operators/windows.zh.md %}#sliding-windows) for details.\n+ \u8bf7\u6ce8\u610f\uff0c\u6ed1\u52a8\u7a97\u53e3\u548c\u6eda\u52a8\u7a97\u53e3\u5206\u914d\u5668\u6240\u91c7\u7528\u7684offset\u53c2\u6570\u53ef\u7528\u4e8e\u6539\u53d8\u7a97\u53e3\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u6709\u5173\u8be6\u7ec6\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\n+[\u6eda\u52a8\u7a97\u53e3]({% link dev/stream/operators/windows.zh.md %}#tumbling-windows) \u548c\n+[\u6ed1\u52a8\u7a97\u53e3]({% link dev/stream/operators/windows.zh.md %}#sliding-windows) \u3002\n \n #### Windows Can Follow Windows\n \n-For example, it works to do this:\n+\u8fd9\u6837\u505a\u662f\u884c\u5f97\u901a\u7684:", "originalCommit": "68af19dc33a46caf13bc77a6fbc07fcd8bb35420", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjAwMg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449562002", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u60f3\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n          \n          \n            \n            \u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u76f8\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002", "author": "klion26", "createdAt": "2020-07-03T12:38:34Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u60f3\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NDY2MQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449564661", "bodyText": "\u6211\u4eec\u4ece\u65f6\u95f4 4 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\u95f4 2 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u8fd9\u4e2a\u5730\u65b9\u80fd\u5426\u518d\u4f18\u5316\u4e00\u4e0b\u5462\uff1f\n\u8fd9\u91cc\u7684\u610f\u601d\u662f\u770b\u5230\u4e00\u4e2a \u201c\u65f6\u95f4\u6233\u4e3a 4\u201d \u7684\u4e8b\u4ef6\uff0c\u7136\u540e\u770b\u5230\u4e00\u4e2a\u201c\u65f6\u95f4\u6233\u4e3a 2\u201d\u7684\u4e8b\u4ef6\u3002\u73b0\u5728\u7684\u7ffb\u8bd1\u4e2d\u6bd4\u8f83\u96be\u770b\u51fa\u8fd9\u4e2a\u610f\u601d", "author": "klion26", "createdAt": "2020-07-03T12:44:41Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u60f3\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-learn-flink/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link learn-flink/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u6709\u4e00\u4e2a\u7b97\u5b50\uff08\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u6392\u5e8f\uff09\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u7b97\u5b50\u6240\u8f93\u51fa\u7684\u6d41\u662f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u597d\u7684\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f 4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u5230 2 \u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f4 4 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\u95f4 2 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e 2 \u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230 1\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NDgxNA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449564814", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n          \n          \n            \n            (3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink \u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002", "author": "klion26", "createdAt": "2020-07-03T12:45:00Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u60f3\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-learn-flink/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link learn-flink/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u6709\u4e00\u4e2a\u7b97\u5b50\uff08\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u6392\u5e8f\uff09\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u7b97\u5b50\u6240\u8f93\u51fa\u7684\u6d41\u662f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u597d\u7684\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f 4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u5230 2 \u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f4 4 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\u95f4 2 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e 2 \u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230 1\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a 2 \u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2NTYyMw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449565623", "bodyText": "\u4e8b\u4ef6\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u4e0d\u4f1a\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002 \u8fd9\u4e2a\u5730\u65b9\u6539\u6210 \u4e8b\u4ef6\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u524d\uff08\u5f88\u53ef\u80fd\uff09\u90fd\u5df2\u7ecf\u5230\u8fbe\u3002 \u4f1a\u66f4\u597d\u4e00\u4e9b\u5417\uff1f\n\u8fd9\u91cc\u7684\u610f\u601d\u8868\u8fbe \u8fd9\u4e2a\u65f6\u523b\u4e4b\u524d\u7684\u6570\u636e\u90fd\u6536\u5230\u4e86\uff0c\u8fd9\u4e5f\u662f watermark \u7684\u8bed\u4e49", "author": "klion26", "createdAt": "2020-07-03T12:46:52Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u60f3\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-learn-flink/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link learn-flink/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u6709\u4e00\u4e2a\u7b97\u5b50\uff08\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u6392\u5e8f\uff09\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u7b97\u5b50\u6240\u8f93\u51fa\u7684\u6d41\u662f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u597d\u7684\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f 4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u5230 2 \u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f4 4 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\u95f4 2 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e 2 \u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230 1\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a 2 \u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f watermarks \u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermarks*\u3002\u4e8b\u4ef6\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u4e0d\u4f1a\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2Nzk0Mg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449567942", "bodyText": "\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85 -> \u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u505c\u6b62\u7b49\u5f85 \u4f1a\u597d\u4e00\u4e9b\u5417\uff1f", "author": "klion26", "createdAt": "2020-07-03T12:52:18Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u60f3\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-learn-flink/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link learn-flink/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u6709\u4e00\u4e2a\u7b97\u5b50\uff08\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u6392\u5e8f\uff09\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u7b97\u5b50\u6240\u8f93\u51fa\u7684\u6d41\u662f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u597d\u7684\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f 4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u5230 2 \u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f4 4 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\u95f4 2 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e 2 \u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230 1\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a 2 \u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f watermarks \u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermarks*\u3002\u4e8b\u4ef6\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u4e0d\u4f1a\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002\n \n-When should this stream sorter stop waiting, and push out the 2 to start the sorted stream? When a\n-watermark arrives with a timestamp of 2, or greater.\n+\u5f53 watermark \u4ee5 2 \u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff0c\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u8f93\u51fa 2 \u4f5c\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\u6d41\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2ODI5MQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449568291", "bodyText": "\u6709\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u5176\u4ed6\u4e8b\u4ef6\u5ef6\u8fdf\u5f97\u66f4\u591a -> \u6709\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u6bd4\u5176\u4ed6\u4e8b\u4ef6\u5ef6\u8fdf\u5f97\u66f4\u591a", "author": "klion26", "createdAt": "2020-07-03T12:53:02Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u60f3\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-learn-flink/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link learn-flink/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u6709\u4e00\u4e2a\u7b97\u5b50\uff08\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u6392\u5e8f\uff09\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u7b97\u5b50\u6240\u8f93\u51fa\u7684\u6d41\u662f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u597d\u7684\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f 4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u5230 2 \u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f4 4 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\u95f4 2 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e 2 \u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230 1\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a 2 \u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f watermarks \u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermarks*\u3002\u4e8b\u4ef6\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u4e0d\u4f1a\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002\n \n-When should this stream sorter stop waiting, and push out the 2 to start the sorted stream? When a\n-watermark arrives with a timestamp of 2, or greater.\n+\u5f53 watermark \u4ee5 2 \u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff0c\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u8f93\u51fa 2 \u4f5c\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\u6d41\u3002\n \n-(4) You might imagine different policies for deciding how to generate watermarks.\n+(4) \u6211\u4eec\u53ef\u80fd\u4f1a\u601d\u8003\uff0c\u5982\u4f55\u51b3\u5b9a watermarks \u7684\u4e0d\u540c\u751f\u6210\u7b56\u7565\n \n-Each event arrives after some delay, and these delays vary, so some events are delayed more than\n-others. One simple approach is to assume that these delays are bounded by some maximum delay. Flink\n-refers to this strategy as *bounded-out-of-orderness* watermarking. It is easy to imagine more\n-complex approaches to watermarking, but for most applications a fixed delay works well enough.\n+\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u4f1a\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u540e\u5230\u8fbe\uff0c\u7136\u800c\u8fd9\u4e9b\u5ef6\u8fdf\u6709\u6240\u4e0d\u540c\uff0c\u6709\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u5176\u4ed6\u4e8b\u4ef6\u5ef6\u8fdf\u5f97\u66f4\u591a\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5047\u5b9a\u8fd9\u4e9b\u5ef6\u8fdf\u53d7\u67d0\u4e2a\u6700\u5927\u5ef6\u8fdf\u7684\u9650\u5236\u3002Flink \u5c06\u6b64\u7b56\u7565\u79f0\u4e3a *\u6700\u5927\u65e0\u5e8f\u8fb9\u754c(bounded-out-of-orderness)* watermark\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u50cf\u51fa\u66f4\u597d\u7684\u751f\u6210 watermark \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u800c\u8a00\uff0c\u56fa\u5b9a\u5ef6\u8fdf\u7b56\u7565\u5df2\u7ecf\u8db3\u591f\u4e86\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2OTMxOA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449569318", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            watermarks \u7ed9\u4e86\u5f00\u53d1\u8005\u6d41\u5904\u7406\u7684\u4e00\u79cd\u9009\u62e9\uff0c\u5b83\u4eec\u4f7f\u5f00\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u662f\u53ef\u4ee5\u63a7\u5236\u5ef6\u8fdf\u548c\u5b8c\u6574\u6027\u4e4b\u95f4\u7684\u6743\u8861\u3002\u4e0e\u6279\u5904\u7406\u4e0d\u540c\uff0c\u6279\u5904\u7406\u4e2d\u7684\u5962\u4f88\u4e4b\u5904\u5728\u4e8e\u53ef\u4ee5\u5728\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\u4e4b\u524d\u5b8c\u5168\u4e86\u89e3\u8f93\u5165\uff0c\u800c\u4f7f\u7528\u6d41\u5f0f\u4f20\u8f93\uff0c\u6211\u4eec\u4e0d\u88ab\u5141\u8bb8\u7b49\u5f85\u6240\u6709\u7684\u65f6\u95f4\u90fd\u4ea7\u751f\u4e86\uff0c\u624d\u8f93\u51fa\u6392\u5e8f\u597d\u7684\u6570\u636e\uff0c\u8fd9\u4e0e\u6d41\u76f8\u8fdd\u80cc\u3002\n          \n          \n            \n            watermarks \u7ed9\u4e86\u5f00\u53d1\u8005\u6d41\u5904\u7406\u7684\u4e00\u79cd\u9009\u62e9\uff0c\u5b83\u4eec\u4f7f\u5f00\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u65f6\u53ef\u4ee5\u63a7\u5236\u5ef6\u8fdf\u548c\u5b8c\u6574\u6027\u4e4b\u95f4\u7684\u6743\u8861\u3002\u4e0e\u6279\u5904\u7406\u4e0d\u540c\uff0c\u6279\u5904\u7406\u4e2d\u7684\u5962\u4f88\u4e4b\u5904\u5728\u4e8e\u53ef\u4ee5\u5728\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\u4e4b\u524d\u5b8c\u5168\u4e86\u89e3\u8f93\u5165\uff0c\u800c\u4f7f\u7528\u6d41\u5f0f\u4f20\u8f93\uff0c\u6211\u4eec\u4e0d\u88ab\u5141\u8bb8\u7b49\u5f85\u6240\u6709\u7684\u65f6\u95f4\u90fd\u4ea7\u751f\u4e86\uff0c\u624d\u8f93\u51fa\u6392\u5e8f\u597d\u7684\u6570\u636e\uff0c\u8fd9\u4e0e\u6d41\u76f8\u8fdd\u80cc\u3002\n          \n      \n    \n    \n  \n\n\u8fd9\u4e2a\u5730\u65b9 \u5962\u4f88 \u80fd\u5426\u6539\u6210\u4e00\u4e2a\u7c7b\u4f3c \u4f18\u52bf \u4e4b\u7c7b\u7684\u6b21\u5462\uff1f", "author": "klion26", "createdAt": "2020-07-03T12:55:20Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u60f3\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-learn-flink/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link learn-flink/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u6709\u4e00\u4e2a\u7b97\u5b50\uff08\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u6392\u5e8f\uff09\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u7b97\u5b50\u6240\u8f93\u51fa\u7684\u6d41\u662f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u597d\u7684\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f 4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u5230 2 \u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f4 4 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\u95f4 2 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e 2 \u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230 1\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a 2 \u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f watermarks \u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermarks*\u3002\u4e8b\u4ef6\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u4e0d\u4f1a\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002\n \n-When should this stream sorter stop waiting, and push out the 2 to start the sorted stream? When a\n-watermark arrives with a timestamp of 2, or greater.\n+\u5f53 watermark \u4ee5 2 \u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff0c\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u8f93\u51fa 2 \u4f5c\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\u6d41\u3002\n \n-(4) You might imagine different policies for deciding how to generate watermarks.\n+(4) \u6211\u4eec\u53ef\u80fd\u4f1a\u601d\u8003\uff0c\u5982\u4f55\u51b3\u5b9a watermarks \u7684\u4e0d\u540c\u751f\u6210\u7b56\u7565\n \n-Each event arrives after some delay, and these delays vary, so some events are delayed more than\n-others. One simple approach is to assume that these delays are bounded by some maximum delay. Flink\n-refers to this strategy as *bounded-out-of-orderness* watermarking. It is easy to imagine more\n-complex approaches to watermarking, but for most applications a fixed delay works well enough.\n+\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u4f1a\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u540e\u5230\u8fbe\uff0c\u7136\u800c\u8fd9\u4e9b\u5ef6\u8fdf\u6709\u6240\u4e0d\u540c\uff0c\u6709\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u5176\u4ed6\u4e8b\u4ef6\u5ef6\u8fdf\u5f97\u66f4\u591a\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5047\u5b9a\u8fd9\u4e9b\u5ef6\u8fdf\u53d7\u67d0\u4e2a\u6700\u5927\u5ef6\u8fdf\u7684\u9650\u5236\u3002Flink \u5c06\u6b64\u7b56\u7565\u79f0\u4e3a *\u6700\u5927\u65e0\u5e8f\u8fb9\u754c(bounded-out-of-orderness)* watermark\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u50cf\u51fa\u66f4\u597d\u7684\u751f\u6210 watermark \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u800c\u8a00\uff0c\u56fa\u5b9a\u5ef6\u8fdf\u7b56\u7565\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\n \n-### Latency vs. Completeness\n+<a name=\"Latency-vs.-Completeness\"></a>\n+### \u5ef6\u8fdf VS \u6b63\u786e\u6027\n \n-Another way to think about watermarks is that they give you, the developer of a streaming\n-application, control over the tradeoff between latency and completeness. Unlike in batch processing,\n-where one has the luxury of being able to have complete knowledge of the input before producing any\n-results, with streaming you must eventually stop waiting to see more of the input, and produce some\n-sort of result.\n+watermarks \u7ed9\u4e86\u5f00\u53d1\u8005\u6d41\u5904\u7406\u7684\u4e00\u79cd\u9009\u62e9\uff0c\u5b83\u4eec\u4f7f\u5f00\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u662f\u53ef\u4ee5\u63a7\u5236\u5ef6\u8fdf\u548c\u5b8c\u6574\u6027\u4e4b\u95f4\u7684\u6743\u8861\u3002\u4e0e\u6279\u5904\u7406\u4e0d\u540c\uff0c\u6279\u5904\u7406\u4e2d\u7684\u5962\u4f88\u4e4b\u5904\u5728\u4e8e\u53ef\u4ee5\u5728\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\u4e4b\u524d\u5b8c\u5168\u4e86\u89e3\u8f93\u5165\uff0c\u800c\u4f7f\u7528\u6d41\u5f0f\u4f20\u8f93\uff0c\u6211\u4eec\u4e0d\u88ab\u5141\u8bb8\u7b49\u5f85\u6240\u6709\u7684\u65f6\u95f4\u90fd\u4ea7\u751f\u4e86\uff0c\u624d\u8f93\u51fa\u6392\u5e8f\u597d\u7684\u6570\u636e\uff0c\u8fd9\u4e0e\u6d41\u76f8\u8fdd\u80cc\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDUxNQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449570515", "bodyText": "\u8fd9\u91cc\u7684\u610f\u601d\u662f\u8bf4 \u6d41\u5fc5\u987b\u5305\u542b watermark \u5427\uff0c\u800c\u4e0d\u662f \u8fd9\u4e2a\u65f6\u95f4\u6233\u5c31\u662f watermark \u5bf9\u4e8e\u4e8b\u4ef6\u65f6\u95f4\uff0cwatermark \u4e5f\u53ef\u4ee5\u548c eventtime \u4e0d\u4e00\u6837\u7684\u3002", "author": "klion26", "createdAt": "2020-07-03T12:57:54Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u60f3\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-learn-flink/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link learn-flink/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u6709\u4e00\u4e2a\u7b97\u5b50\uff08\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u6392\u5e8f\uff09\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u7b97\u5b50\u6240\u8f93\u51fa\u7684\u6d41\u662f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u597d\u7684\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u7b2c\u4e00\u4e2a\u770b\u5230\u7684\u6570\u636e\u662f 4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u6d41\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u5230 2 \u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u4ece\u65f6\u95f4 4 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u4ece\u65f6\u95f4 2 \u770b\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e 2 \u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230 1\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a 2 \u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f watermarks \u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermarks*\u3002\u4e8b\u4ef6\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u540e\uff08\u5f88\u53ef\u80fd\uff09\u4e0d\u4f1a\u6709\u65b0\u7684\u5143\u7d20\u5230\u8fbe\u3002\n \n-When should this stream sorter stop waiting, and push out the 2 to start the sorted stream? When a\n-watermark arrives with a timestamp of 2, or greater.\n+\u5f53 watermark \u4ee5 2 \u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff0c\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u8f93\u51fa 2 \u4f5c\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\u6d41\u3002\n \n-(4) You might imagine different policies for deciding how to generate watermarks.\n+(4) \u6211\u4eec\u53ef\u80fd\u4f1a\u601d\u8003\uff0c\u5982\u4f55\u51b3\u5b9a watermarks \u7684\u4e0d\u540c\u751f\u6210\u7b56\u7565\n \n-Each event arrives after some delay, and these delays vary, so some events are delayed more than\n-others. One simple approach is to assume that these delays are bounded by some maximum delay. Flink\n-refers to this strategy as *bounded-out-of-orderness* watermarking. It is easy to imagine more\n-complex approaches to watermarking, but for most applications a fixed delay works well enough.\n+\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u4f1a\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u540e\u5230\u8fbe\uff0c\u7136\u800c\u8fd9\u4e9b\u5ef6\u8fdf\u6709\u6240\u4e0d\u540c\uff0c\u6709\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u5176\u4ed6\u4e8b\u4ef6\u5ef6\u8fdf\u5f97\u66f4\u591a\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5047\u5b9a\u8fd9\u4e9b\u5ef6\u8fdf\u53d7\u67d0\u4e2a\u6700\u5927\u5ef6\u8fdf\u7684\u9650\u5236\u3002Flink \u5c06\u6b64\u7b56\u7565\u79f0\u4e3a *\u6700\u5927\u65e0\u5e8f\u8fb9\u754c(bounded-out-of-orderness)* watermark\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u50cf\u51fa\u66f4\u597d\u7684\u751f\u6210 watermark \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u800c\u8a00\uff0c\u56fa\u5b9a\u5ef6\u8fdf\u7b56\u7565\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\n \n-### Latency vs. Completeness\n+<a name=\"Latency-vs.-Completeness\"></a>\n+### \u5ef6\u8fdf VS \u6b63\u786e\u6027\n \n-Another way to think about watermarks is that they give you, the developer of a streaming\n-application, control over the tradeoff between latency and completeness. Unlike in batch processing,\n-where one has the luxury of being able to have complete knowledge of the input before producing any\n-results, with streaming you must eventually stop waiting to see more of the input, and produce some\n-sort of result.\n+watermarks \u7ed9\u4e86\u5f00\u53d1\u8005\u6d41\u5904\u7406\u7684\u4e00\u79cd\u9009\u62e9\uff0c\u5b83\u4eec\u4f7f\u5f00\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u662f\u53ef\u4ee5\u63a7\u5236\u5ef6\u8fdf\u548c\u5b8c\u6574\u6027\u4e4b\u95f4\u7684\u6743\u8861\u3002\u4e0e\u6279\u5904\u7406\u4e0d\u540c\uff0c\u6279\u5904\u7406\u4e2d\u7684\u5962\u4f88\u4e4b\u5904\u5728\u4e8e\u53ef\u4ee5\u5728\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\u4e4b\u524d\u5b8c\u5168\u4e86\u89e3\u8f93\u5165\uff0c\u800c\u4f7f\u7528\u6d41\u5f0f\u4f20\u8f93\uff0c\u6211\u4eec\u4e0d\u88ab\u5141\u8bb8\u7b49\u5f85\u6240\u6709\u7684\u65f6\u95f4\u90fd\u4ea7\u751f\u4e86\uff0c\u624d\u8f93\u51fa\u6392\u5e8f\u597d\u7684\u6570\u636e\uff0c\u8fd9\u4e0e\u6d41\u76f8\u8fdd\u80cc\u3002\n \n-You can either configure your watermarking aggressively, with a short bounded delay, and thereby\n-take the risk of producing results with rather incomplete knowledge of the input -- i.e., a possibly\n-wrong result, produced quickly. Or you can wait longer, and produce results that take advantage of\n-having more complete knowledge of the input stream(s).\n+\u6211\u4eec\u53ef\u4ee5\u628a watermarks \u7684\u8fb9\u754c\u65f6\u95f4\u914d\u7f6e\u7684\u76f8\u5bf9\u8f83\u77ed\uff0c\u4ece\u800c\u5192\u7740\u5728\u8f93\u5165\u4e86\u89e3\u4e0d\u5b8c\u5168\u7684\u60c5\u51b5\u4e0b\u4ea7\u751f\u7ed3\u679c\u7684\u98ce\u9669-\u5373\u53ef\u80fd\u4f1a\u5f88\u5feb\u4ea7\u751f\u9519\u8bef\u7ed3\u679c\u3002\u6216\u8005\uff0c\u4f60\u53ef\u4ee5\u7b49\u5f85\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u5e76\u5229\u7528\u5bf9\u8f93\u5165\u6d41\u7684\u66f4\u5168\u9762\u7684\u4e86\u89e3\u6765\u4ea7\u751f\u7ed3\u679c\u3002\n \n-It is also possible to implement hybrid solutions that produce initial results quickly, and then\n-supply updates to those results as additional (late) data is processed. This is a good approach for\n-some applications.\n+\u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9e\u65bd\u6df7\u5408\u89e3\u51b3\u65b9\u6848\uff0c\u5148\u5feb\u901f\u4ea7\u751f\u521d\u6b65\u7ed3\u679c\uff0c\u7136\u540e\u5728\u5904\u7406\u5176\u4ed6\uff08\u6700\u65b0\uff09\u6570\u636e\u65f6\u5411\u8fd9\u4e9b\u7ed3\u679c\u63d0\u4f9b\u66f4\u65b0\u3002\u5bf9\u4e8e\u6709\u4e00\u4e9b\u5bf9\u5ef6\u8fdf\u7684\u5bb9\u5fcd\u7a0b\u5ea6\u5f88\u4f4e\uff0c\u4f46\u662f\u53c8\u5bf9\u7ed3\u679c\u6709\u5f88\u4e25\u683c\u7684\u8981\u6c42\u7684\u573a\u666f\u4e0b\uff0c\u6216\u8bb8\u662f\u4e00\u4e2a\u798f\u97f3\u3002\n \n-### Lateness\n+<a name=\"Latency\"></a>\n+### \u5ef6\u8fdf\n \n-Lateness is defined relative to the watermarks. A `Watermark(t)` asserts that the stream is complete\n-up through time _t_; any event following this watermark whose timestamp is &le; _t_ is late.\n+\u5ef6\u8fdf\u662f\u76f8\u5bf9\u4e8e watermarks \u5b9a\u4e49\u7684\u3002`Watermark(t)` \u5224\u5b9a\u4e8b\u4ef6\u6d41\u7684\u65f6\u95f4\u5df2\u7ecf\u5230\u8fbe\u4e86 _t_; watermark \u4e4b\u540e\u7684\u65f6\u95f4\u6233\u4e3a &le; _t_ \u7684\u4efb\u4f55\u4e8b\u4ef6\u90fd\u88ab\u79f0\u4e4b\u4e3a\u5ef6\u8fdf\u4e8b\u4ef6\u3002\n \n-### Working with Watermarks\n+<a name=\"Working-with-Watermarks\"></a>\n+### \u4f7f\u7528 Watermarks\n \n-In order to perform event-time-based event processing, Flink needs to know the time associated with\n-each event, and it also needs the stream to include watermarks.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u57fa\u4e8e\u5e26\u6709\u4e8b\u4ef6\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0cFlink \u9700\u8981\u77e5\u9053\u4e0e\u6bcf\u4e2a\u4e8b\u4ef6\u76f8\u5173\u7684\u65f6\u95f4\u6233\uff0c\u8fd9\u4e2a\u65f6\u95f4\u6233\u5c31\u662f watermarks\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDcyMg==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449570722", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u8bf7\u4ed4\u7ec6\u89c2\u5bdf, `BoundedOutOfOrdernessTimestampExtractor` \u7684\u6784\u9020\u51fd\u6570\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e38\u91cf\u7528\u6765\u6307\u5b9a\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u7a0b\u5ea6\uff08\u5728\u6b64\u793a\u4f8b\u4e2d\u4e3a10\u79d2\uff09\u3002\n          \n          \n            \n            \u8bf7\u4ed4\u7ec6\u89c2\u5bdf, `BoundedOutOfOrdernessTimestampExtractor` \u7684\u6784\u9020\u51fd\u6570\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e38\u91cf\u7528\u6765\u6307\u5b9a\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u7a0b\u5ea6\uff08\u5728\u6b64\u793a\u4f8b\u4e2d\u4e3a 10 \u79d2\uff09\u3002", "author": "klion26", "createdAt": "2020-07-03T12:58:24Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -167,38 +130,34 @@ public static class TimestampsAndWatermarks\n }\n {% endhighlight %}\n \n-Note that the constructor for `BoundedOutOfOrdernessTimestampExtractor` takes a parameter which\n-specifies the maximum expected out-of-orderness (10 seconds, in this example).\n+\u8bf7\u4ed4\u7ec6\u89c2\u5bdf, `BoundedOutOfOrdernessTimestampExtractor` \u7684\u6784\u9020\u51fd\u6570\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e38\u91cf\u7528\u6765\u6307\u5b9a\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u7a0b\u5ea6\uff08\u5728\u6b64\u793a\u4f8b\u4e2d\u4e3a10\u79d2\uff09\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MjM0NA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449572344", "bodyText": "\u8fd9\u4e2a\u5730\u65b9\u80fd\u5426\u628a\u94fe\u63a5\u6539\u6210 {%link %} \u7684\u5f62\u5f0f\u5462\uff1f\u5177\u4f53\u7684\u5e94\u8be5\u662f {% link /fig/window-assigners.svg %}\n\u6700\u8fd1\u793e\u533a\u8ba8\u8bba\u51b3\u5b9a\uff0c\u628a\u94fe\u63a5\u6539\u6210\u8fd9\u79cd\u5f62\u5f0f\u4e86", "author": "klion26", "createdAt": "2020-07-03T13:02:17Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -207,67 +166,62 @@ stream.\n     .reduce|aggregate|process(<window function>)\n {% endhighlight %}\n \n-You can also use windowing with non-keyed streams, but keep in mind that in this case, the\n-processing will _not_ be done in parallel:\n+\u60a8\u4e0d\u662f\u5fc5\u987b\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff08keyed stream\uff09\uff0c\u4f46\u662f\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u5c31\u4e0d\u80fd _\u5e76\u884c_ \u5904\u7406\u3002\n \n {% highlight java %}\n stream.\n     .windowAll(<window assigner>)\n     .reduce|aggregate|process(<window function>)\n {% endhighlight %}\n \n-### Window Assigners\n+<a name=\"Window-Assigners\"></a>\n+### \u7a97\u53e3\u5206\u914d\u5668\n \n-Flink has several built-in types of window assigners, which are illustrated below:\n+Flink \u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u7a97\u53e3\u5206\u914d\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n \n <img src=\"{{ site.baseurl }}/fig/window-assigners.svg\" alt=\"Window assigners\" class=\"center\" width=\"80%\" />", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MjQ0MA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449572440", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u6211\u4eec\u53ef\u80fd\u5728\u6709\u4e9b\u573a\u666f\u4e0b\uff0c\u60f3\u4f7f\u7528\u5168\u5c40 window assigner \u5c06\u6bcf\u4e2a\u4e8b\u4ef6\uff08\u76f8\u540c\u7684 key\uff09\u90fd\u5206\u914d\u7ed9\u67d0\u4e00\u4e2a\u6307\u5b9a\u7684\u5168\u5c40\u7a97\u53e3\u3002 \u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u5efa\u8bae\u662f\u4f7f\u7528 `ProcessFunction`\uff0c\u5177\u4f53\u4ecb\u7ecd\u5728[\u8fd9\u91cc]({% link learn-flink/event_driven.md %}#process-functions)\u3002\n          \n          \n            \n            \u6211\u4eec\u53ef\u80fd\u5728\u6709\u4e9b\u573a\u666f\u4e0b\uff0c\u60f3\u4f7f\u7528\u5168\u5c40 window assigner \u5c06\u6bcf\u4e2a\u4e8b\u4ef6\uff08\u76f8\u540c\u7684 key\uff09\u90fd\u5206\u914d\u7ed9\u67d0\u4e00\u4e2a\u6307\u5b9a\u7684\u5168\u5c40\u7a97\u53e3\u3002 \u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u5efa\u8bae\u662f\u4f7f\u7528 `ProcessFunction`\uff0c\u5177\u4f53\u4ecb\u7ecd\u5728[\u8fd9\u91cc]({% link learn-flink/event_driven.zh.md %}#process-functions)\u3002", "author": "klion26", "createdAt": "2020-07-03T13:02:31Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -207,67 +166,62 @@ stream.\n     .reduce|aggregate|process(<window function>)\n {% endhighlight %}\n \n-You can also use windowing with non-keyed streams, but keep in mind that in this case, the\n-processing will _not_ be done in parallel:\n+\u60a8\u4e0d\u662f\u5fc5\u987b\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff08keyed stream\uff09\uff0c\u4f46\u662f\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u952e\u63a7\u4e8b\u4ef6\u6d41\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u5c31\u4e0d\u80fd _\u5e76\u884c_ \u5904\u7406\u3002\n \n {% highlight java %}\n stream.\n     .windowAll(<window assigner>)\n     .reduce|aggregate|process(<window function>)\n {% endhighlight %}\n \n-### Window Assigners\n+<a name=\"Window-Assigners\"></a>\n+### \u7a97\u53e3\u5206\u914d\u5668\n \n-Flink has several built-in types of window assigners, which are illustrated below:\n+Flink \u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u7a97\u53e3\u5206\u914d\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n \n <img src=\"{{ site.baseurl }}/fig/window-assigners.svg\" alt=\"Window assigners\" class=\"center\" width=\"80%\" />\n \n-Some examples of what these window assigners might be used for, and how to specify them:\n+\u901a\u8fc7\u4e00\u4e9b\u793a\u4f8b\u6765\u5c55\u793a\u5173\u4e8e\u8fd9\u4e9b\u7a97\u53e3\u5982\u4f55\u4f7f\u7528\uff0c\u6216\u8005\u5982\u4f55\u533a\u5206\u5b83\u4eec\uff1a\n \n-* Tumbling time windows\n-  * _page views per minute_\n+* \u6eda\u52a8\u65f6\u95f4\u7a97\u53e3\n+  * _\u6bcf\u5206\u949f\u9875\u9762\u6d4f\u89c8\u91cf_\n   * `TumblingEventTimeWindows.of(Time.minutes(1))`\n-* Sliding time windows\n-  * _page views per minute computed every 10 seconds_\n+* \u6ed1\u52a8\u65f6\u95f4\u7a97\u53e3\n+  * _\u6bcf10\u79d2\u949f\u8ba1\u7b97\u524d1\u5206\u949f\u7684\u9875\u9762\u6d4f\u89c8\u91cf_\n   * `SlidingEventTimeWindows.of(Time.minutes(1), Time.seconds(10))`\n-* Session windows \n-  * _page views per session, where sessions are defined by a gap of at least 30 minutes between sessions_\n+* \u4f1a\u8bdd\u7a97\u53e3\n+  * _\u6bcf\u4e2a\u4f1a\u8bdd\u7684\u7f51\u9875\u6d4f\u89c8\u91cf\uff0c\u5176\u4e2d\u4f1a\u8bdd\u4e4b\u95f4\u7684\u95f4\u9694\u81f3\u5c11\u4e3a30\u5206\u949f_\n   * `EventTimeSessionWindows.withGap(Time.minutes(30))`\n \n-Durations can be specified using one of `Time.milliseconds(n)`, `Time.seconds(n)`, `Time.minutes(n)`, `Time.hours(n)`, and `Time.days(n)`.\n+\u4ee5\u4e0b\u90fd\u662f\u4e00\u4e9b\u53ef\u4ee5\u4f7f\u7528\u7684\u95f4\u9694\u65f6\u95f4 `Time.milliseconds(n)`, `Time.seconds(n)`, `Time.minutes(n)`,\n+ `Time.hours(n)`, \u548c `Time.days(n)`\u3002\n \n-The time-based window assigners (including session windows) come in both event time and processing\n-time flavors. There are significant tradeoffs between these two types of time windows. With\n-processing time windowing you have to accept these limitations:\n+\u57fa\u4e8e\u65f6\u95f4\u7684\u7a97\u53e3\u5206\u914d\u5668\uff08\u5305\u62ec\u4f1a\u8bdd\u65f6\u95f4\uff09\u65e2\u53ef\u4ee5\u5904\u7406 `\u4e8b\u4ef6\u65f6\u95f4`\uff0c\u4e5f\u53ef\u4ee5\u5904\u7406 `\u5904\u7406\u65f6\u95f4`\u3002\u8fd9\u4e24\u79cd\u57fa\u4e8e\u65f6\u95f4\u7684\u5904\u7406\u6ca1\u6709\u54ea\u4e00\u4e2a\u66f4\u597d\uff0c\u6211\u4eec\u5fc5\u987b\u6298\u8877\u3002\u4f7f\u7528 `\u5904\u7406\u65f6\u95f4`\uff0c\u6211\u4eec\u5fc5\u987b\u63a5\u53d7\u4ee5\u4e0b\u9650\u5236\uff1a\n \n-* can not correctly process historic data,\n-* can not correctly handle out-of-order data,\n-* results will be non-deterministic,\n+* \u65e0\u6cd5\u6b63\u786e\u5904\u7406\u5386\u53f2\u6570\u636e,\n+* \u65e0\u6cd5\u6b63\u786e\u5904\u7406\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u7684\u6570\u636e,\n+* \u7ed3\u679c\u5c06\u662f\u4e0d\u786e\u5b9a\u7684,\n \n-but with the advantage of lower latency. \n+\u4f46\u662f\u6709\u81ea\u5df1\u7684\u4f18\u52bf\uff0c\u8f83\u4f4e\u7684\u5ef6\u8fdf\u3002\n \n-When working with count-based windows, keep in mind that these windows will not fire until a batch\n-is complete. There's no option to time-out and process a partial window, though you could implement\n-that behavior yourself with a custom Trigger.\n+\u4f7f\u7528\u57fa\u4e8e\u8ba1\u6570\u7684\u7a97\u53e3\u65f6\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u53ea\u6709\u7a97\u53e3\u5185\u7684\u4e8b\u4ef6\u6570\u91cf\u5230\u8fbe\u7a97\u53e3\u8981\u6c42\u7684\u6570\u503c\u65f6\uff0c\u8fd9\u4e9b\u7a97\u53e3\u624d\u4f1a\u89e6\u53d1\u8ba1\u7b97\u3002\u5c3d\u7ba1\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u89e6\u53d1\u5668\u81ea\u5df1\u5b9e\u73b0\u8be5\u884c\u4e3a\uff0c\u4f46\u65e0\u6cd5\u5e94\u5bf9\u8d85\u65f6\u548c\u5904\u7406\u90e8\u5206\u7a97\u53e3\u3002\n \n-A global window assigner assigns every event (with the same key) to the same global window. This is\n-only useful if you are going to do your own custom windowing, with a custom Trigger. In many cases\n-where this might seem useful you will be better off using a `ProcessFunction` as described\n-[in another section]({% link learn-flink/event_driven.zh.md %}#process-functions).\n+\u6211\u4eec\u53ef\u80fd\u5728\u6709\u4e9b\u573a\u666f\u4e0b\uff0c\u60f3\u4f7f\u7528\u5168\u5c40 window assigner \u5c06\u6bcf\u4e2a\u4e8b\u4ef6\uff08\u76f8\u540c\u7684 key\uff09\u90fd\u5206\u914d\u7ed9\u67d0\u4e00\u4e2a\u6307\u5b9a\u7684\u5168\u5c40\u7a97\u53e3\u3002 \u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u5efa\u8bae\u662f\u4f7f\u7528 `ProcessFunction`\uff0c\u5177\u4f53\u4ecb\u7ecd\u5728[\u8fd9\u91cc]({% link learn-flink/event_driven.md %}#process-functions)\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MzAyOQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449573029", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u8bf7\u6ce8\u610f `Iterable<SensorReading>`\u5c06\u53ea\u5305\u542b\u4e00\u4e2a\u8bfb\u6570 -- `MyReducingMax` \u8ba1\u7b97\u51fa\u7684\u9884\u5148\u6c47\u603b\u7684\u6700\u5927\u503c\u3002\n          \n          \n            \n            \u8bf7\u6ce8\u610f `Iterable<SensorReading>` \u5c06\u53ea\u5305\u542b\u4e00\u4e2a\u8bfb\u6570 -- `MyReducingMax` \u8ba1\u7b97\u51fa\u7684\u9884\u5148\u6c47\u603b\u7684\u6700\u5927\u503c\u3002", "author": "klion26", "createdAt": "2020-07-03T13:03:51Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -355,18 +306,15 @@ private static class MyWindowFunction extends ProcessWindowFunction<\n }\n {% endhighlight %}\n \n-Notice that the `Iterable<SensorReading>`\n-will contain exactly one reading -- the pre-aggregated maximum computed by `MyReducingMax`.\n+\u8bf7\u6ce8\u610f `Iterable<SensorReading>`\u5c06\u53ea\u5305\u542b\u4e00\u4e2a\u8bfb\u6570 -- `MyReducingMax` \u8ba1\u7b97\u51fa\u7684\u9884\u5148\u6c47\u603b\u7684\u6700\u5927\u503c\u3002", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NDMyNw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449574327", "bodyText": "\u8fd9\u91cc\u53ef\u4ee5\u5728 event_driven.zh.md \u4e2d\u63d0\u4e00\u4e2a hotfix \u7684 PR\uff0c\u4fee\u6539\u4e00\u4e0b\u94fe\u63a5\uff08\u5728\u65c1\u8def\u8f93\u51fa\u4e00\u8282\u524d\u9762\u589e\u52a0\u4e00\u4e2a \uff09\uff0c\u73b0\u5728\u7684\u94fe\u63a5\u662f\u9519\u8bef\u7684\uff08\u8fd9\u4e0d\u662f\u4f60\u8fd9\u91cc\u7684\u95ee\u9898\uff0c\u662f\u4e4b\u524d\u7684\u6587\u6863\u6709\u95ee\u9898\uff09\nhotfix \u7684\u63d0\u6cd5\u53ef\u4ee5\u53c2\u8003 contribution\n\u63d0\u4e86\u4e4b\u540e\u53ef\u4ee5 ping \u6211", "author": "klion26", "createdAt": "2020-07-03T13:06:48Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -355,18 +306,15 @@ private static class MyWindowFunction extends ProcessWindowFunction<\n }\n {% endhighlight %}\n \n-Notice that the `Iterable<SensorReading>`\n-will contain exactly one reading -- the pre-aggregated maximum computed by `MyReducingMax`.\n+\u8bf7\u6ce8\u610f `Iterable<SensorReading>`\u5c06\u53ea\u5305\u542b\u4e00\u4e2a\u8bfb\u6570 -- `MyReducingMax` \u8ba1\u7b97\u51fa\u7684\u9884\u5148\u6c47\u603b\u7684\u6700\u5927\u503c\u3002\n \n-### Late Events\n+<a name=\"Late-Events\"></a>\n+### \u665a\u5230\u7684\u4e8b\u4ef6\n \n-By default, when using event time windows, late events are dropped. There are two optional parts of\n-the window API that give you more control over this.\n+\u9ed8\u8ba4\u573a\u666f\u4e0b\uff0c\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u7684\u4e8b\u4ef6\u4f1a\u88ab\u5220\u9664\uff0c\u4f46\u662f Flink \u7ed9\u4e86\u6211\u4eec\u4e24\u4e2a\u9009\u62e9\u53bb\u63a7\u5236\u8fd9\u4e9b\u4e8b\u4ef6\u3002\n+\n+\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a[\u65c1\u8def\u8f93\u51fa]({% link learn-flink/event_driven.zh.md %}#side-outputs) \u7684\u673a\u5236\u6765\u5b89\u6392\u5c06\u8981\u5220\u9664\u7684\u4e8b\u4ef6\u6536\u96c6\u5230\u4fa7\u8f93\u51fa\u6d41\u4e2d\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u793a\u4f8b:", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2MzIxOQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r454063219", "bodyText": "\u6211\u63d0\u4e86\u4e00\u4e2aJira ticket\uff0c \u4f60\u6709\u65f6\u95f4\u4f60\u770b\u770b", "author": "twentyworld", "createdAt": "2020-07-14T02:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NDMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxMjA0Mw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r454812043", "bodyText": "@twentyworld \u6211\u770b\u5230\u4f60\u63d0\u7684 issue \u4e86\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u4fee\u6539\u53ef\u4ee5\u4e0d\u521b\u5efa jira issue \u76f4\u63a5\u63d0\u4ea4 hotfix \u7684 PR \u5c31\u884c\uff08\u56e0\u4e3a\u6bd4\u8f83\u5c0f\uff09\n\u53e6\u5916\u90a3\u4e2a\u548c\u8fd9\u4e2a\u53ef\u4ee5\u5e76\u884c\u7684\u505a\u7684\uff0c\u6709\u7a7a\u7684\u8bdd\u53ef\u4ee5\u7ee7\u7eed\u4fee\u6539\u4e0b\u8fd9\u4e2a\u54e6~", "author": "klion26", "createdAt": "2020-07-15T06:04:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NDMyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NDk2MQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449574961", "bodyText": "\u8fd9\u4e9b\u60ca\u559c\u4e0d\u662f\u6545\u610f\u7ed9\u7528\u6237\u7684\uff08\u73b0\u5728\u7684\u7ffb\u8bd1\u6709\u70b9\u611f\u89c9\u662f\u6545\u610f\u7ed9\u7528\u6237\u7684\uff09\u6211\u4eec\u80fd\u5426\u6362\u4e00\u79cd\u63cf\u8ff0\u65b9\u5f0f\u5462\uff1f\n\u6216\u8005\u8bf4\u4e0d\u53eb\u505a\u201c\u60ca\u559c\u201d\uff0c\u56e0\u4e3a\u53ef\u4ee5\u4f1a\u51fa\u4e4e\u610f\u5916", "author": "klion26", "createdAt": "2020-07-03T13:08:17Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -397,36 +342,30 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u7ed9\u7528\u6237\u7684\u4e00\u4e9b\u60ca\u559c", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NjA0Mw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r449576043", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u672c\u8282\u9644\u5e26\u7684\u52a8\u624b\u7ec3\u4e60\u662f[Hourly Tips\n          \n          \n            \n            \u672c\u8282\u9644\u5e26\u7684\u52a8\u624b\u7ec3\u4e60\u662f [Hourly Tips\n          \n      \n    \n    \n  \n\n\u8fd9\u4e2a\u5730\u65b9\u4fee\u6539\u4e00\u4e0b", "author": "klion26", "createdAt": "2020-07-03T13:10:51Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -437,37 +376,29 @@ stream\n     .reduce(<same reduce function>)\n {% endhighlight %}\n \n-You might expect Flink's runtime to be smart enough to do this parallel pre-aggregation for you\n-(provided you are using a ReduceFunction or AggregateFunction), but it's not.\n+\u53ef\u80fd\u6211\u4eec\u4f1a\u731c\u6d4b\u4ee5 Flink \u7684\u80fd\u529b\uff0c\u60f3\u8981\u505a\u5230\u8fd9\u6837\u770b\u8d77\u6765\u662f\u53ef\u884c\u7684\uff08\u524d\u63d0\u662f\u4f60\u4f7f\u7528\u7684\u662f ReduceFunction \u6216 AggregateFunction \uff09\uff0c\u4f46\u4e0d\u662f\u3002\n \n-The reason why this works is that the events produced by a time window are assigned timestamps\n-based on the time at the end of the window. So, for example, all of the events produced\n-by an hour-long window will have timestamps marking the end of an hour. Any subsequent window\n-consuming those events should have a duration that is the same as, or a multiple of, the\n-previous window.\n+\u4e4b\u6240\u4ee5\u53ef\u884c\uff0c\u662f\u56e0\u4e3a\u65f6\u95f4\u7a97\u53e3\u4ea7\u751f\u7684\u4e8b\u4ef6\u662f\u6839\u636e\u7a97\u53e3\u7ed3\u675f\u65f6\u7684\u65f6\u95f4\u5206\u914d\u65f6\u95f4\u6233\u7684\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5c0f\u65f6\u5c0f\u65f6\u7684\u7a97\u53e3\u6240\u4ea7\u751f\u7684\u6240\u6709\u4e8b\u4ef6\u90fd\u5c06\u5e26\u6709\u6807\u8bb0\u4e00\u4e2a\u5c0f\u65f6\u7ed3\u675f\u7684\u65f6\u95f4\u6233\u3002\u540e\u9762\u7684\u7a97\u53e3\u5185\u7684\u6570\u636e\u6d88\u8d39\u548c\u524d\u9762\u7684\u6d41\u4ea7\u751f\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\u3002\n \n-#### No Results for Empty TimeWindows\n+<a name=\"No-Results-for-Empty-TimeWindows\"></a>\n+#### \u7a7a\u7684\u65f6\u95f4\u7a97\u53e3\u4e0d\u4f1a\u8f93\u51fa\u7ed3\u679c\n \n-Windows are only created when events are assigned to them. So if there are no events in a given time\n-frame, no results will be reported.\n+\u4e8b\u4ef6\u4f1a\u89e6\u53d1\u7a97\u53e3\u7684\u521b\u5efa\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u5728\u7279\u5b9a\u7684\u7a97\u53e3\u5185\u6ca1\u6709\u4e8b\u4ef6\uff0c\u5c31\u4e0d\u4f1a\u6709\u7a97\u53e3\uff0c\u5c31\u4e0d\u4f1a\u6709\u8f93\u51fa\u7ed3\u679c\u3002\n \n #### Late Events Can Cause Late Merges\n \n-Session windows are based on an abstraction of windows that can _merge_. Each element is initially\n-assigned to a new window, after which windows are merged whenever the gap between them is small\n-enough. In this way, a late event can bridge the gap separating two previously separate sessions,\n-producing a late merge.\n+\u4f1a\u8bdd\u7a97\u53e3\u7684\u5b9e\u73b0\u662f\u57fa\u4e8e\u7a97\u53e3\u7684\u4e00\u4e2a\u62bd\u8c61\u80fd\u529b\uff0c\u7a97\u53e3\u53ef\u4ee5 _\u805a\u5408_\u3002\u4f1a\u8bdd\u7a97\u53e3\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5728\u521d\u59cb\u88ab\u6d88\u8d39\u65f6\uff0c\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\uff0c\u4f46\u662f\u5982\u679c\u7a97\u53e3\u4e4b\u95f4\u7684\u95f4\u9694\u8db3\u591f\u5c0f\uff0c\u591a\u4e2a\u7a97\u53e3\u5c31\u4f1a\u88ab\u805a\u5408\u3002\u5ef6\u8fdf\u4e8b\u4ef6\u53ef\u4ee5\u5f25\u5408\u4e24\u4e2a\u5148\u524d\u5206\u5f00\u7684\u4f1a\u8bdd\u95f4\u9694\uff0c\u4ece\u800c\u4ea7\u751f\u4e00\u4e2a\u867d\u7136\u6709\u5ef6\u8fdf\u4f46\u662f\u66f4\u52a0\u51c6\u786e\u5730\u7ed3\u679c\u3002\n \n {% top %}\n \n-## Hands-on\n+## \u52a8\u624b\u7ec3\u4e60\n \n-The hands-on exercise that goes with this section is the [Hourly Tips\n+\u672c\u8282\u9644\u5e26\u7684\u52a8\u624b\u7ec3\u4e60\u662f[Hourly Tips", "originalCommit": "8b80607bd269b75176759f1b2074e045613fb6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c83c378859b4d70d9dd9793af06d2ceef2ddb4e8", "url": "https://github.com/apache/flink/commit/c83c378859b4d70d9dd9793af06d2ceef2ddb4e8", "message": "[FLINK-17290] [chinese-translation, Documentation / Training] Translate Streaming Analytics training lesson to Chinese.", "committedDate": "2020-07-22T03:45:04Z", "type": "commit"}, {"oid": "40048d0baaa7bfc1d3181df546df53d968e6d6d9", "url": "https://github.com/apache/flink/commit/40048d0baaa7bfc1d3181df546df53d968e6d6d9", "message": "fix some confusing translation problems.", "committedDate": "2020-07-22T03:48:55Z", "type": "commit"}, {"oid": "3b4eadb04073499b6c77642529a1b4170db339c3", "url": "https://github.com/apache/flink/commit/3b4eadb04073499b6c77642529a1b4170db339c3", "message": "fix some confusing translation problems.", "committedDate": "2020-07-22T03:56:03Z", "type": "commit"}, {"oid": "e7169be4537f6c056068b01b79fa896864bf0b0d", "url": "https://github.com/apache/flink/commit/e7169be4537f6c056068b01b79fa896864bf0b0d", "message": "fix some confusing translation problems.", "committedDate": "2020-07-22T05:48:52Z", "type": "commit"}, {"oid": "d1c55d6ba53dc2e8ebd1e872f9f00a35d22419ef", "url": "https://github.com/apache/flink/commit/d1c55d6ba53dc2e8ebd1e872f9f00a35d22419ef", "message": "fix links about img", "committedDate": "2020-07-22T11:32:29Z", "type": "commit"}, {"oid": "1a32b6901341434efdce2fa302e16f0823064fec", "url": "https://github.com/apache/flink/commit/1a32b6901341434efdce2fa302e16f0823064fec", "message": "fix links about img", "committedDate": "2020-07-22T12:13:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMyOTYyNA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r461329624", "bodyText": "\u8fd9\u4e2a\u5730\u65b9\u5efa\u8bae\u6dfb\u52a0 <a> \u6807\u7b7e\uff0c\u53e6\u5916\u5176\u4ed6\u7684 <a> \u6807\u7b7e\u53ef\u4ee5\u6362\u6210\u5168\u5c0f\u5199\u7684\u3002\u8fd9\u91cc\u6709\u4e2a\u5c0f\u6280\u5de7\u3002\u4f60\u53ef\u4ee5\u6253\u5f00 \u82f1\u6587\u7684\u6587\u6863\uff0c\u770b\u770b\u5bf9\u5e94\u6807\u7b7e\u7684 URL \u662f\u5565\uff0c\u7136\u540e\u628a <a name=...> \u4e2d name \u540e\u9762\u7684\u5185\u5bb9\u8865\u5145\u4e3a name \u540e\u9762\u7684\u5185\u5bb9\n\u8fd9\u7bc7\u6587\u6863\u7684\u5176\u4ed6\u5730\u65b9\u4e5f\u90fd\u6dfb\u52a0 <a> \u6807\u7b7e\u5427", "author": "klion26", "createdAt": "2020-07-28T05:37:02Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -385,36 +331,30 @@ stream.\n     .process(...);\n {% endhighlight %}\n \n-When the allowed lateness is greater than zero, only those events that are so late that they would\n-be dropped are sent to the side output (if it has been configured).\n+\u5f53\u5141\u8bb8\u7684\u5ef6\u8fdf\u5927\u4e8e\u96f6\u65f6\uff0c\u53ea\u6709\u90a3\u4e9b\u8d85\u8fc7\u6700\u5927\u65e0\u5e8f\u8fb9\u754c\u4ee5\u81f3\u4e8e\u4f1a\u88ab\u4e22\u5f03\u7684\u4e8b\u4ef6\u624d\u4f1a\u88ab\u53d1\u9001\u5230\u4fa7\u8f93\u51fa\u6d41\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\u3002\n \n-### Surprises\n+<a name=\"Surprises\"></a>\n+### \u6df1\u5165\u4e86\u89e3\u7a97\u53e3\u64cd\u4f5c\n \n-Some aspects of Flink's windowing API may not behave in the way you would expect. Based on\n-frequently asked questions on the [flink-user mailing\n-list](https://flink.apache.org/community.html#mailing-lists) and elsewhere, here are some facts\n-about windows that may surprise you.\n+Flink \u7684\u7a97\u53e3 API \u67d0\u4e9b\u65b9\u9762\u6709\u4e00\u4e9b\u5947\u602a\u7684\u884c\u4e3a\uff0c\u53ef\u80fd\u548c\u6211\u4eec\u9884\u671f\u7684\u884c\u4e3a\u4e0d\u4e00\u81f4\u3002 \u6839\u636e [Flink \u7528\u6237\u90ae\u4ef6\u5217\u8868](https://flink.apache.org/community.html#mailing-lists) \u548c\u5176\u4ed6\u5730\u65b9\u4e00\u4e9b\u9891\u7e41\u88ab\u95ee\u8d77\u7684\u95ee\u9898, \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u5173 Windows \u7684\u5e95\u5c42\u4e8b\u5b9e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u8ba9\u60a8\u611f\u5230\u60ca\u8bb6\u3002\n \n-#### Sliding Windows Make Copies\n+<a name=\"Sliding-Windows-Make-Copies\"></a>\n+#### \u6ed1\u52a8\u7a97\u53e3\u662f\u901a\u8fc7\u590d\u5236\u6765\u5b9e\u73b0\u7684\n \n-Sliding window assigners can create lots of window objects, and will copy each event into every\n-relevant window. For example, if you have sliding windows every 15 minutes that are 24-hours in\n-length, each event will be copied into 4 * 24 = 96 windows.\n+\u6ed1\u52a8\u7a97\u53e3\u5206\u914d\u5668\u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u7a97\u53e3\u5bf9\u8c61\uff0c\u5e76\u5c06\u6bcf\u4e2a\u4e8b\u4ef6\u590d\u5236\u5230\u6bcf\u4e2a\u76f8\u5173\u7684\u7a97\u53e3\u4e2d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6bcf\u9694 15 \u5206\u949f\u5c31\u6709 24 \u5c0f\u65f6\u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u5219\u6bcf\u4e2a\u4e8b\u4ef6\u5c06\u88ab\u590d\u5236\u5230 4 * 24 = 96 \u4e2a\u7a97\u53e3\u4e2d\u3002\n \n-#### Time Windows are Aligned to the Epoch\n+<a name=\"Time-Windows-are-Aligned-to-the-Epoch\"></a>\n+#### \u65f6\u95f4\u7a97\u53e3\u4f1a\u548c\u65f6\u95f4\u5bf9\u9f50\n \n-Just because you are using hour-long processing-time windows and start your application running at\n-12:05 does not mean that the first window will close at 1:05. The first window will be 55 minutes\n-long and close at 1:00.\n+\u4ec5\u4ec5\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u5c0f\u65f6\u7684\u5904\u7406\u65f6\u95f4\u7a97\u53e3\u5e76\u5728 12:05 \u5f00\u59cb\u8fd0\u884c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u7b2c\u4e00\u4e2a\u7a97\u53e3\u5c06\u5728 1:05 \u5173\u95ed\u3002\u7b2c\u4e00\u4e2a\u7a97\u53e3\u5c06\u957f 55 \u5206\u949f\uff0c\u5e76\u5728 1:00 \u5173\u95ed\u3002\n \n-Note, however, that the tumbling and sliding window assigners take an optional offset parameter\n-that can be used to change the alignment of the windows. See\n-[Tumbling Windows]({% link dev/stream/operators/windows.zh.md %}#tumbling-windows) and\n-[Sliding Windows]({% link dev/stream/operators/windows.zh.md %}#sliding-windows) for details.\n+ \u8bf7\u6ce8\u610f\uff0c\u6ed1\u52a8\u7a97\u53e3\u548c\u6eda\u52a8\u7a97\u53e3\u5206\u914d\u5668\u6240\u91c7\u7528\u7684 offset \u53c2\u6570\u53ef\u7528\u4e8e\u6539\u53d8\u7a97\u53e3\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u6709\u5173\u8be6\u7ec6\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\n+[\u6eda\u52a8\u7a97\u53e3]({% link dev/stream/operators/windows.zh.md %}#tumbling-windows) \u548c\n+[\u6ed1\u52a8\u7a97\u53e3]({% link dev/stream/operators/windows.zh.md %}#sliding-windows) \u3002\n \n-#### Windows Can Follow Windows\n+#### window \u540e\u9762\u53ef\u4ee5\u63a5 window", "originalCommit": "1a32b6901341434efdce2fa302e16f0823064fec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzMTA0Nw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r461331047", "bodyText": "\u201dWatermark(t) \u5224\u5b9a\u4e8b\u4ef6\u6d41\u7684\u65f6\u95f4\u5df2\u7ecf\u5230\u8fbe\u4e86 t\u201c \u8fd9\u53e5\u8bdd\u5982\u679c\u6539\u6210 \u201cWatermark(5) \u8868\u793a\u65f6\u95f4 t \u4e4b\u524d\u7684\u4e8b\u4ef6\u90fd\u5df2\u7ecf\u8fbe\u5230\u201d \u4f1a\u597d\u4e00\u4e9b\u5417\uff1f\n\u201cwatermark \u4e4b\u540e\u7684\u65f6\u95f4\u6233\u4e3a \u2264 t \u7684\u201d  -> \"watermark \u4e4b\u540e\u7684\u65f6\u95f4\u6233 \u2264 t \u7684\" \u4f1a\u66f4\u597d\u4e00\u4e9b\u5417", "author": "klion26", "createdAt": "2020-07-28T05:41:36Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"Introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u76f8\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"Working-with-Event-Time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-learn-flink/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link learn-flink/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b watermarks \u662f\u4ec0\u4e48\u3002\n \n ### Watermarks\n \n-Let's work through a simple example that will show why watermarks are needed, and how they work.\n+\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u4e3a\u4ec0\u4e48\u9700\u8981 watermarks \u53ca\u5176\u5de5\u4f5c\u65b9\u5f0f\u3002\n \n-In this example you have a stream of timestamped events that arrive somewhat out of order, as shown\n-below. The numbers shown are timestamps that indicate when these events actually occurred. The first\n-event to arrive happened at time 4, and it is followed by an event that happened earlier, at time 2,\n-and so on:\n+\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5e26\u6709\u6df7\u4e71\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\u6d41\uff0c\u5982\u4e0b\u6240\u793a\u3002\u663e\u793a\u7684\u6570\u5b57\u8868\u8fbe\u7684\u662f\u8fd9\u4e9b\u4e8b\u4ef6\u5b9e\u9645\u53d1\u751f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002\u5230\u8fbe\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5728\u65f6\u95f4 4\uff0c\u968f\u540e\u53d1\u751f\u7684\u4e8b\u4ef6\u53d1\u751f\u5728\u66f4\u65e9\u7684\u65f6\u95f4 2\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff1a\n \n <div class=\"text-center\" style=\"font-size: x-large; word-spacing: 0.5em; margin: 1em 0em;\">\n \u00b7\u00b7\u00b7 23 19 22 24 21 14 17 13 12 15 9 11 7 2 4 \u2192\n </div>\n \n-Now imagine that you are trying create a stream sorter. This is meant to be an application that\n-processes each event from a stream as it arrives, and emits a new stream containing the same events,\n-but ordered by their timestamps.\n+\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u6570\u636e\u6d41\u6392\u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u8fbe\u5230\u7684\u76ee\u7684\u662f\uff1a\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u6570\u636e\u6d41\u91cc\u7684\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5c31\u6709\u4e00\u4e2a\u7b97\u5b50\uff08\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u6392\u5e8f\uff09\u5f00\u59cb\u5904\u7406\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u7b97\u5b50\u6240\u8f93\u51fa\u7684\u6d41\u662f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u597d\u7684\u3002\n \n-Some observations:\n+\u8ba9\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u8fd9\u4e9b\u6570\u636e:\n \n-(1) The first element your stream sorter sees is the 4, but you can't just immediately release it as\n-the first element of the sorted stream. It may have arrived out of order, and an earlier event might\n-yet arrive. In fact, you have the benefit of some god-like knowledge of this stream's future, and\n-you can see that your stream sorter should wait at least until the 2 arrives before producing any\n-results.\n+(1) \u6211\u4eec\u7684\u6392\u5e8f\u5668\u770b\u5230\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u7684\u65f6\u95f4\u6233\u662f 4\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u5c06\u5176\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u6d41\u91ca\u653e\u3002\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u80fd\u786e\u5b9a\u5b83\u662f\u6709\u5e8f\u7684\uff0c\u5e76\u4e14\u8f83\u65e9\u7684\u4e8b\u4ef6\u6709\u53ef\u80fd\u5e76\u672a\u5230\u8fbe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5fc5\u987b\u8981\u7b49\u5230\u65f6\u95f4\u6233\u4e3a 2 \u7684\u5143\u7d20\u5230\u6765\u65f6\uff0c\u6392\u5e8f\u5668\u624d\u53ef\u4ee5\u6709\u4e8b\u4ef6\u8f93\u51fa\u3002\n \n-*Some buffering, and some delay, is necessary.*\n+*\u9700\u8981\u4e00\u4e9b\u7f13\u51b2\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u8fd9\u90fd\u662f\u503c\u5f97\u7684*\n \n-(2) If you do this wrong, you could end up waiting forever. First the sorter saw an event from time\n-4, and then an event from time 2. Will an event with a timestamp less than 2 ever arrive? Maybe.\n-Maybe not. You could wait forever and never see a 1.\n+(2) \u63a5\u4e0b\u6765\u7684\u8fd9\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u7684\u662f\u56fa\u6267\u7684\u7b49\u5f85\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c\u3002\u9996\u5148\uff0c\u6211\u4eec\u770b\u5230\u4e86\u65f6\u95f4\u6233\u4e3a 4 \u7684\u4e8b\u4ef6\uff0c\u7136\u540e\u770b\u5230\u4e86\u65f6\u95f4\u6233\u4e3a 2 \u7684\u4e8b\u4ef6\u3002\u53ef\u662f\uff0c\u65f6\u95f4\u6233\u5c0f\u4e8e 2 \u7684\u4e8b\u4ef6\u63a5\u4e0b\u6765\u4f1a\u4e0d\u4f1a\u5230\u6765\u5462\uff1f\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u3002\u518d\u6b21\u7ad9\u5728\u4e0a\u5e1d\u89c6\u89d2\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u770b\u5230\u65f6\u95f4\u6233 1\u3002\n \n-*Eventually you have to be courageous and emit the 2 as the start of the sorted stream.*\n+*\u6700\u7ec8\uff0c\u6211\u4eec\u5fc5\u987b\u52c7\u4e8e\u627f\u62c5\u8d23\u4efb\uff0c\u5e76\u53d1\u51fa\u6307\u4ee4\uff0c\u628a\u5e26\u6709\u65f6\u95f4\u6233 2 \u7684\u4e8b\u4ef6\u4f5c\u4e3a\u5df2\u6392\u5e8f\u7684\u4e8b\u4ef6\u6d41\u7684\u5f00\u59cb*\n \n-(3) What you need then is some sort of policy that defines when, for any given timestamped event, to\n-stop waiting for the arrival of earlier events.\n+(3)\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u6233\u7684\u4e8b\u4ef6\uff0cFlink \u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u4e8b\u4ef6\u7684\u5230\u6765\u3002\n \n-*This is precisely what watermarks do* \u2014 they define when to stop waiting for earlier events.\n+*\u8fd9\u6b63\u662f watermarks \u7684\u4f5c\u7528* \u2014 \u5b83\u4eec\u5b9a\u4e49\u4f55\u65f6\u505c\u6b62\u7b49\u5f85\u8f83\u65e9\u7684\u4e8b\u4ef6\u3002\n \n-Event time processing in Flink depends on *watermark generators* that insert special timestamped\n-elements into the stream, called *watermarks*. A watermark for time _t_ is an assertion that the\n-stream is (probably) now complete up through time _t_.\n+Flink \u4e2d\u4e8b\u4ef6\u65f6\u95f4\u7684\u5904\u7406\u53d6\u51b3\u4e8e *watermark \u751f\u6210\u5668*\uff0c\u540e\u8005\u5c06\u5e26\u6709\u65f6\u95f4\u6233\u7684\u7279\u6b8a\u5143\u7d20\u63d2\u5165\u6d41\u4e2d\u5f62\u6210 *watermarks*\u3002\u4e8b\u4ef6\u65f6\u95f4 _t_ \u7684 watermark \u4ee3\u8868 _t_ \u4e4b\u524d\uff08\u5f88\u53ef\u80fd\uff09\u90fd\u5df2\u7ecf\u5230\u8fbe\u3002\n \n-When should this stream sorter stop waiting, and push out the 2 to start the sorted stream? When a\n-watermark arrives with a timestamp of 2, or greater.\n+\u5f53 watermark \u4ee5 2 \u6216\u66f4\u5927\u7684\u65f6\u95f4\u6233\u5230\u8fbe\u65f6\uff0c\u4e8b\u4ef6\u6d41\u7684\u6392\u5e8f\u5668\u5e94\u505c\u6b62\u7b49\u5f85\uff0c\u5e76\u8f93\u51fa 2 \u4f5c\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\u6d41\u3002\n \n-(4) You might imagine different policies for deciding how to generate watermarks.\n+(4) \u6211\u4eec\u53ef\u80fd\u4f1a\u601d\u8003\uff0c\u5982\u4f55\u51b3\u5b9a watermarks \u7684\u4e0d\u540c\u751f\u6210\u7b56\u7565\n \n-Each event arrives after some delay, and these delays vary, so some events are delayed more than\n-others. One simple approach is to assume that these delays are bounded by some maximum delay. Flink\n-refers to this strategy as *bounded-out-of-orderness* watermarking. It is easy to imagine more\n-complex approaches to watermarking, but for most applications a fixed delay works well enough.\n+\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u4f1a\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u540e\u5230\u8fbe\uff0c\u7136\u800c\u8fd9\u4e9b\u5ef6\u8fdf\u6709\u6240\u4e0d\u540c\uff0c\u6709\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u6bd4\u5176\u4ed6\u4e8b\u4ef6\u5ef6\u8fdf\u5f97\u66f4\u591a\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5047\u5b9a\u8fd9\u4e9b\u5ef6\u8fdf\u53d7\u67d0\u4e2a\u6700\u5927\u5ef6\u8fdf\u7684\u9650\u5236\u3002Flink \u5c06\u6b64\u7b56\u7565\u79f0\u4e3a *\u6700\u5927\u65e0\u5e8f\u8fb9\u754c(bounded-out-of-orderness)* watermark\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u50cf\u51fa\u66f4\u597d\u7684\u751f\u6210 watermark \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u800c\u8a00\uff0c\u56fa\u5b9a\u5ef6\u8fdf\u7b56\u7565\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\n \n-### Latency vs. Completeness\n+<a name=\"Latency-vs-Completeness\"></a>\n+### \u5ef6\u8fdf VS \u6b63\u786e\u6027\n \n-Another way to think about watermarks is that they give you, the developer of a streaming\n-application, control over the tradeoff between latency and completeness. Unlike in batch processing,\n-where one has the luxury of being able to have complete knowledge of the input before producing any\n-results, with streaming you must eventually stop waiting to see more of the input, and produce some\n-sort of result.\n+watermarks \u7ed9\u4e86\u5f00\u53d1\u8005\u6d41\u5904\u7406\u7684\u4e00\u79cd\u9009\u62e9\uff0c\u5b83\u4eec\u4f7f\u5f00\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u65f6\u53ef\u4ee5\u63a7\u5236\u5ef6\u8fdf\u548c\u5b8c\u6574\u6027\u4e4b\u95f4\u7684\u6743\u8861\u3002\u4e0e\u6279\u5904\u7406\u4e0d\u540c\uff0c\u6279\u5904\u7406\u4e2d\u7684\u5962\u4f88\u4e4b\u5904\u5728\u4e8e\u53ef\u4ee5\u5728\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\u4e4b\u524d\u5b8c\u5168\u4e86\u89e3\u8f93\u5165\uff0c\u800c\u4f7f\u7528\u6d41\u5f0f\u4f20\u8f93\uff0c\u6211\u4eec\u4e0d\u88ab\u5141\u8bb8\u7b49\u5f85\u6240\u6709\u7684\u65f6\u95f4\u90fd\u4ea7\u751f\u4e86\uff0c\u624d\u8f93\u51fa\u6392\u5e8f\u597d\u7684\u6570\u636e\uff0c\u8fd9\u4e0e\u6d41\u76f8\u8fdd\u80cc\u3002\n \n-You can either configure your watermarking aggressively, with a short bounded delay, and thereby\n-take the risk of producing results with rather incomplete knowledge of the input -- i.e., a possibly\n-wrong result, produced quickly. Or you can wait longer, and produce results that take advantage of\n-having more complete knowledge of the input stream(s).\n+\u6211\u4eec\u53ef\u4ee5\u628a watermarks \u7684\u8fb9\u754c\u65f6\u95f4\u914d\u7f6e\u7684\u76f8\u5bf9\u8f83\u77ed\uff0c\u4ece\u800c\u5192\u7740\u5728\u8f93\u5165\u4e86\u89e3\u4e0d\u5b8c\u5168\u7684\u60c5\u51b5\u4e0b\u4ea7\u751f\u7ed3\u679c\u7684\u98ce\u9669-\u5373\u53ef\u80fd\u4f1a\u5f88\u5feb\u4ea7\u751f\u9519\u8bef\u7ed3\u679c\u3002\u6216\u8005\uff0c\u4f60\u53ef\u4ee5\u7b49\u5f85\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u5e76\u5229\u7528\u5bf9\u8f93\u5165\u6d41\u7684\u66f4\u5168\u9762\u7684\u4e86\u89e3\u6765\u4ea7\u751f\u7ed3\u679c\u3002\n \n-It is also possible to implement hybrid solutions that produce initial results quickly, and then\n-supply updates to those results as additional (late) data is processed. This is a good approach for\n-some applications.\n+\u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9e\u65bd\u6df7\u5408\u89e3\u51b3\u65b9\u6848\uff0c\u5148\u5feb\u901f\u4ea7\u751f\u521d\u6b65\u7ed3\u679c\uff0c\u7136\u540e\u5728\u5904\u7406\u5176\u4ed6\uff08\u6700\u65b0\uff09\u6570\u636e\u65f6\u5411\u8fd9\u4e9b\u7ed3\u679c\u63d0\u4f9b\u66f4\u65b0\u3002\u5bf9\u4e8e\u6709\u4e00\u4e9b\u5bf9\u5ef6\u8fdf\u7684\u5bb9\u5fcd\u7a0b\u5ea6\u5f88\u4f4e\uff0c\u4f46\u662f\u53c8\u5bf9\u7ed3\u679c\u6709\u5f88\u4e25\u683c\u7684\u8981\u6c42\u7684\u573a\u666f\u4e0b\uff0c\u6216\u8bb8\u662f\u4e00\u4e2a\u798f\u97f3\u3002\n \n-### Lateness\n+<a name=\"Latency\"></a>\n+### \u5ef6\u8fdf\n \n-Lateness is defined relative to the watermarks. A `Watermark(t)` asserts that the stream is complete\n-up through time _t_; any event following this watermark whose timestamp is &le; _t_ is late.\n+\u5ef6\u8fdf\u662f\u76f8\u5bf9\u4e8e watermarks \u5b9a\u4e49\u7684\u3002`Watermark(t)` \u5224\u5b9a\u4e8b\u4ef6\u6d41\u7684\u65f6\u95f4\u5df2\u7ecf\u5230\u8fbe\u4e86 _t_; watermark \u4e4b\u540e\u7684\u65f6\u95f4\u6233\u4e3a &le; _t_ \u7684\u4efb\u4f55\u4e8b\u4ef6\u90fd\u88ab\u79f0\u4e4b\u4e3a\u5ef6\u8fdf\u4e8b\u4ef6\u3002", "originalCommit": "1a32b6901341434efdce2fa302e16f0823064fec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQwMzA3OA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r461403078", "bodyText": "\u8fd9\u4e00\u6bb5\u6709\u70b9\u600e\u4e48\u611f\u89c9\u6709\u70b9\u62d7\u53e3\u5462\uff0c\u6211\u770b\u770b\u91cd\u65b0\u5904\u7406\u4e00\u4e0b\u3002\u5f53\u7136\uff0c\u4f60\u8fd9\u4e2a\u5efa\u8bae\uff0c\u4e5f\u662f\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\u3002", "author": "twentyworld", "createdAt": "2020-07-28T08:19:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzMTA0Nw=="}], "type": "inlineReview"}, {"oid": "e43645034f43ff7215797228f05bbd0063b33305", "url": "https://github.com/apache/flink/commit/e43645034f43ff7215797228f05bbd0063b33305", "message": "makes all title anchor lower case letters.", "committedDate": "2020-07-28T08:32:15Z", "type": "commit"}, {"oid": "c901747befdd42b2cb6765785ba97264b2ae1223", "url": "https://github.com/apache/flink/commit/c901747befdd42b2cb6765785ba97264b2ae1223", "message": "makes all title anchor lower case letters.", "committedDate": "2020-07-28T08:42:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQwOTI3Nw==", "url": "https://github.com/apache/flink/pull/12237#discussion_r463409277", "bodyText": "\u8fd9\u4e2a\u5730\u65b9\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u54e6\n\u4e5f\u5c31\u662f\u6539\u6210 \"\u672c\u8282\u9644\u5e26\u7684\u52a8\u624b\u7ec3\u4e60\u662f [Hourly Tips\"", "author": "klion26", "createdAt": "2020-07-31T05:16:21Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -425,37 +366,31 @@ stream\n     .reduce(<same reduce function>)\n {% endhighlight %}\n \n-You might expect Flink's runtime to be smart enough to do this parallel pre-aggregation for you\n-(provided you are using a ReduceFunction or AggregateFunction), but it's not.\n+\u53ef\u80fd\u6211\u4eec\u4f1a\u731c\u6d4b\u4ee5 Flink \u7684\u80fd\u529b\uff0c\u60f3\u8981\u505a\u5230\u8fd9\u6837\u770b\u8d77\u6765\u662f\u53ef\u884c\u7684\uff08\u524d\u63d0\u662f\u4f60\u4f7f\u7528\u7684\u662f ReduceFunction \u6216 AggregateFunction \uff09\uff0c\u4f46\u4e0d\u662f\u3002\n \n-The reason why this works is that the events produced by a time window are assigned timestamps\n-based on the time at the end of the window. So, for example, all of the events produced\n-by an hour-long window will have timestamps marking the end of an hour. Any subsequent window\n-consuming those events should have a duration that is the same as, or a multiple of, the\n-previous window.\n+\u4e4b\u6240\u4ee5\u53ef\u884c\uff0c\u662f\u56e0\u4e3a\u65f6\u95f4\u7a97\u53e3\u4ea7\u751f\u7684\u4e8b\u4ef6\u662f\u6839\u636e\u7a97\u53e3\u7ed3\u675f\u65f6\u7684\u65f6\u95f4\u5206\u914d\u65f6\u95f4\u6233\u7684\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5c0f\u65f6\u5c0f\u65f6\u7684\u7a97\u53e3\u6240\u4ea7\u751f\u7684\u6240\u6709\u4e8b\u4ef6\u90fd\u5c06\u5e26\u6709\u6807\u8bb0\u4e00\u4e2a\u5c0f\u65f6\u7ed3\u675f\u7684\u65f6\u95f4\u6233\u3002\u540e\u9762\u7684\u7a97\u53e3\u5185\u7684\u6570\u636e\u6d88\u8d39\u548c\u524d\u9762\u7684\u6d41\u4ea7\u751f\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\u3002\n \n-#### No Results for Empty TimeWindows\n+<a name=\"no-results-for-empty-timewindows\"></a>\n+#### \u7a7a\u7684\u65f6\u95f4\u7a97\u53e3\u4e0d\u4f1a\u8f93\u51fa\u7ed3\u679c\n \n-Windows are only created when events are assigned to them. So if there are no events in a given time\n-frame, no results will be reported.\n+\u4e8b\u4ef6\u4f1a\u89e6\u53d1\u7a97\u53e3\u7684\u521b\u5efa\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u5728\u7279\u5b9a\u7684\u7a97\u53e3\u5185\u6ca1\u6709\u4e8b\u4ef6\uff0c\u5c31\u4e0d\u4f1a\u6709\u7a97\u53e3\uff0c\u5c31\u4e0d\u4f1a\u6709\u8f93\u51fa\u7ed3\u679c\u3002\n \n #### Late Events Can Cause Late Merges\n \n-Session windows are based on an abstraction of windows that can _merge_. Each element is initially\n-assigned to a new window, after which windows are merged whenever the gap between them is small\n-enough. In this way, a late event can bridge the gap separating two previously separate sessions,\n-producing a late merge.\n+\u4f1a\u8bdd\u7a97\u53e3\u7684\u5b9e\u73b0\u662f\u57fa\u4e8e\u7a97\u53e3\u7684\u4e00\u4e2a\u62bd\u8c61\u80fd\u529b\uff0c\u7a97\u53e3\u53ef\u4ee5 _\u805a\u5408_\u3002\u4f1a\u8bdd\u7a97\u53e3\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5728\u521d\u59cb\u88ab\u6d88\u8d39\u65f6\uff0c\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\uff0c\u4f46\u662f\u5982\u679c\u7a97\u53e3\u4e4b\u95f4\u7684\u95f4\u9694\u8db3\u591f\u5c0f\uff0c\u591a\u4e2a\u7a97\u53e3\u5c31\u4f1a\u88ab\u805a\u5408\u3002\u5ef6\u8fdf\u4e8b\u4ef6\u53ef\u4ee5\u5f25\u5408\u4e24\u4e2a\u5148\u524d\u5206\u5f00\u7684\u4f1a\u8bdd\u95f4\u9694\uff0c\u4ece\u800c\u4ea7\u751f\u4e00\u4e2a\u867d\u7136\u6709\u5ef6\u8fdf\u4f46\u662f\u66f4\u52a0\u51c6\u786e\u5730\u7ed3\u679c\u3002\n \n {% top %}\n \n-## Hands-on\n+<a name=\"hands-on\"></a>\n+## \u5b9e\u8df5\u7ec3\u4e60\n \n-The hands-on exercise that goes with this section is the [Hourly Tips\n+\u672c\u8282\u9644\u5e26\u7684\u52a8\u624b\u7ec3\u4e60\u662f[Hourly Tips", "originalCommit": "c901747befdd42b2cb6765785ba97264b2ae1223", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQwOTU1NQ==", "url": "https://github.com/apache/flink/pull/12237#discussion_r463409555", "bodyText": "\u8fd9\u91cc\u4e4b\u524d\u5df2\u7ecf\u4f7f\u7528\u4e86 \u5904\u7406\u65f6\u95f4 \u6765\u4ee3\u66ff \"processing time\" \u4e86\uff0c\u5efa\u8bae\u5168\u6587\u8fdb\u884c\u7edf\u4e00\uff0c\u6240\u4ee5\u7684\u90fd\u4f7f\u7528 \u201c\u5904\u7406\u65f6\u95f4\u201d\uff0c\u5176\u4ed6\u7684\u7ffb\u8bd1\u4e5f\u662f\u4e00\u6837\u7684", "author": "klion26", "createdAt": "2020-07-31T05:17:29Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u76f8\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002", "originalCommit": "c901747befdd42b2cb6765785ba97264b2ae1223", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMTA0OA==", "url": "https://github.com/apache/flink/pull/12237#discussion_r463411048", "bodyText": "\u8fd9\u91cc\u7684\u6807\u9898\u94fe\u63a5\u6709\u95ee\u9898\uff0c\u4e0b\u6587\u4e2d\u4f7f\u7528\u5230\u7684\u662f \"working-with-watermarks\" \u8fd9\u91cc\u4f7f\u7528\u7684\u662f \"Working-with-Watermarks\" \u5927\u5c0f\u5199\u4e0d\u4e00\u81f4\u3002\n\u5bf9\u4e8e\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u5728\u7ffb\u8bd1\u5b8c\u6210\u4e4b\u540e\uff0c\u81ea\u5df1\u5728\u672c\u5730\u6267\u884c ./docs/docker/run.sh \u7136\u540e\u6267\u884c ./build_docs.sh -p \u7136\u540e\u6253\u5f00 http://localhost:4000/zh/learn-flink/streaming_analytics.html( \u4e5f\u5c31\u662f\u4f60\u7ffb\u8bd1\u7684\u8fd9\u7bc7\u6587\u7ae0\u7684\u94fe\u63a5\uff09\u770b\u4e00\u4e0b\uff0c\u5e76\u4e14\u81ea\u5df1\u70b9\u51fb\u4e00\u6b21\u6240\u6709\u7684\u94fe\u63a5\u770b\u770b\u662f\u5426\u6b63\u5e38", "author": "klion26", "createdAt": "2020-07-31T05:23:51Z", "path": "docs/learn-flink/streaming_analytics.zh.md", "diffHunk": "@@ -29,123 +29,86 @@ under the License.\n \n ## Event Time and Watermarks\n \n-### Introduction\n+<a name=\"introduction\"></a>\n+### \u6982\u8981\n \n-Flink explicitly supports three different notions of time:\n+Flink \u660e\u786e\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n-* _event time:_ the time when an event occurred, as recorded by the device producing (or storing) the event\n+* _\u4e8b\u4ef6\u65f6\u95f4(event time)\uff1a_ \u4e8b\u4ef6\u4ea7\u751f\u7684\u65f6\u95f4\uff0c\u8bb0\u5f55\u7684\u662f\u8bbe\u5907\u751f\u4ea7(\u6216\u8005\u5b58\u50a8)\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-* _ingestion time:_ a timestamp recorded by Flink at the moment it ingests the event\n+* _\u6444\u53d6\u65f6\u95f4(ingestion time)\uff1a_ Flink \u8bfb\u53d6\u4e8b\u4ef6\u65f6\u8bb0\u5f55\u7684\u65f6\u95f4\n \n-* _processing time:_ the time when a specific operator in your pipeline is processing the event\n+* _\u5904\u7406\u65f6\u95f4(processing time)\uff1a_ Flink pipeline \u4e2d\u5177\u4f53\u7b97\u5b50\u5904\u7406\u4e8b\u4ef6\u7684\u65f6\u95f4\n \n-For reproducible results, e.g., when computing the maximum price a stock reached during the first\n-hour of trading on a given day, you should use event time. In this way the result won't depend on\n-when the calculation is performed. This kind of real-time application is sometimes performed using\n-processing time, but then the results are determined by the events that happen to be processed\n-during that hour, rather than the events that occurred then. Computing analytics based on processing\n-time causes inconsistencies, and makes it difficult to re-analyze historic data or test new\n-implementations.\n+\u4e3a\u4e86\u83b7\u5f97\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\u5728\u8ba1\u7b97\u8fc7\u53bb\u7684\u7279\u5b9a\u4e00\u5929\u91cc\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u80a1\u7968\u7684\u6700\u9ad8\u4ef7\u683c\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u95f4\u53bb\u8ba1\u7b97\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8f93\u51fa\u7ed3\u679c\u3002\u7136\u800c\u5982\u679c\u4f7f\u7528 processing time \u7684\u8bdd\uff0c\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u7531\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\u6240\u51b3\u5b9a\u3002\u591a\u6b21\u8fd0\u884c\u57fa\u4e8e processing time \u7684\u5b9e\u65f6\u7a0b\u5e8f\uff0c\u53ef\u80fd\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u4e0d\u76f8\u540c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u518d\u6b21\u5206\u6790\u5386\u53f2\u6570\u636e\u6216\u8005\u6d4b\u8bd5\u65b0\u4ee3\u7801\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\n \n-### Working with Event Time\n+<a name=\"working-with-event-time\"></a>\n+### \u4f7f\u7528 Event Time\n \n-By default, Flink will use processing time. To change this, you can set the Time Characteristic:\n+Flink \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4f7f\u7528\u5904\u7406\u65f6\u95f4\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u914d\u7f6e\u6765\u544a\u8bc9 Flink \u9009\u62e9\u54ea\u79cd\u65f6\u95f4\u8bed\u4e49:\n \n {% highlight java %}\n final StreamExecutionEnvironment env =\n     StreamExecutionEnvironment.getExecutionEnvironment();\n env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n {% endhighlight %}\n \n-If you want to use event time, you will also need to supply a Timestamp Extractor and Watermark\n-Generator that Flink will use to track the progress of event time. This will be covered in the\n-section below on [Working with Watermarks]({% link\n-learn-flink/streaming_analytics.zh.md %}#working-with-watermarks), but first we should explain what\n-watermarks are.\n+\u5982\u679c\u60f3\u8981\u4f7f\u7528\u4e8b\u4ef6\u65f6\u95f4\uff0c\u9700\u8981\u989d\u5916\u7ed9 Flink \u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u6233\u63d0\u53d6\u5668\u548c Watermark \u751f\u6210\u5668\uff0cFlink \u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8ddf\u8e2a\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5ea6\u3002\u8fd9\u5c06\u5728\u9009\u8282[\u4f7f\u7528 Watermarks]({% link learn-flink/streaming_analytics.zh.md %}#Working-with-Watermarks) \u4e2d\u4ecb\u7ecd\uff0c\u4f46\u662f\u9996\u5148\u6211\u4eec\u9700\u8981\u89e3\u91ca\u4e00\u4e0b watermarks \u662f\u4ec0\u4e48\u3002", "originalCommit": "c901747befdd42b2cb6765785ba97264b2ae1223", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "526a4c7561137708b22fe225e671b7cde329a4c8", "url": "https://github.com/apache/flink/commit/526a4c7561137708b22fe225e671b7cde329a4c8", "message": "fix some translation problems", "committedDate": "2020-08-03T11:48:59Z", "type": "commit"}]}