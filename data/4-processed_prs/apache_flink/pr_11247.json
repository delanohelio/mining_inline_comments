{"pr_number": 11247, "pr_title": "[FLINK-16262][Connectors] Set the context classloader for parallel stream in FlinkKafkaProducer", "pr_createdAt": "2020-02-27T15:21:08Z", "pr_url": "https://github.com/apache/flink/pull/11247", "timeline": [{"oid": "ff5293a8f39aaef7a457e9720f7174e1982a928d", "url": "https://github.com/apache/flink/commit/ff5293a8f39aaef7a457e9720f7174e1982a928d", "message": "[FLINK-16262][Connectors] Set the context classloader for parallel stream in FlinkKafkaProducer", "committedDate": "2020-02-27T15:09:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjMyOA==", "url": "https://github.com/apache/flink/pull/11247#discussion_r385356328", "bodyText": "Please add a comment that parallelStream executes the consumer in a separate thread pool.\nAt a glance this context can easily appear as a no-op if you miss that parallelStream is used and what the semantics of it are.", "author": "zentol", "createdAt": "2020-02-27T20:34:15Z", "path": "flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducer.java", "diffHunk": "@@ -1095,18 +1096,21 @@ private void resetAvailableTransactionalIdsPool(Collection<String> transactional\n \t// ----------------------------------- Utilities --------------------------\n \n \tprivate void abortTransactions(final Set<String> transactionalIds) {\n+\t\tfinal ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n \t\ttransactionalIds.parallelStream().forEach(transactionalId -> {\n-\t\t\t// don't mess with the original configuration or any other properties of the\n-\t\t\t// original object\n-\t\t\t// -> create an internal kafka producer on our own and do not rely on\n-\t\t\t//    initTransactionalProducer().\n-\t\t\tfinal Properties myConfig = new Properties();\n-\t\t\tmyConfig.putAll(producerConfig);\n-\t\t\tinitTransactionalProducerConfig(myConfig, transactionalId);\n-\t\t\ttry (FlinkKafkaInternalProducer<byte[], byte[]> kafkaProducer =\n-\t\t\t\t\tnew FlinkKafkaInternalProducer<>(myConfig)) {\n-\t\t\t\t// it suffices to call initTransactions - this will abort any lingering transactions\n-\t\t\t\tkafkaProducer.initTransactions();\n+\t\t\ttry (TemporaryClassLoaderContext ignored = TemporaryClassLoaderContext.of(classLoader)) {", "originalCommit": "ff5293a8f39aaef7a457e9720f7174e1982a928d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4fd63bfdc08cba777c9f476de7b0f7cbeddf294f", "url": "https://github.com/apache/flink/commit/4fd63bfdc08cba777c9f476de7b0f7cbeddf294f", "message": "add some comments", "committedDate": "2020-02-28T02:19:29Z", "type": "commit"}, {"oid": "2843e7da6dacf7869b570049a769826e4a4673be", "url": "https://github.com/apache/flink/commit/2843e7da6dacf7869b570049a769826e4a4673be", "message": "remove .swo file", "committedDate": "2020-02-28T03:10:15Z", "type": "commit"}]}