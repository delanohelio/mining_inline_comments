{"pr_number": 10760, "pr_title": "[FLINK-15466][table-planner] Fix bug of `FlinkAggregateExpandDistinct\u2026", "pr_createdAt": "2020-01-03T10:11:47Z", "pr_url": "https://github.com/apache/flink/pull/10760", "timeline": [{"oid": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "url": "https://github.com/apache/flink/commit/1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "message": "[FLINK-15466][table-planner] Fix bug of `FlinkAggregateExpandDistinctAggregatesRule` for cases where distinct aggs with filter are used.", "committedDate": "2020-01-03T10:02:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTEwMA==", "url": "https://github.com/apache/flink/pull/10760#discussion_r363135100", "bodyText": "Get and remap xx ?", "author": "godfreyhe", "createdAt": "2020-01-06T01:50:35Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java", "diffHunk": "@@ -471,10 +474,24 @@ private void rewriteUsingGroupingSets(RelOptRuleCall call,\n \t\t\tfinal RexNode nodeZ = nodes.remove(nodes.size() - 1);\n \t\t\tfor (Map.Entry<ImmutableBitSet, Integer> entry : filters.entrySet()) {\n \t\t\t\tfinal long v = groupValue(fullGroupSet, entry.getKey());\n-\t\t\t\tnodes.add(\n+\t\t\t\t// Remap and get the filterArg of the distinct aggregate call.", "originalCommit": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTc0MA==", "url": "https://github.com/apache/flink/pull/10760#discussion_r363135740", "bodyText": "please move these cases to FlinkAggregateExpandDistinctAggregatesRuleTest", "author": "godfreyhe", "createdAt": "2020-01-06T01:55:53Z", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/batch/sql/agg/DistinctAggregateTest.scala", "diffHunk": "@@ -82,4 +83,39 @@ class DistinctAggregateTest extends TableTestBase {\n     util.verifyPlan(sqlQuery)\n   }\n \n+  @Test\n+  def testSingleDistinctWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c) FILTER (WHERE a > 0) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def testMultiDistinctOnSameColumnWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c), COUNT(DISTINCT c) FILTER (WHERE a > 10),\\n\" +\n+      \"COUNT(DISTINCT c) FILTER (WHERE a < 10) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def TestMultiDistinctOnDifferentColumnWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c), COUNT(DISTINCT c) FILTER (WHERE a > 0),\\n\" +\n+      \"COUNT(DISTINCT b) FILTER (WHERE b > 1) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def TestMultiDistinctWithFilterAndNonDistinctAgg(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c), COUNT(DISTINCT c) FILTER (WHERE a > 0),\\n\" +\n+      \"MAX(e), MIN(e) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def testMultiDistinctAndNonDistinctAggWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, MAX(e), MAX(e) FILTER (WHERE a < 10), COUNT(DISTINCT c),\\n\" +\n+      \"COUNT(DISTINCT c) FILTER (WHERE a > 5), COUNT(DISTINCT b) FILTER (WHERE b > 3)\\n\" +\n+      \"FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+", "originalCommit": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTkwNA==", "url": "https://github.com/apache/flink/pull/10760#discussion_r363135904", "bodyText": "please add some cases without GROUP BY", "author": "godfreyhe", "createdAt": "2020-01-06T01:57:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzOTY1MQ==", "url": "https://github.com/apache/flink/pull/10760#discussion_r363139651", "bodyText": "please move these cases to FlinkAggregateExpandDistinctAggregatesRuleTest\n\nI noticed there are common distinct tests between FlinkAggregateExpandDistinctAggregatesRuleTest and DistinctAggregateTest, it's better to reserve them here, and copy them to FlinkAggregateExpandDistinctAggregatesRuleTest as well?", "author": "cshuo", "createdAt": "2020-01-06T02:30:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4MTIwNw==", "url": "https://github.com/apache/flink/pull/10760#discussion_r363181207", "bodyText": "actually, It's better to extract a common test case base named DistinctAggregateTestBase (like AggregateReduceGroupingTestBase)", "author": "godfreyhe", "createdAt": "2020-01-06T07:17:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNjE1Nw==", "url": "https://github.com/apache/flink/pull/10760#discussion_r363136157", "bodyText": "it's better to extract nodes.add(relBuilder.alias(project, \"$g_\" + v) as common part", "author": "godfreyhe", "createdAt": "2020-01-06T02:00:01Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java", "diffHunk": "@@ -471,10 +474,24 @@ private void rewriteUsingGroupingSets(RelOptRuleCall call,\n \t\t\tfinal RexNode nodeZ = nodes.remove(nodes.size() - 1);\n \t\t\tfor (Map.Entry<ImmutableBitSet, Integer> entry : filters.entrySet()) {\n \t\t\t\tfinal long v = groupValue(fullGroupSet, entry.getKey());\n-\t\t\t\tnodes.add(\n+\t\t\t\t// Remap and get the filterArg of the distinct aggregate call.\n+\t\t\t\tint distinctAggCallFilterArg = remap(fullGroupSet,\n+\t\t\t\t\tgroupSetToDistinctAggCallFilterArg.getOrDefault(entry.getKey(), -1));\n+\t\t\t\tif (distinctAggCallFilterArg < 0) {\n+\t\t\t\t\tnodes.add(\n \t\t\t\t\t\trelBuilder.alias(\n-\t\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n-\t\t\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n+\t\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t} else {\n+\t\t\t\t\tRexBuilder rexBuilder = aggregate.getCluster().getRexBuilder();\n+\t\t\t\t\t// merge the filter of the distinct aggregate call itself.\n+\t\t\t\t\tnodes.add(relBuilder.alias(", "originalCommit": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a1a1050925ee174aafd73f365bba300e194d95f1", "url": "https://github.com/apache/flink/commit/a1a1050925ee174aafd73f365bba300e194d95f1", "message": "fix comments.", "committedDate": "2020-01-07T08:45:54Z", "type": "commit"}]}