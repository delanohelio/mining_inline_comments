{"pr_number": 10766, "pr_title": "[FLINK-15478][table-planner-blink] Fix FROM_BASE64 code gen result type", "pr_createdAt": "2020-01-05T12:37:37Z", "pr_url": "https://github.com/apache/flink/pull/10766", "timeline": [{"oid": "c5e4ad343ca857112ee41b5b166c0a77186dfb78", "url": "https://github.com/apache/flink/commit/c5e4ad343ca857112ee41b5b166c0a77186dfb78", "message": "[FLINK-15478][table-planner-blink] Fix FROM_BASE64 code gen result type", "committedDate": "2020-01-05T12:32:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE0OTgyMA==", "url": "https://github.com/apache/flink/pull/10766#discussion_r363149820", "bodyText": "Can you add test in ScalarFunctionsTest.testFromBase64 instead of it case?\nMaybe you can add a nested function call to verify this.", "author": "JingsongLi", "createdAt": "2020-01-06T03:47:10Z", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/CalcITCase.scala", "diffHunk": "@@ -260,4 +260,17 @@ class CalcITCase extends StreamingTestBase {\n     val expected = List(\"2,2,Hello\", \"3,2,Hello world\")\n     assertEquals(expected.sorted, sink.getAppendResults.sorted)\n   }\n+\n+  @Test\n+  def testFromBase64(): Unit = {", "originalCommit": "c5e4ad343ca857112ee41b5b166c0a77186dfb78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE1NzY2NA==", "url": "https://github.com/apache/flink/pull/10766#discussion_r363157664", "bodyText": "It's a good idea. Done.", "author": "libenchao", "createdAt": "2020-01-06T04:50:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE0OTgyMA=="}], "type": "inlineReview"}, {"oid": "987d0db7ac663d1d0690954c902033db3b2c4d1c", "url": "https://github.com/apache/flink/commit/987d0db7ac663d1d0690954c902033db3b2c4d1c", "message": "Add test for FROM_BASE64 in ScalarFunctionsTest", "committedDate": "2020-01-06T04:49:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MjI5Mw==", "url": "https://github.com/apache/flink/pull/10766#discussion_r363162293", "bodyText": "We can not use new String directly, because we don't know the default coder must be UTF-8.\nMaybe we can use BinaryString.fromBytes?", "author": "JingsongLi", "createdAt": "2020-01-06T05:26:10Z", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java", "diffHunk": "@@ -1063,8 +1063,8 @@ public static String toBase64(byte[] bytes){\n \t\treturn Base64.getEncoder().encodeToString(bytes);\n \t}\n \n-\tpublic static byte[] fromBase64(BinaryString bs){\n-\t\treturn Base64.getDecoder().decode(bs.getBytes());\n+\tpublic static String fromBase64(BinaryString bs){\n+\t\treturn new String(Base64.getDecoder().decode(bs.getBytes()));", "originalCommit": "987d0db7ac663d1d0690954c902033db3b2c4d1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4MzI2Ng==", "url": "https://github.com/apache/flink/pull/10766#discussion_r363183266", "bodyText": "Do you mean we return BinaryString for fromBase64, or just like BinaryString.fromBytes(...).toString() ?\nOr we can make it explicit UTF8 like CAST in ScalarOperatorGens:L942 ?", "author": "libenchao", "createdAt": "2020-01-06T07:28:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MjI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4NjE1NA==", "url": "https://github.com/apache/flink/pull/10766#discussion_r363186154", "bodyText": "Yes, Using BinaryString is better.", "author": "JingsongLi", "createdAt": "2020-01-06T07:42:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MjI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI2MDczNw==", "url": "https://github.com/apache/flink/pull/10766#discussion_r363260737", "bodyText": "Good idea. Done.", "author": "libenchao", "createdAt": "2020-01-06T11:42:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MjI5Mw=="}], "type": "inlineReview"}, {"oid": "022559152807fb01b9eceb066071486cc1a86064", "url": "https://github.com/apache/flink/commit/022559152807fb01b9eceb066071486cc1a86064", "message": "Return BinaryString from fromBase64", "committedDate": "2020-01-06T11:41:51Z", "type": "commit"}]}