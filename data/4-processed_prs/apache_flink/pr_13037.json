{"pr_number": 13037, "pr_title": "[FLINK-18756][table-api] Support IF NOT EXISTS for CREATE TABLE statement", "pr_createdAt": "2020-07-31T10:07:31Z", "pr_url": "https://github.com/apache/flink/pull/13037", "timeline": [{"oid": "00568a9ee6d18beaffeafb6462f9e33924e3cae6", "url": "https://github.com/apache/flink/commit/00568a9ee6d18beaffeafb6462f9e33924e3cae6", "message": "[FLINK-18756][table-api] Support IF NOT EXISTS for CREATE TABLE statement", "committedDate": "2020-07-31T09:56:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzMDgyNA==", "url": "https://github.com/apache/flink/pull/13037#discussion_r463530824", "bodyText": "We can use IfNotExistsOpt parse block directly.", "author": "danny0405", "createdAt": "2020-07-31T10:23:36Z", "path": "flink-table/flink-sql-parser/src/main/codegen/includes/parserImpls.ftl", "diffHunk": "@@ -735,6 +736,11 @@ SqlCreate SqlCreateTable(Span s, boolean replace, boolean isTemporary) :\n {\n     <TABLE>\n \n+    [\n+        LOOKAHEAD(3)\n+        <IF> <NOT> <EXISTS> { ifNotExists = true; }", "originalCommit": "00568a9ee6d18beaffeafb6462f9e33924e3cae6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzMTIwMg==", "url": "https://github.com/apache/flink/pull/13037#discussion_r463531202", "bodyText": "The ALTER TABLE tbl1 SET is not necessary, we can merge the test testExecuteSqlWithCreateTableIfNotExistsTwice into this one.", "author": "danny0405", "createdAt": "2020-07-31T10:24:31Z", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/api/TableEnvironmentTest.scala", "diffHunk": "@@ -135,6 +135,82 @@ class TableEnvironmentTest {\n       .tableExists(ObjectPath.fromString(s\"${tableEnv.getCurrentDatabase}.tbl1\")))\n   }\n \n+  @Test\n+  def testExecuteSqlWithCreateTableAlterDropIfNotExists(): Unit = {\n+    val createTableStmt =\n+      \"\"\"\n+        |CREATE TABLE IF NOT EXISTS tbl1 (\n+        |  a bigint,\n+        |  b int,\n+        |  c varchar\n+        |) with (\n+        |  'connector' = 'COLLECTION',\n+        |  'is-bounded' = 'false'\n+        |)\n+      \"\"\".stripMargin\n+    val tableResult1 = tableEnv.executeSql(createTableStmt)\n+    assertEquals(ResultKind.SUCCESS, tableResult1.getResultKind)\n+    assertTrue(tableEnv.getCatalog(tableEnv.getCurrentCatalog).get()\n+      .tableExists(ObjectPath.fromString(s\"${tableEnv.getCurrentDatabase}.tbl1\")))\n+\n+    val tableResult2 = tableEnv.executeSql(\"ALTER TABLE tbl1 SET ('k1' = 'a', 'k2' = 'b')\")\n+    assertEquals(ResultKind.SUCCESS, tableResult2.getResultKind)\n+    assertEquals(", "originalCommit": "00568a9ee6d18beaffeafb6462f9e33924e3cae6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8eaee047bf856e5ee216d74f87fdac59aaad8bdf", "url": "https://github.com/apache/flink/commit/8eaee047bf856e5ee216d74f87fdac59aaad8bdf", "message": "address comment", "committedDate": "2020-07-31T10:35:33Z", "type": "commit"}, {"oid": "9b4437648980a3b76a297dc8720d41a4b35dbb69", "url": "https://github.com/apache/flink/commit/9b4437648980a3b76a297dc8720d41a4b35dbb69", "message": "add SQL CLI test", "committedDate": "2020-08-03T07:13:04Z", "type": "commit"}]}