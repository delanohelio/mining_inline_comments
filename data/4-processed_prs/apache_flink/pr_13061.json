{"pr_number": 13061, "pr_title": "[FLINK-18764][python] Add DataStream class and support from_collectio\u2026", "pr_createdAt": "2020-08-05T02:01:41Z", "pr_url": "https://github.com/apache/flink/pull/13061", "timeline": [{"oid": "8ccc4bad17d568058446ad6816a6d181f090ecf0", "url": "https://github.com/apache/flink/commit/8ccc4bad17d568058446ad6816a6d181f090ecf0", "message": "[FLINK-18764][python] Add DataStream class and support from_collection() in StreamExecutionEnvironment.", "committedDate": "2020-08-05T01:56:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzMTgxNA==", "url": "https://github.com/apache/flink/pull/13061#discussion_r465431814", "bodyText": "Please be careful about these unnecessary changes.", "author": "hequn8128", "createdAt": "2020-08-05T02:15:39Z", "path": "flink-python/pyflink/datastream/tests/test_stream_execution_environment.py", "diffHunk": "@@ -22,9 +22,12 @@\n \n import unittest\n \n+", "originalCommit": "8ccc4bad17d568058446ad6816a6d181f090ecf0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ0NDYwNA==", "url": "https://github.com/apache/flink/pull/13061#discussion_r465444604", "bodyText": "Thank you, I will pay more attention to it.", "author": "shuiqiangchen", "createdAt": "2020-08-05T03:05:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzMTgxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzNDgyNQ==", "url": "https://github.com/apache/flink/pull/13061#discussion_r465434825", "bodyText": "There are some problems with the design:\n\nwe need to pass java datastream object explicitly which should be avoided.\nwe need to specify True false manually. I think we can infer the true false from the input datastream, i.e., set true when output_type is PickledBytesTypeInfo.\n\nThe code may looks like:\ncollect_util = DataStreamCollectUtil()\ncollect_util.collect(ds)\nresults = collect_util.results()", "author": "hequn8128", "createdAt": "2020-08-05T02:27:28Z", "path": "flink-python/pyflink/datastream/tests/test_stream_execution_environment.py", "diffHunk": "@@ -211,3 +214,31 @@ def test_execute(self):\n         self.assertEqual(len(execution_result.get_all_accumulator_results()), 0)\n         self.assertIsNone(execution_result.get_accumulator_result('accumulator'))\n         self.assertIsNotNone(str(execution_result))\n+\n+    def test_from_collection_without_data_types(self):\n+        ds = self.env.from_collection([(1, 'Hi', 'Hello'), (2, 'Hello', 'Hi')])\n+        test_sink = DataStreamTestCollectSink(True)\n+        ds._j_data_stream.addSink(test_sink._j_data_stream_test_collect_sink)", "originalCommit": "8ccc4bad17d568058446ad6816a6d181f090ecf0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ0NDc5Mg==", "url": "https://github.com/apache/flink/pull/13061#discussion_r465444792", "bodyText": "Yes, there might be some spaces for improvements.", "author": "shuiqiangchen", "createdAt": "2020-08-05T03:06:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzNDgyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzNTM4NQ==", "url": "https://github.com/apache/flink/pull/13061#discussion_r465435385", "bodyText": "Refactor the class according to the comments above.", "author": "hequn8128", "createdAt": "2020-08-05T02:29:40Z", "path": "flink-python/pyflink/datastream/tests/test_util.py", "diffHunk": "@@ -0,0 +1,45 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+\n+import pickle\n+\n+from pyflink.java_gateway import get_gateway\n+\n+\n+class DataStreamTestCollectSink(object):", "originalCommit": "8ccc4bad17d568058446ad6816a6d181f090ecf0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ0NDgzOA==", "url": "https://github.com/apache/flink/pull/13061#discussion_r465444838", "bodyText": "Ok, I will do it.", "author": "shuiqiangchen", "createdAt": "2020-08-05T03:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzNTM4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzOTEzOQ==", "url": "https://github.com/apache/flink/pull/13061#discussion_r465439139", "bodyText": "Should also add tests to verify these methods.", "author": "hequn8128", "createdAt": "2020-08-05T02:43:53Z", "path": "flink-python/pyflink/datastream/data_stream.py", "diffHunk": "@@ -0,0 +1,162 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+from pyflink.common import typeinfo, ExecutionConfig\n+from pyflink.common.typeinfo import TypeInformation\n+\n+\n+class DataStream(object):\n+    \"\"\"\n+    A DataStream represents a stream of elements of the same type. A DataStream can be transformed\n+    into another DataStream by applying a transformation as for example:\n+    ::\n+        >>> DataStream.map(MapFunctionImpl())\n+        >>> DataStream.filter(FilterFunctionImpl())\n+    \"\"\"\n+\n+    def __init__(self, j_data_stream):\n+        self._j_data_stream = j_data_stream\n+\n+    def get_name(self) -> str:\n+        \"\"\"\n+        Gets the name of the current data stream. This name is used by the visualization and logging\n+        during runtime.\n+\n+        :return: Name of the stream.\n+        \"\"\"\n+        return self._j_data_stream.getName()\n+\n+    def name(self, name: str):", "originalCommit": "8ccc4bad17d568058446ad6816a6d181f090ecf0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ0NDQ1Mg==", "url": "https://github.com/apache/flink/pull/13061#discussion_r465444452", "bodyText": "Yes, I will add the corresponding tests to verify them.", "author": "shuiqiangchen", "createdAt": "2020-08-05T03:05:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzOTEzOQ=="}], "type": "inlineReview"}, {"oid": "368d8222d19ce27d3867747cad727def0ae35da1", "url": "https://github.com/apache/flink/commit/368d8222d19ce27d3867747cad727def0ae35da1", "message": "- refactor the test result collect util, add more tests for DataStream.", "committedDate": "2020-08-05T05:06:40Z", "type": "commit"}]}