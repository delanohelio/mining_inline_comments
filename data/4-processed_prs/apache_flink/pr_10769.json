{"pr_number": 10769, "pr_title": "[FLINK-15479]Override explainSource method for JDBCTableSource", "pr_createdAt": "2020-01-05T14:43:16Z", "pr_url": "https://github.com/apache/flink/pull/10769", "timeline": [{"oid": "7fe9e7e4e4b53f839656fdb2b1a1079ec4de5b68", "url": "https://github.com/apache/flink/commit/7fe9e7e4e4b53f839656fdb2b1a1079ec4de5b68", "message": "[FLINK-15479]override explainSource method for JDBCTableSource", "committedDate": "2020-01-05T14:40:36Z", "type": "commit"}, {"oid": "78085a61e23ddd68f8546fb73ce6f639d98f6e42", "url": "https://github.com/apache/flink/commit/78085a61e23ddd68f8546fb73ce6f639d98f6e42", "message": "[FLINK-15479]add jdbc project push down test", "committedDate": "2020-01-06T07:43:51Z", "type": "commit"}, {"oid": "9f9c59090ca6b17d95441dd5d1b4c86be6c01bbf", "url": "https://github.com/apache/flink/commit/9f9c59090ca6b17d95441dd5d1b4c86be6c01bbf", "message": "[FLINK-15479]fix code style fail", "committedDate": "2020-01-06T11:30:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NTUxOA==", "url": "https://github.com/apache/flink/pull/10769#discussion_r364185518", "bodyText": "I think we should add an integreation test to verify the JDBC source can work when project is pushed down.", "author": "wuchong", "createdAt": "2020-01-08T11:28:07Z", "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/JDBCTableSourceSinkFactoryTest.java", "diffHunk": "@@ -182,6 +184,12 @@ public void testJDBCWithFilter() {\n \t\tassertEquals(projectedFields.get(\"aaa\"), DataTypes.INT());\n \t\tassertNull(projectedFields.get(\"bbb\"));\n \t\tassertEquals(projectedFields.get(\"ccc\"), DataTypes.DOUBLE());\n+\n+\t\t// test jdbc table source description\n+\t\tList<String> fieldNames = ((RowType) actual.getProducedDataType().getLogicalType()).getFieldNames();\n+\t\tString expectedSourceDescription = actual.getClass().getSimpleName()\n+\t\t\t+ \"(\" + String.join(\", \", fieldNames.stream().toArray(String[]::new)) + \")\";", "originalCommit": "9f9c59090ca6b17d95441dd5d1b4c86be6c01bbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUzNjcyOA==", "url": "https://github.com/apache/flink/pull/10769#discussion_r364536728", "bodyText": "@wuchong Good idea. I have updated.", "author": "wangxlong", "createdAt": "2020-01-09T02:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NTUxOA=="}], "type": "inlineReview"}, {"oid": "ea00615b2fcd2ad6fe9a1c03f9ba334fc23e8ddf", "url": "https://github.com/apache/flink/commit/ea00615b2fcd2ad6fe9a1c03f9ba334fc23e8ddf", "message": "[FLINK-15479]Add integration test for JDBCTableSource", "committedDate": "2020-01-09T02:35:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEzNjk3Mg==", "url": "https://github.com/apache/flink/pull/10769#discussion_r366136972", "bodyText": "remove empty line.", "author": "wuchong", "createdAt": "2020-01-14T03:22:52Z", "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/JDBCTableSourceITCase.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.api.java.io.jdbc;\n+\n+import org.apache.flink.streaming.api.datastream.DataStream;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+import org.apache.flink.table.api.Table;\n+import org.apache.flink.table.api.java.StreamTableEnvironment;\n+import org.apache.flink.table.runtime.utils.StreamITCase;\n+import org.apache.flink.types.Row;\n+\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * IT case for {@link JDBCTableSource}.\n+ */\n+", "originalCommit": "ea00615b2fcd2ad6fe9a1c03f9ba334fc23e8ddf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "14cb254f332468bbb4e8eafc8b1304ee91ec700d", "url": "https://github.com/apache/flink/commit/14cb254f332468bbb4e8eafc8b1304ee91ec700d", "message": "[FLINK-15479][CONNECTOR-JDBC]use blink planner and ddl in JDBCTableSourceITCase", "committedDate": "2020-01-14T09:42:32Z", "type": "commit"}, {"oid": "86a1280f8f7bda8de006c3da514dbf28a18818d4", "url": "https://github.com/apache/flink/commit/86a1280f8f7bda8de006c3da514dbf28a18818d4", "message": "[FLINK-15479][CONNECTOR-JDBC]delete useless import", "committedDate": "2020-01-14T09:45:17Z", "type": "commit"}, {"oid": "4e1d0a854d224d253d452ef4188ad4ff65045b39", "url": "https://github.com/apache/flink/commit/4e1d0a854d224d253d452ef4188ad4ff65045b39", "message": "[FLINK-15479][CONNECTOR-JDBC]fix checkstyle failed", "committedDate": "2020-01-14T11:35:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyOTMyMg==", "url": "https://github.com/apache/flink/pull/10769#discussion_r366329322", "bodyText": "Please use @BeforeClass instead of static code block.", "author": "wuchong", "createdAt": "2020-01-14T13:12:53Z", "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/JDBCTableSourceITCase.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.api.java.io.jdbc;\n+\n+import org.apache.flink.streaming.api.datastream.DataStream;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+import org.apache.flink.table.api.EnvironmentSettings;\n+import org.apache.flink.table.api.Table;\n+import org.apache.flink.table.api.java.StreamTableEnvironment;\n+import org.apache.flink.table.runtime.utils.StreamITCase;\n+import org.apache.flink.types.Row;\n+\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * IT case for {@link JDBCTableSource}.\n+ */\n+public class JDBCTableSourceITCase extends JDBCTestBase {\n+\n+\tprivate static final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\tprivate static final EnvironmentSettings bsSettings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build();\n+\tprivate static final StreamTableEnvironment tEnv = StreamTableEnvironment.create(env, bsSettings);\n+\n+\tstatic final String TABLE_SOURCE_SQL = \"CREATE TABLE books (\" +\n+\t\t\" id int, \" +\n+\t\t\" title varchar, \" +\n+\t\t\" author varchar, \" +\n+\t\t\" price double, \" +\n+\t\t\" qty int \" +\n+\t\t\") with (\" +\n+\t\t\" 'connector.type' = 'jdbc', \" +\n+\t\t\" 'connector.url' = 'jdbc:derby:memory:ebookshop', \" +\n+\t\t\" 'connector.table' = 'books', \" +\n+\t\t\" 'connector.driver' = 'org.apache.derby.jdbc.EmbeddedDriver' \" +\n+\t\t\")\";\n+\n+\tstatic {", "originalCommit": "4e1d0a854d224d253d452ef4188ad4ff65045b39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3MTA1NQ==", "url": "https://github.com/apache/flink/pull/10769#discussion_r366371055", "bodyText": "Thanks, Done.", "author": "wangxlong", "createdAt": "2020-01-14T14:33:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyOTMyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyOTkxNQ==", "url": "https://github.com/apache/flink/pull/10769#discussion_r366329915", "bodyText": "Can we set the scope only for test?", "author": "wuchong", "createdAt": "2020-01-14T13:14:11Z", "path": "flink-connectors/flink-jdbc/pom.xml", "diffHunk": "@@ -54,6 +54,14 @@ under the License.\n \t\t\t<optional>true</optional>\n \t\t</dependency>\n \n+\t\t<dependency>\n+\t\t\t<groupId>org.apache.flink</groupId>\n+\t\t\t<artifactId>flink-table-planner-blink_${scala.binary.version}</artifactId>\n+\t\t\t<version>${project.version}</version>\n+\t\t\t<scope>provided</scope>", "originalCommit": "4e1d0a854d224d253d452ef4188ad4ff65045b39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3MDg3OQ==", "url": "https://github.com/apache/flink/pull/10769#discussion_r366370879", "bodyText": "Yes, It is ok to set scope  as test. But I don't know why set provide in old planner before.", "author": "wangxlong", "createdAt": "2020-01-14T14:32:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyOTkxNQ=="}], "type": "inlineReview"}, {"oid": "7d5e177e31e0509178ac60e795178b529d04a273", "url": "https://github.com/apache/flink/commit/7d5e177e31e0509178ac60e795178b529d04a273", "message": "[FLINK-15479][CONNECTOR-JDBC] change static block to beforeclass", "committedDate": "2020-01-14T14:31:07Z", "type": "commit"}]}