{"pr_number": 13027, "pr_title": "[FLINK-16245] Decoupling user classloader from context classloader. ", "pr_createdAt": "2020-07-30T08:20:03Z", "pr_url": "https://github.com/apache/flink/pull/13027", "timeline": [{"oid": "6447ae8a1f8c9690035f01fa08f75a9bd35bb5a7", "url": "https://github.com/apache/flink/commit/6447ae8a1f8c9690035f01fa08f75a9bd35bb5a7", "message": "[FLINK-16245][runtime] Decouple user from context classloader\n\nAllows user classloader can be unloaded even if a reference on the context classloader outlives the user code.", "committedDate": "2020-07-30T13:32:44Z", "type": "commit"}, {"oid": "4a85022a179f2d972520f5a478c40153ce317920", "url": "https://github.com/apache/flink/commit/4a85022a179f2d972520f5a478c40153ce317920", "message": "[FLINK-16245][table] Close user classloader", "committedDate": "2020-07-30T13:32:44Z", "type": "commit"}, {"oid": "47ea974f8307084c080c6d343bf7b22296ed8b44", "url": "https://github.com/apache/flink/commit/47ea974f8307084c080c6d343bf7b22296ed8b44", "message": "[FLINK-16245][tests] Adjust BatchFineGrainedRecoveryITCase\n\nBecause the classloader is now closed when the task fails the UDF only has access to the bootstrap classloader, which doesn't contain our own test classes.", "committedDate": "2020-07-30T13:32:44Z", "type": "commit"}, {"oid": "47ea974f8307084c080c6d343bf7b22296ed8b44", "url": "https://github.com/apache/flink/commit/47ea974f8307084c080c6d343bf7b22296ed8b44", "message": "[FLINK-16245][tests] Adjust BatchFineGrainedRecoveryITCase\n\nBecause the classloader is now closed when the task fails the UDF only has access to the bootstrap classloader, which doesn't contain our own test classes.", "committedDate": "2020-07-30T13:32:44Z", "type": "forcePushed"}, {"oid": "cccf1bd4390323e70e998f819975fa9c29e0e4e5", "url": "https://github.com/apache/flink/commit/cccf1bd4390323e70e998f819975fa9c29e0e4e5", "message": "[FLINK-16917][orc] Workaround for classloader leak in OrcFile.\n\nSee https://issues.apache.org/jira/browse/ORC-653\nOrcFile#getStaticMemoryManager caches initial configuration and leaks classloader in it. Thus, new Flink jobs use the classloader of the first job implicitly.\n\nBy adding ThreadLocalClassLoaderConfiguration, which forces the use of thread-local classloader over the initial classloader, Flink jobs use the appropriate classloader on higher runtime costs (no caches).\nThis commit should be reverted, once the bug in ORC is fixed.", "committedDate": "2020-08-05T07:28:13Z", "type": "commit"}, {"oid": "cccf1bd4390323e70e998f819975fa9c29e0e4e5", "url": "https://github.com/apache/flink/commit/cccf1bd4390323e70e998f819975fa9c29e0e4e5", "message": "[FLINK-16917][orc] Workaround for classloader leak in OrcFile.\n\nSee https://issues.apache.org/jira/browse/ORC-653\nOrcFile#getStaticMemoryManager caches initial configuration and leaks classloader in it. Thus, new Flink jobs use the classloader of the first job implicitly.\n\nBy adding ThreadLocalClassLoaderConfiguration, which forces the use of thread-local classloader over the initial classloader, Flink jobs use the appropriate classloader on higher runtime costs (no caches).\nThis commit should be reverted, once the bug in ORC is fixed.", "committedDate": "2020-08-05T07:28:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2ODM5Ng==", "url": "https://github.com/apache/flink/pull/13027#discussion_r466868396", "bodyText": "If we were to use a normal configuration, what would happen? Subsequent jobs would not be able to run?", "author": "zentol", "createdAt": "2020-08-07T07:25:03Z", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/HiveTableSink.java", "diffHunk": "@@ -241,12 +242,14 @@ public final DataStreamSink consumeDataStream(DataStream dataStream) {\n \t\t\tformatTypes[i] = tableSchema.getFieldDataType(i).get().getLogicalType();\n \t\t}\n \t\tRowType formatType = RowType.of(formatTypes, formatNames);\n-\t\tConfiguration formatConf = new Configuration(jobConf);\n-\t\tsd.getSerdeInfo().getParameters().forEach(formatConf::set);\n \t\tif (serLib.contains(\"parquet\")) {\n+\t\t\tConfiguration formatConf = new Configuration(jobConf);\n+\t\t\tsd.getSerdeInfo().getParameters().forEach(formatConf::set);\n \t\t\treturn Optional.of(ParquetRowDataBuilder.createWriterFactory(\n \t\t\t\t\tformatType, formatConf, hiveVersion.startsWith(\"3.\")));\n \t\t} else if (serLib.contains(\"orc\")) {\n+\t\t\tConfiguration formatConf = new ThreadLocalClassLoaderConfiguration(jobConf);", "originalCommit": "cccf1bd4390323e70e998f819975fa9c29e0e4e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk5MTY1NA==", "url": "https://github.com/apache/flink/pull/13027#discussion_r466991654", "bodyText": "Yes. That makes me believe that we should probably make the safety net configurable (on by default). Or would you think we can catch up and fix leaks much quicker?", "author": "AHeise", "createdAt": "2020-08-07T11:51:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2ODM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk5NzczNA==", "url": "https://github.com/apache/flink/pull/13027#discussion_r466997734", "bodyText": "An opt-out switch is a good idea; also for cases where things don't behave as expected close to the next release, and we don't want to revert commits at that point.", "author": "zentol", "createdAt": "2020-08-07T12:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2ODM5Ng=="}], "type": "inlineReview"}, {"oid": "30c7fa20d57633b62a3e28ddf4256193e6439ec2", "url": "https://github.com/apache/flink/commit/30c7fa20d57633b62a3e28ddf4256193e6439ec2", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option.", "committedDate": "2020-08-08T19:28:00Z", "type": "forcePushed"}, {"oid": "d98d4b17c52db1cea0fe0308b5330175c30e90da", "url": "https://github.com/apache/flink/commit/d98d4b17c52db1cea0fe0308b5330175c30e90da", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option.", "committedDate": "2020-08-10T12:26:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4MDQ1Ng==", "url": "https://github.com/apache/flink/pull/13027#discussion_r469080456", "bodyText": "we don't use underscores.", "author": "zentol", "createdAt": "2020-08-12T08:06:45Z", "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -124,6 +124,15 @@\n \t\treturn parseParentFirstLoaderPatterns(base, append);\n \t}\n \n+\t@Documentation.Section(Documentation.Sections.EXPERT_CLASS_LOADING)\n+\tpublic static final ConfigOption<Boolean> CHECK_LEAKED_CLASSLOADER = ConfigOptions\n+\t\t.key(\"classloader.check_leaked_classloader\")", "originalCommit": "d98d4b17c52db1cea0fe0308b5330175c30e90da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4MTgzMw==", "url": "https://github.com/apache/flink/pull/13027#discussion_r469081833", "bodyText": "Retrieve the key from the actual configuration object instead.", "author": "zentol", "createdAt": "2020-08-12T08:09:25Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders.java", "diffHunk": "@@ -136,7 +150,10 @@ public void close() {\n \n \t\tprivate FlinkUserCodeClassLoader ensureInner() {\n \t\t\tif (inner == null) {\n-\t\t\t\tthrow new IllegalStateException(\"Trying to access closed classloader\");\n+\t\t\t\tthrow new IllegalStateException(\"Trying to access closed classloader. Please check if you store \" +\n+\t\t\t\t\t\"classloaders directly or indirectly in static fields. If the stacktrace suggests that the leak \" +\n+\t\t\t\t\t\"occurs in a third party library and cannot be fixed immediately, you can disable this check \" +\n+\t\t\t\t\t\"with the configuration 'classloader.check_leaked_classloader'.\");", "originalCommit": "d98d4b17c52db1cea0fe0308b5330175c30e90da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwNDQzMQ==", "url": "https://github.com/apache/flink/pull/13027#discussion_r469104431", "bodyText": "Fails attempts at loading classes if the user classloader of a job is used after it has terminated.\nThis is usually caused by the classloader being leaked by lingering threads or misbehaving libraries, which may also result in the classloader being used by other jobs.\nThis check should only be disabled if such a leak prevents further jobs from running.", "author": "zentol", "createdAt": "2020-08-12T08:47:23Z", "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -124,6 +124,15 @@\n \t\treturn parseParentFirstLoaderPatterns(base, append);\n \t}\n \n+\t@Documentation.Section(Documentation.Sections.EXPERT_CLASS_LOADING)\n+\tpublic static final ConfigOption<Boolean> CHECK_LEAKED_CLASSLOADER = ConfigOptions\n+\t\t.key(\"classloader.check_leaked_classloader\")\n+\t\t.booleanType()\n+\t\t.defaultValue(true)\n+\t\t.withDescription(\"Fails if a user classloader is used in another job after a job has been finished. This \" +\n+\t\t\t\"check should only be disabled if the class leak occurs in an external library cannot be fixed \" +\n+\t\t\t\"immediately.\");", "originalCommit": "d98d4b17c52db1cea0fe0308b5330175c30e90da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "74857e7cfe766ea0ba163e56a41251ca3fa0b4cf", "url": "https://github.com/apache/flink/commit/74857e7cfe766ea0ba163e56a41251ca3fa0b4cf", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option.", "committedDate": "2020-08-13T07:15:20Z", "type": "commit"}, {"oid": "74857e7cfe766ea0ba163e56a41251ca3fa0b4cf", "url": "https://github.com/apache/flink/commit/74857e7cfe766ea0ba163e56a41251ca3fa0b4cf", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option.", "committedDate": "2020-08-13T07:15:20Z", "type": "forcePushed"}]}