{"pr_number": 11004, "pr_title": "[FLINK-15143][docs] Add new memory configuration guide before FLIP-49", "pr_createdAt": "2020-02-03T15:03:01Z", "pr_url": "https://github.com/apache/flink/pull/11004", "timeline": [{"oid": "87c6587a3d54528a8ac55a4c3914195a43e6bc43", "url": "https://github.com/apache/flink/commit/87c6587a3d54528a8ac55a4c3914195a43e6bc43", "message": "[FLINK-15143][docs] Add new memory configuration guide before FLIP-49", "committedDate": "2020-02-03T17:27:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5MTM1OA==", "url": "https://github.com/apache/flink/pull/11004#discussion_r374491358", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min).\n          \n          \n            \n            but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).", "author": "xintongsong", "createdAt": "2020-02-04T06:19:22Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min).", "originalCommit": "87c6587a3d54528a8ac55a4c3914195a43e6bc43", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5MzU0Ng==", "url": "https://github.com/apache/flink/pull/11004#discussion_r374493546", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `OutOfMemoryException`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,\n          \n          \n            \n            `OutOfMemoryError`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,", "author": "xintongsong", "createdAt": "2020-02-04T06:28:53Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n+`min` is [taskmanager.network.memory.min](config.html#taskmanager-network-memory-min) and\n+`max` is [taskmanager.network.memory.max](config.html#taskmanager-network-memory-max).\n+\n+See also [setting memory fractions](config.html#setting-memory-fractions).\n+\n+If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed\n+to be set explicitly without fraction as:\n+```\n+network = legacy buffers x page\n+```\n+where `legacy buffers` are `taskmanager.network.numberOfBuffers` and `page` is\n+[taskmanager.memory.segment-size](config.html#taskmanager-memory-segment-size).\n+See also [setting number of network buffers directly](config.html#setting-the-number-of-network-buffers-directly).\n+\n+## Managed memory\n+\n+The *managed memory* is used for *batch* jobs. It helps Flink to run the batch operators efficiently and prevents\n+`OutOfMemoryException`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,", "originalCommit": "87c6587a3d54528a8ac55a4c3914195a43e6bc43", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5NDMzOA==", "url": "https://github.com/apache/flink/pull/11004#discussion_r374494338", "bodyText": "Isn't this always set by Flink?", "author": "xintongsong", "createdAt": "2020-02-04T06:32:11Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n+`min` is [taskmanager.network.memory.min](config.html#taskmanager-network-memory-min) and\n+`max` is [taskmanager.network.memory.max](config.html#taskmanager-network-memory-max).\n+\n+See also [setting memory fractions](config.html#setting-memory-fractions).\n+\n+If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed\n+to be set explicitly without fraction as:\n+```\n+network = legacy buffers x page\n+```\n+where `legacy buffers` are `taskmanager.network.numberOfBuffers` and `page` is\n+[taskmanager.memory.segment-size](config.html#taskmanager-memory-segment-size).\n+See also [setting number of network buffers directly](config.html#setting-the-number-of-network-buffers-directly).\n+\n+## Managed memory\n+\n+The *managed memory* is used for *batch* jobs. It helps Flink to run the batch operators efficiently and prevents\n+`OutOfMemoryException`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,\n+it utilizes disk space. Using *managed memory*, some operations can be performed directly on the raw data without having\n+to deserialize the data to convert it into Java objects. All in all, *managed memory* improves the robustness and speed of the system.\n+\n+The *managed memory* can be either part of JVM heap (on-heap) or off-heap, it is on-heap by default\n+([taskmanager.memory.off-heap](config.html#taskmanager-memory-off-heap), default: `false`).\n+\n+The managed memory size can be either set **explicitly** by the [taskmanager.memory.size](config.html#taskmanager-memory-size)\n+or if not set explicitly then it is defined as a **fraction** ([taskmanager.memory.fraction](config.html#taskmanager-memory-fraction))\n+of [total memory](#total-memory) minus [network memory](#network-buffers) and calculated the following way:\n+```\n+managed = (total - network) x fraction\n+```\n+\n+## JVM heap\n+\n+The heap is set by JVM command line arguments (`-Xmx` and `-Xms`) to:\n+```\n+heap = total - managed (if off-heap) - network\n+```\n+See also [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+\n+## Adjustments inside Flink process\n+\n+When the Flink process has been started, the size of [managed memory](#managed-memory) and [network buffers](#network-buffers),\n+eventually used in the process, is calculated in a bit different way if the size is defined as a fraction. The values\n+are derived from the available JVM heap. They should be close to the values calculated before starting the process but can differ.\n+\n+The **JVM heap** is estimated in two ways for further computations:\n+* **Max heap**: if `-Xmx` is set then it is its value else \u00bc of physical machine memory estimated by JVM", "originalCommit": "87c6587a3d54528a8ac55a4c3914195a43e6bc43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxMTc5Mw==", "url": "https://github.com/apache/flink/pull/11004#discussion_r374611793", "bodyText": "but not in local execution", "author": "azagrebin", "createdAt": "2020-02-04T11:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5NDMzOA=="}], "type": "inlineReview"}, {"oid": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "url": "https://github.com/apache/flink/commit/b0c744638930384fbd9ca1d135c6b7efa6e4224c", "message": "[FLINK-15143][docs] Add new memory configuration guide before FLIP-49", "committedDate": "2020-02-04T11:16:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDU1Ng==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760556", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n          \n          \n            \n            [Managed memory](#managed-memory) can be either part of the JVM heap or direct off-heap memory.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:07:31Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDY3Ng==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760676", "bodyText": "nit: the bottom line of the enclosing box seems to be missing for me.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:09:35Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDc3Mw==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760773", "bodyText": "There seems to be some unused space in the figure. I think we can remove it to save some space.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:11:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDY3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5MDU4Ng==", "url": "https://github.com/apache/flink/pull/11004#discussion_r377190586", "bodyText": "The figure was just cut in a wrong way", "author": "azagrebin", "createdAt": "2020-02-10T16:58:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDY3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDgwOA==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760808", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n          \n          \n            \n            When the Flink JVM process is started in [standalone mode](deployment/cluster_setup.html),", "author": "tillrohrmann", "createdAt": "2020-02-09T07:12:17Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDgxMg==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760812", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n          \n          \n            \n            on [Yarn](deployment/yarn_setup.html) or on [Mesos](deployment/mesos.html), the *total memory* is defined by", "author": "tillrohrmann", "createdAt": "2020-02-09T07:12:29Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDg0Mg==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760842", "bodyText": "Please stay consistent in the way how you spell \"containerized/containerised\".", "author": "tillrohrmann", "createdAt": "2020-02-09T07:13:20Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDkwMg==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760902", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n          \n          \n            \n            In case of a containerised deployment, the [total memory](#total-memory) is reduced by the *cut-off*.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:14:18Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDkxOA==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760918", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n          \n          \n            \n            The *cut-off* is the fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)", "author": "tillrohrmann", "createdAt": "2020-02-09T07:14:47Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDkyNw==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760927", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n          \n          \n            \n            but always greater or equal than its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).", "author": "tillrohrmann", "createdAt": "2020-02-09T07:15:00Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDk1Mg==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760952", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n          \n          \n            \n            e.g. RocksDB native memory, JVM overhead, etc. It is also a safety margin to prevent the container from exceeding", "author": "tillrohrmann", "createdAt": "2020-02-09T07:15:38Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MDk4NA==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376760984", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n          \n          \n            \n            The cut-off is introduced to accommodate for other types of consumed memory which is not accounted for in this memory model,", "author": "tillrohrmann", "createdAt": "2020-02-09T07:16:10Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTAyOQ==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761029", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n          \n          \n            \n            The network memory is used for buffering records while shuffling them between operator tasks and their executors over the network.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:17:04Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTA0OQ==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761049", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n          \n          \n            \n            where `fraction` is [`taskmanager.network.memory.fraction`](config.html#taskmanager-network-memory-fraction),", "author": "tillrohrmann", "createdAt": "2020-02-09T07:17:48Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTA1OQ==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761059", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n          \n          \n            \n            which is a fraction ([`containerized.heap-cutoff-ratio`](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)", "author": "tillrohrmann", "createdAt": "2020-02-09T07:18:03Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTA5Ng==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761096", "bodyText": "It seems that we don't treat config keys consistently. On other pages we use backticks for their formatting.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:18:38Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTExMg==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761112", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed\n          \n          \n            \n            If the above mentioned options are not set but the legacy option is used then the *network memory* is assumed", "author": "tillrohrmann", "createdAt": "2020-02-09T07:19:03Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n+`min` is [taskmanager.network.memory.min](config.html#taskmanager-network-memory-min) and\n+`max` is [taskmanager.network.memory.max](config.html#taskmanager-network-memory-max).\n+\n+See also [setting memory fractions](config.html#setting-memory-fractions).\n+\n+If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTEzNw==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761137", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `OutOfMemoryError`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,\n          \n          \n            \n            `OutOfMemoryErrors` because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,", "author": "tillrohrmann", "createdAt": "2020-02-09T07:20:06Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n+`min` is [taskmanager.network.memory.min](config.html#taskmanager-network-memory-min) and\n+`max` is [taskmanager.network.memory.max](config.html#taskmanager-network-memory-max).\n+\n+See also [setting memory fractions](config.html#setting-memory-fractions).\n+\n+If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed\n+to be set explicitly without fraction as:\n+```\n+network = legacy buffers x page\n+```\n+where `legacy buffers` are `taskmanager.network.numberOfBuffers` and `page` is\n+[taskmanager.memory.segment-size](config.html#taskmanager-memory-segment-size).\n+See also [setting number of network buffers directly](config.html#setting-the-number-of-network-buffers-directly).\n+\n+## Managed memory\n+\n+The *managed memory* is used for *batch* jobs. It helps Flink to run the batch operators efficiently and prevents\n+`OutOfMemoryError`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTI4Mw==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761283", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The *managed memory* can be either part of JVM heap (on-heap) or off-heap, it is on-heap by default\n          \n          \n            \n            The *managed memory* can be either part of the JVM heap (on-heap) or off-heap. It is on-heap by default", "author": "tillrohrmann", "createdAt": "2020-02-09T07:22:52Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n+`min` is [taskmanager.network.memory.min](config.html#taskmanager-network-memory-min) and\n+`max` is [taskmanager.network.memory.max](config.html#taskmanager-network-memory-max).\n+\n+See also [setting memory fractions](config.html#setting-memory-fractions).\n+\n+If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed\n+to be set explicitly without fraction as:\n+```\n+network = legacy buffers x page\n+```\n+where `legacy buffers` are `taskmanager.network.numberOfBuffers` and `page` is\n+[taskmanager.memory.segment-size](config.html#taskmanager-memory-segment-size).\n+See also [setting number of network buffers directly](config.html#setting-the-number-of-network-buffers-directly).\n+\n+## Managed memory\n+\n+The *managed memory* is used for *batch* jobs. It helps Flink to run the batch operators efficiently and prevents\n+`OutOfMemoryError`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,\n+it utilizes disk space. Using *managed memory*, some operations can be performed directly on the raw data without having\n+to deserialize the data to convert it into Java objects. All in all, *managed memory* improves the robustness and speed of the system.\n+\n+The *managed memory* can be either part of JVM heap (on-heap) or off-heap, it is on-heap by default", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTMyMA==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761320", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The managed memory size can be either set **explicitly** by the [taskmanager.memory.size](config.html#taskmanager-memory-size)\n          \n          \n            \n            The managed memory size can be either set **explicitly** by [taskmanager.memory.size](config.html#taskmanager-memory-size)", "author": "tillrohrmann", "createdAt": "2020-02-09T07:23:40Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n+`min` is [taskmanager.network.memory.min](config.html#taskmanager-network-memory-min) and\n+`max` is [taskmanager.network.memory.max](config.html#taskmanager-network-memory-max).\n+\n+See also [setting memory fractions](config.html#setting-memory-fractions).\n+\n+If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed\n+to be set explicitly without fraction as:\n+```\n+network = legacy buffers x page\n+```\n+where `legacy buffers` are `taskmanager.network.numberOfBuffers` and `page` is\n+[taskmanager.memory.segment-size](config.html#taskmanager-memory-segment-size).\n+See also [setting number of network buffers directly](config.html#setting-the-number-of-network-buffers-directly).\n+\n+## Managed memory\n+\n+The *managed memory* is used for *batch* jobs. It helps Flink to run the batch operators efficiently and prevents\n+`OutOfMemoryError`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,\n+it utilizes disk space. Using *managed memory*, some operations can be performed directly on the raw data without having\n+to deserialize the data to convert it into Java objects. All in all, *managed memory* improves the robustness and speed of the system.\n+\n+The *managed memory* can be either part of JVM heap (on-heap) or off-heap, it is on-heap by default\n+([taskmanager.memory.off-heap](config.html#taskmanager-memory-off-heap), default: `false`).\n+\n+The managed memory size can be either set **explicitly** by the [taskmanager.memory.size](config.html#taskmanager-memory-size)", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTM4MA==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761380", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            are derived from the available JVM heap. They should be close to the values calculated before starting the process but can differ.\n          \n          \n            \n            are derived from the available JVM heap size. They should be close to the values calculated before starting the process but can differ.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:24:56Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n+`min` is [taskmanager.network.memory.min](config.html#taskmanager-network-memory-min) and\n+`max` is [taskmanager.network.memory.max](config.html#taskmanager-network-memory-max).\n+\n+See also [setting memory fractions](config.html#setting-memory-fractions).\n+\n+If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed\n+to be set explicitly without fraction as:\n+```\n+network = legacy buffers x page\n+```\n+where `legacy buffers` are `taskmanager.network.numberOfBuffers` and `page` is\n+[taskmanager.memory.segment-size](config.html#taskmanager-memory-segment-size).\n+See also [setting number of network buffers directly](config.html#setting-the-number-of-network-buffers-directly).\n+\n+## Managed memory\n+\n+The *managed memory* is used for *batch* jobs. It helps Flink to run the batch operators efficiently and prevents\n+`OutOfMemoryError`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,\n+it utilizes disk space. Using *managed memory*, some operations can be performed directly on the raw data without having\n+to deserialize the data to convert it into Java objects. All in all, *managed memory* improves the robustness and speed of the system.\n+\n+The *managed memory* can be either part of JVM heap (on-heap) or off-heap, it is on-heap by default\n+([taskmanager.memory.off-heap](config.html#taskmanager-memory-off-heap), default: `false`).\n+\n+The managed memory size can be either set **explicitly** by the [taskmanager.memory.size](config.html#taskmanager-memory-size)\n+or if not set explicitly then it is defined as a **fraction** ([taskmanager.memory.fraction](config.html#taskmanager-memory-fraction))\n+of [total memory](#total-memory) minus [network memory](#network-buffers) and calculated the following way:\n+```\n+managed = (total - network) x fraction\n+```\n+\n+## JVM heap\n+\n+The heap is set by JVM command line arguments (`-Xmx` and `-Xms`) to:\n+```\n+heap = total - managed (if off-heap) - network\n+```\n+See also [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+\n+## Adjustments inside Flink process\n+\n+When the Flink process has been started, the size of [managed memory](#managed-memory) and [network buffers](#network-buffers),\n+eventually used in the process, is calculated in a bit different way if the size is defined as a fraction. The values\n+are derived from the available JVM heap. They should be close to the values calculated before starting the process but can differ.", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTU5Ng==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761596", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            eventually used in the process, is calculated in a bit different way if the size is defined as a fraction. The values\n          \n          \n            \n            eventually used in the process, are calculated in a slightly different way if the size is defined as a fraction. The values", "author": "tillrohrmann", "createdAt": "2020-02-09T07:29:42Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n+`min` is [taskmanager.network.memory.min](config.html#taskmanager-network-memory-min) and\n+`max` is [taskmanager.network.memory.max](config.html#taskmanager-network-memory-max).\n+\n+See also [setting memory fractions](config.html#setting-memory-fractions).\n+\n+If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed\n+to be set explicitly without fraction as:\n+```\n+network = legacy buffers x page\n+```\n+where `legacy buffers` are `taskmanager.network.numberOfBuffers` and `page` is\n+[taskmanager.memory.segment-size](config.html#taskmanager-memory-segment-size).\n+See also [setting number of network buffers directly](config.html#setting-the-number-of-network-buffers-directly).\n+\n+## Managed memory\n+\n+The *managed memory* is used for *batch* jobs. It helps Flink to run the batch operators efficiently and prevents\n+`OutOfMemoryError`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,\n+it utilizes disk space. Using *managed memory*, some operations can be performed directly on the raw data without having\n+to deserialize the data to convert it into Java objects. All in all, *managed memory* improves the robustness and speed of the system.\n+\n+The *managed memory* can be either part of JVM heap (on-heap) or off-heap, it is on-heap by default\n+([taskmanager.memory.off-heap](config.html#taskmanager-memory-off-heap), default: `false`).\n+\n+The managed memory size can be either set **explicitly** by the [taskmanager.memory.size](config.html#taskmanager-memory-size)\n+or if not set explicitly then it is defined as a **fraction** ([taskmanager.memory.fraction](config.html#taskmanager-memory-fraction))\n+of [total memory](#total-memory) minus [network memory](#network-buffers) and calculated the following way:\n+```\n+managed = (total - network) x fraction\n+```\n+\n+## JVM heap\n+\n+The heap is set by JVM command line arguments (`-Xmx` and `-Xms`) to:\n+```\n+heap = total - managed (if off-heap) - network\n+```\n+See also [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+\n+## Adjustments inside Flink process\n+\n+When the Flink process has been started, the size of [managed memory](#managed-memory) and [network buffers](#network-buffers),\n+eventually used in the process, is calculated in a bit different way if the size is defined as a fraction. The values", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MTYxNA==", "url": "https://github.com/apache/flink/pull/11004#discussion_r376761614", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * **Max heap**: if `-Xmx` is set then it is its value else \u00bc of physical machine memory estimated by JVM\n          \n          \n            \n            * **Max heap**: if `-Xmx` is set then it is its value else \u00bc of physical machine memory estimated by the JVM", "author": "tillrohrmann", "createdAt": "2020-02-09T07:30:15Z", "path": "docs/ops/mem_setup.md", "diffHunk": "@@ -0,0 +1,129 @@\n+---\n+title: \"Task Manager Memory Configuration\"\n+nav-parent_id: ops\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+See also task manager [configuration options](config.html#taskmanager).\n+\n+## Total memory\n+\n+The *total memory* in Flink consists of JVM heap, [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+[Managed memory](#managed-memory) can be either part of JVM heap or direct off-heap memory.\n+For containerised deployments, the *total memory* can additionally include a [container cut-off](#container-cut-off).\n+\n+All other memory components are computed from the *total memory* before starting the Flink process.\n+After the start, the [managed memory](#managed-memory) and [network memory](#network-buffers) are adjusted in certain cases\n+based on available JVM memory inside the process (see [Adjustments inside Flink process](#adjustments-inside-flink-process)).\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/mem_model.svg\" width=\"500px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+When the Flink JVM process is started from scripts in [standalone mode](deployment/cluster_setup.html),\n+on [Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html), the *total memory* is defined by\n+the configuration option [taskmanager.heap.size](config.html#taskmanager-heap-size-1) (or deprecated `taskmanager.heap.mb`).\n+In case of a containerized deployment ([Yarn](deployment/yarn_setup.html) or [Mesos](deployment/mesos.html)),\n+this is the size of the requested container.\n+\n+### Container cut-off\n+\n+In case of a containerised deployment, the [total memory](#total-memory) is additionally reduced by a *cut-off*\n+which is a fraction ([containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio) of the [total memory](#total-memory)\n+but always greater or equal to its minimum value ([containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min)).\n+\n+The cut-off is introduced to accommodate for other types of consumed memory, not accounted for in this memory model,\n+e.g. RocksDB native memory, JVM overhead etc. It is also a safety margin to prevent the container from exceeding\n+its memory limit and being killed by the container manager.\n+\n+## Network buffers\n+\n+This memory is used for buffering records while shuffling them between operator tasks and their executors over the network.\n+It is calculated as:\n+```\n+network = Min(max, Max(min, fraction x total)\n+```\n+where `fraction` is [taskmanager.network.memory.fraction](config.html#taskmanager-network-memory-fraction),\n+`min` is [taskmanager.network.memory.min](config.html#taskmanager-network-memory-min) and\n+`max` is [taskmanager.network.memory.max](config.html#taskmanager-network-memory-max).\n+\n+See also [setting memory fractions](config.html#setting-memory-fractions).\n+\n+If the before mentioned options are not set but the legacy option is used then the *network memory* is assumed\n+to be set explicitly without fraction as:\n+```\n+network = legacy buffers x page\n+```\n+where `legacy buffers` are `taskmanager.network.numberOfBuffers` and `page` is\n+[taskmanager.memory.segment-size](config.html#taskmanager-memory-segment-size).\n+See also [setting number of network buffers directly](config.html#setting-the-number-of-network-buffers-directly).\n+\n+## Managed memory\n+\n+The *managed memory* is used for *batch* jobs. It helps Flink to run the batch operators efficiently and prevents\n+`OutOfMemoryError`s because Flink knows how much memory it can use to execute operations. If Flink runs out of *managed memory*,\n+it utilizes disk space. Using *managed memory*, some operations can be performed directly on the raw data without having\n+to deserialize the data to convert it into Java objects. All in all, *managed memory* improves the robustness and speed of the system.\n+\n+The *managed memory* can be either part of JVM heap (on-heap) or off-heap, it is on-heap by default\n+([taskmanager.memory.off-heap](config.html#taskmanager-memory-off-heap), default: `false`).\n+\n+The managed memory size can be either set **explicitly** by the [taskmanager.memory.size](config.html#taskmanager-memory-size)\n+or if not set explicitly then it is defined as a **fraction** ([taskmanager.memory.fraction](config.html#taskmanager-memory-fraction))\n+of [total memory](#total-memory) minus [network memory](#network-buffers) and calculated the following way:\n+```\n+managed = (total - network) x fraction\n+```\n+\n+## JVM heap\n+\n+The heap is set by JVM command line arguments (`-Xmx` and `-Xms`) to:\n+```\n+heap = total - managed (if off-heap) - network\n+```\n+See also [managed memory](#managed-memory) and [network buffers](#network-buffers).\n+\n+## Adjustments inside Flink process\n+\n+When the Flink process has been started, the size of [managed memory](#managed-memory) and [network buffers](#network-buffers),\n+eventually used in the process, is calculated in a bit different way if the size is defined as a fraction. The values\n+are derived from the available JVM heap. They should be close to the values calculated before starting the process but can differ.\n+\n+The **JVM heap** is estimated in two ways for further computations:\n+* **Max heap**: if `-Xmx` is set then it is its value else \u00bc of physical machine memory estimated by JVM", "originalCommit": "b0c744638930384fbd9ca1d135c6b7efa6e4224c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "df24a9f030ea54f2f6b7c87521fe6738080c2055", "url": "https://github.com/apache/flink/commit/df24a9f030ea54f2f6b7c87521fe6738080c2055", "message": "[FLINK-15143][docs] Add new memory configuration guide before FLIP-49", "committedDate": "2020-02-10T17:05:02Z", "type": "commit"}, {"oid": "df24a9f030ea54f2f6b7c87521fe6738080c2055", "url": "https://github.com/apache/flink/commit/df24a9f030ea54f2f6b7c87521fe6738080c2055", "message": "[FLINK-15143][docs] Add new memory configuration guide before FLIP-49", "committedDate": "2020-02-10T17:05:02Z", "type": "forcePushed"}]}