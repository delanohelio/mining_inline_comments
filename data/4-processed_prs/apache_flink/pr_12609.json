{"pr_number": 12609, "pr_title": "[FLINK-17836][hive][doc] Add document for Hive dim join", "pr_createdAt": "2020-06-11T12:50:53Z", "pr_url": "https://github.com/apache/flink/pull/12609", "timeline": [{"oid": "9c109ae1c7de41fbee20707324bae19382261f4e", "url": "https://github.com/apache/flink/commit/9c109ae1c7de41fbee20707324bae19382261f4e", "message": "[FLINK-17836][hive][doc] Add document for Hive dim join", "committedDate": "2020-06-11T12:47:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5NDYzOQ==", "url": "https://github.com/apache/flink/pull/12609#discussion_r438794639", "bodyText": "I think we don't need say \"starting from\", users can look docs.", "author": "JingsongLi", "createdAt": "2020-06-11T13:44:31Z", "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow", "originalCommit": "9c109ae1c7de41fbee20707324bae19382261f4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5NjU3Mg==", "url": "https://github.com/apache/flink/pull/12609#discussion_r438796572", "bodyText": "When performing the join can be another line", "author": "JingsongLi", "createdAt": "2020-06-11T13:46:35Z", "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow\n+the [example]({{ site.baseurl }}/dev/table/streaming/temporal_tables.html#temporal-table) to find out how to join a\n+temporal table. When performing the join, the Hive table will be cached in TM memory and each record from the stream", "originalCommit": "9c109ae1c7de41fbee20707324bae19382261f4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5ODU5OA==", "url": "https://github.com/apache/flink/pull/12609#discussion_r438798598", "bodyText": "TM memory / slot > Hive table memory, you can explain this.", "author": "JingsongLi", "createdAt": "2020-06-11T13:49:00Z", "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow\n+the [example]({{ site.baseurl }}/dev/table/streaming/temporal_tables.html#temporal-table) to find out how to join a\n+temporal table. When performing the join, the Hive table will be cached in TM memory and each record from the stream\n+is looked up in the Hive table to decide whether a match is found. You don't need any extra settings to use a Hive table\n+as temporal table. But optionally, you can configure the TTL of the Hive table cache with the following\n+property. After the cache expires, the Hive table will be scanned again to load the latest data.\n+\n+<table class=\"table table-bordered\">\n+  <thead>\n+    <tr>\n+        <th class=\"text-left\" style=\"width: 20%\">Key</th>\n+        <th class=\"text-left\" style=\"width: 15%\">Default</th>\n+        <th class=\"text-left\" style=\"width: 10%\">Type</th>\n+        <th class=\"text-left\" style=\"width: 55%\">Description</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+        <td><h5>lookup.join.cache.ttl</h5></td>\n+        <td style=\"word-wrap: break-word;\">60 min</td>\n+        <td>Duration</td>\n+        <td>The cache TTL (e.g. 10min) for the build table in lookup join. By default the TTL is 60 minutes.</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+**Note**:\n+1. You need to make sure the Hive table can fit into TM memory since the whole table will be cached.", "originalCommit": "9c109ae1c7de41fbee20707324bae19382261f4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5OTg2OA==", "url": "https://github.com/apache/flink/pull/12609#discussion_r438799868", "bodyText": "You can add a note to explain, we will read all data from all partitions, we can not read latest partition.", "author": "JingsongLi", "createdAt": "2020-06-11T13:50:21Z", "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow\n+the [example]({{ site.baseurl }}/dev/table/streaming/temporal_tables.html#temporal-table) to find out how to join a\n+temporal table. When performing the join, the Hive table will be cached in TM memory and each record from the stream\n+is looked up in the Hive table to decide whether a match is found. You don't need any extra settings to use a Hive table\n+as temporal table. But optionally, you can configure the TTL of the Hive table cache with the following\n+property. After the cache expires, the Hive table will be scanned again to load the latest data.\n+\n+<table class=\"table table-bordered\">\n+  <thead>\n+    <tr>\n+        <th class=\"text-left\" style=\"width: 20%\">Key</th>\n+        <th class=\"text-left\" style=\"width: 15%\">Default</th>\n+        <th class=\"text-left\" style=\"width: 10%\">Type</th>\n+        <th class=\"text-left\" style=\"width: 55%\">Description</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+        <td><h5>lookup.join.cache.ttl</h5></td>\n+        <td style=\"word-wrap: break-word;\">60 min</td>\n+        <td>Duration</td>\n+        <td>The cache TTL (e.g. 10min) for the build table in lookup join. By default the TTL is 60 minutes.</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+**Note**:\n+1. You need to make sure the Hive table can fit into TM memory since the whole table will be cached.\n+2. You should set a relatively large value for `lookup.join.cache.ttl`. You'll probably have performance issue if\n+your Hive table needs to be updated and reloaded too frequently.", "originalCommit": "9c109ae1c7de41fbee20707324bae19382261f4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4MzYwNg==", "url": "https://github.com/apache/flink/pull/12609#discussion_r439183606", "bodyText": "I have mentioned that the whole table will be cached. And the temporal table can be either partitioned or non-partitioned. It seems to me that talking about new/old partitions here might bring more confusions.", "author": "lirui-apache", "createdAt": "2020-06-12T03:11:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5OTg2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0NjM3NA==", "url": "https://github.com/apache/flink/pull/12609#discussion_r439246374", "bodyText": "I have added some comments about this anyway, but w/o too many details.", "author": "lirui-apache", "createdAt": "2020-06-12T07:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5OTg2OA=="}], "type": "inlineReview"}, {"oid": "9a5ee683023bd609fa53ad8a49eb48892f5b6e7f", "url": "https://github.com/apache/flink/commit/9a5ee683023bd609fa53ad8a49eb48892f5b6e7f", "message": "address comments", "committedDate": "2020-06-12T07:09:09Z", "type": "commit"}, {"oid": "b8af77cd844986ae37c6054db98abc0e9619da0b", "url": "https://github.com/apache/flink/commit/b8af77cd844986ae37c6054db98abc0e9619da0b", "message": "update the zh page", "committedDate": "2020-06-12T12:52:52Z", "type": "commit"}]}