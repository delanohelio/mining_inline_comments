{"pr_number": 10999, "pr_title": "[FLINK-15143] Docs for FLIP-49 TM memory model and configuration guide", "pr_createdAt": "2020-02-03T13:30:51Z", "pr_url": "https://github.com/apache/flink/pull/10999", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzMTUwMw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374131503", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n          \n          \n            \n            The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink", "author": "tillrohrmann", "createdAt": "2020-02-03T14:27:45Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzMTk2Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374131962", "bodyText": "Inconsistent casing. Sometimes Task Executor is written with capital letters and sometimes with lower case letters. I'd suggest to stick to one way.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:28:31Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NzgyNQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374157825", "bodyText": "Here I wanted to emphasise that it is for TM not JM.  I can try to use  closer to TM.", "author": "azagrebin", "createdAt": "2020-02-03T15:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzMTk2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzMjA2NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374132064", "bodyText": "Same for \"Job Manager\"", "author": "tillrohrmann", "createdAt": "2020-02-03T14:28:44Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzMjQ5OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374132499", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n          \n          \n            \n            Check [Job Manager related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:29:27Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzMzg3Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374133872", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n          \n          \n            \n            This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).", "author": "tillrohrmann", "createdAt": "2020-02-03T14:31:59Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzNDg5Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374134896", "bodyText": "I would remove everything after the second sentence.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:33:51Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzNTY4MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374135681", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n          \n          \n            \n            <strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither", "author": "tillrohrmann", "createdAt": "2020-02-03T14:35:13Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzNTk2Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374135963", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n          \n          \n            \n            *total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:35:42Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzNzk5Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374137993", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n          \n          \n            \n            * Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size-1))", "author": "tillrohrmann", "createdAt": "2020-02-03T14:39:18Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE2MjAyNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374162024", "bodyText": "It is not highlighted as a link in the usual way then", "author": "azagrebin", "createdAt": "2020-02-03T15:19:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzNzk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY2OTI1OA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374669258", "bodyText": "offline discussion outcome: align with the rest of doc and use back-ticks\nwe can think about more readable config option links as a follow-up in the whole docs", "author": "azagrebin", "createdAt": "2020-02-04T13:29:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzNzk5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzODA2MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374138060", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n          \n          \n            \n            * Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size-1))", "author": "tillrohrmann", "createdAt": "2020-02-03T14:39:27Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzODYxOA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374138618", "bodyText": "I would use back-ticks for configuration options in the whole documentation. I won't comment this anymore from here on.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:40:28Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0MTQwOQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374141409", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n          \n          \n            \n            *Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:", "author": "tillrohrmann", "createdAt": "2020-02-03T14:45:11Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0MTY4NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374141685", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The size of managed memory can be\n          \n          \n            \n            The size of *managed memory* can be", "author": "tillrohrmann", "createdAt": "2020-02-03T14:45:38Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0MTg4Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374141883", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n          \n          \n            \n            * either configured explicitly via [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)", "author": "tillrohrmann", "createdAt": "2020-02-03T14:46:00Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0MjA5MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374142091", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n          \n          \n            \n            * or computed as a fraction of *total Flink memory* via [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)", "author": "tillrohrmann", "createdAt": "2020-02-03T14:46:24Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0MjM1Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374142356", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n          \n          \n            \n            *size* will override *fraction*, if both are set.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:46:51Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0MzM2OA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374143368", "bodyText": "I would stick to a consistent capitalization. Sometimes you write \"memory\" and then again \"Memory\" in the headings.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:48:31Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0MzkwNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374143906", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n          \n          \n            \n            The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*", "author": "tillrohrmann", "createdAt": "2020-02-03T14:49:26Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0NDMyMw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374144323", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced\n          \n          \n            \n            <strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced", "author": "tillrohrmann", "createdAt": "2020-02-03T14:50:09Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0NDU2Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374144563", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            and recommended to be changed if you are sure that Flink framework needs more memory.\n          \n          \n            \n            and only recommended to be changed if you are sure that the Flink framework needs more memory.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:50:35Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced\n+and recommended to be changed if you are sure that Flink framework needs more memory.", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0NDkyOQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374144929", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            see also [JVM Parameters](#jvm-parameters).\n          \n          \n            \n            see also [JVM parameters](#jvm-parameters).", "author": "tillrohrmann", "createdAt": "2020-02-03T14:51:13Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced\n+and recommended to be changed if you are sure that Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit controlled by JVM,\n+see also [JVM Parameters](#jvm-parameters).", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0NjEzNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374146134", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit controlled by JVM,\n          \n          \n            \n            Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,", "author": "tillrohrmann", "createdAt": "2020-02-03T14:53:13Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced\n+and recommended to be changed if you are sure that Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit controlled by JVM,", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0ODMwNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374148304", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *framework off-heap memory* or *task off-heap memory*, it means that the actual *direct memory* allocation will have\n          \n          \n            \n            *framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:56:46Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced\n+and recommended to be changed if you are sure that Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit controlled by JVM,\n+see also [JVM Parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, the native non-direct usage of memory can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the actual *direct memory* allocation will have", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0ODUyOQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374148529", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <strong>Note:</strong> Although, the native non-direct usage of memory can be accounted for as a part of the\n          \n          \n            \n            <strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the", "author": "tillrohrmann", "createdAt": "2020-02-03T14:57:09Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced\n+and recommended to be changed if you are sure that Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit controlled by JVM,\n+see also [JVM Parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, the native non-direct usage of memory can be accounted for as a part of the", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0OTM0OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374149349", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            that it is always allocated within its configured size. Therefore, resizing network memory will not necessarily help in this situation.\n          \n          \n            \n            that it is always allocated within its configured size. Therefore, resizing the *network memory* will not help in this situation.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:58:24Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced\n+and recommended to be changed if you are sure that Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit controlled by JVM,\n+see also [JVM Parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, the native non-direct usage of memory can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the actual *direct memory* allocation will have\n+a bigger JVM limit in this case.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+that it is always allocated within its configured size. Therefore, resizing network memory will not necessarily help in this situation.", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0OTY3NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374149674", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            that it is always allocated within its configured size. Therefore, resizing network memory will not necessarily help in this situation.\n          \n          \n            \n            to never exceed its configured size. Therefore, resizing network memory will not necessarily help in this situation.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:58:55Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced\n+and recommended to be changed if you are sure that Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit controlled by JVM,\n+see also [JVM Parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, the native non-direct usage of memory can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the actual *direct memory* allocation will have\n+a bigger JVM limit in this case.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+that it is always allocated within its configured size. Therefore, resizing network memory will not necessarily help in this situation.", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MDA1OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374150059", "bodyText": "I would suggest to make this a separate page. This will shorten the page a bit and make it easier to digest for the reader.", "author": "tillrohrmann", "createdAt": "2020-02-03T14:59:35Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,252 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version 1.10. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note: This memory setup guide is relevant only for Task Executors!</strong>\n+Check Job Manager [related configuration options](../config.html#jobmanager) for the memory setup of Job Manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described further in a [separate section](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have explicitly configured task heap and managed memory, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may lead to deployment failures due to potential memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed memory\n+\n+This type of memory is native (off-heap) and explicitly managed by Flink. Use cases for *managed memory* are the following:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of managed memory can be\n+* either configured explicitly ([taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size))\n+* or computed as a fraction of *total Flink memory* ([taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction))\n+\n+If both *size* and *fraction* are explicitly set, the *size* will be used and the *fraction* will be ignored.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure off-heap memory (direct or native)\n+\n+The off-heap memory, allocated in user code, should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase [framework off-heap memory](#framework-memory) but this option is advanced\n+and recommended to be changed if you are sure that Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit controlled by JVM,\n+see also [JVM Parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, the native non-direct usage of memory can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the actual *direct memory* allocation will have\n+a bigger JVM limit in this case.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+that it is always allocated within its configured size. Therefore, resizing network memory will not necessarily help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model", "originalCommit": "3ed9750b8441390bc9ca14babc2cc4bc302e4e31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a38bb3f58dd6c57b0943e3365d4a02c6fdbf5491", "url": "https://github.com/apache/flink/commit/a38bb3f58dd6c57b0943e3365d4a02c6fdbf5491", "message": "fixup! [FLINK-15143][docs] Add new memory configuration guide for FLIP-49", "committedDate": "2020-02-03T16:03:46Z", "type": "forcePushed"}, {"oid": "f2ec29ad602092ba2fde6857677f8ce758bb2479", "url": "https://github.com/apache/flink/commit/f2ec29ad602092ba2fde6857677f8ce758bb2479", "message": "fixup! [FLINK-15143][docs] Add new memory configuration guide for FLIP-49", "committedDate": "2020-02-03T16:16:21Z", "type": "forcePushed"}, {"oid": "8cb09c88dcbf19f5adfbe7cf377f264ae00ab7a2", "url": "https://github.com/apache/flink/commit/8cb09c88dcbf19f5adfbe7cf377f264ae00ab7a2", "message": "fixup! [FLINK-15143][docs] Add new memory configuration guide for FLIP-49", "committedDate": "2020-02-03T17:25:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0NTA2Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374245062", "bodyText": "nit: Can you move the TOC below the first paragraph, I think it looks nicer", "author": "sjwiesman", "createdAt": "2020-02-03T17:46:15Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc", "originalCommit": "94175b95319b633ed135a39d032d435b4c5eca77", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0NTYxMg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374245612", "bodyText": "Again, please move to line 30 below the first paragraph", "author": "sjwiesman", "createdAt": "2020-02-03T17:47:28Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,87 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}", "originalCommit": "94175b95319b633ed135a39d032d435b4c5eca77", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0ODUzMA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374248530", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            nav-title: 'Memory configuration'\n          \n          \n            \n            nav-title: 'Memory Configuration'", "author": "sjwiesman", "createdAt": "2020-02-03T17:53:22Z", "path": "docs/ops/memory/index.md", "diffHunk": "@@ -0,0 +1,24 @@\n+---\n+nav-title: 'Memory configuration'", "originalCommit": "94175b95319b633ed135a39d032d435b4c5eca77", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI1MzQ5NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374253494", "bodyText": "Flink's batch operators leverage managed memory to run more efficiently. In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects. This means that managed memory configurations have practical effects on the performance of your applications. Flink will attempt to allocate and use as much managed memory as configured for batch jobs but not go beyond its limits. This prevents OutOfMemoryException's because Flink knows precisely how much memory it has to leverage. If the managed memory is not sufficient, Flink will gracefully spill to disk.", "author": "sjwiesman", "createdAt": "2020-02-03T18:03:48Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,87 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<strong>Note:</strong> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+the RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+[Managed memory](../memory/mem_setup.html#managed-memory) helps Flink to run the batch operators efficiently.\n+Therefore, the size of the [managed memory](mem_setup.html#managed-memory) can affect the performance of [batch jobs](../../dev/batch).\n+If it makes sense, Flink will try to allocate and use as much *managed memory* as configured for batch jobs but not beyond its limit.\n+It prevents OutOfMemoryExceptions because Flink knows how much memory it can use to execute operations.\n+If Flink runs out of [managed memory](../memory/mem_setup.html#managed-memory), it utilizes disk space.\n+Using [managed memory](../memory/mem_setup.html#managed-memory), some operations can be performed directly\n+on the raw data without having to deserialize the data to convert it into Java objects. All in all,\n+[managed memory](../memory/mem_setup.html#managed-memory) improves the robustness and speed of the system.", "originalCommit": "94175b95319b633ed135a39d032d435b4c5eca77", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI1NDM2Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374254363", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            the RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n          \n          \n            \n            RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).", "author": "sjwiesman", "createdAt": "2020-02-03T18:05:49Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,87 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<strong>Note:</strong> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+the RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).", "originalCommit": "94175b95319b633ed135a39d032d435b4c5eca77", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4ff824338b9bee9a678932f6c5bdad6e62582379", "url": "https://github.com/apache/flink/commit/4ff824338b9bee9a678932f6c5bdad6e62582379", "message": "fixup! [FLINK-15143][docs] Add new memory configuration guide for FLIP-49", "committedDate": "2020-02-03T19:04:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0NDYyOQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374444629", "bodyText": "It seems the linked page does not have the anchor #jobmanager. This link jumps to the beginning of the configuration page.", "author": "xintongsong", "createdAt": "2020-02-04T02:22:58Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0NzM0MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374547340", "bodyText": "Indeed, the docs have been recently restructured. I will find a new link", "author": "azagrebin", "createdAt": "2020-02-04T09:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0NDYyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0NjQyNQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374446425", "bodyText": "These two links do not work for me. Why do we have -1 in the urls?\nIs it a mistake or something wrong with my building?", "author": "xintongsong", "createdAt": "2020-02-04T02:31:09Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0ODc5MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374548790", "bodyText": "The options, which have -1 at the end of their links, were duplicated in the main configuration page. They were listed as common options and then as TM or TM mem specific. After docs restructure, they got deduplicated. I will remove -1 for them.", "author": "azagrebin", "createdAt": "2020-02-04T09:09:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0NjQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0NzI5Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374447296", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n          \n          \n            \n            is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory](#managed-memory), and direct memory.", "author": "xintongsong", "createdAt": "2020-02-04T02:35:21Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0NzY0Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374447643", "bodyText": "I think it would be better to align the description with the figure above, to avoid potential confusing.", "author": "xintongsong", "createdAt": "2020-02-04T02:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0NzI5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1MDA2Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374450062", "bodyText": "Same problem of '-1' in urls for these two lines.", "author": "xintongsong", "createdAt": "2020-02-04T02:46:59Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1MDMyNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374450324", "bodyText": "Not necessarily in flink-conf.yaml. It can also be '-D' parameters.", "author": "xintongsong", "createdAt": "2020-02-04T02:48:17Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MDg0MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374550841", "bodyText": "True, I will just remove in *flink-conf.yaml*", "author": "azagrebin", "createdAt": "2020-02-04T09:14:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1MDMyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1MjY3NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374452675", "bodyText": "Do we really want this link?\nCurrently, it links to the DataSet API page, which seems implying that it's only used in DataSet API, while in fact it works the same way for blink batch sql jobs.", "author": "xintongsong", "createdAt": "2020-02-04T02:59:44Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1Mzg2Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374553862", "bodyText": "I think the reference can be still useful but true, we could also mention Blink batch jobs. I did not find what would make sense to refer to in docs for Blink. Alternatively, we can mention Blink w/o reference:\nBatch jobs (Blink planner or [DataSet API](../../dev/batch)) ...", "author": "azagrebin", "createdAt": "2020-02-04T09:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1MjY3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1NDYyMA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374454620", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n          \n          \n            \n            * either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size),", "author": "xintongsong", "createdAt": "2020-02-04T03:09:19Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NDIxMw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374554213", "bodyText": "not sure about this comma", "author": "azagrebin", "createdAt": "2020-02-04T09:21:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1NDYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1NDY2OA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374454668", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n          \n          \n            \n            * or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction).", "author": "xintongsong", "createdAt": "2020-02-04T03:09:32Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1NDcxMg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374454712", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *size* will override *fraction*, if both are set.\n          \n          \n            \n            *Size* will override *fraction*, if both are set.", "author": "xintongsong", "createdAt": "2020-02-04T03:09:45Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1NTk3Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374455972", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n          \n          \n            \n            <strong>Note:</strong> You can also customize the [framework off-heap memory](#framework-memory). This option is advanced", "author": "xintongsong", "createdAt": "2020-02-04T03:16:17Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NTE1MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374555150", "bodyText": "I will change to adjust", "author": "azagrebin", "createdAt": "2020-02-04T09:23:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1NTk3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1NjU0Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374456543", "bodyText": "This sentence is a bit hard to understand for me.\nNot sure if there is indeed a problem, or it's just my limited English skill.", "author": "xintongsong", "createdAt": "2020-02-04T03:19:22Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1Njk2Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374556962", "bodyText": "Would this be easier to understand?\nAlthough, native non-direct memory usage can be accounted for as a part of the *framework off-heap memory* or *task off-heap memory*, it will result in a higher JVM's *direct memory* limit in this case.", "author": "azagrebin", "createdAt": "2020-02-04T09:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1NjU0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1ODkxMw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374458913", "bodyText": "I would suggest also add this notice inside the figure file.\nUsually, when we have a star mark in the figure, we should include the corresponding footnote in the figure as well. This guarantees that the figure and the footnote always stay together, in case the figure is cited / reused in some other places. I've seen many times that people cite figures from Flink's official docs in their tech-blogs or presentation slides.\nMinor: \"notice\" -> \"Notice\"", "author": "xintongsong", "createdAt": "2020-02-04T03:31:42Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+to never exceed its configured size. Therefore, resizing the *network memory* will not help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model.\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\\* notice, that the *native non-direct* usage of memory in user code can be also accounted for as a part of the *task off-heap memory*,\n+see also [how to configure off-heap memory](#configure-off-heap-memory-direct-or-native)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MzgyMw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374563823", "bodyText": "I can do this", "author": "azagrebin", "createdAt": "2020-02-04T09:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1ODkxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MDE2Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374460167", "bodyText": "Broken link for jvm-overhead-max.", "author": "xintongsong", "createdAt": "2020-02-04T03:38:43Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+to never exceed its configured size. Therefore, resizing the *network memory* will not help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model.\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\\* notice, that the *native non-direct* usage of memory in user code can be also accounted for as a part of the *task off-heap memory*,\n+see also [how to configure off-heap memory](#configure-off-heap-memory-direct-or-native)\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| **Component**                                  | **Configuration options**                                                                                                                                                                                                                                                             | **Description**                                                                                                                                                                                                                                 |\n+| :----------------------------------------------| :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)     | [taskmanager.memory.framework.heap.size](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                  |\n+| [Task Heap Memory](#task-operator-heap-memory) | [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                   |\n+| [Managed memory](#managed-memory)              | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size) <br/> [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                    |\n+| [Framework Off-heap Memory](#framework-memory) | [taskmanager.memory.framework.off-heap.size](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option))                                                                                                               |\n+| Task Off-heap Memory                           | [taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                               |\n+| Network Memory                                 | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](#configure-total-memory) |\n+| [JVM metaspace](#jvm-parameters)               | [taskmanager.memory.jvm-metaspace.size](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                         |\n+| JVM Overhead                                   | [taskmanager.memory.network.min](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-jvm-overhead-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](#configure-total-memory)    |", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2Mjg3Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374462876", "bodyText": "I would move this notice to after the first example.\nCurrently, when I read \"For example\" right after this notice, I was expecting an example of min=max.", "author": "xintongsong", "createdAt": "2020-02-04T03:54:09Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+to never exceed its configured size. Therefore, resizing the *network memory* will not help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model.\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\\* notice, that the *native non-direct* usage of memory in user code can be also accounted for as a part of the *task off-heap memory*,\n+see also [how to configure off-heap memory](#configure-off-heap-memory-direct-or-native)\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| **Component**                                  | **Configuration options**                                                                                                                                                                                                                                                             | **Description**                                                                                                                                                                                                                                 |\n+| :----------------------------------------------| :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)     | [taskmanager.memory.framework.heap.size](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                  |\n+| [Task Heap Memory](#task-operator-heap-memory) | [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                   |\n+| [Managed memory](#managed-memory)              | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size) <br/> [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                    |\n+| [Framework Off-heap Memory](#framework-memory) | [taskmanager.memory.framework.off-heap.size](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option))                                                                                                               |\n+| Task Off-heap Memory                           | [taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                               |\n+| Network Memory                                 | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](#configure-total-memory) |\n+| [JVM metaspace](#jvm-parameters)               | [taskmanager.memory.jvm-metaspace.size](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                         |\n+| JVM Overhead                                   | [taskmanager.memory.network.min](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-jvm-overhead-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](#configure-total-memory)    |\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+### Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<strong>Note:</strong> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+### Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#detailed-memory-model).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MzUzNw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374463537", "bodyText": "To be more precise, we probably want to mention that none of other memory components are configured.", "author": "xintongsong", "createdAt": "2020-02-04T03:57:35Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+to never exceed its configured size. Therefore, resizing the *network memory* will not help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model.\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\\* notice, that the *native non-direct* usage of memory in user code can be also accounted for as a part of the *task off-heap memory*,\n+see also [how to configure off-heap memory](#configure-off-heap-memory-direct-or-native)\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| **Component**                                  | **Configuration options**                                                                                                                                                                                                                                                             | **Description**                                                                                                                                                                                                                                 |\n+| :----------------------------------------------| :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)     | [taskmanager.memory.framework.heap.size](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                  |\n+| [Task Heap Memory](#task-operator-heap-memory) | [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                   |\n+| [Managed memory](#managed-memory)              | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size) <br/> [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                    |\n+| [Framework Off-heap Memory](#framework-memory) | [taskmanager.memory.framework.off-heap.size](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option))                                                                                                               |\n+| Task Off-heap Memory                           | [taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                               |\n+| Network Memory                                 | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](#configure-total-memory) |\n+| [JVM metaspace](#jvm-parameters)               | [taskmanager.memory.jvm-metaspace.size](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                         |\n+| JVM Overhead                                   | [taskmanager.memory.network.min](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-jvm-overhead-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](#configure-total-memory)    |\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+### Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<strong>Note:</strong> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+### Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#detailed-memory-model).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,\n+- network min = 64mb,\n+- network max = 128mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000mb x 0.1 = 100Mb which is within the range 64-128Mb.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2Mzc3MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374463771", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            then the network memory will be 128Mb because the fraction is 100mb and it is less than the minimum.\n          \n          \n            \n            then the network memory will be 128Mb because the size derived from fraction is 100mb and it is less than the minimum.", "author": "xintongsong", "createdAt": "2020-02-04T03:58:37Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+to never exceed its configured size. Therefore, resizing the *network memory* will not help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model.\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\\* notice, that the *native non-direct* usage of memory in user code can be also accounted for as a part of the *task off-heap memory*,\n+see also [how to configure off-heap memory](#configure-off-heap-memory-direct-or-native)\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| **Component**                                  | **Configuration options**                                                                                                                                                                                                                                                             | **Description**                                                                                                                                                                                                                                 |\n+| :----------------------------------------------| :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)     | [taskmanager.memory.framework.heap.size](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                  |\n+| [Task Heap Memory](#task-operator-heap-memory) | [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                   |\n+| [Managed memory](#managed-memory)              | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size) <br/> [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                    |\n+| [Framework Off-heap Memory](#framework-memory) | [taskmanager.memory.framework.off-heap.size](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option))                                                                                                               |\n+| Task Off-heap Memory                           | [taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                               |\n+| Network Memory                                 | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](#configure-total-memory) |\n+| [JVM metaspace](#jvm-parameters)               | [taskmanager.memory.jvm-metaspace.size](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                         |\n+| JVM Overhead                                   | [taskmanager.memory.network.min](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-jvm-overhead-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](#configure-total-memory)    |\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+### Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<strong>Note:</strong> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+### Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#detailed-memory-model).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,\n+- network min = 64mb,\n+- network max = 128mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,\n+- network min = 128mb,\n+- network max = 256mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the fraction is 100mb and it is less than the minimum.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2Mzg2OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374463869", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It can also happen that the fraction is ignored if the size of the total memory and its other components is defined.\n          \n          \n            \n            It can also happen that the fraction is ignored if the size of the total memory and its other components are defined.", "author": "xintongsong", "createdAt": "2020-02-04T03:59:15Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+to never exceed its configured size. Therefore, resizing the *network memory* will not help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model.\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\\* notice, that the *native non-direct* usage of memory in user code can be also accounted for as a part of the *task off-heap memory*,\n+see also [how to configure off-heap memory](#configure-off-heap-memory-direct-or-native)\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| **Component**                                  | **Configuration options**                                                                                                                                                                                                                                                             | **Description**                                                                                                                                                                                                                                 |\n+| :----------------------------------------------| :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)     | [taskmanager.memory.framework.heap.size](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                  |\n+| [Task Heap Memory](#task-operator-heap-memory) | [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                   |\n+| [Managed memory](#managed-memory)              | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size) <br/> [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                    |\n+| [Framework Off-heap Memory](#framework-memory) | [taskmanager.memory.framework.off-heap.size](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option))                                                                                                               |\n+| Task Off-heap Memory                           | [taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                               |\n+| Network Memory                                 | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](#configure-total-memory) |\n+| [JVM metaspace](#jvm-parameters)               | [taskmanager.memory.jvm-metaspace.size](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                         |\n+| JVM Overhead                                   | [taskmanager.memory.network.min](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-jvm-overhead-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](#configure-total-memory)    |\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+### Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<strong>Note:</strong> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+### Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#detailed-memory-model).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,\n+- network min = 64mb,\n+- network max = 128mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,\n+- network min = 128mb,\n+- network max = 256mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the fraction is 100mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the size of the total memory and its other components is defined.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2ODAxMg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374568012", "bodyText": "is was related to the size but we can change it to the sizes then if it is more clear", "author": "azagrebin", "createdAt": "2020-02-04T09:47:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2Mzg2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2NDQ4Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374464483", "bodyText": "We have both \"mb\" and \"Mb\" in the examples. I think it would be better to consistently use one of them.", "author": "xintongsong", "createdAt": "2020-02-04T04:02:34Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+to never exceed its configured size. Therefore, resizing the *network memory* will not help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model.\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\\* notice, that the *native non-direct* usage of memory in user code can be also accounted for as a part of the *task off-heap memory*,\n+see also [how to configure off-heap memory](#configure-off-heap-memory-direct-or-native)\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| **Component**                                  | **Configuration options**                                                                                                                                                                                                                                                             | **Description**                                                                                                                                                                                                                                 |\n+| :----------------------------------------------| :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)     | [taskmanager.memory.framework.heap.size](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                  |\n+| [Task Heap Memory](#task-operator-heap-memory) | [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                   |\n+| [Managed memory](#managed-memory)              | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size) <br/> [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                    |\n+| [Framework Off-heap Memory](#framework-memory) | [taskmanager.memory.framework.off-heap.size](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option))                                                                                                               |\n+| Task Off-heap Memory                           | [taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                               |\n+| Network Memory                                 | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](#configure-total-memory) |\n+| [JVM metaspace](#jvm-parameters)               | [taskmanager.memory.jvm-metaspace.size](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                         |\n+| JVM Overhead                                   | [taskmanager.memory.network.min](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-jvm-overhead-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](#configure-total-memory)    |\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+### Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<strong>Note:</strong> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+### Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#detailed-memory-model).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2NTk4OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374465989", "bodyText": "Would it be better also give absolute values to managed memory, task / framework off-heap memory in the example, so we can clearly show what size the network memory will be derived as.\nE.g.,\n\ntotal Flink memory = 1000mb,\ntask heap = 200mb,\ntask off-heap = 200mb,\nframework heap = 200mb\nframework off-heap = 200mb\nnetwork min = 64mb,\nnetwork max = 256mb,\nnetwork fraction = 0.1\n\nThen the network memory size is 200mb.\nI think the current example is correct, but may not be that easy to understand for users.", "author": "xintongsong", "createdAt": "2020-02-04T04:10:25Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+to never exceed its configured size. Therefore, resizing the *network memory* will not help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model.\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\\* notice, that the *native non-direct* usage of memory in user code can be also accounted for as a part of the *task off-heap memory*,\n+see also [how to configure off-heap memory](#configure-off-heap-memory-direct-or-native)\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| **Component**                                  | **Configuration options**                                                                                                                                                                                                                                                             | **Description**                                                                                                                                                                                                                                 |\n+| :----------------------------------------------| :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)     | [taskmanager.memory.framework.heap.size](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                  |\n+| [Task Heap Memory](#task-operator-heap-memory) | [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                   |\n+| [Managed memory](#managed-memory)              | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size) <br/> [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                    |\n+| [Framework Off-heap Memory](#framework-memory) | [taskmanager.memory.framework.off-heap.size](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option))                                                                                                               |\n+| Task Off-heap Memory                           | [taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                               |\n+| Network Memory                                 | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](#configure-total-memory) |\n+| [JVM metaspace](#jvm-parameters)               | [taskmanager.memory.jvm-metaspace.size](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                         |\n+| JVM Overhead                                   | [taskmanager.memory.network.min](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-jvm-overhead-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](#configure-total-memory)    |\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+### Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<strong>Note:</strong> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+### Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#detailed-memory-model).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,\n+- network min = 64mb,\n+- network max = 128mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,\n+- network min = 128mb,\n+- network max = 256mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the fraction is 100mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the size of the total memory and its other components is defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose the following options are set:\n+- total Flink memory = 1000mb,\n+- task heap = 100mb,\n+- network min = 64mb,\n+- network max = 256mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU3MDMyNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374570324", "bodyText": "I did not want to list all the options (there is also managed memory btw). This forces to do more calculation comparing to just reading the next sentences", "author": "azagrebin", "createdAt": "2020-02-04T09:51:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2NTk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxNDU1MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r375014551", "bodyText": "If we don't want to list all the options, we may also say that sum of configured values of the rest options is 600mb, leaving 1000 - 200 - 600 = 200mb for network memory.\nI think the example should be concrete. Currently, we give the concrete value of total flink (1000mb) and task heap (100mb), but these values do not help showing how to derive a concrete network size due to absence of other sizes.", "author": "xintongsong", "createdAt": "2020-02-05T01:22:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2NTk4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MTA3NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374471075", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *task off-heap memory* is considered to be infinite (*Long.MAX_VALUE* bytes) and [managed memory](#managed-memory)\n          \n          \n            \n            *task off-heap memory* are considered to be infinite (*Long.MAX_VALUE* bytes) and [managed memory](#managed-memory)", "author": "xintongsong", "createdAt": "2020-02-04T04:38:59Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,251 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<strong>Note:</strong> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1))\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into [managed memory size](#managed-memory) and JVM heap.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<strong>Note:</strong> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly in *flink-conf.yaml*:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+<strong>Note:</strong> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+The conflict can occur e.g. if the sum of sub-components does not add up to the total configured memory or size of some\n+component is outside of its min/max range, see also [the detailed memory model](#detailed-memory-model).\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](#detailed-memory-model) are more details about the other memory components.\n+\n+<strong>Note:</strong> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)\n+\n+*size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<strong>Note:</strong> You can also increase the [framework off-heap memory](#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](#jvm-parameters).\n+\n+<strong>Note:</strong> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it means that the JVM's *direct memory* limit will be higher.\n+\n+<strong>Note:</strong> The *network memory* is also part of JVM *direct memory* but it is managed by Flink and guaranteed\n+to never exceed its configured size. Therefore, resizing the *network memory* will not help in this situation.\n+\n+See also [detailed Memory Model](#detailed-memory-model).\n+\n+## Detailed Memory Model\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model.\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\\* notice, that the *native non-direct* usage of memory in user code can be also accounted for as a part of the *task off-heap memory*,\n+see also [how to configure off-heap memory](#configure-off-heap-memory-direct-or-native)\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| **Component**                                  | **Configuration options**                                                                                                                                                                                                                                                             | **Description**                                                                                                                                                                                                                                 |\n+| :----------------------------------------------| :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)     | [taskmanager.memory.framework.heap.size](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                  |\n+| [Task Heap Memory](#task-operator-heap-memory) | [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                   |\n+| [Managed memory](#managed-memory)              | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size) <br/> [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                    |\n+| [Framework Off-heap Memory](#framework-memory) | [taskmanager.memory.framework.off-heap.size](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option))                                                                                                               |\n+| Task Off-heap Memory                           | [taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                               |\n+| Network Memory                                 | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](#configure-total-memory) |\n+| [JVM metaspace](#jvm-parameters)               | [taskmanager.memory.jvm-metaspace.size](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                         |\n+| JVM Overhead                                   | [taskmanager.memory.network.min](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [taskmanager.memory.network.max](../config.html#taskmanager-jvm-overhead-network-max) <br/> [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](#configure-total-memory)    |\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+### Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<strong>Note:</strong> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+### Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#detailed-memory-model).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,\n+- network min = 64mb,\n+- network max = 128mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if the following options are:\n+- total Flink memory = 1000mb,\n+- network min = 128mb,\n+- network max = 256mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the fraction is 100mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the size of the total memory and its other components is defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose the following options are set:\n+- total Flink memory = 1000mb,\n+- task heap = 100mb,\n+- network min = 64mb,\n+- network max = 256mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.\n+\n+## JVM Parameters\n+\n+Flink explicitly adds the following memory related JVM arguments while starting the task executor process,\n+based on the configured or derived memory component sizes:\n+\n+| **JVM Arguments**         | **Value**                                  |\n+| :------------------------ | :----------------------------------------- |\n+| *-Xmx* and *-Xms*         | Framework + Task Heap Memory               |\n+| *-XX:MaxDirectMemorySize* | Framework + Task Off-Heap + Network Memory |\n+| *-XX:MaxMetaspaceSize*    | JVM Metaspace                              |\n+\n+See also [detailed memory model](#detailed-memory-model).\n+\n+## Local Execution\n+If you start Flink locally on your machine as a single java program without creating a cluster (e.g. from your IDE)\n+then all components are ignored except for the following:\n+\n+| **Memory component**     | **Relevant options**                                                                          | **Default value for the local execution**                                     |\n+| :----------------------- | :-------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------- |\n+| Task heap                | [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)         | infinite                                                                      |\n+| Task off-heap            | [taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size) | infinite                                                                      |\n+| Managed memory           | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)             | 128Mb                                                                         |\n+| Network memory           | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min) <br /> [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max) | 64Mb |\n+\n+All of the components listed above can be but do not have to be explicitly configured for the local execution.\n+If they are not configured they are set to their default values. [Task heap memory](#task-operator-heap-memory) and\n+*task off-heap memory* is considered to be infinite (*Long.MAX_VALUE* bytes) and [managed memory](#managed-memory)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MTYyNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374471624", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) or its [components](mem_setup.html#detailed-memory-model)\n          \n          \n            \n            ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)", "author": "xintongsong", "createdAt": "2020-02-04T04:42:05Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) or its [components](mem_setup.html#detailed-memory-model)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MTk2Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374471963", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)) for the containerized deployments\n          \n          \n            \n            ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size)) for the containerized deployments", "author": "xintongsong", "createdAt": "2020-02-04T04:43:32Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)) for the containerized deployments", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzU1OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374473559", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can try to increase the [JVM metaspace](../config.html#taskmanager-memory-jvm-metaspace-size).\n          \n          \n            \n            You can try to [increase the JVM metaspace](../config.html#taskmanager-memory-jvm-metaspace-size).", "author": "xintongsong", "createdAt": "2020-02-04T04:52:29Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,70 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<strong>Note:</strong> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n+is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.\n+\n+## OutOfMemoryError: Direct buffer memory\n+\n+The exception usually indicates that the JVM *direct memory* limit is too small if there is no *direct memory leak*.\n+You can try to increase this limit by adjusting [direct off-heap memory](mem_setup.html#detailed-memory-model).\n+See also [how to configure off-heap memory](mem_setup.html#configure-off-heap-memory-direct-or-native) and\n+[JVM arguments](mem_setup.html#jvm-parameters) which Flink sets.\n+\n+## OutOfMemoryError: Metaspace\n+\n+The exception usually indicates that [JVM metaspace](mem_setup.html#jvm-parameters) limit is configured too small.\n+You can try to increase the [JVM metaspace](../config.html#taskmanager-memory-jvm-metaspace-size).", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mzg3MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374473870", "bodyText": "This paragraph have two \"JVM metaspace\"s linking to different pages.\nAs a user, I would thought these two links are the same thing, and will not click on the second.", "author": "xintongsong", "createdAt": "2020-02-04T04:54:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzU1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NDA3Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374474077", "bodyText": "Do we also want to say \"try increasing network memory\" and link to corresponding options here?", "author": "xintongsong", "createdAt": "2020-02-04T04:55:29Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,70 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<strong>Note:</strong> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n+is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.\n+\n+## OutOfMemoryError: Direct buffer memory\n+\n+The exception usually indicates that the JVM *direct memory* limit is too small if there is no *direct memory leak*.\n+You can try to increase this limit by adjusting [direct off-heap memory](mem_setup.html#detailed-memory-model).\n+See also [how to configure off-heap memory](mem_setup.html#configure-off-heap-memory-direct-or-native) and\n+[JVM arguments](mem_setup.html#jvm-parameters) which Flink sets.\n+\n+## OutOfMemoryError: Metaspace\n+\n+The exception usually indicates that [JVM metaspace](mem_setup.html#jvm-parameters) limit is configured too small.\n+You can try to increase the [JVM metaspace](../config.html#taskmanager-memory-jvm-metaspace-size).\n+\n+## IOException: Insufficient number of network buffers\n+\n+The exception usually indicates that the size of the configured [network memory](mem_setup.html#detailed-memory-model)\n+is not big enough.\n+", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NDg4MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374474881", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n          \n          \n            \n            * [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size)", "author": "xintongsong", "createdAt": "2020-02-04T04:59:54Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NDg5Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374474897", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n          \n          \n            \n            * [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size)", "author": "xintongsong", "createdAt": "2020-02-04T05:00:03Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NTAzNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374475034", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n          \n          \n            \n            The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size)", "author": "xintongsong", "createdAt": "2020-02-04T05:00:45Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NTc3NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374475775", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |\n          \n          \n            \n            | taskmanager.memory.off-heap    | On-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |", "author": "xintongsong", "createdAt": "2020-02-04T05:05:16Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+| **Removed option**             | **Note**                                                                                                                                                                                                                                                                                                |\n+| :----------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.memory.fraction    | Check the description of the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction). The new option has different semantics and the value of the deprecated option usually has to be adjusted. See also [how to migrate managed memory](#managed-memory). |\n+| taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NTgxMA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374475810", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | taskmanager.memory.preallocate | pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |\n          \n          \n            \n            | taskmanager.memory.preallocate | Pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |", "author": "xintongsong", "createdAt": "2020-02-04T05:05:27Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+| **Removed option**             | **Note**                                                                                                                                                                                                                                                                                                |\n+| :----------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.memory.fraction    | Check the description of the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction). The new option has different semantics and the value of the deprecated option usually has to be adjusted. See also [how to migrate managed memory](#managed-memory). |\n+| taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |\n+| taskmanager.memory.preallocate | pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NjA4MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374476080", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | taskmanager.heap.size               | - [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1) for standalone deployment <br/> - [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1) for containerised deployments <br/> See also [how to migrate total memory](#total-memory-previously-heap-memory). |\n          \n          \n            \n            | taskmanager.heap.size               | - [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size) for standalone deployment <br/> - [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size) for containerised deployments <br/> See also [how to migrate total memory](#total-memory-previously-heap-memory). |", "author": "xintongsong", "createdAt": "2020-02-04T05:06:46Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+| **Removed option**             | **Note**                                                                                                                                                                                                                                                                                                |\n+| :----------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.memory.fraction    | Check the description of the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction). The new option has different semantics and the value of the deprecated option usually has to be adjusted. See also [how to migrate managed memory](#managed-memory). |\n+| taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |\n+| taskmanager.memory.preallocate | pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+| **Deprecated option**               | **Interpreted as**                                                                                                                                                                                                                                                                                                        |\n+| :---------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.heap.size               | - [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1) for standalone deployment <br/> - [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1) for containerised deployments <br/> See also [how to migrate total memory](#total-memory-previously-heap-memory). |", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NjM5MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374476391", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | taskmanager.memory.size             | taskmanager.memory.managed.size, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                                                |\n          \n          \n            \n            | taskmanager.memory.size             | [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size), see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                                                |", "author": "xintongsong", "createdAt": "2020-02-04T05:08:32Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+| **Removed option**             | **Note**                                                                                                                                                                                                                                                                                                |\n+| :----------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.memory.fraction    | Check the description of the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction). The new option has different semantics and the value of the deprecated option usually has to be adjusted. See also [how to migrate managed memory](#managed-memory). |\n+| taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |\n+| taskmanager.memory.preallocate | pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+| **Deprecated option**               | **Interpreted as**                                                                                                                                                                                                                                                                                                        |\n+| :---------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.heap.size               | - [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1) for standalone deployment <br/> - [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1) for containerised deployments <br/> See also [how to migrate total memory](#total-memory-previously-heap-memory). |\n+| taskmanager.memory.size             | taskmanager.memory.managed.size, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                                                |", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NzYyMw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374477623", "bodyText": "These two tables look dazzling after compiled, at least in my browser.\nI think it would be better if we draw the lines of the table units.\nShall we consider to use html tables instead of markdown tables?", "author": "xintongsong", "createdAt": "2020-02-04T05:14:18Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+| **Removed option**             | **Note**                                                                                                                                                                                                                                                                                                |\n+| :----------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.memory.fraction    | Check the description of the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction). The new option has different semantics and the value of the deprecated option usually has to be adjusted. See also [how to migrate managed memory](#managed-memory). |\n+| taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |\n+| taskmanager.memory.preallocate | pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+| **Deprecated option**               | **Interpreted as**                                                                                                                                                                                                                                                                                                        |\n+| :---------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.heap.size               | - [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1) for standalone deployment <br/> - [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1) for containerised deployments <br/> See also [how to migrate total memory](#total-memory-previously-heap-memory). |\n+| taskmanager.memory.size             | taskmanager.memory.managed.size, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                                                |\n+| taskmanager.network.memory.min      | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.max      | [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.fraction | [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                                                                                                                                                                                                                                 |\n+", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU3ODIzOQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374578239", "bodyText": "Indeed, I can try this", "author": "azagrebin", "createdAt": "2020-02-04T10:07:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NzYyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3ODU0Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374478542", "bodyText": "Do we want to also add links for these two options?", "author": "xintongsong", "createdAt": "2020-02-04T05:18:47Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+| **Removed option**             | **Note**                                                                                                                                                                                                                                                                                                |\n+| :----------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.memory.fraction    | Check the description of the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction). The new option has different semantics and the value of the deprecated option usually has to be adjusted. See also [how to migrate managed memory](#managed-memory). |\n+| taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |\n+| taskmanager.memory.preallocate | pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+| **Deprecated option**               | **Interpreted as**                                                                                                                                                                                                                                                                                                        |\n+| :---------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.heap.size               | - [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1) for standalone deployment <br/> - [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1) for containerised deployments <br/> See also [how to migrate total memory](#total-memory-previously-heap-memory). |\n+| taskmanager.memory.size             | taskmanager.memory.managed.size, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                                                |\n+| taskmanager.network.memory.min      | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.max      | [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.fraction | [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                                                                                                                                                                                                                                 |\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, \u2018containerized.heap-cutoff-ratio\u2019 and \u2018containerized.heap-cutoff-min\u2019,", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU3NjQ1MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374576450", "bodyText": "I will add here as we say they are still valid for JM but not later where we say they are not available anymore for TM.", "author": "azagrebin", "createdAt": "2020-02-04T10:03:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3ODU0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3ODkxNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374478914", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) for standalone deployments\n          \n          \n            \n            * Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size)) for standalone deployments", "author": "xintongsong", "createdAt": "2020-02-04T05:20:33Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+| **Removed option**             | **Note**                                                                                                                                                                                                                                                                                                |\n+| :----------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.memory.fraction    | Check the description of the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction). The new option has different semantics and the value of the deprecated option usually has to be adjusted. See also [how to migrate managed memory](#managed-memory). |\n+| taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |\n+| taskmanager.memory.preallocate | pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+| **Deprecated option**               | **Interpreted as**                                                                                                                                                                                                                                                                                                        |\n+| :---------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.heap.size               | - [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1) for standalone deployment <br/> - [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1) for containerised deployments <br/> See also [how to migrate total memory](#total-memory-previously-heap-memory). |\n+| taskmanager.memory.size             | taskmanager.memory.managed.size, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                                                |\n+| taskmanager.network.memory.min      | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.max      | [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.fraction | [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                                                                                                                                                                                                                                 |\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, \u2018containerized.heap-cutoff-ratio\u2019 and \u2018containerized.heap-cutoff-min\u2019,\n+have no effect for task manager processes anymore but they still have the same semantics for the job manager process.\n+See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are \u2018taskmanager.heap.size\u2019 or \u2018taskmanager.heap.mb\u2019.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: \u2018mesos.resourcemanager.tasks.mem\u2019 which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) for standalone deployments", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3ODk4Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374478983", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)) for containerized deployments (Yarn or Mesos)\n          \n          \n            \n            * Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size)) for containerized deployments (Yarn or Mesos)", "author": "xintongsong", "createdAt": "2020-02-04T05:20:51Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+| **Removed option**             | **Note**                                                                                                                                                                                                                                                                                                |\n+| :----------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.memory.fraction    | Check the description of the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction). The new option has different semantics and the value of the deprecated option usually has to be adjusted. See also [how to migrate managed memory](#managed-memory). |\n+| taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |\n+| taskmanager.memory.preallocate | pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+| **Deprecated option**               | **Interpreted as**                                                                                                                                                                                                                                                                                                        |\n+| :---------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.heap.size               | - [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1) for standalone deployment <br/> - [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1) for containerised deployments <br/> See also [how to migrate total memory](#total-memory-previously-heap-memory). |\n+| taskmanager.memory.size             | taskmanager.memory.managed.size, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                                                |\n+| taskmanager.network.memory.min      | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.max      | [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.fraction | [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                                                                                                                                                                                                                                 |\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, \u2018containerized.heap-cutoff-ratio\u2019 and \u2018containerized.heap-cutoff-min\u2019,\n+have no effect for task manager processes anymore but they still have the same semantics for the job manager process.\n+See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are \u2018taskmanager.heap.size\u2019 or \u2018taskmanager.heap.mb\u2019.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: \u2018mesos.resourcemanager.tasks.mem\u2019 which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) for standalone deployments\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)) for containerized deployments (Yarn or Mesos)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4MDkxOQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374480919", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The total memory (\u2018taskmanager.heap.size\u2019) is replaced by [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n          \n          \n            \n            The total memory (\u2018taskmanager.heap.size\u2019) is replaced by [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size)", "author": "xintongsong", "createdAt": "2020-02-04T05:30:01Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,184 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<strong>Note:</strong> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)\n+* [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+* [taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size) and [taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+| **Removed option**             | **Note**                                                                                                                                                                                                                                                                                                |\n+| :----------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.memory.fraction    | Check the description of the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction). The new option has different semantics and the value of the deprecated option usually has to be adjusted. See also [how to migrate managed memory](#managed-memory). |\n+| taskmanager.memory.off-heap    | on-heap managed memory is no longer supported, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                |\n+| taskmanager.memory.preallocate | pre-allocation is no longer supported and managed memory is always allocated lazily, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                          |\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+| **Deprecated option**               | **Interpreted as**                                                                                                                                                                                                                                                                                                        |\n+| :---------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n+| taskmanager.heap.size               | - [taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1) for standalone deployment <br/> - [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1) for containerised deployments <br/> See also [how to migrate total memory](#total-memory-previously-heap-memory). |\n+| taskmanager.memory.size             | taskmanager.memory.managed.size, see also [how to migrate managed memory](#managed-memory)                                                                                                                                                                                                                                |\n+| taskmanager.network.memory.min      | [taskmanager.memory.network.min](../config.html#taskmanager-memory-network-min)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.max      | [taskmanager.memory.network.max](../config.html#taskmanager-memory-network-max)                                                                                                                                                                                                                                           |\n+| taskmanager.network.memory.fraction | [taskmanager.memory.network.fraction](../config.html#taskmanager-memory-network-fraction)                                                                                                                                                                                                                                 |\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, \u2018containerized.heap-cutoff-ratio\u2019 and \u2018containerized.heap-cutoff-min\u2019,\n+have no effect for task manager processes anymore but they still have the same semantics for the job manager process.\n+See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are \u2018taskmanager.heap.size\u2019 or \u2018taskmanager.heap.mb\u2019.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: \u2018mesos.resourcemanager.tasks.mem\u2019 which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) for standalone deployments\n+* Total process memory ([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)) for containerized deployments (Yarn or Mesos)\n+\n+It is also recommended to use these new options instead of the legacy ones as they might be completely removed in the following releases.\n+\n+See also [how to configure total memory now](mem_setup.html#configure-total-memory).\n+\n+## JVM Heap Memory\n+\n+JVM heap memory previously consisted of the managed memory (if configured to be on-heap) and the rest\n+which included any other usages of heap memory. This rest was always implicitly derived as the remaining part of the total memory,\n+see also [how to migrate managed memory](#managed-memory).\n+\n+Now, if only *total Flink memory* or *total process memory* is configured, then the JVM heap is also derived as the rest of\n+what is left after subtracting all other components from the total memory, see also [how to configure total memory](mem_setup.html#configure-total-memory).\n+\n+Additionally, you can now have more direct control over the JVM heap assigned to the operator tasks\n+([taskmanager.memory.task.heap.size](../config.html#taskmanager-memory-task-heap-size)),\n+see also [Task (Operator) Heap Memory](mem_setup.html#task-operator-heap-memory).\n+The same memory has to be accounted for the heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend) if it is chosen for streaming jobs.\n+\n+A part of the JVM heap is now always reserved for Flink framework\n+([taskmanager.memory.framework.heap.size](../config.html#taskmanager-memory-framework-heap-size)).\n+See also [Framework memory](mem_setup.html#framework-memory).\n+\n+## Managed Memory\n+\n+See also [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+### Explicit size\n+\n+The previous option to configure managed memory size (\u2018taskmanager.memory.size\u2019) was renamed to\n+[taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size) and deprecated.\n+It is recommended to use the new option because the legacy one can be removed in future releases.\n+\n+### Fraction\n+\n+If not set explicitly, the managed memory could be previously specified as a fraction (\u2018taskmanager.memory.fraction\u2019)\n+of the total memory minus network memory and container cut-off (only for [Yarn](../deployment/yarn_setup.html) and\n+[Mesos](../deployment/mesos.html) deployments). This option has been completely removed and will have no effect if still used.\n+Please, use the new option [taskmanager.memory.managed.fraction](../config.html#taskmanager-memory-managed-fraction) instead.\n+This new option will set the [managed memory](mem_setup.html#managed-memory) to the specified fraction of the\n+[total Flink memory](mem_setup.html#configure-total-memory) if its size is not set explicitly by\n+[taskmanager.memory.managed.size](../config.html#taskmanager-memory-managed-size).\n+\n+### RocksDB state\n+\n+If the [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) is chosen for a streaming job,\n+its native memory consumption should now be accounted for in [managed memory](mem_setup.html#managed-memory).\n+The RocksDB memory allocation is limited by the [managed memory](mem_setup.html#managed-memory) size.\n+This should prevent the killing of containers on [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html).\n+See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+### Other changes\n+\n+Additionally, the following changes have been made:\n+* The [managed memory](mem_setup.html#managed-memory) is always off-heap now. The configuration option \u2018taskmanager.memory.off-heap\u2019 is removed and will have no effect anymore.\n+* The [managed memory](mem_setup.html#managed-memory) now uses native memory which is not direct memory. It means that the managed memory is no longer accounted for in the JVM direct memory limit.\n+* The [managed memory](mem_setup.html#managed-memory) is always lazily allocated now. The configuration option \u2018taskmanager.memory.preallocate\u2019 is removed and will have no effect anymore.\n+\n+## Container Cut-Off Memory\n+\n+For containerized deployments, you could previously specify a cut-off memory. This memory could accommodate for unaccounted memory allocations.\n+Dependencies which were not directly controlled by Flink were the main source of those allocations, e.g. RocksDB, internals of JVM etc.\n+This is no longer available and the related configuration options (\u2018containerized.heap-cutoff-ratio\u2019 and \u2018containerized.heap-cutoff-min\u2019)\n+will have no effect on the task manager process anymore. The new memory model introduced more specific memory components,\n+described further, to address these concerns.\n+\n+In streaming jobs which use [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend), the RocksDB\n+native memory consumption should be accounted for as a part of the [managed memory](mem_setup.html#managed-memory) now.\n+The RocksDB memory allocation is also limited by the configured size of the [managed memory](mem_setup.html#managed-memory).\n+See also [migrating managed memory](#managed-memory) and [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+The other specific consumption of direct or native off-heap memory can be now addressed by the following new configuration options:\n+* Task off-heap memory ([taskmanager.memory.task.off-heap.size](../config.html#taskmanager-memory-task-off-heap-size))\n+* Framework off-heap memory ([taskmanager.memory.framework.off-heap.size](../config.html#taskmanager-memory-framework-off-heap-size))\n+* JVM metaspace ([taskmanager.memory.jvm-metaspace.size](../config.html#taskmanager-memory-jvm-metaspace-size))\n+* JVM overhead (see also [detailed new memory model](mem_setup.html#detailed-memory-model))\n+\n+<strong>Note:</strong> The job manager still has container cut-off memory configuration options.\n+The mentioned configuration options remain valid for the job manager in the same way as before.\n+\n+## Default Configuration in flink-conf.yaml\n+\n+This section describes the changes of the default \u2018flink-conf.yaml\u2019 shipped with Flink.\n+\n+The total memory (\u2018taskmanager.heap.size\u2019) is replaced by [taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4MzAwNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374483006", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It is also recommended to set [managed memory](mem_setup.html#managed-memory) to zero.\n          \n          \n            \n            It is also recommended to set [managed memory](../memory/mem_setup.html#managed-memory) to zero.", "author": "xintongsong", "createdAt": "2020-02-04T05:40:43Z", "path": "docs/ops/state/state_backends.md", "diffHunk": "@@ -74,6 +74,8 @@ The MemoryStateBackend is encouraged for:\n   - Local development and debugging\n   - Jobs that do hold little state, such as jobs that consist only of record-at-a-time functions (Map, FlatMap, Filter, ...). The Kafka Consumer requires very little state.\n \n+It is also recommended to set [managed memory](mem_setup.html#managed-memory) to zero.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4MzYzNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374483636", "bodyText": "Translation:\n\u5efa\u8bae\u540c\u65f6\u5c06 [managed memory](../memory/mem_setup.html#managed-memory) \u8bbe\u4e3a0\uff0c\u4ee5\u4fdd\u8bc1\u5c06\u6700\u5927\u9650\u5ea6\u7684\u5185\u5b58\u5206\u914d\u7ed9 JVM \u4e0a\u7684\u7528\u6237\u4ee3\u7801\u3002", "author": "xintongsong", "createdAt": "2020-02-04T05:43:38Z", "path": "docs/ops/state/state_backends.zh.md", "diffHunk": "@@ -71,6 +71,8 @@ MemoryStateBackend \u9002\u7528\u573a\u666f\uff1a\n   - \u672c\u5730\u5f00\u53d1\u548c\u8c03\u8bd5\u3002\n   - \u72b6\u6001\u5f88\u5c0f\u7684 Job\uff0c\u4f8b\u5982\uff1a\u7531\u6bcf\u6b21\u53ea\u5904\u7406\u4e00\u6761\u8bb0\u5f55\u7684\u51fd\u6570\uff08Map\u3001FlatMap\u3001Filter \u7b49\uff09\u6784\u6210\u7684 Job\u3002Kafka Consumer \u4ec5\u4ec5\u9700\u8981\u975e\u5e38\u5c0f\u7684\u72b6\u6001\u3002\n \n+It is also recommended to set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4Mzk1OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374483959", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It is also recommended to set [managed memory](mem_setup.html#managed-memory) to zero.\n          \n          \n            \n            It is also recommended to set [managed memory](../memory/mem_setup.html#managed-memory) to zero.", "author": "xintongsong", "createdAt": "2020-02-04T05:45:02Z", "path": "docs/ops/state/state_backends.md", "diffHunk": "@@ -92,6 +94,9 @@ The FsStateBackend is encouraged for:\n   - Jobs with large state, long windows, large key/value states.\n   - All high-availability setups.\n \n+It is also recommended to set [managed memory](mem_setup.html#managed-memory) to zero.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4NDg3OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374484879", "bodyText": "Translation:\n\u5efa\u8bae\u540c\u65f6\u5c06 [managed memory](../memory/mem_setup.html#managed-memory) \u8bbe\u4e3a0\uff0c\u4ee5\u4fdd\u8bc1\u5c06\u6700\u5927\u9650\u5ea6\u7684\u5185\u5b58\u5206\u914d\u7ed9 JVM \u4e0a\u7684\u7528\u6237\u4ee3\u7801\u3002", "author": "xintongsong", "createdAt": "2020-02-04T05:49:19Z", "path": "docs/ops/state/state_backends.zh.md", "diffHunk": "@@ -91,6 +93,9 @@ FsStateBackend \u9002\u7528\u573a\u666f:\n   - \u72b6\u6001\u6bd4\u8f83\u5927\u3001\u7a97\u53e3\u6bd4\u8f83\u957f\u3001key/value \u72b6\u6001\u6bd4\u8f83\u5927\u7684 Job\u3002\n   - \u6240\u6709\u9ad8\u53ef\u7528\u7684\u573a\u666f\u3002\n \n+It is also recommended to set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4NTc5OA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374485798", "bodyText": "Translation:\n\u8bf7\u540c\u65f6\u53c2\u8003 [Task Executor \u5185\u5b58\u914d\u7f6e](../memory/mem_tuning.html#rocksdb-state-backend) \u4e2d\u5173\u4e8e RocksDBStateBackend \u7684\u5efa\u8bae\u3002", "author": "xintongsong", "createdAt": "2020-02-04T05:53:31Z", "path": "docs/ops/state/state_backends.zh.md", "diffHunk": "@@ -115,6 +120,8 @@ RocksDBStateBackend \u7684\u9002\u7528\u573a\u666f\uff1a\n \u7136\u800c\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u4f7f\u7528 RocksDBStateBackend \u5c06\u4f1a\u4f7f\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u5927\u541e\u5410\u91cf\u964d\u4f4e\u3002\n \u6240\u6709\u7684\u8bfb\u5199\u90fd\u5fc5\u987b\u5e8f\u5217\u5316\u3001\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u6bd4\u57fa\u4e8e\u5806\u5185\u5b58\u7684 state backend \u7684\u6548\u7387\u8981\u4f4e\u5f88\u591a\u3002\n \n+Check also recommendations about the [task executor memory configuration](../memory/mem_tuning.html#rocksdb-state-backend) for the RocksDBStateBackend.", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5MzQwNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r374493406", "bodyText": "The class name is OutOfMemoryError", "author": "xintongsong", "createdAt": "2020-02-04T06:28:17Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([taskmanager.memory.flink.size](../config.html#taskmanager-memory-flink-size-1)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([taskmanager.memory.process.size](../config.html#taskmanager-memory-process-size-1)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<strong>Note:</strong> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.\n+In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects.\n+This means that [managed memory](../memory/mem_setup.html#managed-memory) configurations have practical effects\n+on the performance of your applications. Flink will attempt to allocate and use as much [managed memory](../memory/mem_setup.html#managed-memory)\n+as configured for batch jobs but not go beyond its limits. This prevents `OutOfMemoryException`'s because Flink knows precisely", "originalCommit": "4ff824338b9bee9a678932f6c5bdad6e62582379", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "16eeb758a4c5908166bf135e66f989611c268634", "url": "https://github.com/apache/flink/commit/16eeb758a4c5908166bf135e66f989611c268634", "message": "fixup! [FLINK-15143][docs] Add migration guide from pre-FLIP-49 memory config", "committedDate": "2020-02-04T13:34:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3NDM2MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r375974361", "bodyText": "Plural is without ' just s\nMaybe it's easier to just write OutOfMemoryErrors", "author": "GJL", "createdAt": "2020-02-06T17:24:31Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.\n+In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects.\n+This means that [managed memory](../memory/mem_setup.html#managed-memory) configurations have practical effects\n+on the performance of your applications. Flink will attempt to allocate and use as much [managed memory](../memory/mem_setup.html#managed-memory)\n+as configured for batch jobs but not go beyond its limits. This prevents `OutOfMemoryError`'s because Flink knows precisely", "originalCommit": "16eeb758a4c5908166bf135e66f989611c268634", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0ODkzNw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376448937", "bodyText": "@sjwiesman what's your opinion? is it typo?", "author": "azagrebin", "createdAt": "2020-02-07T15:23:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3NDM2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3NjQ3Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r375976477", "bodyText": "Why no backticks here?", "author": "GJL", "createdAt": "2020-02-06T17:28:42Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n+but they still have the same semantics for the job manager process. See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are \u2018taskmanager.heap.size\u2019 or \u2018taskmanager.heap.mb\u2019.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: \u2018mesos.resourcemanager.tasks.mem\u2019 which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) for standalone deployments\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for containerized deployments (Yarn or Mesos)\n+\n+It is also recommended to use these new options instead of the legacy ones as they might be completely removed in the following releases.\n+\n+See also [how to configure total memory now](mem_setup.html#configure-total-memory).\n+\n+## JVM Heap Memory\n+\n+JVM heap memory previously consisted of the managed memory (if configured to be on-heap) and the rest\n+which included any other usages of heap memory. This rest was always implicitly derived as the remaining part of the total memory,\n+see also [how to migrate managed memory](#managed-memory).\n+\n+Now, if only *total Flink memory* or *total process memory* is configured, then the JVM heap is also derived as the rest of\n+what is left after subtracting all other components from the total memory, see also [how to configure total memory](mem_setup.html#configure-total-memory).\n+\n+Additionally, you can now have more direct control over the JVM heap assigned to the operator tasks\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)),\n+see also [Task (Operator) Heap Memory](mem_setup.html#task-operator-heap-memory).\n+The same memory has to be accounted for the heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend) if it is chosen for streaming jobs.\n+\n+A part of the JVM heap is now always reserved for Flink framework\n+([`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)).\n+See also [Framework memory](mem_setup.html#framework-memory).\n+\n+## Managed Memory\n+\n+See also [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+### Explicit size\n+\n+The previous option to configure managed memory size (\u2018taskmanager.memory.size\u2019) was renamed to\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) and deprecated.\n+It is recommended to use the new option because the legacy one can be removed in future releases.\n+\n+### Fraction\n+\n+If not set explicitly, the managed memory could be previously specified as a fraction (\u2018taskmanager.memory.fraction\u2019)\n+of the total memory minus network memory and container cut-off (only for [Yarn](../deployment/yarn_setup.html) and\n+[Mesos](../deployment/mesos.html) deployments). This option has been completely removed and will have no effect if still used.\n+Please, use the new option [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction) instead.\n+This new option will set the [managed memory](mem_setup.html#managed-memory) to the specified fraction of the\n+[total Flink memory](mem_setup.html#configure-total-memory) if its size is not set explicitly by\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size).\n+\n+### RocksDB state\n+\n+If the [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) is chosen for a streaming job,\n+its native memory consumption should now be accounted for in [managed memory](mem_setup.html#managed-memory).\n+The RocksDB memory allocation is limited by the [managed memory](mem_setup.html#managed-memory) size.\n+This should prevent the killing of containers on [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html).\n+See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+### Other changes\n+\n+Additionally, the following changes have been made:\n+* The [managed memory](mem_setup.html#managed-memory) is always off-heap now. The configuration option \u2018taskmanager.memory.off-heap\u2019 is removed and will have no effect anymore.\n+* The [managed memory](mem_setup.html#managed-memory) now uses native memory which is not direct memory. It means that the managed memory is no longer accounted for in the JVM direct memory limit.\n+* The [managed memory](mem_setup.html#managed-memory) is always lazily allocated now. The configuration option \u2018taskmanager.memory.preallocate\u2019 is removed and will have no effect anymore.\n+\n+## Container Cut-Off Memory\n+\n+For containerized deployments, you could previously specify a cut-off memory. This memory could accommodate for unaccounted memory allocations.\n+Dependencies which were not directly controlled by Flink were the main source of those allocations, e.g. RocksDB, internals of JVM etc.\n+This is no longer available and the related configuration options (`containerized.heap-cutoff-ratio` and `containerized.heap-cutoff-min`)\n+will have no effect on the task manager process anymore. The new memory model introduced more specific memory components,\n+described further, to address these concerns.\n+\n+In streaming jobs which use [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend), the RocksDB\n+native memory consumption should be accounted for as a part of the [managed memory](mem_setup.html#managed-memory) now.\n+The RocksDB memory allocation is also limited by the configured size of the [managed memory](mem_setup.html#managed-memory).\n+See also [migrating managed memory](#managed-memory) and [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+The other specific consumption of direct or native off-heap memory can be now addressed by the following new configuration options:\n+* Task off-heap memory ([`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size))\n+* Framework off-heap memory ([`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size))\n+* JVM metaspace ([`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size))\n+* JVM overhead (see also [detailed new memory model](mem_setup.html#detailed-memory-model))\n+\n+<span class=\"label label-info\">Note</span> The job manager still has container cut-off memory configuration options.\n+The mentioned configuration options remain valid for the job manager in the same way as before.\n+\n+## Default Configuration in flink-conf.yaml\n+\n+This section describes the changes of the default \u2018flink-conf.yaml\u2019 shipped with Flink.\n+\n+The total memory (\u2018taskmanager.heap.size\u2019) is replaced by [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)", "originalCommit": "16eeb758a4c5908166bf135e66f989611c268634", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0NjkzMg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376446932", "bodyText": "Indeed, I overlooked old options w/o links", "author": "azagrebin", "createdAt": "2020-02-07T15:20:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3NjQ3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3NjcyMg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r375976722", "bodyText": "Here as well, why no backticks? There are a couple of these.", "author": "GJL", "createdAt": "2020-02-06T17:29:12Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default \u2018flink-conf.yaml\u2019](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n+but they still have the same semantics for the job manager process. See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are \u2018taskmanager.heap.size\u2019 or \u2018taskmanager.heap.mb\u2019.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: \u2018mesos.resourcemanager.tasks.mem\u2019 which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) for standalone deployments\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for containerized deployments (Yarn or Mesos)\n+\n+It is also recommended to use these new options instead of the legacy ones as they might be completely removed in the following releases.\n+\n+See also [how to configure total memory now](mem_setup.html#configure-total-memory).\n+\n+## JVM Heap Memory\n+\n+JVM heap memory previously consisted of the managed memory (if configured to be on-heap) and the rest\n+which included any other usages of heap memory. This rest was always implicitly derived as the remaining part of the total memory,\n+see also [how to migrate managed memory](#managed-memory).\n+\n+Now, if only *total Flink memory* or *total process memory* is configured, then the JVM heap is also derived as the rest of\n+what is left after subtracting all other components from the total memory, see also [how to configure total memory](mem_setup.html#configure-total-memory).\n+\n+Additionally, you can now have more direct control over the JVM heap assigned to the operator tasks\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)),\n+see also [Task (Operator) Heap Memory](mem_setup.html#task-operator-heap-memory).\n+The same memory has to be accounted for the heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend) if it is chosen for streaming jobs.\n+\n+A part of the JVM heap is now always reserved for Flink framework\n+([`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)).\n+See also [Framework memory](mem_setup.html#framework-memory).\n+\n+## Managed Memory\n+\n+See also [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+### Explicit size\n+\n+The previous option to configure managed memory size (\u2018taskmanager.memory.size\u2019) was renamed to\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) and deprecated.\n+It is recommended to use the new option because the legacy one can be removed in future releases.\n+\n+### Fraction\n+\n+If not set explicitly, the managed memory could be previously specified as a fraction (\u2018taskmanager.memory.fraction\u2019)\n+of the total memory minus network memory and container cut-off (only for [Yarn](../deployment/yarn_setup.html) and\n+[Mesos](../deployment/mesos.html) deployments). This option has been completely removed and will have no effect if still used.\n+Please, use the new option [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction) instead.\n+This new option will set the [managed memory](mem_setup.html#managed-memory) to the specified fraction of the\n+[total Flink memory](mem_setup.html#configure-total-memory) if its size is not set explicitly by\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size).\n+\n+### RocksDB state\n+\n+If the [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) is chosen for a streaming job,\n+its native memory consumption should now be accounted for in [managed memory](mem_setup.html#managed-memory).\n+The RocksDB memory allocation is limited by the [managed memory](mem_setup.html#managed-memory) size.\n+This should prevent the killing of containers on [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html).\n+See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+### Other changes\n+\n+Additionally, the following changes have been made:\n+* The [managed memory](mem_setup.html#managed-memory) is always off-heap now. The configuration option \u2018taskmanager.memory.off-heap\u2019 is removed and will have no effect anymore.\n+* The [managed memory](mem_setup.html#managed-memory) now uses native memory which is not direct memory. It means that the managed memory is no longer accounted for in the JVM direct memory limit.\n+* The [managed memory](mem_setup.html#managed-memory) is always lazily allocated now. The configuration option \u2018taskmanager.memory.preallocate\u2019 is removed and will have no effect anymore.\n+\n+## Container Cut-Off Memory\n+\n+For containerized deployments, you could previously specify a cut-off memory. This memory could accommodate for unaccounted memory allocations.\n+Dependencies which were not directly controlled by Flink were the main source of those allocations, e.g. RocksDB, internals of JVM etc.\n+This is no longer available and the related configuration options (`containerized.heap-cutoff-ratio` and `containerized.heap-cutoff-min`)\n+will have no effect on the task manager process anymore. The new memory model introduced more specific memory components,\n+described further, to address these concerns.\n+\n+In streaming jobs which use [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend), the RocksDB\n+native memory consumption should be accounted for as a part of the [managed memory](mem_setup.html#managed-memory) now.\n+The RocksDB memory allocation is also limited by the configured size of the [managed memory](mem_setup.html#managed-memory).\n+See also [migrating managed memory](#managed-memory) and [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+The other specific consumption of direct or native off-heap memory can be now addressed by the following new configuration options:\n+* Task off-heap memory ([`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size))\n+* Framework off-heap memory ([`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size))\n+* JVM metaspace ([`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size))\n+* JVM overhead (see also [detailed new memory model](mem_setup.html#detailed-memory-model))\n+\n+<span class=\"label label-info\">Note</span> The job manager still has container cut-off memory configuration options.\n+The mentioned configuration options remain valid for the job manager in the same way as before.\n+\n+## Default Configuration in flink-conf.yaml\n+\n+This section describes the changes of the default \u2018flink-conf.yaml\u2019 shipped with Flink.\n+\n+The total memory (\u2018taskmanager.heap.size\u2019) is replaced by [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+in the default \u2018flink-conf.yaml\u2019. The value is also increased from 1024Mb to 1568Mb.", "originalCommit": "16eeb758a4c5908166bf135e66f989611c268634", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0NzAzOA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376447038", "bodyText": "and here", "author": "azagrebin", "createdAt": "2020-02-07T15:20:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3NjcyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxNzcwOA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376517708", "bodyText": "Nit: In the first sentence we use italics for the release version and in the next sentence we don't use italics.", "author": "tillrohrmann", "createdAt": "2020-02-07T17:38:34Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxODAwNw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376518007", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n          \n          \n            \n            Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of a job manager.", "author": "tillrohrmann", "createdAt": "2020-02-07T17:39:17Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxODM4NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376518384", "bodyText": "should direct memory be italic similar to the other components?", "author": "tillrohrmann", "createdAt": "2020-02-07T17:40:13Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxODU0OA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376518548", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n          \n          \n            \n            options are relevant. See [local execution](mem_detail.html#local-execution) for more details.", "author": "tillrohrmann", "createdAt": "2020-02-07T17:40:38Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxODcyNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376518724", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n          \n          \n            \n            Otherwise, the simplest way to setup memory in Flink is to configure either of the following two options:", "author": "tillrohrmann", "createdAt": "2020-02-07T17:41:00Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxOTc1Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376519757", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)\n          \n          \n            \n            is given to Flink itself. The *total Flink memory* splits up into *JVM heap*, [*managed memory size*](#managed-memory)", "author": "tillrohrmann", "createdAt": "2020-02-07T17:43:22Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size))\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUyMDMwMQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376520301", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For the containerized deployments it corresponds to the size of the requested container, see also\n          \n          \n            \n            For containerized deployments this value corresponds to the size of requested containers. See also", "author": "tillrohrmann", "createdAt": "2020-02-07T17:44:30Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size))\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)\n+and *direct memory*.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUyMTMzNQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376521335", "bodyText": "I would put the config keys directly behind task heap and managed memory individually.", "author": "tillrohrmann", "createdAt": "2020-02-07T17:47:00Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size))\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)\n+and *direct memory*.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)).", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUyMTg1Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376521856", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This means that one of the following option subsets, which do not have default values, have to be configured explicitly:\n          \n          \n            \n            This means that one of the following option subsets has to be configured explicitly:", "author": "tillrohrmann", "createdAt": "2020-02-07T17:48:19Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size))\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)\n+and *direct memory*.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<span class=\"label label-info\">Note</span> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly:", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUyMjI1OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376522259", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n          \n          \n            \n            As mentioned before in [total memory description](#configure-total-memory), another way to configure Flink's memory is", "author": "tillrohrmann", "createdAt": "2020-02-07T17:49:22Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size))\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)\n+and *direct memory*.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<span class=\"label label-info\">Note</span> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+<span class=\"label label-info\">Note</span> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUyMjM1NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376522355", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n          \n          \n            \n            to specify [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory) explicitly.", "author": "tillrohrmann", "createdAt": "2020-02-07T17:49:37Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size))\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)\n+and *direct memory*.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<span class=\"label label-info\">Note</span> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+<span class=\"label label-info\">Note</span> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUyMjQ5Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376522496", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n          \n          \n            \n            It gives more control over the available JVM heap for Flink\u2019s tasks and their [managed memory](#managed-memory).", "author": "tillrohrmann", "createdAt": "2020-02-07T17:50:01Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size))\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)\n+and *direct memory*.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<span class=\"label label-info\">Note</span> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+<span class=\"label label-info\">Note</span> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0OTU5MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376649591", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <span class=\"label label-info\">Note</span> Although, native non-direct memory usage can be accounted for as a part of the\n          \n          \n            \n            <span class=\"label label-info\">Note</span> Although, native non-direct memory usage can be accounted for as part of the", "author": "tillrohrmann", "createdAt": "2020-02-07T23:08:33Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size))\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)\n+and *direct memory*.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<span class=\"label label-info\">Note</span> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+<span class=\"label label-info\">Note</span> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+<span class=\"label label-info\">Note</span> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction).\n+\n+*Size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<span class=\"label label-info\">Note</span> You can also adjust the [framework off-heap memory](mem_detail.html#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](mem_detail.html#jvm-parameters).\n+\n+<span class=\"label label-info\">Note</span> Although, native non-direct memory usage can be accounted for as a part of the", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0OTcwNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376649704", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *framework off-heap memory* or *task off-heap memory*, it will result in a higher JVM's *direct memory* limit in this case.\n          \n          \n            \n            *framework off-heap memory* or *task off-heap memory*, it would result in a higher JVM's *direct memory* limit.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:08:56Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"\n+nav-parent_id: ops_mem\n+nav-pos: 1\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+Apache Flink provides efficient workloads on top of the JVM by tightly controlling the memory usage of its various components.\n+While the community strives to offer sensible defaults to all configurations, the full breadth of applications\n+that users deploy on Flink means this isn't always possible. To provide the most production value to our users,\n+Flink allows both high level and fine-grained tuning of memory allocation within clusters.\n+\n+* toc\n+{:toc}\n+\n+The further described memory configuration is applicable starting with the release version *1.10*. If you upgrade Flink\n+from earlier versions, check the [migration guide](mem_migration.html) because many changes were introduced with the 1.10 release.\n+\n+<span class=\"label label-info\">Note</span> This memory setup guide is relevant <strong>only for task executors</strong>!\n+Check [job manager related configuration options](../config.html#jobmanager-heap-size) for the memory setup of job manager.\n+\n+## Configure Total Memory\n+\n+The *total process memory* of Flink JVM processes consists of memory consumed by Flink application (*total Flink memory*)\n+and by the JVM to run the process. The *total Flink memory* consumption includes usage of JVM heap,\n+*managed memory* (managed by Flink) and other direct (or native) memory.\n+\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/simple_mem_model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+If you run FIink locally (e.g. from your IDE) without creating a cluster, then only a subset of the memory configuration\n+options are relevant, see also [local execution](mem_detail.html#local-execution) for more details.\n+\n+Otherwise, the simplest way to setup memory in Flink is to configure either of the two following options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size))\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size))\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+Configuring *total Flink memory* is better suited for standalone deployments where you want to declare how much memory\n+is given to Flink itself. The *total Flink memory* splits up into JVM heap, [managed memory size](#managed-memory)\n+and *direct memory*.\n+\n+If you configure *total process memory* you declare how much memory in total should be assigned to the Flink *JVM process*.\n+For the containerized deployments it corresponds to the size of the requested container, see also\n+[how to configure memory for containers](mem_tuning.html#configure-memory-for-containers)\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+\n+Another way to setup the memory is to set [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory)\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)).\n+This more fine-grained approach is described in more detail [here](#configure-heap-and-managed-memory).\n+\n+<span class=\"label label-info\">Note</span> One of the three mentioned ways has to be used to configure Flink\u2019s memory (except for local execution), or the Flink startup will fail.\n+This means that one of the following option subsets, which do not have default values, have to be configured explicitly:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+<span class=\"label label-info\">Note</span> Explicitly configuring both *total process memory* and *total Flink memory* is not recommended.\n+It may lead to deployment failures due to potential memory configuration conflicts. Additional configuration\n+of other memory components also requires caution as it can produce further configuration conflicts.\n+\n+## Configure Heap and Managed Memory\n+\n+As mentioned before in [total memory description](#configure-total-memory), another way to setup memory in Flink is\n+to specify explicitly both [task heap](#task-operator-heap-memory) and [managed memory](#managed-memory).\n+It gives more control over the available JVM heap to Flink\u2019s tasks and its [managed memory](#managed-memory).\n+\n+The rest of the memory components will be adjusted automatically, based on default values or additionally configured options.\n+[Here](mem_detail.html#detailed-memory-model) are more details about the other memory components.\n+\n+<span class=\"label label-info\">Note</span> If you have configured the task heap and managed memory explicitly, it is recommended to set neither\n+*total process memory* nor *total Flink memory*. Otherwise, it may easily lead to memory configuration conflicts.\n+\n+### Task (Operator) Heap Memory\n+\n+If you want to guarantee that a certain amount of JVM heap is available for your user code, you can set the *task heap memory*\n+explicitly ([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)).\n+It will be added to the JVM heap size and will be dedicated to Flink\u2019s operators running the user code.\n+\n+### Managed Memory\n+\n+*Managed memory* is managed by Flink and is allocated as native memory (off-heap). The following workloads use *managed memory*:\n+* Streaming jobs can use it for [RocksDB state backend](../state/state_backends.html#the-rocksdbstatebackend).\n+* [Batch jobs](../../dev/batch) can use it for sorting, hash tables, caching of intermediate results.\n+\n+The size of *managed memory* can be\n+* either configured explicitly via [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+* or computed as a fraction of *total Flink memory* via [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction).\n+\n+*Size* will override *fraction*, if both are set.\n+If neither *size* nor *fraction* is explicitly configured, the [default fraction](../config.html#taskmanager-memory-managed-fraction) will be used.\n+\n+See also [how to configure memory for state backends](mem_tuning.html#configure-memory-for-state-backends) and [batch jobs](mem_tuning.html#configure-memory-for-batch-jobs).\n+\n+## Configure Off-Heap Memory (direct or native)\n+\n+The off-heap memory which is allocated by user code should be accounted for in *task off-heap memory*\n+([`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)).\n+\n+<span class=\"label label-info\">Note</span> You can also adjust the [framework off-heap memory](mem_detail.html#framework-memory). This option is advanced\n+and only recommended to be changed if you are sure that the Flink framework needs more memory.\n+\n+Flink includes the *framework off-heap memory* and *task off-heap memory* into the *direct memory* limit of the JVM,\n+see also [JVM parameters](mem_detail.html#jvm-parameters).\n+\n+<span class=\"label label-info\">Note</span> Although, native non-direct memory usage can be accounted for as a part of the\n+*framework off-heap memory* or *task off-heap memory*, it will result in a higher JVM's *direct memory* limit in this case.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MDA2Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376650063", "bodyText": "We could call this page also simply \"Memory Model\"", "author": "tillrohrmann", "createdAt": "2020-02-07T23:10:24Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MDk3MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376650970", "bodyText": "I would rephrase the sentence below the figure slightly: \"Notice that the user code's native non-direct memory usage can also be accounted for as part of the task off-heap memory.\"", "author": "tillrohrmann", "createdAt": "2020-02-07T23:13:39Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MTI1OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376651259", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following table lists all memory components, depicted above, and references Flink configuration options\n          \n          \n            \n            The following table lists all of Flink's memory components and references the configuration options", "author": "tillrohrmann", "createdAt": "2020-02-07T23:14:49Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MTMwNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376651306", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            which affect the size of the respective components:\n          \n          \n            \n            which control their size:", "author": "tillrohrmann", "createdAt": "2020-02-07T23:15:04Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MTYxMQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376651611", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n          \n          \n            \n            | [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink operators and user code                                                                                                                                                                                            |", "author": "tillrohrmann", "createdAt": "2020-02-07T23:16:19Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MTg5Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376651897", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n          \n          \n            \n            | [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, used for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |", "author": "tillrohrmann", "createdAt": "2020-02-07T23:17:37Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MjAxNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376652016", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n          \n          \n            \n            | [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink operators and user code                                                                                                                          |", "author": "tillrohrmann", "createdAt": "2020-02-07T23:18:11Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MjQ2Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376652467", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n          \n          \n            \n            | Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory used for data exchange between tasks. It is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |", "author": "tillrohrmann", "createdAt": "2020-02-07T23:20:08Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MjgxNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376652814", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n          \n          \n            \n            | JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for JVM overhead, e.g. threads, code cache, garbage collection space, etc. It is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |", "author": "tillrohrmann", "createdAt": "2020-02-07T23:21:40Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MzE2NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376653164", "bodyText": "I would remove these two sentences.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:23:02Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MzM1MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376653351", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n          \n          \n            \n            Adjust them only if you are sure that Flink needs more memory for its internal data structures or operations.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:23:45Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MzY1NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376653654", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It can be related to a particular deployment environment or job structure, like high parallelism.\n          \n          \n            \n            An increased memory need can be caused by a particular deployment environment or job structure, like high parallelism.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:24:57Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MzcyMQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376653721", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n          \n          \n            \n            In addition, Flink dependencies, such as Hadoop, may consume more direct or native memory in certain setups.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:25:13Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NDA4Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376654087", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This section describes the configuration details of the following options which can be a fraction of a certain\n          \n          \n            \n            This section describes the configuration details of the following options which can be a fraction of the", "author": "tillrohrmann", "createdAt": "2020-02-07T23:26:41Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NDM4Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376654386", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n          \n          \n            \n            The size of these components always has to be between its minimum and maximum value. Otherwise Flink's startup will fail.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:27:58Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NDc5OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376654799", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n          \n          \n            \n            The minimum and maximum values have defaults and can be explicitly configured via their corresponding configuration options.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:29:38Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NTIxNw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376655217", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n          \n          \n            \n            Notice if you configure the same minimum and maximum value then the component's size is fixed to this value.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:31:12Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NTQ0Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376655446", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n          \n          \n            \n            then the network memory will be 128Mb because the size derived from fraction is 100Mb which is less than the minimum.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:32:00Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NTU3OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376655579", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.\n          \n          \n            \n            It can also happen that the fraction is ignored if the sizes of the total memory and other components are defined.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:32:41Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NTk1Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376655953", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Flink explicitly adds the following memory related JVM arguments while starting the task executor process,\n          \n          \n            \n            Flink explicitly adds the following memory related JVM arguments while starting the task executor process.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:34:09Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- task heap = 100Mb,\n+- network min = 64Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000Mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.\n+\n+## JVM Parameters\n+\n+Flink explicitly adds the following memory related JVM arguments while starting the task executor process,", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NjAyNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376656026", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            based on the configured or derived memory component sizes:\n          \n          \n            \n            The values are based on the configured or derived memory component sizes:", "author": "tillrohrmann", "createdAt": "2020-02-07T23:34:27Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- task heap = 100Mb,\n+- network min = 64Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000Mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.\n+\n+## JVM Parameters\n+\n+Flink explicitly adds the following memory related JVM arguments while starting the task executor process,\n+based on the configured or derived memory component sizes:", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NjE1NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376656155", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you start Flink locally on your machine as a single java program without creating a cluster (e.g. from your IDE)\n          \n          \n            \n            If you start Flink locally on your machine as a single java program without creating a cluster (e.g. from your IDE),", "author": "tillrohrmann", "createdAt": "2020-02-07T23:35:02Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- task heap = 100Mb,\n+- network min = 64Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000Mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.\n+\n+## JVM Parameters\n+\n+Flink explicitly adds the following memory related JVM arguments while starting the task executor process,\n+based on the configured or derived memory component sizes:\n+\n+| &nbsp;&nbsp;**JVM Arguments**&nbsp;&nbsp; | &nbsp;&nbsp;**Value**&nbsp;&nbsp;          |\n+| :---------------------------------------- | :----------------------------------------- |\n+| *-Xmx* and *-Xms*                         | Framework + Task Heap Memory               |\n+| *-XX:MaxDirectMemorySize*                 | Framework + Task Off-Heap + Network Memory |\n+| *-XX:MaxMetaspaceSize*                    | JVM Metaspace                              |\n+{:.table-bordered}\n+<br/>\n+\n+See also [detailed memory model](#overview).\n+\n+## Local Execution\n+If you start Flink locally on your machine as a single java program without creating a cluster (e.g. from your IDE)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NjQxNQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376656415", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            All of the components listed above can be but do not have to be explicitly configured for the local execution.\n          \n          \n            \n            All of the components listed above can still be configured explicitly for local execution.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:36:07Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- task heap = 100Mb,\n+- network min = 64Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000Mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.\n+\n+## JVM Parameters\n+\n+Flink explicitly adds the following memory related JVM arguments while starting the task executor process,\n+based on the configured or derived memory component sizes:\n+\n+| &nbsp;&nbsp;**JVM Arguments**&nbsp;&nbsp; | &nbsp;&nbsp;**Value**&nbsp;&nbsp;          |\n+| :---------------------------------------- | :----------------------------------------- |\n+| *-Xmx* and *-Xms*                         | Framework + Task Heap Memory               |\n+| *-XX:MaxDirectMemorySize*                 | Framework + Task Off-Heap + Network Memory |\n+| *-XX:MaxMetaspaceSize*                    | JVM Metaspace                              |\n+{:.table-bordered}\n+<br/>\n+\n+See also [detailed memory model](#overview).\n+\n+## Local Execution\n+If you start Flink locally on your machine as a single java program without creating a cluster (e.g. from your IDE)\n+then all components are ignored except for the following:\n+\n+| &nbsp;&nbsp;**Memory component**&nbsp;&nbsp; | &nbsp;&nbsp;**Relevant options**&nbsp;&nbsp;                                                  | &nbsp;&nbsp;**Default value for the local execution**&nbsp;&nbsp;             |\n+| :------------------------------------------- | :-------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------- |\n+| Task heap                                    | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)         | infinite                                                                      |\n+| Task off-heap                                | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size) | infinite                                                                      |\n+| Managed memory                               | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)             | 128Mb                                                                         |\n+| Network memory                               | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br /> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) | 64Mb |\n+{:.table-bordered}\n+<br/>\n+\n+All of the components listed above can be but do not have to be explicitly configured for the local execution.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NjUwNw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376656507", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If they are not configured they are set to their default values. [Task heap memory](mem_setup.html#task-operator-heap-memory) and\n          \n          \n            \n            If they are not configured they are set to their default values. [*Task heap memory*](mem_setup.html#task-operator-heap-memory) and", "author": "tillrohrmann", "createdAt": "2020-02-07T23:36:34Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- task heap = 100Mb,\n+- network min = 64Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000Mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.\n+\n+## JVM Parameters\n+\n+Flink explicitly adds the following memory related JVM arguments while starting the task executor process,\n+based on the configured or derived memory component sizes:\n+\n+| &nbsp;&nbsp;**JVM Arguments**&nbsp;&nbsp; | &nbsp;&nbsp;**Value**&nbsp;&nbsp;          |\n+| :---------------------------------------- | :----------------------------------------- |\n+| *-Xmx* and *-Xms*                         | Framework + Task Heap Memory               |\n+| *-XX:MaxDirectMemorySize*                 | Framework + Task Off-Heap + Network Memory |\n+| *-XX:MaxMetaspaceSize*                    | JVM Metaspace                              |\n+{:.table-bordered}\n+<br/>\n+\n+See also [detailed memory model](#overview).\n+\n+## Local Execution\n+If you start Flink locally on your machine as a single java program without creating a cluster (e.g. from your IDE)\n+then all components are ignored except for the following:\n+\n+| &nbsp;&nbsp;**Memory component**&nbsp;&nbsp; | &nbsp;&nbsp;**Relevant options**&nbsp;&nbsp;                                                  | &nbsp;&nbsp;**Default value for the local execution**&nbsp;&nbsp;             |\n+| :------------------------------------------- | :-------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------- |\n+| Task heap                                    | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)         | infinite                                                                      |\n+| Task off-heap                                | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size) | infinite                                                                      |\n+| Managed memory                               | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)             | 128Mb                                                                         |\n+| Network memory                               | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br /> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) | 64Mb |\n+{:.table-bordered}\n+<br/>\n+\n+All of the components listed above can be but do not have to be explicitly configured for the local execution.\n+If they are not configured they are set to their default values. [Task heap memory](mem_setup.html#task-operator-heap-memory) and", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NjY0NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376656644", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *task off-heap memory* are considered to be infinite (*Long.MAX_VALUE* bytes) and [managed memory](mem_setup.html#managed-memory)\n          \n          \n            \n            *task off-heap memory* are considered to be infinite (*Long.MAX_VALUE* bytes) and [*managed memory*](mem_setup.html#managed-memory)", "author": "tillrohrmann", "createdAt": "2020-02-07T23:37:10Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- task heap = 100Mb,\n+- network min = 64Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000Mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.\n+\n+## JVM Parameters\n+\n+Flink explicitly adds the following memory related JVM arguments while starting the task executor process,\n+based on the configured or derived memory component sizes:\n+\n+| &nbsp;&nbsp;**JVM Arguments**&nbsp;&nbsp; | &nbsp;&nbsp;**Value**&nbsp;&nbsp;          |\n+| :---------------------------------------- | :----------------------------------------- |\n+| *-Xmx* and *-Xms*                         | Framework + Task Heap Memory               |\n+| *-XX:MaxDirectMemorySize*                 | Framework + Task Off-Heap + Network Memory |\n+| *-XX:MaxMetaspaceSize*                    | JVM Metaspace                              |\n+{:.table-bordered}\n+<br/>\n+\n+See also [detailed memory model](#overview).\n+\n+## Local Execution\n+If you start Flink locally on your machine as a single java program without creating a cluster (e.g. from your IDE)\n+then all components are ignored except for the following:\n+\n+| &nbsp;&nbsp;**Memory component**&nbsp;&nbsp; | &nbsp;&nbsp;**Relevant options**&nbsp;&nbsp;                                                  | &nbsp;&nbsp;**Default value for the local execution**&nbsp;&nbsp;             |\n+| :------------------------------------------- | :-------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------- |\n+| Task heap                                    | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)         | infinite                                                                      |\n+| Task off-heap                                | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size) | infinite                                                                      |\n+| Managed memory                               | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)             | 128Mb                                                                         |\n+| Network memory                               | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br /> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) | 64Mb |\n+{:.table-bordered}\n+<br/>\n+\n+All of the components listed above can be but do not have to be explicitly configured for the local execution.\n+If they are not configured they are set to their default values. [Task heap memory](mem_setup.html#task-operator-heap-memory) and\n+*task off-heap memory* are considered to be infinite (*Long.MAX_VALUE* bytes) and [managed memory](mem_setup.html#managed-memory)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1Njg1Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376656856", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It can become relevant for future optimizations coming with next releases. The actual JVM heap size of the started\n          \n          \n            \n            The actual JVM heap size of the started", "author": "tillrohrmann", "createdAt": "2020-02-07T23:38:18Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- task heap = 100Mb,\n+- network min = 64Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000Mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.\n+\n+## JVM Parameters\n+\n+Flink explicitly adds the following memory related JVM arguments while starting the task executor process,\n+based on the configured or derived memory component sizes:\n+\n+| &nbsp;&nbsp;**JVM Arguments**&nbsp;&nbsp; | &nbsp;&nbsp;**Value**&nbsp;&nbsp;          |\n+| :---------------------------------------- | :----------------------------------------- |\n+| *-Xmx* and *-Xms*                         | Framework + Task Heap Memory               |\n+| *-XX:MaxDirectMemorySize*                 | Framework + Task Off-Heap + Network Memory |\n+| *-XX:MaxMetaspaceSize*                    | JVM Metaspace                              |\n+{:.table-bordered}\n+<br/>\n+\n+See also [detailed memory model](#overview).\n+\n+## Local Execution\n+If you start Flink locally on your machine as a single java program without creating a cluster (e.g. from your IDE)\n+then all components are ignored except for the following:\n+\n+| &nbsp;&nbsp;**Memory component**&nbsp;&nbsp; | &nbsp;&nbsp;**Relevant options**&nbsp;&nbsp;                                                  | &nbsp;&nbsp;**Default value for the local execution**&nbsp;&nbsp;             |\n+| :------------------------------------------- | :-------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------- |\n+| Task heap                                    | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)         | infinite                                                                      |\n+| Task off-heap                                | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size) | infinite                                                                      |\n+| Managed memory                               | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)             | 128Mb                                                                         |\n+| Network memory                               | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br /> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) | 64Mb |\n+{:.table-bordered}\n+<br/>\n+\n+All of the components listed above can be but do not have to be explicitly configured for the local execution.\n+If they are not configured they are set to their default values. [Task heap memory](mem_setup.html#task-operator-heap-memory) and\n+*task off-heap memory* are considered to be infinite (*Long.MAX_VALUE* bytes) and [managed memory](mem_setup.html#managed-memory)\n+has a default value of 128Mb only for the local execution mode.\n+\n+<span class=\"label label-info\">Note</span> The task heap size is not related in any way to the real heap size in this case.\n+It can become relevant for future optimizations coming with next releases. The actual JVM heap size of the started", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NzAwNQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376657005", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you want to control the JVM heap size you have to explicitly pass the corresponding JVM arguments, e.g. *-Xmx*, *-Xms*.\n          \n          \n            \n            If you want to control the JVM heap size, then you have to explicitly pass the corresponding arguments *-Xmx* and *-Xms* to the JVM.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:38:57Z", "path": "docs/ops/memory/mem_detail.md", "diffHunk": "@@ -0,0 +1,149 @@\n+---\n+title: \"Detailed Memory Model\"\n+nav-parent_id: ops_mem\n+nav-pos: 2\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+This section gives a detailed description of all components in Flink\u2019s memory model of task executor.\n+Check [memory configuration guide](mem_setup.html) for the basic memory setup.\n+\n+* toc\n+{:toc}\n+\n+## Overview\n+\n+<br />\n+<center>\n+  <img src=\"{{ site.baseurl }}/fig/detailed-mem-model.svg\" width=\"300px\" alt=\"Simple memory model\" usemap=\"#simple-mem-model\">\n+</center>\n+<br />\n+\n+The following table lists all memory components, depicted above, and references Flink configuration options\n+which affect the size of the respective components:\n+\n+| &nbsp;&nbsp;**Component**&nbsp;&nbsp;                                             | &nbsp;&nbsp;**Configuration options**&nbsp;&nbsp;                                                                                                                                                                                                                                     | &nbsp;&nbsp;**Description**&nbsp;&nbsp;                                                                                                                                                                                                                                  |\n+| :-------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [Framework Heap Memory](#framework-memory)                                        | [`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)                                                                                                                                                                                       | JVM heap memory dedicated to Flink framework (advanced option)                                                                                                                                                                                                           |\n+| [Task Heap Memory](mem_setup.html#task-operator-heap-memory)                      | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)                                                                                                                                                                                                 | JVM heap memory dedicated to Flink application to run operators and user code                                                                                                                                                                                            |\n+| [Managed memory](mem_setup.html#managed-memory)                                   | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) <br/> [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction)                                                                                                     | Native memory managed by Flink, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend                                                                                                                                             |\n+| [Framework Off-heap Memory](#framework-memory)                                    | [`taskmanager.memory.framework.off-heap.size`](../config.html#taskmanager-memory-framework-off-heap-size)                                                                                                                                                                               | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink framework (advanced option)                                                                                                                           |\n+| [Task Off-heap Memory](mem_setup.html#configure-off-heap-memory-direct-or-native) | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size)                                                                                                                                                                                         | [Off-heap direct (or native) memory](mem_setup.html#configure-off-heap-memory-direct-or-native) dedicated to Flink application to run operators                                                                                                                          |\n+| Network Memory                                                                    | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br/> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) <br/> [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)                 | Direct memory reserved for data record exchange between tasks (e.g. buffering for the transfer over the network), it is a [capped fractionated component](#capped-fractionated-components) of the [total Flink memory](mem_setup.html#configure-total-memory)            |\n+| [JVM metaspace](#jvm-parameters)                                                  | [`taskmanager.memory.jvm-metaspace.size`](../config.html#taskmanager-memory-jvm-metaspace-size)                                                                                                                                                                                         | Metaspace size of the Flink JVM process                                                                                                                                                                                                                                  |\n+| JVM Overhead                                                                      | [`taskmanager.memory.jvm-overhead.min`](../config.html#taskmanager-memory-jvm-overhead-min) <br/> [`taskmanager.memory.jvm-overhead.max`](../config.html#taskmanager-memory-jvm-overhead-max) <br/> [`taskmanager.memory.jvm-overhead.fraction`](../config.html#taskmanager-memory-jvm-overhead-fraction) | Native memory reserved for other JVM overhead: e.g. thread stacks, code cache, garbage collection space etc, it is a [capped fractionated component](#capped-fractionated-components) of the [total process memory](mem_setup.html#configure-total-memory) |\n+{:.table-bordered}\n+<br/>\n+\n+As you can see, the size of some memory components can be simply set by the respective option.\n+Other components can be tuned using multiple options.\n+\n+## Framework Memory\n+\n+The *framework heap memory* and *framework off-heap memory* options are not supposed to be changed without a good reason.\n+Adjust them only if you are sure that Flink needs more memory for some internal data structures or operations.\n+It can be related to a particular deployment environment or job structure, like high parallelism.\n+In addition, Flink dependencies, such as Hadoop may consume more direct or native memory in certain setups.\n+\n+<span class=\"label label-info\">Note</span> Neither heap nor off-heap versions of framework and task memory are currently isolated within Flink.\n+The separation of framework and task memory can be used in future releases for further optimizations.\n+\n+## Capped Fractionated Components\n+\n+This section describes the configuration details of the following options which can be a fraction of a certain\n+[total memory](mem_setup.html#configure-total-memory):\n+\n+* *Network memory* can be a fraction of the *total Flink memory*\n+* *JVM overhead* can be a fraction of the *total process memory*\n+\n+See also [detailed memory model](#overview).\n+\n+The size of those components always has to be between its maximum and minimum value, otherwise Flink startup will fail.\n+The maximum and minimum values have defaults or can be explicitly set by corresponding configuration options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 64Mb,\n+- network max = 128Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 1000Mb x 0.1 = 100Mb which is within the range 64-128Mb.\n+\n+Notice if you configure the same maximum and minimum value it effectively means that its size is fixed to that value.\n+\n+If the component memory is not explicitly configured, then Flink will use the fraction to calculate the memory size\n+based on the total memory. The calculated value is capped by its corresponding min/max options.\n+For example, if only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- network min = 128Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+then the network memory will be 128Mb because the size derived from fraction is 100Mb and it is less than the minimum.\n+\n+It can also happen that the fraction is ignored if the sizes of the total memory and its other components are defined.\n+In this case, the network memory is the rest of the total memory. The derived value still has to be within its min/max\n+range otherwise the configuration fails. For example, suppose only the following memory options are set:\n+- total Flink memory = 1000Mb,\n+- task heap = 100Mb,\n+- network min = 64Mb,\n+- network max = 256Mb,\n+- network fraction = 0.1\n+\n+All other components of the total Flink memory have default values, including the default managed memory fraction.\n+Then the network memory is not the fraction (1000Mb x 0.1 = 100Mb) but the rest of the total Flink memory\n+which will either be within the range 64-256Mb or fail.\n+\n+## JVM Parameters\n+\n+Flink explicitly adds the following memory related JVM arguments while starting the task executor process,\n+based on the configured or derived memory component sizes:\n+\n+| &nbsp;&nbsp;**JVM Arguments**&nbsp;&nbsp; | &nbsp;&nbsp;**Value**&nbsp;&nbsp;          |\n+| :---------------------------------------- | :----------------------------------------- |\n+| *-Xmx* and *-Xms*                         | Framework + Task Heap Memory               |\n+| *-XX:MaxDirectMemorySize*                 | Framework + Task Off-Heap + Network Memory |\n+| *-XX:MaxMetaspaceSize*                    | JVM Metaspace                              |\n+{:.table-bordered}\n+<br/>\n+\n+See also [detailed memory model](#overview).\n+\n+## Local Execution\n+If you start Flink locally on your machine as a single java program without creating a cluster (e.g. from your IDE)\n+then all components are ignored except for the following:\n+\n+| &nbsp;&nbsp;**Memory component**&nbsp;&nbsp; | &nbsp;&nbsp;**Relevant options**&nbsp;&nbsp;                                                  | &nbsp;&nbsp;**Default value for the local execution**&nbsp;&nbsp;             |\n+| :------------------------------------------- | :-------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------- |\n+| Task heap                                    | [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)         | infinite                                                                      |\n+| Task off-heap                                | [`taskmanager.memory.task.off-heap.size`](../config.html#taskmanager-memory-task-off-heap-size) | infinite                                                                      |\n+| Managed memory                               | [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)             | 128Mb                                                                         |\n+| Network memory                               | [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min) <br /> [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max) | 64Mb |\n+{:.table-bordered}\n+<br/>\n+\n+All of the components listed above can be but do not have to be explicitly configured for the local execution.\n+If they are not configured they are set to their default values. [Task heap memory](mem_setup.html#task-operator-heap-memory) and\n+*task off-heap memory* are considered to be infinite (*Long.MAX_VALUE* bytes) and [managed memory](mem_setup.html#managed-memory)\n+has a default value of 128Mb only for the local execution mode.\n+\n+<span class=\"label label-info\">Note</span> The task heap size is not related in any way to the real heap size in this case.\n+It can become relevant for future optimizations coming with next releases. The actual JVM heap size of the started\n+local process is not controlled by Flink and depends on how you start the process.\n+If you want to control the JVM heap size you have to explicitly pass the corresponding JVM arguments, e.g. *-Xmx*, *-Xms*.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NzExNw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376657117", "bodyText": "Not consistent capitalization wrt the other titles.", "author": "tillrohrmann", "createdAt": "2020-02-07T23:39:32Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MzUwOQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376763509", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            title: \"Migration from old configuration (before 1.10 release)\"\n          \n          \n            \n            title: \"Migration Guide\"", "author": "tillrohrmann", "createdAt": "2020-02-09T08:05:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NzExNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODAwNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738006", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n          \n          \n            \n            If you see an `IllegalConfigurationException` thrown from `TaskExecutorProcessUtils`, it usually indicates", "author": "tillrohrmann", "createdAt": "2020-02-08T22:16:23Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODAyNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738024", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            title: \"Memory tuning guide\"\n          \n          \n            \n            title: \"Memory Tuning Guide\"", "author": "tillrohrmann", "createdAt": "2020-02-08T22:16:41Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODAyOA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738028", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n          \n          \n            \n            In addition to the [main memory setup guide](mem_setup.html), this section explains how to configure the task executor's memory for different workloads and deployments.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:16:48Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODA0Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738042", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            depending on the use case and which options are important in which case.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:16:59Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODA1MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738050", "bodyText": "Capitalization of heading is not consistent with the headings of the other pages.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:17:12Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODA1OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738059", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n          \n          \n            \n            Additionally, you can adjust the *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).", "author": "tillrohrmann", "createdAt": "2020-02-08T22:17:25Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODA2NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738064", "bodyText": "For standalone deployments, it is recommended to configure total Flink memory. Total Flink memory defines with how much memory Flink itself will be started.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:17:35Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODA3NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738074", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n          \n          \n            \n            The *total Process memory* is not relevant because the *JVM overhead* is not controlled by Flink or its deployment environment,", "author": "tillrohrmann", "createdAt": "2020-02-08T22:17:43Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODA5OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738099", "bodyText": "I don't fully understand this part. Please rephrase if possible.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:18:09Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODExNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738116", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n          \n          \n            \n            It is recommended to configure the [*total process memory*](mem_setup.html#configure-total-memory)", "author": "tillrohrmann", "createdAt": "2020-02-08T22:18:32Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODEyMQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738121", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n          \n          \n            \n            ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for containerized deployments", "author": "tillrohrmann", "createdAt": "2020-02-08T22:18:43Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODEyNQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738125", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n          \n          \n            \n            It declares how much memory should be assigned in total to the Flink *JVM process* and corresponds to the size of the requested container.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:18:54Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODE1MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738151", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n          \n          \n            \n            <span class=\"label label-info\">Note</span> If you configure the *total Flink memory*, then Flink will implicitly add the JVM memory components", "author": "tillrohrmann", "createdAt": "2020-02-08T22:19:10Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODE1NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738155", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            to derive the *total process memory* and request a container with the memory of that derived size,\n          \n          \n            \n            in order to derive the *total process memory* for the container requests.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:19:18Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODE2MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738161", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n          \n          \n            \n            See [detailed Memory Model](mem_setup.html#detailed-memory-model) for more information.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:19:25Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODE2Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738163", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n          \n          \n            \n              <strong>Warning:</strong> If Flink or the user code allocates off-heap (native) memory beyond its container size,", "author": "tillrohrmann", "createdAt": "2020-02-08T22:19:32Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODE3NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738175", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              the job can fail because the deployment environment can kill the offending containers.\n          \n          \n            \n              then it can happen that the deployment environment kills the offending container.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:19:52Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODE3Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738177", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n          \n          \n            \n            See also the description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:19:59Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODE4Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738182", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n          \n          \n            \n            When deploying a Flink streaming application, the configured [state backend](../state/state_backends.html) type", "author": "tillrohrmann", "createdAt": "2020-02-08T22:20:09Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODE4Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738187", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            will dictate the optimal memory configurations of your cluster.\n          \n          \n            \n            will dictate the optimal memory configurations for your cluster.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:20:21Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODIwMQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738201", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n          \n          \n            \n            or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set the [*managed memory*](mem_setup.html#managed-memory) to zero.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:20:34Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODIxOA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738218", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n          \n          \n            \n            This ensures that the maximum amount of memory will be allocated for user code on the JVM.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:20:46Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODIyOQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738229", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n          \n          \n            \n            RocksDB is set up to limit native memory allocation to the size of [*managed memory*](mem_setup.html#managed-memory).", "author": "tillrohrmann", "createdAt": "2020-02-08T22:20:57Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODIzNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738234", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n          \n          \n            \n            Therefore, it is important to reserve enough *managed memory* to accommodate the state of your application. If you disable the RocksDB memory control,", "author": "tillrohrmann", "createdAt": "2020-02-08T22:21:04Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODIzNw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738237", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.\n          \n          \n            \n            Flink's batch operators leverage [*managed memory*](../memory/mem_setup.html#managed-memory) to run more efficiently.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:21:13Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODI1MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738251", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects.\n          \n          \n            \n            Some operations work directly on raw data.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:21:29Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.\n+In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODI2Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738266", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This means that [managed memory](../memory/mem_setup.html#managed-memory) configurations have practical effects\n          \n          \n            \n            This means that the [*managed memory*](../memory/mem_setup.html#managed-memory) configuration affects", "author": "tillrohrmann", "createdAt": "2020-02-08T22:21:38Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.\n+In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects.\n+This means that [managed memory](../memory/mem_setup.html#managed-memory) configurations have practical effects", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODI3Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738276", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            on the performance of your applications. Flink will attempt to allocate and use as much [managed memory](../memory/mem_setup.html#managed-memory)\n          \n          \n            \n            the performance of your applications. Flink will use as much [managed memory](../memory/mem_setup.html#managed-memory)", "author": "tillrohrmann", "createdAt": "2020-02-08T22:21:57Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.\n+In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects.\n+This means that [managed memory](../memory/mem_setup.html#managed-memory) configurations have practical effects\n+on the performance of your applications. Flink will attempt to allocate and use as much [managed memory](../memory/mem_setup.html#managed-memory)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODI4Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738283", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            as configured for batch jobs but not go beyond its limits. This prevents `OutOfMemoryError`'s because Flink knows precisely\n          \n          \n            \n            as configured for the execution of batch jobs. This prevents `OutOfMemoryErrors` because Flink knows precisely", "author": "tillrohrmann", "createdAt": "2020-02-08T22:22:09Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.\n+In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects.\n+This means that [managed memory](../memory/mem_setup.html#managed-memory) configurations have practical effects\n+on the performance of your applications. Flink will attempt to allocate and use as much [managed memory](../memory/mem_setup.html#managed-memory)\n+as configured for batch jobs but not go beyond its limits. This prevents `OutOfMemoryError`'s because Flink knows precisely", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODI4OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738289", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            how much memory it has to leverage. If the [managed memory](../memory/mem_setup.html#managed-memory) is not sufficient,\n          \n          \n            \n            how much memory it can use. If the [*managed memory*](../memory/mem_setup.html#managed-memory) is not large enough,", "author": "tillrohrmann", "createdAt": "2020-02-08T22:22:15Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.\n+In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects.\n+This means that [managed memory](../memory/mem_setup.html#managed-memory) configurations have practical effects\n+on the performance of your applications. Flink will attempt to allocate and use as much [managed memory](../memory/mem_setup.html#managed-memory)\n+as configured for batch jobs but not go beyond its limits. This prevents `OutOfMemoryError`'s because Flink knows precisely\n+how much memory it has to leverage. If the [managed memory](../memory/mem_setup.html#managed-memory) is not sufficient,", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczODI5OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376738299", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Flink will gracefully spill to disk.\n          \n          \n            \n            then Flink will gracefully spill to disk.", "author": "tillrohrmann", "createdAt": "2020-02-08T22:22:28Z", "path": "docs/ops/memory/mem_tuning.md", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+title: \"Memory tuning guide\"\n+nav-parent_id: ops_mem\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+In addition to the [main memory setup guide](mem_setup.html), this section explains how to setup memory of task executors\n+depending on the use case and which options are important in which case.\n+\n+* toc\n+{:toc}\n+\n+## Configure memory for standalone deployment\n+\n+It is recommended to configure [total Flink memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) or its [components](mem_setup.html#detailed-memory-model)\n+for [standalone deployment](../deployment/cluster_setup.html) where you want to declare how much memory is given to Flink itself.\n+Additionally, you can adjust *JVM metaspace* if it causes [problems](mem_trouble.html#outofmemoryerror-metaspace).\n+\n+The *total Process memory* is not relevant because *JVM overhead* is not controlled by Flink or deployment environment,\n+only physical resources of the executing machine matter in this case.\n+\n+## Configure memory for containers\n+\n+It is recommended to configure [total process memory](mem_setup.html#configure-total-memory)\n+([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for the containerized deployments\n+([Kubernetes](../deployment/kubernetes.html), [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html)).\n+It declares how much memory in total should be assigned to the Flink *JVM process* and corresponds to the size of the requested container.\n+\n+<span class=\"label label-info\">Note</span> If you configure the *total Flink memory* Flink will implicitly add JVM memory components\n+to derive the *total process memory* and request a container with the memory of that derived size,\n+see also [detailed Memory Model](mem_setup.html#detailed-memory-model).\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> If Flink or user code allocates unmanaged off-heap (native) memory beyond the container size\n+  the job can fail because the deployment environment can kill the offending containers.\n+</div>\n+See also description of [container memory exceeded](mem_trouble.html#container-memory-exceeded) failure.\n+\n+## Configure memory for state backends\n+\n+When deploying a Flink streaming application, the type of [state backend](../state/state_backends.html) used\n+will dictate the optimal memory configurations of your cluster.\n+\n+### Heap state backend\n+\n+When running a stateless job or using a heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend), set [managed memory](mem_setup.html#managed-memory) to zero.\n+This will ensure that the maximum amount of memory is allocated for user code on the JVM.\n+\n+### RocksDB state backend\n+\n+The [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) uses native memory. By default,\n+RocksDB is setup to limit native memory allocation to the size of the [managed memory](mem_setup.html#managed-memory).\n+Therefore, it is important to reserve enough *managed memory* for your state use case. If you disable the default RocksDB memory control,\n+task executors can be killed in containerized deployments if RocksDB allocates memory above the limit of the requested container size\n+(the [total process memory](mem_setup.html#configure-total-memory)).\n+See also [state.backend.rocksdb.memory.managed](../config.html#state-backend-rocksdb-memory-managed).\n+\n+## Configure memory for batch jobs\n+\n+Flink's batch operators leverage [managed memory](../memory/mem_setup.html#managed-memory) to run more efficiently.\n+In doing so, some operations can be performed directly on raw data without having to be deserialized into Java objects.\n+This means that [managed memory](../memory/mem_setup.html#managed-memory) configurations have practical effects\n+on the performance of your applications. Flink will attempt to allocate and use as much [managed memory](../memory/mem_setup.html#managed-memory)\n+as configured for batch jobs but not go beyond its limits. This prevents `OutOfMemoryError`'s because Flink knows precisely\n+how much memory it has to leverage. If the [managed memory](../memory/mem_setup.html#managed-memory) is not sufficient,\n+Flink will gracefully spill to disk.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjM0Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762342", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n          \n          \n            \n            that there is either an invalid configuration value (e.g. negative memory size, fraction that is greater than 1, etc.)", "author": "tillrohrmann", "createdAt": "2020-02-09T07:43:53Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjM2Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762362", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n          \n          \n            \n            The exception usually indicates that the JVM heap is too small. You can try to increase the JVM heap size", "author": "tillrohrmann", "createdAt": "2020-02-09T07:44:40Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjM3MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762371", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n          \n          \n            \n            by increasing [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).", "author": "tillrohrmann", "createdAt": "2020-02-09T07:44:58Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjM5Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762396", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <span class=\"label label-info\">Note</span> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n          \n          \n            \n            <span class=\"label label-info\">Note</span> You can also increase the [framework heap memory](mem_setup.html#framework-memory) but this option", "author": "tillrohrmann", "createdAt": "2020-02-09T07:45:31Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<span class=\"label label-info\">Note</span> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjQ0NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762445", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.\n          \n          \n            \n            is advanced and should only be changed if you are sure that the Flink framework itself needs more memory.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:46:12Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<span class=\"label label-info\">Note</span> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n+is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjQ3NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762474", "bodyText": "Inconsistent capitalization of the headings. I suggest to follow a consistent style.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:46:44Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<span class=\"label label-info\">Note</span> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n+is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.\n+\n+## OutOfMemoryError: Direct buffer memory\n+\n+The exception usually indicates that the JVM *direct memory* limit is too small if there is no *direct memory leak*.\n+You can try to increase this limit by adjusting [direct off-heap memory](mem_setup.html#detailed-memory-model).\n+See also [how to configure off-heap memory](mem_setup.html#configure-off-heap-memory-direct-or-native) and\n+[JVM arguments](mem_setup.html#jvm-parameters) which Flink sets.\n+\n+## OutOfMemoryError: Metaspace\n+\n+The exception usually indicates that [JVM metaspace](mem_setup.html#jvm-parameters) limit is configured too small.\n+You can try to [increase the JVM metaspace`](../config.html#taskmanager-memory-jvm-metaspace-size).\n+\n+## IOException: Insufficient number of network buffers\n+\n+The exception usually indicates that the size of the configured [network memory](mem_setup.html#detailed-memory-model)\n+is not big enough. You can try to increase the *network memory* by adjusting the following options:\n+* [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min)\n+* [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max)\n+* [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)\n+\n+## Container Memory exceeded", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjQ5Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762497", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The exception usually indicates that the JVM *direct memory* limit is too small if there is no *direct memory leak*.\n          \n          \n            \n            The exception usually indicates that the JVM *direct memory* limit is too small or that there is a *direct memory leak*.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:47:32Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<span class=\"label label-info\">Note</span> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n+is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.\n+\n+## OutOfMemoryError: Direct buffer memory\n+\n+The exception usually indicates that the JVM *direct memory* limit is too small if there is no *direct memory leak*.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjU2OQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762569", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [JVM arguments](mem_setup.html#jvm-parameters) which Flink sets.\n          \n          \n            \n            the [JVM arguments](mem_setup.html#jvm-parameters) which Flink sets.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:48:38Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<span class=\"label label-info\">Note</span> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n+is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.\n+\n+## OutOfMemoryError: Direct buffer memory\n+\n+The exception usually indicates that the JVM *direct memory* limit is too small if there is no *direct memory leak*.\n+You can try to increase this limit by adjusting [direct off-heap memory](mem_setup.html#detailed-memory-model).\n+See also [how to configure off-heap memory](mem_setup.html#configure-off-heap-memory-direct-or-native) and\n+[JVM arguments](mem_setup.html#jvm-parameters) which Flink sets.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjYxNw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762617", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can try to [increase the JVM metaspace`](../config.html#taskmanager-memory-jvm-metaspace-size).\n          \n          \n            \n            You can try to increase the [JVM metaspace](../config.html#taskmanager-memory-jvm-metaspace-size).", "author": "tillrohrmann", "createdAt": "2020-02-09T07:49:29Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<span class=\"label label-info\">Note</span> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n+is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.\n+\n+## OutOfMemoryError: Direct buffer memory\n+\n+The exception usually indicates that the JVM *direct memory* limit is too small if there is no *direct memory leak*.\n+You can try to increase this limit by adjusting [direct off-heap memory](mem_setup.html#detailed-memory-model).\n+See also [how to configure off-heap memory](mem_setup.html#configure-off-heap-memory-direct-or-native) and\n+[JVM arguments](mem_setup.html#jvm-parameters) which Flink sets.\n+\n+## OutOfMemoryError: Metaspace\n+\n+The exception usually indicates that [JVM metaspace](mem_setup.html#jvm-parameters) limit is configured too small.\n+You can try to [increase the JVM metaspace`](../config.html#taskmanager-memory-jvm-metaspace-size).", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjY5Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762696", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            this usually indicates that Flink has not reserved enough native memory. You can observe that either from an external\n          \n          \n            \n            this usually indicates that Flink has not reserved enough native memory. You can observe this either by using an external", "author": "tillrohrmann", "createdAt": "2020-02-09T07:50:57Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<span class=\"label label-info\">Note</span> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n+is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.\n+\n+## OutOfMemoryError: Direct buffer memory\n+\n+The exception usually indicates that the JVM *direct memory* limit is too small if there is no *direct memory leak*.\n+You can try to increase this limit by adjusting [direct off-heap memory](mem_setup.html#detailed-memory-model).\n+See also [how to configure off-heap memory](mem_setup.html#configure-off-heap-memory-direct-or-native) and\n+[JVM arguments](mem_setup.html#jvm-parameters) which Flink sets.\n+\n+## OutOfMemoryError: Metaspace\n+\n+The exception usually indicates that [JVM metaspace](mem_setup.html#jvm-parameters) limit is configured too small.\n+You can try to [increase the JVM metaspace`](../config.html#taskmanager-memory-jvm-metaspace-size).\n+\n+## IOException: Insufficient number of network buffers\n+\n+The exception usually indicates that the size of the configured [network memory](mem_setup.html#detailed-memory-model)\n+is not big enough. You can try to increase the *network memory* by adjusting the following options:\n+* [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min)\n+* [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max)\n+* [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)\n+\n+## Container Memory exceeded\n+\n+If a task executor container tries to allocate memory beyond its requested size (Yarn, Mesos or Kubernetes),\n+this usually indicates that Flink has not reserved enough native memory. You can observe that either from an external", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MjcwNQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376762705", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            monitoring system or from the error messages when a container gets killed by deployment environment.\n          \n          \n            \n            monitoring system or from the error messages when a container gets killed by the deployment environment.", "author": "tillrohrmann", "createdAt": "2020-02-09T07:51:12Z", "path": "docs/ops/memory/mem_trouble.md", "diffHunk": "@@ -0,0 +1,73 @@\n+---\n+title: \"Troubleshooting\"\n+nav-parent_id: ops_mem\n+nav-pos: 4\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* toc\n+{:toc}\n+\n+## IllegalConfigurationException\n+\n+If you see an *IllegalConfigurationException* thrown from *TaskExecutorProcessUtils*, it usually indicates\n+that there is either an invalid configuration value (e.g., negative memory size, fraction that is greater than 1, etc.)\n+or configuration conflicts. Check the documentation chapters related to the [memory components](mem_setup.html#detailed-memory-model)\n+mentioned in the exception message.\n+\n+## OutOfMemoryError: Java heap space\n+\n+The exception usually indicates that JVM heap is not configured with enough size. You can try to increase the JVM heap size\n+by configuring larger [total memory](mem_setup.html#configure-total-memory) or [task heap memory](mem_setup.html#task-operator-heap-memory).\n+\n+<span class=\"label label-info\">Note</span> You can also increase [framework heap memory](mem_setup.html#framework-memory) but this option\n+is advanced and recommended to be changed if you are sure that the Flink framework itself needs more memory.\n+\n+## OutOfMemoryError: Direct buffer memory\n+\n+The exception usually indicates that the JVM *direct memory* limit is too small if there is no *direct memory leak*.\n+You can try to increase this limit by adjusting [direct off-heap memory](mem_setup.html#detailed-memory-model).\n+See also [how to configure off-heap memory](mem_setup.html#configure-off-heap-memory-direct-or-native) and\n+[JVM arguments](mem_setup.html#jvm-parameters) which Flink sets.\n+\n+## OutOfMemoryError: Metaspace\n+\n+The exception usually indicates that [JVM metaspace](mem_setup.html#jvm-parameters) limit is configured too small.\n+You can try to [increase the JVM metaspace`](../config.html#taskmanager-memory-jvm-metaspace-size).\n+\n+## IOException: Insufficient number of network buffers\n+\n+The exception usually indicates that the size of the configured [network memory](mem_setup.html#detailed-memory-model)\n+is not big enough. You can try to increase the *network memory* by adjusting the following options:\n+* [`taskmanager.memory.network.min`](../config.html#taskmanager-memory-network-min)\n+* [`taskmanager.memory.network.max`](../config.html#taskmanager-memory-network-max)\n+* [`taskmanager.memory.network.fraction`](../config.html#taskmanager-memory-network-fraction)\n+\n+## Container Memory exceeded\n+\n+If a task executor container tries to allocate memory beyond its requested size (Yarn, Mesos or Kubernetes),\n+this usually indicates that Flink has not reserved enough native memory. You can observe that either from an external\n+monitoring system or from the error messages when a container gets killed by deployment environment.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MzQ0NA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376763444", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            title: \"Setup Task Executor Memory\"\n          \n          \n            \n            title: \"Set up Task Executor Memory\"", "author": "tillrohrmann", "createdAt": "2020-02-09T08:04:29Z", "path": "docs/ops/memory/mem_setup.md", "diffHunk": "@@ -0,0 +1,133 @@\n+---\n+title: \"Setup Task Executor Memory\"", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MzcyMQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376763721", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n          \n          \n            \n            were removed or their semantics changed. This guide will help you to migrate the memory configuration from Flink <= 1.9 to >= 1.10.", "author": "tillrohrmann", "createdAt": "2020-02-09T08:10:21Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2MzgyNg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376763826", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n          \n          \n            \n              result in different sizes of memory components. If you try to reuse your Flink configuration from older versions", "author": "tillrohrmann", "createdAt": "2020-02-09T08:11:49Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDAwMA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764000", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n          \n          \n            \n            <span class=\"label label-info\">Note</span> Before version 1.10, Flink did not require that memory related options are set at all", "author": "tillrohrmann", "createdAt": "2020-02-09T08:15:07Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDAxNA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764014", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n          \n          \n            \n            as they all had default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires", "author": "tillrohrmann", "createdAt": "2020-02-09T08:15:19Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDE0MQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764141", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It also references other chapters for more details about the migration to the new configuration options.\n          \n          \n            \n            It also references other chapters for more details about migrating to the new configuration options.", "author": "tillrohrmann", "createdAt": "2020-02-09T08:17:31Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDE2Mg==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764162", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following options are completely removed. If they are still used, they will be just ignored.\n          \n          \n            \n            The following options are completely removed. If they are still used, they will be ignored.", "author": "tillrohrmann", "createdAt": "2020-02-09T08:17:45Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDIzMw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764233", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n          \n          \n            \n            This chapter shortly lists all changes to Flink's memory configuration options introduced with the 1.10 release.", "author": "tillrohrmann", "createdAt": "2020-02-09T08:18:47Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDI5MA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764290", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                         <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n          \n          \n            \n                         <td>On-heap <i>managed memory</i> is no longer supported. See also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>", "author": "tillrohrmann", "createdAt": "2020-02-09T08:20:10Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDMxMA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764310", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                         <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n          \n          \n            \n                         <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily. See also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>", "author": "tillrohrmann", "createdAt": "2020-02-09T08:20:33Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDQxMQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764411", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n          \n          \n            \n            The container cut-off configuration options, [`containerized.heap-cutoff-ratio`](config.html#containerized-heap-cutoff-ratio)", "author": "tillrohrmann", "createdAt": "2020-02-09T08:22:51Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDQxOA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764418", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n          \n          \n            \n            and [`containerized.heap-cutoff-min`](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore", "author": "tillrohrmann", "createdAt": "2020-02-09T08:23:02Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDQ1Ng==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764456", "bodyText": "capitalization", "author": "tillrohrmann", "createdAt": "2020-02-09T08:23:36Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n+but they still have the same semantics for the job manager process. See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDUwMQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764501", "bodyText": "Inconsistent spelling of containerized in this document.", "author": "tillrohrmann", "createdAt": "2020-02-09T08:24:39Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n+but they still have the same semantics for the job manager process. See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are `taskmanager.heap.size` or `taskmanager.heap.mb`.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: `mesos.resourcemanager.tasks.mem` which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) for standalone deployments\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for containerized deployments (Yarn or Mesos)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDcxOA==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764718", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The same memory has to be accounted for the heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n          \n          \n            \n            The JVM heap memory is also used by the heap state backends ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)", "author": "tillrohrmann", "createdAt": "2020-02-09T08:28:16Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n+but they still have the same semantics for the job manager process. See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are `taskmanager.heap.size` or `taskmanager.heap.mb`.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: `mesos.resourcemanager.tasks.mem` which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) for standalone deployments\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for containerized deployments (Yarn or Mesos)\n+\n+It is also recommended to use these new options instead of the legacy ones as they might be completely removed in the following releases.\n+\n+See also [how to configure total memory now](mem_setup.html#configure-total-memory).\n+\n+## JVM Heap Memory\n+\n+JVM heap memory previously consisted of the managed memory (if configured to be on-heap) and the rest\n+which included any other usages of heap memory. This rest was always implicitly derived as the remaining part of the total memory,\n+see also [how to migrate managed memory](#managed-memory).\n+\n+Now, if only *total Flink memory* or *total process memory* is configured, then the JVM heap is also derived as the rest of\n+what is left after subtracting all other components from the total memory, see also [how to configure total memory](mem_setup.html#configure-total-memory).\n+\n+Additionally, you can now have more direct control over the JVM heap assigned to the operator tasks\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)),\n+see also [Task (Operator) Heap Memory](mem_setup.html#task-operator-heap-memory).\n+The same memory has to be accounted for the heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NDc0Mw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376764743", "bodyText": "Capitalization", "author": "tillrohrmann", "createdAt": "2020-02-09T08:28:45Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n+but they still have the same semantics for the job manager process. See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are `taskmanager.heap.size` or `taskmanager.heap.mb`.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: `mesos.resourcemanager.tasks.mem` which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) for standalone deployments\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for containerized deployments (Yarn or Mesos)\n+\n+It is also recommended to use these new options instead of the legacy ones as they might be completely removed in the following releases.\n+\n+See also [how to configure total memory now](mem_setup.html#configure-total-memory).\n+\n+## JVM Heap Memory\n+\n+JVM heap memory previously consisted of the managed memory (if configured to be on-heap) and the rest\n+which included any other usages of heap memory. This rest was always implicitly derived as the remaining part of the total memory,\n+see also [how to migrate managed memory](#managed-memory).\n+\n+Now, if only *total Flink memory* or *total process memory* is configured, then the JVM heap is also derived as the rest of\n+what is left after subtracting all other components from the total memory, see also [how to configure total memory](mem_setup.html#configure-total-memory).\n+\n+Additionally, you can now have more direct control over the JVM heap assigned to the operator tasks\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)),\n+see also [Task (Operator) Heap Memory](mem_setup.html#task-operator-heap-memory).\n+The same memory has to be accounted for the heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend) if it is chosen for streaming jobs.\n+\n+A part of the JVM heap is now always reserved for Flink framework\n+([`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)).\n+See also [Framework memory](mem_setup.html#framework-memory).\n+\n+## Managed Memory\n+\n+See also [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+### Explicit size", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NTAxNw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376765017", "bodyText": "Maybe we could add that one could turn this behaviour off if one wants the old behaviour.", "author": "tillrohrmann", "createdAt": "2020-02-09T08:33:42Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n+but they still have the same semantics for the job manager process. See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are `taskmanager.heap.size` or `taskmanager.heap.mb`.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: `mesos.resourcemanager.tasks.mem` which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) for standalone deployments\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for containerized deployments (Yarn or Mesos)\n+\n+It is also recommended to use these new options instead of the legacy ones as they might be completely removed in the following releases.\n+\n+See also [how to configure total memory now](mem_setup.html#configure-total-memory).\n+\n+## JVM Heap Memory\n+\n+JVM heap memory previously consisted of the managed memory (if configured to be on-heap) and the rest\n+which included any other usages of heap memory. This rest was always implicitly derived as the remaining part of the total memory,\n+see also [how to migrate managed memory](#managed-memory).\n+\n+Now, if only *total Flink memory* or *total process memory* is configured, then the JVM heap is also derived as the rest of\n+what is left after subtracting all other components from the total memory, see also [how to configure total memory](mem_setup.html#configure-total-memory).\n+\n+Additionally, you can now have more direct control over the JVM heap assigned to the operator tasks\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)),\n+see also [Task (Operator) Heap Memory](mem_setup.html#task-operator-heap-memory).\n+The same memory has to be accounted for the heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend) if it is chosen for streaming jobs.\n+\n+A part of the JVM heap is now always reserved for Flink framework\n+([`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)).\n+See also [Framework memory](mem_setup.html#framework-memory).\n+\n+## Managed Memory\n+\n+See also [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+### Explicit size\n+\n+The previous option to configure managed memory size (`taskmanager.memory.size`) was renamed to\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) and deprecated.\n+It is recommended to use the new option because the legacy one can be removed in future releases.\n+\n+### Fraction\n+\n+If not set explicitly, the managed memory could be previously specified as a fraction (`taskmanager.memory.fraction`)\n+of the total memory minus network memory and container cut-off (only for [Yarn](../deployment/yarn_setup.html) and\n+[Mesos](../deployment/mesos.html) deployments). This option has been completely removed and will have no effect if still used.\n+Please, use the new option [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction) instead.\n+This new option will set the [managed memory](mem_setup.html#managed-memory) to the specified fraction of the\n+[total Flink memory](mem_setup.html#configure-total-memory) if its size is not set explicitly by\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size).\n+\n+### RocksDB state\n+\n+If the [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) is chosen for a streaming job,\n+its native memory consumption should now be accounted for in [managed memory](mem_setup.html#managed-memory).\n+The RocksDB memory allocation is limited by the [managed memory](mem_setup.html#managed-memory) size.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NTA2NQ==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376765065", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Dependencies which were not directly controlled by Flink were the main source of those allocations, e.g. RocksDB, internals of JVM etc.\n          \n          \n            \n            Dependencies which were not directly controlled by Flink were the main source of those allocations, e.g. RocksDB, internals of JVM, etc.", "author": "tillrohrmann", "createdAt": "2020-02-09T08:34:45Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n+but they still have the same semantics for the job manager process. See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are `taskmanager.heap.size` or `taskmanager.heap.mb`.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: `mesos.resourcemanager.tasks.mem` which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) for standalone deployments\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for containerized deployments (Yarn or Mesos)\n+\n+It is also recommended to use these new options instead of the legacy ones as they might be completely removed in the following releases.\n+\n+See also [how to configure total memory now](mem_setup.html#configure-total-memory).\n+\n+## JVM Heap Memory\n+\n+JVM heap memory previously consisted of the managed memory (if configured to be on-heap) and the rest\n+which included any other usages of heap memory. This rest was always implicitly derived as the remaining part of the total memory,\n+see also [how to migrate managed memory](#managed-memory).\n+\n+Now, if only *total Flink memory* or *total process memory* is configured, then the JVM heap is also derived as the rest of\n+what is left after subtracting all other components from the total memory, see also [how to configure total memory](mem_setup.html#configure-total-memory).\n+\n+Additionally, you can now have more direct control over the JVM heap assigned to the operator tasks\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)),\n+see also [Task (Operator) Heap Memory](mem_setup.html#task-operator-heap-memory).\n+The same memory has to be accounted for the heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend) if it is chosen for streaming jobs.\n+\n+A part of the JVM heap is now always reserved for Flink framework\n+([`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)).\n+See also [Framework memory](mem_setup.html#framework-memory).\n+\n+## Managed Memory\n+\n+See also [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+### Explicit size\n+\n+The previous option to configure managed memory size (`taskmanager.memory.size`) was renamed to\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) and deprecated.\n+It is recommended to use the new option because the legacy one can be removed in future releases.\n+\n+### Fraction\n+\n+If not set explicitly, the managed memory could be previously specified as a fraction (`taskmanager.memory.fraction`)\n+of the total memory minus network memory and container cut-off (only for [Yarn](../deployment/yarn_setup.html) and\n+[Mesos](../deployment/mesos.html) deployments). This option has been completely removed and will have no effect if still used.\n+Please, use the new option [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction) instead.\n+This new option will set the [managed memory](mem_setup.html#managed-memory) to the specified fraction of the\n+[total Flink memory](mem_setup.html#configure-total-memory) if its size is not set explicitly by\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size).\n+\n+### RocksDB state\n+\n+If the [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) is chosen for a streaming job,\n+its native memory consumption should now be accounted for in [managed memory](mem_setup.html#managed-memory).\n+The RocksDB memory allocation is limited by the [managed memory](mem_setup.html#managed-memory) size.\n+This should prevent the killing of containers on [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html).\n+See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+### Other changes\n+\n+Additionally, the following changes have been made:\n+* The [managed memory](mem_setup.html#managed-memory) is always off-heap now. The configuration option `taskmanager.memory.off-heap` is removed and will have no effect anymore.\n+* The [managed memory](mem_setup.html#managed-memory) now uses native memory which is not direct memory. It means that the managed memory is no longer accounted for in the JVM direct memory limit.\n+* The [managed memory](mem_setup.html#managed-memory) is always lazily allocated now. The configuration option `taskmanager.memory.preallocate` is removed and will have no effect anymore.\n+\n+## Container Cut-Off Memory\n+\n+For containerized deployments, you could previously specify a cut-off memory. This memory could accommodate for unaccounted memory allocations.\n+Dependencies which were not directly controlled by Flink were the main source of those allocations, e.g. RocksDB, internals of JVM etc.", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NTE5Nw==", "url": "https://github.com/apache/flink/pull/10999#discussion_r376765197", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The other specific consumption of direct or native off-heap memory can be now addressed by the following new configuration options:\n          \n          \n            \n            The other direct or native off-heap memory consumers can now be addressed by the following new configuration options:", "author": "tillrohrmann", "createdAt": "2020-02-09T08:37:12Z", "path": "docs/ops/memory/mem_migration.md", "diffHunk": "@@ -0,0 +1,234 @@\n+---\n+title: \"Migration from old configuration (before 1.10 release)\"\n+nav-parent_id: ops_mem\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+The [memory setup of task managers](mem_setup.html) has changed a lot with the 1.10 release. Many configuration options\n+were removed or their semantics changed. This guide will help you to understand how to migrate the previous memory configuration to the new one.\n+\n+* toc\n+{:toc}\n+\n+<div class=\"alert alert-warning\">\n+  <strong>Warning:</strong> It is important to review this guide because the legacy and new memory configuration can\n+  result in different sizes of memory components. If you try to reuse your Flink configuration from the previous versions\n+  before 1.10, it can result in changes to the behavior, performance or even configuration failures of your application.\n+</div>\n+\n+<span class=\"label label-info\">Note</span> The previous memory configuration allows that no memory related options are set at all\n+as they all have default values. The [new memory configuration](mem_setup.html#configure-total-memory) requires\n+that at least one subset of the following options is configured explicitly, otherwise the configuration will fail:\n+* [`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)\n+* [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+* [`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size) and [`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size)\n+\n+The [default `flink-conf.yaml`](#default-configuration-in-flink-confyaml) shipped with Flink sets [`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)\n+to make the default memory configuration consistent.\n+\n+This [spreadsheet](https://docs.google.com/spreadsheets/d/1mJaMkMPfDJJ-w6nMXALYmTc4XxiV30P5U7DzgwLkSoE) can also help\n+to evaluate and compare the results of the legacy and new memory computations.\n+\n+## Changes in Configuration Options\n+\n+This chapter shortly lists all changes in the memory configuration options before the 1.10 release.\n+It also references other chapters for more details about the migration to the new configuration options.\n+\n+The following options are completely removed. If they are still used, they will be just ignored.\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Removed option</th>\n+            <th class=\"text-left\">Note</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.memory.fraction</h5></td>\n+            <td>\n+                Check the description of the new option <a href=\"../config.html#taskmanager-memory-managed-fraction)\">taskmanager.memory.managed.fraction</a>.\n+                The new option has different semantics and the value of the deprecated option usually has to be adjusted.\n+                See also <a href=\"#managed-memory\">how to migrate managed memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.off-heap</h5></td>\n+             <td>On-heap <i>managed memory</i> is no longer supported, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.preallocate</h5></td>\n+             <td>Pre-allocation is no longer supported and <i>managed memory</i> is always allocated lazily, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+The following options are deprecated but if they are still used they will be interpreted as new options for backwards compatibility:\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+        <tr>\n+            <th class=\"text-left\">Deprecated option</th>\n+            <th class=\"text-left\">Interpreted as</th>\n+        </tr>\n+    </thead>\n+    <tbody>\n+        <tr>\n+            <td><h5>taskmanager.heap.size</h5></td>\n+            <td>\n+                <ul>\n+                  <li><a href=\"../config.html#taskmanager-memory-flink-size\">taskmanager.memory.flink.size</a> for <a href=\"../deployment/cluster_setup.html\">standalone deployment</a></li>\n+                  <li><a href=\"../config.html#taskmanager-memory-process-size\">taskmanager.memory.process.size</a> for containerised deployments</li>\n+                </ul>\n+                See also <a href=\"#total-memory-previously-heap-memory\">how to migrate total memory</a>.\n+            </td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.memory.size</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-managed-size\">taskmanager.memory.managed.size</a>, see also <a href=\"#managed-memory\">how to migrate managed memory</a>.</td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.min</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-min\">taskmanager.memory.network.min</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.max</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-max\">taskmanager.memory.network.max</a></td>\n+        </tr>\n+        <tr>\n+             <td><h5>taskmanager.network.memory.fraction</h5></td>\n+             <td><a href=\"../config.html#taskmanager-memory-network-fraction\">taskmanager.memory.network.fraction</a></td>\n+        </tr>\n+    </tbody>\n+</table>\n+\n+Although, the network memory configuration has not changed too much it is recommended to verify its configuration.\n+It can change if other memory components have new sizes, e.g. the total memory which the network can be a fraction of.\n+See also [new detailed memory model](mem_setup.html#detailed-memory-model).\n+\n+The container cut-off configuration options, [containerized.heap-cutoff-ratio](config.html#containerized-heap-cutoff-ratio)\n+and [containerized.heap-cutoff-min](config.html#containerized-heap-cutoff-min), have no effect for task manager processes anymore\n+but they still have the same semantics for the job manager process. See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+## Total Memory (previously Heap Memory)\n+\n+The previous options which were responsible for the total memory used by Flink are `taskmanager.heap.size` or `taskmanager.heap.mb`.\n+Despite their naming, they included not only JVM heap but also other off-heap memory components. The options have been deprecated.\n+\n+The Mesos integration also had a separate option with the same semantics: `mesos.resourcemanager.tasks.mem` which has also been deprecated.\n+\n+If the mentioned legacy options are used without specifying the corresponding new options,\n+they will be directly translated into the following new options:\n+* Total Flink memory ([`taskmanager.memory.flink.size`](../config.html#taskmanager-memory-flink-size)) for standalone deployments\n+* Total process memory ([`taskmanager.memory.process.size`](../config.html#taskmanager-memory-process-size)) for containerized deployments (Yarn or Mesos)\n+\n+It is also recommended to use these new options instead of the legacy ones as they might be completely removed in the following releases.\n+\n+See also [how to configure total memory now](mem_setup.html#configure-total-memory).\n+\n+## JVM Heap Memory\n+\n+JVM heap memory previously consisted of the managed memory (if configured to be on-heap) and the rest\n+which included any other usages of heap memory. This rest was always implicitly derived as the remaining part of the total memory,\n+see also [how to migrate managed memory](#managed-memory).\n+\n+Now, if only *total Flink memory* or *total process memory* is configured, then the JVM heap is also derived as the rest of\n+what is left after subtracting all other components from the total memory, see also [how to configure total memory](mem_setup.html#configure-total-memory).\n+\n+Additionally, you can now have more direct control over the JVM heap assigned to the operator tasks\n+([`taskmanager.memory.task.heap.size`](../config.html#taskmanager-memory-task-heap-size)),\n+see also [Task (Operator) Heap Memory](mem_setup.html#task-operator-heap-memory).\n+The same memory has to be accounted for the heap state backend ([MemoryStateBackend](../state/state_backends.html#the-memorystatebackend)\n+or [FsStateBackend](../state/state_backends.html#the-fsstatebackend) if it is chosen for streaming jobs.\n+\n+A part of the JVM heap is now always reserved for Flink framework\n+([`taskmanager.memory.framework.heap.size`](../config.html#taskmanager-memory-framework-heap-size)).\n+See also [Framework memory](mem_setup.html#framework-memory).\n+\n+## Managed Memory\n+\n+See also [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+### Explicit size\n+\n+The previous option to configure managed memory size (`taskmanager.memory.size`) was renamed to\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size) and deprecated.\n+It is recommended to use the new option because the legacy one can be removed in future releases.\n+\n+### Fraction\n+\n+If not set explicitly, the managed memory could be previously specified as a fraction (`taskmanager.memory.fraction`)\n+of the total memory minus network memory and container cut-off (only for [Yarn](../deployment/yarn_setup.html) and\n+[Mesos](../deployment/mesos.html) deployments). This option has been completely removed and will have no effect if still used.\n+Please, use the new option [`taskmanager.memory.managed.fraction`](../config.html#taskmanager-memory-managed-fraction) instead.\n+This new option will set the [managed memory](mem_setup.html#managed-memory) to the specified fraction of the\n+[total Flink memory](mem_setup.html#configure-total-memory) if its size is not set explicitly by\n+[`taskmanager.memory.managed.size`](../config.html#taskmanager-memory-managed-size).\n+\n+### RocksDB state\n+\n+If the [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend) is chosen for a streaming job,\n+its native memory consumption should now be accounted for in [managed memory](mem_setup.html#managed-memory).\n+The RocksDB memory allocation is limited by the [managed memory](mem_setup.html#managed-memory) size.\n+This should prevent the killing of containers on [Yarn](../deployment/yarn_setup.html) or [Mesos](../deployment/mesos.html).\n+See also [how to migrate container cut-off](#container-cut-off-memory).\n+\n+### Other changes\n+\n+Additionally, the following changes have been made:\n+* The [managed memory](mem_setup.html#managed-memory) is always off-heap now. The configuration option `taskmanager.memory.off-heap` is removed and will have no effect anymore.\n+* The [managed memory](mem_setup.html#managed-memory) now uses native memory which is not direct memory. It means that the managed memory is no longer accounted for in the JVM direct memory limit.\n+* The [managed memory](mem_setup.html#managed-memory) is always lazily allocated now. The configuration option `taskmanager.memory.preallocate` is removed and will have no effect anymore.\n+\n+## Container Cut-Off Memory\n+\n+For containerized deployments, you could previously specify a cut-off memory. This memory could accommodate for unaccounted memory allocations.\n+Dependencies which were not directly controlled by Flink were the main source of those allocations, e.g. RocksDB, internals of JVM etc.\n+This is no longer available and the related configuration options (`containerized.heap-cutoff-ratio` and `containerized.heap-cutoff-min`)\n+will have no effect on the task manager process anymore. The new memory model introduced more specific memory components,\n+described further, to address these concerns.\n+\n+In streaming jobs which use [RocksDBStateBackend](../state/state_backends.html#the-rocksdbstatebackend), the RocksDB\n+native memory consumption should be accounted for as a part of the [managed memory](mem_setup.html#managed-memory) now.\n+The RocksDB memory allocation is also limited by the configured size of the [managed memory](mem_setup.html#managed-memory).\n+See also [migrating managed memory](#managed-memory) and [how to configure managed memory now](mem_setup.html#managed-memory).\n+\n+The other specific consumption of direct or native off-heap memory can be now addressed by the following new configuration options:", "originalCommit": "e34dafad44cbd3eb8cc62b0e0436f096a8f95db6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "01a9ff99608e40ad893002eeaa1c87eb9eaa27c3", "url": "https://github.com/apache/flink/commit/01a9ff99608e40ad893002eeaa1c87eb9eaa27c3", "message": "[FLINK-15143][docs] Add new memory configuration guide for FLIP-49", "committedDate": "2020-02-10T18:25:32Z", "type": "commit"}, {"oid": "d4aa8fa840b729d0eecd142c206fa5bbf0e03d83", "url": "https://github.com/apache/flink/commit/d4aa8fa840b729d0eecd142c206fa5bbf0e03d83", "message": "[FLINK-15143][docs] Add tuning and troubleshooting guides for memory configuration", "committedDate": "2020-02-10T18:32:24Z", "type": "commit"}, {"oid": "0cb8834aa5ab8cdbef30b3ab5a6572356f76b64a", "url": "https://github.com/apache/flink/commit/0cb8834aa5ab8cdbef30b3ab5a6572356f76b64a", "message": "[FLINK-15143][docs] Add migration guide from pre-FLIP-49 memory config", "committedDate": "2020-02-10T18:32:24Z", "type": "commit"}, {"oid": "0cb8834aa5ab8cdbef30b3ab5a6572356f76b64a", "url": "https://github.com/apache/flink/commit/0cb8834aa5ab8cdbef30b3ab5a6572356f76b64a", "message": "[FLINK-15143][docs] Add migration guide from pre-FLIP-49 memory config", "committedDate": "2020-02-10T18:32:24Z", "type": "forcePushed"}]}