{"pr_number": 11986, "pr_title": "[FLINK-17361] [jdbc] Added custom query on JDBC tables", "pr_createdAt": "2020-05-04T16:38:30Z", "pr_url": "https://github.com/apache/flink/pull/11986", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2MzI5Mw==", "url": "https://github.com/apache/flink/pull/11986#discussion_r421363293", "bodyText": "I think using the static StreamITCase functionality here is an anti-pattern that we should avoid. (I know that it's widely used in the code base, but we should rid of it at some point.)\nIdeally, with the FLIP-84 work it should be as easy as\nTableResult tableResult = tEnv.executeSql(\"SELECT timestamp6_col, decimal_col FROM \" + INPUT_TABLE);\ntableResult.collect();\n\nbut that is not yet in master. I'm inclined to wait for a but but basically have this PR ready in a mergable state.", "author": "aljoscha", "createdAt": "2020-05-07T09:21:50Z", "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/JDBCTableSourceITCase.java", "diffHunk": "@@ -153,4 +153,34 @@ public void testProjectableJDBCSource() throws Exception {\n \t\t\t\t\"2020-01-01T15:36:01.123456,101.1234\");\n \t\tStreamITCase.compareWithList(expected);\n \t}\n+\n+\t@Test\n+\tpublic void testScanQueryJDBCSource() throws Exception {\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tEnvironmentSettings envSettings = EnvironmentSettings.newInstance()\n+\t\t\t.useBlinkPlanner()\n+\t\t\t.inStreamingMode()\n+\t\t\t.build();\n+\t\tStreamTableEnvironment tEnv = StreamTableEnvironment.create(env, envSettings);\n+\n+\t\tfinal String testQuery = \"SELECT id FROM \" + INPUT_TABLE;\n+\t\ttEnv.sqlUpdate(\n+\t\t\t\"CREATE TABLE test(\" +\n+\t\t\t\t\"id BIGINT\" +\n+\t\t\t\t\") WITH (\" +\n+\t\t\t\t\"  'connector.type'='jdbc',\" +\n+\t\t\t\t\"  'connector.url'='\" + DB_URL + \"',\" +\n+\t\t\t\t\"  'connector.table'='whatever',\" +\n+\t\t\t\t\"  'connector.read.query'='\" + testQuery + \"'\" +\n+\t\t\t\t\")\"\n+\t\t);\n+\n+\t\tStreamITCase.clear();", "originalCommit": "1597769183be673722456fb55e296d38d0fad837", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ1MDU2Nw==", "url": "https://github.com/apache/flink/pull/11986#discussion_r421450567", "bodyText": "I just copied the code from another test and I modifier it. I didn't ask myself too much why there's the need to call StreamITCase.clear()", "author": "fpompermaier", "createdAt": "2020-05-07T12:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2MzI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ2NDEzOA==", "url": "https://github.com/apache/flink/pull/11986#discussion_r421464138", "bodyText": "I understand, the code code that is there is already not good. \ud83d\ude1e", "author": "aljoscha", "createdAt": "2020-05-07T12:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2MzI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ4ODk2Mw==", "url": "https://github.com/apache/flink/pull/11986#discussion_r421488963", "bodyText": "Maybe we can merge this and open an issue to fix the tests in this class to the right way when FLIP-84 will be ready", "author": "fpompermaier", "createdAt": "2020-05-07T13:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2MzI5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NTQ4MQ==", "url": "https://github.com/apache/flink/pull/11986#discussion_r421365481", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              -- optional: SQL query / prepared statement.\n          \n          \n            \n              -- If set, it will takes over the 'connector.table' setting\n          \n          \n            \n              'connector.read.query' = 'SELECT * FROM sometable',\n          \n          \n            \n              -- optional: SQL query / prepared statement.\n          \n          \n            \n              -- If set, this will take precedence over the 'connector.table' setting\n          \n          \n            \n              'connector.read.query' = 'SELECT * FROM sometable',", "author": "aljoscha", "createdAt": "2020-05-07T09:25:17Z", "path": "docs/dev/table/connect.md", "diffHunk": "@@ -1284,7 +1284,11 @@ CREATE TABLE MyUserTable (\n   'connector.username' = 'name',\n   'connector.password' = 'password',\n   \n-  -- **followings are scan options, optional, used when reading from table**\n+  -- **followings are scan options, optional, used when reading from a table**\n+\n+  -- optional: SQL query / prepared statement.\n+  -- If set, it will takes over the 'connector.table' setting\n+  'connector.read.query' = 'SELECT * FROM sometable',", "originalCommit": "1597769183be673722456fb55e296d38d0fad837", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7bed30ebb88fa4ae3dd277b00f6ea2826fa47d60", "url": "https://github.com/apache/flink/commit/7bed30ebb88fa4ae3dd277b00f6ea2826fa47d60", "message": "[FLINK-17361] Add custom query on JDBC tables", "committedDate": "2020-05-19T15:40:37Z", "type": "commit"}, {"oid": "8c15ff1d0641386ad0151880c9e84a8853ba5cd9", "url": "https://github.com/apache/flink/commit/8c15ff1d0641386ad0151880c9e84a8853ba5cd9", "message": "[FLINK-17361] Refactor JdbcTableSourceITCase to use TableResult instead of StreamITCase\n\nUsing the static sink approach of StreamITCase is potentially\nproblematic with concurrency, plus the code is just plain nicer like\nthis.", "committedDate": "2020-05-19T15:40:55Z", "type": "commit"}, {"oid": "8c15ff1d0641386ad0151880c9e84a8853ba5cd9", "url": "https://github.com/apache/flink/commit/8c15ff1d0641386ad0151880c9e84a8853ba5cd9", "message": "[FLINK-17361] Refactor JdbcTableSourceITCase to use TableResult instead of StreamITCase\n\nUsing the static sink approach of StreamITCase is potentially\nproblematic with concurrency, plus the code is just plain nicer like\nthis.", "committedDate": "2020-05-19T15:40:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3MzU3Mw==", "url": "https://github.com/apache/flink/pull/11986#discussion_r427773573", "bodyText": "@aljoscha for the future: please use instances instead of strings", "author": "twalthr", "createdAt": "2020-05-20T06:39:22Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceITCase.java", "diffHunk": "@@ -143,20 +149,19 @@ public void testProjectableJdbcSource() throws Exception {\n \t\t\t\t\")\"\n \t\t);\n \n-\t\tStreamITCase.clear();\n-\t\ttEnv.toAppendStream(tEnv.sqlQuery(\"SELECT timestamp6_col, decimal_col FROM \" + INPUT_TABLE), Row.class)\n-\t\t\t\t.addSink(new StreamITCase.StringSink<>());\n-\t\tenv.execute();\n+\t\tTableResult tableResult = tEnv.executeSql(\"SELECT timestamp6_col, decimal_col FROM \" + INPUT_TABLE);\n+\n+\t\tList<String> results = manifestResults(tableResult);\n \n-\t\tList<String> expected =\n-\t\t\tArrays.asList(\n-\t\t\t\t\"2020-01-01T15:35:00.123456,100.1234\",\n-\t\t\t\t\"2020-01-01T15:36:01.123456,101.1234\");\n-\t\tStreamITCase.compareWithList(expected);\n+\t\tassertThat(\n+\t\t\t\tresults,\n+\t\t\t\tcontainsInAnyOrder(\n+\t\t\t\t\t\t\"2020-01-01T15:35:00.123456,100.1234\",", "originalCommit": "8c15ff1d0641386ad0151880c9e84a8853ba5cd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NDgzMg==", "url": "https://github.com/apache/flink/pull/11986#discussion_r429174832", "bodyText": "Noted, that's a very good point.", "author": "aljoscha", "createdAt": "2020-05-22T10:43:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3MzU3Mw=="}], "type": "inlineReview"}]}