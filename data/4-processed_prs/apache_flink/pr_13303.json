{"pr_number": 13303, "pr_title": "[FLINK-19098][format] Make row data converters public", "pr_createdAt": "2020-09-02T10:02:07Z", "pr_url": "https://github.com/apache/flink/pull/13303", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzMzg0OQ==", "url": "https://github.com/apache/flink/pull/13303#discussion_r490833849", "bodyText": "Add one more indent for constructor parameters.", "author": "wuchong", "createdAt": "2020-09-18T09:49:44Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java", "diffHunk": "@@ -0,0 +1,391 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.formats.json;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.table.api.TableException;\n+import org.apache.flink.table.data.DecimalData;\n+import org.apache.flink.table.data.GenericArrayData;\n+import org.apache.flink.table.data.GenericMapData;\n+import org.apache.flink.table.data.GenericRowData;\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.data.StringData;\n+import org.apache.flink.table.data.TimestampData;\n+import org.apache.flink.table.types.logical.ArrayType;\n+import org.apache.flink.table.types.logical.DecimalType;\n+import org.apache.flink.table.types.logical.LogicalType;\n+import org.apache.flink.table.types.logical.LogicalTypeFamily;\n+import org.apache.flink.table.types.logical.MapType;\n+import org.apache.flink.table.types.logical.RowType;\n+import org.apache.flink.table.types.logical.utils.LogicalTypeChecks;\n+import org.apache.flink.table.types.logical.utils.LogicalTypeUtils;\n+\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TextNode;\n+\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.lang.reflect.Array;\n+import java.math.BigDecimal;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.time.ZoneOffset;\n+import java.time.temporal.TemporalAccessor;\n+import java.time.temporal.TemporalQueries;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;\n+import static org.apache.flink.formats.json.TimeFormats.ISO8601_TIMESTAMP_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.ISO8601_TIMESTAMP_WITH_LOCAL_TIMEZONE_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIMESTAMP_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIMESTAMP_WITH_LOCAL_TIMEZONE_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIME_FORMAT;\n+\n+/** Tool class used to convert from {@link JsonNode} to {@link RowData}. **/\n+@Internal\n+public class JsonToRowDataConverters implements Serializable {\n+\n+\t/**\n+\t * Flag indicating whether to fail if a field is missing.\n+\t */\n+\tprivate final boolean failOnMissingField;\n+\n+\t/**\n+\t * Flag indicating whether to ignore invalid fields/rows (default: throw an exception).\n+\t */\n+\tprivate final boolean ignoreParseErrors;\n+\n+\t/**\n+\t * Timestamp format specification which is used to parse timestamp.\n+\t */\n+\tprivate final TimestampFormat timestampFormat;\n+\n+\tpublic JsonToRowDataConverters(\n+\t\tboolean failOnMissingField,\n+\t\tboolean ignoreParseErrors,\n+\t\tTimestampFormat timestampFormat) {", "originalCommit": "9e3523a26f23656c5d25be589b295136e20f6f48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzY4OQ==", "url": "https://github.com/apache/flink/pull/13303#discussion_r491833689", "bodyText": "Fixed this and also reverted the accidental change with the same indent issue in the constructor of JsonRowDataDeserializationSchema", "author": "crazyzhou", "createdAt": "2020-09-21T07:18:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzMzg0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTA1Nw==", "url": "https://github.com/apache/flink/pull/13303#discussion_r490835057", "bodyText": "Add serialVersionUID for serializable class.", "author": "wuchong", "createdAt": "2020-09-18T09:52:00Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java", "diffHunk": "@@ -0,0 +1,391 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.formats.json;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.table.api.TableException;\n+import org.apache.flink.table.data.DecimalData;\n+import org.apache.flink.table.data.GenericArrayData;\n+import org.apache.flink.table.data.GenericMapData;\n+import org.apache.flink.table.data.GenericRowData;\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.data.StringData;\n+import org.apache.flink.table.data.TimestampData;\n+import org.apache.flink.table.types.logical.ArrayType;\n+import org.apache.flink.table.types.logical.DecimalType;\n+import org.apache.flink.table.types.logical.LogicalType;\n+import org.apache.flink.table.types.logical.LogicalTypeFamily;\n+import org.apache.flink.table.types.logical.MapType;\n+import org.apache.flink.table.types.logical.RowType;\n+import org.apache.flink.table.types.logical.utils.LogicalTypeChecks;\n+import org.apache.flink.table.types.logical.utils.LogicalTypeUtils;\n+\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TextNode;\n+\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.lang.reflect.Array;\n+import java.math.BigDecimal;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.time.ZoneOffset;\n+import java.time.temporal.TemporalAccessor;\n+import java.time.temporal.TemporalQueries;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;\n+import static org.apache.flink.formats.json.TimeFormats.ISO8601_TIMESTAMP_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.ISO8601_TIMESTAMP_WITH_LOCAL_TIMEZONE_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIMESTAMP_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIMESTAMP_WITH_LOCAL_TIMEZONE_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIME_FORMAT;\n+\n+/** Tool class used to convert from {@link JsonNode} to {@link RowData}. **/\n+@Internal\n+public class JsonToRowDataConverters implements Serializable {", "originalCommit": "9e3523a26f23656c5d25be589b295136e20f6f48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNDEwNw==", "url": "https://github.com/apache/flink/pull/13303#discussion_r491834107", "bodyText": "Added private static final long serialVersionUID = 1L; in all the four Serializable converters.", "author": "crazyzhou", "createdAt": "2020-09-21T07:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTA1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzOTA0OA==", "url": "https://github.com/apache/flink/pull/13303#discussion_r490839048", "bodyText": "We should still keep all the parameters for equals and hashcode method. They are used in JsonFormatFactoryTest to verify the discovered format is as expected.\nThe same to JsonRowDataSerializationSchema.", "author": "wuchong", "createdAt": "2020-09-18T09:59:45Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -149,316 +114,12 @@ public boolean equals(Object o) {\n \t\t\treturn false;\n \t\t}\n \t\tJsonRowDataDeserializationSchema that = (JsonRowDataDeserializationSchema) o;\n-\t\treturn failOnMissingField == that.failOnMissingField &&\n-\t\t\t\tignoreParseErrors == that.ignoreParseErrors &&\n-\t\t\t\tresultTypeInfo.equals(that.resultTypeInfo) &&\n-\t\t\t\ttimestampFormat.equals(that.timestampFormat);", "originalCommit": "9e3523a26f23656c5d25be589b295136e20f6f48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNTMzOA==", "url": "https://github.com/apache/flink/pull/13303#discussion_r491835338", "bodyText": "Keep all the parameters as we had in these (De)SerializationSchema.", "author": "crazyzhou", "createdAt": "2020-09-21T07:22:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzOTA0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNTU4Mg==", "url": "https://github.com/apache/flink/pull/13303#discussion_r491835582", "bodyText": "Fixed a small issue in this equals method.", "author": "crazyzhou", "createdAt": "2020-09-21T07:22:41Z", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataSerializationSchema.java", "diffHunk": "@@ -110,240 +85,11 @@ public boolean equals(Object o) {\n \t\t\treturn false;\n \t\t}\n \t\tJsonRowDataSerializationSchema that = (JsonRowDataSerializationSchema) o;\n-\t\treturn rowType.equals(that.rowType) && timestampFormat.equals(timestampFormat);\n+\t\treturn rowType.equals(that.rowType) && timestampFormat.equals(that.timestampFormat);", "originalCommit": "085c67e7df971456b806b8e2c86ad47059d77bfe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e9cf8d79a242dcf9d141ce7741e18b1a6d356c9d", "url": "https://github.com/apache/flink/commit/e9cf8d79a242dcf9d141ce7741e18b1a6d356c9d", "message": "Merge branch 'master' into flink-19098", "committedDate": "2020-09-23T03:09:44Z", "type": "forcePushed"}, {"oid": "5cb102050c173600cf1c537a6bcc41b110b5ad1e", "url": "https://github.com/apache/flink/commit/5cb102050c173600cf1c537a6bcc41b110b5ad1e", "message": "[FLINK-19098][json][csv] Make RowData CSV and JSON converters public\n\nThis closes #13303", "committedDate": "2020-09-24T07:07:05Z", "type": "commit"}, {"oid": "5cb102050c173600cf1c537a6bcc41b110b5ad1e", "url": "https://github.com/apache/flink/commit/5cb102050c173600cf1c537a6bcc41b110b5ad1e", "message": "[FLINK-19098][json][csv] Make RowData CSV and JSON converters public\n\nThis closes #13303", "committedDate": "2020-09-24T07:07:05Z", "type": "forcePushed"}, {"oid": "d1b9c21ec9330791b02f6836fed0b36c4d62a253", "url": "https://github.com/apache/flink/commit/d1b9c21ec9330791b02f6836fed0b36c4d62a253", "message": "fix checkstyle", "committedDate": "2020-09-24T08:57:52Z", "type": "commit"}, {"oid": "e65696be08fc766fb96afc45f5c6ea9cbd91e99b", "url": "https://github.com/apache/flink/commit/e65696be08fc766fb96afc45f5c6ea9cbd91e99b", "message": "fix failed test", "committedDate": "2020-09-25T03:04:34Z", "type": "commit"}]}