{"pr_number": 11414, "pr_title": "[FLINK-16606][python] Throw exceptions for the data types which are not currently supported", "pr_createdAt": "2020-03-16T08:14:25Z", "pr_url": "https://github.com/apache/flink/pull/11414", "timeline": [{"oid": "ba28e3bdcaa2866be33d4fca7780b3339b2437a2", "url": "https://github.com/apache/flink/commit/ba28e3bdcaa2866be33d4fca7780b3339b2437a2", "message": "[FLINK-16606][python] Throw exceptions for the data types which are not currently supported", "committedDate": "2020-03-16T13:46:34Z", "type": "forcePushed"}, {"oid": "6223ae638613048a8f2df11b2fadc9f0165b9121", "url": "https://github.com/apache/flink/commit/6223ae638613048a8f2df11b2fadc9f0165b9121", "message": "[FLINK-16606][python] Throw exceptions for the data types which are not currently supported", "committedDate": "2020-03-17T02:11:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ2MzAwNQ==", "url": "https://github.com/apache/flink/pull/11414#discussion_r393463005", "bodyText": "Maybe also add python notice document in the related APIs?", "author": "hequn8128", "createdAt": "2020-03-17T06:13:47Z", "path": "flink-python/pyflink/table/types.py", "diffHunk": "@@ -1621,33 +1621,77 @@ def _to_java_type(data_type):\n                 BigIntType: Types.LONG(),\n                 FloatType: Types.FLOAT(),\n                 DoubleType: Types.DOUBLE(),\n-                DecimalType: Types.DECIMAL(),\n                 DateType: Types.SQL_DATE(),\n-                TimeType: Types.SQL_TIME(),\n-                TimestampType: Types.SQL_TIMESTAMP(),\n-                LocalZonedTimestampType: Types.SQL_TIMESTAMP(),\n-                CharType: Types.STRING(),\n-                VarCharType: Types.STRING(),\n-                BinaryType: Types.PRIMITIVE_ARRAY(Types.BYTE()),\n-                VarBinaryType: Types.PRIMITIVE_ARRAY(Types.BYTE())\n             }\n \n-    # NullType\n-    if isinstance(data_type, NullType):\n-        # null type is still not supported in Java\n-        raise NotImplementedError\n-\n     # basic types\n-    elif type(data_type) in _python_java_types_mapping:\n+    if type(data_type) in _python_java_types_mapping:\n         return _python_java_types_mapping[type(data_type)]\n \n+    # DecimalType\n+    elif isinstance(data_type, DecimalType):\n+        if data_type.precision == 38 and data_type.scale == 18:\n+            return Types.DECIMAL()\n+        else:\n+            raise TypeError(\"The precision must be 38 and the scale must be 18 for DecimalType, \"\n+                            \"got %s\" % repr(data_type))\n+\n+    # TimeType\n+    elif isinstance(data_type, TimeType):\n+        if data_type.precision == 0:\n+            return Types.SQL_TIME()\n+        else:\n+            raise TypeError(\"The precision must be 0 for TimeType, got %s\" % repr(data_type))\n+\n+    # TimestampType\n+    elif isinstance(data_type, TimestampType):\n+        if data_type.precision == 3:\n+            return Types.SQL_TIMESTAMP()\n+        else:\n+            raise TypeError(\"The precision must be 3 for TimestampType, got %s\" % repr(data_type))\n+\n+    # LocalZonedTimestampType\n+    elif isinstance(data_type, LocalZonedTimestampType):\n+        if data_type.precision == 3:\n+            return gateway.jvm.org.apache.flink.api.common.typeinfo.Types.INSTANT\n+        else:\n+            raise TypeError(\"The precision must be 3 for LocalZonedTimestampType, got %s\"\n+                            % repr(data_type))\n+\n+    # VarCharType\n+    elif isinstance(data_type, VarCharType):\n+        if data_type.length == 0x7fffffff:\n+            return Types.STRING()\n+        else:\n+            raise TypeError(\"The length limit must be 0x7fffffff(2147483647) for VarCharType, \"\n+                            \"got %s\" % repr(data_type))\n+\n+    # VarBinaryType\n+    elif isinstance(data_type, VarBinaryType):\n+        if data_type.length == 0x7fffffff:\n+            return Types.PRIMITIVE_ARRAY(Types.BYTE())\n+        else:\n+            raise TypeError(\"The length limit must be 0x7fffffff(2147483647) for VarBinaryType, \"\n+                            \"got %s\" % repr(data_type))\n+\n     # YearMonthIntervalType\n     elif isinstance(data_type, YearMonthIntervalType):\n-        return Types.INTERVAL_MONTHS()\n+        if data_type.resolution == YearMonthIntervalType.YearMonthResolution.MONTH and \\\n+                data_type.precision == 2:\n+            return Types.INTERVAL_MONTHS()\n+        else:\n+            raise TypeError(\"The resolution must be YearMonthResolution.MONTH and the precision \"\n+                            \"must be 2 for YearMonthIntervalType, got %s\" % repr(data_type))\n \n     # DayTimeIntervalType\n     elif isinstance(data_type, DayTimeIntervalType):\n-        return Types.INTERVAL_MILLIS()\n+        if data_type.resolution == DayTimeIntervalType.DayTimeResolution.SECOND and \\\n+                data_type.day_precision == 2 and data_type.fractional_precision == 3:\n+            return Types.INTERVAL_MILLIS()\n+        else:\n+            raise TypeError(\"The resolution must be DayTimeResolution.SECOND, the day_precision \"\n+                            \"must be 2 and the fractional_precision must be 3 for \"\n+                            \"DayTimeIntervalType, got %s\" % repr(data_type))", "originalCommit": "6223ae638613048a8f2df11b2fadc9f0165b9121", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9052711c864cb9c8cdfe3d0f9a3d309e14ba9b16", "url": "https://github.com/apache/flink/commit/9052711c864cb9c8cdfe3d0f9a3d309e14ba9b16", "message": "[FLINK-16606][python] Support LocalZonedTimestampType for blink planner", "committedDate": "2020-03-18T09:12:36Z", "type": "forcePushed"}, {"oid": "21170bf28aa918f2f95331c929dd5d1bd0aee364", "url": "https://github.com/apache/flink/commit/21170bf28aa918f2f95331c929dd5d1bd0aee364", "message": "[FLINK-16606][python] Throw exceptions for the data types which are not currently supported", "committedDate": "2020-03-18T09:21:02Z", "type": "commit"}, {"oid": "21170bf28aa918f2f95331c929dd5d1bd0aee364", "url": "https://github.com/apache/flink/commit/21170bf28aa918f2f95331c929dd5d1bd0aee364", "message": "[FLINK-16606][python] Throw exceptions for the data types which are not currently supported", "committedDate": "2020-03-18T09:21:02Z", "type": "forcePushed"}]}