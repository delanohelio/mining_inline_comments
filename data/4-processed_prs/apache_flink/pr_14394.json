{"pr_number": 14394, "pr_title": "[FLINK-19013][state-backends] Add start/end logs for state restoration", "pr_createdAt": "2020-12-15T17:30:54Z", "pr_url": "https://github.com/apache/flink/pull/14394", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzNzAwNg==", "url": "https://github.com/apache/flink/pull/14394#discussion_r544037006", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tlogger.info(\"Finish to build heap keyed state-backend.\");\n          \n          \n            \n            \t\t\tlogger.info(\"Finished to build heap keyed state-backend.\");", "author": "rmetzger", "createdAt": "2020-12-16T06:45:07Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/heap/HeapKeyedStateBackendBuilder.java", "diffHunk": "@@ -112,6 +112,7 @@ public HeapKeyedStateBackendBuilder(\n \t\t\tkeyContext);\n \t\ttry {\n \t\t\trestoreOperation.restore();\n+\t\t\tlogger.info(\"Finish to build heap keyed state-backend.\");", "originalCommit": "95f0ec70e5ded62603dcde72a4eac42ea1116b02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzNzEwMQ==", "url": "https://github.com/apache/flink/pull/14394#discussion_r544037101", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tLOG.info(\"Start to restore from state handle: {}.\", keyedStateHandle);\n          \n          \n            \n            \t\t\tLOG.info(\"Starting to restore from state handle: {}.\", keyedStateHandle);", "author": "rmetzger", "createdAt": "2020-12-16T06:45:19Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/heap/HeapRestoreOperation.java", "diffHunk": "@@ -122,6 +126,7 @@ public Void restore() throws Exception {\n \t\t\t\tthrow unexpectedStateHandleException(KeyGroupsStateHandle.class, keyedStateHandle.getClass());\n \t\t\t}\n \n+\t\t\tLOG.info(\"Start to restore from state handle: {}.\", keyedStateHandle);", "originalCommit": "95f0ec70e5ded62603dcde72a4eac42ea1116b02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzNzIyOQ==", "url": "https://github.com/apache/flink/pull/14394#discussion_r544037229", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tLOG.info(\"Finish to restore from state handle: {}.\", keyedStateHandle);\n          \n          \n            \n            \t\t\t\tLOG.info(\"Finished restoring from state handle: {}.\", keyedStateHandle);", "author": "rmetzger", "createdAt": "2020-12-16T06:45:35Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/heap/HeapRestoreOperation.java", "diffHunk": "@@ -164,6 +169,7 @@ public Void restore() throws Exception {\n \t\t\t\t\tkvStatesById, restoredMetaInfos.size(),\n \t\t\t\t\tserializationProxy.getReadVersion(),\n \t\t\t\t\tserializationProxy.isUsingKeyGroupCompression());\n+\t\t\t\tLOG.info(\"Finish to restore from state handle: {}.\", keyedStateHandle);", "originalCommit": "95f0ec70e5ded62603dcde72a4eac42ea1116b02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzODE4OA==", "url": "https://github.com/apache/flink/pull/14394#discussion_r544038188", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tlogger.warn(\"Failed to instance base path for RocksDB: \" + instanceBasePath, ex);\n          \n          \n            \n            \t\t\t\tlogger.warn(\"Failed to delete base path for RocksDB: \" + instanceBasePath, ex);\n          \n      \n    \n    \n  \n\nNot sure, maybe I don't understand what the code is doing here.", "author": "rmetzger", "createdAt": "2020-12-16T06:46:40Z", "path": "flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBKeyedStateBackendBuilder.java", "diffHunk": "@@ -317,21 +314,22 @@ private static void checkAndCreateDirectory(File directory) throws IOException {\n \t\t\ttry {\n \t\t\t\tFileUtils.deleteDirectory(instanceBasePath);\n \t\t\t} catch (Exception ex) {\n-\t\t\t\tLOG.warn(\"Failed to instance base path for RocksDB: \" + instanceBasePath, ex);\n+\t\t\t\tlogger.warn(\"Failed to instance base path for RocksDB: \" + instanceBasePath, ex);", "originalCommit": "95f0ec70e5ded62603dcde72a4eac42ea1116b02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzODQ4MA==", "url": "https://github.com/apache/flink/pull/14394#discussion_r544038480", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tlogger.info(\"Finish to build RocksDB keyed state-backend at {}.\", instanceBasePath);\n          \n          \n            \n            \t\tlogger.info(\"Finished building RocksDB keyed state-backend at {}.\", instanceBasePath);", "author": "rmetzger", "createdAt": "2020-12-16T06:46:58Z", "path": "flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBKeyedStateBackendBuilder.java", "diffHunk": "@@ -317,21 +314,22 @@ private static void checkAndCreateDirectory(File directory) throws IOException {\n \t\t\ttry {\n \t\t\t\tFileUtils.deleteDirectory(instanceBasePath);\n \t\t\t} catch (Exception ex) {\n-\t\t\t\tLOG.warn(\"Failed to instance base path for RocksDB: \" + instanceBasePath, ex);\n+\t\t\t\tlogger.warn(\"Failed to instance base path for RocksDB: \" + instanceBasePath, ex);\n \t\t\t}\n \t\t\t// Log and rethrow\n \t\t\tif (e instanceof BackendBuildingException) {\n \t\t\t\tthrow (BackendBuildingException) e;\n \t\t\t} else {\n \t\t\t\tString errMsg = \"Caught unexpected exception.\";\n-\t\t\t\tLOG.error(errMsg, e);\n+\t\t\t\tlogger.error(errMsg, e);\n \t\t\t\tthrow new BackendBuildingException(errMsg, e);\n \t\t\t}\n \t\t}\n \t\tInternalKeyContext<K> keyContext = new InternalKeyContextImpl<>(\n \t\t\tkeyGroupRange,\n \t\t\tnumberOfKeyGroups\n \t\t);\n+\t\tlogger.info(\"Finish to build RocksDB keyed state-backend at {}.\", instanceBasePath);", "originalCommit": "95f0ec70e5ded62603dcde72a4eac42ea1116b02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzODYwMQ==", "url": "https://github.com/apache/flink/pull/14394#discussion_r544038601", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tlogger.info(\"Start to restore from state handle: {}.\", currentKeyGroupsStateHandle);\n          \n          \n            \n            \t\t\tlogger.info(\"Starting to restore from state handle: {}.\", currentKeyGroupsStateHandle);", "author": "rmetzger", "createdAt": "2020-12-16T06:47:08Z", "path": "flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/restore/RocksDBFullRestoreOperation.java", "diffHunk": "@@ -162,11 +162,13 @@ public RocksDBRestoreResult restore()\n \tprivate void restoreKeyGroupsInStateHandle()\n \t\tthrows IOException, StateMigrationException, RocksDBException {\n \t\ttry {\n+\t\t\tlogger.info(\"Start to restore from state handle: {}.\", currentKeyGroupsStateHandle);", "originalCommit": "95f0ec70e5ded62603dcde72a4eac42ea1116b02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzODgxMQ==", "url": "https://github.com/apache/flink/pull/14394#discussion_r544038811", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tlogger.info(\"Finish to restore from state handle: {}.\", currentKeyGroupsStateHandle);\n          \n          \n            \n            \t\t\tlogger.info(\"Finished restoring from state handle: {}.\", currentKeyGroupsStateHandle);", "author": "rmetzger", "createdAt": "2020-12-16T06:47:19Z", "path": "flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/restore/RocksDBFullRestoreOperation.java", "diffHunk": "@@ -162,11 +162,13 @@ public RocksDBRestoreResult restore()\n \tprivate void restoreKeyGroupsInStateHandle()\n \t\tthrows IOException, StateMigrationException, RocksDBException {\n \t\ttry {\n+\t\t\tlogger.info(\"Start to restore from state handle: {}.\", currentKeyGroupsStateHandle);\n \t\t\tcurrentStateHandleInStream = currentKeyGroupsStateHandle.openInputStream();\n \t\t\tcancelStreamRegistry.registerCloseable(currentStateHandleInStream);\n \t\t\tcurrentStateHandleInView = new DataInputViewStreamWrapper(currentStateHandleInStream);\n \t\t\trestoreKVStateMetaData();\n \t\t\trestoreKVStateData();\n+\t\t\tlogger.info(\"Finish to restore from state handle: {}.\", currentKeyGroupsStateHandle);", "originalCommit": "95f0ec70e5ded62603dcde72a4eac42ea1116b02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzOTE4Mg==", "url": "https://github.com/apache/flink/pull/14394#discussion_r544039182", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tlogger.info(\"Start to restore from state handle: {} with rescaling.\", rawStateHandle);\n          \n          \n            \n            \t\t\tlogger.info(\"Starting to restore from state handle: {} with rescaling.\", rawStateHandle);", "author": "rmetzger", "createdAt": "2020-12-16T06:47:50Z", "path": "flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/restore/RocksDBIncrementalRestoreOperation.java", "diffHunk": "@@ -295,6 +294,7 @@ private void restoreWithRescaling(Collection<KeyedStateHandle> restoreStateHandl\n \t\t\t\tthrow unexpectedStateHandleException(IncrementalRemoteKeyedStateHandle.class, rawStateHandle.getClass());\n \t\t\t}\n \n+\t\t\tlogger.info(\"Start to restore from state handle: {} with rescaling.\", rawStateHandle);", "originalCommit": "95f0ec70e5ded62603dcde72a4eac42ea1116b02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzOTM1NA==", "url": "https://github.com/apache/flink/pull/14394#discussion_r544039354", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tlogger.info(\"Finish to restore from state handle: {} with rescaling.\", rawStateHandle);\n          \n          \n            \n            \t\t\t\tlogger.info(\"Finished restoring from state handle: {} with rescaling.\", rawStateHandle);", "author": "rmetzger", "createdAt": "2020-12-16T06:48:01Z", "path": "flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/restore/RocksDBIncrementalRestoreOperation.java", "diffHunk": "@@ -330,6 +330,7 @@ private void restoreWithRescaling(Collection<KeyedStateHandle> restoreStateHandl\n \t\t\t\t\t\t}\n \t\t\t\t\t} // releases native iterator resources\n \t\t\t\t}\n+\t\t\t\tlogger.info(\"Finish to restore from state handle: {} with rescaling.\", rawStateHandle);", "originalCommit": "95f0ec70e5ded62603dcde72a4eac42ea1116b02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "85cde0a983ed4f07511ae7e72835a60b78a1e525", "url": "https://github.com/apache/flink/commit/85cde0a983ed4f07511ae7e72835a60b78a1e525", "message": "[FLINK-19013][state-backends] Add start/end logs for state restoration", "committedDate": "2020-12-17T08:06:01Z", "type": "commit"}, {"oid": "85cde0a983ed4f07511ae7e72835a60b78a1e525", "url": "https://github.com/apache/flink/commit/85cde0a983ed4f07511ae7e72835a60b78a1e525", "message": "[FLINK-19013][state-backends] Add start/end logs for state restoration", "committedDate": "2020-12-17T08:06:01Z", "type": "forcePushed"}]}