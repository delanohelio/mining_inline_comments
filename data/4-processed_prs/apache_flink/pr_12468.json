{"pr_number": 12468, "pr_title": "[FLINK-18075] Wrap the SerializationSchema in KafkaSerializationSchema in Kafka connector", "pr_createdAt": "2020-06-03T14:17:43Z", "pr_url": "https://github.com/apache/flink/pull/12468", "timeline": [{"oid": "8b2551e05361508e37d50eabebd7cfaab59c7b5b", "url": "https://github.com/apache/flink/commit/8b2551e05361508e37d50eabebd7cfaab59c7b5b", "message": "[FLINK-18075] Wrap the SerializationSchema in KafkaSerializationSchema in Kafka connector", "committedDate": "2020-06-04T11:29:49Z", "type": "forcePushed"}, {"oid": "fc928ac87703a66420313a96de63f030da8eae18", "url": "https://github.com/apache/flink/commit/fc928ac87703a66420313a96de63f030da8eae18", "message": "[FLINK-18075] Wrap the SerializationSchema in KafkaSerializationSchema in Kafka connector", "committedDate": "2020-06-04T11:31:53Z", "type": "forcePushed"}, {"oid": "849057fec51dac559f98ae8fdddc9b917ad310fd", "url": "https://github.com/apache/flink/commit/849057fec51dac559f98ae8fdddc9b917ad310fd", "message": "[FLINK-18075] Remove deprecation of Kafka producer ctor that take\nSerializationSchema\n\nSerializationSchema is an important interface that is widely spread and\nused in other components such as Table API. It is also the most common\ninterface for reusable interfaces. Therefore we should support it long\nterm in our connectors. This commit removes the deprecation of ctors\nthat take this interface.\n\nMoreover it adds the most general ctor that takes all producer\nconfiguration options along with SerializationSchema. This makes it\nfeature equivalent with KafkaSerializationSchema in respect to\nconfiguration of the producer.", "committedDate": "2020-06-04T11:34:10Z", "type": "commit"}, {"oid": "838117bddadb6b0f5cfd1c1376cd7bc1435e4020", "url": "https://github.com/apache/flink/commit/838117bddadb6b0f5cfd1c1376cd7bc1435e4020", "message": "[FLINK-18075] Wrap the SerializationSchema in KafkaSerializationSchema in Kafka connector", "committedDate": "2020-06-04T11:34:12Z", "type": "forcePushed"}, {"oid": "7bf026a4e23a89df952f6b361ab8fe435c0a612d", "url": "https://github.com/apache/flink/commit/7bf026a4e23a89df952f6b361ab8fe435c0a612d", "message": "[FLINK-18075] Wrap the SerializationSchema in KafkaSerializationSchema in Kafka connector", "committedDate": "2020-06-04T11:35:55Z", "type": "commit"}, {"oid": "7bf026a4e23a89df952f6b361ab8fe435c0a612d", "url": "https://github.com/apache/flink/commit/7bf026a4e23a89df952f6b361ab8fe435c0a612d", "message": "[FLINK-18075] Wrap the SerializationSchema in KafkaSerializationSchema in Kafka connector", "committedDate": "2020-06-04T11:35:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEwMzQ3Mg==", "url": "https://github.com/apache/flink/pull/12468#discussion_r435103472", "bodyText": "Should we test at least the two schemas that we want to support in the future?", "author": "aljoscha", "createdAt": "2020-06-04T09:04:59Z", "path": "flink-connectors/flink-connector-kafka-0.10/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducerTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.connectors.kafka;\n+\n+import org.apache.flink.api.common.serialization.SerializationSchema;\n+import org.apache.flink.api.common.typeutils.base.IntSerializer;\n+import org.apache.flink.runtime.jobgraph.OperatorID;\n+import org.apache.flink.streaming.api.operators.StreamSink;\n+import org.apache.flink.streaming.util.OneInputStreamOperatorTestHarness;\n+\n+import org.junit.Test;\n+\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import static org.junit.Assert.assertThat;\n+\n+/**\n+ * Tests for {@link FlinkKafkaProducer010}.\n+ */\n+public class FlinkKafkaProducerTest {", "originalCommit": "4ae1da7c5aee0ff73e4461f0d9235dd60857f1d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYyNjc0NQ==", "url": "https://github.com/apache/flink/pull/12468#discussion_r436626745", "bodyText": "I am doing that already. The KafkaSerializationSchema is supported only in the universal connector.\nSee https://github.com/apache/flink/pull/12468/files#diff-48ac804bdf7ea70d2485ad2351c26cfc", "author": "dawidwys", "createdAt": "2020-06-08T11:27:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEwMzQ3Mg=="}], "type": "inlineReview"}]}