{"pr_number": 13117, "pr_title": "[FLINK-18863][python] Support read_text_file() and print() interface \u2026", "pr_createdAt": "2020-08-11T09:10:33Z", "pr_url": "https://github.com/apache/flink/pull/13117", "timeline": [{"oid": "b170d79e97fa7bfe79bd7031444296512c185a58", "url": "https://github.com/apache/flink/commit/b170d79e97fa7bfe79bd7031444296512c185a58", "message": "[FLINK-18863][python] Support read_text_file() and print() interface for Python DataStream API.", "committedDate": "2020-08-11T09:50:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3MjkxOQ==", "url": "https://github.com/apache/flink/pull/13117#discussion_r468472919", "bodyText": "Adds note that this API is not fault-tolerant and only used in test scenarios.", "author": "hequn8128", "createdAt": "2020-08-11T10:12:53Z", "path": "flink-python/pyflink/datastream/stream_execution_environment.py", "diffHunk": "@@ -465,6 +465,19 @@ def add_source(self, source_func: SourceFunction, source_name: str = 'Custom Sou\n                                                                        j_type_info)\n         return DataStream(j_data_stream=j_data_stream)\n \n+    def read_text_file(self, file_path: str, charset_name: str = \"UTF-8\") -> DataStream:", "originalCommit": "b170d79e97fa7bfe79bd7031444296512c185a58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzMDU5NA==", "url": "https://github.com/apache/flink/pull/13117#discussion_r468530594", "bodyText": "Yes, it would be better to inform user it is not suitable for production.", "author": "shuiqiangchen", "createdAt": "2020-08-11T12:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3MjkxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxMjE1NA==", "url": "https://github.com/apache/flink/pull/13117#discussion_r468512154", "bodyText": "The two methods are not supposed to be added in this PR?", "author": "hequn8128", "createdAt": "2020-08-11T11:32:13Z", "path": "flink-python/pyflink/datastream/data_stream.py", "diffHunk": "@@ -483,7 +518,17 @@ def reduce(self, func: Union[Callable, ReduceFunction]) -> 'DataStream':\n             j_python_data_stream_scalar_function_operator\n         ))\n \n-    def _values(self):\n+    def key_by(self, key_selector: Union[Callable, KeySelector],", "originalCommit": "b170d79e97fa7bfe79bd7031444296512c185a58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "365dd3a748cd086908cb0ddea64c3a7ad9ed73f4", "url": "https://github.com/apache/flink/commit/365dd3a748cd086908cb0ddea64c3a7ad9ed73f4", "message": "[FLINK-18863][python] Support read_text_file() and print() interface for Python DataStream API.", "committedDate": "2020-08-11T12:02:12Z", "type": "forcePushed"}, {"oid": "253c7f3594daaff158043874bbe4401ff9ad0e81", "url": "https://github.com/apache/flink/commit/253c7f3594daaff158043874bbe4401ff9ad0e81", "message": "[FLINK-18863][python] Support read_text_file() and print() interface for Python DataStream API.", "committedDate": "2020-08-11T12:06:05Z", "type": "commit"}, {"oid": "253c7f3594daaff158043874bbe4401ff9ad0e81", "url": "https://github.com/apache/flink/commit/253c7f3594daaff158043874bbe4401ff9ad0e81", "message": "[FLINK-18863][python] Support read_text_file() and print() interface for Python DataStream API.", "committedDate": "2020-08-11T12:06:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk2MjExNA==", "url": "https://github.com/apache/flink/pull/13117#discussion_r468962114", "bodyText": "Maybe we can extract an assertEqualWithSort() method and reuse the method across all tests. We can improve this in a separate PR.", "author": "hequn8128", "createdAt": "2020-08-12T02:01:35Z", "path": "flink-python/pyflink/datastream/tests/test_stream_execution_environment.py", "diffHunk": "@@ -254,3 +254,20 @@ def test_add_custom_source(self):\n         results.sort()\n         expected.sort()\n         self.assertEqual(expected, results)\n+\n+    def test_read_text_file(self):\n+        texts = [\"Mike\", \"Marry\", \"Ted\", \"Jack\", \"Bob\", \"Henry\"]\n+        text_file_path = self.tempdir + '/text_file'\n+        with open(text_file_path, 'a') as f:\n+            for text in texts:\n+                f.write(text)\n+                f.write('\\n')\n+\n+        ds = self.env.read_text_file(text_file_path)\n+        test_sink = DataStreamTestSinkFunction()\n+        ds.add_sink(test_sink)\n+        self.env.execute(\"test read text file\")\n+        results = test_sink.get_results()\n+        results.sort()\n+        texts.sort()\n+        self.assertEqual(texts, results)", "originalCommit": "253c7f3594daaff158043874bbe4401ff9ad0e81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk2MjY0Ng==", "url": "https://github.com/apache/flink/pull/13117#discussion_r468962646", "bodyText": "Sure, I will do it in the later PR.", "author": "shuiqiangchen", "createdAt": "2020-08-12T02:03:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk2MjExNA=="}], "type": "inlineReview"}]}