{"pr_number": 11305, "pr_title": "[FLINK-16410][e2e][build] Add explicit flink-runtime dependency", "pr_createdAt": "2020-03-04T09:30:46Z", "pr_url": "https://github.com/apache/flink/pull/11305", "timeline": [{"oid": "034f909447624f3392ad56ceec53ebe3d5c0bc70", "url": "https://github.com/apache/flink/commit/034f909447624f3392ad56ceec53ebe3d5c0bc70", "message": "[FLINK-16410][e2e][build] Add explicit flink-runtime dependency", "committedDate": "2020-03-04T09:28:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY2NjIwMg==", "url": "https://github.com/apache/flink/pull/11305#discussion_r387666202", "bodyText": "Which change made it necessary to add flink-runtime as a compile time dependency? Asked differently, where does PrometheusReporterEndToEndITCase need the org.apache.flink.runtime.rest.messages.RequestBody?", "author": "tillrohrmann", "createdAt": "2020-03-04T13:30:20Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/pom.xml", "diffHunk": "@@ -55,6 +55,12 @@ under the License.\n \t\t\t<artifactId>flink-test-utils-junit</artifactId>\n \t\t\t<scope>compile</scope>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.apache.flink</groupId>\n+\t\t\t<artifactId>flink-runtime_${scala.binary.version}</artifactId>\n+\t\t\t<version>${project.version}</version>\n+\t\t\t<scope>compile</scope>\n+\t\t</dependency>", "originalCommit": "034f909447624f3392ad56ceec53ebe3d5c0bc70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NTc5OA==", "url": "https://github.com/apache/flink/pull/11305#discussion_r387675798", "bodyText": "It doesn't, at least not directly.\nflink-end-to-end-tests-common requires flink-runtime for some REST stuff, but has no direct dependency; it only has the provided flink-dist and uses the transitive flink-runtime dependency, which is then also set to provided.\nThe shade-plugin then creates a fairly wacky dependency reduced pom; transitive provided dependencies result in an exclusion for said dependency, making it appear as if flink-end-to-end-tests-common does not have a dependency o flink-runtime anymore.\nExcerpt from the dependeny-reduced-pom.xml:\n<dependency>\n      <groupId>org.apache.flink</groupId>\n      <artifactId>flink-dist_2.11</artifactId>\n      <version>1.11-SNAPSHOT</version>\n      <scope>provided</scope>\n      <exclusions>\n        ...\n        <exclusion>\n          <artifactId>flink-runtime_2.11</artifactId>\n          <groupId>org.apache.flink</groupId>\n        </exclusion>\n        ...\n\nThen, when the e2e test runs and tries to use REST stuff the classes obviously aren't on the classpath.\nThe new runtime dependency ensures that this dependency is retained after shading.", "author": "zentol", "createdAt": "2020-03-04T13:47:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY2NjIwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NzgxMg==", "url": "https://github.com/apache/flink/pull/11305#discussion_r387677812", "bodyText": "As for why this was discovered now, when the prometheus/metrics e2e tests were working against the FlinkDistribution they weren't reliant on any REST calls, and didn't run into the issue. After the migration to the FlinkResource they implicitly gained a dependency on REST calls, hence the problem.\nExisting users of the FlinkResource, (i.e., kafka) have a separate runtime dependencies pulled in transitively via some other dependency.", "author": "zentol", "createdAt": "2020-03-04T13:51:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY2NjIwMg=="}], "type": "inlineReview"}]}