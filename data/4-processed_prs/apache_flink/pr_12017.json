{"pr_number": 12017, "pr_title": "[FLINK-17452][hive] Support creating Hive tables with constraints", "pr_createdAt": "2020-05-07T09:09:51Z", "pr_url": "https://github.com/apache/flink/pull/12017", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NjIwNQ==", "url": "https://github.com/apache/flink/pull/12017#discussion_r422466205", "bodyText": "Can client do more things to include upper couple of lines?", "author": "JingsongLi", "createdAt": "2020-05-09T07:54:35Z", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -374,8 +375,30 @@ public void createTable(ObjectPath tablePath, CatalogBaseTable table, boolean ig\n \n \t\tTable hiveTable = instantiateHiveTable(tablePath, table);\n \n+\t\tUniqueConstraint pkConstraint = null;\n+\t\tList<String> notNullCols = new ArrayList<>();\n+\t\tboolean isGeneric = isGenericForCreate(table.getOptions());\n+\t\tif (!isGeneric) {\n+\t\t\tpkConstraint = table.getSchema().getPrimaryKey().orElse(null);\n+\t\t\tfor (int i = 0; i < table.getSchema().getFieldDataTypes().length; i++) {\n+\t\t\t\tif (!table.getSchema().getFieldDataTypes()[i].getLogicalType().isNullable()) {\n+\t\t\t\t\tnotNullCols.add(table.getSchema().getFieldNames()[i]);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n \t\ttry {\n-\t\t\tclient.createTable(hiveTable);\n+\t\t\tif (pkConstraint != null || !notNullCols.isEmpty()) {\n+\t\t\t\t// for now we just create constraints that are DISABLE, NOVALIDATE, RELY\n+\t\t\t\tByte[] pkTraits = new Byte[pkConstraint == null ? 0 : pkConstraint.getColumns().size()];\n+\t\t\t\tArrays.fill(pkTraits, HiveTableUtil.relyConstraint((byte) 0));\n+\t\t\t\tByte[] nnTraits = new Byte[notNullCols.size()];\n+\t\t\t\tArrays.fill(nnTraits, HiveTableUtil.relyConstraint((byte) 0));\n+\t\t\t\tclient.createTableWithConstraints(hiveTable, hiveConf,", "originalCommit": "e31740d8c7693906aae2ace9336e943a7ad2e186", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NzQ3Mg==", "url": "https://github.com/apache/flink/pull/12017#discussion_r422467472", "bodyText": "The client is meant to be just a wrapper of IMetaStoreClient. So I think it's more natural to keep such logic in HiveCatalog. We can add util method if that logic has to be repeated somewhere else.", "author": "lirui-apache", "createdAt": "2020-05-09T08:08:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NjIwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NjQ5NQ==", "url": "https://github.com/apache/flink/pull/12017#discussion_r422466495", "bodyText": "Too many parameters should be one parameter one line, both call and declaration are like this.", "author": "JingsongLi", "createdAt": "2020-05-09T07:57:38Z", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/client/HiveShimV310.java", "diffHunk": "@@ -239,4 +241,54 @@ public Writable hivePrimitiveToWritable(Object value) {\n \t\t}\n \t\tthrow new FlinkHiveException(\"Unsupported primitive java value of class \" + value.getClass().getName());\n \t}\n+\n+\t@Override\n+\tpublic void createTableWithConstraints(IMetaStoreClient client, Table table, Configuration conf,", "originalCommit": "e31740d8c7693906aae2ace9336e943a7ad2e186", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "25639f2435dc6aacfea1493f84a16880a69be6d3", "url": "https://github.com/apache/flink/commit/25639f2435dc6aacfea1493f84a16880a69be6d3", "message": "[FLINK-17452][hive] Support creating Hive tables with constraints", "committedDate": "2020-05-09T08:02:59Z", "type": "commit"}, {"oid": "185f1aa3a6f4cc739d0120828b739b05b582b7e7", "url": "https://github.com/apache/flink/commit/185f1aa3a6f4cc739d0120828b739b05b582b7e7", "message": "fix code style", "committedDate": "2020-05-09T08:16:46Z", "type": "commit"}, {"oid": "185f1aa3a6f4cc739d0120828b739b05b582b7e7", "url": "https://github.com/apache/flink/commit/185f1aa3a6f4cc739d0120828b739b05b582b7e7", "message": "fix code style", "committedDate": "2020-05-09T08:16:46Z", "type": "forcePushed"}]}