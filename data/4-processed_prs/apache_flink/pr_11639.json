{"pr_number": 11639, "pr_title": "[FLINK-16626][runtime] Prevent REST handler from being closed more than once", "pr_createdAt": "2020-04-05T14:50:58Z", "pr_url": "https://github.com/apache/flink/pull/11639", "timeline": [{"oid": "411e4d6f888dce145467d8d4921a5f2e57cf0649", "url": "https://github.com/apache/flink/commit/411e4d6f888dce145467d8d4921a5f2e57cf0649", "message": "[FLINK-16626][runtime] Prevent REST handler from being closed more than once", "committedDate": "2020-04-05T14:42:29Z", "type": "commit"}, {"oid": "3d2868f287cd4df7bf4d71947a2f04d482a936cf", "url": "https://github.com/apache/flink/commit/3d2868f287cd4df7bf4d71947a2f04d482a936cf", "message": "[FLINK-16626][flink-yarn-tests] Add job cancellation test", "committedDate": "2020-04-05T14:43:35Z", "type": "commit"}, {"oid": "6cec9f68ac5dee45acece3f188ec687d3b87a5f2", "url": "https://github.com/apache/flink/commit/6cec9f68ac5dee45acece3f188ec687d3b87a5f2", "message": "[FLINK-16626][minor] Fixed code style warning", "committedDate": "2020-04-05T14:58:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1MzI5OA==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404153298", "bodyText": "Please revert this.", "author": "zentol", "createdAt": "2020-04-06T14:51:09Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/AbstractHandler.java", "diffHunk": "@@ -217,11 +223,17 @@ private void finalizeRequestProcessing(FileUploads uploadedFiles) {\n \t\t\t\tHttpResponseStatus.INTERNAL_SERVER_ERROR,\n \t\t\t\tresponseHeaders);\n \t\t}\n+", "originalCommit": "6cec9f68ac5dee45acece3f188ec687d3b87a5f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUxNzI1Mg==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404517252", "bodyText": "Hi zentol, I have removed this line in the new commit :  )", "author": "kylemeow", "createdAt": "2020-04-07T03:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1MzI5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1ODU0NA==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404158544", "bodyText": "Without a toString() implementation the reference to the handler isn't that user-friendly; I would instead suggest to use untypedResponseMessageHeaders.getTargetRestEndpointURL.\nSomething along the lines of The handler for the url ({}) was already closed, but another attempt at closing it was made.", "author": "zentol", "createdAt": "2020-04-06T14:57:38Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/AbstractHandler.java", "diffHunk": "@@ -217,11 +223,17 @@ private void finalizeRequestProcessing(FileUploads uploadedFiles) {\n \t\t\t\tHttpResponseStatus.INTERNAL_SERVER_ERROR,\n \t\t\t\tresponseHeaders);\n \t\t}\n+\n \t}\n \n \t@Override\n \tpublic final CompletableFuture<Void> closeAsync() {\n-\t\treturn FutureUtils.composeAfterwards(closeHandlerAsync(), inFlightRequestTracker::awaitAsync);\n+\t\tif (isHandlerClosed.compareAndSet(false, true)) {\n+\t\t\treturn FutureUtils.composeAfterwards(closeHandlerAsync(), inFlightRequestTracker::awaitAsync);\n+\t\t} else {\n+\t\t\tlog.warn(\"Handler instance {} had already been closed, not allowed to close it again.\", this);", "originalCommit": "6cec9f68ac5dee45acece3f188ec687d3b87a5f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUxNzM4Nw==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404517387", "bodyText": "Thanks for pointing out this, and I have changed this log message to the recommended way.", "author": "kylemeow", "createdAt": "2020-04-07T03:41:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1ODU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1OTUxMg==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404159512", "bodyText": "Let's directly refer to the resulting problem.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t// this is to prevent the same JobCancellationHandler from being registered twice\n          \n          \n            \n            \t\t// should be removed once the Yarn proxy can forward all REST verbs\n          \n          \n            \n            \t\t// use a separate handler for the yarn-cancel to ensure close() is only called once", "author": "zentol", "createdAt": "2020-04-06T14:58:45Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/webmonitor/WebMonitorEndpoint.java", "diffHunk": "@@ -500,6 +500,15 @@ public WebMonitorEndpoint(\n \t\t\tJobCancellationHeaders.getInstance(),\n \t\t\tTerminationModeQueryParameter.TerminationMode.CANCEL);\n \n+\t\t// this is to prevent the same JobCancellationHandler from being registered twice\n+\t\t// should be removed once the Yarn proxy can forward all REST verbs", "originalCommit": "6cec9f68ac5dee45acece3f188ec687d3b87a5f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1OTcyOQ==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404159729", "bodyText": "We can be a bit more specific with the naming\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal JobCancellationHandler legacyJobCancelTerminationHandler = new JobCancellationHandler(\n          \n          \n            \n            \t\tfinal JobCancellationHandler yarnJobCancelTerminationHandler = new JobCancellationHandler(", "author": "zentol", "createdAt": "2020-04-06T14:59:01Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/webmonitor/WebMonitorEndpoint.java", "diffHunk": "@@ -500,6 +500,15 @@ public WebMonitorEndpoint(\n \t\t\tJobCancellationHeaders.getInstance(),\n \t\t\tTerminationModeQueryParameter.TerminationMode.CANCEL);\n \n+\t\t// this is to prevent the same JobCancellationHandler from being registered twice\n+\t\t// should be removed once the Yarn proxy can forward all REST verbs\n+\t\tfinal JobCancellationHandler legacyJobCancelTerminationHandler = new JobCancellationHandler(", "originalCommit": "6cec9f68ac5dee45acece3f188ec687d3b87a5f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUxNzU0Mw==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404517543", "bodyText": "You are right, yarnJobCancelTerminationHandler is more clear to indicate that this handler is only designed for dealing with special cases in YARN.", "author": "kylemeow", "createdAt": "2020-04-07T03:42:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1OTcyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2NTQxNg==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404165416", "bodyText": "I think we can take a more targeted approach if we add stronger assertions to the runtime.\nWe could verify in the RestServerEndpoint that all handlers are unique using an IdentityHashMap. We could then write a simple unit test that sets up a sub-class that registers 1 handler multiple times and assert than an exception is thrown.", "author": "zentol", "createdAt": "2020-04-06T15:06:35Z", "path": "flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNJobCancellationITCase.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.yarn;\n+\n+import org.apache.flink.client.deployment.ClusterSpecification;\n+import org.apache.flink.client.program.ClusterClient;\n+import org.apache.flink.configuration.AkkaOptions;\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.configuration.MemorySize;\n+import org.apache.flink.configuration.TaskManagerOptions;\n+import org.apache.flink.runtime.jobgraph.JobGraph;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+import org.apache.flink.streaming.api.functions.sink.DiscardingSink;\n+import org.apache.flink.streaming.api.functions.source.SourceFunction;\n+import org.apache.flink.yarn.util.YarnTestUtils;\n+\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.yarn.api.records.ApplicationId;\n+import org.junit.BeforeClass;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.time.Duration;\n+import java.util.Arrays;\n+import java.util.concurrent.CompletableFuture;\n+\n+\n+/**\n+ * Test cases for the cancellation of Yarn Flink clusters.\n+ */\n+public class YARNJobCancellationITCase extends YarnTestBase {", "originalCommit": "6cec9f68ac5dee45acece3f188ec687d3b87a5f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUxODg1MA==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404518850", "bodyText": "Thank you for the advice, and I agree that runtime verification is necessary to prevent users from accidentally reusing the handler.\nI have introduced a handler duplication check at start() method of RestServerEndpoint class, and added a test case in the cluster test module.", "author": "kylemeow", "createdAt": "2020-04-07T03:48:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2NTQxNg=="}], "type": "inlineReview"}, {"oid": "b8f4b5ef57ba92d87ccf9d7ceb5cd746ad594db0", "url": "https://github.com/apache/flink/commit/b8f4b5ef57ba92d87ccf9d7ceb5cd746ad594db0", "message": "[FLINK-16626][runtime] Ensure each REST handler to be registered only once at runtime", "committedDate": "2020-04-07T03:38:49Z", "type": "commit"}, {"oid": "1ebe8ddeb78fedc927c8d8d39024f3aa87ce5207", "url": "https://github.com/apache/flink/commit/1ebe8ddeb78fedc927c8d8d39024f3aa87ce5207", "message": "[FLINK-16626][client] Add test case for duplicate handler registration", "committedDate": "2020-04-07T03:39:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU3OTcxMA==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404579710", "bodyText": "If we adjust the test name slightly we don't really need the comment (which is always a good thing since if CI fails people only see the test name ;) )\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/**\n          \n          \n            \n            \t * Tests that ensure each handler is registered only once.\n          \n          \n            \n            \t */\n          \n          \n            \n            \t@Test\n          \n          \n            \n            \tpublic void testDuplicatedHandlerRegistration() throws Exception {\n          \n          \n            \n            \t@Test\n          \n          \n            \n            \tpublic void testDuplicateHandlerRegistrationIsForbidden() throws Exception {", "author": "zentol", "createdAt": "2020-04-07T07:02:49Z", "path": "flink-clients/src/test/java/org/apache/flink/client/program/rest/RestClusterClientTest.java", "diffHunk": "@@ -271,6 +273,24 @@ public void testDetachedJobSubmission() throws Exception {\n \n \t}\n \n+\t/**\n+\t * Tests that ensure each handler is registered only once.\n+\t */\n+\t@Test\n+\tpublic void testDuplicatedHandlerRegistration() throws Exception {", "originalCommit": "1ebe8ddeb78fedc927c8d8d39024f3aa87ce5207", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MzA0OQ==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404693049", "bodyText": "Hi zentol, I have changed the method name to the recommended one, which is indeed more clear and intuitive.", "author": "kylemeow", "createdAt": "2020-04-07T10:09:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU3OTcxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4MjAzMA==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404582030", "bodyText": "We generally try to avoid matching the exact text; it is quite tiresome having to adjust a test just because you changed added a bit more information.\nSince assertThrows only checks that the string is contained in the exception we can instead use \"Duplicate REST handler\".", "author": "zentol", "createdAt": "2020-04-07T07:07:35Z", "path": "flink-clients/src/test/java/org/apache/flink/client/program/rest/RestClusterClientTest.java", "diffHunk": "@@ -271,6 +273,24 @@ public void testDetachedJobSubmission() throws Exception {\n \n \t}\n \n+\t/**\n+\t * Tests that ensure each handler is registered only once.\n+\t */\n+\t@Test\n+\tpublic void testDuplicatedHandlerRegistration() throws Exception {\n+\t\tfinal TestJobSubmitHandler testJobSubmitHandler = new TestJobSubmitHandler();\n+\n+\t\tassertThrows(\"Duplicate REST handler instance found. Please ensure each instance is registered only once.\",", "originalCommit": "1ebe8ddeb78fedc927c8d8d39024f3aa87ce5207", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5NTAyMQ==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404695021", "bodyText": "Thanks for pointing out this, I have made the matching text shorter as commented above.", "author": "kylemeow", "createdAt": "2020-04-07T10:12:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4MjAzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4MjUxNA==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404582514", "bodyText": "Having this line obfuscates where the error is thrown. Any reader would assume this line throws the exception; because there would be no need for it if createRestServerEndpoint throws it.", "author": "zentol", "createdAt": "2020-04-07T07:08:26Z", "path": "flink-clients/src/test/java/org/apache/flink/client/program/rest/RestClusterClientTest.java", "diffHunk": "@@ -271,6 +273,24 @@ public void testDetachedJobSubmission() throws Exception {\n \n \t}\n \n+\t/**\n+\t * Tests that ensure each handler is registered only once.\n+\t */\n+\t@Test\n+\tpublic void testDuplicatedHandlerRegistration() throws Exception {\n+\t\tfinal TestJobSubmitHandler testJobSubmitHandler = new TestJobSubmitHandler();\n+\n+\t\tassertThrows(\"Duplicate REST handler instance found. Please ensure each instance is registered only once.\",\n+\t\t\tFlinkRuntimeException.class,\n+\t\t\t() -> {\n+\t\t\t\ttry (TestRestServerEndpoint restServerEndpoint = createRestServerEndpoint(\n+\t\t\t\t\ttestJobSubmitHandler, testJobSubmitHandler)) {\n+\t\t\t\t\tcreateRestClusterClient(restServerEndpoint.getServerAddress().getPort());", "originalCommit": "1ebe8ddeb78fedc927c8d8d39024f3aa87ce5207", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5NTc1NA==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404695754", "bodyText": "Yes, test cases should only contain necessary code, so I have removed the useless parts.", "author": "kylemeow", "createdAt": "2020-04-07T10:14:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4MjUxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4ODk1MQ==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404588951", "bodyText": "I don't think this test is in the correct place; it should be in RestServerEndpointTest. Or maybe, to make it a bit easier, RestServerEndpointITCase since it has the required utilities already.", "author": "zentol", "createdAt": "2020-04-07T07:20:27Z", "path": "flink-clients/src/test/java/org/apache/flink/client/program/rest/RestClusterClientTest.java", "diffHunk": "@@ -271,6 +273,24 @@ public void testDetachedJobSubmission() throws Exception {\n \n \t}\n \n+\t/**\n+\t * Tests that ensure each handler is registered only once.\n+\t */\n+\t@Test", "originalCommit": "1ebe8ddeb78fedc927c8d8d39024f3aa87ce5207", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5NzM5Ng==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404697396", "bodyText": "Ah sorry it is my fault. Now moved the test case to RestServerEndpointITCase, which is the definitely right place.", "author": "kylemeow", "createdAt": "2020-04-07T10:16:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4ODk1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4OTY2Nw==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404589667", "bodyText": "We are leaking resources here since we never actually get back a restServerEndpoint; createRestServerEndpoint fails with an exception but doesn't close the resource internally if start() fails.", "author": "zentol", "createdAt": "2020-04-07T07:21:49Z", "path": "flink-clients/src/test/java/org/apache/flink/client/program/rest/RestClusterClientTest.java", "diffHunk": "@@ -271,6 +273,24 @@ public void testDetachedJobSubmission() throws Exception {\n \n \t}\n \n+\t/**\n+\t * Tests that ensure each handler is registered only once.\n+\t */\n+\t@Test\n+\tpublic void testDuplicatedHandlerRegistration() throws Exception {\n+\t\tfinal TestJobSubmitHandler testJobSubmitHandler = new TestJobSubmitHandler();\n+\n+\t\tassertThrows(\"Duplicate REST handler instance found. Please ensure each instance is registered only once.\",\n+\t\t\tFlinkRuntimeException.class,\n+\t\t\t() -> {\n+\t\t\t\ttry (TestRestServerEndpoint restServerEndpoint = createRestServerEndpoint(", "originalCommit": "1ebe8ddeb78fedc927c8d8d39024f3aa87ce5207", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwNjY4OQ==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404706689", "bodyText": "Hi, I have changed the code to make it more robust.", "author": "kylemeow", "createdAt": "2020-04-07T10:33:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4OTY2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwOTU0Mw==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404609543", "bodyText": "Do we still need this test?", "author": "zentol", "createdAt": "2020-04-07T07:55:38Z", "path": "flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNJobCancellationITCase.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.yarn;\n+\n+import org.apache.flink.client.deployment.ClusterSpecification;\n+import org.apache.flink.client.program.ClusterClient;\n+import org.apache.flink.configuration.AkkaOptions;\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.configuration.MemorySize;\n+import org.apache.flink.configuration.TaskManagerOptions;\n+import org.apache.flink.runtime.jobgraph.JobGraph;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+import org.apache.flink.streaming.api.functions.sink.DiscardingSink;\n+import org.apache.flink.streaming.api.functions.source.SourceFunction;\n+import org.apache.flink.yarn.util.YarnTestUtils;\n+\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.yarn.api.records.ApplicationId;\n+import org.junit.BeforeClass;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.time.Duration;\n+import java.util.Arrays;\n+import java.util.concurrent.CompletableFuture;\n+\n+\n+/**\n+ * Test cases for the cancellation of Yarn Flink clusters.\n+ */\n+public class YARNJobCancellationITCase extends YarnTestBase {", "originalCommit": "1ebe8ddeb78fedc927c8d8d39024f3aa87ce5207", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwNjg1MQ==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404706851", "bodyText": "Removed this test as it is not needed now.", "author": "kylemeow", "createdAt": "2020-04-07T10:33:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwOTU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMzM1Nw==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404723357", "bodyText": "Though we don't require the test for this PR, it is worth pulled in in another commit. An end-to-end test of cancel command in YARN per-job mode guards failures caused by other changes in future developing.", "author": "tisonkun", "createdAt": "2020-04-07T11:04:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwOTU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc2MjIyOQ==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404762229", "bodyText": "Though we don't require the test for this PR, it is worth pulled in in another commit. An end-to-end test of cancel command in YARN per-job mode guards failures caused by other changes in future developing.\n\nMaybe we could have more integrated test cases on the execution flow, like cancel(), stopWithSavepoint(), etc., to uncover more issues that possibly slip through the unit test cases.", "author": "kylemeow", "createdAt": "2020-04-07T12:17:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwOTU0Mw=="}], "type": "inlineReview"}, {"oid": "ed239dbb993802200f5ad701bcd6c384a29171dd", "url": "https://github.com/apache/flink/commit/ed239dbb993802200f5ad701bcd6c384a29171dd", "message": "[FLINK-16626][tests] Modified test cases", "committedDate": "2020-04-07T09:40:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMTI2OQ==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404721269", "bodyText": "I don't think we should return a completed future if the handle has received \"close\" message. It is possible that the handle is still closing. Possibly we alter inFlightRequestTracker::awaitAsync to return the terminate future if it is closed, without deregister the phaser party.\ncc @zentol  @GJL", "author": "tisonkun", "createdAt": "2020-04-07T11:00:09Z", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/AbstractHandler.java", "diffHunk": "@@ -221,7 +227,12 @@ private void finalizeRequestProcessing(FileUploads uploadedFiles) {\n \n \t@Override\n \tpublic final CompletableFuture<Void> closeAsync() {\n-\t\treturn FutureUtils.composeAfterwards(closeHandlerAsync(), inFlightRequestTracker::awaitAsync);\n+\t\tif (isHandlerClosed.compareAndSet(false, true)) {\n+\t\t\treturn FutureUtils.composeAfterwards(closeHandlerAsync(), inFlightRequestTracker::awaitAsync);\n+\t\t} else {\n+\t\t\tlog.warn(\"The handler instance for {} had already been closed, but another attempt at closing it was made.\", untypedResponseMessageHeaders.getTargetRestEndpointURL());\n+\t\t\treturn CompletableFuture.completedFuture(null);", "originalCommit": "ed239dbb993802200f5ad701bcd6c384a29171dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc1NTU3Nw==", "url": "https://github.com/apache/flink/pull/11639#discussion_r404755577", "bodyText": "I don't think we should return a completed future if the handle has received \"close\" message. It is possible that the handle is still closing. Possibly we alter inFlightRequestTracker::awaitAsync to return the terminate future if it is closed, without deregister the phaser party.\ncc @zentol @GJL\n\nHi @tisonkun , thanks for your review.\nMy original thought was that a completed ComplatableFuture CompletableFuture.completedFuture(null) would indicate that this invocation has finished without any longer effect, as it has nothing to do with the previous call from the user's perspective.\nTo my understanding, if the REST handler was previously requested to be closed, then the corresponding CompletableFuture would have already been sent to the user, and if that CompletedFuture is still not finished, org.apache.flink.runtime.rest.RestServerEndpoint#closeHandlersAsync would wait for its completion, so it would not cause the RestServerEndpoint to shutdown earlier.\nOr else maybe we could just throw an Exception if the handler is being closed more than once? This would make the design simpler.", "author": "kylemeow", "createdAt": "2020-04-07T12:05:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMTI2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2NzI3Ng==", "url": "https://github.com/apache/flink/pull/11639#discussion_r405267276", "bodyText": "I am not sure whether we need to add such logics here. Since the closeAsync is not designed to be called multiple times and also currently we do not have this behavior. We close the handler one by one in RestEndpoint#closeHandlersAsync.", "author": "wangyang0918", "createdAt": "2020-04-08T05:32:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMTI2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI4NzkxNw==", "url": "https://github.com/apache/flink/pull/11639#discussion_r405287917", "bodyText": "I am not sure whether we need to add such logics here. Since the closeAsync is not designed to be called multiple times and also currently we do not have this behavior. We close the handler one by one in RestEndpoint#closeHandlersAsync.\n\nHi @wangyang0918 , I believe that this code is to prevent future developer from accidentally reusing the same handlers multiple times. As you can see, the bug described in this JIRA ticket was caused by inappropriate reuse of one REST handler.", "author": "kylemeow", "createdAt": "2020-04-08T06:32:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMTI2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk1MjYxNQ==", "url": "https://github.com/apache/flink/pull/11639#discussion_r405952615", "bodyText": "@keijiyoshida I agree with you that the root cause is accidentally reusing the handler instance. However, we have checked the duplication in RestServerEndpoint, i am just think whether we still need to have the defensive logics here.\nI do not insist of this. You could determine by yourself.", "author": "wangyang0918", "createdAt": "2020-04-09T04:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMTI2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0OTkwNA==", "url": "https://github.com/apache/flink/pull/11639#discussion_r406149904", "bodyText": "Hi @tisonkun , I have submitted a new commit which makes calls to closeAsync return the same result despite of multiple calls (idempotent).", "author": "kylemeow", "createdAt": "2020-04-09T11:52:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMTI2OQ=="}], "type": "inlineReview"}, {"oid": "88ff90473405fa72335e5393b32377134c4b4f11", "url": "https://github.com/apache/flink/commit/88ff90473405fa72335e5393b32377134c4b4f11", "message": "Make calls to closeAsync idempotent", "committedDate": "2020-04-09T11:51:15Z", "type": "commit"}]}