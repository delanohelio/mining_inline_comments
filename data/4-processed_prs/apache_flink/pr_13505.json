{"pr_number": 13505, "pr_title": "[FLINK-19420][docs-zh] Translate \"Program Packaging\" page into Chinese", "pr_createdAt": "2020-09-29T08:46:39Z", "pr_url": "https://github.com/apache/flink/pull/13505", "timeline": [{"oid": "6dcb0bc411389cfeac4534c27c4d270527c6220f", "url": "https://github.com/apache/flink/commit/6dcb0bc411389cfeac4534c27c4d270527c6220f", "message": "[FLINK-19420][docs-zh] Translate \"Program Packaging\" page into Chinese", "committedDate": "2020-09-27T10:05:10Z", "type": "commit"}, {"oid": "27082baa25bd4b70e5de0185f71cf55aa0d6b4c9", "url": "https://github.com/apache/flink/commit/27082baa25bd4b70e5de0185f71cf55aa0d6b4c9", "message": "Change link format", "committedDate": "2020-09-29T08:44:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxNzQ1NQ==", "url": "https://github.com/apache/flink/pull/13505#discussion_r504417455", "bodyText": "\u8fd9\u4e2a\u6807\u9898\u4e5f\u7ffb\u8bd1\u4e0b\uff1f", "author": "klion26", "createdAt": "2020-10-14T05:51:23Z", "path": "docs/dev/packaging.zh.md", "diffHunk": "@@ -24,36 +24,20 @@ under the License.\n -->\n \n \n-As described earlier, Flink programs can be executed on\n-clusters by using a `remote environment`. Alternatively, programs can be packaged into JAR Files\n-(Java Archives) for execution. Packaging the program is a prerequisite to executing them through the\n-[command line interface]({{ site.baseurl }}/ops/cli.html).\n-\n-### Packaging Programs\n-\n-To support execution from a packaged JAR file via the command line or web interface, a program must\n-use the environment obtained by `StreamExecutionEnvironment.getExecutionEnvironment()`. This environment\n-will act as the cluster's environment when the JAR is submitted to the command line or web\n-interface. If the Flink program is invoked differently than through these interfaces, the\n-environment will act like a local environment.\n-\n-To package the program, simply export all involved classes as a JAR file. The JAR file's manifest\n-must point to the class that contains the program's *entry point* (the class with the public\n-`main` method). The simplest way to do this is by putting the *main-class* entry into the\n-manifest (such as `main-class: org.apache.flinkexample.MyProgram`). The *main-class* attribute is\n-the same one that is used by the Java Virtual Machine to find the main method when executing a JAR\n-files through the command `java -jar pathToTheJarFile`. Most IDEs offer to include that attribute\n-automatically when exporting JAR files.\n+\u6b63\u5982\u4e4b\u524d\u6240\u63cf\u8ff0\u7684\uff0cFlink \u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528 `remote environment` \u5728\u96c6\u7fa4\u4e0a\u6267\u884c\u3002\u6216\u8005\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u88ab\u6253\u5305\u6210 JAR \u6587\u4ef6\uff08Java Archives\uff09\u6267\u884c\u3002\u5982\u679c\u4f7f\u7528[\u547d\u4ee4\u884c]({% link ops/cli.zh.md %})\u7684\u65b9\u5f0f\u6267\u884c\u7a0b\u5e8f\uff0c\u5c06\u7a0b\u5e8f\u6253\u5305\u662f\u5fc5\u9700\u7684\u3002\n+\n+### \u6253\u5305\u7a0b\u5e8f\n+\n+\u4e3a\u4e86\u80fd\u591f\u901a\u8fc7\u547d\u4ee4\u884c\u6216 web \u754c\u9762\u6267\u884c\u6253\u5305\u7684 JAR \u6587\u4ef6\uff0c\u7a0b\u5e8f\u5fc5\u987b\u4f7f\u7528\u901a\u8fc7 `StreamExecutionEnvironment.getExecutionEnvironment()` \u83b7\u53d6\u7684 environment\u3002\u5f53 JAR \u88ab\u63d0\u4ea4\u5230\u547d\u4ee4\u884c\u6216 web \u754c\u9762\u540e\uff0c\u8be5 environment \u4f1a\u626e\u6f14\u96c6\u7fa4\u73af\u5883\u7684\u89d2\u8272\u3002\u5982\u679c\u8c03\u7528 Flink \u7a0b\u5e8f\u7684\u65b9\u5f0f\u4e0e\u4e0a\u8ff0\u63a5\u53e3\u4e0d\u540c\uff0c\u8be5 environment \u4f1a\u626e\u6f14\u672c\u5730\u73af\u5883\u7684\u89d2\u8272\u3002\n+\n+\u6253\u5305\u7a0b\u5e8f\u53ea\u8981\u7b80\u5355\u5730\u5c06\u6240\u6709\u76f8\u5173\u7684\u7c7b\u5bfc\u51fa\u4e3a JAR \u6587\u4ef6\uff0cJAR \u6587\u4ef6\u7684 manifest \u5fc5\u987b\u6307\u5411\u5305\u542b\u7a0b\u5e8f*\u5165\u53e3\u70b9*\uff08\u62e5\u6709\u516c\u5171 `main` \u65b9\u6cd5\uff09\u7684\u7c7b\u3002\u5b9e\u73b0\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5c06 *main-class* \u5199\u5165 manifest \u4e2d\uff08\u6bd4\u5982 `main-class: org.apache.flinkexample.MyProgram`\uff09\u3002*main-class* \u5c5e\u6027\u4e0e Java \u865a\u62df\u673a\u901a\u8fc7\u6307\u4ee4 `java -jar pathToTheJarFile` \u6267\u884c JAR \u6587\u4ef6\u65f6\u5bfb\u627e main \u65b9\u6cd5\u7684\u7c7b\u662f\u76f8\u540c\u7684\u3002\u5927\u591a\u6570 IDE \u63d0\u4f9b\u4e86\u5728\u5bfc\u51fa JAR \u6587\u4ef6\u65f6\u81ea\u52a8\u5305\u542b\u8be5\u5c5e\u6027\u7684\u529f\u80fd\u3002\n \n ### Summary", "originalCommit": "27082baa25bd4b70e5de0185f71cf55aa0d6b4c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxNzc1Ng==", "url": "https://github.com/apache/flink/pull/13505#discussion_r504417756", "bodyText": "\u6807\u9898\u7ffb\u8bd1\u4e4b\u540e\uff0c\u9700\u8981\u6dfb\u52a0 <a> \u6807\u7b7e\uff0c\u53ef\u4ee5\u53c2\u8003 wiki \u951a\u70b9\u53ef\u4ee5\u53c2\u8003 \u82f1\u6587\u7248\u7684 url", "author": "klion26", "createdAt": "2020-10-14T05:52:16Z", "path": "docs/dev/packaging.zh.md", "diffHunk": "@@ -24,36 +24,20 @@ under the License.\n -->\n \n \n-As described earlier, Flink programs can be executed on\n-clusters by using a `remote environment`. Alternatively, programs can be packaged into JAR Files\n-(Java Archives) for execution. Packaging the program is a prerequisite to executing them through the\n-[command line interface]({{ site.baseurl }}/ops/cli.html).\n-\n-### Packaging Programs\n-\n-To support execution from a packaged JAR file via the command line or web interface, a program must\n-use the environment obtained by `StreamExecutionEnvironment.getExecutionEnvironment()`. This environment\n-will act as the cluster's environment when the JAR is submitted to the command line or web\n-interface. If the Flink program is invoked differently than through these interfaces, the\n-environment will act like a local environment.\n-\n-To package the program, simply export all involved classes as a JAR file. The JAR file's manifest\n-must point to the class that contains the program's *entry point* (the class with the public\n-`main` method). The simplest way to do this is by putting the *main-class* entry into the\n-manifest (such as `main-class: org.apache.flinkexample.MyProgram`). The *main-class* attribute is\n-the same one that is used by the Java Virtual Machine to find the main method when executing a JAR\n-files through the command `java -jar pathToTheJarFile`. Most IDEs offer to include that attribute\n-automatically when exporting JAR files.\n+\u6b63\u5982\u4e4b\u524d\u6240\u63cf\u8ff0\u7684\uff0cFlink \u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528 `remote environment` \u5728\u96c6\u7fa4\u4e0a\u6267\u884c\u3002\u6216\u8005\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u88ab\u6253\u5305\u6210 JAR \u6587\u4ef6\uff08Java Archives\uff09\u6267\u884c\u3002\u5982\u679c\u4f7f\u7528[\u547d\u4ee4\u884c]({% link ops/cli.zh.md %})\u7684\u65b9\u5f0f\u6267\u884c\u7a0b\u5e8f\uff0c\u5c06\u7a0b\u5e8f\u6253\u5305\u662f\u5fc5\u9700\u7684\u3002\n+\n+### \u6253\u5305\u7a0b\u5e8f", "originalCommit": "27082baa25bd4b70e5de0185f71cf55aa0d6b4c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxODgwMg==", "url": "https://github.com/apache/flink/pull/13505#discussion_r504418802", "bodyText": "\u5b9e\u73b0\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5 -> \u5b9e\u73b0\u7684\u6700\u7b80\u5355\u65b9\u6cd5 \u662f\u5426\u4f1a\u66f4\u597d\u4e00\u4e9b\u5462", "author": "klion26", "createdAt": "2020-10-14T05:54:58Z", "path": "docs/dev/packaging.zh.md", "diffHunk": "@@ -24,36 +24,20 @@ under the License.\n -->\n \n \n-As described earlier, Flink programs can be executed on\n-clusters by using a `remote environment`. Alternatively, programs can be packaged into JAR Files\n-(Java Archives) for execution. Packaging the program is a prerequisite to executing them through the\n-[command line interface]({{ site.baseurl }}/ops/cli.html).\n-\n-### Packaging Programs\n-\n-To support execution from a packaged JAR file via the command line or web interface, a program must\n-use the environment obtained by `StreamExecutionEnvironment.getExecutionEnvironment()`. This environment\n-will act as the cluster's environment when the JAR is submitted to the command line or web\n-interface. If the Flink program is invoked differently than through these interfaces, the\n-environment will act like a local environment.\n-\n-To package the program, simply export all involved classes as a JAR file. The JAR file's manifest\n-must point to the class that contains the program's *entry point* (the class with the public\n-`main` method). The simplest way to do this is by putting the *main-class* entry into the\n-manifest (such as `main-class: org.apache.flinkexample.MyProgram`). The *main-class* attribute is\n-the same one that is used by the Java Virtual Machine to find the main method when executing a JAR\n-files through the command `java -jar pathToTheJarFile`. Most IDEs offer to include that attribute\n-automatically when exporting JAR files.\n+\u6b63\u5982\u4e4b\u524d\u6240\u63cf\u8ff0\u7684\uff0cFlink \u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528 `remote environment` \u5728\u96c6\u7fa4\u4e0a\u6267\u884c\u3002\u6216\u8005\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u88ab\u6253\u5305\u6210 JAR \u6587\u4ef6\uff08Java Archives\uff09\u6267\u884c\u3002\u5982\u679c\u4f7f\u7528[\u547d\u4ee4\u884c]({% link ops/cli.zh.md %})\u7684\u65b9\u5f0f\u6267\u884c\u7a0b\u5e8f\uff0c\u5c06\u7a0b\u5e8f\u6253\u5305\u662f\u5fc5\u9700\u7684\u3002\n+\n+### \u6253\u5305\u7a0b\u5e8f\n+\n+\u4e3a\u4e86\u80fd\u591f\u901a\u8fc7\u547d\u4ee4\u884c\u6216 web \u754c\u9762\u6267\u884c\u6253\u5305\u7684 JAR \u6587\u4ef6\uff0c\u7a0b\u5e8f\u5fc5\u987b\u4f7f\u7528\u901a\u8fc7 `StreamExecutionEnvironment.getExecutionEnvironment()` \u83b7\u53d6\u7684 environment\u3002\u5f53 JAR \u88ab\u63d0\u4ea4\u5230\u547d\u4ee4\u884c\u6216 web \u754c\u9762\u540e\uff0c\u8be5 environment \u4f1a\u626e\u6f14\u96c6\u7fa4\u73af\u5883\u7684\u89d2\u8272\u3002\u5982\u679c\u8c03\u7528 Flink \u7a0b\u5e8f\u7684\u65b9\u5f0f\u4e0e\u4e0a\u8ff0\u63a5\u53e3\u4e0d\u540c\uff0c\u8be5 environment \u4f1a\u626e\u6f14\u672c\u5730\u73af\u5883\u7684\u89d2\u8272\u3002\n+\n+\u6253\u5305\u7a0b\u5e8f\u53ea\u8981\u7b80\u5355\u5730\u5c06\u6240\u6709\u76f8\u5173\u7684\u7c7b\u5bfc\u51fa\u4e3a JAR \u6587\u4ef6\uff0cJAR \u6587\u4ef6\u7684 manifest \u5fc5\u987b\u6307\u5411\u5305\u542b\u7a0b\u5e8f*\u5165\u53e3\u70b9*\uff08\u62e5\u6709\u516c\u5171 `main` \u65b9\u6cd5\uff09\u7684\u7c7b\u3002\u5b9e\u73b0\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5c06 *main-class* \u5199\u5165 manifest \u4e2d\uff08\u6bd4\u5982 `main-class: org.apache.flinkexample.MyProgram`\uff09\u3002*main-class* \u5c5e\u6027\u4e0e Java \u865a\u62df\u673a\u901a\u8fc7\u6307\u4ee4 `java -jar pathToTheJarFile` \u6267\u884c JAR \u6587\u4ef6\u65f6\u5bfb\u627e main \u65b9\u6cd5\u7684\u7c7b\u662f\u76f8\u540c\u7684\u3002\u5927\u591a\u6570 IDE \u63d0\u4f9b\u4e86\u5728\u5bfc\u51fa JAR \u6587\u4ef6\u65f6\u81ea\u52a8\u5305\u542b\u8be5\u5c5e\u6027\u7684\u529f\u80fd\u3002", "originalCommit": "27082baa25bd4b70e5de0185f71cf55aa0d6b4c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "af001a4cdb70a6ad42027805b96a1de9e4b93d5b", "url": "https://github.com/apache/flink/commit/af001a4cdb70a6ad42027805b96a1de9e4b93d5b", "message": "Change according to the review advice", "committedDate": "2020-10-14T06:06:40Z", "type": "commit"}]}