{"pr_number": 12630, "pr_title": "[FLINK-18268][docs] Correct Table API in Temporal table docs", "pr_createdAt": "2020-06-12T08:43:02Z", "pr_url": "https://github.com/apache/flink/pull/12630", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MDg2MA==", "url": "https://github.com/apache/flink/pull/12630#discussion_r440540860", "bodyText": "nit: an -> a", "author": "godfreyhe", "createdAt": "2020-06-16T01:52:00Z", "path": "docs/dev/table/streaming/temporal_tables.md", "diffHunk": "@@ -260,32 +260,43 @@ See also the page about [joins for continuous queries](joins.html) for more info\n {% highlight java %}\n // Get the stream and table environments.\n StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-StreamTableEnvironment tEnv = TableEnvironment.getTableEnvironment(env);\n-\n-// Create an HBaseTableSource as a temporal table which implements LookableTableSource\n-// In the real setup, you should replace this with your own table.\n-HBaseTableSource rates = new HBaseTableSource(conf, \"Rates\");\n-rates.setRowKey(\"currency\", String.class);   // currency as the primary key\n-rates.addColumn(\"fam1\", \"rate\", Double.class);\n-\n-// register the temporal table into environment, then we can query it in sql\n-tEnv.registerTableSource(\"Rates\", rates);\n+EnvironmentSettings settings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build();\n+StreamTableEnvironment tEnv = StreamTableEnvironment.create(env, settings);\n+// or TableEnvironment tEnv = TableEnvironment.create(settings);\n+\n+// Define an HBase table with DDL, then we can use it as a temporal table in sql", "originalCommit": "535ba0fc8ca6ea67ded71fd9a80a24762b381a88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU2MzUyNg==", "url": "https://github.com/apache/flink/pull/12630#discussion_r440563526", "bodyText": "The  pronounce of 'H' in 'HBase' is 'e\u026at\u0283', the first sound is vowel, so we should use 'an HBase'", "author": "leonardBang", "createdAt": "2020-06-16T03:23:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MDg2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0NDM2NQ==", "url": "https://github.com/apache/flink/pull/12630#discussion_r440544365", "bodyText": "add some comments here, such as currency as rowkey", "author": "godfreyhe", "createdAt": "2020-06-16T02:05:10Z", "path": "docs/dev/table/streaming/temporal_tables.md", "diffHunk": "@@ -260,32 +260,43 @@ See also the page about [joins for continuous queries](joins.html) for more info\n {% highlight java %}\n // Get the stream and table environments.\n StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-StreamTableEnvironment tEnv = TableEnvironment.getTableEnvironment(env);\n-\n-// Create an HBaseTableSource as a temporal table which implements LookableTableSource\n-// In the real setup, you should replace this with your own table.\n-HBaseTableSource rates = new HBaseTableSource(conf, \"Rates\");\n-rates.setRowKey(\"currency\", String.class);   // currency as the primary key\n-rates.addColumn(\"fam1\", \"rate\", Double.class);\n-\n-// register the temporal table into environment, then we can query it in sql\n-tEnv.registerTableSource(\"Rates\", rates);\n+EnvironmentSettings settings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build();\n+StreamTableEnvironment tEnv = StreamTableEnvironment.create(env, settings);\n+// or TableEnvironment tEnv = TableEnvironment.create(settings);\n+\n+// Define an HBase table with DDL, then we can use it as a temporal table in sql\n+tEnv.executeSql(\n+    \"CREATE TABLE LatestRates (\" +\n+    \"   currency STRING,\" +\n+    \"   fam1 ROW<rate DOUBLE>\" +\n+    \") WITH (\" +\n+    \"   'connector' = 'hbase-1.4',\" +\n+    \"   'table-name' = 'Rates',\" +\n+    \"   'zookeeper.quorum' = 'localhost:2181'\" +\n+    \")\");\n {% endhighlight %}\n </div>\n <div data-lang=\"scala\" markdown=\"1\">\n {% highlight scala %}\n // Get the stream and table environments.\n val env = StreamExecutionEnvironment.getExecutionEnvironment\n-val tEnv = TableEnvironment.getTableEnvironment(env)\n-\n-// Create an HBaseTableSource as a temporal table which implements LookableTableSource\n-// In the real setup, you should replace this with your own table.\n-val rates = new HBaseTableSource(conf, \"Rates\")\n-rates.setRowKey(\"currency\", String.class)   // currency as the primary key\n-rates.addColumn(\"fam1\", \"rate\", Double.class)\n+val settings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build()\n+val tEnv = StreamTableEnvironment.create(env, settings)\n+// or val tEnv = TableEnvironment.create(settings)\n+\n+// Define an HBase table with DDL, then we can use it as a temporal table in sql\n+tEnv.executeSql(\n+    s\"\"\"\n+       |CREATE TABLE LatestRates (\n+       |    currency STRING,", "originalCommit": "535ba0fc8ca6ea67ded71fd9a80a24762b381a88", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "44869b7df481390c390051f0c8bbf2f6a7df6a80", "url": "https://github.com/apache/flink/commit/44869b7df481390c390051f0c8bbf2f6a7df6a80", "message": "[FLINK-18268][docs] Correct Table API in Temporal table docs", "committedDate": "2020-06-16T02:34:01Z", "type": "commit"}, {"oid": "ed3f09a47cd103818f3563d519da24b22da65798", "url": "https://github.com/apache/flink/commit/ed3f09a47cd103818f3563d519da24b22da65798", "message": "address comments", "committedDate": "2020-06-16T03:18:34Z", "type": "commit"}, {"oid": "ed3f09a47cd103818f3563d519da24b22da65798", "url": "https://github.com/apache/flink/commit/ed3f09a47cd103818f3563d519da24b22da65798", "message": "address comments", "committedDate": "2020-06-16T03:18:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU3Mjc2Nw==", "url": "https://github.com/apache/flink/pull/12630#discussion_r440572767", "bodyText": "Drop .useBlinkPlanner().inStreamingMode()? Because it is default value.", "author": "JingsongLi", "createdAt": "2020-06-16T04:00:30Z", "path": "docs/dev/table/streaming/temporal_tables.md", "diffHunk": "@@ -260,32 +260,45 @@ See also the page about [joins for continuous queries](joins.html) for more info\n {% highlight java %}\n // Get the stream and table environments.\n StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-StreamTableEnvironment tEnv = TableEnvironment.getTableEnvironment(env);\n-\n-// Create an HBaseTableSource as a temporal table which implements LookableTableSource\n-// In the real setup, you should replace this with your own table.\n-HBaseTableSource rates = new HBaseTableSource(conf, \"Rates\");\n-rates.setRowKey(\"currency\", String.class);   // currency as the primary key\n-rates.addColumn(\"fam1\", \"rate\", Double.class);\n-\n-// register the temporal table into environment, then we can query it in sql\n-tEnv.registerTableSource(\"Rates\", rates);\n+EnvironmentSettings settings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build();", "originalCommit": "ed3f09a47cd103818f3563d519da24b22da65798", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c47a299bdf759fdad12e4dbfc9643e24c2ea32b7", "url": "https://github.com/apache/flink/commit/c47a299bdf759fdad12e4dbfc9643e24c2ea32b7", "message": "minor", "committedDate": "2020-06-16T04:04:21Z", "type": "commit"}]}