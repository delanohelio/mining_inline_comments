{"pr_number": 11533, "pr_title": "[FLINK-16034][table-api, docs] Updated documentation with new Java Expression DSL", "pr_createdAt": "2020-03-26T14:33:26Z", "pr_url": "https://github.com/apache/flink/pull/11533", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxNjUyOA==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414516528", "bodyText": "extract proctime from string", "author": "twalthr", "createdAt": "2020-04-24T11:53:05Z", "path": "docs/dev/table/streaming/temporal_tables.md", "diffHunk": "@@ -176,7 +176,7 @@ ratesHistoryData.add(Tuple2.of(\"Euro\", 119L));\n // Create and register an example table using above data set.\n // In the real setup, you should replace this with your own table.\n DataStream<Tuple2<String, Long>> ratesHistoryStream = env.fromCollection(ratesHistoryData);\n-Table ratesHistory = tEnv.fromDataStream(ratesHistoryStream, \"r_currency, r_rate, r_proctime.proctime\");\n+Table ratesHistory = tEnv.fromDataStream(ratesHistoryStream, $(\"r_currency\"), $(\"r_rate\"), $(\"r_proctime.proctime\"));", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxNjYwMQ==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414516601", "bodyText": "extract proctime from string", "author": "twalthr", "createdAt": "2020-04-24T11:53:13Z", "path": "docs/dev/table/streaming/temporal_tables.zh.md", "diffHunk": "@@ -176,7 +176,7 @@ ratesHistoryData.add(Tuple2.of(\"Euro\", 119L));\n // Create and register an example table using above data set.\n // In the real setup, you should replace this with your own table.\n DataStream<Tuple2<String, Long>> ratesHistoryStream = env.fromCollection(ratesHistoryData);\n-Table ratesHistory = tEnv.fromDataStream(ratesHistoryStream, \"r_currency, r_rate, r_proctime.proctime\");\n+Table ratesHistory = tEnv.fromDataStream(ratesHistoryStream, $(\"r_currency\"), $(\"r_rate\"), $(\"r_proctime.proctime\"));", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxNzA5Mw==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414517093", "bodyText": "nit: new line before Tumble and proper 4 space indention?", "author": "twalthr", "createdAt": "2020-04-24T11:54:04Z", "path": "docs/dev/table/streaming/time_attributes.md", "diffHunk": "@@ -120,19 +120,21 @@ The processing time attribute is defined with the `.proctime` property during sc\n DataStream<Tuple2<String, String>> stream = ...;\n \n // declare an additional logical field as a processing time attribute\n-Table table = tEnv.fromDataStream(stream, \"user_name, data, user_action_time.proctime\");\n+Table table = tEnv.fromDataStream(stream, $(\"user_name\"), $(\"data\"), $(\"user_action_time\").proctime()\");\n \n-WindowedTable windowedTable = table.window(Tumble.over(\"10.minutes\").on(\"user_action_time\").as(\"userActionWindow\"));\n+WindowedTable windowedTable = table.window(Tumble.over(interval(Duration.ofMinutes(10)))", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxOTY1OA==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414519658", "bodyText": "new line after comma", "author": "twalthr", "createdAt": "2020-04-24T11:58:38Z", "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -669,9 +677,14 @@ Table result = orders.groupBy(\"a\").select(\"a, b.sum as d\");\n {% highlight java %}\n Table orders = tableEnv.from(\"Orders\");\n Table result = orders\n-    .window(Tumble.over(\"5.minutes\").on(\"rowtime\").as(\"w\")) // define window\n-    .groupBy(\"a, w\") // group by key and window\n-    .select(\"a, w.start, w.end, w.rowtime, b.sum as d\"); // access window properties and aggregate\n+    .window(Tumble.over(interval(Duration.ofMinutes(5))).on($(\"rowtime\")).as(\"w\")) // define window\n+    .groupBy($(\"a\"), $(\"w\")) // group by key and window\n+    .select(\n+        $(\"a\"), $(\"w\").start(),", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMDAzMw==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414520033", "bodyText": "put comment on top of .select() call", "author": "twalthr", "createdAt": "2020-04-24T11:59:17Z", "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -669,9 +677,14 @@ Table result = orders.groupBy(\"a\").select(\"a, b.sum as d\");\n {% highlight java %}\n Table orders = tableEnv.from(\"Orders\");\n Table result = orders\n-    .window(Tumble.over(\"5.minutes\").on(\"rowtime\").as(\"w\")) // define window\n-    .groupBy(\"a, w\") // group by key and window\n-    .select(\"a, w.start, w.end, w.rowtime, b.sum as d\"); // access window properties and aggregate\n+    .window(Tumble.over(interval(Duration.ofMinutes(5))).on($(\"rowtime\")).as(\"w\")) // define window\n+    .groupBy($(\"a\"), $(\"w\")) // group by key and window\n+    .select(\n+        $(\"a\"), $(\"w\").start(),\n+        $(\"w\").end(),\n+        $(\"w\").rowtime(),\n+        $(\"b\").sum().as(\"d\")\n+    ); // access window properties and aggregate", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMDI0Nw==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414520247", "bodyText": "new line after comma", "author": "twalthr", "createdAt": "2020-04-24T11:59:42Z", "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -686,13 +699,17 @@ Table result = orders\n Table orders = tableEnv.from(\"Orders\");\n Table result = orders\n     // define window\n-    .window(Over  \n-      .partitionBy(\"a\")\n-      .orderBy(\"rowtime\")\n-      .preceding(\"UNBOUNDED_RANGE\")\n-      .following(\"CURRENT_RANGE\")\n+    .window(Over\n+      .partitionBy($(\"a\"))\n+      .orderBy($(\"rowtime\"))\n+      .preceding(UNBOUNDED_RANGE)\n+      .following(CURRENT_RANGE)\n       .as(\"w\"))\n-    .select(\"a, b.avg over w, b.max over w, b.min over w\"); // sliding aggregate\n+    .select(\n+        $(\"a\"), $(\"b\").avg().over($(\"w\")),", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMDg0Ng==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414520846", "bodyText": "nit: newline before Over?", "author": "twalthr", "createdAt": "2020-04-24T12:00:52Z", "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -807,13 +837,13 @@ val result: Table = orders\n val orders: Table = tableEnv.from(\"Orders\")\n val result: Table = orders\n     // define window\n-    .window(Over  \n-      partitionBy 'a\n-      orderBy 'rowtime\n+    .window(Over", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMTcxMg==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414521712", "bodyText": "$(\"r_currency\")", "author": "twalthr", "createdAt": "2020-04-24T12:02:27Z", "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -1124,7 +1164,7 @@ tableEnv.registerFunction(\"rates\", rates);\n // join with \"Orders\" based on the time attribute and key\n Table orders = tableEnv.from(\"Orders\");\n Table result = orders\n-    .joinLateral(\"rates(o_proctime)\", \"o_currency = r_currency\")\n+    .joinLateral(call(\"rates\", $(\"o_proctime\")), $(\"o_currency\").isEqual(\"r_currency\"))", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDY5Nw==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414524697", "bodyText": "dollar", "author": "twalthr", "createdAt": "2020-04-24T12:07:38Z", "path": "docs/dev/table/tableApi.zh.md", "diffHunk": "@@ -72,7 +75,7 @@ result.print();\n \n The Scala Table API is enabled by importing `org.apache.flink.api.scala._` and `org.apache.flink.table.api.scala._`.\n \n-The following example shows how a Scala Table API program is constructed. Table attributes are referenced using [Scala Symbols](http://scala-lang.org/files/archive/spec/2.12/01-lexical-syntax.html#symbol-literals), which start with an apostrophe character (`'`).\n+The following example shows how a Scala Table API program is constructed. Table fields are referenced using Scala's String interpolation using a dolar character (`$`).", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNTExMg==", "url": "https://github.com/apache/flink/pull/11533#discussion_r414525112", "bodyText": "as \"cnt\"?", "author": "twalthr", "createdAt": "2020-04-24T12:08:17Z", "path": "docs/dev/table/tableApi.zh.md", "diffHunk": "@@ -90,8 +93,8 @@ val tEnv = BatchTableEnvironment.create(env)\n val orders = tEnv.from(\"Orders\") // schema (a, b, c, rowtime)\n \n val result = orders\n-               .groupBy('a)\n-               .select('a, 'b.count as 'cnt)\n+               .groupBy($\"a\")\n+               .select($\"a\", $\"b\".count as $\"cnt\")", "originalCommit": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9195291a0fed93f850b06cb25a07edb080ce919e", "url": "https://github.com/apache/flink/commit/9195291a0fed93f850b06cb25a07edb080ce919e", "message": "[FLINK-16034][table-api, docs] Updated documentation with new Java\nExpression DSL", "committedDate": "2020-04-28T07:20:32Z", "type": "commit"}, {"oid": "d6ccd8b00f778a01a826126c0b05075eae376c57", "url": "https://github.com/apache/flink/commit/d6ccd8b00f778a01a826126c0b05075eae376c57", "message": "Comments addressed", "committedDate": "2020-04-28T08:40:52Z", "type": "commit"}, {"oid": "d6ccd8b00f778a01a826126c0b05075eae376c57", "url": "https://github.com/apache/flink/commit/d6ccd8b00f778a01a826126c0b05075eae376c57", "message": "Comments addressed", "committedDate": "2020-04-28T08:40:52Z", "type": "forcePushed"}]}