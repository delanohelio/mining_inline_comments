{"pr_number": 11101, "pr_title": "[FLINK-16068][table-planner-blink] Fix computed column with escaped k\u2026", "pr_createdAt": "2020-02-16T15:00:59Z", "pr_url": "https://github.com/apache/flink/pull/11101", "timeline": [{"oid": "994704592f9aa725e5370210c6df1c6de0c2ddc8", "url": "https://github.com/apache/flink/commit/994704592f9aa725e5370210c6df1c6de0c2ddc8", "message": "[FLINK-16068][table-planner-blink] Fix computed column with escaped keyword cannot work", "committedDate": "2020-02-16T14:55:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEwMjAzMA==", "url": "https://github.com/apache/flink/pull/11101#discussion_r380102030", "bodyText": "We don't need to introduce a whole new IT case for this, we can just update the existing testInsertSourceTableWithUserDefinedFuncField to have a keyword field. IT case is expensive and should be avoid as much as possible.", "author": "wuchong", "createdAt": "2020-02-17T10:32:02Z", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/catalog/CatalogTableITCase.scala", "diffHunk": "@@ -448,6 +448,55 @@ class CatalogTableITCase(isStreamingMode: Boolean) extends AbstractTestBase {\n     assertEquals(expected.sorted, TestCollectionTableFactory.RESULT.sorted)\n   }\n \n+  @Test\n+  def testComputedColumnWithEscapedKeywordField(): Unit = {", "originalCommit": "994704592f9aa725e5370210c6df1c6de0c2ddc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEwMzIxNQ==", "url": "https://github.com/apache/flink/pull/11101#discussion_r380103215", "bodyText": "a SQL expression which must be quoted and expanded, e.g. \"`my_catalog`.`my_database`.`my_udf`(`f0`) + 1\".", "author": "wuchong", "createdAt": "2020-02-17T10:34:28Z", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/calcite/SqlExprToRexConverter.java", "diffHunk": "@@ -27,11 +27,15 @@\n \n \t/**\n \t * Converts a SQL expression to a {@link RexNode} expression.\n+\t *\n+\t * @param expr It's caller's duty to ensure that the expression has been escaped correctly.", "originalCommit": "994704592f9aa725e5370210c6df1c6de0c2ddc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "08e5b58a200705b0bc3c2d8e85d5eeca560535ba", "url": "https://github.com/apache/flink/commit/08e5b58a200705b0bc3c2d8e85d5eeca560535ba", "message": "move test to testInsertSourceTableWithUserDefinedFuncField and refine java doc", "committedDate": "2020-02-17T13:09:29Z", "type": "commit"}]}