{"pr_number": 12489, "pr_title": "[FLINK-18136] Don't start channel state writing for savepoints (RPC)", "pr_createdAt": "2020-06-04T16:34:01Z", "pr_url": "https://github.com/apache/flink/pull/12489", "timeline": [{"oid": "53b83b75e1f9023ea0ee96b42ca9f6d53af183bb", "url": "https://github.com/apache/flink/commit/53b83b75e1f9023ea0ee96b42ca9f6d53af183bb", "message": "[FLINK-18136] Use initCheckpoint in CheckpointBarrierUnaligner", "committedDate": "2020-06-04T17:49:32Z", "type": "forcePushed"}, {"oid": "96626c47c1a15025a0c240aac2a45d04a29f0120", "url": "https://github.com/apache/flink/commit/96626c47c1a15025a0c240aac2a45d04a29f0120", "message": "[FLINK-18136] Use initCheckpoint in CheckpointBarrierUnaligner", "committedDate": "2020-06-04T17:51:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0MDcwMw==", "url": "https://github.com/apache/flink/pull/12489#discussion_r435740703", "bodyText": "nit: can use new TestCheckpointStorageWorkerView(100) for simple.", "author": "zhijiangW", "createdAt": "2020-06-05T07:33:45Z", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorTest.java", "diffHunk": "@@ -373,4 +405,35 @@ public void processWatermark(Watermark mark) throws Exception {\n \t\tpublic void processLatencyMarker(LatencyMarker latencyMarker) {\n \t\t}\n \t}\n+\n+\tprivate static SubtaskCheckpointCoordinator coordinator(boolean unalignedCheckpointEnabled, ChannelStateWriter channelStateWriter) throws IOException {\n+\t\treturn new SubtaskCheckpointCoordinatorImpl(\n+\t\t\tcheckpointStorageWorkerView(100),", "originalCommit": "96651fc6d199bad117ee85669e3b04029f64d2e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU4NjgzMA==", "url": "https://github.com/apache/flink/pull/12489#discussion_r436586830", "bodyText": "Good point!", "author": "rkhachatryan", "createdAt": "2020-06-08T10:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0MDcwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0MDc1Mw==", "url": "https://github.com/apache/flink/pull/12489#discussion_r435740753", "bodyText": "nit: checkNotNull(channelStateWriter)", "author": "zhijiangW", "createdAt": "2020-06-05T07:33:53Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -142,7 +166,7 @@\n \t\tthis.env = checkNotNull(env);\n \t\tthis.asyncExceptionHandler = checkNotNull(asyncExceptionHandler);\n \t\tthis.actionExecutor = checkNotNull(actionExecutor);\n-\t\tthis.channelStateWriter = unalignedCheckpointEnabled ? openChannelStateWriter() : ChannelStateWriter.NO_OP;\n+\t\tthis.channelStateWriter = channelStateWriter;", "originalCommit": "96651fc6d199bad117ee85669e3b04029f64d2e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0MDc4MQ==", "url": "https://github.com/apache/flink/pull/12489#discussion_r435740781", "bodyText": "nit: checkpointStorage argument also in separate line", "author": "zhijiangW", "createdAt": "2020-06-05T07:33:57Z", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -134,6 +132,32 @@\n \t\t\tboolean unalignedCheckpointEnabled,\n \t\t\tBiFunctionWithException<ChannelStateWriter, Long, CompletableFuture<Void>, IOException> prepareInputSnapshot,\n \t\t\tint maxRecordAbortedCheckpoints) throws IOException {\n+\t\tthis(checkpointStorage,", "originalCommit": "96651fc6d199bad117ee85669e3b04029f64d2e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0OTkxOA==", "url": "https://github.com/apache/flink/pull/12489#discussion_r435749918", "bodyText": "return taskOwnedCheckpointStreamFactory directly?", "author": "zhijiangW", "createdAt": "2020-06-05T07:52:09Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/state/TestCheckpointStorageWorkerView.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.state;\n+\n+import org.apache.flink.runtime.state.memory.MemCheckpointStreamFactory;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Non-persistent {@link CheckpointStorageWorkerView} for tests. Uses {@link MemCheckpointStreamFactory}.\n+ */\n+public class TestCheckpointStorageWorkerView implements CheckpointStorageWorkerView {\n+\n+\tprivate final int maxStateSize;\n+\tprivate final MemCheckpointStreamFactory taskOwnedCheckpointStreamFactory;\n+\tprivate final CheckpointedStateScope taskOwnedStateScope;\n+\n+\tpublic TestCheckpointStorageWorkerView(int maxStateSize) {\n+\t\tthis(maxStateSize, CheckpointedStateScope.EXCLUSIVE);\n+\t}\n+\n+\tprivate TestCheckpointStorageWorkerView(int maxStateSize, CheckpointedStateScope taskOwnedStateScope) {\n+\t\tthis.maxStateSize = maxStateSize;\n+\t\tthis.taskOwnedCheckpointStreamFactory = new MemCheckpointStreamFactory(maxStateSize);\n+\t\tthis.taskOwnedStateScope = taskOwnedStateScope;\n+\t}\n+\n+\t@Override\n+\tpublic CheckpointStreamFactory resolveCheckpointStorageLocation(long checkpointId, CheckpointStorageLocationReference reference) {\n+\t\treturn new MemCheckpointStreamFactory(maxStateSize);", "originalCommit": "96626c47c1a15025a0c240aac2a45d04a29f0120", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU4NjQyNg==", "url": "https://github.com/apache/flink/pull/12489#discussion_r436586426", "bodyText": "I'm not sure if this will be correct behavior.", "author": "rkhachatryan", "createdAt": "2020-06-08T10:03:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0OTkxOA=="}], "type": "inlineReview"}, {"oid": "f7099ecb1efa408ddef934b8d1eb14b2bdd71ea6", "url": "https://github.com/apache/flink/commit/f7099ecb1efa408ddef934b8d1eb14b2bdd71ea6", "message": "[FLINK-18136] Extract SubtaskCheckpointCoordinator#initCheckpoint and use in StreamTask", "committedDate": "2020-06-08T10:05:00Z", "type": "commit"}, {"oid": "ba1441f6ae19db9c69eb2d1e45c061cd232e9cf6", "url": "https://github.com/apache/flink/commit/ba1441f6ae19db9c69eb2d1e45c061cd232e9cf6", "message": "[FLINK-18136] Use initCheckpoint in CheckpointBarrierUnaligner", "committedDate": "2020-06-08T10:07:20Z", "type": "commit"}, {"oid": "ba1441f6ae19db9c69eb2d1e45c061cd232e9cf6", "url": "https://github.com/apache/flink/commit/ba1441f6ae19db9c69eb2d1e45c061cd232e9cf6", "message": "[FLINK-18136] Use initCheckpoint in CheckpointBarrierUnaligner", "committedDate": "2020-06-08T10:07:20Z", "type": "forcePushed"}]}