{"pr_number": 11334, "pr_title": "[FLINK-16464][sql-client]result-mode tableau may shift when content contains Chinese String in SQL CLI", "pr_createdAt": "2020-03-06T15:53:04Z", "pr_url": "https://github.com/apache/flink/pull/11334", "timeline": [{"oid": "3872cefa8859725fa3f51e0e73698e5d1e086e3b", "url": "https://github.com/apache/flink/commit/3872cefa8859725fa3f51e0e73698e5d1e086e3b", "message": "[FLINK-16464][sql-client]result-mode tableau may shift when content contains Chinese String in SQL CLI", "committedDate": "2020-03-06T15:48:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4ODQ4OQ==", "url": "https://github.com/apache/flink/pull/11334#discussion_r388988489", "bodyText": "Looks like we can not use UTF-8 length too...", "author": "JingsongLi", "createdAt": "2020-03-06T16:01:09Z", "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliTableauResultViewTest.java", "diffHunk": "@@ -167,8 +177,9 @@ public void testBatchResult() {\n \t\t\t\t\"|   false | -2147483648 |  9223372036854775807 |                     (NULL) |    12345.06789 |    2020-03-01 18:39:14.123 |\\n\" +\n \t\t\t\t\"|    true |         100 | -9223372036854775808 |                 abcdefg111 |         (NULL) | 2020-03-01 18:39:14.123456 |\\n\" +\n \t\t\t\t\"|  (NULL) |          -1 |                   -1 | abcdefghijklmnopqrstuvwxyz |   -12345.06789 |                     (NULL) |\\n\" +\n+\t\t\t\t\"|  (NULL) |          -1 |                   -1 |         \u8fd9\u662f\u4e00\u6bb5\u4e2d\u6587 |   -12345.06789 |      2020-03-04 18:39:14.0 |\\n\"\t+", "originalCommit": "3872cefa8859725fa3f51e0e73698e5d1e086e3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAwNzY0MQ==", "url": "https://github.com/apache/flink/pull/11334#discussion_r389007641", "bodyText": "Hi, Jingsongli,\nHere's right,  the String  '         \u8fd9\u662f\u4e00\u6bb5\u4e2d\u6587 '  has same length with 'abcdefghijklmnopqrstuvwxyz' and shows well  when print in terminal.\nYou can see the final view if you using  sql-client .", "author": "leonardBang", "createdAt": "2020-03-06T16:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4ODQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyMDc1Mg==", "url": "https://github.com/apache/flink/pull/11334#discussion_r389220752", "bodyText": "You sure about this? It doesn't look right when I print out the string via System.out.println in IDE", "author": "KurtYoung", "createdAt": "2020-03-07T02:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4ODQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyMjA0NQ==", "url": "https://github.com/apache/flink/pull/11334#discussion_r389222045", "bodyText": "It also doesn't seem right when I executed this test in my terminal by command line.", "author": "KurtYoung", "createdAt": "2020-03-07T03:04:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4ODQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyMjY3NQ==", "url": "https://github.com/apache/flink/pull/11334#discussion_r389222675", "bodyText": "I think Jingsong is right, we can't use String.getBytes().length here. For example, the result of \"\u8fd9\u662f\u4e00\u6bb5\u4e2d\u6587\".getBytes().length() is 18, but if we want the display correct, it should be 12.", "author": "KurtYoung", "createdAt": "2020-03-07T03:14:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4ODQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMjc1Mg==", "url": "https://github.com/apache/flink/pull/11334#discussion_r389232752", "bodyText": "The problem is that UTF-8 char's display width is different with UTF-8 char's bytes length. \"\u8fd9\u662f\u4e00\u6bb5\u4e2d\u6587\".getBytes().length() will return 18 because length of Chinese char is 3 in UTF-8 unicode\uff0chere we can use GBK unicode which Chinese char's length is 2.\nBut GBK is not common enough than UTF-8.", "author": "leonardBang", "createdAt": "2020-03-07T06:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4ODQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMjk5Mw==", "url": "https://github.com/apache/flink/pull/11334#discussion_r389232993", "bodyText": "Using GBK works well with Chinese,\n\nmy concern is other language like Japanese/Korean have same problem.", "author": "leonardBang", "createdAt": "2020-03-07T06:33:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4ODQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzNDM0Mg==", "url": "https://github.com/apache/flink/pull/11334#discussion_r389234342", "bodyText": "It seems this is a full width / half width character issue, but not necessarily an encoding problem.", "author": "KurtYoung", "createdAt": "2020-03-07T07:04:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4ODQ4OQ=="}], "type": "inlineReview"}, {"oid": "dbef90ead12cfccbb50a04b1f59d809df9b7fc40", "url": "https://github.com/apache/flink/commit/dbef90ead12cfccbb50a04b1f59d809df9b7fc40", "message": "[FLINK-16464][sql-client]result-mode tableau may shift when content contains Chinese String in SQL CLI", "committedDate": "2020-03-09T15:35:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3NDg0NA==", "url": "https://github.com/apache/flink/pull/11334#discussion_r390074844", "bodyText": "We should also shade this jar into flink-sql-client jar?\nIf yes, then please also update the license files", "author": "KurtYoung", "createdAt": "2020-03-10T03:19:55Z", "path": "flink-table/flink-sql-client/pom.xml", "diffHunk": "@@ -109,6 +109,13 @@ under the License.\n \t\t\t<version>3.9.0</version>\n \t\t</dependency>\n \n+\t\t<!-- Tools to Unify display format for different languages -->\n+\t\t<dependency>\n+\t\t\t<groupId>com.ibm.icu</groupId>", "originalCommit": "dbef90ead12cfccbb50a04b1f59d809df9b7fc40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3NTQ5NA==", "url": "https://github.com/apache/flink/pull/11334#discussion_r390075494", "bodyText": "use COLUMN_TRUNCATED_FLAG.length() instead?", "author": "KurtYoung", "createdAt": "2020-03-10T03:22:49Z", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/CliTableauResultView.java", "diffHunk": "@@ -60,9 +61,9 @@\n \tprivate static final int NULL_COLUMN_WIDTH = CliStrings.NULL_COLUMN.length();\n \tprivate static final int MAX_COLUMN_WIDTH = 30;\n \tprivate static final int DEFAULT_COLUMN_WIDTH = 20;\n+\tprivate static final int COLUMN_TRUNCATED_FLAG_WIDTH = 3;", "originalCommit": "dbef90ead12cfccbb50a04b1f59d809df9b7fc40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3NjIwMg==", "url": "https://github.com/apache/flink/pull/11334#discussion_r390076202", "bodyText": "int displayWidth = getStringDisplayWidth(col)  would be more clear and accurate", "author": "KurtYoung", "createdAt": "2020-03-10T03:25:59Z", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/CliTableauResultView.java", "diffHunk": "@@ -276,13 +277,13 @@ private void printSingleRow(int[] colWidths, String[] cols) {\n \t\tsb.append(\"|\");\n \t\tint idx = 0;\n \t\tfor (String col : cols) {\n-\t\t\tbyte[] colBytes = getUTF8Bytes(col);\n \t\t\tsb.append(\" \");\n-\t\t\tif (colBytes.length <= colWidths[idx]) {\n-\t\t\t\tsb.append(StringUtils.repeat(' ', colWidths[idx] - colBytes.length));\n+\t\t\tint colWidth = getStringWidth(col);", "originalCommit": "dbef90ead12cfccbb50a04b1f59d809df9b7fc40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3NjQzNA==", "url": "https://github.com/apache/flink/pull/11334#discussion_r390076434", "bodyText": "getFixedString => truncateString?", "author": "KurtYoung", "createdAt": "2020-03-10T03:27:01Z", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/CliTableauResultView.java", "diffHunk": "@@ -276,13 +277,13 @@ private void printSingleRow(int[] colWidths, String[] cols) {\n \t\tsb.append(\"|\");\n \t\tint idx = 0;\n \t\tfor (String col : cols) {\n-\t\t\tbyte[] colBytes = getUTF8Bytes(col);\n \t\t\tsb.append(\" \");\n-\t\t\tif (colBytes.length <= colWidths[idx]) {\n-\t\t\t\tsb.append(StringUtils.repeat(' ', colWidths[idx] - colBytes.length));\n+\t\t\tint colWidth = getStringWidth(col);\n+\t\t\tif (colWidth <= colWidths[idx]) {\n+\t\t\t\tsb.append(StringUtils.repeat(' ', colWidths[idx] - colWidth));\n \t\t\t\tsb.append(col);\n \t\t\t} else {\n-\t\t\t\tsb.append(subMaxString(col, colWidths[idx]));\n+\t\t\t\tsb.append(getFixedString(col, colWidths[idx]));", "originalCommit": "dbef90ead12cfccbb50a04b1f59d809df9b7fc40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3OTE5Mw==", "url": "https://github.com/apache/flink/pull/11334#discussion_r390079193", "bodyText": "and second parameter can be replaced with colWidths[idx] - COLUMN_TRUNCATED_FLAG_WIDTH as targetLength", "author": "KurtYoung", "createdAt": "2020-03-10T03:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3NjQzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3OTM1OQ==", "url": "https://github.com/apache/flink/pull/11334#discussion_r390079359", "bodyText": "please add unit tests for both newly added methods.", "author": "KurtYoung", "createdAt": "2020-03-10T03:40:40Z", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/CliUtils.java", "diffHunk": "@@ -111,4 +113,33 @@ public static void normalizeColumn(AttributedStringBuilder sb, String col, int m\n \t\t}\n \t\treturn typesAsString;\n \t}\n+\n+\tpublic static int getStringWidth(String str) {", "originalCommit": "dbef90ead12cfccbb50a04b1f59d809df9b7fc40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3OTQ0MA==", "url": "https://github.com/apache/flink/pull/11334#discussion_r390079440", "bodyText": "what's this?", "author": "KurtYoung", "createdAt": "2020-03-10T03:41:00Z", "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliTableauResultViewTest.java", "diffHunk": "@@ -156,19 +176,21 @@ public void testBatchResult() {\n \n \t\tview.displayBatchResults();\n \t\tview.close();\n-\n+\t\t// note: about", "originalCommit": "dbef90ead12cfccbb50a04b1f59d809df9b7fc40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzNDg4NQ==", "url": "https://github.com/apache/flink/pull/11334#discussion_r391034885", "bodyText": "unused note, I'll clear it.\nThanks for your review,  I\u2019ll address soon.", "author": "leonardBang", "createdAt": "2020-03-11T14:59:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3OTQ0MA=="}], "type": "inlineReview"}, {"oid": "8aa3b784db3bdd4b0c5bc455c96cfa59092cbe6f", "url": "https://github.com/apache/flink/commit/8aa3b784db3bdd4b0c5bc455c96cfa59092cbe6f", "message": "address comment", "committedDate": "2020-03-11T15:53:53Z", "type": "commit"}, {"oid": "71e99474dc27f501c2c512e80761edd2057c00d0", "url": "https://github.com/apache/flink/commit/71e99474dc27f501c2c512e80761edd2057c00d0", "message": "add license and unit tests", "committedDate": "2020-03-12T02:45:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4OTEzMQ==", "url": "https://github.com/apache/flink/pull/11334#discussion_r391989131", "bodyText": "revert this", "author": "KurtYoung", "createdAt": "2020-03-13T01:45:59Z", "path": "flink-table/flink-sql-client/pom.xml", "diffHunk": "@@ -7,7 +7,9 @@ regarding copyright ownership.  The ASF licenses this file\n to you under the Apache License, Version 2.0 (the\n \"License\"); you may not use this file except in compliance\n with the License.  You may obtain a copy of the License at\n+", "originalCommit": "71e99474dc27f501c2c512e80761edd2057c00d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAzMjAxOA==", "url": "https://github.com/apache/flink/pull/11334#discussion_r392032018", "bodyText": "ok, I just want to unify the format because the license header is different with other pom.xml", "author": "leonardBang", "createdAt": "2020-03-13T05:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4OTEzMQ=="}], "type": "inlineReview"}, {"oid": "b3dea1922d35f3a023fd1f70e8dfe5a13fb3f14a", "url": "https://github.com/apache/flink/commit/b3dea1922d35f3a023fd1f70e8dfe5a13fb3f14a", "message": "revert pom header format", "committedDate": "2020-03-13T05:06:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIyODE0Mw==", "url": "https://github.com/apache/flink/pull/11334#discussion_r411228143", "bodyText": "@KurtYoung @leonardBang I don't think icu is a BSD license. Could you please fix this, or revert the changes.", "author": "aljoscha", "createdAt": "2020-04-20T09:24:59Z", "path": "flink-table/flink-sql-client/src/main/resources/META-INF/NOTICE", "diffHunk": "@@ -9,3 +9,4 @@ See bundled license files for details.\n \n - org.jline:jline-terminal:3.9.0\n - org.jline:jline-reader:3.9.0\n+- com.ibm.icu:icu4j:65.1", "originalCommit": "b3dea1922d35f3a023fd1f70e8dfe5a13fb3f14a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI2NTYzMw==", "url": "https://github.com/apache/flink/pull/11334#discussion_r411265633", "bodyText": "@aljoscha Thanks for your feedback, you're wright that icu is not a pure BSD license, I hesitate to import it at the beginning, but decided to add it after references hive https://github.com/apache/hive/blob/master/binary-package-licenses/com.ibm.icu.icu4j-LICENSE", "author": "leonardBang", "createdAt": "2020-04-20T10:24:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIyODE0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMyMzk2NA==", "url": "https://github.com/apache/flink/pull/11334#discussion_r411323964", "bodyText": "And camel using it too ,apache/camel@83ae6d4", "author": "leonardBang", "createdAt": "2020-04-20T12:07:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIyODE0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM0Nzg1Nw==", "url": "https://github.com/apache/flink/pull/11334#discussion_r411347857", "bodyText": "I checked https://www.apache.org/legal/resolved.html, and ICU is in category A, isn't is sufficient?", "author": "KurtYoung", "createdAt": "2020-04-20T12:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIyODE0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5MzQ1NQ==", "url": "https://github.com/apache/flink/pull/11334#discussion_r411493455", "bodyText": "The license is ok to add, yes. But in this list it's listed under the BSD licenses. Icu is not licensed under a BSD license. See for example \n  \n    \n      flink/flink-dist/src/main/resources/META-INF/NOTICE\n    \n    \n         Line 20\n      in\n      4035f03\n    \n    \n    \n    \n\n        \n          \n           - commons-collections:commons-collections:3.2.2 \n        \n    \n  \n\n, which has many different blocks for different licenses.", "author": "aljoscha", "createdAt": "2020-04-20T15:55:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIyODE0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxMTY4MQ==", "url": "https://github.com/apache/flink/pull/11334#discussion_r411811681", "bodyText": "I see what you mean, thanks", "author": "KurtYoung", "createdAt": "2020-04-21T01:56:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIyODE0Mw=="}], "type": "inlineReview"}]}