{"pr_number": 12275, "pr_title": "[FLINK-16021][table-common] DescriptorProperties.putTableSchema does \u2026", "pr_createdAt": "2020-05-21T06:34:40Z", "pr_url": "https://github.com/apache/flink/pull/12275", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0Njc4NQ==", "url": "https://github.com/apache/flink/pull/12275#discussion_r429746785", "bodyText": "Because we only support primary key now. I think we can have a dedicate primary key properties, so that we don't need to handle the index. For example:\npublic static final String PRIMARY_KEY_NAME = \"primary-key.name\";\npublic static final String PRIMARY_KEY_COLUMNS = \"primary-key.columns\";\n\nschema.getPrimaryKey().ifPresent(pk -> {\n    putString(key + \".\" + PRIMARY_KEY_NAME, pk.getName());\n    putString(key + \".\" + PRIMARY_KEY_COLUMNS, String.join(\",\", pk.getColumns()));\n});\nThis is also helpful for users who write yaml:\ntables:\n  - name: TableNumber1\n    type: source-table\n    schema:\n      primary-key\n        name: constraint1\n        columns: f1, f2", "author": "wuchong", "createdAt": "2020-05-25T06:08:23Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/descriptors/DescriptorProperties.java", "diffHunk": "@@ -241,6 +244,19 @@ public void putTableSchema(String key, TableSchema schema) {\n \t\t\t\tArrays.asList(WATERMARK_ROWTIME, WATERMARK_STRATEGY_EXPR, WATERMARK_STRATEGY_DATA_TYPE),\n \t\t\t\twatermarkValues);\n \t\t}\n+\n+\t\tif (schema.getPrimaryKey().isPresent()) {\n+\t\t\tfinal UniqueConstraint uniqueConstraint = schema.getPrimaryKey().get();\n+\t\t\tfinal List<List<String>> uniqueConstraintValues = new ArrayList<>();\n+\t\t\tuniqueConstraintValues.add(Arrays.asList(\n+\t\t\t\t\tuniqueConstraint.getName(),\n+\t\t\t\t\tuniqueConstraint.getType().name(),\n+\t\t\t\t\tString.join(\",\", uniqueConstraint.getColumns())));\n+\t\t\tputIndexedFixedProperties(\n+\t\t\t\t\tkey + '.' + CONSTRAINT_UNIQUE,\n+\t\t\t\t\tArrays.asList(NAME, TYPE, CONSTRAINT_UNIQUE_COLUMNS),\n+\t\t\t\t\tuniqueConstraintValues);\n+\t\t}", "originalCommit": "bc6de4913b48c82a220eda620fb58667e7e93642", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0OTIzNg==", "url": "https://github.com/apache/flink/pull/12275#discussion_r429749236", "bodyText": "We can just to exclude the primary key, then don't need the regex matching.\n.filter((k) -> k.startsWith(key) && !k.startsWith(key + \".\" + PRIMARY_KEY) && k.endsWith('.' + NAME))", "author": "wuchong", "createdAt": "2020-05-25T06:17:51Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/descriptors/DescriptorProperties.java", "diffHunk": "@@ -610,7 +626,9 @@ public DataType getDataType(String key) {\n \tpublic Optional<TableSchema> getOptionalTableSchema(String key) {\n \t\t// filter for number of fields\n \t\tfinal int fieldCount = properties.keySet().stream()\n-\t\t\t.filter((k) -> k.startsWith(key) && k.endsWith('.' + TABLE_SCHEMA_NAME))\n+\t\t\t.filter((k) -> k.startsWith(key)\n+\t\t\t\t\t// \"key.\" is the prefix.\n+\t\t\t\t\t&& SCHEMA_COLUMN_NAME_SUFFIX.matcher(k.substring(key.length() + 1)).matches())", "originalCommit": "bc6de4913b48c82a220eda620fb58667e7e93642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzOTgwNQ==", "url": "https://github.com/apache/flink/pull/12275#discussion_r430239805", "bodyText": "I think the regex matching is a more general way to match column names for the long run, just remove some specific keys seems hacky from my side.", "author": "danny0405", "createdAt": "2020-05-26T08:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0OTIzNg=="}], "type": "inlineReview"}, {"oid": "2f4fde5df51d0071adccde4d44de39b54b0122fa", "url": "https://github.com/apache/flink/commit/2f4fde5df51d0071adccde4d44de39b54b0122fa", "message": "[FLINK-16021][table-common] DescriptorProperties.putTableSchema does not include constraints", "committedDate": "2020-05-26T08:27:48Z", "type": "commit"}, {"oid": "0e4fff0b8b00cade33c00e9bb68f667dd11a1456", "url": "https://github.com/apache/flink/commit/0e4fff0b8b00cade33c00e9bb68f667dd11a1456", "message": "Fix Jark's review comments and resolve conflicts", "committedDate": "2020-05-26T09:11:27Z", "type": "commit"}, {"oid": "0e4fff0b8b00cade33c00e9bb68f667dd11a1456", "url": "https://github.com/apache/flink/commit/0e4fff0b8b00cade33c00e9bb68f667dd11a1456", "message": "Fix Jark's review comments and resolve conflicts", "committedDate": "2020-05-26T09:11:27Z", "type": "forcePushed"}, {"oid": "2b848a7895db6b1b5263a5242e39b822fa30cecc", "url": "https://github.com/apache/flink/commit/2b848a7895db6b1b5263a5242e39b822fa30cecc", "message": "Fix checkstyle", "committedDate": "2020-05-27T02:40:03Z", "type": "commit"}, {"oid": "e027ff0822c8621eb8f061888cc15fd7465133ba", "url": "https://github.com/apache/flink/commit/e027ff0822c8621eb8f061888cc15fd7465133ba", "message": "Fix test error", "committedDate": "2020-05-27T04:16:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk0NzA3MQ==", "url": "https://github.com/apache/flink/pull/12275#discussion_r430947071", "bodyText": "Throw an exception if the the name is not present?", "author": "wuchong", "createdAt": "2020-05-27T08:31:43Z", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/descriptors/DescriptorProperties.java", "diffHunk": "@@ -669,6 +677,14 @@ public DataType getDataType(String key) {\n \t\t\t}\n \t\t}\n \n+\t\t// Extract unique constraints.\n+\t\tString pkConstraintNameKey = key + '.' + PRIMARY_KEY_NAME;\n+\t\tfinal Optional<String> pkConstraintNameOpt = optionalGet(pkConstraintNameKey);\n+\t\tif (pkConstraintNameOpt.isPresent()) {\n+\t\t\tfinal String pkColumnsKey = key + '.' + PRIMARY_KEY_COLUMNS;\n+\t\t\tfinal String columns = optionalGet(pkColumnsKey).orElseThrow(exceptionSupplier(pkColumnsKey));\n+\t\t\tschemaBuilder.primaryKey(pkConstraintNameOpt.get(), columns.split(\",\"));\n+\t\t}", "originalCommit": "e027ff0822c8621eb8f061888cc15fd7465133ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk4OTk5OQ==", "url": "https://github.com/apache/flink/pull/12275#discussion_r430989999", "bodyText": "I think it is not necessary, the schema.primary-key.columns should never appear as a single(e.g. comes from #putTableSchema).", "author": "danny0405", "createdAt": "2020-05-27T09:40:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk0NzA3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5ODEzNg==", "url": "https://github.com/apache/flink/pull/12275#discussion_r430998136", "bodyText": "Then I think we don't need to use optionalGet here, we can use getString directly.", "author": "wuchong", "createdAt": "2020-05-27T09:55:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk0NzA3MQ=="}], "type": "inlineReview"}]}