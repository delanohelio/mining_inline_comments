{"pr_number": 11456, "pr_title": "[FLINK-16602][k8s] Rework the internal/external Service", "pr_createdAt": "2020-03-20T02:27:21Z", "pr_url": "https://github.com/apache/flink/pull/11456", "timeline": [{"oid": "0ccf40035e815a3073eefb8abd6155e176c998f4", "url": "https://github.com/apache/flink/commit/0ccf40035e815a3073eefb8abd6155e176c998f4", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup.", "committedDate": "2020-03-24T04:53:54Z", "type": "forcePushed"}, {"oid": "8b988ea012330eaf2e1c42865a198192d27e23cd", "url": "https://github.com/apache/flink/commit/8b988ea012330eaf2e1c42865a198192d27e23cd", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup.", "committedDate": "2020-03-25T14:28:00Z", "type": "forcePushed"}, {"oid": "4983430dece0dec9f17f0280e1cf499a8b639061", "url": "https://github.com/apache/flink/commit/4983430dece0dec9f17f0280e1cf499a8b639061", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup.", "committedDate": "2020-03-26T01:17:12Z", "type": "forcePushed"}, {"oid": "d80bf44961a0689f289e1ed7fe3a2ff30e8005eb", "url": "https://github.com/apache/flink/commit/d80bf44961a0689f289e1ed7fe3a2ff30e8005eb", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup.", "committedDate": "2020-03-28T02:12:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMzc2Mg==", "url": "https://github.com/apache/flink/pull/11456#discussion_r399913762", "bodyText": "nit: maybe isInternalServiceEnabled is better. Since we do not really enable the internal service here, we just check the state.", "author": "wangyang0918", "createdAt": "2020-03-30T03:52:55Z", "path": "flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/parameters/KubernetesJobManagerParameters.java", "diffHunk": "@@ -112,4 +113,8 @@ public String getEntrypointClass() {\n \tpublic KubernetesConfigOptions.ServiceExposedType getRestServiceExposedType() {\n \t\treturn flinkConfig.get(KubernetesConfigOptions.REST_SERVICE_EXPOSED_TYPE);\n \t}\n+\n+\tpublic boolean enableInternalService() {", "originalCommit": "d80bf44961a0689f289e1ed7fe3a2ff30e8005eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIwMTI4MA==", "url": "https://github.com/apache/flink/pull/11456#discussion_r400201280", "bodyText": "Agree!", "author": "zhengcanbin", "createdAt": "2020-03-30T13:43:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMzc2Mg=="}], "type": "inlineReview"}, {"oid": "b5a234817c48fa865b6086490ce8bf2e5c3c436f", "url": "https://github.com/apache/flink/commit/b5a234817c48fa865b6086490ce8bf2e5c3c436f", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup.", "committedDate": "2020-03-30T14:03:16Z", "type": "forcePushed"}, {"oid": "3c92f7417fc12a878879653e7a17e592a9816640", "url": "https://github.com/apache/flink/commit/3c92f7417fc12a878879653e7a17e592a9816640", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup.", "committedDate": "2020-04-07T07:28:37Z", "type": "commit"}, {"oid": "3c92f7417fc12a878879653e7a17e592a9816640", "url": "https://github.com/apache/flink/commit/3c92f7417fc12a878879653e7a17e592a9816640", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup.", "committedDate": "2020-04-07T07:28:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwODM3NQ==", "url": "https://github.com/apache/flink/pull/11456#discussion_r404608375", "bodyText": "@zhengcanbin does this setting refer to Headless service? Can we move \"None\" into Constants?", "author": "tisonkun", "createdAt": "2020-04-07T07:53:41Z", "path": "flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InternalServiceDecorator.java", "diffHunk": "@@ -19,63 +19,67 @@\n package org.apache.flink.kubernetes.kubeclient.decorators;\n \n import org.apache.flink.configuration.JobManagerOptions;\n-import org.apache.flink.kubernetes.configuration.KubernetesConfigOptions;\n import org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters;\n import org.apache.flink.kubernetes.utils.Constants;\n import org.apache.flink.kubernetes.utils.KubernetesUtils;\n \n import io.fabric8.kubernetes.api.model.HasMetadata;\n-import io.fabric8.kubernetes.api.model.ServicePort;\n+import io.fabric8.kubernetes.api.model.Service;\n+import io.fabric8.kubernetes.api.model.ServiceBuilder;\n \n import java.io.IOException;\n+import java.util.Collections;\n import java.util.List;\n \n+import static org.apache.flink.util.Preconditions.checkNotNull;\n+\n /**\n  * Creates an internal Service which forwards the requests from the TaskManager(s) to the\n  * active JobManager.\n  * Note that only the non-HA scenario relies on this Service for internal communication, since\n  * in the HA mode, the TaskManager(s) directly connects to the JobManager via IP address.\n  */\n-public class InternalServiceDecorator extends AbstractServiceDecorator {\n+public class InternalServiceDecorator extends AbstractKubernetesStepDecorator {\n+\n+\tprivate final KubernetesJobManagerParameters kubernetesJobManagerParameters;\n \n \tpublic InternalServiceDecorator(KubernetesJobManagerParameters kubernetesJobManagerParameters) {\n-\t\tsuper(kubernetesJobManagerParameters);\n+\t\tthis.kubernetesJobManagerParameters = checkNotNull(kubernetesJobManagerParameters);\n \t}\n \n \t@Override\n \tpublic List<HasMetadata> buildAccompanyingKubernetesResources() throws IOException {\n-\t\tfinal String serviceName = getServiceName();\n+\t\tif (!kubernetesJobManagerParameters.isInternalServiceEnabled()) {\n+\t\t\treturn Collections.emptyList();\n+\t\t}\n+\n+\t\tfinal String serviceName = KubernetesUtils.getInternalServiceName(kubernetesJobManagerParameters.getClusterId());\n+\n+\t\tfinal Service headlessService = new ServiceBuilder()\n+\t\t\t.withApiVersion(Constants.API_VERSION)\n+\t\t\t.withNewMetadata()\n+\t\t\t\t.withName(serviceName)\n+\t\t\t\t.withLabels(kubernetesJobManagerParameters.getCommonLabels())\n+\t\t\t\t.endMetadata()\n+\t\t\t.withNewSpec()\n+\t\t\t\t.withClusterIP(\"None\")", "originalCommit": "3c92f7417fc12a878879653e7a17e592a9816640", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxNjg0Nw==", "url": "https://github.com/apache/flink/pull/11456#discussion_r404616847", "bodyText": "@zhengcanbin does this setting refer to Headless service?\nYes.\n\n\nCan we move \"None\" into Constants?\nFixed by 1188bfd", "author": "zhengcanbin", "createdAt": "2020-04-07T08:07:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwODM3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwODU3NQ==", "url": "https://github.com/apache/flink/pull/11456#discussion_r404608575", "bodyText": "Also update literal \"None\" here.", "author": "tisonkun", "createdAt": "2020-04-07T07:54:02Z", "path": "flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/factory/KubernetesJobManagerFactoryTest.java", "diffHunk": "@@ -179,8 +180,9 @@ public void testServices() {\n \t\tfinal Service resultInternalService = internalServiceCandidates.get(0);\n \t\tassertEquals(2, resultInternalService.getMetadata().getLabels().size());\n \n-\t\tassertEquals(resultInternalService.getSpec().getType(), \"ClusterIP\");\n-\t\tassertEquals(3, resultInternalService.getSpec().getPorts().size());\n+\t\tassertNull(resultInternalService.getSpec().getType());\n+\t\tassertEquals(\"None\", resultInternalService.getSpec().getClusterIP());", "originalCommit": "3c92f7417fc12a878879653e7a17e592a9816640", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxNzAwOA==", "url": "https://github.com/apache/flink/pull/11456#discussion_r404617008", "bodyText": "Fixed by 1188bfd", "author": "zhengcanbin", "createdAt": "2020-04-07T08:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwODU3NQ=="}], "type": "inlineReview"}, {"oid": "1188bfdbd6ecde4c6277b93cea471636852ea9b9", "url": "https://github.com/apache/flink/commit/1188bfdbd6ecde4c6277b93cea471636852ea9b9", "message": "[FLINK-16602][k8s] Move literal \"None\" into Constants", "committedDate": "2020-04-07T08:05:33Z", "type": "commit"}]}