{"pr_number": 10784, "pr_title": "[FLINK-15494] Fix time field index wrong in LogicalWindowAggregateRul\u2026", "pr_createdAt": "2020-01-07T07:25:57Z", "pr_url": "https://github.com/apache/flink/pull/10784", "timeline": [{"oid": "d6b24766504bc1f1f1d001e6faa3f85e2f4667e9", "url": "https://github.com/apache/flink/commit/d6b24766504bc1f1f1d001e6faa3f85e2f4667e9", "message": "[FLINK-15494] Fix time field index wrong in LogicalWindowAggregateRuleBase", "committedDate": "2020-01-07T06:06:03Z", "type": "commit"}, {"oid": "cb4e34ec77c0af9856af02b337984bf0a05fae34", "url": "https://github.com/apache/flink/commit/cb4e34ec77c0af9856af02b337984bf0a05fae34", "message": "remove unused imports", "committedDate": "2020-01-07T07:27:37Z", "type": "commit"}, {"oid": "d0e5cb3e0d2cc118c98cd91e0470c5123219d1ec", "url": "https://github.com/apache/flink/commit/d0e5cb3e0d2cc118c98cd91e0470c5123219d1ec", "message": "remove blank line", "committedDate": "2020-01-07T07:28:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY5MDMwMQ==", "url": "https://github.com/apache/flink/pull/10784#discussion_r365690301", "bodyText": "Please rename to testCascadingTumbleWindow or testNestedTumbleWindow.", "author": "wuchong", "createdAt": "2020-01-13T08:48:34Z", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/WindowAggregateITCase.scala", "diffHunk": "@@ -100,6 +100,35 @@ class WindowAggregateITCase(mode: StateBackendMode)\n     assertEquals(expected.sorted, sink.getAppendResults.sorted)\n   }\n \n+  @Test\n+  def testDoubleTumbleWindow(): Unit = {", "originalCommit": "d0e5cb3e0d2cc118c98cd91e0470c5123219d1ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc1OTc1NA==", "url": "https://github.com/apache/flink/pull/10784#discussion_r365759754", "bodyText": "Could you add a similar nested window agg test for batch?\nYou can place it in org.apache.flink.table.planner.runtime.batch.sql.agg.WindowAggregateITCase.", "author": "wuchong", "createdAt": "2020-01-13T11:38:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY5MDMwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NDIwNQ==", "url": "https://github.com/apache/flink/pull/10784#discussion_r365764205", "bodyText": "The fix looks good to me. However, could you add some comments or change the parameter windowExprIdx to timeAttributeIndex ? As we know, windowExprIdx is timeAttributeIndex and so the rowtime field reference is accessed by windowExprIdx.\nThe same to StreamLogicalWindowAggregateRule.", "author": "wuchong", "createdAt": "2020-01-13T11:51:02Z", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/logical/BatchLogicalWindowAggregateRule.scala", "diffHunk": "@@ -62,27 +61,14 @@ class BatchLogicalWindowAggregateRule\n       throw new ValidationException(\"Window can not be defined over \"\n         + \"a proctime attribute column for batch mode\")\n     }\n-    operand match {\n-      case c: RexCall if c.getKind == SqlKind.CAST =>\n-        getTimeFieldReference(c.getOperands.get(0), windowExprIdx, rowType)\n-      // match TUMBLE_ROWTIME and TUMBLE_PROCTIME\n-      case c: RexCall if c.getOperands.size() == 1 &&\n-        FlinkTypeFactory.isTimeIndicatorType(c.getType) =>\n-        new FieldReferenceExpression(\n-          rowType.getFieldList.get(windowExprIdx).getName,\n-          fromLogicalTypeToDataType(toLogicalType(c.getType)),\n-          0, // only one input, should always be 0\n-          windowExprIdx)\n-      case ref: RexInputRef =>\n-        // resolve field name of window attribute\n-        val fieldName = rowType.getFieldList.get(ref.getIndex).getName\n-        val fieldType = rowType.getFieldList.get(ref.getIndex).getType\n-        new FieldReferenceExpression(\n-          fieldName,\n-          fromLogicalTypeToDataType(toLogicalType(fieldType)),\n-          0, // only one input, should always be 0\n-          windowExprIdx)\n-    }\n+\n+    val fieldName = rowType.getFieldList.get(windowExprIdx).getName\n+    val fieldType = rowType.getFieldList.get(windowExprIdx).getType\n+    new FieldReferenceExpression(\n+      fieldName,\n+      fromLogicalTypeToDataType(toLogicalType(fieldType)),\n+      0,\n+      windowExprIdx)", "originalCommit": "d0e5cb3e0d2cc118c98cd91e0470c5123219d1ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NTQzOQ==", "url": "https://github.com/apache/flink/pull/10784#discussion_r365765439", "bodyText": "Because translateWindow is postponed after getInAggregateGroupExpression, so if the time field is not a time attribute, the exception will be thrown from getInAggregateGroupExpression. But the exception there is not clear enought. Could you improve the exception in getInAggregateGroupExpression? For example:\ns\"Window aggregate can only be defined over a time attribute column, but ${timeAttribute.getType} encountered.\"", "author": "wuchong", "createdAt": "2020-01-13T11:54:21Z", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/logical/LogicalWindowAggregateRuleBase.scala", "diffHunk": "@@ -88,6 +85,9 @@ abstract class LogicalWindowAggregateRuleBase(description: String)\n       .project(project.getChildExps.updated(windowExprIdx, inAggGroupExpression))\n       .build()\n \n+    // translate window against newProject.\n+    val window = translateWindow(windowExpr, windowExprIdx, newProject.getRowType)", "originalCommit": "d0e5cb3e0d2cc118c98cd91e0470c5123219d1ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c58517317e7de5dda91742eaf5d0e6d23d3d14a0", "url": "https://github.com/apache/flink/commit/c58517317e7de5dda91742eaf5d0e6d23d3d14a0", "message": "Refine naming and add tests in batch WindowAggregateITCase", "committedDate": "2020-01-14T00:44:24Z", "type": "commit"}]}