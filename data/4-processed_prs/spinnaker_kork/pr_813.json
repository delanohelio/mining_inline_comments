{"pr_number": 813, "pr_title": "feat(api): Move ExpressionFunctionProvider to API", "pr_createdAt": "2020-10-23T19:34:08Z", "pr_url": "https://github.com/spinnaker/kork/pull/813", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI5MDg1Ng==", "url": "https://github.com/spinnaker/kork/pull/813#discussion_r512290856", "bodyText": "not necessary by any means but do you think it would be worthwhile to leave this here as a deprecated noop interface extending the new ExpressionFunctionProvider in -api?", "author": "cfieber", "createdAt": "2020-10-26T21:51:06Z", "path": "kork-expressions/src/main/kotlin/com/netflix/spinnaker/kork/expressions/ExpressionFunctionProvider.kt", "diffHunk": "@@ -1,151 +0,0 @@\n-/*\n- * Copyright 2019 Netflix, Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.netflix.spinnaker.kork.expressions\n-\n-import org.pf4j.ExtensionPoint\n-\n-/**\n- * Provides a contract for adding new function definitions for SpEL evaluation.\n- *\n- * The SpEL expression evaluator expects the the function implementations are\n- * included in the same concrete class as the [ExpressionFunctionProvider], with\n- * method names matching those defined in the [functions] definitions.\n- *\n- * ```\n- *  class HelloFunctionProvider : ExpressionFunctionProvider {\n- *    override fun getNamespace(): String? = \"netflix\"\n- *    override fun getFunctions(): Functions =\n- *      Functions(\n- *        \"hello\",\n- *        FunctionParameter(\n- *          Execution::class.java,\n- *          \"execution\",\n- *          \"The pipeline execution object that this function is being invoked on\"\n- *        )\n- *      )\n- *\n- *    @JvmStatic\n- *    fun hello(execution: Execution): String =\n- *      \"Hello, ${execution.id}\"\n- *  }\n- * ```\n- *\n- * The above function provider could then be called in a SpEL expression:\n- *\n- * ```\n- * ${netflix.hello()}\n- * ```\n- */\n-interface ExpressionFunctionProvider : ExtensionPoint {", "originalCommit": "f67c17814c6f5d6c2b09e0264433ff1fdb8da477", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3OTk3OQ==", "url": "https://github.com/spinnaker/kork/pull/813#discussion_r513579979", "bodyText": "Oh, good call - yes, I will do that.", "author": "robzienert", "createdAt": "2020-10-28T16:19:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI5MDg1Ng=="}], "type": "inlineReview"}, {"oid": "39b720e58168bf0e34b3dd6b3950154c108755ca", "url": "https://github.com/spinnaker/kork/commit/39b720e58168bf0e34b3dd6b3950154c108755ca", "message": "feat(api): Move ExpressionFunctionProvider to API", "committedDate": "2020-10-28T16:22:12Z", "type": "forcePushed"}, {"oid": "ba52a722b703adbb9436c0aa0dcbafd86f9a2470", "url": "https://github.com/spinnaker/kork/commit/ba52a722b703adbb9436c0aa0dcbafd86f9a2470", "message": "feat(api): Move ExpressionFunctionProvider to API", "committedDate": "2020-10-29T20:53:53Z", "type": "commit"}, {"oid": "ba52a722b703adbb9436c0aa0dcbafd86f9a2470", "url": "https://github.com/spinnaker/kork/commit/ba52a722b703adbb9436c0aa0dcbafd86f9a2470", "message": "feat(api): Move ExpressionFunctionProvider to API", "committedDate": "2020-10-29T20:53:53Z", "type": "forcePushed"}, {"oid": "37036032b21554802307c47531c4a3f403f1b55a", "url": "https://github.com/spinnaker/kork/commit/37036032b21554802307c47531c4a3f403f1b55a", "message": "Merge branch 'master' into expression-helpers-api", "committedDate": "2020-10-29T21:00:01Z", "type": "commit"}]}