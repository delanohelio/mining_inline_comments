{"pr_number": 468, "pr_title": "feat(plugins): Support for extracting plugin bundles", "pr_createdAt": "2020-01-15T18:58:59Z", "pr_url": "https://github.com/spinnaker/kork/pull/468", "timeline": [{"oid": "09906cae458de7536a60f4f4c62762b46efa0372", "url": "https://github.com/spinnaker/kork/commit/09906cae458de7536a60f4f4c62762b46efa0372", "message": "feat(plugins): Support for extracting plugin bundles", "committedDate": "2020-01-15T21:59:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzEzOTI0Mg==", "url": "https://github.com/spinnaker/kork/pull/468#discussion_r367139242", "bodyText": "This could probably be private?  Or, maybe we could just remove this function and have one extract function.", "author": "jonsie", "createdAt": "2020-01-15T22:23:33Z", "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/bundle/PluginBundleExtractor.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.netflix.spinnaker.kork.plugins.bundle\n+\n+import com.netflix.spinnaker.kork.exceptions.IntegrationException\n+import org.pf4j.util.FileUtils\n+import org.slf4j.LoggerFactory\n+import java.nio.file.Path\n+\n+/**\n+ * Provides extraction capabilities for plugin bundles.\n+ *\n+ * Plugin Bundles are a ZIP files containing service-specific plugin ZIP files. When the plugin bundle is downloaded,\n+ * we first need to extract the bundle, then locate the service plugin ZIP and extract that. Plugin bundles are based\n+ * on naming convention, so we can assume that a service ZIP will always be \"{service}.zip\".\n+ *\n+ * Individual service plugins will be as what PF4J would normally expect.\n+ */\n+class PluginBundleExtractor {\n+\n+  private val log by lazy { LoggerFactory.getLogger(javaClass) }\n+\n+  /**\n+   * Extract the bundle. This does not unpack any of the underlying plugin zips.\n+   */\n+  fun extractBundle(bundlePath: Path): Path {", "originalCommit": "09906cae458de7536a60f4f4c62762b46efa0372", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE1MDMzMQ==", "url": "https://github.com/spinnaker/kork/pull/468#discussion_r367150331", "bodyText": "This method is going to be used (I think?) in the Gate integration, which is why it's public.", "author": "robzienert", "createdAt": "2020-01-15T22:54:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzEzOTI0Mg=="}], "type": "inlineReview"}, {"oid": "8ff9b3c52ea7449ecdda48c0b4f506a4f3cd723b", "url": "https://github.com/spinnaker/kork/commit/8ff9b3c52ea7449ecdda48c0b4f506a4f3cd723b", "message": "feat(plugins): Support for extracting plugin bundles", "committedDate": "2020-01-15T22:58:36Z", "type": "commit"}, {"oid": "8ff9b3c52ea7449ecdda48c0b4f506a4f3cd723b", "url": "https://github.com/spinnaker/kork/commit/8ff9b3c52ea7449ecdda48c0b4f506a4f3cd723b", "message": "feat(plugins): Support for extracting plugin bundles", "committedDate": "2020-01-15T22:58:36Z", "type": "forcePushed"}]}