{"pr_number": 480, "pr_title": "fix(plugins): VersionRequirementsParser should throw InvalidPluginVersionRequirementException when SUPPORTS_PATTERN does not match", "pr_createdAt": "2020-01-20T23:08:19Z", "pr_url": "https://github.com/spinnaker/kork/pull/480", "timeline": [{"oid": "9b4c648589c3270e79e7dc609064afe6ef027182", "url": "https://github.com/spinnaker/kork/commit/9b4c648589c3270e79e7dc609064afe6ef027182", "message": "fix(plugins): VersionRequirementsParser should throw InvalidPluginVersionRequirementException when SUPPORTS_PATTERN does not match", "committedDate": "2020-01-20T23:07:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1MzY0Ng==", "url": "https://github.com/spinnaker/kork/pull/480#discussion_r368753646", "bodyText": "This way we throw InvalidPluginVersionRequirementException when the pattern doesn't match SUPPORTS_PATTERN.", "author": "jonsie", "createdAt": "2020-01-20T23:09:36Z", "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/VersionRequirementsParser.kt", "diffHunk": "@@ -43,10 +42,8 @@ object VersionRequirementsParser {\n   fun parse(version: String): VersionRequirements {\n     return SUPPORTS_PATTERN.matcher(version)\n       .also {\n-        try {\n-          it.matches()\n-        } catch (e: IllegalStateException) {\n-          throw InvalidPluginVersionRequirementException(version, e)\n+        if (!it.matches()) {\n+          throw InvalidPluginVersionRequirementException(version)", "originalCommit": "9b4c648589c3270e79e7dc609064afe6ef027182", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1NzUxMw==", "url": "https://github.com/spinnaker/kork/pull/480#discussion_r368757513", "bodyText": "Ha. Oops.", "author": "robzienert", "createdAt": "2020-01-20T23:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1MzY0Ng=="}], "type": "inlineReview"}]}