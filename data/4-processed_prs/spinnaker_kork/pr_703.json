{"pr_number": 703, "pr_title": "feat(plugins): Support range constraint", "pr_createdAt": "2020-07-02T15:46:52Z", "pr_url": "https://github.com/spinnaker/kork/pull/703", "timeline": [{"oid": "44298cebae22da2a8f1011597840a7c3d810c5f7", "url": "https://github.com/spinnaker/kork/commit/44298cebae22da2a8f1011597840a7c3d810c5f7", "message": "feat(plugins): support constraint by range on service required for plugin.", "committedDate": "2020-07-02T15:08:38Z", "type": "commit"}, {"oid": "a3971ffa1008213301ff81e23648c0387163e9a6", "url": "https://github.com/spinnaker/kork/commit/a3971ffa1008213301ff81e23648c0387163e9a6", "message": "feat(plugins): support constraint by range on service required for plugin.", "committedDate": "2020-07-02T15:20:01Z", "type": "commit"}, {"oid": "165a556470cc85af15cc866157c8d349b1997fcb", "url": "https://github.com/spinnaker/kork/commit/165a556470cc85af15cc866157c8d349b1997fcb", "message": "Merge branch 'support-range-constraint' of github.com:armory-io/kork into support-range-constraint", "committedDate": "2020-07-02T15:26:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4MDAwMA==", "url": "https://github.com/spinnaker/kork/pull/703#discussion_r451180000", "bodyText": "Oh jeez. This is what I get for using regex to begin with. \ud83e\udd23\nWe should switch this class to wrap jsemver instead of doubling down on our regex pattern.", "author": "robzienert", "createdAt": "2020-07-07T22:29:33Z", "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/VersionRequirementsParser.kt", "diffHunk": "@@ -27,41 +27,54 @@ import java.util.regex.Pattern\n  * - `operator` is a version constraint operator (`>`, `<`, `>=`, `<=`)\n  * - `version` is the service version that is being constrained\n  *\n- * TODO(jonsie): Add range constraint support (>= 1.0.0 & < 2.0.0)\n  */\n object VersionRequirementsParser {\n \n   private val SUPPORTS_PATTERN = Pattern.compile(\n-    \"^(?<service>[\\\\w\\\\-]+)(?<operator>[><=]{1,2})(?<version>[0-9]+\\\\.[0-9]+\\\\.[0-9]+)$\")\n+    \"^(?<service>[\\\\w\\\\-]+)(?<operator>[><=]{1,2})(?<version>[0-9]+\\\\.[0-9]+\\\\.[0-9]+)( & (?<rOperator>[><=]{1,2})(?<rVersion>[0-9]+\\\\.[0-9]+\\\\.[0-9]+))?$\")", "originalCommit": "165a556470cc85af15cc866157c8d349b1997fcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4MTk4NQ==", "url": "https://github.com/spinnaker/kork/pull/703#discussion_r451881985", "bodyText": "I agree, I don't like to have the regex growing when we want to support more constraints, I changed it to have two groups one for the service and another for the constraint, then I uses jsemver to validate if the constraint is a valid.", "author": "edgarulg", "createdAt": "2020-07-08T23:35:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4MDAwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4MDE5OA==", "url": "https://github.com/spinnaker/kork/pull/703#discussion_r451180198", "bodyText": "Why?", "author": "robzienert", "createdAt": "2020-07-07T22:30:03Z", "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/VersionRequirementsParser.kt", "diffHunk": "@@ -27,41 +27,54 @@ import java.util.regex.Pattern\n  * - `operator` is a version constraint operator (`>`, `<`, `>=`, `<=`)\n  * - `version` is the service version that is being constrained\n  *\n- * TODO(jonsie): Add range constraint support (>= 1.0.0 & < 2.0.0)\n  */\n object VersionRequirementsParser {\n \n   private val SUPPORTS_PATTERN = Pattern.compile(\n-    \"^(?<service>[\\\\w\\\\-]+)(?<operator>[><=]{1,2})(?<version>[0-9]+\\\\.[0-9]+\\\\.[0-9]+)$\")\n+    \"^(?<service>[\\\\w\\\\-]+)(?<operator>[><=]{1,2})(?<version>[0-9]+\\\\.[0-9]+\\\\.[0-9]+)( & (?<rOperator>[><=]{1,2})(?<rVersion>[0-9]+\\\\.[0-9]+\\\\.[0-9]+))?$\")\n \n   private const val SUPPORTS_PATTERN_SERVICE_GROUP = \"service\"\n   private const val SUPPORTS_PATTERN_OPERATOR_GROUP = \"operator\"\n   private const val SUPPORTS_PATTERN_VERSION_GROUP = \"version\"\n+  private const val SUPPORTS_PATTERN_RANGE_OPERATOR_GROUP = \"rOperator\"\n+  private const val SUPPORTS_PATTERN_RANGE_VERSION_GROUP = \"rVersion\"\n \n   /**\n    * Parse a single version.\n    */\n-  fun parse(version: String): VersionRequirements {\n-    return SUPPORTS_PATTERN.matcher(version)\n+  fun parse(version: String): List<VersionRequirements> {\n+    SUPPORTS_PATTERN.matcher(version)\n       .also {\n         if (!it.matches()) {\n           throw InvalidPluginVersionRequirementException(version)\n         }\n       }\n       .let {\n-        VersionRequirements(\n+        val versions = mutableListOf(VersionRequirements(\n           service = it.group(SUPPORTS_PATTERN_SERVICE_GROUP),\n           operator = VersionRequirementOperator.from(it.group(SUPPORTS_PATTERN_OPERATOR_GROUP)),\n           version = it.group(SUPPORTS_PATTERN_VERSION_GROUP)\n-        )\n+        ))\n+        if (!it.group(SUPPORTS_PATTERN_RANGE_OPERATOR_GROUP).isNullOrBlank()) {\n+          versions.add(VersionRequirements(\n+            service = it.group(SUPPORTS_PATTERN_SERVICE_GROUP),\n+            operator = VersionRequirementOperator.from(it.group(SUPPORTS_PATTERN_RANGE_OPERATOR_GROUP)),\n+            version = it.group(SUPPORTS_PATTERN_RANGE_VERSION_GROUP)))\n+        }\n+        return versions\n       }\n   }\n \n   /**\n    * Parse a list of comma-delimited versions.\n    */\n-  fun parseAll(version: String): List<VersionRequirements> =\n-    version.split(',').map { parse(it.trim()) }\n+  fun parseAll(version: String): List<VersionRequirements> {\n+    val result = mutableListOf<VersionRequirements>()\n+    version.split(',').forEach {\n+      result.addAll(parse(it.trim()))\n+    }\n+    return result", "originalCommit": "165a556470cc85af15cc866157c8d349b1997fcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4Mzg5OQ==", "url": "https://github.com/spinnaker/kork/pull/703#discussion_r451883899", "bodyText": "I did this because having a range constraint I could return multiple VersionRequirements to be validated by the SpinnakerServiceVersionManager but using jsemver it isn't necessary to keep doing that", "author": "edgarulg", "createdAt": "2020-07-08T23:42:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4MDE5OA=="}], "type": "inlineReview"}, {"oid": "8557ba99e7a3ea296d342becc64d493cf1767be7", "url": "https://github.com/spinnaker/kork/commit/8557ba99e7a3ea296d342becc64d493cf1767be7", "message": "feat(plugins): remove regular expression and uses Version object to validate version constraint", "committedDate": "2020-07-08T23:27:54Z", "type": "commit"}, {"oid": "38545d75b4576123a9e887c581947a14d5012227", "url": "https://github.com/spinnaker/kork/commit/38545d75b4576123a9e887c581947a14d5012227", "message": "Merge branch 'master' into support-range-constraint", "committedDate": "2020-07-08T23:47:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU3MjM3MQ==", "url": "https://github.com/spinnaker/kork/pull/703#discussion_r452572371", "bodyText": "nit: Let's break this up into multiple lines.", "author": "robzienert", "createdAt": "2020-07-10T01:18:47Z", "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/VersionRequirementsParser.kt", "diffHunk": "@@ -47,12 +47,12 @@ object VersionRequirementsParser {\n         if (!it.matches()) {\n           throw InvalidPluginVersionRequirementException(version)\n         }\n+        try { CONSTRAINT_VALIDATOR.satisfies(it.group(SUPPORTS_PATTERN_CONSTRAINT_GROUP)) } catch (e: ParseException) { throw InvalidPluginVersionRequirementException(version) }", "originalCommit": "38545d75b4576123a9e887c581947a14d5012227", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NTU4OA==", "url": "https://github.com/spinnaker/kork/pull/703#discussion_r453045588", "bodyText": "its done!", "author": "edgarulg", "createdAt": "2020-07-10T19:45:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU3MjM3MQ=="}], "type": "inlineReview"}, {"oid": "eede1824e2c96e3afc03b9560699f0fcd6ab90ac", "url": "https://github.com/spinnaker/kork/commit/eede1824e2c96e3afc03b9560699f0fcd6ab90ac", "message": "feat(plugins): breaking up in multiple lines", "committedDate": "2020-07-10T19:33:32Z", "type": "commit"}, {"oid": "a5424d7a325cf4f7d338bbcb9adf5fe05f370a83", "url": "https://github.com/spinnaker/kork/commit/a5424d7a325cf4f7d338bbcb9adf5fe05f370a83", "message": "Merge branch 'support-range-constraint' of github.com:armory-io/kork into support-range-constraint", "committedDate": "2020-07-10T19:34:32Z", "type": "commit"}, {"oid": "45325a79489a8c2fb1ad15af612b7365f6130c10", "url": "https://github.com/spinnaker/kork/commit/45325a79489a8c2fb1ad15af612b7365f6130c10", "message": "Merge branch 'master' into support-range-constraint", "committedDate": "2020-07-10T19:45:55Z", "type": "commit"}]}