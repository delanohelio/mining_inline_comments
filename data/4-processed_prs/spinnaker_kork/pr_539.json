{"pr_number": 539, "pr_title": "feat(plugins): Add plugin ID and extension name to MDC on extension method invocation", "pr_createdAt": "2020-03-03T22:18:01Z", "pr_url": "https://github.com/spinnaker/kork/pull/539", "timeline": [{"oid": "8331fc02f67411c354fc6fe51cbc52183a39b814", "url": "https://github.com/spinnaker/kork/commit/8331fc02f67411c354fc6fe51cbc52183a39b814", "message": "feat(plugins): Add plugin ID and extension name to MDC on extension method invocation", "committedDate": "2020-03-03T22:17:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyODcyMQ==", "url": "https://github.com/spinnaker/kork/pull/539#discussion_r387328721", "bodyText": "Unrelated to this change, but this log helps when verifying configuration loading.", "author": "jonsie", "createdAt": "2020-03-03T22:18:23Z", "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/config/SpringEnvironmentConfigResolver.kt", "diffHunk": "@@ -95,6 +95,8 @@ class SpringEnvironmentConfigResolver(\n       return missingCallback()\n     }\n \n+    log.debug(\"Found config at '$pointer'\")", "originalCommit": "8331fc02f67411c354fc6fe51cbc52183a39b814", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyOTI2Mw==", "url": "https://github.com/spinnaker/kork/pull/539#discussion_r387329263", "bodyText": "I originally had a finally here and I thought it would be useful but it wasn't being used so I removed it.  Alas, it's back.", "author": "jonsie", "createdAt": "2020-03-03T22:19:30Z", "path": "kork-plugins/src/main/kotlin/com/netflix/spinnaker/kork/plugins/proxy/aspects/InvocationAspect.kt", "diffHunk": "@@ -60,4 +60,13 @@ interface InvocationAspect<I : InvocationState> {\n    * @param invocationState The invocationState object created via [before]\n    */\n   fun error(e: InvocationTargetException, invocationState: I)\n+\n+  /**\n+   * Called last and always called, regardless of invocation success or failure.\n+   *\n+   * Optional, default implementation is a no-op.\n+   *\n+   * @param invocationState The invocationState object created via [before]\n+   */\n+  fun finally(invocationState: I) { /* default implementation */ }", "originalCommit": "8331fc02f67411c354fc6fe51cbc52183a39b814", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}