{"pr_number": 712, "pr_title": "feat(sql): Add a feature flag for liquibase migrations", "pr_createdAt": "2020-07-09T08:33:24Z", "pr_url": "https://github.com/spinnaker/kork/pull/712", "timeline": [{"oid": "49aaaf7f625f6008ccf3b29d6cbc88772494d17f", "url": "https://github.com/spinnaker/kork/commit/49aaaf7f625f6008ccf3b29d6cbc88772494d17f", "message": "feat(sql): Add a feature flag for liquibase migrations\n\nRight now it is hard to run e.g. a read-only clouddriver cluster towards a read-only database, because there's no way to disable the migrations (which will cause Clouddriver to fail on startup if it can't write to the DB).\nI'm piggybacking on the `sql.read-only` feature flag.", "committedDate": "2020-07-09T08:29:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM2MDU0Mw==", "url": "https://github.com/spinnaker/kork/pull/712#discussion_r452360543", "bodyText": "I tend to prefer @ConditionalOnProperty(value = \"sql.read-only\", havingValue = \"false\", matchIfMissing = true) since it more clearly shows which properties are being used and hopefully one day we can get some tooling to help generate some property documentation...", "author": "cfieber", "createdAt": "2020-07-09T16:58:41Z", "path": "kork-sql/src/main/kotlin/com/netflix/spinnaker/kork/sql/config/DefaultSqlConfiguration.kt", "diffHunk": "@@ -64,11 +65,13 @@ class DefaultSqlConfiguration {\n \n   @Bean\n   @ConditionalOnMissingBean(SpringLiquibase::class)\n+  @ConditionalOnExpression(\"\\${sql.read-only:false} == false\")", "originalCommit": "49aaaf7f625f6008ccf3b29d6cbc88772494d17f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4MDMxMQ==", "url": "https://github.com/spinnaker/kork/pull/712#discussion_r452380311", "bodyText": "I actually wrote that first, but I changed it to a ConditionalOnExpression because I can't nest multiple ConditionalOnProperty annotations without creating a new AllNestedConditions meta-annotation (needed for the secondaryLiquibase bean below)", "author": "jervi", "createdAt": "2020-07-09T17:33:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM2MDU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4MDY3MA==", "url": "https://github.com/spinnaker/kork/pull/712#discussion_r452380670", "bodyText": "WDYT? Should I create a new annotation just for this purpose?", "author": "jervi", "createdAt": "2020-07-09T17:33:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM2MDU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ4NzU3Nw==", "url": "https://github.com/spinnaker/kork/pull/712#discussion_r452487577", "bodyText": "nah, this seems fine in that case, thanks for the explaination", "author": "cfieber", "createdAt": "2020-07-09T21:01:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM2MDU0Mw=="}], "type": "inlineReview"}, {"oid": "db00f1d0684c583388544829bbecfefa74097363", "url": "https://github.com/spinnaker/kork/commit/db00f1d0684c583388544829bbecfefa74097363", "message": "Merge branch 'master' into feature_flag_for_sql_migrations", "committedDate": "2020-07-09T21:02:16Z", "type": "commit"}]}