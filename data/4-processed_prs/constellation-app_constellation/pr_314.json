{"pr_number": 314, "pr_title": "Lambdas", "pr_createdAt": "2020-03-20T02:54:23Z", "pr_url": "https://github.com/constellation-app/constellation/pull/314", "timeline": [{"oid": "d67da9bac68a95b1a80c94198936ad2a5adfedb0", "url": "https://github.com/constellation-app/constellation/commit/d67da9bac68a95b1a80c94198936ad2a5adfedb0", "message": "converted anonymous inner classes", "committedDate": "2020-03-20T02:04:05Z", "type": "commit"}, {"oid": "faff7805823ce68e7526150e25233ff88c8b0c8c", "url": "https://github.com/constellation-app/constellation/commit/faff7805823ce68e7526150e25233ff88c8b0c8c", "message": "Merge branch 'master' into lambdas", "committedDate": "2020-03-20T02:05:15Z", "type": "commit"}, {"oid": "5f3d881d638f56293babbabea0b4294c8079d2d3", "url": "https://github.com/constellation-app/constellation/commit/5f3d881d638f56293babbabea0b4294c8079d2d3", "message": "Merge branch 'master-nb11' into lambdas", "committedDate": "2020-03-20T02:12:19Z", "type": "commit"}, {"oid": "975e00f071ad36ea43afd64e679a128cd4489d16", "url": "https://github.com/constellation-app/constellation/commit/975e00f071ad36ea43afd64e679a128cd4489d16", "message": "converted lambdas to method references", "committedDate": "2020-03-20T02:52:23Z", "type": "commit"}, {"oid": "77d9497a2b5ac560de7674f3f6c55cbfdaf64cb2", "url": "https://github.com/constellation-app/constellation/commit/77d9497a2b5ac560de7674f3f6c55cbfdaf64cb2", "message": "removed unused imports", "committedDate": "2020-03-20T03:25:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyNTg0NQ==", "url": "https://github.com/constellation-app/constellation/pull/314#discussion_r395425845", "bodyText": "For some reason I thought you couldn't throw Exceptions from Lambdas...must be dreaming", "author": "arcturus2", "createdAt": "2020-03-20T03:34:10Z", "path": "CoreAlgorithmPlugins/src/au/gov/asd/tac/constellation/plugins/algorithms/clustering/infomap/flow/Network.java", "diffHunk": "@@ -58,18 +57,15 @@ public Network(final Config config, final GraphReadMethods rg) {\n         Arrays.fill(nodeWeights, 1);\n         sumNodeWeights = rg.getVertexCount();\n \n-        graphConnections = new Iterable<Connection>() {\n-            @Override\n-            public Iterator<Connection> iterator() {\n-                if (config.connectionType == ConnectionType.LINKS) {\n-                    return new LinkIterator(rg);\n-                } else if (config.connectionType == ConnectionType.EDGES) {\n-                    return new EdgeIterator(rg);\n-                } else if (config.connectionType == ConnectionType.TRANSACTIONS) {\n-                    return new TransactionIterator(rg);\n-                } else {\n-                    throw new IllegalStateException(String.format(\"Unexpected connection type %s\", config.connectionType));\n-                }\n+        graphConnections = () -> {\n+            if (config.connectionType == ConnectionType.LINKS) {\n+                return new LinkIterator(rg);\n+            } else if (config.connectionType == ConnectionType.EDGES) {\n+                return new EdgeIterator(rg);\n+            } else if (config.connectionType == ConnectionType.TRANSACTIONS) {\n+                return new TransactionIterator(rg);\n+            } else {\n+                throw new IllegalStateException(String.format(\"Unexpected connection type %s\", config.connectionType));", "originalCommit": "77d9497a2b5ac560de7674f3f6c55cbfdaf64cb2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "490f4ee8dc6987b4981d0cab3b3b2d0f9ada2dff", "url": "https://github.com/constellation-app/constellation/commit/490f4ee8dc6987b4981d0cab3b3b2d0f9ada2dff", "message": "Merge branch 'master-nb11' into lambdas", "committedDate": "2020-03-20T13:27:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0NjIwOA==", "url": "https://github.com/constellation-app/constellation/pull/314#discussion_r396146208", "bodyText": "I wouldn't suggest doing it now - but this lambda is big enough to be broken up into several functions.", "author": "cygnus-x-1", "createdAt": "2020-03-22T22:01:26Z", "path": "CoreGraphNode/src/au/gov/asd/tac/constellation/graph/node/plugins/DefaultPluginEnvironment.java", "diffHunk": "@@ -59,67 +58,52 @@\n     @Override\n     public Future<?> executePluginLater(final Graph graph, final Plugin plugin, final PluginParameters parameters, final boolean interactive, final List<Future<?>> async, final PluginSynchronizer synchronizer) {\n \n-        return pluginExecutor.submit(new Callable<Object>() {\n-            @Override\n-            public Object call() {\n-                Thread.currentThread().setName(THREAD_POOL_NAME);\n-\n-                // If a Future has been specified, don't do anything until the Future has completed.\n-                // A typical use-case is an arrangement followed by a camera reset: obviously doing the reset before the\n-                // vertices have been relocated is not sensible.\n-                if (async != null) {\n-                    for (Future<?> future : async) {\n-                        if (future != null) {\n-                            try {\n-                                future.get();\n-                            } catch (InterruptedException ex) {\n-                                Exceptions.printStackTrace(ex);\n-                                Thread.currentThread().interrupt();\n-                            } catch (ExecutionException ex) {\n-                                Exceptions.printStackTrace(ex);\n-                            }\n+        return pluginExecutor.submit(() -> {\n+            Thread.currentThread().setName(THREAD_POOL_NAME);", "originalCommit": "490f4ee8dc6987b4981d0cab3b3b2d0f9ada2dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}