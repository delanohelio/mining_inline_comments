{"pr_number": 384, "pr_title": "Static Related Fixes", "pr_createdAt": "2020-03-31T04:29:28Z", "pr_url": "https://github.com/constellation-app/constellation/pull/384", "timeline": [{"oid": "3b45adbd615625a6c9c3477571fecf3fd9102410", "url": "https://github.com/constellation-app/constellation/commit/3b45adbd615625a6c9c3477571fecf3fd9102410", "message": "static calls now call from base class", "committedDate": "2020-03-31T03:19:52Z", "type": "commit"}, {"oid": "23d63a6f2590e3b2d698f60f168f5ee84c961e58", "url": "https://github.com/constellation-app/constellation/commit/23d63a6f2590e3b2d698f60f168f5ee84c961e58", "message": "fixed some sonar rules missed in previous PRs", "committedDate": "2020-03-31T03:59:35Z", "type": "commit"}, {"oid": "f61fc5bbfdbf48ac294ceb1ef3fffcc997abd8a0", "url": "https://github.com/constellation-app/constellation/commit/f61fc5bbfdbf48ac294ceb1ef3fffcc997abd8a0", "message": "replaced multiple catches with either multi-catch or removed need for a catch", "committedDate": "2020-03-31T04:10:48Z", "type": "commit"}, {"oid": "c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0", "url": "https://github.com/constellation-app/constellation/commit/c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0", "message": "removed static modifier from enums", "committedDate": "2020-03-31T04:26:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg3NDM1Nw==", "url": "https://github.com/constellation-app/constellation/pull/384#discussion_r400874357", "bodyText": "@algol60 I'm going to merge this which might effect your open PR.", "author": "arcturus2", "createdAt": "2020-03-31T12:31:10Z", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/transport/FileListener.java", "diffHunk": "@@ -208,29 +208,24 @@ public void run() {\n      * @throws Exception because of AutoCloseable\n      */\n     private void parseAndExecute(final String verb, final String endpoint, final String path, final JsonNode args) throws Exception {\n-        switch (endpoint) {\n-            case \"/v2/service\":\n-                final HttpMethod httpMethod = HttpMethod.getValue(verb);\n-                // Get an instance of the service (if it exists).\n-                //\n-                final RestService rs = RestServiceRegistry.get(path, httpMethod);\n-\n-                // Convert the arguments to PluginParameters.\n-                //\n-                final PluginParameters parameters = rs.createParameters();\n-                RestServiceUtilities.parametersFromJson((ObjectNode)args, parameters);\n-\n-                try(final InStream ins = new InStream(restPath, CONTENT_IN, true); final OutputStream out = outStream(restPath, CONTENT_OUT)) {\n-                    rs.callService(parameters, ins.in, out);\n-                } catch(final IOException | RuntimeException ex) {\n-                    throw new RestServiceException(ex);\n-                }\n-\n-                break;\n-\n-            default:\n-                unrec(\"endpoint\", endpoint);\n-                break;\n+        if (\"/v2/service\".equals(endpoint)) {", "originalCommit": "c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}