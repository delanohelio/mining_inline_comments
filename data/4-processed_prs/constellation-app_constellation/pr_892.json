{"pr_number": 892, "pr_title": "Performance/878 zoom performance", "pr_createdAt": "2020-11-11T02:44:41Z", "pr_url": "https://github.com/constellation-app/constellation/pull/892", "timeline": [{"oid": "608b9823b059a43ad58fefa00e72ade73d33a9da", "url": "https://github.com/constellation-app/constellation/commit/608b9823b059a43ad58fefa00e72ade73d33a9da", "message": ":racehorse: Refactor of closestNodeCameraCoordinates for speed\n\nRefactored the closestNodeCameraCoordinated method to take advantage of parallel streams and the reduce method so that it runs quicker. This is by far the main method that determines responsiveness when zooming in and out of graphs.", "committedDate": "2020-11-11T01:46:38Z", "type": "commit"}, {"oid": "9927fd8feb47d53204dca097487d2c835695090d", "url": "https://github.com/constellation-app/constellation/commit/9927fd8feb47d53204dca097487d2c835695090d", "message": "Merge branch 'master' into performance/878-ZoomPerformance", "committedDate": "2020-11-11T02:21:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA4OTU1OA==", "url": "https://github.com/constellation-app/constellation/pull/892#discussion_r521089558", "bodyText": "These 2 can be final", "author": "antares1470", "createdAt": "2020-11-11T03:39:20Z", "path": "CoreInteractiveGraph/src/au/gov/asd/tac/constellation/graph/interaction/visual/InteractiveGLVisualProcessor.java", "diffHunk": "@@ -269,46 +269,22 @@ public Vector3f windowToGraphCoordinates(final Camera camera, final Point point)\n         worldPosition.add(camera.lookAtEye);\n         return worldPosition;\n     }\n-\n+    \n     @Override\n     public Vector3f closestNodeCameraCoordinates(GraphReadMethods graph, Camera camera, Point p) {\n \n         // Calculate the height and width of the viewing frustrum as a function of distance from the camera\n         final float verticalScale = (float) (Math.tan(Math.toRadians(Camera.FIELD_OF_VIEW / 2.0)));\n         final float horizontalScale = verticalScale * getCanvas().getWidth() / getCanvas().getHeight();\n-        float closestDistance = Float.MAX_VALUE;\n-        Vector3f closestNode = null;\n-        boolean foundScreenNode = false;\n \n         // Iterate through the camera locations of each node in the graph\n-        Iterator<Vector3f> nodeLocations = VisualGraphUtilities.streamVertexSceneLocations(graph, camera).iterator();\n-        while (nodeLocations.hasNext()) {\n-\n-            final Vector3f nodeLoaction = nodeLocations.next();\n-            final float zDistanceFromCamera = nodeLoaction.getZ();\n-            final float distanceFromCamera = nodeLoaction.getLength();\n-\n-            // Is the vertex in front of the camera?\n-            if (zDistanceFromCamera < 0) {\n-                final float horizontalOffset = nodeLoaction.getX() / zDistanceFromCamera;\n-                final float verticalOffset = nodeLoaction.getY() / zDistanceFromCamera;\n-\n-                // Is this vertex visible on the screen?\n-                if (horizontalOffset > -horizontalScale && horizontalOffset < horizontalScale && verticalOffset > -verticalScale && verticalOffset < verticalScale) {\n-                    // Is the first or closest node visible on the screen, record it as the closest node\n-                    if (!foundScreenNode || distanceFromCamera < closestDistance) {\n-                        closestNode = nodeLoaction;\n-                        closestDistance = closestNode.getLength();\n-                        foundScreenNode = true;\n-                    }\n-                } else if (!foundScreenNode && distanceFromCamera < closestDistance) {\n-                    // If no vertices on the screen have been found, this vertex is in front of the camera, and is the closest (or first) such vertex, record it as the closest node.\n-                    closestNode = nodeLoaction;\n-                    closestDistance = closestNode.getLength();\n-                }\n-            }\n-        }\n-        return closestNode;\n+        Stream<NodeCameraDistance> nodeCameraDistances = VisualGraphUtilities.streamVertexSceneLocations(graph, camera)\n+                                                .parallel()\n+                                                .map(vector -> new NodeCameraDistance(vector, horizontalScale, verticalScale));\n+                                                \n+        NodeCameraDistance closest = nodeCameraDistances.parallel().reduce(new NodeCameraDistance(), (ncd1, ncd2) -> NodeCameraDistance.getClosestNode(ncd1, ncd2));", "originalCommit": "9927fd8feb47d53204dca097487d2c835695090d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU5MzcyMA==", "url": "https://github.com/constellation-app/constellation/pull/892#discussion_r522593720", "bodyText": "Updated", "author": "arcturus2", "createdAt": "2020-11-13T03:39:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA4OTU1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA5MTI1Ng==", "url": "https://github.com/constellation-app/constellation/pull/892#discussion_r521091256", "bodyText": "These look like they could be final", "author": "antares1470", "createdAt": "2020-11-11T03:41:55Z", "path": "CoreInteractiveGraph/src/au/gov/asd/tac/constellation/graph/interaction/visual/InteractiveGLVisualProcessor.java", "diffHunk": "@@ -335,4 +311,71 @@ public float getDPIScalingFactor() {\n             return 1.0f;\n         }\n     }\n+    \n+        \n+    private static class NodeCameraDistance{\n+        Vector3f nodeLocation;\n+        Float distanceFromCamera;", "originalCommit": "9927fd8feb47d53204dca097487d2c835695090d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU5Mzc3NQ==", "url": "https://github.com/constellation-app/constellation/pull/892#discussion_r522593775", "bodyText": "Updated", "author": "arcturus2", "createdAt": "2020-11-13T03:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA5MTI1Ng=="}], "type": "inlineReview"}, {"oid": "a074d993a1f9ee15e358b461f70270dabc14d519", "url": "https://github.com/constellation-app/constellation/commit/a074d993a1f9ee15e358b461f70270dabc14d519", "message": ":art: Updated addressing PR feedback regarding finals", "committedDate": "2020-11-13T03:39:06Z", "type": "commit"}]}