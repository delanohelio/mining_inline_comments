{"pr_number": 9301, "pr_title": "Reconsider AntPathRequestMatcher matching logic", "pr_createdAt": "2020-12-21T01:27:50Z", "pr_url": "https://github.com/spring-projects/spring-security/pull/9301", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjIwMTkxMA==", "url": "https://github.com/spring-projects/spring-security/pull/9301#discussion_r552201910", "bodyText": "It seems like this.matcher == null should be the first check in order to avoid potential NPEs in matches(HttpServletRequest).", "author": "jzheaux", "createdAt": "2021-01-05T21:22:00Z", "path": "web/src/main/java/org/springframework/security/web/util/matcher/AntPathRequestMatcher.java", "diffHunk": "@@ -159,9 +160,12 @@ public boolean matches(HttpServletRequest request) {\n \n \t@Override\n \tpublic MatchResult matcher(HttpServletRequest request) {\n-\t\tif (this.matcher == null || !matches(request)) {\n+\t\tif (!matches(request)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzExNzA1Mg==", "url": "https://github.com/spring-projects/spring-security/pull/9301#discussion_r553117052", "bodyText": "The matcher will only be null if the pattern is MATCH_ALL, and we need to check the HttpMethod first.", "author": "evgeniycheban", "createdAt": "2021-01-07T05:29:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjIwMTkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTExNTY1NQ==", "url": "https://github.com/spring-projects/spring-security/pull/9301#discussion_r555115655", "bodyText": "Good point. Is the null check necessary, then? It seems like it could be removed.", "author": "jzheaux", "createdAt": "2021-01-11T15:13:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjIwMTkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc2NjY3NA==", "url": "https://github.com/spring-projects/spring-security/pull/9301#discussion_r556766674", "bodyText": "The null check is necessary since matcher is used to extract variables, for the MATCH_ALL pattern there will be an empty Map of variables.", "author": "evgeniycheban", "createdAt": "2021-01-13T19:13:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjIwMTkxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjIwMjM4Mg==", "url": "https://github.com/spring-projects/spring-security/pull/9301#discussion_r552202382", "bodyText": "Since this is a bug, will you please add // gh-9285 above the test?", "author": "jzheaux", "createdAt": "2021-01-05T21:22:40Z", "path": "web/src/test/java/org/springframework/security/web/util/matcher/AntPathRequestMatcherTests.java", "diffHunk": "@@ -196,6 +197,13 @@ public void matchesWithInvalidMethod() {\n \t\tassertThat(matcher.matches(request)).isFalse();\n \t}\n \n+\t@Test\n+\tpublic void matcherWhenMatchAllPatternThenMatchResult() {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDMwNTY0MQ==", "url": "https://github.com/spring-projects/spring-security/pull/9301#discussion_r554305641", "bodyText": "Done.", "author": "evgeniycheban", "createdAt": "2021-01-09T07:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjIwMjM4Mg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "2988a2cfa3f0edb8000304c53d973e5007b0223c", "url": "https://github.com/spring-projects/spring-security/commit/2988a2cfa3f0edb8000304c53d973e5007b0223c", "message": "Reconsider AntPathRequestMatcher matching logic\n\nCloses gh-9285", "committedDate": "2021-01-09T21:36:41Z", "type": "commit"}, {"oid": "2988a2cfa3f0edb8000304c53d973e5007b0223c", "url": "https://github.com/spring-projects/spring-security/commit/2988a2cfa3f0edb8000304c53d973e5007b0223c", "message": "Reconsider AntPathRequestMatcher matching logic\n\nCloses gh-9285", "committedDate": "2021-01-09T21:36:41Z", "type": "forcePushed"}]}