{"pr_number": 8686, "pr_title": "Updated SimpleSavedRequest#getMethod", "pr_createdAt": "2020-06-12T09:56:20Z", "pr_url": "https://github.com/spring-projects/spring-security/pull/8686", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwNDg3OQ==", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r440904879", "bodyText": "Would you please add tests to show that the String constructor works, too?", "author": "jzheaux", "createdAt": "2020-06-16T14:41:14Z", "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2002-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.security.web.savedrequest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import javax.servlet.http.Cookie;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SimpleSavedRequestTests {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjczODMyMQ==", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r442738321", "bodyText": "Hi, I've added one more test to cover the case with String constructor. Please take a look", "author": "sentinalll", "createdAt": "2020-06-19T09:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwNDg3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwNTk4Mw==", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r440905983", "bodyText": "Thank you for updating this; however, the Acegi copyright headers are a funny exception to the rule for now. Please leave them as-is.", "author": "jzheaux", "createdAt": "2020-06-16T14:42:39Z", "path": "web/src/main/java/org/springframework/security/web/savedrequest/SimpleSavedRequest.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2004, 2005, 2006 Acegi Technology Pty Limited\n+ * Copyright 2004, 2005, 2006, 2020 Acegi Technology Pty Limited", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjczODQ5NQ==", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r442738495", "bodyText": "Okay, I'll revert it.", "author": "sentinalll", "createdAt": "2020-06-19T09:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwNTk4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMjcxMQ==", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r440912711", "bodyText": "Since this is a new test, will you please change these test names to follow this convention:\n{methodName}When{Input}Then{Output}\nYou might also consider consolidating these tests into constructorWhenGivenSavedRequestThenCopies or something similar.", "author": "jzheaux", "createdAt": "2020-06-16T14:51:23Z", "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2002-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.security.web.savedrequest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import javax.servlet.http.Cookie;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SimpleSavedRequestTests {\n+\n+\tprivate SimpleSavedRequest savedRequest;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tSavedRequest savedRequestMock = mock(SavedRequest.class);\n+\t\twhen(savedRequestMock.getMethod()).thenReturn(\"POST\");\n+\t\twhen(savedRequestMock.getCookies()).thenReturn(Collections.singletonList(new Cookie(\"cookiename\", \"cookievalue\")));\n+\t\twhen(savedRequestMock.getHeaderNames()).thenReturn(Collections.singletonList(\"headername\"));\n+\t\twhen(savedRequestMock.getHeaderValues(\"headername\")).thenReturn(Collections.singletonList(\"headervalue\"));\n+\t\twhen(savedRequestMock.getLocales()).thenReturn(Collections.singletonList(Locale.ENGLISH));\n+\t\twhen(savedRequestMock.getParameterMap()).thenReturn(Collections.singletonMap(\"key\", new String[] {\"value\"}));\n+\t\tthis.savedRequest = new SimpleSavedRequest(savedRequestMock);\n+\t}\n+\n+\t@Test\n+\tpublic void getMethod() {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjczOTIzOQ==", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r442739239", "bodyText": "Thank you for your review. I've changed the test according to your suggestions.", "author": "sentinalll", "createdAt": "2020-06-19T09:41:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMjcxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMzQ1NQ==", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r440913455", "bodyText": "Instead of a mock, if you constructed a SimpleSavedRequest with a redirect URL and then called the setters, you'd get a similar outcome while at the same time testing more of the class.", "author": "jzheaux", "createdAt": "2020-06-16T14:52:20Z", "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2002-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.security.web.savedrequest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import javax.servlet.http.Cookie;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SimpleSavedRequestTests {\n+\n+\tprivate SimpleSavedRequest savedRequest;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tSavedRequest savedRequestMock = mock(SavedRequest.class);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjczOTU1Mw==", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r442739553", "bodyText": "Improved as suggested", "author": "sentinalll", "createdAt": "2020-06-19T09:42:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMzQ1NQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "aa4663e4d2f2d1714e27f0e50b442d6f9a6af82b", "url": "https://github.com/spring-projects/spring-security/commit/aa4663e4d2f2d1714e27f0e50b442d6f9a6af82b", "message": "Updated SimpleSavedRequest#getMethod\n\nBefore:\n1. SimpleSavedRequest#getMethod returned null\n2. SimpleSavedRequest(SavedRequest request) constructor did not set the method field from request\n\nAfter:\n1. SimpleSavedRequest#getMethod returns method property value\n2. SimpleSavedRequest(SavedRequest request) constructor sets the method field from request\n\nCloses gh-8675", "committedDate": "2020-06-19T09:37:44Z", "type": "commit"}, {"oid": "aa4663e4d2f2d1714e27f0e50b442d6f9a6af82b", "url": "https://github.com/spring-projects/spring-security/commit/aa4663e4d2f2d1714e27f0e50b442d6f9a6af82b", "message": "Updated SimpleSavedRequest#getMethod\n\nBefore:\n1. SimpleSavedRequest#getMethod returned null\n2. SimpleSavedRequest(SavedRequest request) constructor did not set the method field from request\n\nAfter:\n1. SimpleSavedRequest#getMethod returns method property value\n2. SimpleSavedRequest(SavedRequest request) constructor sets the method field from request\n\nCloses gh-8675", "committedDate": "2020-06-19T09:37:44Z", "type": "forcePushed"}]}