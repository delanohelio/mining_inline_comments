{"pr_number": 8451, "pr_title": "SecurityMockMvcConfigurer$DelegateFilter is not null-safe", "pr_createdAt": "2020-05-01T09:16:36Z", "pr_url": "https://github.com/spring-projects/spring-security/pull/8451", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxMDA0Mw==", "url": "https://github.com/spring-projects/spring-security/pull/8451#discussion_r418710043", "bodyText": "Rather than do this could we update getDelegate to do a null check. Also keeping in mind that there is a race condition working on the member variable. So it would be something like:\nFilter result = this.delegate;\nif (result == null) {\n   // throw\n}\nreturn result;", "author": "rwinch", "createdAt": "2020-05-01T19:54:31Z", "path": "test/src/main/java/org/springframework/security/test/web/servlet/setup/SecurityMockMvcConfigurer.java", "diffHunk": "@@ -123,33 +123,47 @@ Filter getDelegate() {\n \n \t\t@Override\n \t\tpublic void init(FilterConfig filterConfig) throws ServletException {\n+\t\t\tthis.requireDelegate();\n \t\t\tthis.delegate.init(filterConfig);\n \t\t}\n \n \t\t@Override\n \t\tpublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\n \t\t\t\tthrows IOException, ServletException {\n+\t\t\tthis.requireDelegate();\n \t\t\tthis.delegate.doFilter(request, response, chain);\n \t\t}\n \n \t\t@Override\n \t\tpublic void destroy() {\n+\t\t\tthis.requireDelegate();\n \t\t\tthis.delegate.destroy();\n \t\t}\n \n \t\t@Override\n \t\tpublic int hashCode() {\n+\t\t\tthis.requireDelegate();\n \t\t\treturn this.delegate.hashCode();\n \t\t}\n \n \t\t@Override\n \t\tpublic boolean equals(Object obj) {\n+\t\t\tthis.requireDelegate();\n \t\t\treturn this.delegate.equals(obj);\n \t\t}\n \n \t\t@Override\n \t\tpublic String toString() {\n+\t\t\tthis.requireDelegate();\n \t\t\treturn this.delegate.toString();\n \t\t}\n+\n+\t\tprivate void requireDelegate() {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzUxMg==", "url": "https://github.com/spring-projects/spring-security/pull/8451#discussion_r418927512", "bodyText": "Force-pushed this modification, thanks!", "author": "dadikovi", "createdAt": "2020-05-02T07:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxMDA0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxMDE2NQ==", "url": "https://github.com/spring-projects/spring-security/pull/8451#discussion_r418710165", "bodyText": "We don't use this. on methods...only members.", "author": "rwinch", "createdAt": "2020-05-01T19:54:51Z", "path": "test/src/main/java/org/springframework/security/test/web/servlet/setup/SecurityMockMvcConfigurer.java", "diffHunk": "@@ -123,33 +123,47 @@ Filter getDelegate() {\n \n \t\t@Override\n \t\tpublic void init(FilterConfig filterConfig) throws ServletException {\n+\t\t\tthis.requireDelegate();\n \t\t\tthis.delegate.init(filterConfig);\n \t\t}\n \n \t\t@Override\n \t\tpublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\n \t\t\t\tthrows IOException, ServletException {\n+\t\t\tthis.requireDelegate();\n \t\t\tthis.delegate.doFilter(request, response, chain);\n \t\t}\n \n \t\t@Override\n \t\tpublic void destroy() {\n+\t\t\tthis.requireDelegate();\n \t\t\tthis.delegate.destroy();\n \t\t}\n \n \t\t@Override\n \t\tpublic int hashCode() {\n+\t\t\tthis.requireDelegate();\n \t\t\treturn this.delegate.hashCode();\n \t\t}\n \n \t\t@Override\n \t\tpublic boolean equals(Object obj) {\n+\t\t\tthis.requireDelegate();\n \t\t\treturn this.delegate.equals(obj);\n \t\t}\n \n \t\t@Override\n \t\tpublic String toString() {\n+\t\t\tthis.requireDelegate();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzQwNw==", "url": "https://github.com/spring-projects/spring-security/pull/8451#discussion_r418927407", "bodyText": "Okay, I fixed it.\nIf you think I could send another PR with a new checkstyle rule, something like this:\n<module name=\"Regexp\"> <property name=\"format\" value=\"this\\s*\\.[a-zA-Z]+\\(\\)\"/> <property name=\"illegalPattern\" value=\"true\"/> <property name=\"message\" value=\"this. on method\"/> </module>\nOff course this PR would include the fixing of existing matches on that pattern as well (currently there are 100+)", "author": "dadikovi", "createdAt": "2020-05-02T07:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxMDE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3MzU1OQ==", "url": "https://github.com/spring-projects/spring-security/pull/8451#discussion_r420173559", "bodyText": "That would be great. Thanks!", "author": "rwinch", "createdAt": "2020-05-05T14:54:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxMDE2NQ=="}], "type": "inlineReview"}, {"oid": "d87330a5321404d22327232cc6f4440a53ee1247", "url": "https://github.com/spring-projects/spring-security/commit/d87330a5321404d22327232cc6f4440a53ee1247", "message": "SecurityMockMvcConfigurer$DelegateFilter is not null-safe\n\nThis commit adds null-check to getter method, so instead of NPE an IllegalStateException will be thrown with additional details.\n\nFixes gh-7745", "committedDate": "2020-05-02T07:43:14Z", "type": "commit"}, {"oid": "d87330a5321404d22327232cc6f4440a53ee1247", "url": "https://github.com/spring-projects/spring-security/commit/d87330a5321404d22327232cc6f4440a53ee1247", "message": "SecurityMockMvcConfigurer$DelegateFilter is not null-safe\n\nThis commit adds null-check to getter method, so instead of NPE an IllegalStateException will be thrown with additional details.\n\nFixes gh-7745", "committedDate": "2020-05-02T07:43:14Z", "type": "forcePushed"}]}