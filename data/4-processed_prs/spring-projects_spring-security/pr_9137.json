{"pr_number": 9137, "pr_title": "JwtIssuerValidator handles issuer (iss) claim values as Strings and URLs", "pr_createdAt": "2020-10-17T12:36:52Z", "pr_url": "https://github.com/spring-projects/spring-security/pull/9137", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIzMjkwNg==", "url": "https://github.com/spring-projects/spring-security/pull/9137#discussion_r512232906", "bodyText": "Have you already considered\nPredicate<Object> testClaimValue = (claimValue) -> \n        claimValue != null && issuer.equals(claimValue.toString())\nas it simplifies the logic?", "author": "jzheaux", "createdAt": "2020-10-26T20:01:18Z", "path": "oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/JwtIssuerValidator.java", "diffHunk": "@@ -28,15 +31,19 @@\n  */\n public final class JwtIssuerValidator implements OAuth2TokenValidator<Jwt> {\n \n-\tprivate final JwtClaimValidator<String> validator;\n+\tprivate final JwtClaimValidator<Object> validator;\n \n \t/**\n \t * Constructs a {@link JwtIssuerValidator} using the provided parameters\n \t * @param issuer - The issuer that each {@link Jwt} should have.\n \t */\n \tpublic JwtIssuerValidator(String issuer) {\n \t\tAssert.notNull(issuer, \"issuer cannot be null\");\n-\t\tthis.validator = new JwtClaimValidator(JwtClaimNames.ISS, issuer::equals);\n+\n+\t\tPredicate<Object> testClaimValueURL = (", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1MTkwNw==", "url": "https://github.com/spring-projects/spring-security/pull/9137#discussion_r512451907", "bodyText": "Hi Josh, many thanks for your feedback. I simplified the logic as you suggested and pushed a fix-up commit. After the checks succeed I'll squash the commits and change the commit comment having \"Closes ...\".", "author": "cmouttet", "createdAt": "2020-10-27T06:54:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIzMjkwNg=="}], "type": "inlineReview"}, {"oid": "3a90c1d1b340e25dbee0575743c7902425002e6a", "url": "https://github.com/spring-projects/spring-security/commit/3a90c1d1b340e25dbee0575743c7902425002e6a", "message": "JwtIssuerValidator handles issuer (iss) claim values as Strings and URLs\n\n- NimbusJwtDecoder uses claim set converters: issuer claim is converted to an URL object\n- JwtIssuerValidator (created by JwtValidators.createDefaultWithIssuer(String)) wraps a JwtClaimValidator<String>\n- because of different data types, equal() is always false\n\nThis change allows both Strings and URLs as values of the issuer\n\nCloses gh-9136", "committedDate": "2020-10-27T06:55:04Z", "type": "commit"}, {"oid": "3a90c1d1b340e25dbee0575743c7902425002e6a", "url": "https://github.com/spring-projects/spring-security/commit/3a90c1d1b340e25dbee0575743c7902425002e6a", "message": "JwtIssuerValidator handles issuer (iss) claim values as Strings and URLs\n\n- NimbusJwtDecoder uses claim set converters: issuer claim is converted to an URL object\n- JwtIssuerValidator (created by JwtValidators.createDefaultWithIssuer(String)) wraps a JwtClaimValidator<String>\n- because of different data types, equal() is always false\n\nThis change allows both Strings and URLs as values of the issuer\n\nCloses gh-9136", "committedDate": "2020-10-27T06:55:04Z", "type": "forcePushed"}]}