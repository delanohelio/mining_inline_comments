{"pr_number": 8319, "pr_title": "Add addFilterAfter and addFilterBefore to Kotlin DSL", "pr_createdAt": "2020-04-03T03:16:54Z", "pr_url": "https://github.com/spring-projects/spring-security/pull/8319", "timeline": [{"oid": "a2413369e83da5ce6f4f0e754b4da76b9d8e4c28", "url": "https://github.com/spring-projects/spring-security/commit/a2413369e83da5ce6f4f0e754b4da76b9d8e4c28", "message": "Add addFilterAfter and addFilterBefore to Kotlin DSL\n\nFixes gh-8316", "committedDate": "2020-04-03T03:15:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3OTA5OQ==", "url": "https://github.com/spring-projects/spring-security/pull/8319#discussion_r403079099", "bodyText": "It would make sense to move CustomFilter outside of the configuration classes, and into the test class, since it is used in multiple tests.", "author": "eleftherias", "createdAt": "2020-04-03T15:17:17Z", "path": "config/src/test/kotlin/org/springframework/security/config/web/servlet/HttpSecurityDslTests.kt", "diffHunk": "@@ -239,4 +239,56 @@ class HttpSecurityDslTests {\n \n         class CustomFilter : UsernamePasswordAuthenticationFilter()\n     }\n+\n+    @Test\n+    fun `HTTP security when custom filter configured then custom filter added after specific filter to filter chain`() {\n+        this.spring.register(CustomFilterAfterConfig::class.java).autowire()\n+\n+        val filterChain = spring.context.getBean(FilterChainProxy::class.java)\n+        val filters: List<Class<out Filter>> = filterChain.getFilters(\"/\").map { it.javaClass }\n+\n+        assertThat(filters).containsSubsequence(\n+            UsernamePasswordAuthenticationFilter::class.java,\n+            CustomFilterAfterConfig.CustomFilter::class.java\n+        )\n+    }\n+\n+    @EnableWebSecurity\n+    @EnableWebMvc\n+    open class CustomFilterAfterConfig : WebSecurityConfigurerAdapter() {\n+        override fun configure(http: HttpSecurity) {\n+            http {\n+                addFilterAfter(CustomFilter(), UsernamePasswordAuthenticationFilter::class.java)\n+                formLogin {}\n+            }\n+        }\n+\n+        class CustomFilter : UsernamePasswordAuthenticationFilter()\n+    }\n+\n+    @Test\n+    fun `HTTP security when custom filter configured then custom filter added before specific filter to filter chain`() {\n+        this.spring.register(CustomFilterBeforeConfig::class.java).autowire()\n+\n+        val filterChain = spring.context.getBean(FilterChainProxy::class.java)\n+        val filters: List<Class<out Filter>> = filterChain.getFilters(\"/\").map { it.javaClass }\n+\n+        assertThat(filters).containsSubsequence(\n+            CustomFilterBeforeConfig.CustomFilter::class.java,\n+            UsernamePasswordAuthenticationFilter::class.java\n+        )\n+    }\n+\n+    @EnableWebSecurity\n+    @EnableWebMvc\n+    open class CustomFilterBeforeConfig : WebSecurityConfigurerAdapter() {\n+        override fun configure(http: HttpSecurity) {\n+            http {\n+                addFilterBefore(CustomFilter(), UsernamePasswordAuthenticationFilter::class.java)\n+                formLogin {}\n+            }\n+        }\n+\n+        class CustomFilter : UsernamePasswordAuthenticationFilter()", "originalCommit": "a2413369e83da5ce6f4f0e754b4da76b9d8e4c28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5MDQ1Nw==", "url": "https://github.com/spring-projects/spring-security/pull/8319#discussion_r403090457", "bodyText": "Done", "author": "mengelbrecht", "createdAt": "2020-04-03T15:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3OTA5OQ=="}], "type": "inlineReview"}, {"oid": "95af4d1a12c367fcaa895d83f1a905704d6a26c4", "url": "https://github.com/spring-projects/spring-security/commit/95af4d1a12c367fcaa895d83f1a905704d6a26c4", "message": "Move CustomFilter outside of the configuration classes to enable reuse", "committedDate": "2020-04-03T15:32:34Z", "type": "commit"}]}