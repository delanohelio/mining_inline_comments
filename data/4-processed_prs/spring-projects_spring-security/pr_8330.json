{"pr_number": 8330, "pr_title": "BCryptPasswordEncoder rawPassword cannot be null", "pr_createdAt": "2020-04-04T16:49:29Z", "pr_url": "https://github.com/spring-projects/spring-security/pull/8330", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDIyOA==", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404304228", "bodyText": "To follow Spring Security conventions, please change Raw password to match the variable name of rawPassword.", "author": "rwinch", "createdAt": "2020-04-06T18:34:14Z", "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "diffHunk": "@@ -99,6 +99,10 @@ public BCryptPasswordEncoder(BCryptVersion version, int strength, SecureRandom r\n \t}\n \n \tpublic String encode(CharSequence rawPassword) {\n+\t\tif (rawPassword == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Raw password cannot be null\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDUwMA==", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404304500", "bodyText": "Please add a test for this use case", "author": "rwinch", "createdAt": "2020-04-06T18:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0NDQ2Mg==", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404444462", "bodyText": "done", "author": "alan-czajkowski", "createdAt": "2020-04-06T23:16:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDIyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDM4Mw==", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404304383", "bodyText": "To follow Spring Security conventions, please change Raw password to match the variable name of rawPassword.", "author": "rwinch", "createdAt": "2020-04-06T18:34:30Z", "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "diffHunk": "@@ -109,6 +113,10 @@ public String encode(CharSequence rawPassword) {\n \t}\n \n \tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n+\t\tif (rawPassword == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Raw password cannot be null\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDQ3Nw==", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404304477", "bodyText": "Please add a test for this use case", "author": "rwinch", "createdAt": "2020-04-06T18:34:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDM4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0NDU1Mw==", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404444553", "bodyText": "done", "author": "alan-czajkowski", "createdAt": "2020-04-06T23:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDM4Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "c52a36a9ea2acea5f22b02c8c3dc794979cea7f5", "url": "https://github.com/spring-projects/spring-security/commit/c52a36a9ea2acea5f22b02c8c3dc794979cea7f5", "message": "BCryptPasswordEncoder rawPassword cannot be null\n\nCloses gh-8317", "committedDate": "2020-04-07T16:25:42Z", "type": "commit"}, {"oid": "c52a36a9ea2acea5f22b02c8c3dc794979cea7f5", "url": "https://github.com/spring-projects/spring-security/commit/c52a36a9ea2acea5f22b02c8c3dc794979cea7f5", "message": "BCryptPasswordEncoder rawPassword cannot be null\n\nCloses gh-8317", "committedDate": "2020-04-07T16:25:42Z", "type": "forcePushed"}]}