{"pr_number": 5718, "pr_title": "Add ThreadPoolExecutor for handle kafka message.", "pr_createdAt": "2020-10-23T07:44:42Z", "pr_url": "https://github.com/apache/skywalking/pull/5718", "timeline": [{"oid": "426772908cb4c6715efdd8ce75865d039e6d4a61", "url": "https://github.com/apache/skywalking/commit/426772908cb4c6715efdd8ce75865d039e6d4a61", "message": "1.Add ThreadPoolExecutor for handle kafka message.\n2.Add `enableKafkaMessageAutoCommit` to control auto commit kafka message.", "committedDate": "2020-10-23T07:42:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxOTc1Mg==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r510719752", "bodyText": "I suggest that is directly using enable.auto.commit.\nThat means we don't need to introduce a new configuration.", "author": "dmsolr", "createdAt": "2020-10-23T08:26:57Z", "path": "docs/en/setup/backend/configuration-vocabulary.md", "diffHunk": "@@ -198,8 +198,11 @@ core|default|role|Option values, `Mixed/Receiver/Aggregator`. **Receiver** mode\n | - | - | isSharding | it was true when OAP Server in cluster. | SW_KAFKA_FETCHER_IS_SHARDING | false |\n | - | - | createTopicIfNotExist | If true, create the Kafka topic when it does not exist. | - | true |\n | - | - | partitions | The number of partitions for the topic being created. | SW_KAFKA_FETCHER_PARTITIONS | 3 |\n-| - | - | enableMeterSystem | To enable to fetch and handle [Meter System](backend-meter.md) data. | SW_KAFKA_FETCHER_ENABLE_METER_SYSTEM | false\n+| - | - | enableMeterSystem | To enable to fetch and handle [Meter System](backend-meter.md) data. | SW_KAFKA_FETCHER_ENABLE_METER_SYSTEM | false |\n | - | - | replicationFactor | The replication factor for each partition in the topic being created. | SW_KAFKA_FETCHER_PARTITIONS_FACTOR | 2 |\n+| - | - | enableKafkaMessageAutoCommit | If true the consumer's offset will be periodically committed in the background. | SW_ENABLE_KAFKA_MESSAGE_AUTO_COMMIT | false |", "originalCommit": "426772908cb4c6715efdd8ce75865d039e6d4a61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc3MDM4Nw==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r510770387", "bodyText": "done.", "author": "zifeihan", "createdAt": "2020-10-23T09:52:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxOTc1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcyMTQ2Mw==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r510721463", "bodyText": "Change the condition to no enable.auto.commit. :)", "author": "dmsolr", "createdAt": "2020-10-23T08:29:51Z", "path": "oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/KafkaFetcherHandlerRegister.java", "diffHunk": "@@ -132,16 +157,21 @@ public void start() {\n     @Override\n     public void run() {\n         while (true) {\n-            ConsumerRecords<String, Bytes> consumerRecords = consumer.poll(Duration.ofMillis(500L));\n-            if (!consumerRecords.isEmpty()) {\n-                Iterator<ConsumerRecord<String, Bytes>> iterator = consumerRecords.iterator();\n-                while (iterator.hasNext()) {\n-                    ConsumerRecord<String, Bytes> record = iterator.next();\n-                    handlerMap.get(record.topic()).handle(record);\n+            try {\n+                ConsumerRecords<String, Bytes> consumerRecords = consumer.poll(Duration.ofMillis(500L));\n+                if (!consumerRecords.isEmpty()) {\n+                    Iterator<ConsumerRecord<String, Bytes>> iterator = consumerRecords.iterator();\n+                    while (iterator.hasNext()) {\n+                        ConsumerRecord<String, Bytes> record = iterator.next();\n+                        executor.submit(() -> handlerMap.get(record.topic()).handle(record));\n+                    }\n+                    if (!enableKafkaMessageAutoCommit) {", "originalCommit": "426772908cb4c6715efdd8ce75865d039e6d4a61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc3MDMwNQ==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r510770305", "bodyText": "done.", "author": "zifeihan", "createdAt": "2020-10-23T09:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcyMTQ2Mw=="}], "type": "inlineReview"}, {"oid": "e70019b7690ad0a70e3e37be290973350ef17ff3", "url": "https://github.com/apache/skywalking/commit/e70019b7690ad0a70e3e37be290973350ef17ff3", "message": "remove `enableKafkaMessageAutoCommit` property config.", "committedDate": "2020-10-23T09:35:49Z", "type": "commit"}, {"oid": "b79436e798546102781b9e57f1116eb74113a7d8", "url": "https://github.com/apache/skywalking/commit/b79436e798546102781b9e57f1116eb74113a7d8", "message": "Merge branch 'master' into kafka", "committedDate": "2020-10-26T03:39:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4NDgxMA==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r511784810", "bodyText": "I don't think we still need this single thread pool when we introduce the thread pool. @zifeihan\nCould we use the same one?\n\n  \n    \n      skywalking/oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/KafkaFetcherHandlerRegister.java\n    \n    \n         Line 154\n      in\n      b79436e\n    \n    \n    \n    \n\n        \n          \n           Executors.newSingleThreadExecutor(new DefaultThreadFactory(\"KafkaConsumer\")).submit(this);", "author": "dmsolr", "createdAt": "2020-10-26T08:24:38Z", "path": "oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/KafkaFetcherHandlerRegister.java", "diffHunk": "@@ -132,16 +157,21 @@ public void start() {\n     @Override\n     public void run() {\n         while (true) {\n-            ConsumerRecords<String, Bytes> consumerRecords = consumer.poll(Duration.ofMillis(500L));\n-            if (!consumerRecords.isEmpty()) {\n-                Iterator<ConsumerRecord<String, Bytes>> iterator = consumerRecords.iterator();\n-                while (iterator.hasNext()) {\n-                    ConsumerRecord<String, Bytes> record = iterator.next();\n-                    handlerMap.get(record.topic()).handle(record);\n+            try {", "originalCommit": "b79436e798546102781b9e57f1116eb74113a7d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgwMTc4MA==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r511801780", "bodyText": "@dmsolr hello, kafka consumer poll data is fast, and each partition can only have one thread to consume. In our stress testing process, data pulled by Kafka is not a performance bottleneck, but trace data analysis is the performance bottleneck. So I think it's better to pull the data as it is.", "author": "zifeihan", "createdAt": "2020-10-26T08:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4NDgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgxNjY4OQ==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r511816689", "bodyText": "@dmsolr Modified to use the same thread pool to poll Kafka data and process data.", "author": "zifeihan", "createdAt": "2020-10-26T09:20:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4NDgxMA=="}], "type": "inlineReview"}, {"oid": "ed7d7c8894f5a2f1695c5c00e4c9d9f952f1f2e4", "url": "https://github.com/apache/skywalking/commit/ed7d7c8894f5a2f1695c5c00e4c9d9f952f1f2e4", "message": "Polishing.", "committedDate": "2020-10-26T09:16:20Z", "type": "commit"}, {"oid": "af33c846c9415b925bdce2cd59cd0e269e680d13", "url": "https://github.com/apache/skywalking/commit/af33c846c9415b925bdce2cd59cd0e269e680d13", "message": "Merge remote-tracking branch 'origin/kafka' into kafka", "committedDate": "2020-10-26T09:16:33Z", "type": "commit"}, {"oid": "0df941b9a12eed548ad775db9a8679460902fe4a", "url": "https://github.com/apache/skywalking/commit/0df941b9a12eed548ad775db9a8679460902fe4a", "message": "Polishing.", "committedDate": "2020-10-31T09:51:47Z", "type": "commit"}, {"oid": "5138423f3f791e894fad3a6611a62a30fbddfa7a", "url": "https://github.com/apache/skywalking/commit/5138423f3f791e894fad3a6611a62a30fbddfa7a", "message": "Merge branch 'master' into kafka", "committedDate": "2020-10-31T09:52:59Z", "type": "commit"}, {"oid": "6dc868bb420e031c403e08ace0af7c9ce5bfc6ff", "url": "https://github.com/apache/skywalking/commit/6dc868bb420e031c403e08ace0af7c9ce5bfc6ff", "message": "Polishing.", "committedDate": "2020-10-31T09:56:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5NTI5NA==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r515495294", "bodyText": "If you need to reuse this, CustomThreadFactory should move from org.apache.skywalking.oap.server.library.server.grpc to org.apache.skywalking.oap.server.library.server.pool. Otherwise, the codes look like, Kafka is using gRPC pool.", "author": "wu-sheng", "createdAt": "2020-10-31T13:03:03Z", "path": "oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/KafkaFetcherHandlerRegister.java", "diffHunk": "@@ -110,7 +118,22 @@ public KafkaFetcherHandlerRegister(KafkaFetcherConfig config) throws ModuleStart\n         } else {\n             isSharding = false;\n         }\n+        if (config.getKafkaHandlerThreadPoolSize() > 0) {\n+            threadPoolSize = config.getKafkaHandlerThreadPoolSize();\n+        }\n+        if (config.getKafkaHandlerThreadPoolQueueSize() > 0) {\n+            threadPoolQueueSize = config.getKafkaHandlerThreadPoolQueueSize();\n+        }\n+\n+        enableKafkaMessageAutoCommit = (boolean) properties.getOrDefault(\n+            ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, true);\n         consumer = new KafkaConsumer<>(properties, new StringDeserializer(), new BytesDeserializer());\n+        executor = new ThreadPoolExecutor(threadPoolSize, threadPoolSize,\n+                                          60, TimeUnit.SECONDS,\n+                                          new ArrayBlockingQueue(threadPoolQueueSize),\n+                                          new CustomThreadFactory(\"KafkaConsumer\"),", "originalCommit": "6dc868bb420e031c403e08ace0af7c9ce5bfc6ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5NjU4MA==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r515496580", "bodyText": "@wu-sheng Thank you for your suggestion.", "author": "zifeihan", "createdAt": "2020-10-31T13:19:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5NTI5NA=="}], "type": "inlineReview"}, {"oid": "8dbb44550f86440b83a93808c70c8cc31726509f", "url": "https://github.com/apache/skywalking/commit/8dbb44550f86440b83a93808c70c8cc31726509f", "message": "Polishing.", "committedDate": "2020-10-31T13:10:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTYxNg==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r515499616", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Improve Kafka data consumption capacity.\n          \n          \n            \n            * Add the thread pool to the Kafka fetcher to increase the performance.", "author": "wu-sheng", "createdAt": "2020-10-31T13:54:44Z", "path": "CHANGES.md", "diffHunk": "@@ -15,6 +15,7 @@ Release Notes.\n * Support keeping collecting the slowly segments in the sampling mechanism.\n * Support choose files to active the meter analyzer.\n * Improve Kubernetes service registry for ALS analysis.\n+* Improve Kafka data consumption capacity.", "originalCommit": "8dbb44550f86440b83a93808c70c8cc31726509f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "09b8cf7198ce75eb17f5726b64a872c166517a27", "url": "https://github.com/apache/skywalking/commit/09b8cf7198ce75eb17f5726b64a872c166517a27", "message": "Update CHANGES.md", "committedDate": "2020-10-31T13:54:49Z", "type": "commit"}, {"oid": "f4e3e8dc31ff936991a0a976d132a13d44bd212d", "url": "https://github.com/apache/skywalking/commit/f4e3e8dc31ff936991a0a976d132a13d44bd212d", "message": "Merge branch 'master' into kafka", "committedDate": "2020-10-31T14:52:24Z", "type": "commit"}, {"oid": "36c69c008b5c3c0000e23b54f8f72e8f7aa3a804", "url": "https://github.com/apache/skywalking/commit/36c69c008b5c3c0000e23b54f8f72e8f7aa3a804", "message": "Merge branch 'master' into kafka", "committedDate": "2020-11-01T02:14:22Z", "type": "commit"}, {"oid": "8c1d7839e0a029e128985680f8cf458d6b1b86fc", "url": "https://github.com/apache/skywalking/commit/8c1d7839e0a029e128985680f8cf458d6b1b86fc", "message": "Polishing.", "committedDate": "2020-11-01T03:05:55Z", "type": "commit"}, {"oid": "954ac0a26eb3a08655652d0a79223349ae81d206", "url": "https://github.com/apache/skywalking/commit/954ac0a26eb3a08655652d0a79223349ae81d206", "message": "Polishing.", "committedDate": "2020-11-01T05:19:14Z", "type": "commit"}, {"oid": "3e9364f38319840fcba28e8a9d15307749fe3b2c", "url": "https://github.com/apache/skywalking/commit/3e9364f38319840fcba28e8a9d15307749fe3b2c", "message": "Merge branch 'master' into kafka", "committedDate": "2020-11-01T05:57:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU3OTk4MQ==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r515579981", "bodyText": "Traditionally, -1 means using the default value. 0 means size == 0. Please fix this.", "author": "wu-sheng", "createdAt": "2020-11-01T06:01:31Z", "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -269,6 +269,8 @@ kafka-fetcher:\n     enableMeterSystem: ${SW_KAFKA_FETCHER_ENABLE_METER_SYSTEM:false}\n     isSharding: ${SW_KAFKA_FETCHER_IS_SHARDING:false}\n     consumePartitions: ${SW_KAFKA_FETCHER_CONSUME_PARTITIONS:\"\"}\n+    kafkaHandlerThreadPoolSize: ${SW_KAFKA_HANDLER_THREAD_POOL_SIZE:0}\n+    kafkaHandlerThreadPoolQueueSize: ${SW_KAFKA_HANDLER_THREAD_POOL_QUEUE_SIZE:0}", "originalCommit": "3e9364f38319840fcba28e8a9d15307749fe3b2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU4MTc1OQ==", "url": "https://github.com/apache/skywalking/pull/5718#discussion_r515581759", "bodyText": "done.", "author": "zifeihan", "createdAt": "2020-11-01T06:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU3OTk4MQ=="}], "type": "inlineReview"}, {"oid": "f3d14af8702c1f61b11cac7f3119bb55b6b7da25", "url": "https://github.com/apache/skywalking/commit/f3d14af8702c1f61b11cac7f3119bb55b6b7da25", "message": "Use `-1` for the default value.", "committedDate": "2020-11-01T06:24:34Z", "type": "commit"}, {"oid": "9a1e6fc9f2e485e07fb7ed2d9a6d74bff09ddbdd", "url": "https://github.com/apache/skywalking/commit/9a1e6fc9f2e485e07fb7ed2d9a6d74bff09ddbdd", "message": "Merge remote-tracking branch 'origin/kafka' into kafka", "committedDate": "2020-11-01T06:25:20Z", "type": "commit"}]}