{"pr_number": 4509, "pr_title": "SkyWalking Cross Process Correlation Headers Protocol", "pr_createdAt": "2020-03-14T04:13:11Z", "pr_url": "https://github.com/apache/skywalking/pull/4509", "timeline": [{"oid": "d68829de9c9a2bd9829065371d7bf33053a7be6e", "url": "https://github.com/apache/skywalking/commit/d68829de9c9a2bd9829065371d7bf33053a7be6e", "message": "provide the data transmission protocol", "committedDate": "2020-03-14T03:57:32Z", "type": "commit"}, {"oid": "5d37f544ca3bc61adf3256baf8cdb44a1e7617d1", "url": "https://github.com/apache/skywalking/commit/5d37f544ca3bc61adf3256baf8cdb44a1e7617d1", "message": "Change document version", "committedDate": "2020-03-14T04:15:55Z", "type": "commit"}, {"oid": "aedc731c1707ac6e40e011fe9a75bc10863402bd", "url": "https://github.com/apache/skywalking/commit/aedc731c1707ac6e40e011fe9a75bc10863402bd", "message": "Update Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md\n\nPolish the protocol.", "committedDate": "2020-03-14T06:08:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MTEzMw==", "url": "https://github.com/apache/skywalking/pull/4509#discussion_r392561133", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. The key should be added if it is inexistence.\n          \n          \n            \n            1. The key should be added if it is absent.", "author": "kezhenxu94", "createdAt": "2020-03-14T06:13:43Z", "path": "docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md", "diffHunk": "@@ -0,0 +1,24 @@\n+# SkyWalking Cross Process Correlation Headers Protocol\n+* Version 1.0\n+\n+The Cross Process Correlation Headers Protocol is used to transport custom data by leveraging the capability of [Cross Process Propagation Headers Protocol](Skywalking-Cross-Process-Propagation-Headers-Protocol-v2.md). \n+\n+This is an optional and additional protocol for language tracer implementation. All tracer implementation could consider to implement this.\n+Cross Process Correlation Header key is `sw7-correlation`. The value is (string key)-(string value) table in `Base64` encoded JSON format.\n+\n+## Value Example\n+(string key)-(string value) table in `Base64` encoded JSON format.\n+\n+Original value raw data `{\"userKey1\",\"userValue1\",\"userKey2\":\"userValue2\"}` string, the `Base64` encoded value\n+`eyJ1c2VyS2V5MSIsInVzZXJWYWx1ZTEiLCJ1c2VyS2V5MiI6InVzZXJWYWx1ZTIifQ==`.\n+\n+## Recommendations of language APIs\n+Recommended implementation in different language API.\n+\n+1. `CorrelationContext#set` and `CorrelationContext#get` are recommended to write and read the correlation context, with key/value string.\n+1. The key should be added if it is inexistence.", "originalCommit": "aedc731c1707ac6e40e011fe9a75bc10863402bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MTE0Mw==", "url": "https://github.com/apache/skywalking/pull/4509#discussion_r392561143", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. The later the write should override the prev value.\n          \n          \n            \n            1. The later writes should override the previous value.", "author": "kezhenxu94", "createdAt": "2020-03-14T06:14:05Z", "path": "docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md", "diffHunk": "@@ -0,0 +1,24 @@\n+# SkyWalking Cross Process Correlation Headers Protocol\n+* Version 1.0\n+\n+The Cross Process Correlation Headers Protocol is used to transport custom data by leveraging the capability of [Cross Process Propagation Headers Protocol](Skywalking-Cross-Process-Propagation-Headers-Protocol-v2.md). \n+\n+This is an optional and additional protocol for language tracer implementation. All tracer implementation could consider to implement this.\n+Cross Process Correlation Header key is `sw7-correlation`. The value is (string key)-(string value) table in `Base64` encoded JSON format.\n+\n+## Value Example\n+(string key)-(string value) table in `Base64` encoded JSON format.\n+\n+Original value raw data `{\"userKey1\",\"userValue1\",\"userKey2\":\"userValue2\"}` string, the `Base64` encoded value\n+`eyJ1c2VyS2V5MSIsInVzZXJWYWx1ZTEiLCJ1c2VyS2V5MiI6InVzZXJWYWx1ZTIifQ==`.\n+\n+## Recommendations of language APIs\n+Recommended implementation in different language API.\n+\n+1. `CorrelationContext#set` and `CorrelationContext#get` are recommended to write and read the correlation context, with key/value string.\n+1. The key should be added if it is inexistence.\n+1. The later the write should override the prev value.", "originalCommit": "aedc731c1707ac6e40e011fe9a75bc10863402bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MTE4NA==", "url": "https://github.com/apache/skywalking/pull/4509#discussion_r392561184", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. The number of all keys should less than 3, and the length of each value should be less than 128 bytes.\n          \n          \n            \n            1. The total number of all keys should be less than 3, and the length of each value should be less than 128 bytes.", "author": "kezhenxu94", "createdAt": "2020-03-14T06:15:27Z", "path": "docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md", "diffHunk": "@@ -0,0 +1,24 @@\n+# SkyWalking Cross Process Correlation Headers Protocol\n+* Version 1.0\n+\n+The Cross Process Correlation Headers Protocol is used to transport custom data by leveraging the capability of [Cross Process Propagation Headers Protocol](Skywalking-Cross-Process-Propagation-Headers-Protocol-v2.md). \n+\n+This is an optional and additional protocol for language tracer implementation. All tracer implementation could consider to implement this.\n+Cross Process Correlation Header key is `sw7-correlation`. The value is (string key)-(string value) table in `Base64` encoded JSON format.\n+\n+## Value Example\n+(string key)-(string value) table in `Base64` encoded JSON format.\n+\n+Original value raw data `{\"userKey1\",\"userValue1\",\"userKey2\":\"userValue2\"}` string, the `Base64` encoded value\n+`eyJ1c2VyS2V5MSIsInVzZXJWYWx1ZTEiLCJ1c2VyS2V5MiI6InVzZXJWYWx1ZTIifQ==`.\n+\n+## Recommendations of language APIs\n+Recommended implementation in different language API.\n+\n+1. `CorrelationContext#set` and `CorrelationContext#get` are recommended to write and read the correlation context, with key/value string.\n+1. The key should be added if it is inexistence.\n+1. The later the write should override the prev value.\n+1. The number of all keys should less than 3, and the length of each value should be less than 128 bytes.", "originalCommit": "aedc731c1707ac6e40e011fe9a75bc10863402bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MTI5Mw==", "url": "https://github.com/apache/skywalking/pull/4509#discussion_r392561293", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. The context should be propageted when across thread and across process like do tracing context propagation.\n          \n          \n            \n            1. The context should be propagated as well when tracing context is propagated across threads and processes..", "author": "kezhenxu94", "createdAt": "2020-03-14T06:16:50Z", "path": "docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md", "diffHunk": "@@ -0,0 +1,24 @@\n+# SkyWalking Cross Process Correlation Headers Protocol\n+* Version 1.0\n+\n+The Cross Process Correlation Headers Protocol is used to transport custom data by leveraging the capability of [Cross Process Propagation Headers Protocol](Skywalking-Cross-Process-Propagation-Headers-Protocol-v2.md). \n+\n+This is an optional and additional protocol for language tracer implementation. All tracer implementation could consider to implement this.\n+Cross Process Correlation Header key is `sw7-correlation`. The value is (string key)-(string value) table in `Base64` encoded JSON format.\n+\n+## Value Example\n+(string key)-(string value) table in `Base64` encoded JSON format.\n+\n+Original value raw data `{\"userKey1\",\"userValue1\",\"userKey2\":\"userValue2\"}` string, the `Base64` encoded value\n+`eyJ1c2VyS2V5MSIsInVzZXJWYWx1ZTEiLCJ1c2VyS2V5MiI6InVzZXJWYWx1ZTIifQ==`.\n+\n+## Recommendations of language APIs\n+Recommended implementation in different language API.\n+\n+1. `CorrelationContext#set` and `CorrelationContext#get` are recommended to write and read the correlation context, with key/value string.\n+1. The key should be added if it is inexistence.\n+1. The later the write should override the prev value.\n+1. The number of all keys should less than 3, and the length of each value should be less than 128 bytes.\n+1. The context should be propageted when across thread and across process like do tracing context propagation.", "originalCommit": "aedc731c1707ac6e40e011fe9a75bc10863402bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0ef9c5e6e4d0a78c819adca80ff44627cd81d2dd", "url": "https://github.com/apache/skywalking/commit/0ef9c5e6e4d0a78c819adca80ff44627cd81d2dd", "message": "Update docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md\n\nCo-Authored-By: kezhenxu94 <kezhenxu94@163.com>", "committedDate": "2020-03-14T06:41:19Z", "type": "commit"}, {"oid": "073fc839fe6fa55725274db8222c4c085caa4e58", "url": "https://github.com/apache/skywalking/commit/073fc839fe6fa55725274db8222c4c085caa4e58", "message": "Update docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md\n\nCo-Authored-By: kezhenxu94 <kezhenxu94@163.com>", "committedDate": "2020-03-14T06:41:39Z", "type": "commit"}, {"oid": "11768abdbbc2c5955b74923d81ae4e732639edc3", "url": "https://github.com/apache/skywalking/commit/11768abdbbc2c5955b74923d81ae4e732639edc3", "message": "Update docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md\n\nCo-Authored-By: kezhenxu94 <kezhenxu94@163.com>", "committedDate": "2020-03-14T06:41:55Z", "type": "commit"}, {"oid": "62f05044df4111dea91921f9a8799fd52c220cee", "url": "https://github.com/apache/skywalking/commit/62f05044df4111dea91921f9a8799fd52c220cee", "message": "Update docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md\n\nCo-Authored-By: kezhenxu94 <kezhenxu94@163.com>", "committedDate": "2020-03-14T06:42:16Z", "type": "commit"}, {"oid": "ac2c86c5d237b16236762e507130d6652ffb687b", "url": "https://github.com/apache/skywalking/commit/ac2c86c5d237b16236762e507130d6652ffb687b", "message": "Update Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md\n\nFollow `=` and `,` to replace JSON format.", "committedDate": "2020-03-14T08:49:20Z", "type": "commit"}, {"oid": "3667fa694b5e7d2a1c7c33834ce2dcc0ca154238", "url": "https://github.com/apache/skywalking/commit/3667fa694b5e7d2a1c7c33834ce2dcc0ca154238", "message": "Update Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md\n\nFollow `=` and `,` to replace JSON format.", "committedDate": "2020-03-14T08:49:27Z", "type": "commit"}, {"oid": "3633c108508600a7f161ad323d682746701b0a84", "url": "https://github.com/apache/skywalking/commit/3633c108508600a7f161ad323d682746701b0a84", "message": "Update Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md\n\nFollow `=` and `,` to replace JSON format.", "committedDate": "2020-03-14T08:49:29Z", "type": "commit"}, {"oid": "5888ce2649fbc9b4cd11d35c8e4d19555d5d63ca", "url": "https://github.com/apache/skywalking/commit/5888ce2649fbc9b4cd11d35c8e4d19555d5d63ca", "message": "Update Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md", "committedDate": "2020-03-14T09:44:37Z", "type": "commit"}, {"oid": "052ad61d6127659258086bbc7fa6468d9b839d1a", "url": "https://github.com/apache/skywalking/commit/052ad61d6127659258086bbc7fa6468d9b839d1a", "message": "Update README.md\n\n Add link of new protocol from protocol readme doc.", "committedDate": "2020-03-14T13:01:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4ODE1Mw==", "url": "https://github.com/apache/skywalking/pull/4509#discussion_r392588153", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. The context should be propagated as well when tracing context is propagated across threads and processes..\n          \n          \n            \n            1. The context should be propagated as well when tracing context is propagated across threads and processes.", "author": "arugal", "createdAt": "2020-03-14T13:24:44Z", "path": "docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md", "diffHunk": "@@ -0,0 +1,16 @@\n+# SkyWalking Cross Process Correlation Headers Protocol\n+* Version 1.0\n+\n+The Cross Process Correlation Headers Protocol is used to transport custom data by leveraging the capability of [Cross Process Propagation Headers Protocol](Skywalking-Cross-Process-Propagation-Headers-Protocol-v2.md). \n+\n+This is an optional and additional protocol for language tracer implementation. All tracer implementation could consider to implement this.\n+Cross Process Correlation Header key is `sw7-correlation`. The value is the `encoded(key):encoded(value)` list with elements splitted by `,` such as `base64(string key):base64(string value),base64(string key2):base64(string value2)`.\n+\n+## Recommendations of language APIs\n+Recommended implementation in different language API.\n+\n+1. `CorrelationContext#set` and `CorrelationContext#get` are recommended to write and read the correlation context, with key/value string.\n+1. The key should be added if it is absent.\n+1. The later writes should override the previous value.\n+1. The total number of all keys should be less than 3, and the length of each value should be less than 128 bytes.\n+1. The context should be propagated as well when tracing context is propagated across threads and processes..", "originalCommit": "052ad61d6127659258086bbc7fa6468d9b839d1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7cde361da4672f778154bd30659ef41561e87061", "url": "https://github.com/apache/skywalking/commit/7cde361da4672f778154bd30659ef41561e87061", "message": "Update docs/en/protocols/Skywalking-Cross-Process-Correlation-Headers-Protocol-v1.md\n\nCo-Authored-By: zhang-wei <pknfe@outlook.com>", "committedDate": "2020-03-14T13:25:00Z", "type": "commit"}, {"oid": "62bd0a69ceaa13d2ad80703f4697360558665064", "url": "https://github.com/apache/skywalking/commit/62bd0a69ceaa13d2ad80703f4697360558665064", "message": "Merge branch 'master' into correlation-protocol", "committedDate": "2020-03-17T00:07:40Z", "type": "commit"}, {"oid": "e56b03aa80a24273d787d2501c18071c46593d87", "url": "https://github.com/apache/skywalking/commit/e56b03aa80a24273d787d2501c18071c46593d87", "message": "Merge branch 'master' into correlation-protocol", "committedDate": "2020-03-19T02:42:30Z", "type": "commit"}]}