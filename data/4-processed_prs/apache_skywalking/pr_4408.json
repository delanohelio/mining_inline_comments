{"pr_number": 4408, "pr_title": "Support topology with multiple selected services", "pr_createdAt": "2020-02-24T05:58:43Z", "pr_url": "https://github.com/apache/skywalking/pull/4408", "timeline": [{"oid": "2f99c8b6ee514b957e5acd7c887aa85d247d3cf0", "url": "https://github.com/apache/skywalking/commit/2f99c8b6ee514b957e5acd7c887aa85d247d3cf0", "message": "1. Format codes\n\n2. Add comments for storage interface of topology\n\n3. Narrow the scope of secondary query to get the component name. Only query the nodes as client out of the given service Ids.", "committedDate": "2020-02-24T03:54:52Z", "type": "commit"}, {"oid": "f90574670355af4aa3a8794abbec99dbc80515a2", "url": "https://github.com/apache/skywalking/commit/f90574670355af4aa3a8794abbec99dbc80515a2", "message": "Support topology with multiple selected services", "committedDate": "2020-02-24T05:53:23Z", "type": "commit"}, {"oid": "ee340cbbae4e73efe80c25475147a7ccc5981c58", "url": "https://github.com/apache/skywalking/commit/ee340cbbae4e73efe80c25475147a7ccc5981c58", "message": "Sync the typo fix in the protocol", "committedDate": "2020-02-24T06:41:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzE1NA==", "url": "https://github.com/apache/skywalking/pull/4408#discussion_r383153154", "bodyText": "when serviceIds.size() == 0, all from client side source will query in serverside. same as before. but when serviceIds.size() != 0, this will exclude some serviceId which query from server side. There may be a node type, which requires server side to determine, and is related to the selected service.", "author": null, "createdAt": "2020-02-24T09:27:30Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/query/TopologyQueryService.java", "diffHunk": "@@ -90,30 +90,44 @@ private EndpointInventoryCache getEndpointInventoryCache() {\n     }\n \n     public Topology getGlobalTopology(final Downsampling downsampling, final long startTB,\n-        final long endTB) throws IOException {\n+                                      final long endTB) throws IOException {\n         logger.debug(\"Downsampling: {}, startTimeBucket: {}, endTimeBucket: {}\", downsampling, startTB, endTB);\n-        List<Call.CallDetail> serviceRelationServerCalls = getTopologyQueryDAO().loadServerSideServiceRelations(downsampling, startTB, endTB);\n-        List<Call.CallDetail> serviceRelationClientCalls = getTopologyQueryDAO().loadClientSideServiceRelations(downsampling, startTB, endTB);\n+        List<Call.CallDetail> serviceRelationServerCalls = getTopologyQueryDAO().loadServerSideServiceRelations(\n+            downsampling, startTB, endTB);\n+        List<Call.CallDetail> serviceRelationClientCalls = getTopologyQueryDAO().loadClientSideServiceRelations(\n+            downsampling, startTB, endTB);\n \n         TopologyBuilder builder = new TopologyBuilder(moduleManager);\n         return builder.build(serviceRelationClientCalls, serviceRelationServerCalls);\n     }\n \n     public Topology getServiceTopology(final Downsampling downsampling, final long startTB, final long endTB,\n-        final int serviceId) throws IOException {\n-        List<Integer> serviceIds = new ArrayList<>();\n-        serviceIds.add(serviceId);\n-\n-        List<Call.CallDetail> serviceRelationClientCalls = getTopologyQueryDAO().loadSpecifiedClientSideServiceRelations(downsampling, startTB, endTB, serviceIds);\n-        List<Call.CallDetail> serviceRelationServerCalls = getTopologyQueryDAO().loadSpecifiedServerSideServiceRelations(downsampling, startTB, endTB, serviceIds);\n+                                       final List<Integer> serviceIds) throws IOException {\n+        List<Call.CallDetail> serviceRelationClientCalls = getTopologyQueryDAO().loadSpecifiedClientSideServiceRelations(\n+            downsampling, startTB, endTB, serviceIds);\n+        List<Call.CallDetail> serviceRelationServerCalls = getTopologyQueryDAO().loadSpecifiedServerSideServiceRelations(\n+            downsampling, startTB, endTB, serviceIds);\n \n         TopologyBuilder builder = new TopologyBuilder(moduleManager);\n         Topology topology = builder.build(serviceRelationClientCalls, serviceRelationServerCalls);\n \n-        List<Integer> sourceServiceIds = new ArrayList<>();\n-        serviceRelationClientCalls.forEach(call -> sourceServiceIds.add(call.getSource()));\n-        if (CollectionUtils.isNotEmpty(sourceServiceIds)) {\n-            List<Call.CallDetail> sourceCalls = getTopologyQueryDAO().loadSpecifiedServerSideServiceRelations(downsampling, startTB, endTB, sourceServiceIds);\n+        /**\n+         * The topology built above is complete.\n+         * There is a special case, there may be a node of the `serviceIds` call these services as and only as a client, so it is included in the topology,\n+         * its component name could be missed as not being queried before. We add another query about this.\n+         */\n+        List<Integer> outScopeSourceServiceIds = new ArrayList<>();\n+        serviceRelationClientCalls.forEach(call -> {\n+            // Client side relationships exclude the given services(#serviceIds)\n+            // The given services(#serviceIds)'s component names have been included inside `serviceRelationServerCalls`\n+            if (!serviceIds.contains(call.getSource())) {\n+                outScopeSourceServiceIds.add(call.getSource());\n+            }", "originalCommit": "ee340cbbae4e73efe80c25475147a7ccc5981c58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE2MjIyMw==", "url": "https://github.com/apache/skywalking/pull/4408#discussion_r383162223", "bodyText": "All query in the condition service list scope, have been done before, this is just for filling the ones out of scope as the direct linked nodes.\nWhat is your question? I am confused.", "author": "wu-sheng", "createdAt": "2020-02-24T09:45:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE2OTQ0NA==", "url": "https://github.com/apache/skywalking/pull/4408#discussion_r383169444", "bodyText": "It \u2019s not too clear why the old code needs to set node type. If this is the case, ones out of scope also does not need to set the type.", "author": null, "createdAt": "2020-02-24T09:59:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE3MDE2OQ==", "url": "https://github.com/apache/skywalking/pull/4408#discussion_r383170169", "bodyText": "You need to read codes more :) Try to do practice by yourself, it will be much helpful than I told everything. That is open source.", "author": "wu-sheng", "createdAt": "2020-02-24T10:00:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3NDY2Mw==", "url": "https://github.com/apache/skywalking/pull/4408#discussion_r383274663", "bodyText": "you are right", "author": null, "createdAt": "2020-02-24T13:50:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzE1NA=="}], "type": "inlineReview"}]}