{"pr_number": 4197, "pr_title": "add token authentication between agent and oap receiver.", "pr_createdAt": "2020-01-08T06:54:26Z", "pr_url": "https://github.com/apache/skywalking/pull/4197", "timeline": [{"oid": "47c54f88d01bb5a2656424d31e79b681c127d542", "url": "https://github.com/apache/skywalking/commit/47c54f88d01bb5a2656424d31e79b681c127d542", "message": "add token authentication between agent and oap receiver.", "committedDate": "2020-01-08T06:42:06Z", "type": "commit"}, {"oid": "656e24846f8d6c59d124dbc3820eae4a8a8d6297", "url": "https://github.com/apache/skywalking/commit/656e24846f8d6c59d124dbc3820eae4a8a8d6297", "message": "revert ui.", "committedDate": "2020-01-08T06:58:02Z", "type": "commit"}, {"oid": "9f4832f65a8f9ccb676d9612956364ca05eb622d", "url": "https://github.com/apache/skywalking/commit/9f4832f65a8f9ccb676d9612956364ca05eb622d", "message": "fix code style.", "committedDate": "2020-01-08T07:31:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5Mjk5OA==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r364092998", "bodyText": "I think this doc should be linked from main doc. At least, from following places\n\nhttps://github.com/apache/skywalking/blob/master/docs/en/setup/backend/backend-setup.md#advanced-feature-document-link-list\nQuick link from https://github.com/apache/skywalking/blob/master/docs/README.md", "author": "wu-sheng", "createdAt": "2020-01-08T07:28:20Z", "path": "docs/en/setup/backend/backend-token-auth.md", "diffHunk": "@@ -0,0 +1,44 @@\n+# Token Authentication", "originalCommit": "656e24846f8d6c59d124dbc3820eae4a8a8d6297", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e96c96913e0842ecb804d5cd0117c8d60a464467", "url": "https://github.com/apache/skywalking/commit/e96c96913e0842ecb804d5cd0117c8d60a464467", "message": "update docs.", "committedDate": "2020-01-08T07:58:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEwMzQ4MQ==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r364103481", "bodyText": "Extract this listener to a field member instead of creating one for every call", "author": "kezhenxu94", "createdAt": "2020-01-08T08:05:22Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/server/auth/AuthenticationHandler.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.server.auth;\n+\n+import io.grpc.BindableService;\n+import io.grpc.Metadata;\n+import io.grpc.ServerCall;\n+import io.grpc.ServerCallHandler;\n+import io.grpc.ServerInterceptor;\n+import io.grpc.ServerInterceptors;\n+import io.grpc.Status;\n+import org.apache.skywalking.apm.util.StringUtil;\n+import org.apache.skywalking.oap.server.core.server.GRPCHandlerRegister;\n+import org.apache.skywalking.oap.server.library.server.grpc.GRPCServer;\n+\n+/**\n+ * Active the authentication(agent <---> oap) token checker if expected token exists in application.yml\n+ *\n+ * @author wusheng, jian.tan\n+ */\n+public enum AuthenticationHandler {\n+    INSTANCE;\n+\n+    private static final Metadata.Key<String> AUTH_HEAD_HEADER_NAME = Metadata.Key.of(\"Authentication\", Metadata.ASCII_STRING_MARSHALLER);\n+\n+    private String expectedToken = \"\";\n+\n+    public void build(GRPCServer grpcHandler, BindableService targetService) {\n+        if (StringUtil.isNotEmpty(expectedToken)) {\n+            grpcHandler.addHandler(ServerInterceptors.intercept(targetService, new ServerInterceptor() {\n+                @Override\n+                public <REQ, RESP> ServerCall.Listener<REQ> interceptCall(ServerCall<REQ, RESP> serverCall,\n+                    Metadata metadata,\n+                    ServerCallHandler<REQ, RESP> next) {\n+                    String token = metadata.get(AUTH_HEAD_HEADER_NAME);\n+                    if (expectedToken.equals(token)) {\n+                        return next.startCall(serverCall, metadata);\n+                    } else {\n+                        serverCall.close(Status.PERMISSION_DENIED, new Metadata());\n+                        return new ServerCall.Listener() {\n+                        };", "originalCommit": "656e24846f8d6c59d124dbc3820eae4a8a8d6297", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEwNDAyMg==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r364104022", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ## How need token authentication after we have TLS?\n          \n          \n            \n            ## Why need token authentication after we have TLS?", "author": "kezhenxu94", "createdAt": "2020-01-08T08:07:20Z", "path": "docs/en/setup/backend/backend-token-auth.md", "diffHunk": "@@ -0,0 +1,44 @@\n+# Token Authentication\n+## Supported version\n+7.0.0+\n+\n+## How need token authentication after we have TLS?", "originalCommit": "9f4832f65a8f9ccb676d9612956364ca05eb622d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEwNDYwMw==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r364104603", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Skywalking OAP verifies every request from agent, allowed only the token match.\n          \n          \n            \n            The Skywalking OAP verifies every request from agent, only allows requests whose token matches the one configured in `application.yml`.", "author": "kezhenxu94", "createdAt": "2020-01-08T08:09:22Z", "path": "docs/en/setup/backend/backend-token-auth.md", "diffHunk": "@@ -0,0 +1,44 @@\n+# Token Authentication\n+## Supported version\n+7.0.0+\n+\n+## How need token authentication after we have TLS?\n+TLS is about transport security, which makes sure the network can be trusted. \n+The token authentication is about monitoring application data **can be trusted**.\n+\n+## Token \n+In current version, Token is considered as a simple string.\n+\n+### Set Token\n+1. Set token in agent.config file\n+```properties\n+# Authentication active is based on backend setting, see application.yml for more details.\n+agent.authentication = ${SW_AGENT_AUTHENTICATION:xxxx}\n+```\n+\n+2. Set token in `application.yml` file\n+```yaml\n+\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n+receiver-sharing-server:\n+  default:\n+    authentication: ${SW_AUTHENTICATION:\"\"}\n+\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n+```\n+\n+## Authentication fails\n+The Skywalking OAP verifies every request from agent, allowed only the token match.", "originalCommit": "9f4832f65a8f9ccb676d9612956364ca05eb622d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "114f632693d58c6c0807988afac8660e8c4bda4f", "url": "https://github.com/apache/skywalking/commit/114f632693d58c6c0807988afac8660e8c4bda4f", "message": "Update docs/en/setup/backend/backend-token-auth.md\n\nCo-Authored-By: kezhenxu94 <kezhenxu94@apache.org>", "committedDate": "2020-01-08T08:42:56Z", "type": "commit"}, {"oid": "e5bff54d5cefc611e386cc822b165a2c6860b8c0", "url": "https://github.com/apache/skywalking/commit/e5bff54d5cefc611e386cc822b165a2c6860b8c0", "message": "fix hits.", "committedDate": "2020-01-08T09:08:15Z", "type": "commit"}, {"oid": "07747333e24c6ff1f679f1a3b69583d575fe38d4", "url": "https://github.com/apache/skywalking/commit/07747333e24c6ff1f679f1a3b69583d575fe38d4", "message": "filter", "committedDate": "2020-01-08T09:13:42Z", "type": "commit"}, {"oid": "3dd387d3a1657e9c6849b036679335701f14c419", "url": "https://github.com/apache/skywalking/commit/3dd387d3a1657e9c6849b036679335701f14c419", "message": "Merge branches 'agent_auth' and 'agent_auth' of github.com:apache/skywalking into agent_auth", "committedDate": "2020-01-08T09:15:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNTQ0Ng==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r364215446", "bodyText": "You submit it by mistake.", "author": "wu-sheng", "createdAt": "2020-01-08T12:52:53Z", "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -98,33 +98,33 @@ storage:\n #    segmentQueryMaxSize: ${SW_STORAGE_ES_QUERY_SEGMENT_SIZE:200}\n #    profileTaskQueryMaxSize: ${SW_STORAGE_ES_QUERY_PROFILE_TASK_SIZE:200}\n #    advanced: ${SW_STORAGE_ES_ADVANCED:\"\"}\n-  elasticsearch7:\n-    nameSpace: ${SW_NAMESPACE:\"\"}\n-    clusterNodes: ${SW_STORAGE_ES_CLUSTER_NODES:localhost:9200}\n-    protocol: ${SW_STORAGE_ES_HTTP_PROTOCOL:\"http\"}\n-    #trustStorePath: ${SW_SW_STORAGE_ES_SSL_JKS_PATH:\"../es_keystore.jks\"}\n-    #trustStorePass: ${SW_SW_STORAGE_ES_SSL_JKS_PASS:\"\"}\n-    user: ${SW_ES_USER:\"\"}\n-    password: ${SW_ES_PASSWORD:\"\"}\n-    indexShardsNumber: ${SW_STORAGE_ES_INDEX_SHARDS_NUMBER:2}\n-    indexReplicasNumber: ${SW_STORAGE_ES_INDEX_REPLICAS_NUMBER:0}\n-    # Those data TTL settings will override the same settings in core module.\n-    recordDataTTL: ${SW_STORAGE_ES_RECORD_DATA_TTL:7} # Unit is day\n-    otherMetricsDataTTL: ${SW_STORAGE_ES_OTHER_METRIC_DATA_TTL:45} # Unit is day\n-    monthMetricsDataTTL: ${SW_STORAGE_ES_MONTH_METRIC_DATA_TTL:18} # Unit is month\n-    # Batch process setting, refer to https://www.elastic.co/guide/en/elasticsearch/client/java-api/5.5/java-docs-bulk-processor.html\n-    bulkActions: ${SW_STORAGE_ES_BULK_ACTIONS:1000} # Execute the bulk every 1000 requests\n-    flushInterval: ${SW_STORAGE_ES_FLUSH_INTERVAL:10} # flush the bulk every 10 seconds whatever the number of requests\n-    concurrentRequests: ${SW_STORAGE_ES_CONCURRENT_REQUESTS:2} # the number of concurrent requests\n-    resultWindowMaxSize: ${SW_STORAGE_ES_QUERY_MAX_WINDOW_SIZE:10000}\n-    metadataQueryMaxSize: ${SW_STORAGE_ES_QUERY_MAX_SIZE:5000}\n-    segmentQueryMaxSize: ${SW_STORAGE_ES_QUERY_SEGMENT_SIZE:200}\n-    advanced: ${SW_STORAGE_ES_ADVANCED:\"\"}\n-#  h2:\n-#    driver: ${SW_STORAGE_H2_DRIVER:org.h2.jdbcx.JdbcDataSource}\n-#    url: ${SW_STORAGE_H2_URL:jdbc:h2:mem:skywalking-oap-db}\n-#    user: ${SW_STORAGE_H2_USER:sa}\n-#    metadataQueryMaxSize: ${SW_STORAGE_H2_QUERY_MAX_SIZE:5000}\n+#  elasticsearch7:\n+#    nameSpace: ${SW_NAMESPACE:\"\"}\n+#    clusterNodes: ${SW_STORAGE_ES_CLUSTER_NODES:localhost:9200}\n+#    protocol: ${SW_STORAGE_ES_HTTP_PROTOCOL:\"http\"}\n+#    #trustStorePath: ${SW_SW_STORAGE_ES_SSL_JKS_PATH:\"../es_keystore.jks\"}\n+#    #trustStorePass: ${SW_SW_STORAGE_ES_SSL_JKS_PASS:\"\"}\n+#    user: ${SW_ES_USER:\"\"}\n+#    password: ${SW_ES_PASSWORD:\"\"}\n+#    indexShardsNumber: ${SW_STORAGE_ES_INDEX_SHARDS_NUMBER:2}\n+#    indexReplicasNumber: ${SW_STORAGE_ES_INDEX_REPLICAS_NUMBER:0}\n+#    # Those data TTL settings will override the same settings in core module.\n+#    recordDataTTL: ${SW_STORAGE_ES_RECORD_DATA_TTL:7} # Unit is day\n+#    otherMetricsDataTTL: ${SW_STORAGE_ES_OTHER_METRIC_DATA_TTL:45} # Unit is day\n+#    monthMetricsDataTTL: ${SW_STORAGE_ES_MONTH_METRIC_DATA_TTL:18} # Unit is month\n+#    # Batch process setting, refer to https://www.elastic.co/guide/en/elasticsearch/client/java-api/5.5/java-docs-bulk-processor.html\n+#    bulkActions: ${SW_STORAGE_ES_BULK_ACTIONS:1000} # Execute the bulk every 1000 requests\n+#    flushInterval: ${SW_STORAGE_ES_FLUSH_INTERVAL:10} # flush the bulk every 10 seconds whatever the number of requests\n+#    concurrentRequests: ${SW_STORAGE_ES_CONCURRENT_REQUESTS:2} # the number of concurrent requests\n+#    resultWindowMaxSize: ${SW_STORAGE_ES_QUERY_MAX_WINDOW_SIZE:10000}\n+#    metadataQueryMaxSize: ${SW_STORAGE_ES_QUERY_MAX_SIZE:5000}\n+#    segmentQueryMaxSize: ${SW_STORAGE_ES_QUERY_SEGMENT_SIZE:200}\n+#    advanced: ${SW_STORAGE_ES_ADVANCED:\"\"}\n+  h2:\n+    driver: ${SW_STORAGE_H2_DRIVER:org.h2.jdbcx.JdbcDataSource}\n+    url: ${SW_STORAGE_H2_URL:jdbc:h2:mem:skywalking-oap-db}\n+    user: ${SW_STORAGE_H2_USER:sa}\n+    metadataQueryMaxSize: ${SW_STORAGE_H2_QUERY_MAX_SIZE:5000}", "originalCommit": "3dd387d3a1657e9c6849b036679335701f14c419", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "757529ab27e313f3e535ea08cf89acab520bda86", "url": "https://github.com/apache/skywalking/commit/757529ab27e313f3e535ea08cf89acab520bda86", "message": "revert yml.", "committedDate": "2020-01-08T12:59:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxODQzNw==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r364218437", "bodyText": "I think you should add a method called\n\n@OverRide public void addFilter()\n\nThen in provider, you should add a filter, add(AuthenticationFilter), first. Then calling addHanlder will make those filters active.\nThe current implementation is working, but the codes look strange.", "author": "wu-sheng", "createdAt": "2020-01-08T13:00:54Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/server/GRPCHandlerRegisterImpl.java", "diffHunk": "@@ -33,7 +35,7 @@ public GRPCHandlerRegisterImpl(GRPCServer server) {\n     }\n \n     @Override public void addHandler(BindableService handler) {\n-        server.addHandler(handler);\n+        AuthenticationFilter.INSTANCE.build(server, handler);", "originalCommit": "3dd387d3a1657e9c6849b036679335701f14c419", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "70479fdf648e6fb55f3ea2fde1fc86a4370cd0e5", "url": "https://github.com/apache/skywalking/commit/70479fdf648e6fb55f3ea2fde1fc86a4370cd0e5", "message": "update logical.", "committedDate": "2020-01-08T14:17:58Z", "type": "commit"}, {"oid": "4637a8a424043034467c7a5d11b86e82e8b76c83", "url": "https://github.com/apache/skywalking/commit/4637a8a424043034467c7a5d11b86e82e8b76c83", "message": "fix codestyle check.", "committedDate": "2020-01-09T02:20:51Z", "type": "commit"}, {"oid": "83e1c2382a90d1255237b4867962602775542de5", "url": "https://github.com/apache/skywalking/commit/83e1c2382a90d1255237b4867962602775542de5", "message": "fix ci and add e2e test case.", "committedDate": "2020-01-09T08:25:00Z", "type": "commit"}, {"oid": "23aa2356a7a5c57be77f4f786367f7af8f895d23", "url": "https://github.com/apache/skywalking/commit/23aa2356a7a5c57be77f4f786367f7af8f895d23", "message": "Merge branch 'master' into agent_auth", "committedDate": "2020-01-09T08:28:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMjU3Nw==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r364612577", "bodyText": "This should not be submitted.", "author": "wu-sheng", "createdAt": "2020-01-09T08:37:26Z", "path": "apm-webapp/pom.xml", "diffHunk": "@@ -133,7 +133,7 @@\n                             <goal>npm</goal>\n                         </goals>\n                         <configuration>\n-                            <arguments>install --registry=https://registry.npmjs.org/</arguments>\n+                            <arguments>install --registry=https://registry.npm.taobao.org</arguments>", "originalCommit": "83e1c2382a90d1255237b4867962602775542de5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f920442090163b3197328b233bb34c50f6626a86", "url": "https://github.com/apache/skywalking/commit/f920442090163b3197328b233bb34c50f6626a86", "message": "revert mistake commit.", "committedDate": "2020-01-09T08:42:57Z", "type": "commit"}, {"oid": "03b078b00fa5fa9db453095aad917b992a275043", "url": "https://github.com/apache/skywalking/commit/03b078b00fa5fa9db453095aad917b992a275043", "message": "Merge branch 'master' into agent_auth", "committedDate": "2020-01-10T03:04:53Z", "type": "commit"}, {"oid": "45d1d94e8c19fa919a7153d7ee018fa915b25606", "url": "https://github.com/apache/skywalking/commit/45d1d94e8c19fa919a7153d7ee018fa915b25606", "message": "fix ci", "committedDate": "2020-01-10T03:19:36Z", "type": "commit"}, {"oid": "397c306a3e482c6c905e21e6331bb06f615e090b", "url": "https://github.com/apache/skywalking/commit/397c306a3e482c6c905e21e6331bb06f615e090b", "message": "Merge branch 'agent_auth' of github.com:apache/skywalking into agent_auth", "committedDate": "2020-01-10T03:23:47Z", "type": "commit"}, {"oid": "ca3b2a78b4bcc5e469e86a49e10bfdf021ae3ad8", "url": "https://github.com/apache/skywalking/commit/ca3b2a78b4bcc5e469e86a49e10bfdf021ae3ad8", "message": "remove duplicate maven dependency.", "committedDate": "2020-01-10T03:38:47Z", "type": "commit"}, {"oid": "3d05013f185a936166caf9c68b64cf2b41946547", "url": "https://github.com/apache/skywalking/commit/3d05013f185a936166caf9c68b64cf2b41946547", "message": "Merge branch 'master' into agent_auth", "committedDate": "2020-01-10T09:04:39Z", "type": "commit"}, {"oid": "972d245893786cfa140199a5fbf99b10a17b8597", "url": "https://github.com/apache/skywalking/commit/972d245893786cfa140199a5fbf99b10a17b8597", "message": "revert pom", "committedDate": "2020-01-11T01:28:05Z", "type": "commit"}, {"oid": "26acc93a3b8fca4423444041199a42c792f04e60", "url": "https://github.com/apache/skywalking/commit/26acc93a3b8fca4423444041199a42c792f04e60", "message": "Merge branch 'master' into agent_auth", "committedDate": "2020-01-11T03:41:47Z", "type": "commit"}, {"oid": "6f90545a537d3830d0fcc1b82f51b444f848b5d4", "url": "https://github.com/apache/skywalking/commit/6f90545a537d3830d0fcc1b82f51b444f848b5d4", "message": "revert unchanged.", "committedDate": "2020-01-11T03:59:29Z", "type": "commit"}, {"oid": "5625d4004c36329875f443e9f1fe08a434c0c928", "url": "https://github.com/apache/skywalking/commit/5625d4004c36329875f443e9f1fe08a434c0c928", "message": "update javadocs.", "committedDate": "2020-01-11T15:49:14Z", "type": "commit"}, {"oid": "94804207d436e8976dbc75e4dfd17e9d427b6045", "url": "https://github.com/apache/skywalking/commit/94804207d436e8976dbc75e4dfd17e9d427b6045", "message": "Merge branch 'master' into agent_auth", "committedDate": "2020-01-12T03:55:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MTY3MA==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r365561670", "bodyText": "This should be private.", "author": "wu-sheng", "createdAt": "2020-01-12T06:52:22Z", "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/ReceiverGRPCHandlerRegister.java", "diffHunk": "@@ -18,22 +18,39 @@\n \n package org.apache.skywalking.oap.server.receiver.sharing.server;\n \n-import io.grpc.*;\n+import io.grpc.BindableService;\n+import io.grpc.ServerInterceptor;\n+import io.grpc.ServerInterceptors;\n+import io.grpc.ServerServiceDefinition;\n+import java.util.Objects;\n import lombok.Setter;\n import org.apache.skywalking.oap.server.core.server.GRPCHandlerRegister;\n \n /**\n- * @author peng-yongsheng\n+ * @author peng-yongsheng, jian.tan\n  */\n public class ReceiverGRPCHandlerRegister implements GRPCHandlerRegister {\n \n     @Setter private GRPCHandlerRegister grpcHandlerRegister;\n+    private ServerInterceptor interceptor;\n \n     @Override public void addHandler(BindableService handler) {\n-        grpcHandlerRegister.addHandler(handler);\n+        if (Objects.isNull(interceptor)) {\n+            grpcHandlerRegister.addHandler(handler);\n+        } else {\n+            grpcHandlerRegister.addHandler(handlerInterceptorBind(handler, interceptor));\n+        }\n     }\n \n     @Override public void addHandler(ServerServiceDefinition definition) {\n         grpcHandlerRegister.addHandler(definition);\n     }\n+\n+    @Override public void addFilter(ServerInterceptor interceptor) {\n+        this.interceptor = interceptor;\n+    }\n+\n+    public ServerServiceDefinition handlerInterceptorBind(BindableService handler, ServerInterceptor interceptor) {", "originalCommit": "94804207d436e8976dbc75e4dfd17e9d427b6045", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MTc0MQ==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r365561741", "bodyText": "Based on your codes, the interceptor could only be one, so this method should be set, rather than add.\nAnd, this method must be called before addHandler, should add this to the comment.", "author": "wu-sheng", "createdAt": "2020-01-12T06:54:43Z", "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/ReceiverGRPCHandlerRegister.java", "diffHunk": "@@ -18,22 +18,39 @@\n \n package org.apache.skywalking.oap.server.receiver.sharing.server;\n \n-import io.grpc.*;\n+import io.grpc.BindableService;\n+import io.grpc.ServerInterceptor;\n+import io.grpc.ServerInterceptors;\n+import io.grpc.ServerServiceDefinition;\n+import java.util.Objects;\n import lombok.Setter;\n import org.apache.skywalking.oap.server.core.server.GRPCHandlerRegister;\n \n /**\n- * @author peng-yongsheng\n+ * @author peng-yongsheng, jian.tan\n  */\n public class ReceiverGRPCHandlerRegister implements GRPCHandlerRegister {\n \n     @Setter private GRPCHandlerRegister grpcHandlerRegister;\n+    private ServerInterceptor interceptor;\n \n     @Override public void addHandler(BindableService handler) {\n-        grpcHandlerRegister.addHandler(handler);\n+        if (Objects.isNull(interceptor)) {\n+            grpcHandlerRegister.addHandler(handler);\n+        } else {\n+            grpcHandlerRegister.addHandler(handlerInterceptorBind(handler, interceptor));\n+        }\n     }\n \n     @Override public void addHandler(ServerServiceDefinition definition) {\n         grpcHandlerRegister.addHandler(definition);\n     }\n+\n+    @Override public void addFilter(ServerInterceptor interceptor) {", "originalCommit": "94804207d436e8976dbc75e4dfd17e9d427b6045", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MTc1NQ==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r365561755", "bodyText": "Why change this? It seems the same.", "author": "wu-sheng", "createdAt": "2020-01-12T06:55:14Z", "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/SharingServerModuleProvider.java", "diffHunk": "@@ -81,11 +89,17 @@ public SharingServerModuleProvider() {\n             if (config.getGRPCThreadPoolSize() > 0) {\n                 grpcServer.setThreadPoolSize(config.getGRPCThreadPoolSize());\n             }\n+\n             grpcServer.initialize();\n \n-            this.registerServiceImplementation(GRPCHandlerRegister.class, new GRPCHandlerRegisterImpl(grpcServer));\n+            GRPCHandlerRegister grpcHandlerRegister = new GRPCHandlerRegisterImpl(grpcServer);\n+\n+            this.registerServiceImplementation(GRPCHandlerRegister.class, grpcHandlerRegister);", "originalCommit": "94804207d436e8976dbc75e4dfd17e9d427b6045", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU3NTc4OA==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r365575788", "bodyText": "So you have an implicit prerequisite here: the addFilter method must be called before adding all handlers (addHandler), otherwise the filter doesn't fully take effect, right? If so, this prerequisite must be pointed out in the interface, but I don't think this is a good design, I'd suggest moving the interceptor to:\n\n  \n    \n      skywalking/oap-server/server-library/library-server/src/main/java/org/apache/skywalking/oap/server/library/server/grpc/GRPCServer.java\n    \n    \n         Line 109\n      in\n      6f90545\n    \n    \n    \n    \n\n        \n          \n           nettyServerBuilder = NettyServerBuilder.forAddress(address); \n        \n    \n  \n\n\nwhat do you think @wu-sheng", "author": "kezhenxu94", "createdAt": "2020-01-12T11:21:00Z", "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/ReceiverGRPCHandlerRegister.java", "diffHunk": "@@ -18,22 +18,39 @@\n \n package org.apache.skywalking.oap.server.receiver.sharing.server;\n \n-import io.grpc.*;\n+import io.grpc.BindableService;\n+import io.grpc.ServerInterceptor;\n+import io.grpc.ServerInterceptors;\n+import io.grpc.ServerServiceDefinition;\n+import java.util.Objects;\n import lombok.Setter;\n import org.apache.skywalking.oap.server.core.server.GRPCHandlerRegister;\n \n /**\n- * @author peng-yongsheng\n+ * @author peng-yongsheng, jian.tan\n  */\n public class ReceiverGRPCHandlerRegister implements GRPCHandlerRegister {\n \n     @Setter private GRPCHandlerRegister grpcHandlerRegister;\n+    private ServerInterceptor interceptor;\n \n     @Override public void addHandler(BindableService handler) {\n-        grpcHandlerRegister.addHandler(handler);\n+        if (Objects.isNull(interceptor)) {\n+            grpcHandlerRegister.addHandler(handler);\n+        } else {\n+            grpcHandlerRegister.addHandler(handlerInterceptorBind(handler, interceptor));\n+        }", "originalCommit": "94804207d436e8976dbc75e4dfd17e9d427b6045", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU3OTY3NA==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r365579674", "bodyText": "Token authentication filter should only be activated in sharding server module. Moving to GRPCServer may not very suitable, in my thought.", "author": "JaredTan95", "createdAt": "2020-01-12T12:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU3NTc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU4MDQwNA==", "url": "https://github.com/apache/skywalking/pull/4197#discussion_r365580404", "bodyText": "Token authentication filter should only be activated in sharding server module. Moving to GRPCServer may not very suitable, in my thought.\n\nWell I missed that", "author": "kezhenxu94", "createdAt": "2020-01-12T12:41:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU3NTc4OA=="}], "type": "inlineReview"}, {"oid": "50aea099d915bd9092f928bc2313ebd0f64c5b79", "url": "https://github.com/apache/skywalking/commit/50aea099d915bd9092f928bc2313ebd0f64c5b79", "message": "update logical.", "committedDate": "2020-01-12T12:40:08Z", "type": "commit"}, {"oid": "d2916a8fe8cbcda316a4c25ff436492d58041531", "url": "https://github.com/apache/skywalking/commit/d2916a8fe8cbcda316a4c25ff436492d58041531", "message": "Merge branch 'master' into agent_auth", "committedDate": "2020-01-12T14:13:29Z", "type": "commit"}]}