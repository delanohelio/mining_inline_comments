{"pr_number": 4325, "pr_title": "Close leaked I/O stream and remove unused codes", "pr_createdAt": "2020-02-07T11:59:07Z", "pr_url": "https://github.com/apache/skywalking/pull/4325", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM2NzM0MQ==", "url": "https://github.com/apache/skywalking/pull/4325#discussion_r376367341", "bodyText": "You should delete this method, and move registerAsParallelCapable to the static initial block.", "author": "wu-sheng", "createdAt": "2020-02-07T12:32:43Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/loader/AgentClassLoader.java", "diffHunk": "@@ -62,34 +61,22 @@\n     private ReentrantLock jarScanLock = new ReentrantLock();\n \n     /**\n-     * Functional Description: solve the classloader dead lock when jvm start\n-     * only support JDK7+, since ParallelCapable appears in JDK7+\n+     * Try to solve the classloader dead lock.\n+     *\n+     * @see <a href=\"https://github.com/apache/skywalking/pull/2016\">#2016</a>\n      */\n     private static void tryRegisterAsParallelCapable() {\n-        Method[] methods = ClassLoader.class.getDeclaredMethods();\n-        for (int i = 0; i < methods.length; i++) {\n-            Method method = methods[i];\n-            String methodName = method.getName();\n-            if (\"registerAsParallelCapable\".equalsIgnoreCase(methodName)) {\n-                try {\n-                    method.setAccessible(true);\n-                    method.invoke(null);\n-                } catch (Exception e) {\n-                    logger.warn(e, \"can not invoke ClassLoader.registerAsParallelCapable()\");\n-                }\n-                return;\n-            }\n-        }\n+        registerAsParallelCapable();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f6cc4a3036872bdce4228996e4c64cd76c3b1a16", "url": "https://github.com/apache/skywalking/commit/f6cc4a3036872bdce4228996e4c64cd76c3b1a16", "message": "Remove unused codes, close leaked I/O stream\n\n### Motivation:\n\nClean up unused codes and migrate to JDK8.\n\n### Modifications:\n\n- Remove unused codes.\n\n- Close unclosed I/O stream.\n\n- Remove meaningless comments.\n\n### Result:\n\n- No unnecessary codes concerns.\n\n- No resources leak.", "committedDate": "2020-02-07T12:47:39Z", "type": "commit"}]}