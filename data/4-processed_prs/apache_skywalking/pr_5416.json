{"pr_number": 5416, "pr_title": "Support segment status based on entry/first span only", "pr_createdAt": "2020-08-31T12:20:45Z", "pr_url": "https://github.com/apache/skywalking/pull/5416", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMTgzMA==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r480201830", "bodyText": "Use annotation.", "author": "wu-sheng", "createdAt": "2020-08-31T15:20:19Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/ExceptionAnalyzerStrategy.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser;\n+\n+import lombok.Getter;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.AnyExceptionAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.EntryFirstExceptionAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.ExceptionAnalyzer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * define the strategy to analysis segment status\n+ */\n+public enum ExceptionAnalyzerStrategy {\n+    ANY(AnyExceptionAnalyzer.class),\n+\n+    ENTRY_FIRST(EntryFirstExceptionAnalyzer.class);\n+\n+    private final Logger log = LoggerFactory.getLogger(ExceptionAnalyzerStrategy.class);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMzE3Ng==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r480203176", "bodyText": "Even reflect cost is limited, but it is not necessary. ExceptionAnalyzer implementors are stateless, you could have the instance in the constructor directly.", "author": "wu-sheng", "createdAt": "2020-08-31T15:22:29Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/ExceptionAnalyzerStrategy.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser;\n+\n+import lombok.Getter;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.AnyExceptionAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.EntryFirstExceptionAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.ExceptionAnalyzer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * define the strategy to analysis segment status\n+ */\n+public enum ExceptionAnalyzerStrategy {\n+    ANY(AnyExceptionAnalyzer.class),\n+\n+    ENTRY_FIRST(EntryFirstExceptionAnalyzer.class);\n+\n+    private final Logger log = LoggerFactory.getLogger(ExceptionAnalyzerStrategy.class);\n+    @Getter\n+    private ExceptionAnalyzer exceptionAnalyzer;\n+\n+    ExceptionAnalyzerStrategy(final Class<? extends ExceptionAnalyzer> clazz) {\n+        try {\n+            this.exceptionAnalyzer = clazz.newInstance();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMzMzNg==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r480203336", "bodyText": "Use final and annotation for the constructor directly.", "author": "wu-sheng", "createdAt": "2020-08-31T15:22:48Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/ExceptionAnalyzerStrategy.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser;\n+\n+import lombok.Getter;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.AnyExceptionAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.EntryFirstExceptionAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.ExceptionAnalyzer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * define the strategy to analysis segment status\n+ */\n+public enum ExceptionAnalyzerStrategy {\n+    ANY(AnyExceptionAnalyzer.class),\n+\n+    ENTRY_FIRST(EntryFirstExceptionAnalyzer.class);\n+\n+    private final Logger log = LoggerFactory.getLogger(ExceptionAnalyzerStrategy.class);\n+    @Getter\n+    private ExceptionAnalyzer exceptionAnalyzer;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwNDI4NA==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r480204284", "bodyText": "I think the initializer has supported the enum. You don't need to do this.", "author": "wu-sheng", "createdAt": "2020-08-31T15:24:21Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/AnalyzerModuleConfig.java", "diffHunk": "@@ -80,9 +83,19 @@\n     private final String configPath = \"meter-receive-config\";\n \n     /**\n-     * Sample the trace segment if the segment has span(s) tagged as error status, and ignore the sampleRate configuration.\n+     * Sample the trace segment if the segment has span(s) tagged as error status, and ignore the sampleRate\n+     * configuration.\n      */\n     @Setter\n     @Getter\n     private boolean forceSampleErrorSegment = true;\n+\n+    /**\n+     * the strategy is to extract the status of segment from span collection\n+     *\n+     * @see ExceptionAnalyzerStrategy\n+     */\n+    @Setter\n+    @Getter\n+    private String exceptionAnalyzerStrategy = ENTRY_FIRST.name();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxNzA2OQ==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r480217069", "bodyText": "This is a low-performance method design. In the SegmentAnalysisListener#parseSegment, we have the span list iteration already, this interface forces the implementation to do it again.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                boolean isError(SegmentObject segmentObject);\n          \n          \n            \n                boolean isError(SpanObject span);", "author": "wu-sheng", "createdAt": "2020-08-31T15:42:22Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/ExceptionAnalyzer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SegmentObject;\n+\n+/**\n+ * judge the status of spanObject\n+ */\n+public interface ExceptionAnalyzer {\n+    /**\n+     * extract error status from the span collection in segmentObject\n+     */\n+    boolean isError(SegmentObject segmentObject);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxNzE1NA==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r480217154", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface ExceptionAnalyzer {\n          \n          \n            \n            public interface SegmentStatusAnalyzer {", "author": "wu-sheng", "createdAt": "2020-08-31T15:42:26Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/ExceptionAnalyzer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SegmentObject;\n+\n+/**\n+ * judge the status of spanObject\n+ */\n+public interface ExceptionAnalyzer {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIyMjM5MA==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r480222390", "bodyText": "Also, notice, ENTRY_FIRST is not the right term. The entry span could be not the first, and vice versa.", "author": "wu-sheng", "createdAt": "2020-08-31T15:49:48Z", "path": "docs/en/setup/backend/configuration-vocabulary.md", "diffHunk": "@@ -134,6 +134,7 @@ core|default|role|Option values, `Mixed/Receiver/Aggregator`. **Receiver** mode\n | - | -| sampleRate|Sampling rate for receiving trace. The precision is 1/10000. 10000 means 100% sample in default.|SW_TRACE_SAMPLE_RATE|10000|\n | - | - |slowDBAccessThreshold|The slow database access thresholds. Unit ms.|SW_SLOW_DB_THRESHOLD|default:200,mongodb:100|\n | - | - |forceSampleErrorSegment|When sampling mechanism activated, this config would make the error status segment sampled, ignoring the sampling rate.|SW_FORCE_SAMPLE_ERROR_SEGMENT|true|\n+| - | - |exceptionAnalyzerStrategy|Define how to extract segment status.If the exceptionAnalyzerStrategy equals to ENTRY_FIRST, the final status would be follow entry span status.Otherwise,the status would be error if the status of any spans is error. |SW_EXCEPTION_ANALYZER_STRATEGY|ENTRY_FIRST|", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIyODU0NQ==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r481228545", "bodyText": "I don't think we discussed this implementation before. Don't make 2 features in one PR.\nThis implementation should be discussed on the mail list, because, you should notice, the span#occurError could be called separately, such as based on HTTP response code. This logic could override it incorrectly, if HTTP response code == 500 and exception occurs.", "author": "wu-sheng", "createdAt": "2020-09-01T15:24:38Z", "path": "apm-sniffer/optional-plugins/exception-ignore-plugin/src/main/java/org/apache/skywalking/apm/plugin/exception/ignore/ExceptionIgnorerService.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.exception.ignore;\n+\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.reflect.ClassPath;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.apache.skywalking.apm.agent.core.boot.OverrideImplementor;\n+import org.apache.skywalking.apm.agent.core.context.DefaultExceptionIgnorerService;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractTracingSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.PluginBootstrap;\n+import org.apache.skywalking.apm.toolkit.trace.IgnoredException;\n+import org.apache.skywalking.apm.util.StringUtil;\n+\n+import static org.apache.skywalking.apm.plugin.exception.ignore.ExceptionAnalyzerConfig.Plugin.IgnoredException.IGNORED_EXCEPTION_CLASS_NAMES;\n+import static org.apache.skywalking.apm.plugin.exception.ignore.ExceptionAnalyzerConfig.Plugin.IgnoredException.IGNORED_EXCEPTION_SCAN_SCOPE;\n+\n+@OverrideImplementor(DefaultExceptionIgnorerService.class)\n+public class ExceptionIgnorerService extends DefaultExceptionIgnorerService {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI1MjkzNg==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r481252936", "bodyText": "now logic is only adjust status when throw ignore exception,\nfirst we define 2 kinds of exception. IgnoreException and OtherException\n\nif response code is 500 and don't  throw exception ,the final status is error.\nif response code is 500  and throw OtherException,the final status is errror.\nif response code is 500  and throw IgnoreException,the final status is not error.\nfor example in spring mvc, maybe throw exception would be cause response code is 500, if the exception could be ignored,the span final staus would be not error\n\ni would push a new pr about the feature", "author": "EvanLjp", "createdAt": "2020-09-01T15:59:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIyODU0NQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "16b36163bd085e42afbc3ca7597bb05de5cb8341", "url": "https://github.com/apache/skywalking/commit/16b36163bd085e42afbc3ca7597bb05de5cb8341", "message": "Support segment status based on entry/first span only", "committedDate": "2020-09-01T22:31:05Z", "type": "commit"}, {"oid": "16b36163bd085e42afbc3ca7597bb05de5cb8341", "url": "https://github.com/apache/skywalking/commit/16b36163bd085e42afbc3ca7597bb05de5cb8341", "message": "Support segment status based on entry/first span only", "committedDate": "2020-09-01T22:31:05Z", "type": "forcePushed"}, {"oid": "0eaf402b0bc2f41354dd45be5cdbf40cb182c311", "url": "https://github.com/apache/skywalking/commit/0eaf402b0bc2f41354dd45be5cdbf40cb182c311", "message": "remove unnecessary code", "committedDate": "2020-09-03T06:06:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2OTU2OQ==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r482769569", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class AnySpanSegmentStatusAnalyzer implements SegmentStatusAnalyzer {\n          \n          \n            \n            public class FromSpanStatus implements SegmentStatusAnalyzer {", "author": "wu-sheng", "createdAt": "2020-09-03T07:36:43Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/AnySpanSegmentStatusAnalyzer.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanObject;\n+\n+public class AnySpanSegmentStatusAnalyzer implements SegmentStatusAnalyzer {", "originalCommit": "0eaf402b0bc2f41354dd45be5cdbf40cb182c311", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3MDk0Mg==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r482770942", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * judge the status of spanObject\n          \n          \n            \n             * The SegmentStatusAnalyzer implementations provide different strategies for determining the segment status from the status of spans.", "author": "wu-sheng", "createdAt": "2020-09-03T07:38:58Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/SegmentStatusAnalyzer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanObject;\n+\n+/**\n+ * judge the status of spanObject", "originalCommit": "0eaf402b0bc2f41354dd45be5cdbf40cb182c311", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3MTc3Mw==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r482771773", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * define the strategy to analysis segment status\n          \n          \n            \n             * Define the available strategies for analysis segment status analysis.", "author": "wu-sheng", "createdAt": "2020-09-03T07:40:17Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/SegmentStatusStrategy.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser;\n+\n+import lombok.Getter;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.AnySpanSegmentStatusAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.FirstSpanSegmentStatusAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.SegmentStatusAnalyzer;\n+\n+/**\n+ * define the strategy to analysis segment status", "originalCommit": "0eaf402b0bc2f41354dd45be5cdbf40cb182c311", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3MjExNw==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r482772117", "bodyText": "Use Lombok to replace this.", "author": "wu-sheng", "createdAt": "2020-09-03T07:40:50Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/SegmentStatusStrategy.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser;\n+\n+import lombok.Getter;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.AnySpanSegmentStatusAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.FirstSpanSegmentStatusAnalyzer;\n+import org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy.SegmentStatusAnalyzer;\n+\n+/**\n+ * define the strategy to analysis segment status\n+ */\n+public enum SegmentStatusStrategy {\n+    FROM_SPAN_STATUS(new AnySpanSegmentStatusAnalyzer()),\n+\n+    FROM_FIRST_SPAN_STATUS(new FirstSpanSegmentStatusAnalyzer());\n+\n+    @Getter\n+    private final SegmentStatusAnalyzer exceptionAnalyzer;\n+\n+    SegmentStatusStrategy(final SegmentStatusAnalyzer exceptionAnalyzer) {\n+        this.exceptionAnalyzer = exceptionAnalyzer;\n+    }", "originalCommit": "0eaf402b0bc2f41354dd45be5cdbf40cb182c311", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3MzM1Ng==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r482773356", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class FirstSpanSegmentStatusAnalyzer extends AnySpanSegmentStatusAnalyzer {\n          \n          \n            \n            public class FromEntrySpan extends AnySpanSegmentStatusAnalyzer {\n          \n      \n    \n    \n  \n\nI think don't the first span makes sense. Usually, the entry span represents the RPC incoming call status.", "author": "wu-sheng", "createdAt": "2020-09-03T07:42:54Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/FirstSpanSegmentStatusAnalyzer.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanObject;\n+\n+public class FirstSpanSegmentStatusAnalyzer extends AnySpanSegmentStatusAnalyzer {", "originalCommit": "0eaf402b0bc2f41354dd45be5cdbf40cb182c311", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3NjI4MA==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r482776280", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | - | - |segmentStatusAnalysisStrategy|Extract the final segment status from span collection in segment. Logic or operation is as default within all span status.|SW_SEGMENT_STATUS_ANALYSIS_STRATEGY|FROM_SPAN_STATUS|\n          \n          \n            \n            | - | - |segmentStatusAnalysisStrategy|Determine the final segment status from the status of spans. Available values are `FROM_SPAN_STATUS` and `FROM_ENTRY_SPAN`. `FROM_SPAN_STATUS` represents the segment status would be error if any span is in error status. `FROM_ENTRY_SPAN` means the segment status would be determined by the status of entry spans only.|SW_SEGMENT_STATUS_ANALYSIS_STRATEGY|FROM_SPAN_STATUS|\n          \n      \n    \n    \n  \n\nNOTICE, the document is for end-users, you need to adjust the way of expression for them, rather than writing document from a developer.", "author": "wu-sheng", "createdAt": "2020-09-03T07:47:44Z", "path": "docs/en/setup/backend/configuration-vocabulary.md", "diffHunk": "@@ -137,6 +137,7 @@ core|default|role|Option values, `Mixed/Receiver/Aggregator`. **Receiver** mode\n | - | -| sampleRate|Sampling rate for receiving trace. The precision is 1/10000. 10000 means 100% sample in default.|SW_TRACE_SAMPLE_RATE|10000|\n | - | - |slowDBAccessThreshold|The slow database access thresholds. Unit ms.|SW_SLOW_DB_THRESHOLD|default:200,mongodb:100|\n | - | - |forceSampleErrorSegment|When sampling mechanism activated, this config would make the error status segment sampled, ignoring the sampling rate.|SW_FORCE_SAMPLE_ERROR_SEGMENT|true|\n+| - | - |segmentStatusAnalysisStrategy|Extract the final segment status from span collection in segment. Logic or operation is as default within all span status.|SW_SEGMENT_STATUS_ANALYSIS_STRATEGY|FROM_SPAN_STATUS|", "originalCommit": "0eaf402b0bc2f41354dd45be5cdbf40cb182c311", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4b62d26c0e6b95974848ff099579b35e1366c120", "url": "https://github.com/apache/skywalking/commit/4b62d26c0e6b95974848ff099579b35e1366c120", "message": "change doc and add unit test", "committedDate": "2020-09-03T08:20:52Z", "type": "commit"}, {"oid": "7d17765ec3d3640cb5cfa0b7604a27412b85b384", "url": "https://github.com/apache/skywalking/commit/7d17765ec3d3640cb5cfa0b7604a27412b85b384", "message": "add SegmentStatusStrategy findByName", "committedDate": "2020-09-03T10:04:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwMzU4Mg==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r483003582", "bodyText": "Comments", "author": "wu-sheng", "createdAt": "2020-09-03T14:04:34Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/FromEntrySpan.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanObject;\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanType;\n+\n+public class FromEntrySpan implements SegmentStatusAnalyzer {", "originalCommit": "7d17765ec3d3640cb5cfa0b7604a27412b85b384", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwMzYzMw==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r483003633", "bodyText": "Comments", "author": "wu-sheng", "createdAt": "2020-09-03T14:04:38Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/FromSpanStatus.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanObject;\n+\n+public class FromSpanStatus implements SegmentStatusAnalyzer {", "originalCommit": "7d17765ec3d3640cb5cfa0b7604a27412b85b384", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9312baa87b971e41074dc7934cdd3f30d00aaf07", "url": "https://github.com/apache/skywalking/commit/9312baa87b971e41074dc7934cdd3f30d00aaf07", "message": "Merge branch 'master' into exception-analyzer", "committedDate": "2020-09-03T15:20:46Z", "type": "commit"}, {"oid": "94e05554eaa52ed849a6ebd3a31468a3f3e9fc41", "url": "https://github.com/apache/skywalking/commit/94e05554eaa52ed849a6ebd3a31468a3f3e9fc41", "message": "update doc", "committedDate": "2020-09-04T11:37:29Z", "type": "commit"}, {"oid": "40bf2816cbc964a0da5ad8dff7f4b0dc0593141f", "url": "https://github.com/apache/skywalking/commit/40bf2816cbc964a0da5ad8dff7f4b0dc0593141f", "message": "add unit test", "committedDate": "2020-09-04T12:07:18Z", "type": "commit"}, {"oid": "660db8733a0830b83fd624a826b8f2a1b8340644", "url": "https://github.com/apache/skywalking/commit/660db8733a0830b83fd624a826b8f2a1b8340644", "message": "Merge branch 'exception-analyzer' of https://github.com/EvanLjp/skywalking into exception-analyzer", "committedDate": "2020-09-04T12:08:00Z", "type": "commit"}, {"oid": "24c57a9ebe41f493129732825429d7531a8fe89c", "url": "https://github.com/apache/skywalking/commit/24c57a9ebe41f493129732825429d7531a8fe89c", "message": "Merge remote-tracking branch 'upstream/master' into exception-analyzer", "committedDate": "2020-09-04T12:08:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzQxNA==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r483627414", "bodyText": "This is entry not first span.", "author": "wu-sheng", "createdAt": "2020-09-04T13:49:19Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/FromFirstSpan.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanObject;\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanType;\n+\n+/**\n+ * FromFirstSpan means the status of the segment is the same as the status of the first span. Mostly, the first span is\n+ * an entry span. However, a tracing caused by a scheduled task, the first one should be a local span.\n+ */\n+public class FromFirstSpan implements SegmentStatusAnalyzer {\n+\n+    @Override\n+    public boolean isError(final SpanObject spanObject) {\n+        return spanObject.getSpanType().equals(SpanType.Entry) && spanObject.getIsError();", "originalCommit": "24c57a9ebe41f493129732825429d7531a8fe89c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyODM3MA==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r483628370", "bodyText": "This also indicates your UT has some issues. Please fix with this.", "author": "wu-sheng", "createdAt": "2020-09-04T13:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzQxNA=="}], "type": "inlineReview"}, {"oid": "cb60f42e798f37697f58169890bb191828e2b2bf", "url": "https://github.com/apache/skywalking/commit/cb60f42e798f37697f58169890bb191828e2b2bf", "message": "Merge branch 'master' into exception-analyzer", "committedDate": "2020-09-04T14:42:16Z", "type": "commit"}, {"oid": "85621f89ee4c5f42c43a08492e18c36780bc2b9b", "url": "https://github.com/apache/skywalking/commit/85621f89ee4c5f42c43a08492e18c36780bc2b9b", "message": "fix from first span", "committedDate": "2020-09-05T08:38:33Z", "type": "commit"}, {"oid": "00f7e1c1b7cd78b7053f74bd73b02403056d5504", "url": "https://github.com/apache/skywalking/commit/00f7e1c1b7cd78b7053f74bd73b02403056d5504", "message": "Merge branch 'exception-analyzer' of https://github.com/EvanLjp/skywalking into exception-analyzer", "committedDate": "2020-09-05T08:39:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY4NjkyOA==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r483686928", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * FROM_FIRST_SPAN` means the segment status would be determined by the status of the first span only.\n          \n          \n            \n                 * `FROM_FIRST_SPAN` means the segment status would be determined by the status of the first span only.", "author": "kezhenxu94", "createdAt": "2020-09-04T15:23:26Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/SegmentStatusStrategy.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+/**\n+ * Define the available strategies for analysis segment status analysis.\n+ */\n+@AllArgsConstructor\n+public enum SegmentStatusStrategy {\n+    /**\n+     * `FROM_SPAN_STATUS` represents the segment status would be error if any span is in error status.\n+     */\n+    FROM_SPAN_STATUS(new FromSpanStatus()),\n+    /**\n+     * `FROM_ENTRY_SPAN` means the segment status would be determined by the status of entry spans only.\n+     *\n+     * @see FromEntrySpan\n+     */\n+    FROM_ENTRY_SPAN(new FromEntrySpan()),\n+    /**\n+     * FROM_FIRST_SPAN` means the segment status would be determined by the status of the first span only.", "originalCommit": "cb60f42e798f37697f58169890bb191828e2b2bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkyOTI5OA==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r483929298", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * FromEntrySpan means the status of the segment is the same as the status of the entry span. If the entry span does not\n          \n          \n            \n             * exist, the final state of the segment will be a success.\n          \n          \n            \n             * FromEntrySpan means the status of the segment is the same as the status of the entry span. If the entry span does not\n          \n          \n            \n             * exist, the final state of the segment is successful.", "author": "wu-sheng", "createdAt": "2020-09-05T08:54:05Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/FromEntrySpan.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanObject;\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanType;\n+\n+/**\n+ * FromEntrySpan means the status of the segment is the same as the status of the entry span. If the entry span does not\n+ * exist, the final state of the segment will be a success.", "originalCommit": "00f7e1c1b7cd78b7053f74bd73b02403056d5504", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "61e1d57cc55f16d35beb2a0bf9c7fb05513d2cd6", "url": "https://github.com/apache/skywalking/commit/61e1d57cc55f16d35beb2a0bf9c7fb05513d2cd6", "message": "Update oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/FromEntrySpan.java", "committedDate": "2020-09-05T08:54:20Z", "type": "commit"}, {"oid": "ee89b4fdd7bf2276b94536ec11a97208adaa6247", "url": "https://github.com/apache/skywalking/commit/ee89b4fdd7bf2276b94536ec11a97208adaa6247", "message": "fix some comments", "committedDate": "2020-09-05T08:56:02Z", "type": "commit"}, {"oid": "8da1413c3f51d147810d3bd0ba28041c1aa19543", "url": "https://github.com/apache/skywalking/commit/8da1413c3f51d147810d3bd0ba28041c1aa19543", "message": "Merge branch 'exception-analyzer' of https://github.com/EvanLjp/skywalking into exception-analyzer", "committedDate": "2020-09-05T08:57:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkyOTcxMQ==", "url": "https://github.com/apache/skywalking/pull/5416#discussion_r483929711", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Determines whether the status of a span is passed to segment or not.\n          \n          \n            \n                 * @return false, if the status of the given status represents the fatal status of the whole segment based on the strategy", "author": "wu-sheng", "createdAt": "2020-09-05T08:58:44Z", "path": "oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/SegmentStatusAnalyzer.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.analyzer.provider.trace.parser.listener.strategy;\n+\n+import org.apache.skywalking.apm.network.language.agent.v3.SpanObject;\n+\n+/**\n+ * The SegmentStatusAnalyzer implementations provide different strategies for determining the segment status from the\n+ * status of spans.\n+ */\n+public interface SegmentStatusAnalyzer {\n+    /**\n+     * Determines whether the status of a span is passed to segment or not.", "originalCommit": "61e1d57cc55f16d35beb2a0bf9c7fb05513d2cd6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0db110d7ed50d35a061463645e888260ecf6b385", "url": "https://github.com/apache/skywalking/commit/0db110d7ed50d35a061463645e888260ecf6b385", "message": "Update oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/strategy/SegmentStatusAnalyzer.java", "committedDate": "2020-09-05T08:59:02Z", "type": "commit"}, {"oid": "f518386284b292656f4265cf0f16d0cc8bd10b22", "url": "https://github.com/apache/skywalking/commit/f518386284b292656f4265cf0f16d0cc8bd10b22", "message": "Merge branch 'master' into exception-analyzer", "committedDate": "2020-09-05T09:01:27Z", "type": "commit"}]}