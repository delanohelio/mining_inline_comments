{"pr_number": 5648, "pr_title": "Provide meter agent test tool support", "pr_createdAt": "2020-10-11T14:17:16Z", "pr_url": "https://github.com/apache/skywalking/pull/5648", "timeline": [{"oid": "0597545848dede8369bb3b1a0e4edab0803163cf", "url": "https://github.com/apache/skywalking/commit/0597545848dede8369bb3b1a0e4edab0803163cf", "message": "Provide toolkit meter agent test", "committedDate": "2020-10-11T14:06:45Z", "type": "commit"}, {"oid": "72e620daa57a62e6d51d203f2f2fddb7f09c3583", "url": "https://github.com/apache/skywalking/commit/72e620daa57a62e6d51d203f2f2fddb7f09c3583", "message": "Change document format", "committedDate": "2020-10-11T14:13:52Z", "type": "commit"}, {"oid": "dba60957d9cf55a5bdf8c50eaeb9be76eeb401b9", "url": "https://github.com/apache/skywalking/commit/dba60957d9cf55a5bdf8c50eaeb9be76eeb401b9", "message": "Merge branch 'master' into meter_agent_test", "committedDate": "2020-10-11T14:17:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkyMjgzOA==", "url": "https://github.com/apache/skywalking/pull/5648#discussion_r502922838", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              meterSize: SEGMENT_SIZE(int)\n          \n          \n            \n              meterSize: METER_SIZE(int)", "author": "wu-sheng", "createdAt": "2020-10-11T14:29:20Z", "path": "docs/en/guides/Plugin-test.md", "diffHunk": "@@ -294,6 +294,48 @@ The verify description for SegmentRef\n | networkAddress | The peer value of parent exit span.\n | refType | Ref type, options, CrossProcess or CrossThread.\n \n+**Meter verify description format**\n+```yml\n+meterItems:\n+-\n+  serviceName: SERVICE_NAME(string)\n+  meterSize: SEGMENT_SIZE(int)", "originalCommit": "dba60957d9cf55a5bdf8c50eaeb9be76eeb401b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkyMjg2OQ==", "url": "https://github.com/apache/skywalking/pull/5648#discussion_r502922869", "bodyText": "What is the size? Do you mean how many names of meter?", "author": "wu-sheng", "createdAt": "2020-10-11T14:29:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkyMjgzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkyMzE5MQ==", "url": "https://github.com/apache/skywalking/pull/5648#discussion_r502923191", "bodyText": "How could you know the count? the values are generated in the runtime, I have doubt that it is possible to be accurate.", "author": "wu-sheng", "createdAt": "2020-10-11T14:32:02Z", "path": "docs/en/guides/Plugin-test.md", "diffHunk": "@@ -294,6 +294,48 @@ The verify description for SegmentRef\n | networkAddress | The peer value of parent exit span.\n | refType | Ref type, options, CrossProcess or CrossThread.\n \n+**Meter verify description format**\n+```yml\n+meterItems:\n+-\n+  serviceName: SERVICE_NAME(string)\n+  meterSize: SEGMENT_SIZE(int)\n+  meters:\n+  - ...\n+```\n+\n+| Field |  Description\n+| --- | ---  \n+| serviceName | Service Name.\n+| meterSize | The number of meters is expected.\n+| meters | meter list. Follow the next section to see how to describe every meter.\n+\n+**Meter data verify description format**\n+\n+```yml\n+    meterId: \n+        name: NAME(string)\n+        tags:\n+        - {name: TAG_NAME(string), value: TAG_VALUE(string)}\n+    singleValue: SINGLE_VALUE(double)\n+    histogram:\n+    - {bucket: HISTOGRAM_BUCKET(double), count: HISTOGRAM_BUCKET_COUNT(long)}", "originalCommit": "dba60957d9cf55a5bdf8c50eaeb9be76eeb401b9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkyMzI1Ng==", "url": "https://github.com/apache/skywalking/pull/5648#discussion_r502923256", "bodyText": "Could you use the snapshot for now to replace the duplicated codes?", "author": "wu-sheng", "createdAt": "2020-10-11T14:32:43Z", "path": "test/plugin/scenarios/apm-toolkit-trace-scenario/src/main/java/org/apache/skywalking/apm/toolkit/meter/BaseBuilder.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.toolkit.meter;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Help to build the meter\n+ */\n+public abstract class BaseBuilder<BUILDER extends BaseBuilder, METER extends BaseMeter> {", "originalCommit": "dba60957d9cf55a5bdf8c50eaeb9be76eeb401b9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkyMzQ4MQ==", "url": "https://github.com/apache/skywalking/pull/5648#discussion_r502923481", "bodyText": "I think you missed this part of the document for this, https://github.com/apache/skywalking/blob/dba60957d9cf55a5bdf8c50eaeb9be76eeb401b9/docs/en/guides/Plugin-test.md#the-example-process-of-writing-expected-data", "author": "wu-sheng", "createdAt": "2020-10-11T14:34:45Z", "path": "docs/en/guides/Plugin-test.md", "diffHunk": "@@ -294,6 +294,48 @@ The verify description for SegmentRef\n | networkAddress | The peer value of parent exit span.\n | refType | Ref type, options, CrossProcess or CrossThread.\n \n+**Meter verify description format**\n+```yml\n+meterItems:\n+-\n+  serviceName: SERVICE_NAME(string)\n+  meterSize: SEGMENT_SIZE(int)\n+  meters:\n+  - ...\n+```", "originalCommit": "dba60957d9cf55a5bdf8c50eaeb9be76eeb401b9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d659d5564087ec07583b10e5c9b4738f02196e02", "url": "https://github.com/apache/skywalking/commit/d659d5564087ec07583b10e5c9b4738f02196e02", "message": "1. Using snapshot dependency to remove meter toolkit code copy\n2. Make expected data with condition\n3. Add document", "committedDate": "2020-10-12T07:54:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODgwMA==", "url": "https://github.com/apache/skywalking/pull/5648#discussion_r503108800", "bodyText": "I have a little concern about the practicality. When the codes try to use the histogram to measure the performance, it seems hard to tell which bucket(s) would have value. Could you try to do a bucket check(w/o count) only, and only check at least not all count(s) are 0?\n@dmsolr What do you think?", "author": "wu-sheng", "createdAt": "2020-10-12T08:02:30Z", "path": "docs/en/guides/Plugin-test.md", "diffHunk": "@@ -485,6 +527,80 @@ SegmentB span list should like following\n     - {parentEndpoint: /httpclient-case/case/httpclient, networkAddress: 'localhost:8080', refType: CrossProcess, parentSpanId: 1, parentTraceSegmentId: not null, parentServiceInstance: not null, parentService: not null, traceId: not null}\n ```\n \n+### The example Process of Writing Meter Expected Data\n+\n+Expected data file, `expectedData.yaml`, include `MeterItems` part.\n+\n+We are using the toolkit plugin to show how to write the expected data. You could write the meter in the plugin, please follow [this document](Java-Plugin-Development-Guide.md#meter-plugin).\n+\n+There is one key point of testing\n+1. Build a meter and operate it.\n+\n+Such as `Counter`:\n+```java\n+MeterFactory.counter(\"test_counter\").tag(\"ck1\", \"cv1\").build().increment(1d);\n+MeterFactory.histogram(\"test_histogram\").tag(\"hk1\", \"hv1\").steps(1d, 5d, 10d).build().addValue(2d);\n+```\n+\n+```\n++-------------+         +------------------+\n+|   Plugin    |         |    Agent core    |\n+|             |         |                  |\n++-----|-------+         +---------|--------+\n+      |                           |         \n+      |                           |         \n+      |    Build or operate      +-+        \n+      +------------------------> |-|        \n+      |                          |-]\n+      |                          |-|        \n+      |                          |-|        \n+      |                          |-|\n+      |                          |-|        \n+      | <--------------------------|        \n+      |                          +-+        \n+      |                           |         \n+      |                           |         \n+      |                           |         \n+      |                           |         \n+      +                           +         \n+```\n+\n+#### meterItems\n+\n+By following the flow of the toolkit case,  there should be two meters created.\n+1. Meter `test_counter` created from `MeterFactory#counter`. Let's name it as `MeterA`.\n+1. Meter `test_histogram` created from `MeterFactory#histogram`. Let's name it as `MeterB`.\n+\n+```yml\n+meterItems:\n+  - serviceName: toolkit-case\n+    meterSize: 2\n+```\n+\n+They're showing two kinds of meter, MeterA has a single value, MeterB has a histogram value.\n+\n+MeterA should like following, `counter` and `gauge` use the same data format.\n+```yaml\n+- meterId:\n+    name: test_counter\n+    tags:\n+      - {name: ck1, value: cv1}\n+  singleValue: gt 0\n+```\n+\n+MeterB should like following.\n+```yaml\n+- meterId:\n+    name: test_histogram\n+    tags:\n+      - {name: hk1, value: hv1}\n+  histogram:\n+    - {bucket: 0.0, count: ge 0}\n+    - {bucket: 1.0, count: ge 0}\n+    - {bucket: 5.0, count: ge 0}\n+    - {bucket: 10.0, count: ge 0}", "originalCommit": "d659d5564087ec07583b10e5c9b4738f02196e02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMxMzcyOA==", "url": "https://github.com/apache/skywalking/pull/5648#discussion_r503313728", "bodyText": "Follow the apache/skywalking-agent-test-tool#26, change the histogram meter validation way.", "author": "mrproliu", "createdAt": "2020-10-12T13:56:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODgwMA=="}], "type": "inlineReview"}, {"oid": "990b3e4cab5ee515ba8f3cdf55991159d0fe554e", "url": "https://github.com/apache/skywalking/commit/990b3e4cab5ee515ba8f3cdf55991159d0fe554e", "message": "Change histogram meter validate way", "committedDate": "2020-10-12T13:52:33Z", "type": "commit"}, {"oid": "8f1d7194d6d1b93cbe4d10554673301686cdbd76", "url": "https://github.com/apache/skywalking/commit/8f1d7194d6d1b93cbe4d10554673301686cdbd76", "message": "Merge branch 'master' into meter_agent_test", "committedDate": "2020-10-12T13:56:14Z", "type": "commit"}, {"oid": "b7c5242382d22c71016a33f8d8cda98ef52cdbc8", "url": "https://github.com/apache/skywalking/commit/b7c5242382d22c71016a33f8d8cda98ef52cdbc8", "message": "Update Plugin-test.md\n\nPolish the doc.", "committedDate": "2020-10-12T14:43:59Z", "type": "commit"}, {"oid": "9ae4b3d8e910878e02d0c291b0293850ca538ec6", "url": "https://github.com/apache/skywalking/commit/9ae4b3d8e910878e02d0c291b0293850ca538ec6", "message": "Update Plugin-test.md\n\nhistogram.buckets to histogramBuckets", "committedDate": "2020-10-12T15:03:07Z", "type": "commit"}]}