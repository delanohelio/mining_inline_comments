{"pr_number": 5493, "pr_title": "add webflux webclient plugin", "pr_createdAt": "2020-09-15T12:43:28Z", "pr_url": "https://github.com/apache/skywalking/pull/5493", "timeline": [{"oid": "d111e5dadb7de8dcd8209f87a8813a50dcfe99e2", "url": "https://github.com/apache/skywalking/commit/d111e5dadb7de8dcd8209f87a8813a50dcfe99e2", "message": "Merge pull request #1 from apache/master\n\nramain the last", "committedDate": "2020-05-27T02:58:57Z", "type": "commit"}, {"oid": "ad67170d39f576e20f9bd4cb43bb8be4f18b4857", "url": "https://github.com/apache/skywalking/commit/ad67170d39f576e20f9bd4cb43bb8be4f18b4857", "message": "Merge pull request #2 from apache/master\n\nupdate localbase", "committedDate": "2020-07-01T09:39:53Z", "type": "commit"}, {"oid": "cd07f9b2980b4a3bab8f85cc9233c4e3f01a70b7", "url": "https://github.com/apache/skywalking/commit/cd07f9b2980b4a3bab8f85cc9233c4e3f01a70b7", "message": "Merge pull request #4 from apache/master\n\nupdate to date of time", "committedDate": "2020-08-28T02:05:29Z", "type": "commit"}, {"oid": "0e9e1264405eb5b08be73201f15305f1d122f5f4", "url": "https://github.com/apache/skywalking/commit/0e9e1264405eb5b08be73201f15305f1d122f5f4", "message": "Merge pull request #6 from apache/master\n\nupdate project", "committedDate": "2020-09-14T12:50:18Z", "type": "commit"}, {"oid": "d6a6dadb320ba39b0f64157438df96f778209b8f", "url": "https://github.com/apache/skywalking/commit/d6a6dadb320ba39b0f64157438df96f778209b8f", "message": "Merge branch 'master' of https://github.com/apache/skywalking", "committedDate": "2020-09-15T08:48:41Z", "type": "commit"}, {"oid": "cec57d6a3444efcbe9918094611a8b34db30cc59", "url": "https://github.com/apache/skywalking/commit/cec57d6a3444efcbe9918094611a8b34db30cc59", "message": "finish webflux webclient plugin test", "committedDate": "2020-09-15T12:41:30Z", "type": "commit"}, {"oid": "cec57d6a3444efcbe9918094611a8b34db30cc59", "url": "https://github.com/apache/skywalking/commit/cec57d6a3444efcbe9918094611a8b34db30cc59", "message": "finish webflux webclient plugin test", "committedDate": "2020-09-15T12:41:30Z", "type": "forcePushed"}, {"oid": "51483a77f1ff89db93a9ce2eab00e6de9da14c3c", "url": "https://github.com/apache/skywalking/commit/51483a77f1ff89db93a9ce2eab00e6de9da14c3c", "message": "Merge branch 'master' of https://github.com/apache/skywalking into dev", "committedDate": "2020-09-16T11:17:34Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "ab0009cd9809fbced1884bd8e9de95e6c1b74816", "url": "https://github.com/apache/skywalking/commit/ab0009cd9809fbced1884bd8e9de95e6c1b74816", "message": "add plugin information in Plugin-list.md and modefiy some content in expectedData.yaml", "committedDate": "2020-09-16T12:45:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA5MzY4Nw==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r490093687", "bodyText": "@vcjmhg swap this line and line 31 solves the problem,", "author": "kezhenxu94", "createdAt": "2020-09-17T09:13:19Z", "path": "test/plugin/scenarios/webflux-scenario/pom.xml", "diffHunk": "@@ -29,6 +29,7 @@\n         <module>webflux-projectA-scenario</module>\n         <module>webflux-projectB-scenario</module>\n         <module>webflux-dist</module>\n+        <module>webflux-webclient-scenario</module>", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NzkxNQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r490157915", "bodyText": "The newly-added module is not packaged before webflux-dist module, so the error message occurred, see my comment inline, please also note that there is another failure in the C\n\nAnother failure in the CI is the command -./mvnw --batch-mode clean package -DskipTests -Pagent.I have test it in my pc and it has pased.", "author": "vcjmhg", "createdAt": "2020-09-17T11:06:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA5MzY4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA5NjYzOQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r490096639", "bodyText": "This name doesn't accord to the one in apm-protocol/apm-network/src/main/java/org/apache/skywalking/apm/network/trace/component/ComponentsDefine.java", "author": "kezhenxu94", "createdAt": "2020-09-17T09:17:56Z", "path": "oap-server/server-bootstrap/src/main/resources/component-libraries.yml", "diffHunk": "@@ -323,6 +323,9 @@ SpringScheduled:\n quartz-scheduler:\n   id: 97\n   languages: Java\n+spring-webclient:", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEyNjkzNg==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r490126936", "bodyText": "Thank you very much !\ud83d\ude04", "author": "vcjmhg", "createdAt": "2020-09-17T10:07:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA5NjYzOQ=="}], "type": "inlineReview"}, {"oid": "94fddff8e20168bc6612ac696f267b70ac9707d3", "url": "https://github.com/apache/skywalking/commit/94fddff8e20168bc6612ac696f267b70ac9707d3", "message": "make plugin name in component-libraries.yml same with in ComponentDefine.java", "committedDate": "2020-09-17T10:57:55Z", "type": "commit"}, {"oid": "94fddff8e20168bc6612ac696f267b70ac9707d3", "url": "https://github.com/apache/skywalking/commit/94fddff8e20168bc6612ac696f267b70ac9707d3", "message": "make plugin name in component-libraries.yml same with in ComponentDefine.java", "committedDate": "2020-09-17T10:57:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE2ODcyOQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r490168729", "bodyText": "Should the format be k=v in properties?", "author": "dmsolr", "createdAt": "2020-09-17T11:27:01Z", "path": "test/plugin/scenarios/webflux-scenario/webflux-webclient-scenario/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+#  limitations under the License.\n+#\n+\n+server.port: 18081", "originalCommit": "94fddff8e20168bc6612ac696f267b70ac9707d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3NzAzNQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r490177035", "bodyText": "Should the format be k=v in properties?\n\nThank you very muh for pointing my mistake.Originally, I wanted to write configuration file imitating webflux-webclient-scenario, but I ignore the difference in file type . I will fix it immediately.", "author": "vcjmhg", "createdAt": "2020-09-17T11:42:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE2ODcyOQ=="}], "type": "inlineReview"}, {"oid": "431a3b7987f6a7ad3e1b844305a7e3ce724b78b5", "url": "https://github.com/apache/skywalking/commit/431a3b7987f6a7ad3e1b844305a7e3ce724b78b5", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-18T00:17:40Z", "type": "commit"}, {"oid": "8b9095b867b21d0c4f0287effdf660413df9ba3b", "url": "https://github.com/apache/skywalking/commit/8b9095b867b21d0c4f0287effdf660413df9ba3b", "message": "change the filetype of application.yml from .properties to yml", "committedDate": "2020-09-18T00:23:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2NTY4NQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r490665685", "bodyText": "span may be null if (allArguments[0] == null)", "author": "kezhenxu94", "createdAt": "2020-09-18T02:33:23Z", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/spring-webflux-5.x-webclient-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/webclient/WebFluxWebClientInterceptor.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.spring.webflux.v5.webclient;\n+\n+import org.apache.skywalking.apm.agent.core.context.CarrierItem;\n+import org.apache.skywalking.apm.agent.core.context.ContextCarrier;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.reactive.function.client.ClientRequest;\n+import org.springframework.web.reactive.function.client.ClientResponse;\n+import reactor.core.publisher.Mono;\n+\n+import java.lang.reflect.Method;\n+import java.net.URI;\n+import java.util.function.BiConsumer;\n+\n+public class WebFluxWebClientInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        if (allArguments[0] == null) {\n+            //illegal args,can't trace ignore\n+            return;\n+        }\n+\n+        ClientRequest request = (ClientRequest) allArguments[0];\n+        final ContextCarrier contextCarrier = new ContextCarrier();\n+\n+        URI uri = request.url();\n+        final String requestURIString = getRequestURIString(uri);\n+        final String operationName = requestURIString;\n+        final String remotePeer = getIPAndPort(uri);\n+        AbstractSpan span = ContextManager.createExitSpan(operationName, contextCarrier, remotePeer);\n+\n+        //set componet name\n+        span.setComponent(ComponentsDefine.SPRING_WEBCLIENT);\n+        Tags.URL.set(span, uri.toString());\n+        Tags.HTTP.METHOD.set(span, request.method().toString());\n+        SpanLayer.asHttp(span);\n+\n+        //user async interface\n+        span.prepareForAsync();\n+        ContextManager.stopSpan();\n+\n+        objInst.setSkyWalkingDynamicField(span);\n+\n+        CarrierItem next = contextCarrier.items();\n+        while (next.hasNext()) {\n+            next = next.next();\n+            request.headers().add(next.getHeadKey(), next.getHeadValue());\n+        }\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        Mono<ClientResponse> ret1 = (Mono<ClientResponse>) ret;\n+        AbstractSpan span = (AbstractSpan) objInst.getSkyWalkingDynamicField();", "originalCommit": "8b9095b867b21d0c4f0287effdf660413df9ba3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTYzOTc1MA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491639750", "bodyText": "thank you so much,I will fix it.", "author": "vcjmhg", "createdAt": "2020-09-20T01:33:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2NTY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0MTU1Nw==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491641557", "bodyText": "span may be null if (allArguments[0] == null)\n\nSir,if  allArgument[0] is null ,it seems that I can't do anything except return ret.", "author": "vcjmhg", "createdAt": "2020-09-20T02:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY2NTY4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3MDM3Ng==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r490670376", "bodyText": "You don't need span.errorOccurred(); now\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        span.errorOccurred();\n          \n          \n            \n                        span.log(error);\n          \n          \n            \n                        span.log(error);", "author": "kezhenxu94", "createdAt": "2020-09-18T02:51:47Z", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/spring-webflux-5.x-webclient-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/webclient/WebFluxWebClientInterceptor.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.spring.webflux.v5.webclient;\n+\n+import org.apache.skywalking.apm.agent.core.context.CarrierItem;\n+import org.apache.skywalking.apm.agent.core.context.ContextCarrier;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.reactive.function.client.ClientRequest;\n+import org.springframework.web.reactive.function.client.ClientResponse;\n+import reactor.core.publisher.Mono;\n+\n+import java.lang.reflect.Method;\n+import java.net.URI;\n+import java.util.function.BiConsumer;\n+\n+public class WebFluxWebClientInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        if (allArguments[0] == null) {\n+            //illegal args,can't trace ignore\n+            return;\n+        }\n+\n+        ClientRequest request = (ClientRequest) allArguments[0];\n+        final ContextCarrier contextCarrier = new ContextCarrier();\n+\n+        URI uri = request.url();\n+        final String requestURIString = getRequestURIString(uri);\n+        final String operationName = requestURIString;\n+        final String remotePeer = getIPAndPort(uri);\n+        AbstractSpan span = ContextManager.createExitSpan(operationName, contextCarrier, remotePeer);\n+\n+        //set componet name\n+        span.setComponent(ComponentsDefine.SPRING_WEBCLIENT);\n+        Tags.URL.set(span, uri.toString());\n+        Tags.HTTP.METHOD.set(span, request.method().toString());\n+        SpanLayer.asHttp(span);\n+\n+        //user async interface\n+        span.prepareForAsync();\n+        ContextManager.stopSpan();\n+\n+        objInst.setSkyWalkingDynamicField(span);\n+\n+        CarrierItem next = contextCarrier.items();\n+        while (next.hasNext()) {\n+            next = next.next();\n+            request.headers().add(next.getHeadKey(), next.getHeadValue());\n+        }\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        Mono<ClientResponse> ret1 = (Mono<ClientResponse>) ret;\n+        AbstractSpan span = (AbstractSpan) objInst.getSkyWalkingDynamicField();\n+        return ret1.doAfterSuccessOrError(new BiConsumer<ClientResponse, Throwable>() {\n+            @Override\n+            public void accept(ClientResponse clientResponse, Throwable throwable) {\n+                HttpStatus httpStatus = clientResponse.statusCode();\n+                if (httpStatus != null) {\n+                    Tags.STATUS_CODE.set(span, Integer.toString(httpStatus.value()));\n+                    if (httpStatus.isError()) {\n+                        span.errorOccurred();\n+                    }\n+                }\n+            }\n+        }).doOnError(error -> {\n+            span.errorOccurred();\n+            span.log(error);", "originalCommit": "8b9095b867b21d0c4f0287effdf660413df9ba3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3MTg1MQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r490671851", "bodyText": "Only pick up some of them to test, testing all versions requires many resources and makes the test slow", "author": "kezhenxu94", "createdAt": "2020-09-18T02:57:58Z", "path": "test/plugin/scenarios/webflux-scenario/support-version.list", "diffHunk": "@@ -23,3 +23,11 @@\n 2.1.5.RELEASE\n 2.1.6.RELEASE\n 2.1.7.RELEASE\n+2.1.8.RELEASE\n+2.1.9.RELEASE\n+2.1.10.RELEASE\n+2.1.11.RELEASE\n+2.1.12.RELEASE\n+2.1.13.RELEASE\n+2.1.14.RELEASE\n+2.1.15.RELEASE", "originalCommit": "8b9095b867b21d0c4f0287effdf660413df9ba3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0MTc0OA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491641748", "bodyText": "ok,I will remove it", "author": "vcjmhg", "createdAt": "2020-09-20T02:04:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3MTg1MQ=="}], "type": "inlineReview"}, {"oid": "25312006edf56d28ca59c9fec6f6d4b5029096cb", "url": "https://github.com/apache/skywalking/commit/25312006edf56d28ca59c9fec6f6d4b5029096cb", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-18T02:58:42Z", "type": "commit"}, {"oid": "6299ee1313a11941a7fba1513f5320e883a43967", "url": "https://github.com/apache/skywalking/commit/6299ee1313a11941a7fba1513f5320e883a43967", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-19T13:53:31Z", "type": "commit"}, {"oid": "4c0282e7c61855408beab498fa7c1508e38eebd2", "url": "https://github.com/apache/skywalking/commit/4c0282e7c61855408beab498fa7c1508e38eebd2", "message": "fix the problem that allArgument[0] may be null", "committedDate": "2020-09-20T01:53:05Z", "type": "commit"}, {"oid": "5fc18652fb9908fba9bcb5631b314221b56640fc", "url": "https://github.com/apache/skywalking/commit/5fc18652fb9908fba9bcb5631b314221b56640fc", "message": "Merge branch 'master' of https://github.com/apache/skywalking into dev\n\n\u0001 Conflicts:\n\u0001\tapm-protocol/apm-network/src/main/java/org/apache/skywalking/apm/network/trace/component/ComponentsDefine.java\n\u0001\toap-server/server-bootstrap/src/main/resources/component-libraries.yml", "committedDate": "2020-09-20T02:12:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0Mjg0Mg==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491642842", "bodyText": "You didn't format the codes, and why/when this could NULL? Is there a real case for this?", "author": "wu-sheng", "createdAt": "2020-09-20T02:21:40Z", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/spring-webflux-5.x-webclient-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/webclient/WebFluxWebClientInterceptor.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.spring.webflux.v5.webclient;\n+\n+import org.apache.skywalking.apm.agent.core.context.CarrierItem;\n+import org.apache.skywalking.apm.agent.core.context.ContextCarrier;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.reactive.function.client.ClientRequest;\n+import org.springframework.web.reactive.function.client.ClientResponse;\n+import reactor.core.publisher.Mono;\n+\n+import java.lang.reflect.Method;\n+import java.net.URI;\n+import java.util.function.BiConsumer;\n+\n+public class WebFluxWebClientInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        if (allArguments[0] == null) {\n+            //illegal args,can't trace ignore\n+            return;\n+        }\n+\n+        ClientRequest request = (ClientRequest) allArguments[0];\n+        final ContextCarrier contextCarrier = new ContextCarrier();\n+\n+        URI uri = request.url();\n+        final String requestURIString = getRequestURIString(uri);\n+        final String operationName = requestURIString;\n+        final String remotePeer = getIPAndPort(uri);\n+        AbstractSpan span = ContextManager.createExitSpan(operationName, contextCarrier, remotePeer);\n+\n+        //set componet name\n+        span.setComponent(ComponentsDefine.SPRING_WEBCLIENT);\n+        Tags.URL.set(span, uri.toString());\n+        Tags.HTTP.METHOD.set(span, request.method().toString());\n+        SpanLayer.asHttp(span);\n+\n+        //user async interface\n+        span.prepareForAsync();\n+        ContextManager.stopSpan();\n+\n+        objInst.setSkyWalkingDynamicField(span);\n+\n+        CarrierItem next = contextCarrier.items();\n+        while (next.hasNext()) {\n+            next = next.next();\n+            request.headers().add(next.getHeadKey(), next.getHeadValue());\n+        }\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        // fix the problem that allArgument[0] may be null\n+        if(allArguments[0] == null){", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0NTMzNA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491645334", "bodyText": "@kezhenxu94 ,sir,can you give a real case ? In most cases,it should not be empty.So before last commit,I use it directly.", "author": "vcjmhg", "createdAt": "2020-09-20T03:00:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0Mjg0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0MzIzNg==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491643236", "bodyText": "What is the difference between this new link and above L45-L47? You seem only to change the target address. Why you do WebClient in another new service rather than doing directly here? I am feeling the new service in the test is not necessary.\nPlease correct me if I am wrong.", "author": "wu-sheng", "createdAt": "2020-09-20T02:27:28Z", "path": "test/plugin/scenarios/webflux-scenario/webflux-projectA-scenario/src/main/java/org/apache/skywalking/apm/testcase/sc/webflux/projectA/controller/TestController.java", "diffHunk": "@@ -43,6 +45,7 @@ public String testcase() throws IOException {\n         visit(\"http://\" + hostBAddress + \"/testcase/route/error\");\n         visit(\"http://\" + hostBAddress + \"/notFound\");\n         visit(\"http://\" + hostBAddress + \"/testcase/annotation/mono/hello\");\n+        visit(\"http://\" + clientHostAddress + \"/testcase/webclient/testGet\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0MzY3OQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491643679", "bodyText": "Sir,The reason why I do WebClient in another new  is that I fear it will appear thread confusion with projectB.", "author": "vcjmhg", "createdAt": "2020-09-20T02:34:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0MzIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0Mzg0MA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491643840", "bodyText": "I mean, you should do WebClient at L48 directly(of course the new method is fine). I just don't think you should do RPCs twice.", "author": "wu-sheng", "createdAt": "2020-09-20T02:36:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0MzIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0NDYxNA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491644614", "bodyText": "You mean I should use WebClient to creat a request rather than visit(),should I?", "author": "vcjmhg", "createdAt": "2020-09-20T02:49:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0MzIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0NDk2NQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491644965", "bodyText": "Yes. This RPC is not necessary", "author": "wu-sheng", "createdAt": "2020-09-20T02:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0MzIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0NTQ1MQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r491645451", "bodyText": "Ok,I will modify it.", "author": "vcjmhg", "createdAt": "2020-09-20T03:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0MzIzNg=="}], "type": "inlineReview"}, {"oid": "5a6c3d45c992c286903076d494939390e29b8005", "url": "https://github.com/apache/skywalking/commit/5a6c3d45c992c286903076d494939390e29b8005", "message": "resolve conflicts", "committedDate": "2020-09-20T04:18:48Z", "type": "commit"}, {"oid": "5a6c3d45c992c286903076d494939390e29b8005", "url": "https://github.com/apache/skywalking/commit/5a6c3d45c992c286903076d494939390e29b8005", "message": "resolve conflicts", "committedDate": "2020-09-20T04:18:48Z", "type": "forcePushed"}, {"oid": "ed4a3026d92d808de0b2f8dee9dbefc7d999b7b9", "url": "https://github.com/apache/skywalking/commit/ed4a3026d92d808de0b2f8dee9dbefc7d999b7b9", "message": "move the test cases of webclient into projectA", "committedDate": "2020-09-20T06:37:57Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "170f497abc2b1194052599bc366b90470531621a", "url": "https://github.com/apache/skywalking/commit/170f497abc2b1194052599bc366b90470531621a", "message": "move the test cases of webclient into projectA", "committedDate": "2020-09-21T14:34:48Z", "type": "forcePushed"}, {"oid": "ba8f38de7266268b2c675ed073788d32c414aad9", "url": "https://github.com/apache/skywalking/commit/ba8f38de7266268b2c675ed073788d32c414aad9", "message": "move the test cases of webclient into projectA", "committedDate": "2020-09-21T16:02:37Z", "type": "commit"}, {"oid": "ba8f38de7266268b2c675ed073788d32c414aad9", "url": "https://github.com/apache/skywalking/commit/ba8f38de7266268b2c675ed073788d32c414aad9", "message": "move the test cases of webclient into projectA", "committedDate": "2020-09-21T16:02:37Z", "type": "forcePushed"}, {"oid": "4f544b02e6e6c23328c103d2f8d835a429b34d04", "url": "https://github.com/apache/skywalking/commit/4f544b02e6e6c23328c103d2f8d835a429b34d04", "message": "modify expectedData.yaml", "committedDate": "2020-09-22T02:43:30Z", "type": "commit"}, {"oid": "873bb622bd9c552c0638e382cd01817d162042ac", "url": "https://github.com/apache/skywalking/commit/873bb622bd9c552c0638e382cd01817d162042ac", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-22T02:48:50Z", "type": "commit"}, {"oid": "31ecad3576de439c7b12fa2fe5fd075713972d06", "url": "https://github.com/apache/skywalking/commit/31ecad3576de439c7b12fa2fe5fd075713972d06", "message": "Merge branch 'master' of github.com:vcjmhg/skywalking into fix-webclient", "committedDate": "2020-09-22T02:49:29Z", "type": "commit"}, {"oid": "e1f0af6a07e983f147b1f6fce24a14024950edfe", "url": "https://github.com/apache/skywalking/commit/e1f0af6a07e983f147b1f6fce24a14024950edfe", "message": "modefy component-libraries.yml", "committedDate": "2020-09-22T03:58:13Z", "type": "commit"}, {"oid": "4096cdc7aeb93dda1a5424c74ef44aa94e24e1cc", "url": "https://github.com/apache/skywalking/commit/4096cdc7aeb93dda1a5424c74ef44aa94e24e1cc", "message": "Merge branch 'dev' of github.com:vcjmhg/skywalking into fix-webclient", "committedDate": "2020-09-22T03:59:24Z", "type": "commit"}, {"oid": "9b29e7b5559b54181dbec03f2b12e5fd9e421a72", "url": "https://github.com/apache/skywalking/commit/9b29e7b5559b54181dbec03f2b12e5fd9e421a72", "message": "modefy component-libraries.yml", "committedDate": "2020-09-22T09:00:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxMDMxMQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r492610311", "bodyText": "A component should not include the version.", "author": "wu-sheng", "createdAt": "2020-09-22T09:52:15Z", "path": "apm-protocol/apm-network/src/main/java/org/apache/skywalking/apm/network/trace/component/ComponentsDefine.java", "diffHunk": "@@ -178,4 +178,6 @@\n     public static final OfficialComponent QUARTZ_SCHEDULER = new OfficialComponent(97, \"quartz-scheduler\");\n \n     public static final OfficialComponent XXL_JOB = new OfficialComponent(98, \"xxl-job\");\n-}\n+\n+    public static final OfficialComponent SPRING_WEBCLIENT = new OfficialComponent(99, \"spring-webflux-5.x-webclient\");", "originalCommit": "9b29e7b5559b54181dbec03f2b12e5fd9e421a72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxMjQ2Mw==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r492612463", "bodyText": "ok,I wiil modefy it after this CI finished.", "author": "vcjmhg", "createdAt": "2020-09-22T09:56:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxMDMxMQ=="}], "type": "inlineReview"}, {"oid": "21568387ef383b7b0cd0830f3eee11f503e47d2a", "url": "https://github.com/apache/skywalking/commit/21568387ef383b7b0cd0830f3eee11f503e47d2a", "message": "modify webclient defined name", "committedDate": "2020-09-22T12:29:20Z", "type": "commit"}, {"oid": "13174a28def4066b4b43eb059f5a963882e51996", "url": "https://github.com/apache/skywalking/commit/13174a28def4066b4b43eb059f5a963882e51996", "message": "Merge branch 'master' of https://github.com/apache/skywalking into fix-webclient", "committedDate": "2020-09-22T12:30:05Z", "type": "commit"}, {"oid": "14d65c661d31531b4854f704f760a62509b2128b", "url": "https://github.com/apache/skywalking/commit/14d65c661d31531b4854f704f760a62509b2128b", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-22T14:09:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgxNzA4OQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r492817089", "bodyText": "Where is the server-side segment with ref to match this?", "author": "wu-sheng", "createdAt": "2020-09-22T15:12:42Z", "path": "test/plugin/scenarios/webflux-scenario/config/expectedData.yaml", "diffHunk": "@@ -321,6 +321,22 @@ segmentItems:\n       - {key: url, value: not null}\n       - {key: http.method, value: GET}\n       skipAnalysis: 'false'\n+    - operationName: /testcase/webclient/server", "originalCommit": "14d65c661d31531b4854f704f760a62509b2128b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgxNzc2OQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r492817769", "bodyText": "This should be traced in the expected data. Please recheck.", "author": "wu-sheng", "createdAt": "2020-09-22T15:13:16Z", "path": "test/plugin/scenarios/webflux-scenario/webflux-projectB-scenario/src/main/java/test/apache/skywalking/apm/testcase/sc/webflux/projectB/controller/TestAnnotationController.java", "diffHunk": "@@ -44,6 +44,11 @@ public String error() {\n         }\n         return \"1\";\n     }\n+    \n+    @RequestMapping(\"/testcase/webclient/server\")", "originalCommit": "14d65c661d31531b4854f704f760a62509b2128b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE0NDU1Mw==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r493144553", "bodyText": "ok,It seems /testcase/webclient/server finished too fast,I will recheck it.", "author": "vcjmhg", "createdAt": "2020-09-23T01:59:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgxNzc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE0NTU1NQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r493145555", "bodyText": "What do you mean finish too fast? I can't find the entry span and segment in your expected data.", "author": "wu-sheng", "createdAt": "2020-09-23T02:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgxNzc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1NzQ0OQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r493657449", "bodyText": "The span of /testcaset finish earlier than /testcase/webclient/server,so I'm not sure if this situation is normal.\n\nFrom the below picture,we can see the oap has received the data which webclient plugin sent,but the data of entry span disappeared.So I infer whether /testcaset finished too fast so that the data of entry span data was not transfered correctly.", "author": "vcjmhg", "createdAt": "2020-09-23T14:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgxNzc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2MTcxNA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r493661714", "bodyText": "OK, this screenshot proved the context propagation works, but, we still need in the plugin test, otherwise, we can't be sure this plugin also works.\nSo, I think the things you mentioned are caused by the complexity of this scenario. It has too many request, so, some parts may be missed when the verification begins.\nHow about setting up a specific tests for webflux-webclient only?", "author": "wu-sheng", "createdAt": "2020-09-23T14:56:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgxNzc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3MzMyOA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r493673328", "bodyText": "ok\uff0csir\uff0cI will try it!", "author": "vcjmhg", "createdAt": "2020-09-23T15:11:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgxNzc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk3MDY5OA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r494970698", "bodyText": "@wu-sheng ,Sir,I have write an extra tests for webflux-webclient,but it seems to have a problem during span transmission.\nFrom below picture,we can see that  the exit span named /projectA/webclient/ping seems has been sent to oap.But in the second picture ,the entry span seems was not connected with the exit span corresponding with it.So could you please tell me some cause of this result ,or This is because  the ref data from entry span is not transmitted correctly ?\n.", "author": "vcjmhg", "createdAt": "2020-09-25T13:00:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgxNzc2OQ=="}], "type": "inlineReview"}, {"oid": "14cee1677b59271971f65683eede646a93e3ef74", "url": "https://github.com/apache/skywalking/commit/14cee1677b59271971f65683eede646a93e3ef74", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-23T02:00:02Z", "type": "commit"}, {"oid": "12a0ba0a11c8ecf2f930c1e5cd79f1e21af4e81d", "url": "https://github.com/apache/skywalking/commit/12a0ba0a11c8ecf2f930c1e5cd79f1e21af4e81d", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-23T14:53:50Z", "type": "commit"}, {"oid": "2efb2632ae6b3ee1e1c664577b1f5717630498a8", "url": "https://github.com/apache/skywalking/commit/2efb2632ae6b3ee1e1c664577b1f5717630498a8", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-24T01:26:21Z", "type": "commit"}, {"oid": "af1637d74b9852fa4cc9b13c5c5dbfe37b7b8f52", "url": "https://github.com/apache/skywalking/commit/af1637d74b9852fa4cc9b13c5c5dbfe37b7b8f52", "message": "Merge branch 'dev' of github.com:vcjmhg/skywalking into dev\n\n\u0001 Conflicts:\n\u0001\ttest/plugin/scenarios/webflux-scenario/support-version.list\n\u0001\ttest/plugin/scenarios/webflux-scenario/webflux-projectA-scenario/src/main/java/org/apache/skywalking/apm/testcase/sc/webflux/projectA/controller/TestController.java", "committedDate": "2020-09-24T01:32:04Z", "type": "commit"}, {"oid": "7e303fb70007b8e20e4547ca064f8d2424400fa1", "url": "https://github.com/apache/skywalking/commit/7e303fb70007b8e20e4547ca064f8d2424400fa1", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-25T12:27:31Z", "type": "commit"}, {"oid": "0ff7731a581d494c650da29e7c0c8addde97c7c4", "url": "https://github.com/apache/skywalking/commit/0ff7731a581d494c650da29e7c0c8addde97c7c4", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-26T04:49:35Z", "type": "commit"}, {"oid": "e206610ef3b12b919fdffe215bc5735bd77153ca", "url": "https://github.com/apache/skywalking/commit/e206610ef3b12b919fdffe215bc5735bd77153ca", "message": "fix the problem that can't send ref data correctly", "committedDate": "2020-09-26T04:52:05Z", "type": "commit"}, {"oid": "3b18be6b90513c62952ea8b8114452483efe2cb3", "url": "https://github.com/apache/skywalking/commit/3b18be6b90513c62952ea8b8114452483efe2cb3", "message": "Merge branch 'dev' of github.com:vcjmhg/skywalking into dev", "committedDate": "2020-09-26T04:52:24Z", "type": "commit"}, {"oid": "3b18be6b90513c62952ea8b8114452483efe2cb3", "url": "https://github.com/apache/skywalking/commit/3b18be6b90513c62952ea8b8114452483efe2cb3", "message": "Merge branch 'dev' of github.com:vcjmhg/skywalking into dev", "committedDate": "2020-09-26T04:52:24Z", "type": "forcePushed"}, {"oid": "4e536b588090279e022a79ae49a8d9c68303ddbe", "url": "https://github.com/apache/skywalking/commit/4e536b588090279e022a79ae49a8d9c68303ddbe", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-26T12:57:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ1NDU2MA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r495454560", "bodyText": "Recently, we are reducing the unnecessary tests, you could run all these locally, but in the upstream CI, we recommend the latest mini version num, 2.1.6 for all 2.1.x.", "author": "wu-sheng", "createdAt": "2020-09-26T12:59:50Z", "path": "test/plugin/scenarios/webflux-scenario/support-version.list", "diffHunk": "@@ -16,5 +16,10 @@\n \n # 2.0.0-2.1.0 are supported, but due to the status code bug(https://github.com/spring-projects/spring-framework/issues/21901)\n # we don\u2019t test them\n-\n+2.1.1.RELEASE\n+2.1.2.RELEASE\n+2.1.3.RELEASE\n+2.1.4.RELEASE\n+2.1.5.RELEASE\n+2.1.6.RELEASE", "originalCommit": "4e536b588090279e022a79ae49a8d9c68303ddbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ1NzUyOQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r495457529", "bodyText": "Need I modify it ? Just like this:\n2.1.6.RELEASE\n2.1.7.RELEASE\n2.1.8.RELEASE\n2.1.9.RELEASE\n2.1.10.RELEASE\n2.1.11.RELEASE\n2.1.12.RELEASE\n2.1.13.RELEASE\n2.1.14.RELEASE\n2.1.15.RELEASE", "author": "vcjmhg", "createdAt": "2020-09-26T13:35:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ1NDU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ2MDk3Mg==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r495460972", "bodyText": "I think just 2.1.15? Do they have big difference?", "author": "wu-sheng", "createdAt": "2020-09-26T14:17:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ1NDU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxMzAxMg==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r495513012", "bodyText": "The differences between 2.1.x versions are mainly bug fixes. It seems that the difference will not affect our test results.But the version has released to 2.3.x and these versions will include new feature additions . So I don't whether we need to add test for different version of 2.x ?\nThe specific differences can be seen in the following link\uff1ahttps://github.com/spring-projects/spring-boot/tags", "author": "vcjmhg", "createdAt": "2020-09-27T01:17:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ1NDU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxMzQ5Mg==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r495513492", "bodyText": "Basically, we recommend using the latest versions of 2.1.x, 2.2.x, and 2.3.x", "author": "wu-sheng", "createdAt": "2020-09-27T01:24:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ1NDU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODkzOA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r495518938", "bodyText": "ok,I got it . I wiil modify it immediately.", "author": "vcjmhg", "createdAt": "2020-09-27T02:40:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ1NDU2MA=="}], "type": "inlineReview"}, {"oid": "2941c689a65cc33d270aea81e5767fa92a6bbb88", "url": "https://github.com/apache/skywalking/commit/2941c689a65cc33d270aea81e5767fa92a6bbb88", "message": "modify the version of test", "committedDate": "2020-09-27T04:23:06Z", "type": "commit"}, {"oid": "4c6aeca07f79b631a156e513fb83710c3d3c717f", "url": "https://github.com/apache/skywalking/commit/4c6aeca07f79b631a156e513fb83710c3d3c717f", "message": "Merge branch 'master' into dev", "committedDate": "2020-09-27T04:23:25Z", "type": "commit"}, {"oid": "3b19c55d5017db57406c2c3434914585342b0f45", "url": "https://github.com/apache/skywalking/commit/3b19c55d5017db57406c2c3434914585342b0f45", "message": "Merge branch 'dev' of github.com:vcjmhg/skywalking into dev", "committedDate": "2020-09-27T04:24:21Z", "type": "commit"}, {"oid": "2cd47d45112200a46c54d7a61ceedc28e8242565", "url": "https://github.com/apache/skywalking/commit/2cd47d45112200a46c54d7a61ceedc28e8242565", "message": "increase the version of netty", "committedDate": "2020-09-27T08:37:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0MzE0OQ==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r495543149", "bodyText": "The version of 2.1x.RELEASE seems has passed ,but 2.2.x failed.It seem context-path has not activated,I will check it.", "author": "vcjmhg", "createdAt": "2020-09-27T07:59:07Z", "path": "test/plugin/scenarios/webflux-scenario/support-version.list", "diffHunk": "@@ -16,5 +16,6 @@\n \n # 2.0.0-2.1.0 are supported, but due to the status code bug(https://github.com/spring-projects/spring-framework/issues/21901)\n # we don\u2019t test them\n-\n-2.1.7.RELEASE\n+2.1.17.RELEASE\n+2.2.10.RELEASE\n+2.3.4.RELEASE", "originalCommit": "3b19c55d5017db57406c2c3434914585342b0f45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0NzU4NA==", "url": "https://github.com/apache/skywalking/pull/5493#discussion_r495547584", "bodyText": "The reason for the failure of the 2.2.10 and 2.3.4 is the change in webflux's dependency on netty after 2.2.x.And I have solved it and the test has passed in my pc.", "author": "vcjmhg", "createdAt": "2020-09-27T08:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0MzE0OQ=="}], "type": "inlineReview"}]}