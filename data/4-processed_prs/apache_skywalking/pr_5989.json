{"pr_number": 5989, "pr_title": "Fix thrift trace broken and wrong arg collected.", "pr_createdAt": "2020-12-10T11:45:05Z", "pr_url": "https://github.com/apache/skywalking/pull/5989", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDExOTQ3MQ==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r540119471", "bodyText": "The variable is visible in the if statement block. So we don't need to move it out of the if statement block.", "author": "dmsolr", "createdAt": "2020-12-10T12:12:53Z", "path": "apm-sniffer/apm-sdk-plugin/thrift-plugin/src/main/java/org/apache/skywalking/apm/plugin/thrift/wrapper/ServerInProtocolWrapper.java", "diffHunk": "@@ -57,10 +64,11 @@ public void initial(AbstractContext context) {\n     @Override\n     public TField readFieldBegin() throws TException {\n         final TField field = super.readFieldBegin();\n+        Map<String, String> header = new HashMap<>(1);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwMTA0OQ==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r542101049", "bodyText": "done", "author": "ZS-Oliver", "createdAt": "2020-12-14T04:17:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDExOTQ3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyMDMwNg==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r540120306", "bodyText": "Would you try to do it without ThreadLocal?", "author": "dmsolr", "createdAt": "2020-12-10T12:14:24Z", "path": "apm-sniffer/apm-sdk-plugin/thrift-plugin/src/main/java/org/apache/skywalking/apm/plugin/thrift/wrapper/ServerInProtocolWrapper.java", "diffHunk": "@@ -81,6 +90,20 @@ public TField readFieldBegin() throws TException {\n             }\n             return readFieldBegin();\n         }\n+        if (field.type == TType.STOP && !HAVE_CREATED.get()) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyMDg1OQ==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r540120859", "bodyText": "I don't recommend to use ThreadLocal here.", "author": "dmsolr", "createdAt": "2020-12-10T12:15:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyMDMwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyOTExMw==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r540129113", "bodyText": "@ZS-Oliver Could you explain why do you need this? Are there many wrapper instances or something?", "author": "wu-sheng", "createdAt": "2020-12-10T12:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyMDMwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUzMDkxNQ==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r541530915", "bodyText": "sorry\uff0cI took leave on Friday and didn't go to work\uff0cI will update on Monday.  happy weekend !", "author": "ZS-Oliver", "createdAt": "2020-12-12T08:21:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyMDMwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwMTA0Mg==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r542101042", "bodyText": "I saw ServerInProtocolWrapper was initialized in TServerInterceptor.onConstruct.\nThe method onConstruct was called when an intercept construction method is called.\nI use ThreadLocal to do the isolation, because I think this behavior will only be invoked once during the enhancement.\nAre there any better way to implement this ?", "author": "ZS-Oliver", "createdAt": "2020-12-14T04:17:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyMDMwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjExNzI2MA==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r542117260", "bodyText": "LGTM, Thanks @ZS-Oliver", "author": "dmsolr", "createdAt": "2020-12-14T05:16:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyMDMwNg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMTI5MQ==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r542431291", "bodyText": "TracingContext has native running context for this case, could you consider to use that? It could be auto cleared when the tracing context finished.", "author": "wu-sheng", "createdAt": "2020-12-14T14:34:50Z", "path": "apm-sniffer/apm-sdk-plugin/thrift-plugin/src/main/java/org/apache/skywalking/apm/plugin/thrift/wrapper/ServerInProtocolWrapper.java", "diffHunk": "@@ -45,6 +45,7 @@\n     private static final ILog LOGGER = LogManager.getLogger(ServerInProtocolWrapper.class);\n     private static final StringTag TAG_ARGS = new StringTag(\"args\");\n     private AbstractContext context;\n+    private static ThreadLocal<Boolean> HAVE_CREATED = ThreadLocal.withInitial(() -> Boolean.FALSE);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE2NzEyNg==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r543167126", "bodyText": "It seems like the life cycle of a TraceContext is exactly one trace. Thinking of such a circumstance that we have A, B, C three services and they are inter-communicated through RPC like A->B->C, with both A and C mounted the Agent while B not. Then, in the above situation, C will start a new trace since the trace from A is stopped at B. Hence, C could not obsever A with the use of TraceContext.", "author": "ZS-Oliver", "createdAt": "2020-12-15T09:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMTI5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg2MTkzOQ==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r545861939", "bodyText": "How is your description relating to what I asked? I am talking about don't your own threadlocal, use the one core provided. Do you misunderstand somehow?", "author": "wu-sheng", "createdAt": "2020-12-18T14:23:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMTI5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk1MTc0Nw==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r545951747", "bodyText": "SkyWalking provides a safe RuntimeContext which is alive during a tracing. So we prefer to use this rather than directly ThreadLocal.\nMore details see ContextManager#getRuntimeContext(), please.", "author": "dmsolr", "createdAt": "2020-12-18T16:38:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMTI5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTM2Nw==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r546559367", "bodyText": "Sorry,  I misunderstand in some aspect.\nThanks for your advice.", "author": "ZS-Oliver", "createdAt": "2020-12-21T07:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMTI5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMjg0MQ==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r542432841", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Fix thrift plugin trace link broken when intermediate service does not mount agent, and collect wrong args when method without parameters.\n          \n          \n            \n            * Fix thrift plugin trace link broken when intermediate service does not mount agent\n          \n          \n            \n            * Fix thrift plugin collects wrong args when the method without parameter.", "author": "wu-sheng", "createdAt": "2020-12-14T14:36:56Z", "path": "CHANGES.md", "diffHunk": "@@ -12,6 +12,7 @@ Release Notes.\n * The operation name of quartz-scheduler plugin, has been changed as the `quartz-scheduler/${className}` format.\n * Fix jdk-http and okhttp-3.x plugin did not overwrite the old trace header.\n * Support collecting logs of log4j, log4j2, and logback in the tracing context with a new `logger-plugin`.\n+* Fix thrift plugin trace link broken when intermediate service does not mount agent, and collect wrong args when method without parameters.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMzIwMg==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r542433202", "bodyText": "2lines of changelog seem more clear. Agree?", "author": "wu-sheng", "createdAt": "2020-12-14T14:37:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMjg0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE2NzE4Nw==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r543167187", "bodyText": "\ud83d\udc4d", "author": "ZS-Oliver", "createdAt": "2020-12-15T09:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMjg0MQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2NzQ3Ng==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r546567476", "bodyText": "I think there is an NPE risk.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        boolean haveCreatedSpan =\n          \n          \n            \n                                (boolean) ContextManager.getRuntimeContext().get(HAVE_CREATED_SPAN);\n          \n          \n            \n                        Boolean haveCreatedSpan =\n          \n          \n            \n                                ContextManager.getRuntimeContext().get(HAVE_CREATED_SPAN);\n          \n      \n    \n    \n  \n\nAnd you should check haveCreatedSpan != null && !haveCreatedSpan, agree?", "author": "wu-sheng", "createdAt": "2020-12-21T08:20:22Z", "path": "apm-sniffer/apm-sdk-plugin/thrift-plugin/src/main/java/org/apache/skywalking/apm/plugin/thrift/wrapper/ServerInProtocolWrapper.java", "diffHunk": "@@ -81,6 +84,24 @@ public TField readFieldBegin() throws TException {\n             }\n             return readFieldBegin();\n         }\n+        if (field.type == TType.STOP) {\n+            boolean haveCreatedSpan =\n+                    (boolean) ContextManager.getRuntimeContext().get(HAVE_CREATED_SPAN);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2ODgwNA==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r546568804", "bodyText": "If this context doesn't exist, then it could not change to boolean.", "author": "wu-sheng", "createdAt": "2020-12-21T08:23:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2NzQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NDgzMA==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r546574830", "bodyText": "I think I forgot to initialize, Otherwise haveCreatedSpan cannot be false.\nI think Object cannot auto cast to Boolean.", "author": "ZS-Oliver", "createdAt": "2020-12-21T08:37:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2NzQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NTgwMw==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r546575803", "bodyText": "I don't say any object. I was saying null casting to Boolean rather than boolean.", "author": "wu-sheng", "createdAt": "2020-12-21T08:39:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2NzQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NzE4OQ==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r546577189", "bodyText": "\ud83d\udc4d , done", "author": "ZS-Oliver", "createdAt": "2020-12-21T08:43:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2NzQ3Ng=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "05d239fe4842ae79012c188d2ffb155f41036df5", "url": "https://github.com/apache/skywalking/commit/05d239fe4842ae79012c188d2ffb155f41036df5", "message": "Fix thrift trace broken and wrong arg collected.", "committedDate": "2020-12-21T08:38:48Z", "type": "commit"}, {"oid": "05d239fe4842ae79012c188d2ffb155f41036df5", "url": "https://github.com/apache/skywalking/commit/05d239fe4842ae79012c188d2ffb155f41036df5", "message": "Fix thrift trace broken and wrong arg collected.", "committedDate": "2020-12-21T08:38:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5MTQ3Ng==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r546591476", "bodyText": "This is still an NPE risk. Take a look at my previous comment. If you are using Boolean, you need to haveCreatedSpan != null && first.\nIf you are not familiar with auto-unboxing in Java, take a look at this, https://stackoverflow.com/questions/55100449/unexpected-nullpointerexception-while-autoboxing-unboxing-java-long-type-as-re", "author": "wu-sheng", "createdAt": "2020-12-21T09:14:20Z", "path": "apm-sniffer/apm-sdk-plugin/thrift-plugin/src/main/java/org/apache/skywalking/apm/plugin/thrift/wrapper/ServerInProtocolWrapper.java", "diffHunk": "@@ -81,6 +85,24 @@ public TField readFieldBegin() throws TException {\n             }\n             return readFieldBegin();\n         }\n+        if (field.type == TType.STOP) {\n+            Boolean haveCreatedSpan =\n+                    (Boolean) ContextManager.getRuntimeContext().get(HAVE_CREATED_SPAN);\n+            if (!haveCreatedSpan) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMTg3OQ==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r546621879", "bodyText": "I think I've initialize \"haveCreatedSpan\" in initial(), so it would't be NPE.\nBut It is necessary to add a precaution. Good advice.", "author": "ZS-Oliver", "createdAt": "2020-12-21T10:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5MTQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY3MzkzNA==", "url": "https://github.com/apache/skywalking/pull/5989#discussion_r546673934", "bodyText": "Yes, just be preciseness. :)", "author": "wu-sheng", "createdAt": "2020-12-21T12:15:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5MTQ3Ng=="}], "type": "inlineReview"}, {"oid": "4d734d05f7c920667fa1bd3addccbadc00ce91a0", "url": "https://github.com/apache/skywalking/commit/4d734d05f7c920667fa1bd3addccbadc00ce91a0", "message": "Merge branch 'master' into fix_thrift", "committedDate": "2020-12-21T10:16:40Z", "type": "commit"}, {"oid": "4d734d05f7c920667fa1bd3addccbadc00ce91a0", "url": "https://github.com/apache/skywalking/commit/4d734d05f7c920667fa1bd3addccbadc00ce91a0", "message": "Merge branch 'master' into fix_thrift", "committedDate": "2020-12-21T10:16:40Z", "type": "forcePushed"}]}