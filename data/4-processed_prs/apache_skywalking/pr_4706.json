{"pr_number": 4706, "pr_title": "Modification Plugin-test.md", "pr_createdAt": "2020-04-24T12:01:59Z", "pr_url": "https://github.com/apache/skywalking/pull/4706", "timeline": [{"oid": "8dbfd678f1fdc7def1a91faa8282a28510ac5977", "url": "https://github.com/apache/skywalking/commit/8dbfd678f1fdc7def1a91faa8282a28510ac5977", "message": "modification doc", "committedDate": "2020-04-24T12:00:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNzQ5NQ==", "url": "https://github.com/apache/skywalking/pull/4706#discussion_r414527495", "bodyText": "What do you mean verb? HTTP Method?", "author": "wu-sheng", "createdAt": "2020-04-24T12:12:04Z", "path": "docs/en/guides/Plugin-test.md", "diffHunk": "@@ -101,8 +101,8 @@ File Name | Descriptions\n | Field | description\n | --- | ---\n | type | Image type, options, `jvm` or `tomcat`. Required.\n-| entryService | The entrance endpoint(URL) for test case access. Required.\n-| healthCheck | The health check endpoint(URL) for test case access. Required.\n+| entryService | The entrance endpoint(URL) for test case access. Required. (Verb: GET)", "originalCommit": "8dbfd678f1fdc7def1a91faa8282a28510ac5977", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "68beb692110e2ff61d29279fd24a3851de27aea8", "url": "https://github.com/apache/skywalking/commit/68beb692110e2ff61d29279fd24a3851de27aea8", "message": "modification doc", "committedDate": "2020-04-24T14:08:37Z", "type": "commit"}, {"oid": "5837dff9b90166bfaa5dcb64e5da20a35047d24e", "url": "https://github.com/apache/skywalking/commit/5837dff9b90166bfaa5dcb64e5da20a35047d24e", "message": "Merge branch 'master' into fix-doc", "committedDate": "2020-04-24T15:34:21Z", "type": "commit"}, {"oid": "7dd88643cd02460be4236694c7fb026c0dc99cf5", "url": "https://github.com/apache/skywalking/commit/7dd88643cd02460be4236694c7fb026c0dc99cf5", "message": "Merge branch 'master' into fix-doc", "committedDate": "2020-04-25T01:32:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk4MDEyNQ==", "url": "https://github.com/apache/skywalking/pull/4706#discussion_r414980125", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | refType | Ref type, options, CrossProcess or CrossThread .\n          \n          \n            \n            | refType | Ref type, options, CrossProcess or CrossThread.", "author": "BFergerson", "createdAt": "2020-04-25T04:57:01Z", "path": "docs/en/guides/Plugin-test.md", "diffHunk": "@@ -275,51 +251,47 @@ segments:\n     - {key: LOG_KEY(string), value: LOG_VALUE(string)}\n     ...\n     peer: PEER(string)\n-    peerId: PEER_ID(int)\n     refs:\n     - {\n-       parentSpanId: PARENT_SPAN_ID(int),\n+       traceId: TRACE_ID(string),\n        parentTraceSegmentId: PARENT_TRACE_SEGMENT_ID(string),\n-       entryServiceInstanceId: ENTRY_SERVICE_INSTANCE_ID(int)\n-       parentServiceInstanceId: PARENT_SERVICE_INSTANCE_ID(int),\n-       networkAddress: NETWORK_ADDRESS(string),\n-       networkAddressId: NETWORK_ADDRESS_ID(int),\n+       parentSpanId: PARENT_SPAN_ID(int),\n+       parentService: PARENT_SERVICE(string),\n+       parentServiceInstance: PARENT_SERVICE_INSTANCE(string),\n        parentEndpoint: PARENT_ENDPOINT_NAME(string),\n-       parentEndpointId: PARENT_ENDPOINT_ID(int),\n-       entryEndpoint: ENTRY_ENDPOINT_NAME(string),\n-       entryServiceInstanceId: ENTRY_ENDPOINT_ID(int),\n+       networkAddress: NETWORK_ADDRESS(string),\n+       refType:  REF_TYPE(string: CrossProcess, CrossThread)\n      }\n    ...\n ```\n \n | Field | Description \n |--- |--- \n-| operationName | Span Operation Name \n-| operationId | Should be 0 for now \n+| operationName | Span Operation Name.\n | parentSpanId | Parent span id. **Notice**: The parent span id of the first span should be -1. \n | spanId | Span Id. **Notice**, start from 0. \n | startTime | Span start time. It is impossible to get the accurate time, not 0 should be enough.\n | endTime | Span finish time. It is impossible to get the accurate time, not 0 should be enough.\n | isError | Span status, true or false. \n-| componentName | Component name, should be null in most cases, use component id instead.\n | componentId | Component id for your plugin. \n | tags | Span tag list. **Notice**, Keep in the same order as the plugin coded.\n | logs | Span log list. **Notice**, Keep in the same order as the plugin coded.\n-| SpanLayer | Options, DB, RPC_FRAMEWORK, HTTP, MQ, CACHE \n-| SpanType | Span type, options, Exit, Entry or Local \n+| SpanLayer | Options, DB, RPC_FRAMEWORK, HTTP, MQ, CACHE.\n+| SpanType | Span type, options, Exit, Entry or Local.\n | peer | Remote network address, IP + port mostly. For exit span, this should be required. \n-| peerId | Not 0 for now.\n \n-\n-The verify description for SegmentRef,\n+The verify description for SegmentRef\n \n | Field | Description \n |---- |---- \n+| traceId | \n+| parentTraceSegmentId | Parent SegmentId, pointing to the segment id in the parent segment.\n | parentSpanId | Parent SpanID, pointing to the span id in the parent segment.\n-| entryServiceInstanceId/parentServiceInstanceId | Not 0 should be enough\n-| networkAddress/networkAddressId | The peer value of parent exit span. `networkAddressId` should be 0, as the mock tool doesn't do register for real.\n-| parentEndpoint/parentEndpointId | The endpoint of parent/downstream service. Usually set `parentEndpoint` as literal string name, unless there is no parent endpoint, set `parentEndpointId` as -1.\n-| entryEndpoint/entryServiceInstanceId | The endpoint of first service in the distributed chain. Usually set `entryEndpoint` as literal string name, unless there is no endpoint at the entry service, set `entryServiceInstanceId` as -1.\n+| parentService | The service of parent/downstream service name.\n+| parentServiceInstance | The instance of parent/downstream service instance name.\n+| parentEndpoint |  The endpoint of parent/downstream service.\n+| networkAddress | The peer value of parent exit span.\n+| refType | Ref type, options, CrossProcess or CrossThread .", "originalCommit": "7dd88643cd02460be4236694c7fb026c0dc99cf5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "419554b2532ab598394ebee0b2ab92cde7ee0e3d", "url": "https://github.com/apache/skywalking/commit/419554b2532ab598394ebee0b2ab92cde7ee0e3d", "message": "Update docs/en/guides/Plugin-test.md", "committedDate": "2020-04-25T04:57:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk4MDMwOQ==", "url": "https://github.com/apache/skywalking/pull/4706#discussion_r414980309", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Expected data file, `expectedData.yaml`, include `SegmentIntems`.\n          \n          \n            \n            Expected data file, `expectedData.yaml`, include `SegmentItems`.", "author": "BFergerson", "createdAt": "2020-04-25T04:58:24Z", "path": "docs/en/guides/Plugin-test.md", "diffHunk": "@@ -407,7 +379,7 @@ and don't include the segments of heartbeat service in the expected segment data\n \n ### The example Process of Writing Expected Data\n \n-Expected data file, `expectedData.yaml`, includes `RegistryItems` and `SegmentIntems`.\n+Expected data file, `expectedData.yaml`, include `SegmentIntems`.", "originalCommit": "419554b2532ab598394ebee0b2ab92cde7ee0e3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5b2b5980cdc8d0b2b0c7724a7482b5b1fab0cd0e", "url": "https://github.com/apache/skywalking/commit/5b2b5980cdc8d0b2b0c7724a7482b5b1fab0cd0e", "message": "Update docs/en/guides/Plugin-test.md", "committedDate": "2020-04-25T04:58:29Z", "type": "commit"}]}