{"pr_number": 5030, "pr_title": "support Graphql Logic endpoint", "pr_createdAt": "2020-07-04T11:06:01Z", "pr_url": "https://github.com/apache/skywalking/pull/5030", "timeline": [{"oid": "ec3328a78c87010def1a0e2f1fd6595496f0b7e5", "url": "https://github.com/apache/skywalking/commit/ec3328a78c87010def1a0e2f1fd6595496f0b7e5", "message": "Merge pull request #1 from apache/master\n\nmerge", "committedDate": "2020-06-29T16:08:46Z", "type": "commit"}, {"oid": "1217cf6e95e5119ac194f90cf6de8f22e5d11972", "url": "https://github.com/apache/skywalking/commit/1217cf6e95e5119ac194f90cf6de8f22e5d11972", "message": "init graphql logic_endpoint", "committedDate": "2020-06-29T16:16:58Z", "type": "commit"}, {"oid": "d932adc77b161a069b6d16abeebc0353cd7b7ebd", "url": "https://github.com/apache/skywalking/commit/d932adc77b161a069b6d16abeebc0353cd7b7ebd", "message": "#4976", "committedDate": "2020-06-30T03:27:49Z", "type": "commit"}, {"oid": "63960e33e91cb22a65c8a33c203133b7ca3842b6", "url": "https://github.com/apache/skywalking/commit/63960e33e91cb22a65c8a33c203133b7ca3842b6", "message": "add testcase #4996", "committedDate": "2020-07-01T02:31:24Z", "type": "commit"}, {"oid": "7ab2d3adf91f6e2a103b4102d32b122d870b7aaa", "url": "https://github.com/apache/skywalking/commit/7ab2d3adf91f6e2a103b4102d32b122d870b7aaa", "message": "add graphql 12", "committedDate": "2020-07-02T15:05:10Z", "type": "commit"}, {"oid": "dc798e47bc37d7b6a3b875720874e021034a4693", "url": "https://github.com/apache/skywalking/commit/dc798e47bc37d7b6a3b875720874e021034a4693", "message": "support graphql 8.0", "committedDate": "2020-07-04T10:53:15Z", "type": "commit"}, {"oid": "fa9a2fc47374fd6dcf2de5d63a1574d5d2570e2e", "url": "https://github.com/apache/skywalking/commit/fa9a2fc47374fd6dcf2de5d63a1574d5d2570e2e", "message": "add doc", "committedDate": "2020-07-04T10:57:05Z", "type": "commit"}, {"oid": "dadffff91a48edbc7a9c10a22882a8c82e21d211", "url": "https://github.com/apache/skywalking/commit/dadffff91a48edbc7a9c10a22882a8c82e21d211", "message": "Merge branch 'master' into logic_endpoint", "committedDate": "2020-07-04T11:07:13Z", "type": "commit"}, {"oid": "60cf903b16bf0251193b59ccc9f31a7dcd82f965", "url": "https://github.com/apache/skywalking/commit/60cf903b16bf0251193b59ccc9f31a7dcd82f965", "message": "fix", "committedDate": "2020-07-04T11:10:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2Njg3MA==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449766870", "bodyText": "How a GraphQL span could not be the first span? Or not an entry span? A little confused.", "author": "wu-sheng", "createdAt": "2020-07-04T11:53:48Z", "path": "apm-sniffer/apm-sdk-plugin/graphql-plugin/graphql-12.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/graphql/v12/GraphqlInterceptor.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.graphql.v12;\n+\n+import graphql.execution.ExecutionPath;\n+import graphql.execution.ExecutionStrategyParameters;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class GraphqlInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        objInst.setSkyWalkingDynamicField(System.currentTimeMillis());\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return ret;\n+        }\n+        String name = parameters.getField().getSingleField().getName();\n+        long latency = System.currentTimeMillis() - (long) objInst.getSkyWalkingDynamicField();\n+        String info = buildLogicEndpointTagInfo(name, latency, null);\n+        AbstractSpan span = ContextManager.firstSpan();\n+        if (span == null || !span.isEntry()) {", "originalCommit": "60cf903b16bf0251193b59ccc9f31a7dcd82f965", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg0NDMyOA==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449844328", "bodyText": "i've used a localSpan to represent a Grqphql subquery", "author": "IanCao", "createdAt": "2020-07-05T07:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2Njg3MA=="}], "type": "inlineReview"}, {"oid": "2b4f7a47b33575548f1f283a9c2ce79513bdcd6b", "url": "https://github.com/apache/skywalking/commit/2b4f7a47b33575548f1f283a9c2ce79513bdcd6b", "message": "add license", "committedDate": "2020-07-04T15:23:42Z", "type": "commit"}, {"oid": "e3e961928ecac5e3dc3f1d7071467e6076128df3", "url": "https://github.com/apache/skywalking/commit/e3e961928ecac5e3dc3f1d7071467e6076128df3", "message": "fix", "committedDate": "2020-07-04T17:13:57Z", "type": "commit"}, {"oid": "e58e8f64a37354bec48cd21f3a04fed54f933650", "url": "https://github.com/apache/skywalking/commit/e58e8f64a37354bec48cd21f3a04fed54f933650", "message": "remove author & comments", "committedDate": "2020-07-05T04:39:36Z", "type": "commit"}, {"oid": "f0fccf0d54217f99bd025530e3019306894244cd", "url": "https://github.com/apache/skywalking/commit/f0fccf0d54217f99bd025530e3019306894244cd", "message": "fix", "committedDate": "2020-07-05T07:09:44Z", "type": "commit"}, {"oid": "a7e4a55c0c35e5a88f496cc8ec96a5c6c7787815", "url": "https://github.com/apache/skywalking/commit/a7e4a55c0c35e5a88f496cc8ec96a5c6c7787815", "message": "fix", "committedDate": "2020-07-05T07:11:35Z", "type": "commit"}, {"oid": "0b111ce2f44d2c600ef54778d775fe510e0c8fae", "url": "https://github.com/apache/skywalking/commit/0b111ce2f44d2c600ef54778d775fe510e0c8fae", "message": "fix", "committedDate": "2020-07-05T07:13:20Z", "type": "commit"}, {"oid": "c6d723876a631b1ee07d5fa523e83bad0be5c1fc", "url": "https://github.com/apache/skywalking/commit/c6d723876a631b1ee07d5fa523e83bad0be5c1fc", "message": "fix", "committedDate": "2020-07-05T10:38:58Z", "type": "commit"}, {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0", "url": "https://github.com/apache/skywalking/commit/4b9c8774f0d5302f0c35be12361be76f33f956d0", "message": "Merge branch 'master' into logic_endpoint", "committedDate": "2020-07-05T12:57:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NDkzNA==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449874934", "bodyText": "Why need this?", "author": "wu-sheng", "createdAt": "2020-07-05T13:00:22Z", "path": "test/plugin/scenarios/graphql-12.x-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,126 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>graphql-12.x-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>jar</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-graphql-12.x-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>\n+        <test.framework.version>9.0</test.framework.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <test.framework>graphql</test.framework>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring.boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.graphql-java</groupId>\n+            <artifactId>graphql-java</artifactId>\n+            <version>${test.framework.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>graphql-12.x-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>assemble</id>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>single</goal>\n+                        </goals>\n+                        <configuration>\n+                            <descriptors>\n+                                <descriptor>src/main/assembly/assembly.xml</descriptor>\n+                            </descriptors>\n+                            <outputDirectory>./target/</outputDirectory>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>", "originalCommit": "4b9c8774f0d5302f0c35be12361be76f33f956d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTA5OQ==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449875099", "bodyText": "Same here.", "author": "wu-sheng", "createdAt": "2020-07-05T13:01:32Z", "path": "test/plugin/scenarios/graphql-8.x-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>graphql-8.x-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>jar</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-graphql-8.x-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>\n+        <test.framework.version>8.0</test.framework.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <test.framework>graphql</test.framework>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring.boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.graphql-java</groupId>\n+            <artifactId>graphql-java</artifactId>\n+            <version>${test.framework.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>graphql-8.x-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>assemble</id>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>single</goal>\n+                        </goals>\n+                        <configuration>\n+                            <descriptors>\n+                                <descriptor>src/main/assembly/assembly.xml</descriptor>\n+                            </descriptors>\n+                            <outputDirectory>./target/</outputDirectory>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>", "originalCommit": "4b9c8774f0d5302f0c35be12361be76f33f956d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTM4Mw==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449875383", "bodyText": "Same here.", "author": "wu-sheng", "createdAt": "2020-07-05T13:03:21Z", "path": "test/plugin/scenarios/graphql-9.x-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>graphql-9.x-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>jar</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-graphql-9.x-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>\n+        <test.framework.version>9.0</test.framework.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <test.framework>graphql</test.framework>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring.boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.graphql-java</groupId>\n+            <artifactId>graphql-java</artifactId>\n+            <version>${test.framework.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>graphql-9.x-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>assemble</id>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>single</goal>\n+                        </goals>\n+                        <configuration>\n+                            <descriptors>\n+                                <descriptor>src/main/assembly/assembly.xml</descriptor>\n+                            </descriptors>\n+                            <outputDirectory>./target/</outputDirectory>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>", "originalCommit": "4b9c8774f0d5302f0c35be12361be76f33f956d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0de7beaed58fef4eeb52327ab50152792ea86b32", "url": "https://github.com/apache/skywalking/commit/0de7beaed58fef4eeb52327ab50152792ea86b32", "message": "Merge branch 'master' into logic_endpoint", "committedDate": "2020-07-05T14:25:14Z", "type": "commit"}, {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395", "url": "https://github.com/apache/skywalking/commit/f9945e30474ba1375a6488e4e965fb68b1024395", "message": "fix", "committedDate": "2020-07-05T14:48:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451256030", "bodyText": "Such kind of tags are not processable by the backend, according to the doc\n\nThe value of x-le should be JSON format\n\n@IanCao  did you check this plugin with the backend in a whole? FYI @wu-sheng", "author": "kezhenxu94", "createdAt": "2020-07-08T03:07:16Z", "path": "test/plugin/scenarios/graphql-9.x-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+- serviceName: graphql-9.x-scenario\n+  segmentSize: gt 1\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: user\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: Unknown\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 92\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      skipAnalysis: false\n+      tags:\n+      - {key: x-le, value: '{logic-span=true}'}", "originalCommit": "f9945e30474ba1375a6488e4e965fb68b1024395", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1OTQ1MQ==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451259451", "bodyText": "Why not? I added this new feature :) It is here\nhttps://github.com/apache/skywalking/blob/310b8857b2266768ccd9e1338da13c86c313ed3f/docs/en/guides/Java-Plugin-Development-Guide.md#extension-logic-endpoint-tag-key-x-le", "author": "wu-sheng", "createdAt": "2020-07-08T03:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2NDc3NQ==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451264775", "bodyText": "I mean {logic-span=true} is not JSON format, did you process this kind of format @wu-sheng ? I mean the =, it's not JSON format", "author": "kezhenxu94", "createdAt": "2020-07-08T03:42:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2NTI5OQ==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451265299", "bodyText": "@wu-sheng do you mean this, I didn't see any clue that the map format {logic-span=true} is also supported", "author": "kezhenxu94", "createdAt": "2020-07-08T03:44:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2OTQ2MA==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451269460", "bodyText": "Oh, I see, I didn't check that part.", "author": "wu-sheng", "createdAt": "2020-07-08T04:02:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjMxNg==", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451256316", "bodyText": "The value of x-le should be JSON format, this is obviously not the case by simply calling toString on a Map", "author": "kezhenxu94", "createdAt": "2020-07-08T03:08:21Z", "path": "apm-sniffer/apm-sdk-plugin/graphql-plugin/graphql-9.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/graphql/v9/GraphqlInterceptor.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.graphql.v9;\n+\n+import graphql.execution.ExecutionPath;\n+import graphql.execution.ExecutionStrategyParameters;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class GraphqlInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        AbstractSpan span = ContextManager.createLocalSpan(parameters.getField().get(0).getName());\n+        Tags.LOGIC_ENDPOINT.set(span, buildLogicEndpointSpan());\n+        span.setComponent(ComponentsDefine.GRAPHQL);\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return ret;\n+        }\n+        ContextManager.stopSpan();\n+        return ret;\n+    }\n+\n+    @Override\n+    public void handleMethodException(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Throwable t) {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        dealException(t);\n+    }\n+\n+    private void dealException(Throwable throwable) {\n+        AbstractSpan span = ContextManager.activeSpan();\n+        span.errorOccurred();\n+        span.log(throwable);\n+    }\n+\n+    private String buildLogicEndpointSpan() {\n+        Map<String, Object> logicEndpointSpan = new HashMap<>();\n+        logicEndpointSpan.put(\"logic-span\", true);\n+        return logicEndpointSpan.toString();", "originalCommit": "f9945e30474ba1375a6488e4e965fb68b1024395", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}