{"pr_number": 5660, "pr_title": "Fix Kafka sender blocks main thread", "pr_createdAt": "2020-10-13T15:39:40Z", "pr_url": "https://github.com/apache/skywalking/pull/5660", "timeline": [{"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8", "url": "https://github.com/apache/skywalking/commit/ec040b81e1e4d65870e69688e5de7b2c72f4f9e8", "message": "Introduct DataCarrier to avoid service blocked", "committedDate": "2020-10-13T15:32:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NDU2Mw==", "url": "https://github.com/apache/skywalking/pull/5660#discussion_r504094563", "bodyText": "FutureReturnValueIgnored:  Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.", "author": "sonatype-lift", "createdAt": "2020-10-13T16:30:47Z", "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentServiceClient.java", "diffHunk": "@@ -60,6 +74,39 @@ public void onComplete() {\n     @Override\n     public void shutdown() {\n         TracingContext.ListenerManager.remove(this);\n+        carrier.shutdownConsumers();\n+    }\n+\n+    @Override\n+    public void init() {\n+\n+    }\n+\n+    @Override\n+    public void consume(final List<TraceSegment> data) {\n+        data.forEach(traceSegment -> {\n+            SegmentObject upstreamSegment = traceSegment.transform();\n+            ProducerRecord<String, Bytes> record = new ProducerRecord<>(\n+                topic,\n+                upstreamSegment.getTraceSegmentId(),\n+                Bytes.wrap(upstreamSegment.toByteArray())\n+            );\n+            producer.send(record, (m, e) -> {", "originalCommit": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0NjE3MA==", "url": "https://github.com/apache/skywalking/pull/5660#discussion_r504346170", "bodyText": "previous version is better\uff1f\n    @Override\n    public void afterFinished(TraceSegment traceSegment) {\n        if (traceSegment.isIgnore()) {\n            LOGGER.debug(\"Trace[TraceId={}] is ignored.\", traceSegment.getTraceSegmentId());\n            return;\n        }\n        if (!carrier.produce(traceSegment)) {\n            if (LOGGER.isDebugEnable()) {\n                LOGGER.debug(\"One trace segment has been abandoned, cause by buffer is full.\");\n            }\n        }\n    }", "author": "nileblack", "createdAt": "2020-10-14T01:21:42Z", "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentServiceClient.java", "diffHunk": "@@ -72,13 +119,7 @@ public void afterFinished(final TraceSegment traceSegment) {\n             LOGGER.debug(\"Trace[TraceId={}] is ignored.\", traceSegment.getTraceSegmentId());", "originalCommit": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0OTk2Nw==", "url": "https://github.com/apache/skywalking/pull/5660#discussion_r504349967", "bodyText": "@nileblack If you want to enhance more, we are welcome you to submit pull request.", "author": "wu-sheng", "createdAt": "2020-10-14T01:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0NjE3MA=="}], "type": "inlineReview"}]}