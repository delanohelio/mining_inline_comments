{"pr_number": 1568, "pr_title": "Update README.md", "pr_createdAt": "2020-11-05T22:04:51Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1568", "timeline": [{"oid": "492f9c18157f96bbbbe47b885dcaf0997515df05", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/492f9c18157f96bbbbe47b885dcaf0997515df05", "message": "Update README.md\n\nBasic formatting and wording enhancements for readability and accessibility.", "committedDate": "2020-11-05T22:03:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0OTA2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1568#discussion_r518549065", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A simple wrapper for the Zipkin exporter of opentelemetry-java. It posts JSON in [Zipkin format](https://zipkin.io/zipkin-api/#/default/post_spans) to a specified HTTP URL.\n          \n          \n            \n            A simple wrapper for the Zipkin exporter of opentelemetry-java. It sends JSON in [Zipkin format](https://zipkin.io/zipkin-api/#/default/post_spans) to a specified HTTP URL.", "author": "trask", "createdAt": "2020-11-06T06:34:31Z", "path": "README.md", "diffHunk": "@@ -83,137 +83,135 @@ java -javaagent:path/to/opentelemetry-javaagent-all.jar \\\n \n Note: These parameter names are very likely to change over time, so please check\n back here when trying out a new version! Please report any bugs or unexpected\n-behavior you may find.\n+behavior you find.\n \n #### Exporters\n \n The following configuration properties are common to all exporters:\n \n | System property | Environment variable | Purpose                                                                                                                                                 |\n |-----------------|----------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|\n-| otel.exporter   | OTEL_EXPORTER        | Exporter to be used, can be a comma-separated list to use multiple exporters. Currently does not support multiple metric exporters. Defaults to `otlp`. |\n+| otel.exporter   | OTEL_EXPORTER        | The exporter to be used. Use a comma-separated list for multiple exporters. Currently does not support multiple metric exporters. Default is `otlp`. |\n \n ##### OTLP exporter (both span and metric exporters)\n \n-A simple wrapper for the OTLP span and metric exporters of opentelemetry-java.\n+A simple wrapper for the OpenTelemetry Protocol (OTLP) span and metric exporters of opentelemetry-java.\n \n-| System property              | Environment variable        | Purpose                                                               |\n-|------------------------------|-----------------------------|-----------------------------------------------------------------------|\n-| otel.exporter=otlp (default) | OTEL_EXPORTER=otlp          | To select OpenTelemetry exporter (default)                            |\n-| otel.exporter.otlp.endpoint  | OTEL_EXPORTER_OTLP_ENDPOINT | The OTLP endpoint to connect to, default is \"localhost:55680\"         |\n-| otel.exporter.otlp.insecure  | OTEL_EXPORTER_OTLP_INSECURE | Whether to enable client transport security for the connection        |\n-| otel.exporter.otlp.headers   | OTEL_EXPORTER_OTLP_HEADERS  | The key-value pairs separated by semicolon to pass as request headers |\n-| otel.exporter.otlp.timeout   | OTEL_EXPORTER_OTLP_TIMEOUT  | The max waiting time allowed to send each batch, default is 1000      |\n+| System property              | Environment variable        | Description                                                               |\n+|------------------------------|-----------------------------|---------------------------------------------------------------------------|\n+| otel.exporter=otlp (default) | OTEL_EXPORTER=otlp          | Select the OpenTelemetry exporter (default)                                   |\n+| otel.exporter.otlp.endpoint  | OTEL_EXPORTER_OTLP_ENDPOINT | The OTLP endpoint to connect to. Default is `localhost:55680`.            |\n+| otel.exporter.otlp.insecure  | OTEL_EXPORTER_OTLP_INSECURE | Whether to enable client transport security for the connection            |\n+| otel.exporter.otlp.headers   | OTEL_EXPORTER_OTLP_HEADERS  | Key-value pairs separated by semicolons to pass as request headers        |\n+| otel.exporter.otlp.timeout   | OTEL_EXPORTER_OTLP_TIMEOUT  | The maximum waiting time allowed to send each batch. Default is `1000`.   |\n \n-In order to configure the service name for the OTLP exporter, you must add `service.name` key\n+To configure the service name for the OTLP exporter, add the `service.name` key\n to the OpenTelemetry Resource ([see below](#opentelemetry-resource)), e.g. `OTEL_RESOURCE_ATTRIBUTES=service.name=myservice`.\n \n ##### Jaeger exporter\n \n-A simple wrapper for the Jaeger exporter of opentelemetry-java. It currently\n-only supports gRPC as its communications protocol.\n+A simple wrapper for the Jaeger exporter of opentelemetry-java. gRPC is currently the only supported communications protocol.\n \n-| System property                   | Environment variable              | Purpose                                                                                            |\n+| System property                   | Environment variable              | Description                                                                                            |\n |-----------------------------------|-----------------------------------|----------------------------------------------------------------------------------------------------|\n-| otel.exporter=jaeger              | OTEL_EXPORTER=jaeger              | To select Jaeger exporter                                                                          |\n-| otel.exporter.jaeger.endpoint     | OTEL_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to, default is \"localhost:14250\", currently only gRPC is supported. |\n-| otel.exporter.jaeger.service.name | OTEL_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance, default is \"unknown\".                                       |\n+| otel.exporter=jaeger              | OTEL_EXPORTER=jaeger              | Select the Jaeger exporter                                                                          |\n+| otel.exporter.jaeger.endpoint     | OTEL_EXPORTER_JAEGER_ENDPOINT     | The Jaeger endpoint to connect to. Default is `localhost:14250`. Currently only gRPC is supported. |\n+| otel.exporter.jaeger.service.name | OTEL_EXPORTER_JAEGER_SERVICE_NAME | The service name of this JVM instance. Default is `unknown`.                                       |\n \n ##### Zipkin exporter\n-A simple wrapper for the Zipkin exporter of opentelemetry-java. It POSTs json in [Zipkin format](https://zipkin.io/zipkin-api/#/default/post_spans) to a specified HTTP URL.\n+A simple wrapper for the Zipkin exporter of opentelemetry-java. It posts JSON in [Zipkin format](https://zipkin.io/zipkin-api/#/default/post_spans) to a specified HTTP URL.", "originalCommit": "492f9c18157f96bbbbe47b885dcaf0997515df05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "29cdb1d175ba45fe0b5e6408982b3530c5abe830", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/29cdb1d175ba45fe0b5e6408982b3530c5abe830", "message": "Update README.md\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>", "committedDate": "2020-11-06T18:18:06Z", "type": "commit"}, {"oid": "75c0827e88e1644e3eb48002a4a0cd3b959f4986", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/75c0827e88e1644e3eb48002a4a0cd3b959f4986", "message": "Run ./gradlew spotlessApply", "committedDate": "2020-11-06T21:11:57Z", "type": "commit"}]}