{"pr_number": 876, "pr_title": "Use assertJ in tests", "pr_createdAt": "2020-08-03T03:15:40Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876", "timeline": [{"oid": "1634b3ac95f394f1fe5787b843065a8463fbaaa6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1634b3ac95f394f1fe5787b843065a8463fbaaa6", "message": "use assertj in tests", "committedDate": "2020-08-03T03:14:10Z", "type": "commit"}, {"oid": "bc5d68ef9e3334dbec0e669ca572ea4592d11d97", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bc5d68ef9e3334dbec0e669ca572ea4592d11d97", "message": "change method access to package private", "committedDate": "2020-08-03T03:22:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4MDUzMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876#discussion_r464280531", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          assertThat(context.containsBean(\"customTestTracer\")).isEqualTo(true);\n          \n          \n            \n                          assertThat(context.containsBean(\"customTestTracer\")).isTrue();", "author": "anuraaga", "createdAt": "2020-08-03T08:54:03Z", "path": "instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java", "diffHunk": "@@ -41,45 +40,39 @@ public Tracer customTestTracer() {\n   private final ApplicationContextRunner contextRunner = new ApplicationContextRunner();\n \n   @Test\n-  public void should_NOT_initalize_otelTracer_if_tracer_bean_exists() {\n+  @DisplayName(\"when Application Context contains Tracer bean should NOT initalize otelTracer\")\n+  void customTracer() {\n     this.contextRunner\n         .withUserConfiguration(CustomTracerConfiguration.class)\n         .withConfiguration(AutoConfigurations.of(TracerAutoConfiguration.class))\n         .run(\n             (context) -> {\n-              assertTrue(\n-                  \"Application Context contains customTestTracer bean\",\n-                  context.containsBean(\"customTestTracer\"));\n-\n-              assertFalse(\n-                  \"Application Context DOES NOT contain the otelTracer bean defined in TracerAutoConfiguration\",\n-                  context.containsBean(\"otelTracer\"));\n+              assertThat(context.containsBean(\"customTestTracer\")).isEqualTo(true);", "originalCommit": "bc5d68ef9e3334dbec0e669ca572ea4592d11d97", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4MDU5Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876#discussion_r464280596", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          assertThat(context.containsBean(\"otelTracer\")).isEqualTo(false);\n          \n          \n            \n                          assertThat(context.containsBean(\"otelTracer\")).isFalse();", "author": "anuraaga", "createdAt": "2020-08-03T08:54:10Z", "path": "instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java", "diffHunk": "@@ -41,45 +40,39 @@ public Tracer customTestTracer() {\n   private final ApplicationContextRunner contextRunner = new ApplicationContextRunner();\n \n   @Test\n-  public void should_NOT_initalize_otelTracer_if_tracer_bean_exists() {\n+  @DisplayName(\"when Application Context contains Tracer bean should NOT initalize otelTracer\")\n+  void customTracer() {\n     this.contextRunner\n         .withUserConfiguration(CustomTracerConfiguration.class)\n         .withConfiguration(AutoConfigurations.of(TracerAutoConfiguration.class))\n         .run(\n             (context) -> {\n-              assertTrue(\n-                  \"Application Context contains customTestTracer bean\",\n-                  context.containsBean(\"customTestTracer\"));\n-\n-              assertFalse(\n-                  \"Application Context DOES NOT contain the otelTracer bean defined in TracerAutoConfiguration\",\n-                  context.containsBean(\"otelTracer\"));\n+              assertThat(context.containsBean(\"customTestTracer\")).isEqualTo(true);\n+              assertThat(context.containsBean(\"otelTracer\")).isEqualTo(false);", "originalCommit": "bc5d68ef9e3334dbec0e669ca572ea4592d11d97", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4MDY2Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/876#discussion_r464280666", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          assertThat(context.containsBean(\"otelTracer\")).isEqualTo(true);\n          \n          \n            \n                          assertThat(context.containsBean(\"otelTracer\")).isTrue();", "author": "anuraaga", "createdAt": "2020-08-03T08:54:19Z", "path": "instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java", "diffHunk": "@@ -41,45 +40,39 @@ public Tracer customTestTracer() {\n   private final ApplicationContextRunner contextRunner = new ApplicationContextRunner();\n \n   @Test\n-  public void should_NOT_initalize_otelTracer_if_tracer_bean_exists() {\n+  @DisplayName(\"when Application Context contains Tracer bean should NOT initalize otelTracer\")\n+  void customTracer() {\n     this.contextRunner\n         .withUserConfiguration(CustomTracerConfiguration.class)\n         .withConfiguration(AutoConfigurations.of(TracerAutoConfiguration.class))\n         .run(\n             (context) -> {\n-              assertTrue(\n-                  \"Application Context contains customTestTracer bean\",\n-                  context.containsBean(\"customTestTracer\"));\n-\n-              assertFalse(\n-                  \"Application Context DOES NOT contain the otelTracer bean defined in TracerAutoConfiguration\",\n-                  context.containsBean(\"otelTracer\"));\n+              assertThat(context.containsBean(\"customTestTracer\")).isEqualTo(true);\n+              assertThat(context.containsBean(\"otelTracer\")).isEqualTo(false);\n             });\n   }\n \n   @Test\n-  public void should_contain_otelTracer_bean() {\n+  @DisplayName(\"when Application Context DOES NOT contain Tracer bean should initialize otelTracer\")\n+  void initalizeTracer() {\n     this.contextRunner\n         .withConfiguration(AutoConfigurations.of(TracerAutoConfiguration.class))\n         .run(\n             (context) -> {\n-              assertTrue(\n-                  \"Application Context contains otelTracer bean\",\n-                  context.containsBean(\"otelTracer\"));\n+              assertThat(context.containsBean(\"otelTracer\")).isEqualTo(true);", "originalCommit": "bc5d68ef9e3334dbec0e669ca572ea4592d11d97", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e58497d96295dba31d9e08b5a86603f5daf7e078", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e58497d96295dba31d9e08b5a86603f5daf7e078", "message": "Update instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>", "committedDate": "2020-08-03T15:07:14Z", "type": "commit"}, {"oid": "8d2236e09fc9d989aaf021177f12837e13812d11", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8d2236e09fc9d989aaf021177f12837e13812d11", "message": "Update instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>", "committedDate": "2020-08-03T15:07:22Z", "type": "commit"}, {"oid": "730a2baa3905dcb251b9a70913a782c1ef9629c4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/730a2baa3905dcb251b9a70913a782c1ef9629c4", "message": "Update instrumentation-core/spring/spring-boot-autoconfigure/src/test/java/io/opentelemetry/instrumentation/spring/autoconfigure/TracerAutoConfigurationTest.java\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>", "committedDate": "2020-08-03T15:07:29Z", "type": "commit"}]}