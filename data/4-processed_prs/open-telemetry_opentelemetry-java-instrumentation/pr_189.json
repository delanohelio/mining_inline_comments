{"pr_number": 189, "pr_title": "Made couchbase agent compliant to semantic conventions", "pr_createdAt": "2020-02-27T02:20:31Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/189", "timeline": [{"oid": "4ef7e99f5eb104bd59ba275e3f3ddd61ec148b60", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/4ef7e99f5eb104bd59ba275e3f3ddd61ec148b60", "message": "Made couchbase agent compliant to semantic conventions", "committedDate": "2020-02-27T02:15:47Z", "type": "commit"}, {"oid": "5ef7b646123675383de275426098cb23ab54551c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5ef7b646123675383de275426098cb23ab54551c", "message": "Fixed test cases", "committedDate": "2020-02-27T04:20:30Z", "type": "commit"}, {"oid": "2e5c92984ea28b4e0ddbe69ecbc9c457f69e1b39", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/2e5c92984ea28b4e0ddbe69ecbc9c457f69e1b39", "message": "Made tests resilient to variations in internally generated queries", "committedDate": "2020-02-27T16:38:48Z", "type": "commit"}, {"oid": "49530470add1e8444ff425a337e779b680129fd2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/49530470add1e8444ff425a337e779b680129fd2", "message": "Fixed test function signatures", "committedDate": "2020-02-27T17:11:43Z", "type": "commit"}, {"oid": "f47ed72f969994261bf3697ee5985a31912d0632", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f47ed72f969994261bf3697ee5985a31912d0632", "message": "Final (famous last words) fix to tests", "committedDate": "2020-02-27T17:53:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4MzA1Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/189#discussion_r385283056", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \\\n          \n      \n    \n    \n  \n\nAnd extra newlines too...", "author": "tylerbenson", "createdAt": "2020-02-27T18:12:15Z", "path": "instrumentation/couchbase-2.0/src/test/groovy/springdata/CouchbaseSpringRepositoryTest.groovy", "diffHunk": "@@ -61,6 +61,9 @@ class CouchbaseSpringRepositoryTest extends AbstractCouchbaseTest {\n \n     applicationContext = new AnnotationConfigApplicationContext(CouchbaseConfig)\n     repo = applicationContext.getBean(DocRepository)\n+    \\\n+\n+", "originalCommit": "f47ed72f969994261bf3697ee5985a31912d0632", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "306e1765c75df7bc14f2d12c5784ac935cea2925", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/306e1765c75df7bc14f2d12c5784ac935cea2925", "message": "Removed extra newlines.\n\nCo-Authored-By: Tyler Benson <tylerbenson@gmail.com>", "committedDate": "2020-02-27T19:09:15Z", "type": "commit"}, {"oid": "c4090e7f8c83c7759610e6b84b015c5b5dbe1bf0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c4090e7f8c83c7759610e6b84b015c5b5dbe1bf0", "message": "Merge branch 'master' into prydin-db-semantics", "committedDate": "2020-02-27T20:11:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0Njc2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/189#discussion_r385346760", "bodyText": "\ud83d\udc4d", "author": "trask", "createdAt": "2020-02-27T20:13:09Z", "path": "instrumentation/couchbase-2.0/src/main/java/io/opentelemetry/auto/instrumentation/couchbase/client/CouchbaseBucketInstrumentation.java", "diffHunk": "@@ -74,8 +79,35 @@ public static void subscribeResult(\n         return;\n       }\n       CallDepthThreadLocalMap.reset(CouchbaseCluster.class);\n+      result = Observable.create(new CouchbaseOnSubscribe(result, method, bucket, null));\n+    }\n+  }\n+\n+  public static class CouchbaseClientQueryAdvice {\n+\n+    @Advice.OnMethodEnter\n+    public static int trackCallDepth() {\n+      return CallDepthThreadLocalMap.incrementCallDepth(CouchbaseCluster.class);\n+    }\n+\n+    @Advice.OnMethodExit(onThrowable = Throwable.class)\n+    public static void subscribeResult(\n+        @Advice.Enter final int callDepth,\n+        @Advice.Origin final Method method,\n+        @Advice.FieldValue(\"bucket\") final String bucket,\n+        @Advice.Argument(value = 0, optional = true) final Object query,\n+        @Advice.Return(readOnly = false) Observable result) {\n+      if (callDepth > 0) {\n+        return;\n+      }\n+      CallDepthThreadLocalMap.reset(CouchbaseCluster.class);\n \n-      result = Observable.create(new CouchbaseOnSubscribe(result, method, bucket));\n+      // A query can be of many different types. We could track the creation of them and try to\n+      // rewind back to when they were created from a string, but for now we rely on toString()\n+      // returning something useful. That seems to be the case. If we're starting to see strange\n+      // query texts, this is the place to look!", "originalCommit": "c4090e7f8c83c7759610e6b84b015c5b5dbe1bf0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}