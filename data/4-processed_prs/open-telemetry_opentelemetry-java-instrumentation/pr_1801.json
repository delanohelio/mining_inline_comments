{"pr_number": 1801, "pr_title": "Update WithSpan instrumentation to prevent multiple SERVER and CLIENT spans", "pr_createdAt": "2020-11-29T21:31:03Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1801", "timeline": [{"oid": "07b9b454d32101d64d08c4f8487cd43b0b813942", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/07b9b454d32101d64d08c4f8487cd43b0b813942", "message": "Make WithSpan instrumentation SERVER aware", "committedDate": "2020-11-29T21:24:47Z", "type": "commit"}, {"oid": "9b610a76b266f6c8733e070f90999ef3e3309fb1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9b610a76b266f6c8733e070f90999ef3e3309fb1", "message": "Also CLIENT aware", "committedDate": "2020-11-29T21:29:06Z", "type": "commit"}, {"oid": "3f1b827a73032616729b5b64f3a2b27f101aeb54", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3f1b827a73032616729b5b64f3a2b27f101aeb54", "message": "Spotless", "committedDate": "2020-11-29T21:48:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4OTYyMg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1801#discussion_r532389622", "bodyText": "See #1806", "author": "iNikem", "createdAt": "2020-11-30T07:24:22Z", "path": "instrumentation/opentelemetry-annotations-1.0/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/otelannotations/WithSpanTracer.java", "diffHunk": "@@ -22,6 +24,42 @@ public static WithSpanTracer tracer() {\n \n   private static final Logger log = LoggerFactory.getLogger(WithSpanTracer.class);\n \n+  public io.opentelemetry.api.trace.Span startSpan(\n+      Context context,\n+      WithSpan applicationAnnotation,\n+      Method method,\n+      io.opentelemetry.api.trace.Span.Kind kind) {\n+\n+    if (kind == io.opentelemetry.api.trace.Span.Kind.SERVER\n+        && getCurrentServerSpan(context) != null) {\n+      return io.opentelemetry.api.trace.Span.getInvalid();\n+    }\n+    if (kind == io.opentelemetry.api.trace.Span.Kind.CLIENT\n+        && context.get(CONTEXT_CLIENT_SPAN_KEY) != null) {\n+      return io.opentelemetry.api.trace.Span.getInvalid();\n+    }\n+    return startSpan(spanNameForMethodWithAnnotation(applicationAnnotation, method), kind);\n+  }\n+\n+  /**\n+   * Creates new scoped context, based on the given context, with the given span.\n+   *\n+   * <p>Attaches new context to the request to avoid creating duplicate server spans.\n+   */\n+  public Scope startScope(\n+      Context context,\n+      io.opentelemetry.api.trace.Span span,\n+      io.opentelemetry.api.trace.Span.Kind kind) {\n+\n+    if (kind == io.opentelemetry.api.trace.Span.Kind.SERVER) {\n+      return context.with(CONTEXT_SERVER_SPAN_KEY, span).with(span).makeCurrent();\n+    }\n+    if (kind == io.opentelemetry.api.trace.Span.Kind.CLIENT) {\n+      return context.with(CONTEXT_CLIENT_SPAN_KEY, span).with(span).makeCurrent();", "originalCommit": "3f1b827a73032616729b5b64f3a2b27f101aeb54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4MjE5Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1801#discussion_r532982196", "bodyText": "oh this is a good point, I thought that issue was just about an optimization, but understand now \ud83d\udc4d", "author": "trask", "createdAt": "2020-11-30T23:58:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4OTYyMg=="}], "type": "inlineReview"}, {"oid": "96301472c907dc0ebb3f32bf6e22014246568fba", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/96301472c907dc0ebb3f32bf6e22014246568fba", "message": "Don't put invalid span into scope", "committedDate": "2020-11-30T23:57:43Z", "type": "commit"}, {"oid": "9b047a0c0d9f86242ae06907c26754f9e6dd6eda", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9b047a0c0d9f86242ae06907c26754f9e6dd6eda", "message": "Return Context from startSpan", "committedDate": "2020-12-01T02:49:15Z", "type": "commit"}]}