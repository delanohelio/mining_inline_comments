{"pr_number": 1924, "pr_title": "Update SDK dependency to 0.13.0-SNAPSHOT.", "pr_createdAt": "2020-12-17T06:06:04Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1924", "timeline": [{"oid": "c8e7c2d458abe71db8047a2737dd76b91908f946", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c8e7c2d458abe71db8047a2737dd76b91908f946", "message": "Update SDK dependency to 0.13.0-SNAPSHOT.", "committedDate": "2020-12-17T06:03:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg1MDE5NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1924#discussion_r544850195", "bodyText": "\ud83d\udc4d", "author": "trask", "createdAt": "2020-12-17T06:46:58Z", "path": "testing-common/src/main/groovy/io/opentelemetry/instrumentation/test/AgentTestRunner.java", "diffHunk": "@@ -344,29 +339,4 @@ protected static String getClassName(Class clazz) {\n     }\n     return className;\n   }\n-\n-  // Workaround https://github.com/open-telemetry/opentelemetry-java/pull/2096\n-  public static void setGlobalPropagators(ContextPropagators propagators) {", "originalCommit": "c8e7c2d458abe71db8047a2737dd76b91908f946", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "be5ccfadb493df11ccfdfed1d47d1b4eb196bd4c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/be5ccfadb493df11ccfdfed1d47d1b4eb196bd4c", "message": "Update smoke tests", "committedDate": "2020-12-17T06:56:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MTY1NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1924#discussion_r544891654", "bodyText": "Shouldn't you use variables from above here?", "author": "iNikem", "createdAt": "2020-12-17T08:15:47Z", "path": "gradle/dependencies.gradle", "diffHunk": "@@ -42,17 +42,17 @@ ext {\n     opentelemetryApi           : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-api', version: versions.opentelemetry),\n     opentelemetryExtAnnotations: dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-extension-annotations', version: versions.opentelemetryAnother),\n     opentelemetryContext       : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-context', version: versions.opentelemetryContext),\n-    opentelemetryKotlin        : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-extension-kotlin', version: versions.opentelemetry),\n-    opentelemetryTraceProps    : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-extension-trace-propagators', version: versions.opentelemetry),\n-    opentelemetrySdk           : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-sdk', version: versions.opentelemetryAnother),\n-    opentelemetryJaeger        : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-exporter-jaeger', version: versions.opentelemetryOther),\n-    opentelemetryJaegerThrift  : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-exporter-jaeger-thrift', version: versions.opentelemetryOther),\n-    opentelemetryOtlp          : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-exporter-otlp', version: versions.opentelemetryOther),\n-    opentelemetryZipkin        : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-exporter-zipkin', version: versions.opentelemetryOther),\n-    opentelemetryPrometheus    : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-exporter-prometheus', version: versions.opentelemetryOther),\n-    opentelemetryLogging       : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-exporter-logging', version: versions.opentelemetryOther),\n-    opentelemetryProto         : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-proto', version: versions.opentelemetryAnother),\n-    opentelemetryResources     : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-sdk-extension-resources', version: versions.opentelemetry),\n+    opentelemetryKotlin        : dependencies.create(group: 'io.opentelemetry', name: 'opentelemetry-extension-kotlin', version: '0.13.0-20201217.041750-92'),", "originalCommit": "be5ccfadb493df11ccfdfed1d47d1b4eb196bd4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxOTg1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1924#discussion_r544919850", "bodyText": "Don't know why (maybe too many artifacts now) but the snapshot versions are all over the place now. I don't think I can come up with a more maintaible set of variables, and I guess in the future if this continues (will check once how sonatype deals with it compared to jfrog) we probably won't attempt snapshot dependencies anymore since pretty crazy to manage these.", "author": "anuraaga", "createdAt": "2020-12-17T09:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MTY1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyMzI2OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1924#discussion_r544923269", "bodyText": "Then we don't need those variables?\nCan we use BOM with time-based snapshots?", "author": "iNikem", "createdAt": "2020-12-17T09:06:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MTY1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyNDM5Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1924#discussion_r544924392", "bodyText": "I don't think there's a way to have a BOM with the time-based snapshots (time is computed by server, not publisher).\nI'm thinking of removing the variables when updating to 0.13.0 final since this got to a state that works with some yak shaving and updating to final version will be much more direct / simple.", "author": "anuraaga", "createdAt": "2020-12-17T09:08:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MTY1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MjEwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1924#discussion_r544892107", "bodyText": "Do we want both opentelemetry-api-trace and opentelemetry-api?", "author": "iNikem", "createdAt": "2020-12-17T08:16:32Z", "path": "gradle/java.gradle", "diffHunk": "@@ -126,14 +126,16 @@ dependencies {\n     // latest snapshots are used, because the opentelemetry-sdk snapshot pom references these\n     // transitive dependencies using the generic SNAPSHOT instead of a specific snapshot\n     implementation group: 'io.opentelemetry', name: 'opentelemetry-api', version: versions.opentelemetry\n+    implementation group: 'io.opentelemetry', name: 'opentelemetry-api-trace', version: '0.13.0-20201217.041746-88'", "originalCommit": "be5ccfadb493df11ccfdfed1d47d1b4eb196bd4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxODk5Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1924#discussion_r544918992", "bodyText": "Yeah - SDK's transitive dependency on the API needs to be constrained, and API's transitive dependency on api-trace needs to be constrained.", "author": "anuraaga", "createdAt": "2020-12-17T08:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MjEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MzIyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1924#discussion_r544893226", "bodyText": "Something wrong with your import settings?", "author": "iNikem", "createdAt": "2020-12-17T08:18:24Z", "path": "instrumentation/kafka-streams-0.11/javaagent/src/test/groovy/KafkaStreamsTest.groovy", "diffHunk": "@@ -32,6 +30,9 @@ import org.springframework.kafka.test.utils.ContainerTestUtils\n import org.springframework.kafka.test.utils.KafkaTestUtils\n import spock.lang.Shared\n \n+import java.util.concurrent.LinkedBlockingQueue", "originalCommit": "be5ccfadb493df11ccfdfed1d47d1b4eb196bd4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db8ea7ce5c4c31db4980bb27620671f67bd43d2a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/db8ea7ce5c4c31db4980bb27620671f67bd43d2a", "message": "Fix formatting", "committedDate": "2020-12-17T08:51:46Z", "type": "commit"}, {"oid": "03ad1b04648a9368ae29cd4d1b1068fd67e2bbbf", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/03ad1b04648a9368ae29cd4d1b1068fd67e2bbbf", "message": "Spot", "committedDate": "2020-12-17T09:02:35Z", "type": "commit"}]}