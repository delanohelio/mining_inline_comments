{"pr_number": 626, "pr_title": "Better JMS span names", "pr_createdAt": "2020-07-02T04:51:17Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/626", "timeline": [{"oid": "be31cdffc57b478e522617a9232a9a50b60a28c9", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/be31cdffc57b478e522617a9232a9a50b60a28c9", "message": "Better JMS span names", "committedDate": "2020-07-02T04:49:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc0ODQ4MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/626#discussion_r448748481", "bodyText": "I'm amazed this is how the test is updated :P\nBut I'm not sure this is right - the span name is supposed to be an operation so a verb makes sense to me. Instead of jms.receiveNoWait and jms.receive, I'd expect them both to be just receive.\nThe queue or topic instead goes in messaging.destination\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/messaging.md#messaging-attributes", "author": "anuraaga", "createdAt": "2020-07-02T04:55:26Z", "path": "instrumentation/jms-1.1/src/latestDepTest/groovy/JMS2Test.groovy", "diffHunk": "@@ -180,7 +180,7 @@ class JMS2Test extends AgentTestRunner {\n       trace(0, 1) { // Consumer trace\n         span(0) {\n           parent()\n-          operationName \"jms.receiveNoWait\"\n+          operationName expectedSpanName", "originalCommit": "be31cdffc57b478e522617a9232a9a50b60a28c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc1MDEwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/626#discussion_r448750107", "bodyText": "from that link:\n\nSpan name: The span name should usually be set to the message destination name", "author": "trask", "createdAt": "2020-07-02T05:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc0ODQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc1MDQ0Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/626#discussion_r448750446", "bodyText": "Ah thanks, missed that", "author": "anuraaga", "createdAt": "2020-07-02T05:03:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc0ODQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc1MzI3MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/626#discussion_r448753271", "bodyText": "By the way filed open-telemetry/opentelemetry-specification#686 if that goes somewhere I'll take care of updating :)", "author": "anuraaga", "createdAt": "2020-07-02T05:14:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc0ODQ4MQ=="}], "type": "inlineReview"}, {"oid": "1c79b4f14f6c96fa07a7b541030a60b1f6ac123f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1c79b4f14f6c96fa07a7b541030a60b1f6ac123f", "message": "muzzle", "committedDate": "2020-07-02T05:18:40Z", "type": "commit"}]}