{"pr_number": 635, "pr_title": "Remove HttpClientTest.READ_TIMEOUT_MS", "pr_createdAt": "2020-07-06T08:55:18Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/635", "timeline": [{"oid": "e90460cad3b3748adde92640b0fe1b124ca7d79c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e90460cad3b3748adde92640b0fe1b124ca7d79c", "message": "#593 Remove HttpClientTest.READ_TIMEOUT_MS\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-07-06T08:54:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU1NzczMA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/635#discussion_r450557730", "bodyText": "i think this probably fine, even though khttp uses this for both connect and read timeouts\nlet's keep and if it causes issues we can bump", "author": "trask", "createdAt": "2020-07-07T01:13:17Z", "path": "instrumentation/khttp-0.1/src/test/groovy/KHttpClientTest.groovy", "diffHunk": "@@ -22,7 +22,7 @@ class KHttpClientTest extends HttpClientTest {\n   @Override\n   int doRequest(String method, URI uri, Map<String, String> headers, Closure callback) {\n     // khttp applies the same timeout for both connect and read\n-    def timeoutSeconds = Math.max(CONNECT_TIMEOUT_MS, READ_TIMEOUT_MS) / 1000\n+    def timeoutSeconds = CONNECT_TIMEOUT_MS / 1000", "originalCommit": "e90460cad3b3748adde92640b0fe1b124ca7d79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NTA3MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/635#discussion_r450575070", "bodyText": "@trask should I set  READ_TIMEOUT_MS only for KHttpClientTest? I mean define READ_TIMEOUT_MS only in KHttpClientTest ?", "author": "malafeev", "createdAt": "2020-07-07T02:19:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU1NzczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYwMDI1Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/635#discussion_r450600253", "bodyText": "yeah, that's probably wise, and self-documenting, since khttp is a bit unusual", "author": "trask", "createdAt": "2020-07-07T04:09:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU1NzczMA=="}], "type": "inlineReview"}]}