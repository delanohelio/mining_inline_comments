{"pr_number": 516, "pr_title": "Update documentation to point to new snapshot and release repositories", "pr_createdAt": "2020-06-14T12:22:08Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516", "timeline": [{"oid": "240f54bc78724ee79ea337d9d1a11c8c6d086674", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/240f54bc78724ee79ea337d9d1a11c8c6d086674", "message": "Update documentation to point to new snapshot and release repositories", "committedDate": "2020-06-14T12:21:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MzY4OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#discussion_r439853689", "bodyText": "\"OpenTelemetry exporter\" sounds ambiguous to me, leaves me wondering \"which OpenTelemetry exporter?\"\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [OpenTelemetry exporter](https://github.com/open-telemetry/opentelemetry-java/tree/master/exporters/otlp)\n          \n          \n            \n            [OTLP exporter](https://github.com/open-telemetry/opentelemetry-java/tree/master/exporters/otlp)", "author": "trask", "createdAt": "2020-06-14T18:00:24Z", "path": "README.md", "diffHunk": "@@ -4,28 +4,37 @@\n \n This project provides a Java agent JAR that can be attached to any Java 7+\n application and dynamically injects bytecode to capture telemetry from a\n-number of popular libraries and frameworks. The telemetry data can exported\n-in a variety of formats each provided as their own independent JAR. In\n-addition, the agent and exporter can be configured via command line arguments\n+number of popular libraries and frameworks. \n+The telemetry data can be exported in a variety of formats. \n+In addition, the agent and exporter can be configured via command line arguments\n or environment variables. The net result is the ability to gather telemetry\n data from a Java application without code changes.\n \n ## Getting Started\n \n-Download the [latest\n-release](https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases)\n-of the Java agent and available exporters.\n+[ ![Download](https://api.bintray.com/packages/open-telemetry/maven/opentelemetry-java-instrumentation/images/download.svg) ](https://bintray.com/open-telemetry/maven/opentelemetry-java-instrumentation/_latestVersion)\n+\n+The easiest way to start is to download \"all-in\" package, which includes instrumentation agent,\n+instrumentations for all supported libraries and all available data exporters.\n+This provides completely automatic out of the box experience.\n+TODO add here screenshot from Bintray download list.\n \n The instrumentation agent is enabled using the `-javaagent` flag to the JVM.\n-Configuration parameters are passed as Java system properties (`-D` flags) or\n-as environment variables. Both the Java agent and exporter configuration must\n-be defined before the application JAR. For example:\n+```\n+java -javaagent:path/to/opentelemetry-auto-<version>-all.jar \\\n+     -jar myapp.jar\n+```\n+By default OpenTelemetry Java agent uses \n+[OpenTelemetry exporter](https://github.com/open-telemetry/opentelemetry-java/tree/master/exporters/otlp)", "originalCommit": "240f54bc78724ee79ea337d9d1a11c8c6d086674", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1Mzk1MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#discussion_r439853951", "bodyText": "\ud83c\udf89", "author": "trask", "createdAt": "2020-06-14T18:03:41Z", "path": "README.md", "diffHunk": "@@ -227,9 +240,6 @@ High-level roadmap:\n       [opentelemetry-specification#522](https://github.com/open-telemetry/opentelemetry-specification/issues/522))\n   * See issues with label\n     [specification](https://github.com/open-telemetry/opentelemetry-java-instrumentation/labels/specification)\n-* Simpler exporter configuration\n-  * See issue\n-    [#370](https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/370)", "originalCommit": "240f54bc78724ee79ea337d9d1a11c8c6d086674", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NDc3Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#discussion_r439854772", "bodyText": "This seems a bit complicated. Can we provide a direct link to download the -all package?", "author": "trask", "createdAt": "2020-06-14T18:13:39Z", "path": "README.md", "diffHunk": "@@ -4,28 +4,37 @@\n \n This project provides a Java agent JAR that can be attached to any Java 7+\n application and dynamically injects bytecode to capture telemetry from a\n-number of popular libraries and frameworks. The telemetry data can exported\n-in a variety of formats each provided as their own independent JAR. In\n-addition, the agent and exporter can be configured via command line arguments\n+number of popular libraries and frameworks. \n+The telemetry data can be exported in a variety of formats. \n+In addition, the agent and exporter can be configured via command line arguments\n or environment variables. The net result is the ability to gather telemetry\n data from a Java application without code changes.\n \n ## Getting Started\n \n-Download the [latest\n-release](https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases)\n-of the Java agent and available exporters.\n+[ ![Download](https://api.bintray.com/packages/open-telemetry/maven/opentelemetry-java-instrumentation/images/download.svg) ](https://bintray.com/open-telemetry/maven/opentelemetry-java-instrumentation/_latestVersion)\n+\n+The easiest way to start is to download \"all-in\" package, which includes instrumentation agent,\n+instrumentations for all supported libraries and all available data exporters.\n+This provides completely automatic out of the box experience.\n+TODO add here screenshot from Bintray download list.", "originalCommit": "240f54bc78724ee79ea337d9d1a11c8c6d086674", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0MDM2Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#discussion_r439940363", "bodyText": "The best I can do now is https://www.jfrog.com/confluence/display/BT/Managing+Uploaded+Content#ManagingUploadedContent-CreatingandEditingaDownloadList. Have a link in documentation to the latest version's screen and there is \"Download list\" which has our -all artefact. I asked JFrog if we can have direct link to the latest version of a specific file.", "author": "iNikem", "createdAt": "2020-06-15T05:41:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NDc3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NTA2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/516#discussion_r439855060", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `AgentClassLoader`. Including OpenTelemetry SDK and data exporters.\n          \n          \n            \n            `AgentClassLoader`. Including OpenTelemetry SDK (and the built-in exporters when using the `-all` artifact).", "author": "trask", "createdAt": "2020-06-14T18:17:51Z", "path": "CONTRIBUTING.md", "diffHunk": "@@ -71,7 +71,7 @@ following \"clusters\" of classes:\n \n - `auto-tooling-and-instrumentation.isolated/` - contains `agent-tooling`\n module and `instrumentation` submodules, loaded and isolated inside\n-`AgentClassLoader`. Including OpenTelemetry SDK.\n+`AgentClassLoader`. Including OpenTelemetry SDK and data exporters.", "originalCommit": "240f54bc78724ee79ea337d9d1a11c8c6d086674", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "43287b6f7bc9f502ac728bb36ea9e9ca668678b3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/43287b6f7bc9f502ac728bb36ea9e9ca668678b3", "message": "Apply suggestions from code review\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>", "committedDate": "2020-06-15T04:54:24Z", "type": "commit"}, {"oid": "6ff916586ecaae5ea3bd3b81a4993e17eb136b10", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6ff916586ecaae5ea3bd3b81a4993e17eb136b10", "message": "Merge branch 'master' into docs", "committedDate": "2020-06-15T10:23:22Z", "type": "commit"}, {"oid": "de361677a7ba461ebadec99dd48b6d4816eaff4b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/de361677a7ba461ebadec99dd48b6d4816eaff4b", "message": "Merge branch 'master' into docs", "committedDate": "2020-06-15T19:39:54Z", "type": "commit"}]}