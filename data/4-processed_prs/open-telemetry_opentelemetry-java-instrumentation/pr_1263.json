{"pr_number": 1263, "pr_title": "Add debugging docs", "pr_createdAt": "2020-09-26T18:14:21Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1263", "timeline": [{"oid": "1d27b132316d0186288b335a152cc123efe188e5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1d27b132316d0186288b335a152cc123efe188e5", "message": "Add debugging instructions\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-09-26T18:11:26Z", "type": "commit"}, {"oid": "ecb53e4b3241c85612273a188a2de04f66d56e24", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ecb53e4b3241c85612273a188a2de04f66d56e24", "message": "notes\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-09-26T18:12:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NjAzNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1263#discussion_r495486034", "bodyText": "agentmain is for \"hot attach\" and I think breakpoints may work there (though we don't use/test/doc hot attach at this time).\nnaming specific classes as examples I think is good, since lots of agent-tooling classes will work under debugger, just not the initialization code\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            in agent initialization code (`premain`/`agentmain`, `agent-tooling` artifact etc.).\n          \n          \n            \n            in agent initialization code (`OpenTelemetryAgent`, `AgentInitializer`, `AgentInstaller`, `TracerInstaller`, etc.).", "author": "trask", "createdAt": "2020-09-26T19:08:16Z", "path": "docs/contributing/debugging.md", "diffHunk": "@@ -0,0 +1,33 @@\n+### Debugging\n+\n+Debugging java agent can be a challenging task since some instrumentation\n+code is directly inlined into target classes and debugger is\n+usually not attached early enough to activate breakpoints\n+in agent initialization code (`premain`/`agentmain`, `agent-tooling` artifact etc.).", "originalCommit": "ecb53e4b3241c85612273a188a2de04f66d56e24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NjQwMA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1263#discussion_r495486400", "bodyText": "I don't think we use the term \"template methods\" elsewhere. I think \"advice methods\" may be better.", "author": "trask", "createdAt": "2020-09-26T19:12:36Z", "path": "docs/contributing/debugging.md", "diffHunk": "@@ -0,0 +1,33 @@\n+### Debugging\n+\n+Debugging java agent can be a challenging task since some instrumentation\n+code is directly inlined into target classes and debugger is\n+usually not attached early enough to activate breakpoints\n+in agent initialization code (`premain`/`agentmain`, `agent-tooling` artifact etc.).\n+\n+#### Template methods and agent initialization", "originalCommit": "ecb53e4b3241c85612273a188a2de04f66d56e24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0OTQ3MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1263#discussion_r495549470", "bodyText": "IIUC, this requires remote debugging from this repo since it has the code, but not a users if they are using the agent. Since this is CONTRIBUTING.md that's totally fine :) With the linked issue I'm hoping we can provide that jar so it's easier to debug for a user though - add compileOnly dependency on obfuscated jar and use normal IntelliJ local debug, it's worked ok for me in the past.", "author": "anuraaga", "createdAt": "2020-09-27T09:05:30Z", "path": "docs/contributing/debugging.md", "diffHunk": "@@ -0,0 +1,33 @@\n+### Debugging\n+\n+Debugging java agent can be a challenging task since some instrumentation\n+code is directly inlined into target classes and debugger is\n+usually not attached early enough to activate breakpoints\n+in agent initialization code (`premain`/`agentmain`, `agent-tooling` artifact etc.).\n+\n+#### Template methods and agent initialization\n+\n+Breakpoints do not work in template methods, because their code is directly inlined\n+by ByteBuddy into the target class. It is good to keep these methods as small as possible.\n+The template methods are annotated with:\n+\n+```java\n+@net.bytebuddy.asm.Advice.OnMethodEnter\n+@net.bytebuddy.asm.Advice.OnMethodExit\n+```\n+\n+The best approach to debug template methods and agent initialization is to use the following statements:\n+\n+```java\n+System.out.println()\n+Thread.dumpStack()\n+```\n+\n+#### Enable debugger\n+\n+The following example shows remote debugger configuration. The breakpoints", "originalCommit": "ecb53e4b3241c85612273a188a2de04f66d56e24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "26c7c5d75b47d6262624c76c0d9191c66f556ca2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/26c7c5d75b47d6262624c76c0d9191c66f556ca2", "message": "Review comments\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-09-27T15:49:31Z", "type": "commit"}, {"oid": "b85ee16ca181656700d189fdb1f835e5a17f8527", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b85ee16ca181656700d189fdb1f835e5a17f8527", "message": "Merge remote-tracking branch 'upstream/master' into pavolloffay/debugging-docs", "committedDate": "2020-09-27T19:12:54Z", "type": "commit"}]}