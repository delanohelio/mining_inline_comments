{"pr_number": 1339, "pr_title": "Document traceId/spanId injection into logs", "pr_createdAt": "2020-10-07T12:43:49Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4NzI3Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339#discussion_r500987277", "bodyText": "If it is always true, why include it?", "author": "iNikem", "createdAt": "2020-10-07T12:53:37Z", "path": "docs/logger-mdc-instrumentation.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Logger MDC auto-instrumentation\n+\n+The Mapped Diagnostic Context (MDC) is\n+\n+> an instrument for distinguishing interleaved log output from different sources.\n+> &mdash; <cite> [log4j MDC documentation](http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/MDC.html) </cite>\n+\n+It contains thread-local contextual information which is later copied to each logging event captured\n+by a logging library.\n+\n+The OTel Java agent injects several pieces of information about the current span into each logging\n+event's MDC copy:\n+\n+- `traceId` - the current trace id\n+  (same as `TracingContextUtils.getCurrentSpan().getContext().getTraceIdAsHexString()`);\n+- `spanId` - the current span id\n+  (same as `TracingContextUtils.getCurrentSpan().getContext().getSpanIdAsHexString()`);\n+- `sampled` - a boolean flag marking whether the current span is sampled or not\n+  (same as `TracingContextUtils.getCurrentSpan().getContext().isSampled()`).\n+  Only added when `sampled` is `true`.", "originalCommit": "868a1c4365190e61187bfd476cf90bff5b1c3ee3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1MTQwNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339#discussion_r501051404", "bodyText": "I've added an explanation to the doc. Basically if it's there the span is sampled, if not it is not - I guess the reasoning behind it is that most of spans are not sampled and keeping sampled=false in every log line would be just a waste of space.", "author": "mateuszrzeszutek", "createdAt": "2020-10-07T14:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4NzI3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1Nzc0Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339#discussion_r501057747", "bodyText": "Aren't most span sampled? With AlwaysOn sampler, which is default", "author": "iNikem", "createdAt": "2020-10-07T14:27:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4NzI3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA3MTY1NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1339#discussion_r501071655", "bodyText": "\ud83e\udd26  That's true...\nI somehow thought that it worked completely the other way \ud83d\ude05\nNow I'm starting to wonder why it works that way... @anuraaga I think you've added it first in the logback instrumentation -- why do we only log true value?", "author": "mateuszrzeszutek", "createdAt": "2020-10-07T14:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4NzI3Nw=="}], "type": "inlineReview"}, {"oid": "241955b46035a71006491058153b86799f004813", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/241955b46035a71006491058153b86799f004813", "message": "Document traceId/spanId injection into logs", "committedDate": "2020-10-08T10:28:05Z", "type": "commit"}, {"oid": "da7948f04bef091fdada98927aad1cc6a4d0df63", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/da7948f04bef091fdada98927aad1cc6a4d0df63", "message": "Document traceId/spanId injection into logs", "committedDate": "2020-10-08T10:28:05Z", "type": "commit"}, {"oid": "da7948f04bef091fdada98927aad1cc6a4d0df63", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/da7948f04bef091fdada98927aad1cc6a4d0df63", "message": "Document traceId/spanId injection into logs", "committedDate": "2020-10-08T10:28:05Z", "type": "forcePushed"}]}