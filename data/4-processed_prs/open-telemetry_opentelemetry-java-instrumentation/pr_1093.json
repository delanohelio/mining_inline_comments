{"pr_number": 1093, "pr_title": "Log current thread id and name as span attribute", "pr_createdAt": "2020-08-25T11:42:44Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1093", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4NTY3Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1093#discussion_r476385672", "bodyText": "use expect: and without assert", "author": "iNikem", "createdAt": "2020-08-25T11:45:33Z", "path": "javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/AddThreadDetailsSpanProcessorTest.groovy", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.javaagent.tooling\n+\n+import io.opentelemetry.sdk.trace.ReadWriteSpan\n+import io.opentelemetry.trace.attributes.SemanticAttributes\n+import spock.lang.Specification\n+\n+class AddThreadDetailsSpanProcessorTest extends Specification {\n+  def span = Mock(ReadWriteSpan)\n+\n+  def processor = new AddThreadDetailsSpanProcessor()\n+\n+  def \"should require onStart call\"() {\n+    when:", "originalCommit": "71ba52ff7699946ebcd0c50d2cf5d2450442d0ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ5NzA5NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1093#discussion_r476497095", "bodyText": "Fixed, thanks!", "author": "mateuszrzeszutek", "createdAt": "2020-08-25T14:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM4NTY3Mg=="}], "type": "inlineReview"}, {"oid": "1bd1f10479b9ae0187aa1d08dd554311d16a01cd", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1bd1f10479b9ae0187aa1d08dd554311d16a01cd", "message": "Log current thread id and name as span attribute\n\n* Bump opentelementry-java versions\n* Fix all compilation issues\n* Add a new `SpanProcessor` that appends thread attributes to each span", "committedDate": "2020-08-25T14:32:37Z", "type": "forcePushed"}, {"oid": "dc6809443606fd3a1aea2f5a0e773deafd65c72c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dc6809443606fd3a1aea2f5a0e773deafd65c72c", "message": "Log current thread id and name as span attribute\n\n* Bump opentelementry-java versions\n* Fix all compilation issues\n* Add a new `SpanProcessor` that appends thread attributes to each span", "committedDate": "2020-08-27T08:20:14Z", "type": "commit"}, {"oid": "dc6809443606fd3a1aea2f5a0e773deafd65c72c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dc6809443606fd3a1aea2f5a0e773deafd65c72c", "message": "Log current thread id and name as span attribute\n\n* Bump opentelementry-java versions\n* Fix all compilation issues\n* Add a new `SpanProcessor` that appends thread attributes to each span", "committedDate": "2020-08-27T08:20:14Z", "type": "forcePushed"}]}