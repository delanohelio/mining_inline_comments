{"pr_number": 108, "pr_title": "Change grizzly, mongo, sparkjava, spring-data, jetty, jsp, kafka-clients, lettuce to use OpenTelemetry API directly", "pr_createdAt": "2020-01-29T21:23:21Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108", "timeline": [{"oid": "e830bd666ef0ed3d18a8f6b84336fe84e24e4f54", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e830bd666ef0ed3d18a8f6b84336fe84e24e4f54", "message": "Convert Grizzly to use OpenTelemetry API directly", "committedDate": "2020-01-29T20:21:56Z", "type": "commit"}, {"oid": "641326830595d921970783e17465043a295f7ed6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/641326830595d921970783e17465043a295f7ed6", "message": "Convert Mongo to use OpenTelemetry API directly", "committedDate": "2020-01-29T20:22:09Z", "type": "commit"}, {"oid": "903a0fe8619366c59fa46e41fc319ef2f71d6cdc", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/903a0fe8619366c59fa46e41fc319ef2f71d6cdc", "message": "Convert SparkJava to use OpenTelemetry API directly", "committedDate": "2020-01-29T20:22:21Z", "type": "commit"}, {"oid": "80d3c38a69a2705c9302c022b3ef5e9479700a39", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/80d3c38a69a2705c9302c022b3ef5e9479700a39", "message": "Convert Spring Data to use OpenTelemetry API directly", "committedDate": "2020-01-29T20:22:42Z", "type": "commit"}, {"oid": "24b97bd8f7a76aad25bdc985f4fb0ed83a84de94", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/24b97bd8f7a76aad25bdc985f4fb0ed83a84de94", "message": "Convert Jetty to use OpenTelemetry API directly", "committedDate": "2020-01-29T20:29:03Z", "type": "commit"}, {"oid": "bc52a4643a75b710be011b3ffcf8ff1e98d47fe8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bc52a4643a75b710be011b3ffcf8ff1e98d47fe8", "message": "Convert JSP to use OpenTelemetry API directly", "committedDate": "2020-01-29T20:32:47Z", "type": "commit"}, {"oid": "cfdecdc6ebdf8672b3985d64fe37c5dd62d08627", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cfdecdc6ebdf8672b3985d64fe37c5dd62d08627", "message": "Convert Kafka Clients to use OpenTelemetry API directly", "committedDate": "2020-01-29T20:40:11Z", "type": "commit"}, {"oid": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538", "message": "Convert Lettuce to use OpenTelemetry API directly", "committedDate": "2020-01-29T21:03:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMDMzOA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373210338", "bodyText": "this is my first PR review in here, and I know this isn't totally the right place to mention this, but what about calling this thing a SpanWithScope, rather than explicitly calling out the pair nature?", "author": "jkwatson", "createdAt": "2020-01-30T21:45:48Z", "path": "instrumentation/grizzly-2/src/main/java/io/opentelemetry/auto/instrumentation/grizzly/GrizzlyHttpHandlerInstrumentation.java", "diffHunk": "@@ -66,39 +64,44 @@ public boolean defaultEnabled() {\n   public static class HandleAdvice {\n \n     @Advice.OnMethodEnter(suppress = Throwable.class)\n-    public static AgentScope methodEnter(@Advice.Argument(0) final Request request) {\n+    public static SpanScopePair methodEnter(@Advice.Argument(0) final Request request) {", "originalCommit": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMjY2OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373212669", "bodyText": "\ud83d\udc4d SpanWithScope sounds good to me, I'll open an issue to track that", "author": "trask", "createdAt": "2020-01-30T21:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMDMzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNDA1Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373214052", "bodyText": "hmm. If this is the API that we're providing for this in the opentelemetry-java API, it makes me a little sad. Is there a better way to do this than requiring everyone to catch this?", "author": "jkwatson", "createdAt": "2020-01-30T21:54:11Z", "path": "instrumentation/grizzly-2/src/main/java/io/opentelemetry/auto/instrumentation/grizzly/GrizzlyHttpHandlerInstrumentation.java", "diffHunk": "@@ -66,39 +64,44 @@ public boolean defaultEnabled() {\n   public static class HandleAdvice {\n \n     @Advice.OnMethodEnter(suppress = Throwable.class)\n-    public static AgentScope methodEnter(@Advice.Argument(0) final Request request) {\n+    public static SpanScopePair methodEnter(@Advice.Argument(0) final Request request) {\n       if (request.getAttribute(SPAN_ATTRIBUTE) != null) {\n         return null;\n       }\n \n-      final Context parentContext = propagate().extract(request, GETTER);\n-      final AgentSpan span = startSpan(\"grizzly.request\", parentContext);\n+      final Span.Builder spanBuilder = TRACER.spanBuilder(\"grizzly.request\");\n+      try {\n+        final SpanContext extractedContext = TRACER.getHttpTextFormat().extract(request, GETTER);\n+        spanBuilder.setParent(extractedContext);\n+      } catch (final IllegalArgumentException e) {", "originalCommit": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNTAzNw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373215037", "bodyText": "see open-telemetry/opentelemetry-java#767", "author": "trask", "createdAt": "2020-01-30T21:56:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNDA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNTQ0MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373215440", "bodyText": "ah! sweet. awesome. I hadn't connected the dots.", "author": "jkwatson", "createdAt": "2020-01-30T21:57:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNDA1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNTkyNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373215925", "bodyText": "once we have a real SpanWithScope, it makes sense to add a close() method to it, I think.", "author": "jkwatson", "createdAt": "2020-01-30T21:58:23Z", "path": "instrumentation/jetty-8/src/main/java/io/opentelemetry/auto/instrumentation/jetty8/JettyHandlerAdvice.java", "diffHunk": "@@ -80,9 +83,9 @@ public static void stopSpan(\n       if (!req.isAsyncStarted() && activated.compareAndSet(false, true)) {\n         DECORATE.onResponse(span, resp);\n         DECORATE.beforeFinish(span);\n-        span.finish(); // Finish the span manually since finishSpanOnClose was false\n+        span.end(); // Finish the span manually since finishSpanOnClose was false\n       }\n     }\n-    scope.close();\n+    spanScopePair.getScope().close();", "originalCommit": "d3d5a8e7ef5ddeeb8f5289790b66fcd9df66c538", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIyMjQxNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373222414", "bodyText": "i hesitated to add close() because people might think that method applies to both the span and scope (ending the span in addition to closing the scope).\nand there's no need to implement Closeable, since this class isn't used in try-with-resource, at least in auto instrumentation (where this class is needed/used to pass the values from one method to another), though i could see contrib instrumentation wanting to use it in try-with-resource...", "author": "trask", "createdAt": "2020-01-30T22:13:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNTkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI0MjU5NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373242595", "bodyText": "yeah, maybe a \"closeScope\" would be more clear.", "author": "jkwatson", "createdAt": "2020-01-30T23:07:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNTkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI0MzQ5MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/108#discussion_r373243490", "bodyText": "i like that, then don't need getScope(), i'll add that note to #114", "author": "trask", "createdAt": "2020-01-30T23:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxNTkyNQ=="}], "type": "inlineReview"}, {"oid": "3ff9b62db01cede6f382674eb1342022b13ee2ff", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3ff9b62db01cede6f382674eb1342022b13ee2ff", "message": "Merge branch 'master' into use-opentelemetry-api-directly", "committedDate": "2020-01-30T22:14:00Z", "type": "commit"}]}