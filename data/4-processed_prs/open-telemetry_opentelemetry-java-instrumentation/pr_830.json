{"pr_number": 830, "pr_title": "Update README config settings", "pr_createdAt": "2020-07-29T01:54:52Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/830", "timeline": [{"oid": "0a3e03f11b6130cb4cae501b4f1acec50cf9329e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0a3e03f11b6130cb4cae501b4f1acec50cf9329e", "message": "Update README config settings", "committedDate": "2020-07-29T01:52:45Z", "type": "commit"}, {"oid": "b1232e064473af010178744b21e8ce2b24e4f222", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b1232e064473af010178744b21e8ce2b24e4f222", "message": "Merge remote-tracking branch 'upstream/master' into update-readme-config-settings", "committedDate": "2020-07-29T21:17:42Z", "type": "commit"}, {"oid": "71d573a17cf22f1ae5c267990accd6ecf71f6d95", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/71d573a17cf22f1ae5c267990accd6ecf71f6d95", "message": "Fix Jaeger env var names", "committedDate": "2020-07-29T21:52:56Z", "type": "commit"}, {"oid": "193472ff75258a341595e1beaeb3f892c6469944", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/193472ff75258a341595e1beaeb3f892c6469944", "message": "Rename ota prefix to otel", "committedDate": "2020-07-30T21:09:33Z", "type": "commit"}, {"oid": "991f9b027bfff70b60ab60ed463f84d665d51589", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/991f9b027bfff70b60ab60ed463f84d665d51589", "message": "Merge remote-tracking branch 'upstream/master' into update-readme-config-settings", "committedDate": "2020-07-30T21:26:52Z", "type": "commit"}, {"oid": "129ccaa742a4518a7d71cfc2326fcfcba2609c42", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/129ccaa742a4518a7d71cfc2326fcfcba2609c42", "message": "Merge remote-tracking branch 'upstream/master' into update-readme-config-settings", "committedDate": "2020-07-30T22:35:37Z", "type": "commit"}, {"oid": "ec6b66f20529118804d4bd28670bb33d8640a2c1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ec6b66f20529118804d4bd28670bb33d8640a2c1", "message": "Merge remote-tracking branch 'upstream/master' into update-readme-config-settings", "committedDate": "2020-07-31T17:41:56Z", "type": "commit"}, {"oid": "a3cf054923bc524e1063170682c4600094c45557", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a3cf054923bc524e1063170682c4600094c45557", "message": "Add multi-propagator doc", "committedDate": "2020-07-31T17:48:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NTE4Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/830#discussion_r463755183", "bodyText": "I vaguely remember, that otel-java has their javadoc published somewhere. We can reference that.", "author": "iNikem", "createdAt": "2020-07-31T18:05:15Z", "path": "README.md", "diffHunk": "@@ -105,9 +105,12 @@ attributes to stdout. It is used mainly for testing and debugging.\n \n The propagator controls which distributed tracing header format is used.\n \n-| System property  | Environment variable | Purpose                                                                                 |\n-|------------------|----------------------|-----------------------------------------------------------------------------------------|\n-| otel.propagators | OTEL_PROPAGATORS     | Default is \"tracecontext\" (W3C). Other supported values are \"b3\", \"b3single\", \"jaeger\". |\n+If this is set to a comma-delimited list of the values, the multi-propagator will be used.\n+[TODO link to specification that explains multi-propagator behavior, see [tracking issue](https://github.com/open-telemetry/opentelemetry-specification/issues/496) for now]", "originalCommit": "a3cf054923bc524e1063170682c4600094c45557", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNjE4MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/830#discussion_r464706181", "bodyText": "I found the javadoc, but then decided just to include brief explanation here inline", "author": "trask", "createdAt": "2020-08-03T23:03:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NTE4Mw=="}], "type": "inlineReview"}, {"oid": "d23986042fdf952e222dcb4921f73771db006088", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d23986042fdf952e222dcb4921f73771db006088", "message": "Merge remote-tracking branch 'upstream/master' into update-readme-config-settings", "committedDate": "2020-08-03T22:39:03Z", "type": "commit"}, {"oid": "a5a1864e10ec8d9852ba451a9cf49e2f56641e26", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a5a1864e10ec8d9852ba451a9cf49e2f56641e26", "message": "Include multi-propagator explanation", "committedDate": "2020-08-03T23:02:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc5ODE4Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/830#discussion_r464798187", "bodyText": "Maybe just reference the javadoc of that class?", "author": "iNikem", "createdAt": "2020-08-04T04:53:10Z", "path": "README.md", "diffHunk": "@@ -96,27 +96,31 @@ to the OpenTelemetry Resource ([see below](#opentelemetry-resource)), e.g. `OTEL\n The logging exporter simply prints the name of the span along with its\n attributes to stdout. It is used mainly for testing and debugging.\n \n-| System property             | Environment variable        | Purpose                                                                      |\n-|-----------------------------|-----------------------------|------------------------------------------------------------------------------|\n-| ota.exporter=logging        | OTA_EXPORTER=logging        | To select logging exporter                                                   |\n-| ota.exporter.logging.prefix | OTA_EXPORTER_LOGGING_PREFIX | An optional string that is printed in front of the span name and attributes. |\n+| System property              | Environment variable         | Purpose                                                                      |\n+|------------------------------|------------------------------|------------------------------------------------------------------------------|\n+| otel.exporter=logging        | OTEL_EXPORTER=logging        | To select logging exporter                                                   |\n+| otel.exporter.logging.prefix | OTEL_EXPORTER_LOGGING_PREFIX | An optional string that is printed in front of the span name and attributes. |\n \n #### Propagator\n \n The propagator controls which distributed tracing header format is used.\n \n-| System property | Environment variable | Purpose                                                                                 |\n-|-----------------|----------------------|-----------------------------------------------------------------------------------------|\n-| ota.propagators | OTA_PROPAGATORS      | Default is \"tracecontext\" (W3C). Other supported values are \"b3\", \"b3single\", \"jaeger\". |\n+If this is set to a comma-delimited list of the values, the multi-propagator will be used.\n+The multi-propagator will try to extract the context from incoming requests using each of the configured propagator formats (in order), stopping after the first successful context extraction.", "originalCommit": "a5a1864e10ec8d9852ba451a9cf49e2f56641e26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgwMjMzNw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/830#discussion_r464802337", "bodyText": "I thought the text description was nice, and doesn't scare away Ops folks who are not java developers \ud83d\ude04", "author": "trask", "createdAt": "2020-08-04T05:08:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc5ODE4Nw=="}], "type": "inlineReview"}]}