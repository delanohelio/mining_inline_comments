{"pr_number": 569, "pr_title": "When loading exporter factories via SPI from an external jar, look only inside that jar, and not any parent classloader.", "pr_createdAt": "2020-06-23T18:36:11Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/569", "timeline": [{"oid": "b917477780ea9b728ec08183f9c306edf0d18980", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b917477780ea9b728ec08183f9c306edf0d18980", "message": "When loading exporter factories via SPI from an external jar, look only inside that jar, and not any parent classloader.", "committedDate": "2020-06-23T18:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MjEzNw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/569#discussion_r444452137", "bodyText": "\ud83d\udc4d", "author": "trask", "createdAt": "2020-06-23T19:19:18Z", "path": "agent-tooling/src/test/groovy/io/opentelemetry/auto/tooling/ExporterClassLoaderTest.groovy", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.opentelemetry.auto.tooling\n+\n+\n+import io.opentelemetry.sdk.contrib.auto.config.Config\n+import io.opentelemetry.sdk.contrib.auto.config.MetricExporterFactory\n+import io.opentelemetry.sdk.contrib.auto.config.SpanExporterFactory\n+import io.opentelemetry.sdk.metrics.export.MetricExporter\n+import io.opentelemetry.sdk.trace.export.SpanExporter\n+import java.nio.charset.StandardCharsets\n+import java.util.jar.JarEntry\n+import java.util.jar.JarOutputStream\n+import spock.lang.Specification\n+\n+class ExporterClassLoaderTest extends Specification {", "originalCommit": "b917477780ea9b728ec08183f9c306edf0d18980", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}