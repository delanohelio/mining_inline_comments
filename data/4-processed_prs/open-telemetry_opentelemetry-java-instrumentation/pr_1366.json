{"pr_number": 1366, "pr_title": "Add org.gradle.workers.max to gradle.properties", "pr_createdAt": "2020-10-09T20:11:57Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1366", "timeline": [{"oid": "cbc1057fd6438fa10b92539c21f13a8e425a1565", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cbc1057fd6438fa10b92539c21f13a8e425a1565", "message": "Add org.gradle.workers.max to gradle.properties", "committedDate": "2020-10-09T20:11:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MDIyMA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1366#discussion_r502750220", "bodyText": "Just for reference, I have 4 cores with hyperthreading, and max-workers of 4 works well since it ends up with 8 which is all my threads. This will end up with 6 workers if I'm not mistaken (build always adds 4 extra workers) - wonder if it works on a 4-core without hyperthreading machine.", "author": "anuraaga", "createdAt": "2020-10-10T05:42:21Z", "path": "gradle.properties", "diffHunk": "@@ -1,5 +1,9 @@\n org.gradle.parallel=true\n org.gradle.caching=true\n \n+# limiting the number of parallel workers helps to keep your machine responsive during builds\n+# see https://github.com/gradle/gradle/issues/14224\n+org.gradle.workers.max=2", "originalCommit": "cbc1057fd6438fa10b92539c21f13a8e425a1565", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}