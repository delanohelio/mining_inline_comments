{"pr_number": 833, "pr_title": "Add a bit in the README about the Deep Expression Operator", "pr_createdAt": "2020-05-26T16:32:19Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/833", "timeline": [{"oid": "dc5906fcf94c72b4428862e2a0e6fca4962e94a6", "url": "https://github.com/returntocorp/semgrep/commit/dc5906fcf94c72b4428862e2a0e6fca4962e94a6", "message": "Add a bit in the README about the Deep Expression Operator", "committedDate": "2020-05-26T16:31:42Z", "type": "commit"}, {"oid": "9d928d96a2cb220976c13aff878f219ef6adf90a", "url": "https://github.com/returntocorp/semgrep/commit/9d928d96a2cb220976c13aff878f219ef6adf90a", "message": "Move bit about deep expression operator to docs/pattern-features.md", "committedDate": "2020-05-27T01:19:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzODk1MA==", "url": "https://github.com/returntocorp/semgrep/pull/833#discussion_r430938950", "bodyText": "or more generally in any expression context.", "author": "aryx", "createdAt": "2020-05-27T08:18:29Z", "path": "docs/pattern-features.md", "diffHunk": "@@ -227,6 +228,29 @@ pattern: $X = 1 + 2 + ...\n foo = 1 + 2 + 3 + 4\n ```\n \n+### Deep Expression Operator\n+\n+You may want to match an expression that could be nested deep within another expression. An example of this is looking for a pattern anywhere within an if statement. To do this, use the deep expression operator: `<... [your_pattern] ...>`. This will match your pattern in the current expression context and recursively in any subexpressions.\n+\n+For example, this pattern:\n+\n+```yaml\n+if <... $USER.is_admin() ...>:\n+  ...\n+```\n+\n+will match:\n+\n+```python\n+if user.authenticated() and user.is_admin() and user.has_group(gid):\n+  ...\n+```\n+\n+The deep expression operator will work in:\n+* if statements -- `if <... $X ...>:`\n+* nested calls -- `sql.query(<... $X ...>)`\n+* operands of a binary expression -- `\"...\" + <... $X ...>`\n+", "originalCommit": "9d928d96a2cb220976c13aff878f219ef6adf90a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1OTg5OQ==", "url": "https://github.com/returntocorp/semgrep/pull/833#discussion_r431159899", "bodyText": "Good call! Maybe we can provide some more expression contexts where the deep expression operator works, then leave a bullet saying something like \"And any other expression context.\"\nMy concern is that your average engineer won't understand what \"expression context\" means. When I think about docs I try to target my language to something an average, entry-level engineer can understand. I've been thinking about semgrep as \"Static analysis, for everyone\" and we can target that with simplicity, open source, good docs, and self-service as some of our competitive advantages :)", "author": "mschwager", "createdAt": "2020-05-27T14:07:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzODk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1NDU1NA==", "url": "https://github.com/returntocorp/semgrep/pull/833#discussion_r431154554", "bodyText": "Nit: we can remove these changes.", "author": "mschwager", "createdAt": "2020-05-27T14:00:28Z", "path": "README.md", "diffHunk": "@@ -110,6 +110,8 @@ $FILE = open(...)\n will find all occurrences in your code where the result of an `open()` call is assigned\n to a variable.\n \n+", "originalCommit": "9d928d96a2cb220976c13aff878f219ef6adf90a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1NTkyMg==", "url": "https://github.com/returntocorp/semgrep/pull/833#discussion_r431155922", "bodyText": "Can we change this to the full pattern syntax? E.g.\npattern: |\n    if <... $USER.is_admin() ...>:\n        ...\nI think that will provide users with more context on where they would use this.", "author": "mschwager", "createdAt": "2020-05-27T14:02:21Z", "path": "docs/pattern-features.md", "diffHunk": "@@ -227,6 +228,29 @@ pattern: $X = 1 + 2 + ...\n foo = 1 + 2 + 3 + 4\n ```\n \n+### Deep Expression Operator\n+\n+You may want to match an expression that could be nested deep within another expression. An example of this is looking for a pattern anywhere within an if statement. To do this, use the deep expression operator: `<... [your_pattern] ...>`. This will match your pattern in the current expression context and recursively in any subexpressions.\n+\n+For example, this pattern:\n+\n+```yaml\n+if <... $USER.is_admin() ...>:", "originalCommit": "9d928d96a2cb220976c13aff878f219ef6adf90a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c7a939e4157b3c45906cd5660cdd3894c84df2ef", "url": "https://github.com/returntocorp/semgrep/commit/c7a939e4157b3c45906cd5660cdd3894c84df2ef", "message": "Minor nit changes", "committedDate": "2020-05-27T19:15:13Z", "type": "commit"}, {"oid": "ac8f226009b2f5b7cedcd029667a5d0e41841dc9", "url": "https://github.com/returntocorp/semgrep/commit/ac8f226009b2f5b7cedcd029667a5d0e41841dc9", "message": "Remove extra whitespace from README", "committedDate": "2020-05-28T16:41:39Z", "type": "commit"}]}