{"pr_number": 1030, "pr_title": "Fix parse error exit code", "pr_createdAt": "2020-06-16T17:10:24Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1030", "timeline": [{"oid": "e61fa823f7614df3e48e2712df6aa5ea02eb49c3", "url": "https://github.com/returntocorp/semgrep/commit/e61fa823f7614df3e48e2712df6aa5ea02eb49c3", "message": "Fix parse error exit code", "committedDate": "2020-06-16T17:14:52Z", "type": "commit"}, {"oid": "e61fa823f7614df3e48e2712df6aa5ea02eb49c3", "url": "https://github.com/returntocorp/semgrep/commit/e61fa823f7614df3e48e2712df6aa5ea02eb49c3", "message": "Fix parse error exit code", "committedDate": "2020-06-16T17:14:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDQzNg==", "url": "https://github.com/returntocorp/semgrep/pull/1030#discussion_r441014436", "bodyText": "Does something like \"unexpected JSON output: received error code, but no error messages while invoking semgrep-core\" make more sense?", "author": "mschwager", "createdAt": "2020-06-16T17:16:52Z", "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -275,19 +275,20 @@ def _run_rule(\n                 debug_print(core_run.stderr.decode(\"utf-8\", \"replace\"))\n \n                 if core_run.returncode != 0:\n+                    # see if semgrep output a JSON error that we can decode\n+                    semgrep_output = core_run.stdout.decode(\"utf-8\", \"replace\")\n                     try:\n-                        # see if semgrep output a JSON error that we can decode\n-                        semgrep_output = core_run.stdout.decode(\"utf-8\", \"replace\")\n                         output_json = json.loads(semgrep_output)\n-                        if \"error\" in output_json:\n-                            self._semgrep_error_json_to_message_then_exit(output_json)\n-                        else:\n-                            raise SemgrepError(\n-                                f\"unexpected non-json output while invoking semgrep-core:\\n{PLEASE_FILE_ISSUE_TEXT}\"\n-                            )\n-                    except Exception as e:\n+                    except ValueError:\n                         raise SemgrepError(\n-                            f\"non-zero return code while invoking semgrep-core:\\n\\t{e}\\n{PLEASE_FILE_ISSUE_TEXT}\"\n+                            f\"unexpected non-json output while invoking semgrep-core:\\n{PLEASE_FILE_ISSUE_TEXT}\"\n+                        )\n+\n+                    if \"error\" in output_json:\n+                        self._semgrep_error_json_to_message_then_exit(output_json)\n+                    else:\n+                        raise SemgrepError(\n+                            f\"unexpected json output while invoking semgrep-core:\\n{PLEASE_FILE_ISSUE_TEXT}\"", "originalCommit": "e61fa823f7614df3e48e2712df6aa5ea02eb49c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzExMg==", "url": "https://github.com/returntocorp/semgrep/pull/1030#discussion_r441017112", "bodyText": "to me that's more confusing? (since the audience is the end user). We'll know exactly where in the code this comes from if a user reports this bug", "author": "rcoh", "createdAt": "2020-06-16T17:21:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDQzNg=="}], "type": "inlineReview"}]}