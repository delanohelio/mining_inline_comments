{"pr_number": 1098, "pr_title": "Don't try to parse an inline pattern as YAML", "pr_createdAt": "2020-06-22T20:55:38Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1098", "timeline": [{"oid": "42fa70a17a68a5e586db149b2926889576ff224a", "url": "https://github.com/returntocorp/semgrep/commit/42fa70a17a68a5e586db149b2926889576ff224a", "message": "Don't try to parse an inline pattern as YAML", "committedDate": "2020-06-23T17:35:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4NDUwOA==", "url": "https://github.com/returntocorp/semgrep/pull/1098#discussion_r444484508", "bodyText": "Maybe be more clear in that it can't be parsed as a C semgrep pattern so the user doesnt get confused why a pattern is being parsed as code", "author": "brendongo", "createdAt": "2020-06-23T20:22:29Z", "path": "semgrep/tests/e2e/snapshots/test_rule_parser/test_rule_parser_cli_pattern/error.txt", "diffHunk": "@@ -0,0 +1,7 @@\n+error: invalid pattern\n+  --> CLI Input:1\n+1 | #include $X\n+  | ^^^^^^^^^^\n+\n+Pattern could not be parsed as C", "originalCommit": "42fa70a17a68a5e586db149b2926889576ff224a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4NDc5NQ==", "url": "https://github.com/returntocorp/semgrep/pull/1098#discussion_r444484795", "bodyText": "Should we just use a different pattern that is actually bad instead of one that might eventually work?", "author": "brendongo", "createdAt": "2020-06-23T20:23:03Z", "path": "semgrep/tests/e2e/test_rule_parser.py", "diffHunk": "@@ -43,3 +43,16 @@ def test_rule_parser__failure__error_messages(run_semgrep_in_tmp, snapshot, file\n \n     if excinfo_in_color.value.stderr != excinfo.value.stderr:\n         snapshot.assert_match(excinfo_in_color.value.stderr, \"error-in-color.txt\")\n+\n+\n+# https://github.com/returntocorp/semgrep/issues/1095\n+def test_rule_parser_cli_pattern(run_semgrep_in_tmp, snapshot):\n+    # This test should eventually pass once this pattern is handled by semgrep-core, but for now,\n+    # getting a proper error from semgrep-core is an improvement\n+    with pytest.raises(CalledProcessError) as excinfo:\n+        run_semgrep_in_tmp(options=[\"-e\", \"#include $X\", \"-l\", \"c\"])", "originalCommit": "42fa70a17a68a5e586db149b2926889576ff224a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a650730f83f54fd5fb76740b207d2c2c4efbc71f", "url": "https://github.com/returntocorp/semgrep/commit/a650730f83f54fd5fb76740b207d2c2c4efbc71f", "message": "Don't try to parse an inline pattern as YAML", "committedDate": "2020-06-24T18:19:46Z", "type": "commit"}, {"oid": "a650730f83f54fd5fb76740b207d2c2c4efbc71f", "url": "https://github.com/returntocorp/semgrep/commit/a650730f83f54fd5fb76740b207d2c2c4efbc71f", "message": "Don't try to parse an inline pattern as YAML", "committedDate": "2020-06-24T18:19:46Z", "type": "forcePushed"}, {"oid": "78d6e27782c7caae6565c3be24689932ae70f23e", "url": "https://github.com/returntocorp/semgrep/commit/78d6e27782c7caae6565c3be24689932ae70f23e", "message": "Update error message & tests", "committedDate": "2020-06-24T18:28:17Z", "type": "commit"}, {"oid": "78d6e27782c7caae6565c3be24689932ae70f23e", "url": "https://github.com/returntocorp/semgrep/commit/78d6e27782c7caae6565c3be24689932ae70f23e", "message": "Update error message & tests", "committedDate": "2020-06-24T18:28:17Z", "type": "forcePushed"}]}