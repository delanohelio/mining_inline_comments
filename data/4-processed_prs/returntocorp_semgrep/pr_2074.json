{"pr_number": 2074, "pr_title": "Allow ignoring findings with // nosemgrep", "pr_createdAt": "2020-11-18T11:11:04Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/2074", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjAwNDgzMg==", "url": "https://github.com/returntocorp/semgrep/pull/2074#discussion_r526004832", "bodyText": "", "author": "underyx", "createdAt": "2020-11-18T11:12:53Z", "path": "semgrep/tests/e2e/targets/basic/nosem.py", "diffHunk": "@@ -1,2 +1,6 @@\n test_nosem_func()  # nosem: rules.test-nosem\n+test_nosem_func()  # NOSEM: rules.test-nosem\n+test_nosem_func()  # nosemgrep: rules.test-nosem\n+test_nosem_func()  # NOSEMGREP\n+test_nosem_func()  # nOseMgREP: rules.test-nosem", "originalCommit": "ffeb58d2fe838acf2d32b0361cd4c038ac856c65", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5MzQzMg==", "url": "https://github.com/returntocorp/semgrep/pull/2074#discussion_r526193432", "bodyText": "Could make the user experience much less (potentially) frustrating by being more forgiving of whitespace here.\nWithout this change then //nosem:  some-rule-id (two spaces there) will be treated as just // nosem.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                r\" nosem(?:grep)?(?::[\\s]?(?P<ids>([^,\\s](?:[,\\s]+)?)+))?\",\n          \n          \n            \n                r\" nosem(?:grep)?(?::[\\s]*(?P<ids>([^,\\s](?:[,\\s]+)?)+))?\",", "author": "msorens", "createdAt": "2020-11-18T15:48:23Z", "path": "semgrep/semgrep/constants.py", "diffHunk": "@@ -46,17 +46,18 @@ def is_json(self) -> bool:\n NOSEM_INLINE_RE = re.compile(\n     # We're looking for items that look like this:\n     # ' nosem'\n-    # ' nosem: example-pattern-id'\n+    # ' nosemgrep: example-pattern-id'\n     # ' nosem: pattern-id1,pattern-id2'\n-    # ' NOSEM:pattern-id1,pattern-id2'\n+    # ' NOSEMGREP:pattern-id1,pattern-id2'\n     #\n     # * We do not want to capture the ': ' that follows 'nosem'\n     # * We do not care about the casing of 'nosem'\n     # * We want a comma-separated list of ids\n     # * We want multi-language support, so we cannot strictly look for\n     #   Python comments that begin with '# '\n+    # * nosem and nosemgrep should be interchangeable\n     #\n-    r\" nosem(?::[\\s]?(?P<ids>([^,\\s](?:[,\\s]+)?)+))?\",\n+    r\" nosem(?:grep)?(?::[\\s]?(?P<ids>([^,\\s](?:[,\\s]+)?)+))?\",", "originalCommit": "ffeb58d2fe838acf2d32b0361cd4c038ac856c65", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "370dd76d5420f79c79f48e264aa05defde915a72", "url": "https://github.com/returntocorp/semgrep/commit/370dd76d5420f79c79f48e264aa05defde915a72", "message": "Allow ignoring findings with // nosemgrep\n\nThe original keyword, nosem, isn't very easy to Google or understand if\nyou aren't yet aware of Semgrep.\n\nFor backwards compatibility, this commit doesn't remove the 'nosem'\nkeyword.\n\nThis change was tested by adding more lines to the basic/nosem.py test\ntarget and manually reading through the updated snapshots.", "committedDate": "2020-12-08T17:28:31Z", "type": "commit"}, {"oid": "370dd76d5420f79c79f48e264aa05defde915a72", "url": "https://github.com/returntocorp/semgrep/commit/370dd76d5420f79c79f48e264aa05defde915a72", "message": "Allow ignoring findings with // nosemgrep\n\nThe original keyword, nosem, isn't very easy to Google or understand if\nyou aren't yet aware of Semgrep.\n\nFor backwards compatibility, this commit doesn't remove the 'nosem'\nkeyword.\n\nThis change was tested by adding more lines to the basic/nosem.py test\ntarget and manually reading through the updated snapshots.", "committedDate": "2020-12-08T17:28:31Z", "type": "forcePushed"}]}