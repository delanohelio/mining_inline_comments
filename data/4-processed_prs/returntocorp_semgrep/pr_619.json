{"pr_number": 619, "pr_title": "Specify Equivalence Patterns in rule file", "pr_createdAt": "2020-04-30T01:38:36Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/619", "timeline": [{"oid": "e381121c7fdd0fdee33b1e639511e7246ba8ee77", "url": "https://github.com/returntocorp/semgrep/commit/e381121c7fdd0fdee33b1e639511e7246ba8ee77", "message": "WIP: Work in progress for wiring up equivalences in rule files to semgrep-core.\nThis is DEFINTELY A WORK IN PROGRESS, but it's sufficient enough to get started.\nFuture issues that will need to be worked on:\n1. (semgrep-core) Equivalences don't quite work like I would expect. I sort of thought it would replace the subtree when it found that pattern in parsed code. However, I have been running into the following issues:\n  1a. Only the first equivalence matches. If I specify several equivalences that should resolve to the same thing, only the first one works.\n  1b. Equivalences don't seem to resolve in bigger patterns. For example, doing:\n  '''\n  - equivalence: request.$W.get(...) <==> request.$W[...]\n  - pattern: |\n      $DATA = request.$W.get(...)\n      ...\n      return redirect(..., $DATA, ...)\n  '''\n  will not match:\n  '''\n  url = request[\"url\"]\n  ...\n  return redirect(url)\n  '''\n2. (semgrep) Because all the patterns get flattened, currently all the equivalences have to be flattened, too. This means we aggregate all the equivalences across all the rules and feed them to semgrep-core. This is fine for smaller rule sets but will no doubt cause issues when equivalences start stomping on each other accidentally...", "committedDate": "2020-04-30T00:02:37Z", "type": "commit"}, {"oid": "2a29db56a194ff43051cf1de3ae5f3aefe54389d", "url": "https://github.com/returntocorp/semgrep/commit/2a29db56a194ff43051cf1de3ae5f3aefe54389d", "message": "Remove stray print statements", "committedDate": "2020-04-30T01:03:54Z", "type": "commit"}, {"oid": "cf2398d5564371b33af5733cdd49acaee8fef5a2", "url": "https://github.com/returntocorp/semgrep/commit/cf2398d5564371b33af5733cdd49acaee8fef5a2", "message": "Added a test for equivalences", "committedDate": "2020-04-30T01:16:23Z", "type": "commit"}, {"oid": "eb2f4be622b2e2534f6e52e0bb2fa2a90c74112d", "url": "https://github.com/returntocorp/semgrep/commit/eb2f4be622b2e2534f6e52e0bb2fa2a90c74112d", "message": "Merge branch 'develop' into grh/wire-up-equivalences", "committedDate": "2020-04-30T21:32:38Z", "type": "commit"}, {"oid": "b5d195ee72a457df0d70669d551a7b76069c5a4c", "url": "https://github.com/returntocorp/semgrep/commit/b5d195ee72a457df0d70669d551a7b76069c5a4c", "message": "Fix typo", "committedDate": "2020-04-30T21:46:25Z", "type": "commit"}, {"oid": "d78f21bf10e98af271b5e10dcab5a5712ac10e8b", "url": "https://github.com/returntocorp/semgrep/commit/d78f21bf10e98af271b5e10dcab5a5712ac10e8b", "message": "Fix expected.txt for equivalence tests, probably due to auto-formatting", "committedDate": "2020-04-30T21:59:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1OTc3NA==", "url": "https://github.com/returntocorp/semgrep/pull/619#discussion_r418359774", "bodyText": "Do we want this to be in a separate file from the config?", "author": "brendongo", "createdAt": "2020-05-01T00:20:55Z", "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -134,6 +134,9 @@ def cli() -> None:\n         help=\"Apply the autofix patches. WARNING: data loss can occur with this flag. Make sure your files are stored in a version control system.\",\n         action=\"store_true\",\n     )\n+    output.add_argument(", "originalCommit": "d78f21bf10e98af271b5e10dcab5a5712ac10e8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MTc2Mw==", "url": "https://github.com/returntocorp/semgrep/pull/619#discussion_r418361763", "bodyText": "I don't think this is wired to anything so can probably do without a cli arg for now?", "author": "brendongo", "createdAt": "2020-05-01T00:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1OTc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MjE3MQ==", "url": "https://github.com/returntocorp/semgrep/pull/619#discussion_r418362171", "bodyText": "Oh, yeah, I forgot to remove it. \ud83d\ude05", "author": "minusworld", "createdAt": "2020-05-01T00:29:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1OTc3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MDY0MA==", "url": "https://github.com/returntocorp/semgrep/pull/619#discussion_r418360640", "bodyText": "Can we use with context similar to line 143 below? So we dont have to remember to close.", "author": "brendongo", "createdAt": "2020-05-01T00:24:22Z", "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -95,6 +118,25 @@ def _run_rules(\n         outputs: List[PatternMatch] = []  # multiple invocations per language\n         errors: List[Any] = []\n \n+        # This will need to be addressed in the future. Since we flatten all the patterns,\n+        # there's no way to tell semgrep which equivalences apply to which rules.\n+        # So, my approach here is a naive implementation which likewise flattens all equivalences...\n+        # Here there be dragons.... :-(\n+        #  .>   )\\;`a__\n+        # (  _ _)/ /-.\" ~~\n+        #  `( )_ )/\n+        #   <_  <_ sb/dwb\n+        equivalences = self._flatten_all_equivalences(rules)\n+        if equivalences:\n+            equiv_fout = tempfile.NamedTemporaryFile(\"w\")", "originalCommit": "d78f21bf10e98af271b5e10dcab5a5712ac10e8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MjQxNA==", "url": "https://github.com/returntocorp/semgrep/pull/619#discussion_r418362414", "bodyText": "Sure; I went with this method because I thought it would be easier to read than two separate with contexts. I'll fix it up.", "author": "minusworld", "createdAt": "2020-05-01T00:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MDY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MTMyMQ==", "url": "https://github.com/returntocorp/semgrep/pull/619#discussion_r418361321", "bodyText": "Would it make more sense for this to return a list of Equivalence objects?", "author": "brendongo", "createdAt": "2020-05-01T00:27:09Z", "path": "semgrep/semgrep/rule.py", "diffHunk": "@@ -129,6 +129,10 @@ def expression(self) -> BooleanRuleExpression:\n     def fix(self) -> Optional[str]:\n         return self._raw.get(\"fix\")\n \n+    @property\n+    def equivalences(self) -> Dict[str, str]:", "originalCommit": "d78f21bf10e98af271b5e10dcab5a5712ac10e8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MjgxNA==", "url": "https://github.com/returntocorp/semgrep/pull/619#discussion_r418362814", "bodyText": "Probably. I mimicked how it's done for Pattern; which means they don't actually turn into Equivalences until later on. I'll give it another look over to see if it makes sense to use Equivalences here", "author": "minusworld", "createdAt": "2020-05-01T00:31:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2MTMyMQ=="}], "type": "inlineReview"}, {"oid": "843c00db10daf6014e69bf94d13f901e14761bc5", "url": "https://github.com/returntocorp/semgrep/commit/843c00db10daf6014e69bf94d13f901e14761bc5", "message": "Removed --equivalences command line option, since they are specified in the rule file themselves now", "committedDate": "2020-05-01T17:24:51Z", "type": "commit"}, {"oid": "817a451fc4d486c5f16be5352810d0f6258a98eb", "url": "https://github.com/returntocorp/semgrep/commit/817a451fc4d486c5f16be5352810d0f6258a98eb", "message": "Switching from using open/close pattern for equivalences file to with context. Switched equivalences property in Rule to return List[Equivalence] and moved the logic for transforming the raw data into this list into the Rule class.", "committedDate": "2020-05-01T17:45:04Z", "type": "commit"}]}