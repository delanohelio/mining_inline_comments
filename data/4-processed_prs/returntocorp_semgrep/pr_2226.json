{"pr_number": 2226, "pr_title": "Prim expr", "pr_createdAt": "2020-12-09T22:52:51Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/2226", "timeline": [{"oid": "ca10b64f66800a103e29efae18de29c2c99ca5ec", "url": "https://github.com/returntocorp/semgrep/commit/ca10b64f66800a103e29efae18de29c2c99ca5ec", "message": "fixing metavar_anno js code that couldn't be fully parsed", "committedDate": "2020-12-04T00:03:26Z", "type": "commit"}, {"oid": "09dd7910912088568a8354e37ac6a3874d69ab18", "url": "https://github.com/returntocorp/semgrep/commit/09dd7910912088568a8354e37ac6a3874d69ab18", "message": "Merge branch 'develop' of github.com:returntocorp/semgrep into develop", "committedDate": "2020-12-05T00:23:34Z", "type": "commit"}, {"oid": "657c1a82972a55af4dc361840bf7d8908b94e72b", "url": "https://github.com/returntocorp/semgrep/commit/657c1a82972a55af4dc361840bf7d8908b94e72b", "message": "type changes", "committedDate": "2020-12-05T00:26:14Z", "type": "commit"}, {"oid": "f0ec6f0e916d585d0c5cad8bbda5e66a2f6a6e12", "url": "https://github.com/returntocorp/semgrep/commit/f0ec6f0e916d585d0c5cad8bbda5e66a2f6a6e12", "message": "Merge branch 'develop' of github.com:returntocorp/semgrep into develop", "committedDate": "2020-12-09T00:07:59Z", "type": "commit"}, {"oid": "5bcb1584c2cd8ee56e3c361a7c278ef9976cdd88", "url": "https://github.com/returntocorp/semgrep/commit/5bcb1584c2cd8ee56e3c361a7c278ef9976cdd88", "message": "Merge branch 'develop' of github.com:returntocorp/semgrep into develop", "committedDate": "2020-12-09T22:47:07Z", "type": "commit"}, {"oid": "5e855f31ecd74eb25b0aa73344501b7d998d6456", "url": "https://github.com/returntocorp/semgrep/commit/5e855f31ecd74eb25b0aa73344501b7d998d6456", "message": "basic support for kotlin primary expressions", "committedDate": "2020-12-09T22:47:59Z", "type": "commit"}, {"oid": "632e0c9e20533068401928bb0f907dca083801f5", "url": "https://github.com/returntocorp/semgrep/commit/632e0c9e20533068401928bb0f907dca083801f5", "message": "getting rid of extra file", "committedDate": "2020-12-09T22:54:27Z", "type": "commit"}, {"oid": "390203a907a2026b8bd639c6e54ccabf3e38fc05", "url": "https://github.com/returntocorp/semgrep/commit/390203a907a2026b8bd639c6e54ccabf3e38fc05", "message": "adding little fixes", "committedDate": "2020-12-09T23:01:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTczMjA5OQ==", "url": "https://github.com/returntocorp/semgrep/pull/2226#discussion_r539732099", "bodyText": "Note that you don't need parentheses around v2. It's more idiomatic to write:\n(v1, Some v2)", "author": "mjambon", "createdAt": "2020-12-09T23:43:05Z", "path": "semgrep-core/parsing/Parse_kotlin_tree_sitter.ml", "diffHunk": "@@ -355,7 +355,7 @@ let line_string_content (env : env) (x : CST.line_string_content) =\n let return_at (env : env) ((v1, v2) : CST.return_at) =\n   let v1 = token env v1 (* \"return@\" *) in\n   let v2 = simple_identifier env v2 in\n-  todo env (v1, v2)\n+  (v1, Some(v2))", "originalCommit": "390203a907a2026b8bd639c6e54ccabf3e38fc05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzMzQwNQ==", "url": "https://github.com/returntocorp/semgrep/pull/2226#discussion_r540333405", "bodyText": "ah, got it -- good catch! I'll fix this in my next push \ud83d\udc4d", "author": "colleend", "createdAt": "2020-12-10T16:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTczMjA5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3MzQ1Ng==", "url": "https://github.com/returntocorp/semgrep/pull/2226#discussion_r539873456", "bodyText": "maybe you can use Conditional instead, but it accepts 3 expressions.", "author": "aryx", "createdAt": "2020-12-10T06:08:43Z", "path": "semgrep-core/parsing/Parse_kotlin_tree_sitter.ml", "diffHunk": "@@ -1432,41 +1465,47 @@ and primary_expression (env : env) (x : CST.primary_expression) : expr =\n        let v4 = token env v4 (* \")\" *) in\n        let v5 =\n          (match v5 with\n-          | `Cont_stru_body x -> control_structure_body env x\n-          | `SEMI tok -> token_todo env tok (* \";\" *)\n+          | `Cont_stru_body x ->\n+              let v1 = control_structure_body env x in\n+              (v1, None)\n+          | `SEMI tok ->\n+              token_todo env tok (* \";\" *)\n           | `Opt_cont_stru_body_opt_SEMI_else_choice_cont_stru_body (v1, v2, v3, v4) ->\n               let v1 =\n                 (match v1 with\n                  | Some x -> control_structure_body env x\n                  | None -> todo env ())\n               in\n-              let v2 =\n+              (*let v2 =\n                 (match v2 with\n                  | Some tok -> token env tok (* \";\" *)\n                  | None -> todo env ())\n-              in\n+                in*)\n               let v3 = token env v3 (* \"else\" *) in\n               let v4 =\n                 (match v4 with\n                  | `Cont_stru_body x -> control_structure_body env x\n                  | `SEMI tok -> token_todo env tok (* \";\" *)\n                 )\n               in\n-              todo env (v1, v2, v3, v4)\n+              (v1, Some(v4))\n          )\n        in\n-       todo env (v1, v2, v3, v4, v5)\n+       let (v6, v7) = v5 in\n+       let if_stmt = If (v1, v3, v6, v7) in\n+       OtherExpr (OE_StmtExpr, [S if_stmt])", "originalCommit": "390203a907a2026b8bd639c6e54ccabf3e38fc05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzNTUyMg==", "url": "https://github.com/returntocorp/semgrep/pull/2226#discussion_r540335522", "bodyText": "ah yes -- the 3 expressions part is difficult because v5 returns a statement \ud83d\ude22", "author": "colleend", "createdAt": "2020-12-10T16:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3MzQ1Ng=="}], "type": "inlineReview"}]}