{"pr_number": 1488, "pr_title": "minor readme fixes", "pr_createdAt": "2020-08-11T17:58:54Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1488", "timeline": [{"oid": "081036f98635af02e8d2f0ed8c1af31ab807d73f", "url": "https://github.com/returntocorp/semgrep/commit/081036f98635af02e8d2f0ed8c1af31ab807d73f", "message": "minor readme fixes", "committedDate": "2020-08-11T17:58:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3MTIzNQ==", "url": "https://github.com/returntocorp/semgrep/pull/1488#discussion_r468771235", "bodyText": "I don't think we want to use backticks here. In bash this is equivalent to invoking a subshell (same as $(...)). E.g. this gives me:\n$ python -m semgrep -e `$X == $X` --lang=python tests/\n==: command not found\n\nThis should be:\n$ semgrep -e '$X == $X' --lang=py path/to/src", "author": "mschwager", "createdAt": "2020-08-11T18:12:21Z", "path": "README.md", "diffHunk": "@@ -83,7 +83,7 @@ Once installed, Semgrep can be run with single rule patterns or entire rule pack\n \n ```sh\n # Check for Python == where the left and right hand sides are the same (often a bug)\n-$ semgrep -e `$X==$X` --lang=py path/to/src\n+$ semgrep -e `$X == $X` --lang=py path/to/src", "originalCommit": "081036f98635af02e8d2f0ed8c1af31ab807d73f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgzODIzMg==", "url": "https://github.com/returntocorp/semgrep/pull/1488#discussion_r468838232", "bodyText": "Good catch (it's present in develop right now but I'll fix it with this PR)", "author": "ievans", "createdAt": "2020-08-11T20:15:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3MTIzNQ=="}], "type": "inlineReview"}, {"oid": "399aab2b1d3029adea337bbf36b81a830dc15951", "url": "https://github.com/returntocorp/semgrep/commit/399aab2b1d3029adea337bbf36b81a830dc15951", "message": "Update README.md", "committedDate": "2020-08-11T20:15:24Z", "type": "commit"}]}