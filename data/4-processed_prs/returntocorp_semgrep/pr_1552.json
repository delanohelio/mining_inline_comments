{"pr_number": 1552, "pr_title": "No weird tree sitter output", "pr_createdAt": "2020-08-20T18:32:50Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1552", "timeline": [{"oid": "53a53e47b981f5f4a8593b4ae0eb4441249e4002", "url": "https://github.com/returntocorp/semgrep/commit/53a53e47b981f5f4a8593b4ae0eb4441249e4002", "message": "Prevent tree-sitter failures from breaking JSON output\n\nThis commit prevents this in two ways:\n1. Hides pr2-based debugging output on parse failures (we should\n   re-enable this under a debug flag later).\n2. Does not fall-back to tree-sitter parsing for JavaScript specifically\n   (tree-sitter for js is not complete).", "committedDate": "2020-08-20T18:29:22Z", "type": "commit"}, {"oid": "10a86cb8111e1b4e945c55e555f6c2a920d9ee94", "url": "https://github.com/returntocorp/semgrep/commit/10a86cb8111e1b4e945c55e555f6c2a920d9ee94", "message": "Make immune to non-JSON core output", "committedDate": "2020-08-20T18:31:34Z", "type": "commit"}, {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9", "url": "https://github.com/returntocorp/semgrep/commit/2436f382e54aaa04c099800d3dad5cf24b887ba9", "message": "Merge branch 'develop' into nathan/no-weird-tree-sitter-output", "committedDate": "2020-08-20T18:33:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5MzQ4OQ==", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474193489", "bodyText": "do we need to comment this out?", "author": "colleend", "createdAt": "2020-08-20T18:39:04Z", "path": "semgrep-core/parsing/Parse_javascript_tree_sitter.ml", "diffHunk": "@@ -1758,10 +1758,13 @@ let parse file =\n     program env ast\n   with\n     (Failure \"not implemented\") as exn ->\n-      let s = Printexc.get_backtrace () in\n-      pr2 \"Some constructs are not handled yet\";\n-      pr2 \"CST was:\";\n-      CST.dump_tree ast;\n-      pr2 \"Original backtrace:\";\n-      pr2 s;\n+      (* This debugging output is not JSON and breaks core output", "originalCommit": "2436f382e54aaa04c099800d3dad5cf24b887ba9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NzUxMg==", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474197512", "bodyText": "But it is printed on stderr. It should not matter. The json is printed on stdout", "author": "aryx", "createdAt": "2020-08-20T18:46:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5MzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5ODM3MA==", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474198370", "bodyText": "Commenting it out fixes the bug, so \ud83e\udd37", "author": "nbrahms", "createdAt": "2020-08-20T18:47:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5MzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI1NjQ1Mw==", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474256453", "bodyText": "@aryx when you get back to it, you probably should check if by any chance semgrep merges semgrep-core's stderr into stdout.", "author": "mjambon", "createdAt": "2020-08-20T20:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5MzQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ==", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474196895", "bodyText": "We want to try treesitter if there is any exn in the pfff parser (lexer exn, parse error) or when we have -forcetreesitter", "author": "aryx", "createdAt": "2020-08-20T18:44:55Z", "path": "semgrep-core/parsing/Parse_code.ml", "diffHunk": "@@ -76,7 +78,7 @@ let just_parse_with_lang lang file =\n               Ast_js_build.program cst\n             )\n             file\n-        with _exn -> Parse_javascript_tree_sitter.parse file\n+        with ForceTreeSitter -> Parse_javascript_tree_sitter.parse file", "originalCommit": "2436f382e54aaa04c099800d3dad5cf24b887ba9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NzExOQ==", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474197119", "bodyText": "So it should remain _exn here", "author": "aryx", "createdAt": "2020-08-20T18:45:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwMTg5NA==", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474201894", "bodyText": "You and @mjambon disagree here...", "author": "nbrahms", "createdAt": "2020-08-20T18:54:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMzY1NA==", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474213654", "bodyText": "I suggest being explicit about the two meanings here:\n\nis it a force_tree_sitter request?\nis it an error and we're falling back to the tree-sitter parser?\n\nI also suggest printing any exception caught with a catch-all (_exn) so we know what went wrong.", "author": "mjambon", "createdAt": "2020-08-20T19:17:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ2ODMxNg==", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474468316", "bodyText": "The idea is to not print what went wrong when the error is a parse error in the pfff parser.\nWe should not bother the user with that. We first try with pfff, and if it fails we try with tree-sitter (or the reverse, it depends on the language).\nBut I'll change the option to -tree_sitter_only, maybe it's clearer.", "author": "aryx", "createdAt": "2020-08-21T07:28:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ=="}], "type": "inlineReview"}]}