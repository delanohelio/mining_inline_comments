{"pr_number": 419, "pr_title": "Add CHANGELOG.md", "pr_createdAt": "2020-04-09T00:11:14Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/419", "timeline": [{"oid": "8ce16710d6be70fc16f7ac88b20d865da3d55508", "url": "https://github.com/returntocorp/semgrep/commit/8ce16710d6be70fc16f7ac88b20d865da3d55508", "message": "Add CHANGELOG.md", "committedDate": "2020-04-09T00:10:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4NzA2MQ==", "url": "https://github.com/returntocorp/semgrep/pull/419#discussion_r405887061", "bodyText": "I'm not sure this works https://sgrep.live/ROq\n#326\n#347", "author": "brendongo", "createdAt": "2020-04-09T00:17:10Z", "path": "CHANGELOG.md", "diffHunk": "@@ -0,0 +1,155 @@\n+# Changelog\n+\n+This project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n+\n+## [0.4.9]() - 2019-10-23\n+\n+### Changed\n+\n+- Only print out number of configs and rules when running with verbose flag\n+- Match let and const to var in javascript:\n+    ```\n+    var $F = \"hello\"\n+    ```\n+    will now match any of the following expressions:\n+    ```javascript\n+    var foo = \"hello\";\n+    let bar = \"hello\";\n+    const baz = \"hello\";\n+    ```\n+\n+### Added\n+\n+- Print out --dump-ast\n+- Print out version with `--version`\n+- Allow ... in arrays\n+    ```\n+    [..., 1]\n+    ```\n+    will now match\n+    ```\n+    [3, 2, 1]\n+    ```\n+- Support Metavariable match on keyword arguments in python:\n+    ```\n+    foo(..., $K=$B, ...)\n+    ```\n+    will now match\n+    ```\n+    foo(1, 2, bar=baz, 3)\n+    ```\n+- Support python fstring variable substitution", "originalCommit": "8ce16710d6be70fc16f7ac88b20d865da3d55508", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ0OTkwMg==", "url": "https://github.com/returntocorp/semgrep/pull/419#discussion_r406449902", "bodyText": "Apparently, when you do have multiple statements in the file that matches the pattern, the sgrep.live is misleading and show the entire list of statements as matching.\n@aryx  told me that\n\nit\u2019s because of the way sequence matching work\nit would just say the whole seqence of stmts match\nput each test in a separate function\n\nSee https://sgrep.live/eG8, which puts each of those cases in a function to have independent matching test( which the test files in #347 precisely does)", "author": "ulziibay", "createdAt": "2020-04-09T20:11:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4NzA2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ2NjI5OA==", "url": "https://github.com/returntocorp/semgrep/pull/419#discussion_r406466298", "bodyText": "Oh thanks!", "author": "brendongo", "createdAt": "2020-04-09T20:44:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4NzA2MQ=="}], "type": "inlineReview"}, {"oid": "f404008191566dab7f112cafa1ba92ee08b0777a", "url": "https://github.com/returntocorp/semgrep/commit/f404008191566dab7f112cafa1ba92ee08b0777a", "message": "fixup! Add CHANGELOG.md", "committedDate": "2020-04-09T00:22:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4OTIwOQ==", "url": "https://github.com/returntocorp/semgrep/pull/419#discussion_r405889209", "bodyText": "Not sure how to succinctly describe deep statement matching", "author": "brendongo", "createdAt": "2020-04-09T00:25:12Z", "path": "CHANGELOG.md", "diffHunk": "@@ -0,0 +1,172 @@\n+# Changelog\n+\n+This project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n+\n+## [0.4.9]() - 2019-10-23\n+\n+### Changed\n+\n+- Only print out number of configs and rules when running with verbose flag\n+- Match let and const to var in javascript:\n+    ```\n+    var $F = \"hello\"\n+    ```\n+    will now match any of the following expressions:\n+    ```javascript\n+    var foo = \"hello\";\n+    let bar = \"hello\";\n+    const baz = \"hello\";\n+    ```\n+\n+### Added\n+\n+- Print out --dump-ast\n+- Print out version with `--version`\n+- Allow ... in arrays\n+    ```\n+    [..., 1]\n+    ```\n+    will now match\n+    ```\n+    [3, 2, 1]\n+    ```\n+- Support Metavariable match on keyword arguments in python:\n+    ```\n+    foo(..., $K=$B, ...)\n+    ```\n+    will now match\n+    ```\n+    foo(1, 2, bar=baz, 3)\n+    ```\n+- Support python fstring variable substitution\n+- Constant propogation in javascript:\n+    ```\n+    api(\"literal\");\n+    ```\n+    will now match with any of the following:\n+    ```javascript\n+    api(\"literal\");\n+\n+    const LITERAL = \"literal\";\n+    api(LITERAL);\n+\n+    const LIT = \"lit\";\n+    api(LIT + \"eral\");\n+\n+    const LIT = \"lit\";\n+    api(`${LIT}eral`);\n+    ```\n+\n+- Deep statement matching", "originalCommit": "f404008191566dab7f112cafa1ba92ee08b0777a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1MTYxMQ==", "url": "https://github.com/returntocorp/semgrep/pull/419#discussion_r406451611", "bodyText": "Fully recursive pattern matching for statements", "author": "ulziibay", "createdAt": "2020-04-09T20:14:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4OTIwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4OTMzMg==", "url": "https://github.com/returntocorp/semgrep/pull/419#discussion_r405889332", "bodyText": "I'm don't really understand the change here #288", "author": "brendongo", "createdAt": "2020-04-09T00:25:40Z", "path": "CHANGELOG.md", "diffHunk": "@@ -0,0 +1,172 @@\n+# Changelog\n+\n+This project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n+\n+## [0.4.9]() - 2019-10-23\n+\n+### Changed\n+\n+- Only print out number of configs and rules when running with verbose flag\n+- Match let and const to var in javascript:\n+    ```\n+    var $F = \"hello\"\n+    ```\n+    will now match any of the following expressions:\n+    ```javascript\n+    var foo = \"hello\";\n+    let bar = \"hello\";\n+    const baz = \"hello\";\n+    ```\n+\n+### Added\n+\n+- Print out --dump-ast\n+- Print out version with `--version`\n+- Allow ... in arrays\n+    ```\n+    [..., 1]\n+    ```\n+    will now match\n+    ```\n+    [3, 2, 1]\n+    ```\n+- Support Metavariable match on keyword arguments in python:\n+    ```\n+    foo(..., $K=$B, ...)\n+    ```\n+    will now match\n+    ```\n+    foo(1, 2, bar=baz, 3)\n+    ```\n+- Support python fstring variable substitution\n+- Constant propogation in javascript:\n+    ```\n+    api(\"literal\");\n+    ```\n+    will now match with any of the following:\n+    ```javascript\n+    api(\"literal\");\n+\n+    const LITERAL = \"literal\";\n+    api(LITERAL);\n+\n+    const LIT = \"lit\";\n+    api(LIT + \"eral\");\n+\n+    const LIT = \"lit\";\n+    api(`${LIT}eral`);\n+    ```\n+\n+- Deep statement matching\n+- Unified import resolution in python:\n+    ```\n+    import foo.bar.baz\n+    ```\n+\n+    will not match any of the following statements:\n+\n+    ```python\n+    import foo.bar.baz\n+    import foo.bar.baz.qux\n+    import foo.bar.baz as flob\n+    import foo.bar.baz.qux as flob\n+    from foo.bar import baz\n+    from foo.bar.baz import qux\n+    from foo.bar import baz as flob\n+    from foo.bar.bax import qux as flob\n+    ```\n+- Support lambda expressions in javascript #288", "originalCommit": "f404008191566dab7f112cafa1ba92ee08b0777a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1MTMwMg==", "url": "https://github.com/returntocorp/semgrep/pull/419#discussion_r406451302", "bodyText": "Support for anonymous JavaScript functions in patterns", "author": "ulziibay", "createdAt": "2020-04-09T20:13:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4OTMzMg=="}], "type": "inlineReview"}, {"oid": "fd96dd26ad0dbf3b29bf076203834fdd1a6529b3", "url": "https://github.com/returntocorp/semgrep/commit/fd96dd26ad0dbf3b29bf076203834fdd1a6529b3", "message": "fixup! Add CHANGELOG.md", "committedDate": "2020-04-09T00:29:29Z", "type": "commit"}, {"oid": "8eaa06228e61498502a109f8a5842592d29fa54b", "url": "https://github.com/returntocorp/semgrep/commit/8eaa06228e61498502a109f8a5842592d29fa54b", "message": "fixup! Add CHANGELOG.md", "committedDate": "2020-04-09T20:47:02Z", "type": "commit"}, {"oid": "7a14f2cca80ec3f6a3dc1a0e1f639deba9afb360", "url": "https://github.com/returntocorp/semgrep/commit/7a14f2cca80ec3f6a3dc1a0e1f639deba9afb360", "message": "fixup! Add CHANGELOG.md", "committedDate": "2020-04-09T20:49:58Z", "type": "commit"}, {"oid": "4c2de91d14350e416e24969327518b8cf44b682f", "url": "https://github.com/returntocorp/semgrep/commit/4c2de91d14350e416e24969327518b8cf44b682f", "message": "fixup! Add CHANGELOG.md", "committedDate": "2020-04-09T22:37:40Z", "type": "commit"}, {"oid": "4c2de91d14350e416e24969327518b8cf44b682f", "url": "https://github.com/returntocorp/semgrep/commit/4c2de91d14350e416e24969327518b8cf44b682f", "message": "fixup! Add CHANGELOG.md", "committedDate": "2020-04-09T22:37:40Z", "type": "forcePushed"}]}