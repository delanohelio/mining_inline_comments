{"pr_number": 483, "pr_title": "sgrep_lint: Support path includes/excludes in rule files", "pr_createdAt": "2020-04-16T12:54:09Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/483", "timeline": [{"oid": "291496075903c50a52a64ec542dfce229415ead9", "url": "https://github.com/returntocorp/semgrep/commit/291496075903c50a52a64ec542dfce229415ead9", "message": "sgrep_lint: Support path includes/excludes in rule files\n\nCloses https://github.com/returntocorp/enterprise/issues/70", "committedDate": "2020-04-16T12:58:16Z", "type": "forcePushed"}, {"oid": "31d504dbbabd43c89cdb21d9a5a6bef2399d9c21", "url": "https://github.com/returntocorp/semgrep/commit/31d504dbbabd43c89cdb21d9a5a6bef2399d9c21", "message": "sgrep_lint: Support path includes/excludes in rule files\n\nCloses https://github.com/returntocorp/enterprise/issues/70", "committedDate": "2020-04-16T12:59:58Z", "type": "forcePushed"}, {"oid": "dd74e970b806f7ce1dccc5149b65fb484c011887", "url": "https://github.com/returntocorp/semgrep/commit/dd74e970b806f7ce1dccc5149b65fb484c011887", "message": "sgrep_lint: Support path includes/excludes in rule files\n\nCloses https://github.com/returntocorp/enterprise/issues/70", "committedDate": "2020-04-16T13:01:23Z", "type": "forcePushed"}, {"oid": "d362d70345e00118fca66dca17d3e78e0dc7558b", "url": "https://github.com/returntocorp/semgrep/commit/d362d70345e00118fca66dca17d3e78e0dc7558b", "message": "sgrep_lint: Support path includes/excludes in rule files\n\nCloses https://github.com/returntocorp/enterprise/issues/70", "committedDate": "2020-04-16T13:04:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MjQwMg==", "url": "https://github.com/returntocorp/semgrep/pull/483#discussion_r409662402", "bodyText": "@underyx Thank you for the documentation! Did you consider keys like exclude or include-only, similar to Zulip's existing terminology and syntax? See https://github.com/zulip/zulip/blob/master/tools/linter_lib/custom_check.py#L7-L13\nSimilarly, did you consider and decide against accepting a list of paths?\npaths:\n   exclude: [\"*.jinja2\", \"_test.go\"]\nI don't have terribly strong opinion and am just exploring thought process above.", "author": "dlukeomalley", "createdAt": "2020-04-16T15:48:12Z", "path": "docs/config/advanced.md", "diffHunk": "@@ -82,14 +82,74 @@ Filters: there are several operators that act as filters to remove results you d\n \n - `fix` allows for an expression to be displayed to the user as the suggested autofix. Can be applied with `--autofix`\n \n+## Path Filtering\n+\n+### Excluding a Rule in Paths\n+\n+To ignore a specific rule on specific files, set a `paths:` key with one or more filters like so:\n+\n+```yaml\n+rules:\n+  - id: eqeq-is-bad\n+    pattern: $X == $X\n+    paths:", "originalCommit": "d362d70345e00118fca66dca17d3e78e0dc7558b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0NzgxOQ==", "url": "https://github.com/returntocorp/semgrep/pull/483#discussion_r409747819", "bodyText": "Yep, I decided against.\n\nWhichever we choose, customers will have to figure out the intricacies of the config syntax, such as whether items in a list are AND or OR-concatenated. Thought it'd be nice if we save a couple brain cycles for users by just reusing the exact same concepts as for patterns. Although paths is more limited currently and doesn't support stuff like path-either, which might be surprising.\nBeing able to specify a filename-not vs. path-not is useful when you don't want to figure out the implementation details of the glob matching, such as how you match all python files in the root of the repo, or all python files in all subdirectories. with the simple exclude list you'd need to know to write **/*.py.\n\nWith all that said, I'm only 60% sure about this.", "author": "underyx", "createdAt": "2020-04-16T18:01:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MjQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NTI2MQ==", "url": "https://github.com/returntocorp/semgrep/pull/483#discussion_r409785261", "bodyText": "fwiw having an exclude or include list is a pretty common pattern in many tools and it's pretty understood that if any file matches an item in an exclude list it is ignored.", "author": "brendongo", "createdAt": "2020-04-16T19:06:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MjQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NTg4Mg==", "url": "https://github.com/returntocorp/semgrep/pull/483#discussion_r409785882", "bodyText": "Right, that was a bad example to mention. Should I change the config syntax?", "author": "underyx", "createdAt": "2020-04-16T19:07:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MjQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NzYyMw==", "url": "https://github.com/returntocorp/semgrep/pull/483#discussion_r409787623", "bodyText": "but since this is experimental anyway ill leave up to you and @DrewDennison", "author": "brendongo", "createdAt": "2020-04-16T19:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MjQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc3OTIxMg==", "url": "https://github.com/returntocorp/semgrep/pull/483#discussion_r409779212", "bodyText": "Just a heads up, I've also been iterating on the docs here: #476. This will probably require some merging at some point.", "author": "mschwager", "createdAt": "2020-04-16T18:54:55Z", "path": "docs/config/advanced.md", "diffHunk": "@@ -82,14 +82,74 @@ Filters: there are several operators that act as filters to remove results you d\n \n - `fix` allows for an expression to be displayed to the user as the suggested autofix. Can be applied with `--autofix`\n \n+## Path Filtering", "originalCommit": "d362d70345e00118fca66dca17d3e78e0dc7558b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4Mzk0OQ==", "url": "https://github.com/returntocorp/semgrep/pull/483#discussion_r409783949", "bodyText": "This is on experimental branch and for now no plans to merge it into develop fwiw @mschwager", "author": "brendongo", "createdAt": "2020-04-16T19:03:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc3OTIxMg=="}], "type": "inlineReview"}, {"oid": "eaf1a622dd856e98ba57477557c0578034ff0346", "url": "https://github.com/returntocorp/semgrep/commit/eaf1a622dd856e98ba57477557c0578034ff0346", "message": "sgrep_lint: Support path includes/excludes in rule files\n\nCloses https://github.com/returntocorp/enterprise/issues/70", "committedDate": "2020-04-17T19:42:25Z", "type": "forcePushed"}, {"oid": "775a1fdd7b403cb39174b446867b83b59707c47d", "url": "https://github.com/returntocorp/semgrep/commit/775a1fdd7b403cb39174b446867b83b59707c47d", "message": "sgrep_lint: Support path includes/excludes in rule files\n\nCloses https://github.com/returntocorp/enterprise/issues/70", "committedDate": "2020-04-17T19:43:22Z", "type": "forcePushed"}, {"oid": "4c6e2438993ab15a463bf48a8025b6a91eac2790", "url": "https://github.com/returntocorp/semgrep/commit/4c6e2438993ab15a463bf48a8025b6a91eac2790", "message": "sgrep_lint: Support path includes/excludes in rule files\n\nCloses https://github.com/returntocorp/enterprise/issues/70", "committedDate": "2020-04-17T19:48:31Z", "type": "forcePushed"}, {"oid": "db887f36be7ee3069176435f091b6d986c4c3f91", "url": "https://github.com/returntocorp/semgrep/commit/db887f36be7ee3069176435f091b6d986c4c3f91", "message": "sgrep_lint: Support path includes/excludes in rule files\n\nCloses https://github.com/returntocorp/enterprise/issues/70", "committedDate": "2020-04-17T19:50:28Z", "type": "commit"}, {"oid": "db887f36be7ee3069176435f091b6d986c4c3f91", "url": "https://github.com/returntocorp/semgrep/commit/db887f36be7ee3069176435f091b6d986c4c3f91", "message": "sgrep_lint: Support path includes/excludes in rule files\n\nCloses https://github.com/returntocorp/enterprise/issues/70", "committedDate": "2020-04-17T19:50:28Z", "type": "forcePushed"}]}