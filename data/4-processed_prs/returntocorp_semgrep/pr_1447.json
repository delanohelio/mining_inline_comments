{"pr_number": 1447, "pr_title": "Group timeouts together in logging", "pr_createdAt": "2020-08-04T21:09:48Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1447", "timeline": [{"oid": "9d56662046fb023cc0d0ec8056da0cad906a88b3", "url": "https://github.com/returntocorp/semgrep/commit/9d56662046fb023cc0d0ec8056da0cad906a88b3", "message": "Group timeouts together in logging", "committedDate": "2020-08-04T21:04:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzNjEzNA==", "url": "https://github.com/returntocorp/semgrep/pull/1447#discussion_r465336134", "bodyText": "Do we run into issues since codepaths diverge now? i.e. when the error is a MatchTimeoutError we don't set self.has_output to True, we don't check membership in self.error_set before appending to semgrep_structured_errors etc. (see handle_semgrep_error)", "author": "brendongo", "createdAt": "2020-08-04T21:18:25Z", "path": "semgrep/semgrep/output.py", "diffHunk": "@@ -226,8 +228,24 @@ def __init__(\n         self.final_error: Optional[Exception] = None\n \n     def handle_semgrep_errors(self, errors: List[SemgrepError]) -> None:\n+        timeout_errors = defaultdict(list)\n         for err in errors:\n-            self.handle_semgrep_error(err)\n+            if isinstance(err, MatchTimeoutError):", "originalCommit": "9d56662046fb023cc0d0ec8056da0cad906a88b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzNzE3NA==", "url": "https://github.com/returntocorp/semgrep/pull/1447#discussion_r465337174", "bodyText": "Oh I missed that, let me push an edit to this file...", "author": "sabrinabrogren", "createdAt": "2020-08-04T21:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzNjEzNA=="}], "type": "inlineReview"}, {"oid": "66dbf185c3c5276094db3e5de0f22dc5d6d474ad", "url": "https://github.com/returntocorp/semgrep/commit/66dbf185c3c5276094db3e5de0f22dc5d6d474ad", "message": "check if in error_set", "committedDate": "2020-08-04T21:23:59Z", "type": "commit"}, {"oid": "f810da39f0d79b9b58d91538df60570a0abf207c", "url": "https://github.com/returntocorp/semgrep/commit/f810da39f0d79b9b58d91538df60570a0abf207c", "message": "set has_output", "committedDate": "2020-08-04T21:46:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NTIzNg==", "url": "https://github.com/returntocorp/semgrep/pull/1447#discussion_r465375236", "bodyText": "Nit: error(s) so pluralization is fine if len is 1", "author": "brendongo", "createdAt": "2020-08-04T22:56:05Z", "path": "semgrep/semgrep/output.py", "diffHunk": "@@ -226,8 +228,25 @@ def __init__(\n         self.final_error: Optional[Exception] = None\n \n     def handle_semgrep_errors(self, errors: List[SemgrepError]) -> None:\n+        timeout_errors = defaultdict(list)\n         for err in errors:\n-            self.handle_semgrep_error(err)\n+            if isinstance(err, MatchTimeoutError) and err not in self.error_set:\n+                self.semgrep_structured_errors.append(err)\n+                self.error_set.add(err)\n+                timeout_errors[err.path].append(err.rule_id)\n+            else:\n+                self.handle_semgrep_error(err)\n+\n+        if timeout_errors and self.settings.output_format == OutputFormat.TEXT:\n+            self.handle_semgrep_timeout_errors(timeout_errors)\n+\n+    def handle_semgrep_timeout_errors(self, errors: Dict[Path, List[str]]) -> None:\n+        self.has_output = True\n+        separator = \", \"\n+        for path in errors.keys():\n+            logger.error(\n+                f\"Warning: {len(errors[path])} timeout errors in {path} when running the following rules: [{separator.join(errors[path])}]\"", "originalCommit": "f810da39f0d79b9b58d91538df60570a0abf207c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c8e4076bc66d1a61a0db0189abba55fc73e6a9c2", "url": "https://github.com/returntocorp/semgrep/commit/c8e4076bc66d1a61a0db0189abba55fc73e6a9c2", "message": "fixing singular/plural", "committedDate": "2020-08-05T13:29:40Z", "type": "commit"}]}