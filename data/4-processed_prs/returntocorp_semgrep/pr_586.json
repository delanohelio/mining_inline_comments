{"pr_number": 586, "pr_title": "New tainting_rule type and parse its yaml file", "pr_createdAt": "2020-04-27T14:20:04Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/586", "timeline": [{"oid": "230429ffcafba56a3f5117ae4cdc6a287954786f", "url": "https://github.com/returntocorp/semgrep/commit/230429ffcafba56a3f5117ae4cdc6a287954786f", "message": "New tainting_rule type and parse its yaml file\n\nThis is the first step towards taint-tracking integration into semgrep\n\nThis will help issue #585\n\nTest plan:\n/home/pad/github/semgrep/semgrep-core/_build/default/bin/main_semgrep_core.exe -lang js -dump_tainting_rules data/basic_tainting.yml\n[(\"classic\", [Tag3 (Tag10 (Tag7 ([\"source\"; ((\"source\", 0, 1, 0, \"/tmp/tmp-29556-3308e5.py\"))], ((0), (0), (0))), [(Tag26 ([((\"...\", 7, 1, 7, \"/tmp/tmp-29556-3308e5.py\"))]))])); Tag3 (Tag10 (Tag7 ([\"source1\"; ((\"source1\", 0, 1, 0, \"/tmp/tmp-29556-610dbd.py\"))], ((0), (0), (0))), [(Tag26 ([((\"...\", 8, 1, 8, \"/tmp/tmp-29556-610dbd.py\"))]))]))], [Tag3 (Tag10 (Tag7 ([\"sanitize\"; ((\"sanitize\", 0, 1, 0, \"/tmp/tmp-29556-ad5a50.py\"))], ((0), (0), (0))), [(Tag26 ([((\"...\", 9, 1, 9, \"/tmp/tmp-29556-ad5a50.py\"))]))]))], [Tag3 (Tag10 (Tag7 ([\"sink\"; ((\"sink\", 0, 1, 0, \"/tmp/tmp-29556-104d40.py\"))], ((0), (0), (0))), [(Tag26 ([((\"...\", 5, 1, 5, \"/tmp/tmp-29556-104d40.py\"))]))])); Tag3 (Tag10 (Tag7 ([\"eval\"; ((\"eval\", 0, 1, 0, \"/tmp/tmp-29556-4b39bc.py\"))], ((0), (0), (0))), [(Tag26 ([((\"...\", 5, 1, 5, \"/tmp/tmp-29556-4b39bc.py\"))]))]))], \"A user input source() went into a dangerous sink()\", 1, [0; 3])]", "committedDate": "2020-04-27T14:17:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg5NjUzNA==", "url": "https://github.com/returntocorp/semgrep/pull/586#discussion_r415896534", "bodyText": "nice!", "author": "DrewDennison", "createdAt": "2020-04-27T15:09:53Z", "path": "semgrep-core/core/tainting_rule.ml", "diffHunk": "@@ -0,0 +1,47 @@\n+(* Yoann Padioleau\n+ *\n+ * Copyright (C) 2020 r2c\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU General Public License (GPL)\n+ * version 2 as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * file license.txt for more details.\n+ *)\n+\n+(*****************************************************************************)\n+(* Prelude *)\n+(*****************************************************************************)\n+(* This is a spin-off of rule.ml but specialized for tainting analysis.\n+ * \n+ * At some point we may want tainting to be integrated and queryable \n+ * directly from regular semgrep rules, but for now it's simpler\n+ * to have a specialized type and format.\n+ *)\n+\n+(*****************************************************************************)\n+(* Types *)\n+(*****************************************************************************)\n+\n+(* right now only Expr is supported *)\n+type pattern = Ast.any\n+\n+(* less: could extend Rule.t *)\n+type rule = {\n+  id: string;\n+\n+  (* the list below are used to express disjunction *)\n+  source: pattern list; ", "originalCommit": "230429ffcafba56a3f5117ae4cdc6a287954786f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "085c5dac5204aa797d46216ee4998221c3f84ab0", "url": "https://github.com/returntocorp/semgrep/commit/085c5dac5204aa797d46216ee4998221c3f84ab0", "message": "* semgrep-core/bin/main_semgrep_core.ml: extract helper functions of main\nloop", "committedDate": "2020-04-27T15:29:21Z", "type": "commit"}, {"oid": "6260aaacbbcca76b4095a90174ecdd918086e3db", "url": "https://github.com/returntocorp/semgrep/commit/6260aaacbbcca76b4095a90174ecdd918086e3db", "message": "* semgrep-core/bin/main_semgrep_core.ml: skeleton for -tainting_rules_file\n\ntest plan:\n /home/pad/github/semgrep/semgrep-core/_build/default/bin/main_semgrep_core.exe -verbose -lang python -tainting_rules_file data/basic_tainting.yml tests/TAINTING/\nParsing data/basic_tainting.yml\nAnalyzing tests/TAINTING/tainting.py\n{ \"matches\": [], \"errors\": [], \"stats\": { \"okfiles\": 1, \"errorfiles\": 0 } }", "committedDate": "2020-04-27T15:49:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwNzMzNQ==", "url": "https://github.com/returntocorp/semgrep/pull/586#discussion_r416007335", "bodyText": "Just to be sure, these are logical OR clauses. In addition to this, is it possible to define two sinks combined by AND clause?\nFor example, when we were doing path-injection, we had to make patterns like\n$P = os.path.join(..., request.$W.get(...), ...)\n...\nopen($P, ...)\n\nwhere data had to flow through os.path.join as well as open to be considered potentially malicious.", "author": "ulziibay", "createdAt": "2020-04-27T17:28:54Z", "path": "semgrep-core/data/basic_tainting.yml", "diffHunk": "@@ -0,0 +1,13 @@\n+rules:\n+  - id: classic\n+    pattern-sources:\n+      - source(...)\n+      - source1(...)\n+    pattern-sinks:\n+      - sink(...)\n+      - eval(...)", "originalCommit": "6260aaacbbcca76b4095a90174ecdd918086e3db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEzMTMxMw==", "url": "https://github.com/returntocorp/semgrep/pull/586#discussion_r416131313", "bodyText": "hmm, right now the tainting by default consider that any tainted argument taint also the return value (unless it's a sanitize function), so here by default $P will be marked as tainted", "author": "aryx", "createdAt": "2020-04-27T20:38:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwNzMzNQ=="}], "type": "inlineReview"}, {"oid": "64be676b12f6535208e24e8b60bbd23c35e3c94e", "url": "https://github.com/returntocorp/semgrep/commit/64be676b12f6535208e24e8b60bbd23c35e3c94e", "message": "Plug semgrep with pfff tainting\n\nThis files issue #585\n\nTest plan:\n+ /home/pad/github/semgrep/semgrep-core/_build/default/bin/main_semgrep_core.exe -lang python -tainting_rules_file data/basic_tainting.yml tests/TAINTING/\ntests/TAINTING/tainting.py:2:6: the ident 'source1' is not resolved\ntests/TAINTING/tainting.py:5:9: the ident 'sanitize1' is not resolved\ntests/TAINTING/tainting.py:8:2: the ident 'sink1' is not resolved\n{\n  \"matches\": [\n    {\n      \"check_id\": \"classic\",\n      \"path\": \"tests/TAINTING/tainting.py\",\n      \"start\": { \"line\": 8, \"col\": 3, \"offset\": 91 },\n      \"end\": { \"line\": 8, \"col\": 10, \"offset\": 98 },\n      \"extra\": {\n        \"message\": \"A user input source() went into a dangerous sink()\",\n        \"metavars\": {}\n      }\n    }\n  ],\n  \"errors\": [],\n  \"stats\": { \"okfiles\": 1, \"errorfiles\": 0 }\n}", "committedDate": "2020-04-27T17:44:27Z", "type": "commit"}, {"oid": "197b1c7864340411aa96d484d50e2f0d04ac6213", "url": "https://github.com/returntocorp/semgrep/commit/197b1c7864340411aa96d484d50e2f0d04ac6213", "message": "* pfff: use latest pfff", "committedDate": "2020-04-27T20:16:36Z", "type": "commit"}]}