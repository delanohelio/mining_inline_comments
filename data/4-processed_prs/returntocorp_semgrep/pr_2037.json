{"pr_number": 2037, "pr_title": "C# support - convert treesitter CST to generic AST", "pr_createdAt": "2020-11-13T08:49:28Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/2037", "timeline": [{"oid": "3d893cec558c0e6c309ae7a52be63cf540f702dd", "url": "https://github.com/returntocorp/semgrep/commit/3d893cec558c0e6c309ae7a52be63cf540f702dd", "message": "Parse namespace identifier\n\nnamespace HelloWorld { }", "committedDate": "2020-10-13T09:19:06Z", "type": "commit"}, {"oid": "e9755c1bc16e9658bd8f6b2945a144fde2c0c30d", "url": "https://github.com/returntocorp/semgrep/commit/e9755c1bc16e9658bd8f6b2945a144fde2c0c30d", "message": "Attempt to parse class\n\nDoesn't work yet", "committedDate": "2020-10-13T09:19:06Z", "type": "commit"}, {"oid": "c31b26484045f58af6cf73678cce88380af97214", "url": "https://github.com/returntocorp/semgrep/commit/c31b26484045f58af6cf73678cce88380af97214", "message": "Parse namespace and class\n\nReturn stmt instead of definition.", "committedDate": "2020-10-15T15:04:35Z", "type": "commit"}, {"oid": "7f647b439deb82ad4f03e2f4d56c3a3ff75ee12f", "url": "https://github.com/returntocorp/semgrep/commit/7f647b439deb82ad4f03e2f4d56c3a3ff75ee12f", "message": "Parse empty method", "committedDate": "2020-10-16T09:55:01Z", "type": "commit"}, {"oid": "06651af57799d27284efc075a99acb620e38f8ac", "url": "https://github.com/returntocorp/semgrep/commit/06651af57799d27284efc075a99acb620e38f8ac", "message": "Handle non-void return types", "committedDate": "2020-10-16T10:24:29Z", "type": "commit"}, {"oid": "1ef01c0e2c951d93fb6e307cb7fb1ee9003f2fe3", "url": "https://github.com/returntocorp/semgrep/commit/1ef01c0e2c951d93fb6e307cb7fb1ee9003f2fe3", "message": "Flatten all attribute lists", "committedDate": "2020-10-16T12:22:27Z", "type": "commit"}, {"oid": "c21313514d0bb2f6cf95b3a98131a583537da81f", "url": "https://github.com/returntocorp/semgrep/commit/c21313514d0bb2f6cf95b3a98131a583537da81f", "message": "Parse parameters to methods", "committedDate": "2020-10-16T12:33:16Z", "type": "commit"}, {"oid": "496a6110407c08dc09018c9301836d6fd92d4c0d", "url": "https://github.com/returntocorp/semgrep/commit/496a6110407c08dc09018c9301836d6fd92d4c0d", "message": "Parse method call\n\nNow this can parse simple hello world script.", "committedDate": "2020-10-17T13:57:02Z", "type": "commit"}, {"oid": "a883afb5dc6d5e0afa4a4b2beeff6c3322193390", "url": "https://github.com/returntocorp/semgrep/commit/a883afb5dc6d5e0afa4a4b2beeff6c3322193390", "message": "Parse switch statement", "committedDate": "2020-10-18T10:22:20Z", "type": "commit"}, {"oid": "0180b70b6363b1946ed206a6b07f24a9c7c15a5d", "url": "https://github.com/returntocorp/semgrep/commit/0180b70b6363b1946ed206a6b07f24a9c7c15a5d", "message": "Parse qualified names", "committedDate": "2020-10-20T14:04:05Z", "type": "commit"}, {"oid": "df6702acd3c427021d6b59d3995bc20a83036ed9", "url": "https://github.com/returntocorp/semgrep/commit/df6702acd3c427021d6b59d3995bc20a83036ed9", "message": "Parse attribute lists", "committedDate": "2020-10-20T15:21:14Z", "type": "commit"}, {"oid": "6c604304942f939c10cf32b0bdc27a7281d86301", "url": "https://github.com/returntocorp/semgrep/commit/6c604304942f939c10cf32b0bdc27a7281d86301", "message": "Parse binary infix expressions\n\nThese are currently AssignOp, but I don't think that is correct.", "committedDate": "2020-10-21T14:47:53Z", "type": "commit"}, {"oid": "9d414955937ca2ffe6f7af5dd3a83e967dad8fdd", "url": "https://github.com/returntocorp/semgrep/commit/9d414955937ca2ffe6f7af5dd3a83e967dad8fdd", "message": "Parse if", "committedDate": "2020-10-21T14:50:11Z", "type": "commit"}, {"oid": "8da91546e5b1c2bca0ee2a905e198b4a2fa19c57", "url": "https://github.com/returntocorp/semgrep/commit/8da91546e5b1c2bca0ee2a905e198b4a2fa19c57", "message": "Treat infix operators as function calls", "committedDate": "2020-10-21T14:59:21Z", "type": "commit"}, {"oid": "7a58b7022f812926c5ddc3d873b28eb4f0ea571a", "url": "https://github.com/returntocorp/semgrep/commit/7a58b7022f812926c5ddc3d873b28eb4f0ea571a", "message": "Map some modifier keywords", "committedDate": "2020-10-22T14:49:18Z", "type": "commit"}, {"oid": "43d8602c566df0dd15d2fe8b7cf216eef74948f8", "url": "https://github.com/returntocorp/semgrep/commit/43d8602c566df0dd15d2fe8b7cf216eef74948f8", "message": "Parse foreach", "committedDate": "2020-10-22T15:11:50Z", "type": "commit"}, {"oid": "5829bd55ba931d49b196562444ef3a940a4fbaec", "url": "https://github.com/returntocorp/semgrep/commit/5829bd55ba931d49b196562444ef3a940a4fbaec", "message": "Parse try/catch", "committedDate": "2020-10-24T13:51:54Z", "type": "commit"}, {"oid": "af9d96f11f80a7f5c139b7561736d80ae071a133", "url": "https://github.com/returntocorp/semgrep/commit/af9d96f11f80a7f5c139b7561736d80ae071a133", "message": "Handle variable declarations", "committedDate": "2020-10-24T14:32:08Z", "type": "commit"}, {"oid": "798ac8d2d7812340a6e73e626822403b199079c0", "url": "https://github.com/returntocorp/semgrep/commit/798ac8d2d7812340a6e73e626822403b199079c0", "message": "Return builtin type for void instead of None\n\nSimilar to java_to_generic.ml. Void is also a type.", "committedDate": "2020-10-26T16:36:36Z", "type": "commit"}, {"oid": "f1a6771f0bdc4832a6969fac26951a312112eafb", "url": "https://github.com/returntocorp/semgrep/commit/f1a6771f0bdc4832a6969fac26951a312112eafb", "message": "Handle `var` in local variable declarations\n\nMap as vtype=None. Only allow in variable declarations. `var` as return type or\nargument type is not valid.", "committedDate": "2020-10-26T16:52:56Z", "type": "commit"}, {"oid": "55b10f66a5bafd1a9f036c611e6b8465aa610ecf", "url": "https://github.com/returntocorp/semgrep/commit/55b10f66a5bafd1a9f036c611e6b8465aa610ecf", "message": "Postfix unary operators", "committedDate": "2020-10-27T07:39:55Z", "type": "commit"}, {"oid": "01d41d5b4e5ef76d90d42ab4b43660f3f26ec457", "url": "https://github.com/returntocorp/semgrep/commit/01d41d5b4e5ef76d90d42ab4b43660f3f26ec457", "message": "Parse for loops", "committedDate": "2020-10-27T13:10:45Z", "type": "commit"}, {"oid": "39daeaa51b5dabf5581a28d61ae2ff201a109e16", "url": "https://github.com/returntocorp/semgrep/commit/39daeaa51b5dabf5581a28d61ae2ff201a109e16", "message": "Parse continue\n\nUsed in a loop.", "committedDate": "2020-10-27T13:14:38Z", "type": "commit"}, {"oid": "b934081855bf676d7c1f8143867631a2e5b6f19c", "url": "https://github.com/returntocorp/semgrep/commit/b934081855bf676d7c1f8143867631a2e5b6f19c", "message": "Parse do { } while ()", "committedDate": "2020-10-27T13:16:05Z", "type": "commit"}, {"oid": "9d734a32c4944331ce670bc4351f7cc07a83f7aa", "url": "https://github.com/returntocorp/semgrep/commit/9d734a32c4944331ce670bc4351f7cc07a83f7aa", "message": "Parse empty statement", "committedDate": "2020-10-27T13:18:12Z", "type": "commit"}, {"oid": "3158865f5b1342494b08ba5533dc4b0013152cae", "url": "https://github.com/returntocorp/semgrep/commit/3158865f5b1342494b08ba5533dc4b0013152cae", "message": "Parse assignment operators, e.g. cost += 5", "committedDate": "2020-10-27T13:34:24Z", "type": "commit"}, {"oid": "21895cb5ec641e4db8ca4c1c0fdd01c933d9d858", "url": "https://github.com/returntocorp/semgrep/commit/21895cb5ec641e4db8ca4c1c0fdd01c933d9d858", "message": "Parse return", "committedDate": "2020-10-27T14:10:30Z", "type": "commit"}, {"oid": "84298208e37b4e8005fc49ec058b31718e3f11b0", "url": "https://github.com/returntocorp/semgrep/commit/84298208e37b4e8005fc49ec058b31718e3f11b0", "message": "Parse while", "committedDate": "2020-10-27T14:12:13Z", "type": "commit"}, {"oid": "506edd1e6c308ea4b8a081988eb30bda0ce78948", "url": "https://github.com/returntocorp/semgrep/commit/506edd1e6c308ea4b8a081988eb30bda0ce78948", "message": "Parse finally", "committedDate": "2020-10-27T14:32:51Z", "type": "commit"}, {"oid": "08ee8f32425a088c022eedaa422f88fd6afdf02b", "url": "https://github.com/returntocorp/semgrep/commit/08ee8f32425a088c022eedaa422f88fd6afdf02b", "message": "Parse type parameter list\n\nE.g. MyClass<A, B, C>", "committedDate": "2020-11-02T12:26:21Z", "type": "commit"}, {"oid": "a5cb47e0e4c8848d83d765e824459df69bfc5a2e", "url": "https://github.com/returntocorp/semgrep/commit/a5cb47e0e4c8848d83d765e824459df69bfc5a2e", "message": "Handle all similar list mappings", "committedDate": "2020-11-02T16:24:16Z", "type": "commit"}, {"oid": "e9d1a3754f01d55ed8820eb4d3e5449d1b8cca13", "url": "https://github.com/returntocorp/semgrep/commit/e9d1a3754f01d55ed8820eb4d3e5449d1b8cca13", "message": "Parse type parameters with constraints", "committedDate": "2020-11-02T17:03:32Z", "type": "commit"}, {"oid": "84a2fa1001f4c8b95710ac3845cf11de77bc4bfa", "url": "https://github.com/returntocorp/semgrep/commit/84a2fa1001f4c8b95710ac3845cf11de77bc4bfa", "message": "Parse class inheritance\n\nC# does not make distinction between interface implementation and class\nextension. We put all in cextends.", "committedDate": "2020-11-05T10:00:38Z", "type": "commit"}, {"oid": "ca87c2acd1507ac84ebafd8fa6194dd3eab9698d", "url": "https://github.com/returntocorp/semgrep/commit/ca87c2acd1507ac84ebafd8fa6194dd3eab9698d", "message": "Parse keyword attributes in class declaration", "committedDate": "2020-11-05T10:03:18Z", "type": "commit"}, {"oid": "21b5e51c1c9a2bad8e813b7e03d5ec09cb6a90a9", "url": "https://github.com/returntocorp/semgrep/commit/21b5e51c1c9a2bad8e813b7e03d5ec09cb6a90a9", "message": "Parse interface, struct\n\nThe same way we parse classes. We mark structs as classes.", "committedDate": "2020-11-05T10:19:54Z", "type": "commit"}, {"oid": "d4c6e623b837ea0bff340be3753996ea4664ce64", "url": "https://github.com/returntocorp/semgrep/commit/d4c6e623b837ea0bff340be3753996ea4664ce64", "message": "Parse type argument list", "committedDate": "2020-11-05T10:29:28Z", "type": "commit"}, {"oid": "a52fcf279600ea6add2103c4f757c9033ca68fca", "url": "https://github.com/returntocorp/semgrep/commit/a52fcf279600ea6add2103c4f757c9033ca68fca", "message": "Parse enums", "committedDate": "2020-11-05T11:23:57Z", "type": "commit"}, {"oid": "43b886717e5e87d998731e575b87de6216a32a80", "url": "https://github.com/returntocorp/semgrep/commit/43b886717e5e87d998731e575b87de6216a32a80", "message": "Parse constructor\n\nAs if it was a normal method", "committedDate": "2020-11-05T11:38:37Z", "type": "commit"}, {"oid": "fdfbc8811170a5f0ff3e7f9ec81a808788fd5249", "url": "https://github.com/returntocorp/semgrep/commit/fdfbc8811170a5f0ff3e7f9ec81a808788fd5249", "message": "Parse properties, delegates", "committedDate": "2020-11-06T12:09:17Z", "type": "commit"}, {"oid": "3a631cf74713dbba420ceea7100878f0a5330ff6", "url": "https://github.com/returntocorp/semgrep/commit/3a631cf74713dbba420ceea7100878f0a5330ff6", "message": "Parse arrays", "committedDate": "2020-11-06T14:09:03Z", "type": "commit"}, {"oid": "24fb0cde8e2f18c099bce8ad4909ba8c4c7ad546", "url": "https://github.com/returntocorp/semgrep/commit/24fb0cde8e2f18c099bce8ad4909ba8c4c7ad546", "message": "Parse interpolated strings", "committedDate": "2020-11-09T14:31:08Z", "type": "commit"}, {"oid": "d8aab24f334bb1c4a88ffebbe120ebe1f61228da", "url": "https://github.com/returntocorp/semgrep/commit/d8aab24f334bb1c4a88ffebbe120ebe1f61228da", "message": "Parse yield", "committedDate": "2020-11-09T14:47:35Z", "type": "commit"}, {"oid": "b381ebd09fd817a1dd5df82e9b78849a066b2344", "url": "https://github.com/returntocorp/semgrep/commit/b381ebd09fd817a1dd5df82e9b78849a066b2344", "message": "Parse type member access\n\nE.g. int.maxValue", "committedDate": "2020-11-09T15:03:36Z", "type": "commit"}, {"oid": "d9ee5a583e92b29887e8eb76acb12dec79527c35", "url": "https://github.com/returntocorp/semgrep/commit/d9ee5a583e92b29887e8eb76acb12dec79527c35", "message": "Parse lambda", "committedDate": "2020-11-10T16:23:40Z", "type": "commit"}, {"oid": "edfb6195947ecd3df7345003cd6001ce66dc6ce2", "url": "https://github.com/returntocorp/semgrep/commit/edfb6195947ecd3df7345003cd6001ce66dc6ce2", "message": "Handle parenthesis expressions", "committedDate": "2020-11-11T13:03:07Z", "type": "commit"}, {"oid": "44592d94fb2008ac701096d2e987f1d35a7f4430", "url": "https://github.com/returntocorp/semgrep/commit/44592d94fb2008ac701096d2e987f1d35a7f4430", "message": "Implement `is`, `as`", "committedDate": "2020-11-11T13:09:25Z", "type": "commit"}, {"oid": "60b8b7db4f16d74cfc4ec70954baafefd9e5bd1d", "url": "https://github.com/returntocorp/semgrep/commit/60b8b7db4f16d74cfc4ec70954baafefd9e5bd1d", "message": "Parse cast", "committedDate": "2020-11-11T13:10:46Z", "type": "commit"}, {"oid": "3d3ec272875a81fe7c02aa6b6d6105df5af722be", "url": "https://github.com/returntocorp/semgrep/commit/3d3ec272875a81fe7c02aa6b6d6105df5af722be", "message": "Parse conditional", "committedDate": "2020-11-11T13:12:16Z", "type": "commit"}, {"oid": "690c77e719fcd79075b05a0ae434d8def518c3f6", "url": "https://github.com/returntocorp/semgrep/commit/690c77e719fcd79075b05a0ae434d8def518c3f6", "message": "Parse is pattern", "committedDate": "2020-11-11T13:15:06Z", "type": "commit"}, {"oid": "1f85eff1fe827c7773e4e27a8ff90dc8cb1a1ac0", "url": "https://github.com/returntocorp/semgrep/commit/1f85eff1fe827c7773e4e27a8ff90dc8cb1a1ac0", "message": "Parse global attributes", "committedDate": "2020-11-11T13:31:23Z", "type": "commit"}, {"oid": "cfcaf19e101b1664a17eb07d4142f501e621516d", "url": "https://github.com/returntocorp/semgrep/commit/cfcaf19e101b1664a17eb07d4142f501e621516d", "message": "Parse nullable types\n\nbool?", "committedDate": "2020-11-11T13:34:22Z", "type": "commit"}, {"oid": "4d1c1ea4d4cb9463fd8c88e0acbccf3defaa9b37", "url": "https://github.com/returntocorp/semgrep/commit/4d1c1ea4d4cb9463fd8c88e0acbccf3defaa9b37", "message": "Parse type constraints of class, struct, unmanaged", "committedDate": "2020-11-11T13:41:45Z", "type": "commit"}, {"oid": "904dfd93bab72da67c0273fa36c43579076151ab", "url": "https://github.com/returntocorp/semgrep/commit/904dfd93bab72da67c0273fa36c43579076151ab", "message": "Add method type parameters to entity", "committedDate": "2020-11-11T13:46:46Z", "type": "commit"}, {"oid": "33234cae54648fc88985c2d628eef109e38004c0", "url": "https://github.com/returntocorp/semgrep/commit/33234cae54648fc88985c2d628eef109e38004c0", "message": "Treat readonly as const\n\nUnsure of this, as we also have the real const.", "committedDate": "2020-11-11T13:51:23Z", "type": "commit"}, {"oid": "0695ef48e1371b5480e5e986d2d5ed9dd16d99c7", "url": "https://github.com/returntocorp/semgrep/commit/0695ef48e1371b5480e5e986d2d5ed9dd16d99c7", "message": "Parse typeof", "committedDate": "2020-11-11T13:54:02Z", "type": "commit"}, {"oid": "f631c2ded989210a708a03690ed673bf12d865dc", "url": "https://github.com/returntocorp/semgrep/commit/f631c2ded989210a708a03690ed673bf12d865dc", "message": "Parse tuples", "committedDate": "2020-11-13T14:11:46Z", "type": "commit"}, {"oid": "b2d685cdf926c05acc6b47d5efbca5352d2da69a", "url": "https://github.com/returntocorp/semgrep/commit/b2d685cdf926c05acc6b47d5efbca5352d2da69a", "message": "Parse sizeof()", "committedDate": "2020-11-13T14:13:51Z", "type": "commit"}, {"oid": "f7fba4e667d8208a87d72f42eb3d613774580906", "url": "https://github.com/returntocorp/semgrep/commit/f7fba4e667d8208a87d72f42eb3d613774580906", "message": "Parse pointer type\n\nint*", "committedDate": "2020-11-13T14:18:54Z", "type": "commit"}, {"oid": "f76cf0398804c440c0b4e7178b1df18c5933073c", "url": "https://github.com/returntocorp/semgrep/commit/f76cf0398804c440c0b4e7178b1df18c5933073c", "message": "Parse char literal", "committedDate": "2020-11-14T14:20:30Z", "type": "commit"}, {"oid": "c589ef23a3862f7232c70ed33dd91b2aa4d7d80c", "url": "https://github.com/returntocorp/semgrep/commit/c589ef23a3862f7232c70ed33dd91b2aa4d7d80c", "message": "Parse re-throw\n\nthrow without expression", "committedDate": "2020-11-14T14:27:39Z", "type": "commit"}, {"oid": "89c571df68065e788ed697f0d2580a46f630fe04", "url": "https://github.com/returntocorp/semgrep/commit/89c571df68065e788ed697f0d2580a46f630fe04", "message": "Merge branch 'develop' into csharp", "committedDate": "2020-11-16T15:38:24Z", "type": "commit"}, {"oid": "67fa402a561ef745995cbb854c1325577d0968be", "url": "https://github.com/returntocorp/semgrep/commit/67fa402a561ef745995cbb854c1325577d0968be", "message": "Fix C# parser after merge of develop branch", "committedDate": "2020-11-16T15:44:58Z", "type": "commit"}, {"oid": "6a9620e055d64290e7cf77ec510cc2b5be9ffa78", "url": "https://github.com/returntocorp/semgrep/commit/6a9620e055d64290e7cf77ec510cc2b5be9ffa78", "message": "Set params, return value on getters and setters", "committedDate": "2020-11-18T12:35:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA3NjA2Mw==", "url": "https://github.com/returntocorp/semgrep/pull/2037#discussion_r526076063", "bodyText": "we usually use if for boolean, if has_return then FOO else BAR", "author": "aryx", "createdAt": "2020-11-18T13:13:21Z", "path": "semgrep-core/parsing/Parse_csharp_tree_sitter.ml", "diffHunk": "@@ -2319,11 +2319,22 @@ and declaration (env : env) (x : CST.declaration) : stmt =\n             let funcs = List.map (fun (attrs, id, fbody) ->\n               let fname, ftok = v5 in\n               let iname, itok = id in\n+              let has_params = iname != \"get\" in\n+              let has_return = iname = \"get\" in\n               let ent = basic_entity ((iname ^ \"_\" ^ fname), itok) attrs in\n               let funcdef = FuncDef {\n                 fkind = (Method, itok);\n-                fparams = []; (* TODO Should we have a parameter `value` for setters? *)\n-                frettype = None; (* TODO return v3 for getters *)\n+                fparams = (match has_params with\n+                  | false -> []\n+                  | true -> [ParamClassic {\n+                      pname = Some (\"value\", fake \"value\");\n+                      ptype = Some v3;\n+                      pdefault = None; pattrs = [];\n+                      pinfo = empty_id_info ();\n+                    }]);\n+                frettype = (match has_return with", "originalCommit": "6a9620e055d64290e7cf77ec510cc2b5be9ffa78", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1f88a69ca83597b3765135d55c6e6bcbfba443e9", "url": "https://github.com/returntocorp/semgrep/commit/1f88a69ca83597b3765135d55c6e6bcbfba443e9", "message": "Use if-then-else instead of match on a boolean", "committedDate": "2020-11-18T14:09:37Z", "type": "commit"}]}