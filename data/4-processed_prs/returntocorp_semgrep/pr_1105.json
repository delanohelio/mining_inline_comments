{"pr_number": 1105, "pr_title": "Added python cases for pretty_print_generic", "pr_createdAt": "2020-06-23T16:03:55Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1105", "timeline": [{"oid": "58c9ba4d7fef9072e0cb4b544e1b4f2f82d4b501", "url": "https://github.com/returntocorp/semgrep/commit/58c9ba4d7fef9072e0cb4b544e1b4f2f82d4b501", "message": "Added python cases for pretty_print_generic\n\nAdded cases necessary to python function calls, formatting them in the pythonic style.\n\nTested with\n\nfrom metrics import send\ndef foo():\n   bar()\n   bar + send('my-report-id') + bar()\n   (hi, my)\n   (hi, my, bye)\n   A[1]\n   A[-1]\n   A[1:4]\n   A[1:4:-1]\n   A[::-1]\n   A[1:]\n   if 1 == 2: foo()\n   true\n   3.3\n   foo(self.data)", "committedDate": "2020-06-23T15:06:06Z", "type": "commit"}, {"oid": "09dc9658eae92a7f8cf7f2c2ab5e18265cb35ca5", "url": "https://github.com/returntocorp/semgrep/commit/09dc9658eae92a7f8cf7f2c2ab5e18265cb35ca5", "message": "Include entire path for imported ents\n\nTested against\n\nfrom metrics import send\ndef foo():\n   send('my-report-id')", "committedDate": "2020-06-23T17:07:33Z", "type": "commit"}, {"oid": "dee49162fe248cfaf34d751caeedb437cc66d343", "url": "https://github.com/returntocorp/semgrep/commit/dee49162fe248cfaf34d751caeedb437cc66d343", "message": "Linked pattern synthesis through python\n\nAdded synthesize-patterns argument, had it call semgrep-core with appropriate arguments\n\nTested with\npython -m semgrep --synthesize-patterns 4:9-4:29 /Users/emma/workspace/semgrep/semgrep-core/tests/SYNTHESIZING/mytest.py\n\n(where mytest.py contains the code referenced in the first commit)\n\nAlso ran\nsemgrep-core -synthesize_patterns 17:3-17:36 tests/SYNTHESIZING/mytest.py", "committedDate": "2020-06-24T00:02:51Z", "type": "commit"}, {"oid": "16b02f87d3b317506ef9695c6c05bf9e8d8ffe27", "url": "https://github.com/returntocorp/semgrep/commit/16b02f87d3b317506ef9695c6c05bf9e8d8ffe27", "message": "Merge branch 'develop' into EJ/pattern_from_code", "committedDate": "2020-06-24T00:14:38Z", "type": "commit"}, {"oid": "080eca69c9d03067dda2796af5acf52baefc1988", "url": "https://github.com/returntocorp/semgrep/commit/080eca69c9d03067dda2796af5acf52baefc1988", "message": "Release 0.12.0", "committedDate": "2020-06-24T01:51:10Z", "type": "commit"}, {"oid": "10d9cd320d99fc9979331950a43ca6f6f7fcd28e", "url": "https://github.com/returntocorp/semgrep/commit/10d9cd320d99fc9979331950a43ca6f6f7fcd28e", "message": "fixup! Release 0.12.0", "committedDate": "2020-06-24T06:21:34Z", "type": "commit"}, {"oid": "5d8f70ec61b6b32f7216dd8c9060e4e0d2eae0c2", "url": "https://github.com/returntocorp/semgrep/commit/5d8f70ec61b6b32f7216dd8c9060e4e0d2eae0c2", "message": "Merge branch 'develop' into EJ/pattern_from_code", "committedDate": "2020-06-24T15:06:33Z", "type": "commit"}, {"oid": "f5ac424be061d5a72ff79067181d0b6532a33074", "url": "https://github.com/returntocorp/semgrep/commit/f5ac424be061d5a72ff79067181d0b6532a33074", "message": "More Bento and pre-commit cleanup (#1111)\n\n* More Bento and pre-commit cleanup\r\n\r\n* Use pre-commit GHA v2.0.0 which includes automatic caching\r\n\r\n* Remove pre-commit requirements.txt checker, we have no requirements.txt\r\n\r\n* Use relative import in tests\r\n\r\n* Add __init__ files so we can do relative imports", "committedDate": "2020-06-24T15:42:53Z", "type": "commit"}, {"oid": "e9e558cd8ade4b940fecbe646f9275abdaca92c8", "url": "https://github.com/returntocorp/semgrep/commit/e9e558cd8ade4b940fecbe646f9275abdaca92c8", "message": "Merge pull request #1119 from returntocorp/release-0.12.0\n\nRelease 0.12.0", "committedDate": "2020-06-24T16:19:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAyMTEwNg==", "url": "https://github.com/returntocorp/semgrep/pull/1105#discussion_r445021106", "bodyText": "We should probably raise an exception if targets is more than one file.\nSee dump_ast.py", "author": "brendongo", "createdAt": "2020-06-24T16:29:05Z", "path": "semgrep/semgrep/synthesize_patterns.py", "diffHunk": "@@ -0,0 +1,26 @@\n+import subprocess\n+import tempfile\n+from typing import List\n+from typing import Optional\n+\n+import semgrep.config_resolver\n+from semgrep.constants import PLEASE_FILE_ISSUE_TEXT\n+from semgrep.constants import SEMGREP_PATH\n+from semgrep.error import SemgrepError\n+\n+\n+def synthesize_patterns(\n+    language: str, code_to_synthesize: str, targets_str: List[str]\n+) -> None:\n+    targets = semgrep.config_resolver.resolve_targets(targets_str)", "originalCommit": "5d8f70ec61b6b32f7216dd8c9060e4e0d2eae0c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAyMTc0OQ==", "url": "https://github.com/returntocorp/semgrep/pull/1105#discussion_r445021749", "bodyText": "Should use the target that has been resolved in line 15 instead of the user arg.", "author": "brendongo", "createdAt": "2020-06-24T16:30:08Z", "path": "semgrep/semgrep/synthesize_patterns.py", "diffHunk": "@@ -0,0 +1,26 @@\n+import subprocess\n+import tempfile\n+from typing import List\n+from typing import Optional\n+\n+import semgrep.config_resolver\n+from semgrep.constants import PLEASE_FILE_ISSUE_TEXT\n+from semgrep.constants import SEMGREP_PATH\n+from semgrep.error import SemgrepError\n+\n+\n+def synthesize_patterns(\n+    language: str, code_to_synthesize: str, targets_str: List[str]\n+) -> None:\n+    targets = semgrep.config_resolver.resolve_targets(targets_str)\n+\n+    args = [\"-synthesize_patterns\", code_to_synthesize]\n+\n+    cmd = [SEMGREP_PATH] + args + targets_str", "originalCommit": "5d8f70ec61b6b32f7216dd8c9060e4e0d2eae0c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAyMjIxNQ==", "url": "https://github.com/returntocorp/semgrep/pull/1105#discussion_r445022215", "bodyText": "Can we hide this from help text for now. See --pre-commit argument above.", "author": "brendongo", "createdAt": "2020-06-24T16:30:54Z", "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -191,6 +192,9 @@ def cli() -> None:\n             \"(can use --json).\"\n         ),\n     )\n+    output.add_argument(", "originalCommit": "5d8f70ec61b6b32f7216dd8c9060e4e0d2eae0c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3d96154070e217ce250a7272fe7b56946a436060", "url": "https://github.com/returntocorp/semgrep/commit/3d96154070e217ce250a7272fe7b56946a436060", "message": "Build from source for tox tests (#1114)\n\nA future diff could cache the semgrep-core artifact based on a hash of the semgrep-core directory to speed up tests in the common case.", "committedDate": "2020-06-24T17:51:39Z", "type": "commit"}, {"oid": "3a8fd75ebfcc2f73d03833e3bda87901e903b982", "url": "https://github.com/returntocorp/semgrep/commit/3a8fd75ebfcc2f73d03833e3bda87901e903b982", "message": "Avoid monkeypatching PYTHONPATH (#1124)\n\n* Avoid monkeypatching PYTHONPATH\r\n\r\nNow that pipenv installs semgrep in editable mode we can avoid\r\nmonkeypatching the PYTHONPATH env variable\r\n\r\n* Add __init__ file to make directory a module for relative import", "committedDate": "2020-06-24T19:00:25Z", "type": "commit"}, {"oid": "3d46ae35852b19b4190aeb9cc54b68372375e473", "url": "https://github.com/returntocorp/semgrep/commit/3d46ae35852b19b4190aeb9cc54b68372375e473", "message": "Don't try to parse an inline pattern as YAML (#1098)\n\n* Don't try to parse an inline pattern as YAML\r\n\r\n* Update error message & tests", "committedDate": "2020-06-24T19:14:08Z", "type": "commit"}, {"oid": "cb6a0b493f0dbdf68d49bbea67cb59dc2fedfeed", "url": "https://github.com/returntocorp/semgrep/commit/cb6a0b493f0dbdf68d49bbea67cb59dc2fedfeed", "message": "Added python cases for pretty_print_generic\n\nAdded cases necessary to python function calls, formatting them in the pythonic style.\n\nTested with\n\nfrom metrics import send\ndef foo():\n   bar()\n   bar + send('my-report-id') + bar()\n   (hi, my)\n   (hi, my, bye)\n   A[1]\n   A[-1]\n   A[1:4]\n   A[1:4:-1]\n   A[::-1]\n   A[1:]\n   if 1 == 2: foo()\n   true\n   3.3\n   foo(self.data)", "committedDate": "2020-06-24T19:40:47Z", "type": "commit"}, {"oid": "7fb92c53c05198c688b14339ef4fd1ac46053449", "url": "https://github.com/returntocorp/semgrep/commit/7fb92c53c05198c688b14339ef4fd1ac46053449", "message": "Include entire path for imported ents\n\nTested against\n\nfrom metrics import send\ndef foo():\n   send('my-report-id')", "committedDate": "2020-06-24T19:40:47Z", "type": "commit"}, {"oid": "5c41d938b1e8debba0e981278f20eb528e735113", "url": "https://github.com/returntocorp/semgrep/commit/5c41d938b1e8debba0e981278f20eb528e735113", "message": "Linked pattern synthesis through python\n\nAdded synthesize-patterns argument, had it call semgrep-core with appropriate arguments\n\nTested with\npython -m semgrep --synthesize-patterns 4:9-4:29 /Users/emma/workspace/semgrep/semgrep-core/tests/SYNTHESIZING/mytest.py\n\n(where mytest.py contains the code referenced in the first commit)\n\nAlso ran\nsemgrep-core -synthesize_patterns 17:3-17:36 tests/SYNTHESIZING/mytest.py", "committedDate": "2020-06-24T19:41:18Z", "type": "commit"}, {"oid": "e91038bbfed8f369a745650043f67e7ad42da2a0", "url": "https://github.com/returntocorp/semgrep/commit/e91038bbfed8f369a745650043f67e7ad42da2a0", "message": "Added an e2e test for the synthesize_patterns action\n\nModified synthesize_patterns to print a json object. Ran with pipenv run pytest tests/e2e/test_synthesize_patterns.py", "committedDate": "2020-06-24T20:50:54Z", "type": "commit"}, {"oid": "201a5d5c9b827e645663f157de3996f0804b5095", "url": "https://github.com/returntocorp/semgrep/commit/201a5d5c9b827e645663f157de3996f0804b5095", "message": "Merge branch 'EJ/pattern_from_code' of github.com:returntocorp/semgrep into EJ/pattern_from_code", "committedDate": "2020-06-24T20:52:09Z", "type": "commit"}, {"oid": "52b42fe1688d2b85e9c40b04e8b299f467c13f17", "url": "https://github.com/returntocorp/semgrep/commit/52b42fe1688d2b85e9c40b04e8b299f467c13f17", "message": "Made changes according to pr", "committedDate": "2020-06-24T21:05:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcyMjc2Nw==", "url": "https://github.com/returntocorp/semgrep/pull/1105#discussion_r445722767", "bodyText": "These should not have been in the PR", "author": "brendongo", "createdAt": "2020-06-25T17:30:54Z", "path": ".github/workflows/env-tests.yml", "diffHunk": "@@ -6,28 +6,60 @@ on:\n     branches: [master, develop]\n \n jobs:\n+  build-core:", "originalCommit": "52b42fe1688d2b85e9c40b04e8b299f467c13f17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}