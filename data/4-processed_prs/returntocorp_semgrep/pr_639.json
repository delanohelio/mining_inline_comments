{"pr_number": 639, "pr_title": "don't use hardcoded /tmp", "pr_createdAt": "2020-05-01T07:53:25Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/639", "timeline": [{"oid": "bad88e58a26d287efa4e7a4b2274b5e4531c940f", "url": "https://github.com/returntocorp/semgrep/commit/bad88e58a26d287efa4e7a4b2274b5e4531c940f", "message": "don't use hardcoded /tmp", "committedDate": "2020-05-01T07:51:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1OTU5Ng==", "url": "https://github.com/returntocorp/semgrep/pull/639#discussion_r418459596", "bodyText": "Is this suffix useful? Maybe we don't need to keep the b64 line, cause the directory name will still have a random component anyway:\nIn [2]: tempfile.TemporaryDirectory().name\nOut[2]: '/var/folders/vp/mgl7xf9142x8wd081g9zrh2c0000gn/T/tmpxrtfnvmn'\n\nIn [3]: tempfile.TemporaryDirectory(suffix=\"arst\").name\nOut[3]: '/var/folders/vp/mgl7xf9142x8wd081g9zrh2c0000gn/T/tmpdu1cx064arst'\n\nIn [4]: tempfile.TemporaryDirectory(prefix=\"arst\").name\nOut[4]: '/var/folders/vp/mgl7xf9142x8wd081g9zrh2c0000gn/T/arstwg4yijot'\n\nIn [5]: tempfile.TemporaryDirectory(prefix=\"arst\", suffix=\"qwfp\").name\nOut[5]: '/var/folders/vp/mgl7xf9142x8wd081g9zrh2c0000gn/T/arstna4_ex81qwfp'", "author": "underyx", "createdAt": "2020-05-01T08:24:19Z", "path": "semgrep/semgrep/config_resolver.py", "diffHunk": "@@ -182,14 +183,14 @@ def download_config(config_url: str) -> Dict[str, Optional[Dict[str, Any]]]:\n             if content_type and \"text/plain\" in content_type:\n                 return parse_config_string(\"remote-url\", r.content.decode(\"utf-8\"))\n             elif content_type and content_type == \"application/x-gzip\":\n-                fname = f\"/tmp/{base64.b64encode(config_url.encode()).decode()}\"\n-                shutil.rmtree(fname, ignore_errors=True)\n-                with tarfile.open(fileobj=r.raw, mode=\"r:gz\") as tar:\n-                    tar.extractall(fname)\n-                extracted = Path(fname)\n-                for path in extracted.iterdir():\n-                    # get first folder in extracted folder (this is how GH does it)\n-                    return parse_config_folder(path, relative=True)\n+                directory_name = base64.b64encode(config_url.encode()).decode()\n+                with tempfile.TemporaryDirectory(suffix=directory_name) as fname:", "originalCommit": "bad88e58a26d287efa4e7a4b2274b5e4531c940f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5MTg2OQ==", "url": "https://github.com/returntocorp/semgrep/pull/639#discussion_r418691869", "bodyText": "Good call @underyx , addressed that", "author": "ievans", "createdAt": "2020-05-01T19:09:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1OTU5Ng=="}], "type": "inlineReview"}, {"oid": "92a215c6355e1fc34e55b2940cbcdeeefb36f88f", "url": "https://github.com/returntocorp/semgrep/commit/92a215c6355e1fc34e55b2940cbcdeeefb36f88f", "message": "Update config_resolver.py", "committedDate": "2020-05-01T19:08:53Z", "type": "commit"}]}