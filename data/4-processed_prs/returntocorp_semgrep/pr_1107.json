{"pr_number": 1107, "pr_title": "Fix #673, add version check and recommend upgrading when applicable", "pr_createdAt": "2020-06-23T17:34:49Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1107", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5Mzg3Mg==", "url": "https://github.com/returntocorp/semgrep/pull/1107#discussion_r444393872", "bodyText": "Still have to add this header, but it'll include the relevant information for each install mechanism.", "author": "mschwager", "createdAt": "2020-06-23T17:36:08Z", "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -282,6 +290,35 @@ def cli() -> None:\n         error_on_findings=args.error,\n     )\n \n+    if not args.disable_version_check:\n+        quick_timeout = 2  # Don't block user's too long\n+        endpoint = os.environ.get(\n+            \"VERSION_CHECK_URL\", \"https://semgrep.live/api/check-version\"\n+        )\n+        try:\n+            resp = requests.get(\n+                endpoint,\n+                headers={\"User-Agent\": f\"Semgrep/{__VERSION__}\"},\n+                timeout=quick_timeout,\n+            )\n+        except Exception as e:\n+            debug_print(f\"Could not connect to version check URL: {e}\")\n+        else:\n+            if resp.status_code != requests.codes.OK:\n+                debug_print(\n+                    f\"Received HTTP error code from version check URL: {resp.status_code}\"\n+                )\n+            try:\n+                resp_json = resp.json()\n+            except ValueError:\n+                debug_print(f\"Could not decode JSON object from version check URL.\")\n+            else:\n+                latest_version = resp_json[\"latest\"]\n+                if latest_version > __VERSION__:\n+                    print_msg(\n+                        \"A new version of Semgrep is available. Please see https://github.com/returntocorp/semgrep#upgrading for more information.\"", "originalCommit": "bff50e3c438db16b2bd2de8a4218b1cb106027d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5NDQwOA==", "url": "https://github.com/returntocorp/semgrep/pull/1107#discussion_r444394408", "bodyText": "I tested this manually offline as well. The nice thing is it instantly returns in that case and doesn't wait for the timeout.", "author": "mschwager", "createdAt": "2020-06-23T17:37:02Z", "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -282,6 +290,35 @@ def cli() -> None:\n         error_on_findings=args.error,\n     )\n \n+    if not args.disable_version_check:\n+        quick_timeout = 2  # Don't block user's too long\n+        endpoint = os.environ.get(\n+            \"VERSION_CHECK_URL\", \"https://semgrep.live/api/check-version\"\n+        )\n+        try:\n+            resp = requests.get(", "originalCommit": "bff50e3c438db16b2bd2de8a4218b1cb106027d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQwMjI3MA==", "url": "https://github.com/returntocorp/semgrep/pull/1107#discussion_r444402270", "bodyText": "You should compare Semver objects instead of strings", "author": "brendongo", "createdAt": "2020-06-23T17:49:25Z", "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -282,6 +288,37 @@ def cli() -> None:\n         error_on_findings=args.error,\n     )\n \n+    if not args.disable_version_check:\n+        quick_timeout = 2  # Don't block user's too long\n+        endpoint = os.environ.get(\n+            \"VERSION_CHECK_URL\", \"https://semgrep.live/api/check-version\"\n+        )\n+        try:\n+            import requests\n+\n+            resp = requests.get(\n+                endpoint,\n+                headers={\"User-Agent\": f\"Semgrep/{__VERSION__}\"},\n+                timeout=quick_timeout,\n+            )\n+        except Exception as e:\n+            debug_print(f\"Could not connect to version check URL: {e}\")\n+        else:\n+            if resp.status_code != requests.codes.OK:\n+                debug_print(\n+                    f\"Received HTTP error code from version check URL: {resp.status_code}\"\n+                )\n+            try:\n+                resp_json = resp.json()\n+            except ValueError:\n+                debug_print(f\"Could not decode JSON object from version check URL.\")\n+            else:\n+                latest_version = resp_json[\"latest\"]\n+                if latest_version > __VERSION__:", "originalCommit": "5b1bfefe2e5824b371d9ad57e43bf2267146fbe0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ed35a5f93b5141b182edc3ab741fd3f7b383c39a", "url": "https://github.com/returntocorp/semgrep/commit/ed35a5f93b5141b182edc3ab741fd3f7b383c39a", "message": "Fix #673, add version check and recommend upgrading when applicable", "committedDate": "2020-06-23T18:52:50Z", "type": "commit"}, {"oid": "4e3737684918a736f95223c8874339f4d3fee5d7", "url": "https://github.com/returntocorp/semgrep/commit/4e3737684918a736f95223c8874339f4d3fee5d7", "message": "Appease semgrep", "committedDate": "2020-06-23T18:52:50Z", "type": "commit"}, {"oid": "8c2b7b8ada10289b184d31c985cab920a56b4bf7", "url": "https://github.com/returntocorp/semgrep/commit/8c2b7b8ada10289b184d31c985cab920a56b4bf7", "message": "Use semver compare instead of string compare", "committedDate": "2020-06-23T18:52:50Z", "type": "commit"}, {"oid": "8c2b7b8ada10289b184d31c985cab920a56b4bf7", "url": "https://github.com/returntocorp/semgrep/commit/8c2b7b8ada10289b184d31c985cab920a56b4bf7", "message": "Use semver compare instead of string compare", "committedDate": "2020-06-23T18:52:50Z", "type": "forcePushed"}, {"oid": "a2281839c64429dcdcc8aabe61242f3ea5d922a8", "url": "https://github.com/returntocorp/semgrep/commit/a2281839c64429dcdcc8aabe61242f3ea5d922a8", "message": "Add README Upgrading section", "committedDate": "2020-06-23T20:18:04Z", "type": "commit"}]}