{"pr_number": 1591, "pr_title": "Add true negative annotations to --test functionality", "pr_createdAt": "2020-08-25T20:12:26Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1591", "timeline": [{"oid": "15d44b1e4fc1b0c398bef26a4785f9ea50a42c91", "url": "https://github.com/returntocorp/semgrep/commit/15d44b1e4fc1b0c398bef26a4785f9ea50a42c91", "message": "Add true negative annotations to --test functionality", "committedDate": "2020-08-25T20:09:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxNDA3Mg==", "url": "https://github.com/returntocorp/semgrep/pull/1591#discussion_r477514072", "bodyText": "@minusworld here's the error if an ok'ed line is reported. It'd be a good idea to go over our existing tests and mark the ok'ed lines with their specific rule-id. That way we'll be notified if we have any false positives.", "author": "mschwager", "createdAt": "2020-08-26T18:49:34Z", "path": "semgrep/semgrep/test.py", "diffHunk": "@@ -142,11 +160,18 @@ def join_keys(a: Dict[str, Any], b: Dict[str, Any]) -> Set[str]:\n         for check_id in join_keys(comment_lines[file_path], reported_lines[file_path]):\n             all_reported = set(reported_lines[file_path][check_id])\n             expected = set(comment_lines[file_path][check_id])\n+            oked = set(ok_lines[file_path][check_id])\n             ignored = set(ignore_lines[file_path])\n \n+            reported_oked_lines = oked.intersection(all_reported)\n+            if reported_oked_lines:", "originalCommit": "15d44b1e4fc1b0c398bef26a4785f9ea50a42c91", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}