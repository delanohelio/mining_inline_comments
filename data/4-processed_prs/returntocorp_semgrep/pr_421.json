{"pr_number": 421, "pr_title": "Really deep statement matching!", "pr_createdAt": "2020-04-09T12:52:30Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/421", "timeline": [{"oid": "4f856df067c833d3fca9e366710400aaa700a349", "url": "https://github.com/returntocorp/semgrep/commit/4f856df067c833d3fca9e366710400aaa700a349", "message": "Really deep statement matching!\n\nThis flatten the statements also of functions and classes\nThis fix issue #413\n\nTest plan:\ntest file included", "committedDate": "2020-04-09T12:50:00Z", "type": "commit"}, {"oid": "0c1ce293e2c044163c1cd8361965f196ffb6309b", "url": "https://github.com/returntocorp/semgrep/commit/0c1ce293e2c044163c1cd8361965f196ffb6309b", "message": "* sgrep/lib/subast_generic.ml: rewrite substmts_of_stmt, just do that,\ndo the recursion and flattening in extra func. This will be easier\nto extra Lambdas later.", "committedDate": "2020-04-09T13:23:13Z", "type": "commit"}, {"oid": "877f83f72c105e6f981bbf916894c2e324cb73e2", "url": "https://github.com/returntocorp/semgrep/commit/877f83f72c105e6f981bbf916894c2e324cb73e2", "message": "Really deep stmt matching for lambdas too\n\nThis is one way to fixe issue #336\n\ntest plan:\ntest file included", "committedDate": "2020-04-09T14:10:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI3NjY5OQ==", "url": "https://github.com/returntocorp/semgrep/pull/421#discussion_r406276699", "bodyText": "I'd recommend a negative test cases along the lines of:\nconst foo = () => {\n  var x = 1;\n}\nconsole.log(\"hi\")\nwith a pattern like\nvar $X = 1;\n...\nconsole.log(\"...\");", "author": "nbrahms", "createdAt": "2020-04-09T15:11:36Z", "path": "sgrep/tests/js/deep_deep_stmt1.js", "diffHunk": "@@ -0,0 +1,71 @@\n+\n+function test1() {\n+\n+    //ERROR: match\n+    var x = 1;\n+\n+    function foo() {\n+        console.log(x);\n+    }\n+}\n+\n+function test2() {\n+\n+    //ERROR: match\n+    var x = 1;\n+\n+    foo(() => {\n+        console.log(x);\n+    })\n+}\n+\n+function test3() {\n+\n+    //ERROR: match\n+    var x = 1;\n+\n+    foo(function() {\n+        bar(() => {\n+            console.log(x);\n+        })\n+    })\n+}\n+\n+function test4() {\n+\n+    //ERROR: match\n+    var x = 1;\n+\n+    class Hello {\n+        \n+\t    test() {\n+\t\t    console.log(x);\n+\t    }\n+        \n+    }\n+}\n+\n+function test5() {\n+\n+    //ERROR: match\n+    var x = 1;\n+\n+    function OldSchool () {\n+        \n+        this.test = function() {\n+            console.log(x);\n+        }\n+        \n+    }\n+}\n+", "originalCommit": "877f83f72c105e6f981bbf916894c2e324cb73e2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f1f98efa7ecaced79ec82197d0e8818b85da80c8", "url": "https://github.com/returntocorp/semgrep/commit/f1f98efa7ecaced79ec82197d0e8818b85da80c8", "message": "Add negative test case for nathan\n\nTest plan:\ntest file included\nmake test", "committedDate": "2020-04-10T14:33:37Z", "type": "commit"}]}