{"pr_number": 426, "pr_title": "Add automated release job", "pr_createdAt": "2020-04-09T18:33:04Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/426", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3MjQwOA==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r406472408", "bodyText": "Does this match the release name to be the semver tag?", "author": "brendongo", "createdAt": "2020-04-09T20:56:22Z", "path": ".github/workflows/do-release.yml", "diffHunk": "@@ -0,0 +1,158 @@\n+on:\n+  push:\n+    # Sequence of patterns matched against refs/tags\n+    tags:\n+    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10\n+\n+name: Create draft release\n+\n+jobs:\n+  create_release:\n+    name: Create the Github Release\n+    runs-on: ubuntu-latest\n+    needs: [release-osx, release-ubuntu-16-04]\n+    steps:\n+      - name: Create Release\n+        id: create_release\n+        uses: actions/create-release@v1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          tag_name: ${{ github.ref }}\n+          release_name: Release ${{ github.ref }}", "originalCommit": "9f99f75d8685f29b0b733bd17ed0d99fb72cd9ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ5MzkyMA==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r406493920", "bodyText": "I think it will make it release-0.4.10 etc", "author": "DrewDennison", "createdAt": "2020-04-09T21:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3MjQwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3Mjc2NA==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r406472764", "bodyText": "If this is a release probably better to have the release semver in the filename instead of the shahash?", "author": "brendongo", "createdAt": "2020-04-09T20:57:05Z", "path": ".github/workflows/do-release.yml", "diffHunk": "@@ -0,0 +1,158 @@\n+on:\n+  push:\n+    # Sequence of patterns matched against refs/tags\n+    tags:\n+    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10\n+\n+name: Create draft release\n+\n+jobs:\n+  create_release:\n+    name: Create the Github Release\n+    runs-on: ubuntu-latest\n+    needs: [release-osx, release-ubuntu-16-04]\n+    steps:\n+      - name: Create Release\n+        id: create_release\n+        uses: actions/create-release@v1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          tag_name: ${{ github.ref }}\n+          release_name: Release ${{ github.ref }}\n+          draft: true\n+          prerelease: false\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: sgrep-osx-${{ github.sha }}", "originalCommit": "9f99f75d8685f29b0b733bd17ed0d99fb72cd9ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ5NDMwMA==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r406494300", "bodyText": "could have a short hash for develop commits where it's changing but generally agree for semver releases", "author": "DrewDennison", "createdAt": "2020-04-09T21:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3Mjc2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODU3MA==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r407598570", "bodyText": "these names don't get exposed. It's just the way we shuffle assets around internally. On the release, they get named properly.", "author": "rcoh", "createdAt": "2020-04-13T17:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3Mjc2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3MzE5NA==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r406473194", "bodyText": "the convention we've had with past releases has been sgrep-SEMVER-ubuntu-16.04.tgz", "author": "brendongo", "createdAt": "2020-04-09T20:57:57Z", "path": ".github/workflows/do-release.yml", "diffHunk": "@@ -0,0 +1,158 @@\n+on:\n+  push:\n+    # Sequence of patterns matched against refs/tags\n+    tags:\n+    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10\n+\n+name: Create draft release\n+\n+jobs:\n+  create_release:\n+    name: Create the Github Release\n+    runs-on: ubuntu-latest\n+    needs: [release-osx, release-ubuntu-16-04]\n+    steps:\n+      - name: Create Release\n+        id: create_release\n+        uses: actions/create-release@v1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          tag_name: ${{ github.ref }}\n+          release_name: Release ${{ github.ref }}\n+          draft: true\n+          prerelease: false\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: sgrep-osx-${{ github.sha }}\n+          path: sgrep-osx\n+      - name: Get the version\n+        id: get_version\n+        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\\/tags\\//}\n+      - name: help\n+        run: |\n+          pwd;\n+          ls;\n+          find .;\n+      - name: Upload Release Asset\n+        id: upload-release-asset-osx\n+        uses: actions/upload-release-asset@v1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          upload_url: ${{ steps.create_release.outputs.upload_url }}\n+          asset_path: ./sgrep-osx/artifacts.zip\n+          asset_name: sgrep-osx-${{ steps.get_version.outputs.VERSION }}.zip\n+          asset_content_type: application/zip\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: sgrep-ubuntu-16.04-${{ github.sha }}\n+          path: sgrep-ubuntu\n+      - name: Upload Release Asset\n+        id: upload-release-asset-ubuntu\n+        uses: actions/upload-release-asset@v1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          upload_url: ${{ steps.create_release.outputs.upload_url }}\n+          asset_path: ./sgrep-ubuntu/artifacts.tar.gz\n+          asset_name: sgrep-ubuntu-1604-${{ steps.get_version.outputs.VERSION }}.tar.gz", "originalCommit": "9f99f75d8685f29b0b733bd17ed0d99fb72cd9ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3NDIwNQ==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r406474205", "bodyText": "How much work is it to DRY in this PR instead of a follow up PR?", "author": "brendongo", "createdAt": "2020-04-09T20:59:50Z", "path": ".github/workflows/do-release.yml", "diffHunk": "@@ -0,0 +1,158 @@\n+on:\n+  push:\n+    # Sequence of patterns matched against refs/tags\n+    tags:\n+    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10\n+\n+name: Create draft release\n+\n+jobs:\n+  create_release:\n+    name: Create the Github Release\n+    runs-on: ubuntu-latest\n+    needs: [release-osx, release-ubuntu-16-04]\n+    steps:\n+      - name: Create Release\n+        id: create_release\n+        uses: actions/create-release@v1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          tag_name: ${{ github.ref }}\n+          release_name: Release ${{ github.ref }}\n+          draft: true\n+          prerelease: false\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: sgrep-osx-${{ github.sha }}\n+          path: sgrep-osx\n+      - name: Get the version\n+        id: get_version\n+        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\\/tags\\//}\n+      - name: help\n+        run: |\n+          pwd;\n+          ls;\n+          find .;\n+      - name: Upload Release Asset\n+        id: upload-release-asset-osx\n+        uses: actions/upload-release-asset@v1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          upload_url: ${{ steps.create_release.outputs.upload_url }}\n+          asset_path: ./sgrep-osx/artifacts.zip\n+          asset_name: sgrep-osx-${{ steps.get_version.outputs.VERSION }}.zip\n+          asset_content_type: application/zip\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: sgrep-ubuntu-16.04-${{ github.sha }}\n+          path: sgrep-ubuntu\n+      - name: Upload Release Asset\n+        id: upload-release-asset-ubuntu\n+        uses: actions/upload-release-asset@v1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          upload_url: ${{ steps.create_release.outputs.upload_url }}\n+          asset_path: ./sgrep-ubuntu/artifacts.tar.gz\n+          asset_name: sgrep-ubuntu-1604-${{ steps.get_version.outputs.VERSION }}.tar.gz\n+          asset_content_type: application/gzip\n+  release-osx:\n+    name: Build the OSX binaries\n+    runs-on: macos-latest\n+    # TODO: this is very similar to the mac-build workflow. Convert to an action\n+    steps:\n+      - name: Install System Deps\n+        run: brew install opam pkg-config coreutils\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: OPAM setup\n+        run: |\n+          opam init --no-setup --bare;\n+          opam switch create 4.07.1;\n+          opam switch 4.07.1;\n+      - name: OPAM install Deps\n+        run: eval $(opam env); opam install -y reason dune ocamlfind camlp4 num ocamlgraph json-wheel conf-perl yaml\n+      - name: Install submodules\n+        run: git submodule update --init --recursive\n+      - name: Install pfff\n+        run: eval $(opam env) && opam install -y ./pfff\n+      - name: Install and test sgrep\n+        run: eval $(opam env) && cd sgrep && make all && make test && make install\n+      - name: Prepare artifacts\n+        run: |\n+          mkdir -p artifacts;\n+          cp ./sgrep/_build/default/bin/main_sgrep.exe artifacts/sgrep;\n+          zip -r artifacts.zip artifacts\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v1\n+        with:\n+          name: sgrep-osx-${{ github.sha }}\n+          path: artifacts.zip\n+  release-ubuntu-16-04:\n+    # TODO: this is very similar to the ubuntu-build workflow.\n+    # convert to github action to DRY", "originalCommit": "9f99f75d8685f29b0b733bd17ed0d99fb72cd9ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODk2NA==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r407598964", "bodyText": "probably 1-2h? Not sure I'm also not 100% we want them to be exactly the same? eg. maybe there's a faster way to run tests", "author": "rcoh", "createdAt": "2020-04-13T17:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3NDIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYxNjg3NQ==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r407616875", "bodyText": "actually turns out this is literally impossible for OSX tasks \ud83d\ude44", "author": "rcoh", "createdAt": "2020-04-13T17:51:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3NDIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwNDg1Ng==", "url": "https://github.com/returntocorp/semgrep/pull/426#discussion_r407704856", "bodyText": "I'm worried if they arent the same then this test might pass but the actual binary built by the other job is broken", "author": "brendongo", "createdAt": "2020-04-13T20:35:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3NDIwNQ=="}], "type": "inlineReview"}, {"oid": "cabd4bfdbbef4e58f60f504a65d460773e53c3f0", "url": "https://github.com/returntocorp/semgrep/commit/cabd4bfdbbef4e58f60f504a65d460773e53c3f0", "message": "Move everything to semgrep that's possible to move. Probably missed something", "committedDate": "2020-04-13T17:50:05Z", "type": "forcePushed"}, {"oid": "e5aaed2fee3e48367c90ab5fc539aac122cc7e32", "url": "https://github.com/returntocorp/semgrep/commit/e5aaed2fee3e48367c90ab5fc539aac122cc7e32", "message": "Add automated release job", "committedDate": "2020-04-16T15:27:39Z", "type": "commit"}, {"oid": "0d228acad9070a15e1a9918eab68d40fbbbd495c", "url": "https://github.com/returntocorp/semgrep/commit/0d228acad9070a15e1a9918eab68d40fbbbd495c", "message": "Cleanup trailing whitespace", "committedDate": "2020-04-16T15:27:39Z", "type": "commit"}, {"oid": "7ee38e8dd9fbb50275397c1566e3b6efab609f52", "url": "https://github.com/returntocorp/semgrep/commit/7ee38e8dd9fbb50275397c1566e3b6efab609f52", "message": "Move everything to semgrep that's possible to move. Probably missed something", "committedDate": "2020-04-16T15:27:39Z", "type": "commit"}, {"oid": "c0dc171c89771018c6d591d42e28e6927dd0f549", "url": "https://github.com/returntocorp/semgrep/commit/c0dc171c89771018c6d591d42e28e6927dd0f549", "message": "Fix directory name", "committedDate": "2020-04-16T15:27:39Z", "type": "commit"}, {"oid": "1f0773302afbdfbd353ee5f4fb2e74b259694bd5", "url": "https://github.com/returntocorp/semgrep/commit/1f0773302afbdfbd353ee5f4fb2e74b259694bd5", "message": "Factor out OSX release script", "committedDate": "2020-04-16T15:31:38Z", "type": "commit"}, {"oid": "1f0773302afbdfbd353ee5f4fb2e74b259694bd5", "url": "https://github.com/returntocorp/semgrep/commit/1f0773302afbdfbd353ee5f4fb2e74b259694bd5", "message": "Factor out OSX release script", "committedDate": "2020-04-16T15:31:38Z", "type": "forcePushed"}, {"oid": "ccacea686a62c9ef91771524cbd058c560bd8131", "url": "https://github.com/returntocorp/semgrep/commit/ccacea686a62c9ef91771524cbd058c560bd8131", "message": "Quote opam env for shellcheck", "committedDate": "2020-04-16T15:38:11Z", "type": "commit"}, {"oid": "8787807910924b5f407c86aeba78a4600592ba73", "url": "https://github.com/returntocorp/semgrep/commit/8787807910924b5f407c86aeba78a4600592ba73", "message": "Factor out ubuntu release", "committedDate": "2020-04-16T15:57:38Z", "type": "commit"}, {"oid": "b141defd1585d4568072f6cb33eee8fce05a9cc9", "url": "https://github.com/returntocorp/semgrep/commit/b141defd1585d4568072f6cb33eee8fce05a9cc9", "message": "Fix release script opam invocation", "committedDate": "2020-04-16T16:01:57Z", "type": "commit"}, {"oid": "44d73eb44d03d1b85bc62abf476ef019cd5e5c39", "url": "https://github.com/returntocorp/semgrep/commit/44d73eb44d03d1b85bc62abf476ef019cd5e5c39", "message": "Adjust permissions before checkout", "committedDate": "2020-04-16T16:14:19Z", "type": "commit"}, {"oid": "f33658a505d41c4c679e7c976ef0ed2c6bdc07ac", "url": "https://github.com/returntocorp/semgrep/commit/f33658a505d41c4c679e7c976ef0ed2c6bdc07ac", "message": "Tweaks because we aren't inside the GH runner anymore", "committedDate": "2020-04-16T16:20:31Z", "type": "commit"}]}