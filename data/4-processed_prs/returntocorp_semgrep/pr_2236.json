{"pr_number": 2236, "pr_title": "Parse finalizer in C#", "pr_createdAt": "2020-12-11T13:36:55Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/2236", "timeline": [{"oid": "fd0553b00c7bc3dddee4af93f60ca94c6e8417ca", "url": "https://github.com/returntocorp/semgrep/commit/fd0553b00c7bc3dddee4af93f60ca94c6e8417ca", "message": "Parse finalizer in C#\n\nE.g.\n```csharp\n~MyClass() { }\n```\n\nAlso called destructor in other languages.\n\nRelates to #1392", "committedDate": "2020-12-11T13:36:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk1NTUxMA==", "url": "https://github.com/returntocorp/semgrep/pull/2236#discussion_r540955510", "bodyText": "We could generate a name like ~HelloWorldFinalizer instead of just finalize.\nYou can also merge multiple tokens into one when it makes sense, her for example v3 and v4 would\nbe merged. See the use of PI.combine_infos in Parse_go_tree_sitter.ml for example where we have 3 tokens for\na string \"foo\" (the token for the first '\"', then a token for 'foo', then another token for the last '\"', but we merge all 3 tokens in a single one and we generate a String(\"foo\",  <combined_token_info>)", "author": "aryx", "createdAt": "2020-12-11T13:43:20Z", "path": "semgrep-core/parsing/Parse_csharp_tree_sitter.ml", "diffHunk": "@@ -2191,14 +2191,23 @@ and declaration (env : env) (x : CST.declaration) : stmt =\n        let v1 = List.concat_map (attribute_list env) v1 in\n        let v2 =\n          (match v2 with\n-          | Some tok -> token env tok (* \"extern\" *)\n-          | None -> todo env ())\n+          | Some tok -> [KeywordAttr (Extern, token env tok)] (* \"extern\" *)\n+          | None -> [])\n        in\n        let v3 = token env v3 (* \"~\" *) in\n        let v4 = identifier env v4 (* identifier *) in\n        let v5 = parameter_list env v5 in\n        let v6 = function_body env v6 in\n-       todo env (v1, v2, v3, v4, v5, v6)\n+       let name = (\"Finalize\", v3) in", "originalCommit": "fd0553b00c7bc3dddee4af93f60ca94c6e8417ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}