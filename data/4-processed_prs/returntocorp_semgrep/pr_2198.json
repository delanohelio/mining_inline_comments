{"pr_number": 2198, "pr_title": "spacegrep optimizations", "pr_createdAt": "2020-12-06T23:04:03Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/2198", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM3MTM0Mg==", "url": "https://github.com/returntocorp/semgrep/pull/2198#discussion_r537371342", "bodyText": "Shoudn't this be put later when you know you're not in the Minified or Binary case? Otherwise\nit defeats the purpose of the optimization no? Looks like you gonna read the whole doc in every paths,\nwhatever the result of the classify on the peek_length read doc.", "author": "aryx", "createdAt": "2020-12-07T09:54:20Z", "path": "spacegrep/src/bin/Spacegrep_main.ml", "diffHunk": "@@ -43,9 +43,22 @@ let run_all\n     ~case_sensitive ~debug ~force ~output_format ~highlight ~warn\n     patterns docs =\n   let matches =\n-    List.map (fun get_doc_src ->\n-      let doc_src = get_doc_src () in\n-      let doc_type = File_type.classify doc_src in\n+    List.filter_map (fun (get_doc_src : ?max_len:int -> unit -> Src_file.t) ->\n+      (*\n+         We inspect the first 4096 bytes to guess whether the file type.\n+         This saves time on large files, by reading typically just one\n+         block from the file system.\n+      *)\n+      let peek_length = 4096 in\n+      let partial_doc_src = get_doc_src ~max_len:peek_length () in\n+      let doc_type = File_type.classify partial_doc_src in\n+      let doc_src =", "originalCommit": "d563a4d6e9d5e456570d3c88b2363ae634f87929", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcyMzA0OA==", "url": "https://github.com/returntocorp/semgrep/pull/2198#discussion_r537723048", "bodyText": "oh, I really rushed this. Thanks for taking a look.", "author": "mjambon", "createdAt": "2020-12-07T18:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM3MTM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzczNjg0Ng==", "url": "https://github.com/returntocorp/semgrep/pull/2198#discussion_r537736846", "bodyText": "weird that you got better performance ... it should have been the same amount of time than before.", "author": "aryx", "createdAt": "2020-12-07T18:37:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM3MTM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyMTM4MQ==", "url": "https://github.com/returntocorp/semgrep/pull/2198#discussion_r537821381", "bodyText": "I fixed this, which seems to improves the performance overall and on a single big binary file, but otherwise it's slower on a repo with mostly small source files. I don't understand why. I'll try to get to the bottom of this before merging. I might also postpone this task since it's fun but not urgent.", "author": "mjambon", "createdAt": "2020-12-07T20:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM3MTM0Mg=="}], "type": "inlineReview"}, {"oid": "139d4dc4c85de1cc2837c7c8aa2c07ac278d37eb", "url": "https://github.com/returntocorp/semgrep/commit/139d4dc4c85de1cc2837c7c8aa2c07ac278d37eb", "message": "Fix: actually read the whole file lazily", "committedDate": "2020-12-07T22:03:53Z", "type": "forcePushed"}, {"oid": "4e2e4763e6acd92541c3549af4f72d551b30c655", "url": "https://github.com/returntocorp/semgrep/commit/4e2e4763e6acd92541c3549af4f72d551b30c655", "message": "spacegrep - only peek into the first 4096 (first FS block or so) to\ndetermine whether to skip an input file.\nAlso, don't keep all file contents in memory until the end. This saves a\nlot of memory when matches are rare. Still a problem when all the files\nmatch.", "committedDate": "2020-12-07T23:31:57Z", "type": "commit"}, {"oid": "d8cbe73e4a3f77dda19f9313ba241f5251c8f154", "url": "https://github.com/returntocorp/semgrep/commit/d8cbe73e4a3f77dda19f9313ba241f5251c8f154", "message": "Fix: actually read the whole file lazily", "committedDate": "2020-12-07T23:31:57Z", "type": "commit"}, {"oid": "d8cbe73e4a3f77dda19f9313ba241f5251c8f154", "url": "https://github.com/returntocorp/semgrep/commit/d8cbe73e4a3f77dda19f9313ba241f5251c8f154", "message": "Fix: actually read the whole file lazily", "committedDate": "2020-12-07T23:31:57Z", "type": "forcePushed"}, {"oid": "8f77d26f251b99dfba9fcb887912a5a2a2a1f17b", "url": "https://github.com/returntocorp/semgrep/commit/8f77d26f251b99dfba9fcb887912a5a2a2a1f17b", "message": "Set GC to work less aggressively resulting in a 2x speedup (when run on\nthe spacegrep repo after a build)", "committedDate": "2020-12-08T00:20:18Z", "type": "commit"}]}