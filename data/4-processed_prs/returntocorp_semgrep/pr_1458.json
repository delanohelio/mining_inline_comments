{"pr_number": 1458, "pr_title": "timeout threshold flag", "pr_createdAt": "2020-08-05T21:20:11Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1458", "timeline": [{"oid": "f6f8f6420f15fc3ea98c68d30827f0eea15ecb04", "url": "https://github.com/returntocorp/semgrep/commit/f6f8f6420f15fc3ea98c68d30827f0eea15ecb04", "message": "added flag and tests", "committedDate": "2020-08-05T21:13:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNDM4Nw==", "url": "https://github.com/returntocorp/semgrep/pull/1458#discussion_r466014387", "bodyText": "Probably worth adding a test that has max-timeouts > 1 and checking that it doesn't stop running rules until it hits max-timeouts. Can probably just create another rule file that duplicates the rule in long.yaml a bunch of times.", "author": "brendongo", "createdAt": "2020-08-05T21:27:48Z", "path": "semgrep/tests/e2e/test_check.py", "diffHunk": "@@ -209,3 +209,29 @@ def test_max_memory(run_semgrep_in_tmp, snapshot):\n         ),\n         \"error.txt\",\n     )\n+\n+\n+def test_max_timeouts(run_semgrep_in_tmp, snapshot):\n+    # Check that semgrep-core timeouts are properly handled\n+\n+    snapshot.assert_match(\n+        run_semgrep_in_tmp(\n+            \"rules/long.yaml\",\n+            options=[\"--timeout\", \"1\", \"--max-timeouts\", \"1\"],", "originalCommit": "f6f8f6420f15fc3ea98c68d30827f0eea15ecb04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyMjM0Mg==", "url": "https://github.com/returntocorp/semgrep/pull/1458#discussion_r466022342", "bodyText": "Will do!", "author": "sabrinabrogren", "createdAt": "2020-08-05T21:45:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNDM4Nw=="}], "type": "inlineReview"}, {"oid": "71cf9858c0a8c9db983c5d9b7e788c89f57cde58", "url": "https://github.com/returntocorp/semgrep/commit/71cf9858c0a8c9db983c5d9b7e788c89f57cde58", "message": "More tests and changing flag name", "committedDate": "2020-08-07T16:20:58Z", "type": "commit"}, {"oid": "e087afeaeabec2c3305fc145ec1bbc7e53f7c2a5", "url": "https://github.com/returntocorp/semgrep/commit/e087afeaeabec2c3305fc145ec1bbc7e53f7c2a5", "message": "renamed flag, default now 0, print helpful hint message if there are many timeouts", "committedDate": "2020-08-07T21:15:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAwODE5NA==", "url": "https://github.com/returntocorp/semgrep/pull/1458#discussion_r468008194", "bodyText": "We can be slightly more defensive here by using >=, which could prevent an infinite loop in the future.", "author": "mschwager", "createdAt": "2020-08-10T15:53:45Z", "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -441,11 +457,19 @@ def _run_rules(\n             ):\n                 debug_tqdm_write(f\"Running rule {rule._raw.get('id')}\")\n                 rule_matches, debugging_steps, errors = self._run_rule(\n-                    rule, target_manager, semgrep_core_ast_cache_dir\n+                    rule, target_manager, semgrep_core_ast_cache_dir, max_timeout_files\n                 )\n                 findings_by_rule[rule] = rule_matches\n                 debugging_steps_by_rule[rule] = debugging_steps\n                 all_errors.extend(errors)\n+                for err in errors:\n+                    if isinstance(err, MatchTimeoutError):\n+                        file_timeouts[err.path] += 1\n+                        if (\n+                            self._timeout_threshold != 0\n+                            and file_timeouts[err.path] == self._timeout_threshold", "originalCommit": "e087afeaeabec2c3305fc145ec1bbc7e53f7c2a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxMDQzNg==", "url": "https://github.com/returntocorp/semgrep/pull/1458#discussion_r468010436", "bodyText": "Do we typically use with_color with our loggers? I see it's only currently used in semgrep/error.py and not in any logger calls. I'll defer to @brendongo here.", "author": "mschwager", "createdAt": "2020-08-10T15:57:07Z", "path": "semgrep/semgrep/output.py", "diffHunk": "@@ -243,9 +245,24 @@ def handle_semgrep_errors(self, errors: List[SemgrepError]) -> None:\n     def handle_semgrep_timeout_errors(self, errors: Dict[Path, List[str]]) -> None:\n         self.has_output = True\n         separator = \", \"\n+        print_threshold_hint = False\n         for path in errors.keys():\n+            num_errs = len(errors[path])\n+            errors[path].sort()\n+            error_msg = f\"Warning: {num_errs} timeout error(s) in {path} when running the following rules: [{separator.join(errors[path])}]\"\n+            if num_errs == self.settings.timeout_threshold:\n+                error_msg += f\"\\nSemgrep stopped running rules on {path} after {num_errs} timeout error(s). See `--timeout-threshold` for more info.\"\n+            print_threshold_hint = print_threshold_hint or (\n+                num_errs > 5 and not self.settings.timeout_threshold\n+            )\n+            logger.error(with_color(colorama.Fore.RED, error_msg))", "originalCommit": "e087afeaeabec2c3305fc145ec1bbc7e53f7c2a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAyMjA0Ng==", "url": "https://github.com/returntocorp/semgrep/pull/1458#discussion_r468022046", "bodyText": "I used it here because the messages were red before, so when aggregating them and creating a new error message I added with-color to make them look like the other not aggregated error messages.", "author": "sabrinabrogren", "createdAt": "2020-08-10T16:16:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxMDQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2Mzg2MA==", "url": "https://github.com/returntocorp/semgrep/pull/1458#discussion_r468163860", "bodyText": "I think there are other errors that have color added as part of their str function that get written to log so this is fine.", "author": "brendongo", "createdAt": "2020-08-10T20:21:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxMDQzNg=="}], "type": "inlineReview"}, {"oid": "813248594c48afadfa3be14e909a9f461463afeb", "url": "https://github.com/returntocorp/semgrep/commit/813248594c48afadfa3be14e909a9f461463afeb", "message": "small fix", "committedDate": "2020-08-10T16:21:43Z", "type": "commit"}]}