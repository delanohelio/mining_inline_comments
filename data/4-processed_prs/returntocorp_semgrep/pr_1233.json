{"pr_number": 1233, "pr_title": "Ruby and semgrep, v0", "pr_createdAt": "2020-07-10T15:12:15Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1233", "timeline": [{"oid": "d435b0668f7797675a4f83005f79219dd2b6044d", "url": "https://github.com/returntocorp/semgrep/commit/d435b0668f7797675a4f83005f79219dd2b6044d", "message": "* pfff: use latest, and CEs on AST generic changes", "committedDate": "2020-07-10T13:42:17Z", "type": "commit"}, {"oid": "7222137d6f21b8bc943e7fc3f985d623bb606737", "url": "https://github.com/returntocorp/semgrep/commit/7222137d6f21b8bc943e7fc3f985d623bb606737", "message": "Add token info from tree-sitter and add few test cases for semgrep/ruby\n\nTest plan:\nmake test now should also run the tests under semgrep-core/tests/ruby/", "committedDate": "2020-07-10T15:11:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4NTYxNQ==", "url": "https://github.com/returntocorp/semgrep/pull/1233#discussion_r452985615", "bodyText": "Might be worth noting that most of this can go in a language-agnostic library in the future.", "author": "nbrahms", "createdAt": "2020-07-10T17:46:41Z", "path": "semgrep-core/parsing/Parse_ruby_tree_sitter.ml", "diffHunk": "@@ -27,14 +27,66 @@ module G = AST_generic\n  * The resulting AST can then be converted to the generic AST by using\n  * pfff/lang_ruby/analyze/ruby_to_generic.ml\n  *)\n+(*****************************************************************************)\n+(* Globals *)\n+(*****************************************************************************)\n+(* not very multicore friendly *)\n+let global_file = ref \"\"\n+let global_conv = ref (Hashtbl.create 0)\n \n (*****************************************************************************)\n (* Helpers *)\n (*****************************************************************************)\n-let token2 (_tok : Tree_sitter_run.Token.t) =\n-  PI.fake_info \"XXX\"\n-let str (_tok : Tree_sitter_run.Token.t) =\n-  \"STRXXX\", PI.fake_info \"XXX\"\n+\n+(* mostly a copy of Parse_info.full_charpos_to_pos_large *)", "originalCommit": "7222137d6f21b8bc943e7fc3f985d623bb606737", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2NDQ0Nw==", "url": "https://github.com/returntocorp/semgrep/pull/1233#discussion_r453064447", "bodyText": "yep, totally, I'll move it to a tree_sitter_utils.ml when I do Parse_java_tree_sitter.ml (or the typescript one).", "author": "aryx", "createdAt": "2020-07-10T20:33:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4NTYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4NTk2OQ==", "url": "https://github.com/returntocorp/semgrep/pull/1233#discussion_r452985969", "bodyText": "Why's this file changing?", "author": "nbrahms", "createdAt": "2020-07-10T17:47:27Z", "path": "semgrep-core/tests/python/concrete_syntax.py", "diffHunk": "@@ -1,11 +1,13 @@\n def foo():", "originalCommit": "7222137d6f21b8bc943e7fc3f985d623bb606737", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2NDkwMA==", "url": "https://github.com/returntocorp/semgrep/pull/1233#discussion_r453064900", "bodyText": "It's because to start the examples from ruby I copy-pasted a few one from python (which themselves were copy-pasted\nfrom examples for javascripts) and realized some python examples were not as powerful as they could be (the javascript examples were better for instance).", "author": "aryx", "createdAt": "2020-07-10T20:34:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4NTk2OQ=="}], "type": "inlineReview"}]}