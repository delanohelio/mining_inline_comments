{"pr_number": 1251, "pr_title": "* semgrep-core/synthesizing/Unit_synthesizer.ml: fix", "pr_createdAt": "2020-07-13T14:26:05Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1251", "timeline": [{"oid": "a30b34792eb66259ceaa2cfa83ff8ccb2490fca4", "url": "https://github.com/returntocorp/semgrep/commit/a30b34792eb66259ceaa2cfa83ff8ccb2490fca4", "message": "* semgrep-core/synthesizing/Unit_synthesizer.ml: fix\n\nTest plan:\nmake test", "committedDate": "2020-07-13T14:25:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY5ODIxNw==", "url": "https://github.com/returntocorp/semgrep/pull/1251#discussion_r453698217", "bodyText": "I'll probably want to put this as the error message and not print it out each time", "author": "emjin", "createdAt": "2020-07-13T14:38:59Z", "path": "semgrep-core/synthesizing/Unit_synthesizer.ml", "diffHunk": "@@ -174,28 +174,40 @@ let unittest =\n         let code = Parse_generic.parse_program file in\n         let r = Range.range_of_linecol_spec range file in\n         Naming_AST.resolve lang code;\n-        let check_pats (_, pat) =\n+        let check_pats (str, pat) =\n           try\n             let pattern = Parse_generic.parse_pattern lang pat in\n             let e_opt = Range_to_AST.expr_at_range r code in\n                match e_opt with\n                  | Some e ->\n-                    let matches_with_env = Semgrep_generic.match_any_any pattern (A.E e) in\n-                    (* Debugging note: uses pattern_to_string for convenience, but really should *)\n-                    (* match the code in the given file at the given range *)\n-                    pr2 (AST_generic.show_any (A.E e));\n-                    pr2 (AST_generic.show_any (pattern));\n-                    assert_bool (spf \"pattern:|%s| should match |%s\" pat (PPG.pattern_to_string lang (A.E e)))\n-                    (matches_with_env <> [])\n-                 | None -> failwith (spf \"Couldn't find range %s in %s\" range file)\n+                    let matches_with_env = Semgrep_generic.match_any_any\n+                          pattern (A.E e) in\n+                    (* Debugging note: uses pattern_to_string for convenience,\n+                     * but really should match the code in the given file at\n+                     * the given range *)\n+                    if matches_with_env = []\n+                    then begin", "originalCommit": "a30b34792eb66259ceaa2cfa83ff8ccb2490fca4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}