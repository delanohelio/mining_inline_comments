{"pr_number": 921, "pr_title": "semgrep-core: don't filter out explicitly passed targets", "pr_createdAt": "2020-06-05T00:09:08Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/921", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMzM3OA==", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435623378", "bodyText": "Remove since this requires files have expected extension", "author": "brendongo", "createdAt": "2020-06-05T00:09:44Z", "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -415,18 +421,10 @@ let iter_generic_ast_of_files_and_get_matches_and_exn_to_errors f files =\n        if !verbose then pr2 (spf \"Analyzing %s\" file);\n        try\n          let lang =\n-           match Lang.langs_of_filename file with", "originalCommit": "77a89aa07d49cad2beb84c82d869eaf1544bc415", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTkwNw==", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435629907", "bodyText": "How does this avoid double-passing files in each side?", "author": "nbrahms", "createdAt": "2020-06-05T00:36:43Z", "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -405,7 +405,13 @@ let get_final_files xs =\n     | Some lang -> Lang.files_of_dirs_or_files lang xs\n   in\n   let files = filter_files files in\n-  files\n+\n+  let explicit_files = xs |> List.filter(fun file ->\n+      Sys.file_exists file && not (Sys.is_directory file)\n+    )\n+  in\n+\n+  files @ explicit_files", "originalCommit": "77a89aa07d49cad2beb84c82d869eaf1544bc415", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDg1Nw==", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435630857", "bodyText": "FWIW, I'd think you'd make a set out of files, and check lack of set membership.", "author": "nbrahms", "createdAt": "2020-06-05T00:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTkwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTE0MA==", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435631140", "bodyText": "Good call this doesn't dedup", "author": "brendongo", "createdAt": "2020-06-05T00:41:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTkwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDU2Mw==", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435630563", "bodyText": "I think you want to move the langs_of_filename check in here, and keep the automated detection. So if someone omits -lang and passes in foo.py we parse as python, but if someone passes foo.blargh we error.", "author": "nbrahms", "createdAt": "2020-06-05T00:39:28Z", "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -415,18 +421,10 @@ let iter_generic_ast_of_files_and_get_matches_and_exn_to_errors f files =\n        if !verbose then pr2 (spf \"Analyzing %s\" file);\n        try\n          let lang =\n-           match Lang.langs_of_filename file with\n-           | [lang] -> lang\n-           | x::_xs ->\n-               (match Lang.lang_of_string_opt !lang with\n-               | Some lang -> lang\n-               | None ->\n-                 pr2 (spf \"no language specified, defaulting to %s for %s\"\n-                      (Lang.string_of_lang x) file);", "originalCommit": "77a89aa07d49cad2beb84c82d869eaf1544bc415", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTE2OQ==", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435631169", "bodyText": "I think it's fine to not work when -lang is not passed?", "author": "brendongo", "createdAt": "2020-06-05T00:41:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDU2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5NzMxMw==", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435997313", "bodyText": "OK, but then I think you'll want to audit all the documentation to make sure we have -lang in all our examples.\nIMO it's easier to make the smaller change here, but will leave it to you.", "author": "nbrahms", "createdAt": "2020-06-05T15:28:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDU2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0NzE3Ng==", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r436047176", "bodyText": "This is to semgrep-core so it's not exposed externally anyway", "author": "brendongo", "createdAt": "2020-06-05T16:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDU2Mw=="}], "type": "inlineReview"}, {"oid": "12a25125a1cf94c84a673fc824c830c3907250b9", "url": "https://github.com/returntocorp/semgrep/commit/12a25125a1cf94c84a673fc824c830c3907250b9", "message": "semgrep-core: don't filter out explicitly passed targets\n\nFiles listed as targets for analysis are analyzed even if they do not\nhave an expected extension", "committedDate": "2020-06-05T01:07:02Z", "type": "commit"}, {"oid": "872fe3ba3b63c10ff46f9c9551829ceed3fdd83a", "url": "https://github.com/returntocorp/semgrep/commit/872fe3ba3b63c10ff46f9c9551829ceed3fdd83a", "message": "fixup! semgrep-core: don't filter out explicitly passed targets", "committedDate": "2020-06-05T01:07:02Z", "type": "commit"}, {"oid": "872fe3ba3b63c10ff46f9c9551829ceed3fdd83a", "url": "https://github.com/returntocorp/semgrep/commit/872fe3ba3b63c10ff46f9c9551829ceed3fdd83a", "message": "fixup! semgrep-core: don't filter out explicitly passed targets", "committedDate": "2020-06-05T01:07:02Z", "type": "forcePushed"}, {"oid": "52f2f60dcfd64611916acd2753ff321d0019b8d0", "url": "https://github.com/returntocorp/semgrep/commit/52f2f60dcfd64611916acd2753ff321d0019b8d0", "message": "fixup! semgrep-core: don't filter out explicitly passed targets", "committedDate": "2020-06-05T17:05:17Z", "type": "commit"}]}