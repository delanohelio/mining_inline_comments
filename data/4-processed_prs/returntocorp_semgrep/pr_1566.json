{"pr_number": 1566, "pr_title": "Fix jsonschema deprecation warning", "pr_createdAt": "2020-08-21T16:18:12Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1566", "timeline": [{"oid": "08afe76ba56fc562e58a8251e5843d1a804473d2", "url": "https://github.com/returntocorp/semgrep/commit/08afe76ba56fc562e58a8251e5843d1a804473d2", "message": "Fix jsonschema deprecation warning\n\n... by pinning validator.", "committedDate": "2020-08-21T16:17:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc5NzkyMA==", "url": "https://github.com/returntocorp/semgrep/pull/1566#discussion_r474797920", "bodyText": "Also just found some extra lines to delete here as well", "author": "nbrahms", "createdAt": "2020-08-21T16:19:54Z", "path": "semgrep/semgrep/rule.py", "diffHunk": "@@ -88,21 +88,17 @@ def _parse_boolean_expression(\n         for rule_index, pattern_tree in enumerate(rule_patterns.value):\n             pattern = pattern_tree.value\n             for boolean_operator_yaml, sub_pattern in pattern.items():\n-                boolean_operator: str = boolean_operator_yaml.value\n                 operator = operator_for_pattern_name(boolean_operator_yaml)\n                 if operator in set(OPERATORS_WITH_CHILDREN):\n-                    if isinstance(sub_pattern.value, list):\n-                        sub_expression = self._parse_boolean_expression(\n-                            sub_pattern, 0, f\"{prefix}.{rule_index}.{pattern_id_idx}\"\n-                        )\n-                        yield BooleanRuleExpression(\n-                            operator=operator,\n-                            pattern_id=None,\n-                            children=list(sub_expression),\n-                            operand=None,\n-                        )\n-                    else:\n-                        raise Exception(\"Internal error: bad schema\")\n+                    sub_expression = self._parse_boolean_expression(", "originalCommit": "08afe76ba56fc562e58a8251e5843d1a804473d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}