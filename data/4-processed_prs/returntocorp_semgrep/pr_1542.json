{"pr_number": 1542, "pr_title": "Use jsonschema for rule config validation", "pr_createdAt": "2020-08-19T18:42:50Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1542", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2MDExMA==", "url": "https://github.com/returntocorp/semgrep/pull/1542#discussion_r473260110", "bodyText": "Can we store this as a const Python dict somewhere? That way we won't have to read something from disk every time we perform validation or include a file in the package MANIFEST.", "author": "mschwager", "createdAt": "2020-08-19T19:12:09Z", "path": "semgrep/semgrep/rule_lang.py", "diffHunk": "@@ -328,11 +334,15 @@ def construct_object(self, node: Node, deep: bool = False) -> YamlTree:\n     yaml = YAML()\n     yaml.Constructor = SpanPreservingRuamelConstructor\n     data = yaml.load(StringIO(contents))\n+\n+    schema_path = Path(__file__).parent / \"rule_schema.yaml\"\n+    with schema_path.open() as fd:\n+        validation_schema = yaml.load(fd).unroll()", "originalCommit": "759ddf3c9d1520647ee821a0da85df7c37e9c486", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0OTQ4NQ==", "url": "https://github.com/returntocorp/semgrep/pull/1542#discussion_r473449485", "bodyText": "I much prefer using the external file, as we can publish it. I'm happy to load it once, though.", "author": "nbrahms", "createdAt": "2020-08-19T23:54:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2MDExMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2Njg1MQ==", "url": "https://github.com/returntocorp/semgrep/pull/1542#discussion_r473266851", "bodyText": "I believe we include dependencies in setup.py then rely on path = \".\" below for local installation.", "author": "mschwager", "createdAt": "2020-08-19T19:24:51Z", "path": "semgrep/Pipfile", "diffHunk": "@@ -12,6 +12,7 @@ appdirs = \"*\"\n pytest-xdist = \"*\"\n \n [packages]\n+jsonschema = \"~=3.2.0\"", "originalCommit": "ab690f1de5fd74d133b9c1bdb4daf6d654dd6460", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "252519841f177737be16aa8d843a01e7c45f1db0", "url": "https://github.com/returntocorp/semgrep/commit/252519841f177737be16aa8d843a01e7c45f1db0", "message": "Use jsonschema for rule config validation", "committedDate": "2020-08-19T19:55:00Z", "type": "forcePushed"}, {"oid": "5780b34f23eda9b0e88c00f5c97fdfb6047799c2", "url": "https://github.com/returntocorp/semgrep/commit/5780b34f23eda9b0e88c00f5c97fdfb6047799c2", "message": "Use jsonschema for rule config validation\n\nPreviously we used an ersatz schema validation system scattered\nthroughout different parts of our code base, and requiring significant\nmanual work to update.\n\nHere we substitute in jsonschema as a validation system. This should\nallow us to catch more problems (e.g. the motivating example in #1460).\n\nAdvantages:\n- Centralized schema definition using a publicly documented definition\n  language\n- Properly handles recursion in patterns, etc.\n- Uniform errors\n- Adds support for previously missing items (e.g. 'metavariable-regex')\n\nDisadvantages:\n- Adds an external dependency to our application\n- Due to an issue in the python jsonschema library, if-then-else is not\n  properly implemented, preventing correct toggling of taint on the\n  mode key\n- When multiple possible schemata could match, and all fail validation,\n  jsonschema only reports the first option as a failure", "committedDate": "2020-08-19T23:47:52Z", "type": "forcePushed"}, {"oid": "ac2af64e2e5622f692e26458481a3c5d2183eeb9", "url": "https://github.com/returntocorp/semgrep/commit/ac2af64e2e5622f692e26458481a3c5d2183eeb9", "message": "Use jsonschema for rule config validation\n\nPreviously we used an ersatz schema validation system scattered\nthroughout different parts of our code base, and requiring significant\nmanual work to update.\n\nHere we substitute in jsonschema as a validation system. This should\nallow us to catch more problems (e.g. the motivating example in #1460).\n\nAdvantages:\n- Centralized schema definition using a publicly documented definition\n  language\n- Properly handles recursion in patterns, etc.\n- Uniform errors\n- Adds support for previously missing items (e.g. 'metavariable-regex')\n\nDisadvantages:\n- Adds an external dependency to our application\n- Due to an issue in the python jsonschema library, if-then-else is not\n  properly implemented, preventing correct toggling of taint on the\n  mode key\n- When multiple possible schemata could match, and all fail validation,\n  jsonschema only reports the first option as a failure", "committedDate": "2020-08-20T01:38:07Z", "type": "forcePushed"}, {"oid": "a674f4dc60493f3757300c3b123c275ac5b64034", "url": "https://github.com/returntocorp/semgrep/commit/a674f4dc60493f3757300c3b123c275ac5b64034", "message": "Use jsonschema for rule config validation\n\nPreviously we used an ersatz schema validation system scattered\nthroughout different parts of our code base, and requiring significant\nmanual work to update.\n\nHere we substitute in jsonschema as a validation system. This should\nallow us to catch more problems (e.g. the motivating example in #1460).\n\nAdvantages:\n- Centralized schema definition using a publicly documented definition\n  language\n- Properly handles recursion in patterns, etc.\n- Uniform errors\n- Adds support for previously missing items (e.g. 'metavariable-regex')\n\nDisadvantages:\n- Adds an external dependency to our application", "committedDate": "2020-08-20T02:18:05Z", "type": "commit"}, {"oid": "a674f4dc60493f3757300c3b123c275ac5b64034", "url": "https://github.com/returntocorp/semgrep/commit/a674f4dc60493f3757300c3b123c275ac5b64034", "message": "Use jsonschema for rule config validation\n\nPreviously we used an ersatz schema validation system scattered\nthroughout different parts of our code base, and requiring significant\nmanual work to update.\n\nHere we substitute in jsonschema as a validation system. This should\nallow us to catch more problems (e.g. the motivating example in #1460).\n\nAdvantages:\n- Centralized schema definition using a publicly documented definition\n  language\n- Properly handles recursion in patterns, etc.\n- Uniform errors\n- Adds support for previously missing items (e.g. 'metavariable-regex')\n\nDisadvantages:\n- Adds an external dependency to our application", "committedDate": "2020-08-20T02:18:05Z", "type": "forcePushed"}, {"oid": "b81f250847054ba413170af0a32d621bb408fbb6", "url": "https://github.com/returntocorp/semgrep/commit/b81f250847054ba413170af0a32d621bb408fbb6", "message": "fixup! Use jsonschema for rule config validation", "committedDate": "2020-08-20T15:04:59Z", "type": "commit"}, {"oid": "0bc8a743b2dda4b8fba874bcb941e6c9eff9754d", "url": "https://github.com/returntocorp/semgrep/commit/0bc8a743b2dda4b8fba874bcb941e6c9eff9754d", "message": "fixup! Use jsonschema for rule config validation", "committedDate": "2020-08-20T15:05:57Z", "type": "commit"}, {"oid": "024afd1485803569b7bbf92626291a91f833f63b", "url": "https://github.com/returntocorp/semgrep/commit/024afd1485803569b7bbf92626291a91f833f63b", "message": "fixup! Use jsonschema for rule config validation", "committedDate": "2020-08-20T18:37:39Z", "type": "commit"}, {"oid": "584913316787906ccb3c76d8d7f41594d4c9a00c", "url": "https://github.com/returntocorp/semgrep/commit/584913316787906ccb3c76d8d7f41594d4c9a00c", "message": "fixup! Use jsonschema for rule config validation", "committedDate": "2020-08-20T19:49:31Z", "type": "commit"}, {"oid": "c5bb7908c5279ec84d06432902c0f7eec0085ef6", "url": "https://github.com/returntocorp/semgrep/commit/c5bb7908c5279ec84d06432902c0f7eec0085ef6", "message": "fixup! Use jsonschema for rule config validation", "committedDate": "2020-08-20T21:43:52Z", "type": "commit"}, {"oid": "c5bb7908c5279ec84d06432902c0f7eec0085ef6", "url": "https://github.com/returntocorp/semgrep/commit/c5bb7908c5279ec84d06432902c0f7eec0085ef6", "message": "fixup! Use jsonschema for rule config validation", "committedDate": "2020-08-20T21:43:52Z", "type": "forcePushed"}]}