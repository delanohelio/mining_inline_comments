{"pr_number": 1398, "pr_title": "Clara/python file", "pr_createdAt": "2020-07-29T20:09:07Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1398", "timeline": [{"oid": "b28be949b2b59ac2c49e1af972e42d3502333b62", "url": "https://github.com/returntocorp/semgrep/commit/b28be949b2b59ac2c49e1af972e42d3502333b62", "message": "name changes for cheatsheet", "committedDate": "2020-07-29T18:02:53Z", "type": "commit"}, {"oid": "a9d37b2913cb87ba382a6466c3500ffd01053371", "url": "https://github.com/returntocorp/semgrep/commit/a9d37b2913cb87ba382a6466c3500ffd01053371", "message": "update cheatsheet names to be more new-user-friendly", "committedDate": "2020-07-29T20:07:45Z", "type": "commit"}, {"oid": "cb8ed88c0c3ff62769189d5b9bc7724e49a59ad5", "url": "https://github.com/returntocorp/semgrep/commit/cb8ed88c0c3ff62769189d5b9bc7724e49a59ad5", "message": "improve error messaging and fix key-value update mistake", "committedDate": "2020-07-29T20:13:44Z", "type": "commit"}, {"oid": "6ee6b24a0fa57339f6fc980e756d9e91511adaec", "url": "https://github.com/returntocorp/semgrep/commit/6ee6b24a0fa57339f6fc980e756d9e91511adaec", "message": "fix typo higlights -> highlights", "committedDate": "2020-07-29T20:16:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2NTIyOA==", "url": "https://github.com/returntocorp/semgrep/pull/1398#discussion_r462565228", "bodyText": "I'm glad we're improving these! The naming was a bit confusing/inconsistent. Although, we should keep these names consistent with how we describe them in the docs: https://github.com/returntocorp/semgrep/blob/develop/docs/pattern-features.md. Looks like that covers \"Ellipsis Operator\", \"Equivalences\", \"Metavariables\", and \"Deep Expression Operator.\"", "author": "mschwager", "createdAt": "2020-07-29T20:22:25Z", "path": "semgrep-core/tests/generate_test_matrix.py", "diffHunk": "@@ -12,14 +12,17 @@\n \n \n FEATURES = [\"dots\", \"equivalence\", \"metavar\", \"misc\"]\n+\n+VERBOSE_REGEXP_SYNTAX = \"OCaml Syntax: \\\"=~/<regexp>/\\\"\"\n+\n VERBOSE_FEATURE_NAME = {\n-    \"dots\": \"Ellipsis\",\n-    \"equivalence\": \"Equivalences\",\n-    \"metavar\": \"Metavariables\",\n+    \"dots\": \"Wildcard Matches (...)\",", "originalCommit": "6ee6b24a0fa57339f6fc980e756d9e91511adaec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2OTc5Mg==", "url": "https://github.com/returntocorp/semgrep/pull/1398#discussion_r462569792", "bodyText": "@mschwager yes, I agree that consistency is important- thanks for bringing this up! I am happy to update the docs to match these, too, if you think that makes sense. What I was trying to do here was not so much re-name the operators (ellipsis are ellipsis after all) but instead re-frame the cheatsheet's headings as \"the problem the user is trying to solve\", rather than \"the operator they need\", which they may not know the name of yet", "author": "chmccreery", "createdAt": "2020-07-29T20:30:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2NTIyOA=="}], "type": "inlineReview"}, {"oid": "b93c0749499690cc33ccf140e690ec18260dd185", "url": "https://github.com/returntocorp/semgrep/commit/b93c0749499690cc33ccf140e690ec18260dd185", "message": "simplify unit test", "committedDate": "2020-07-29T20:23:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3MjkwNg==", "url": "https://github.com/returntocorp/semgrep/pull/1398#discussion_r465372906", "bodyText": "is there a better way to do this?", "author": "ievans", "createdAt": "2020-08-04T22:49:10Z", "path": "semgrep-core/tests/generate_test_matrix.py", "diffHunk": "@@ -157,26 +159,28 @@ def generate_cheatsheet(root_dir: str):\n                 sgrep_path = find_path(root_dir, lang, category, subcategory, 'sgrep')\n                 code_path = find_path(root_dir, lang, category, subcategory, lang_dir_to_ext(lang))\n                 \n-                higlights = []\n+                highlights = []\n                 if os.path.exists(sgrep_path) and os.path.exists(code_path):\n                     ranges = run_semgrep_on_example(lang, sgrep_path, code_path)\n                     if ranges:\n                         j = json.loads(ranges)\n                         for entry in j['results']:\n-                            higlights.append({'start': entry['start'], 'end': entry['end']})\n+                            highlights.append({'start': entry['start'], 'end': entry['end']})\n \n                 entry = { \n                     'pattern': read_if_exists(sgrep_path),\n                     'pattern_path': sgrep_path,\n                     'code': read_if_exists(code_path),\n                     'code_path': code_path,\n-                     'highlights': higlights,\n+                    'highlights': highlights,\n                 }\n                \n \n                 #print((lang, entry))\n                 feature_name = VERBOSE_FEATURE_NAME.get(category, category)\n                 subcategory_name = VERBOSE_SUBCATEGORY_NAME.get(subcategory, subcategory)\n+                if (category == \"regexp\" and subcategory == \"string\"):\n+                    subcategory_name = VERBOSE_REGEXP_SYNTAX", "originalCommit": "b93c0749499690cc33ccf140e690ec18260dd185", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3MzQyNg==", "url": "https://github.com/returntocorp/semgrep/pull/1398#discussion_r465373426", "bodyText": "Only other way I could think of was to re-name the actual test files, because currently this subcategory mapping is based on those names, but that felt kind of hacky too, and I wasn't sure if other things depended on those names", "author": "chmccreery", "createdAt": "2020-08-04T22:50:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3MjkwNg=="}], "type": "inlineReview"}]}