{"pr_number": 680, "pr_title": "Refactor tests to run via pytest", "pr_createdAt": "2020-05-04T20:18:52Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/680", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwMzAxMg==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r419703012", "bodyText": "Once semgrep is pip installable, I'd prefer to make sure everyone has it installed as editable in their environment instead of setting PYTHONPATH.", "author": "underyx", "createdAt": "2020-05-04T20:19:44Z", "path": "semgrep/Makefile", "diffHunk": "@@ -3,7 +3,7 @@ all:\n clean:\n \trm -rf ./build/\n test:\n-\t./tests/run-lint-tests.sh\n+\tPYTHONPATH=. pytest tests/", "originalCommit": "62539570a6325a86a2d1866c57bb6e9465354291", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwNDA5OA==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r419704098", "bodyText": "Note to self, find out why this printed message changed compared to the previous committed JSON.", "author": "underyx", "createdAt": "2020-05-04T20:21:45Z", "path": "semgrep/tests/e2e/snapshots/test_json_output/test_default_rule__file/results.json", "diffHunk": "@@ -0,0 +1 @@\n+{\"results\": [{\"check_id\": \"eqeq-is-bad\", \"path\": \"targets/basic/stupid.py\", \"start\": {\"line\": 3, \"col\": 12}, \"end\": {\"line\": 3, \"col\": 26}, \"extra\": {\"message\": \"useless comparison operation `a+b == a+b` or `a+b != a+b`; possible bug?\", \"metavars\": {\"$X\": {\"start\": {\"line\": 3, \"col\": 12, \"offset\": 55}, \"end\": {\"line\": 3, \"col\": 17, \"offset\": 60}, \"abstract_content\": \"a+b\", \"unique_id\": {\"type\": \"AST\", \"md5sum\": \"07d71d85769e594dba9d7ae3d295c01f\"}}}, \"metadata\": {}, \"severity\": \"ERROR\"}}, {\"check_id\": \"javascript-basic-eqeq-bad\", \"path\": \"targets/basic/stupid.js\", \"start\": {\"line\": 3, \"col\": 13}, \"end\": {\"line\": 3, \"col\": 19}, \"extra\": {\"message\": \"useless comparison\", \"metavars\": {\"$X\": {\"start\": {\"line\": 3, \"col\": 13, \"offset\": 24}, \"end\": {\"line\": 3, \"col\": 14, \"offset\": 25}, \"abstract_content\": \"x\", \"unique_id\": {\"type\": \"id\", \"value\": \"x\", \"kind\": \"Global\", \"sid\": 1}}}, \"metadata\": {}, \"severity\": \"ERROR\"}}], \"errors\": []}", "originalCommit": "62539570a6325a86a2d1866c57bb6e9465354291", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxMTU0Mw==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420311543", "bodyText": "Ah of course! I changed this test to just test whether the default semgrep rules location is picked up correctly, and split the --generate-config test to a separate file. So this now uses eqeq.yml instead of the semgrep-rules template.", "author": "underyx", "createdAt": "2020-05-05T18:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwNDA5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwNDY3NQ==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r419704675", "bodyText": "Note that my paths being snapshotted here are okay, as this is marked as an expected failure and this issue is linked: #678", "author": "underyx", "createdAt": "2020-05-04T20:22:45Z", "path": "semgrep/tests/e2e/snapshots/test_rule_parser/test_rule_parser__failure__error_messages/bad1/error.txt", "diffHunk": "@@ -0,0 +1,26 @@\n+Traceback (most recent call last):", "originalCommit": "62539570a6325a86a2d1866c57bb6e9465354291", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwNTExMQ==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r419705111", "bodyText": "I'm not fully sure what this does, @DrewDennison could you explain these commands and what they test?", "author": "underyx", "createdAt": "2020-05-04T20:23:36Z", "path": "semgrep/tests/e2e/test_semgrep_rules_repo.py", "diffHunk": "@@ -0,0 +1,22 @@\n+import subprocess\n+from pathlib import Path\n+\n+\n+def test_semgrep_rules_repo(run_semgrep):\n+    subprocess.check_output(\n+        [\"git\", \"clone\", \"--depth=1\", \"https://github.com/returntocorp/semgrep-rules\"]\n+    )\n+    subprocess.check_output([\"python\", \"-m\", \"semgrep\", \"--generate-config\"])\n+    subprocess.check_output(\n+        [\n+            \"python\",\n+            \"-m\",\n+            \"semgrep\",\n+            \"--dangerously-allow-arbitrary-code-execution-from-rules\",\n+            \"--strict\",\n+            \"--test\",\n+            \"--test-ignore-todo\",\n+            \"semgrep-rules\",\n+        ]\n+    )\n+    subprocess.check_output([\"python\", \"-m\", \"semgrep\", \"--validate\", \"semgrep-rules\"])", "originalCommit": "62539570a6325a86a2d1866c57bb6e9465354291", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg2NDMzOA==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420864338", "bodyText": "i'm pretty sure this test makes sure that the entire semgrep-rules repo has validating config files", "author": "nbrahms", "createdAt": "2020-05-06T15:03:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwNTExMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3OTMxMw==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420179313", "bodyText": "Is there any way we can achieve the same level of testing without snapshotting? If I'm understanding snapshots correctly, they seem very difficult to reason about. I can never tell why a huge JSON blob is no longer the same as a previous huge JSON blob. IMO we should be testing small amounts of functionality and return values instead of dumping everything to a file and essentially performing a diff.", "author": "mschwager", "createdAt": "2020-05-05T15:02:03Z", "path": "semgrep/requirements.txt", "diffHunk": "@@ -1,5 +1,6 @@\n colorama==0.4.3\n pytest==5.3.5\n+pytest-snapshot==0.4.0", "originalCommit": "62539570a6325a86a2d1866c57bb6e9465354291", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNTg5MQ==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420315891", "bodyText": "This seems like the age-old debate about end-to-end vs. unit tests. IMO, in general you need both: end-to-end tests (using snapshots here) guarantee behavior, while unit tests allow you to debug regressions.\nBut end-to-end tests would usually be primary, as without them, you can't guarantee your system works. So we want those most urgently.", "author": "nbrahms", "createdAt": "2020-05-05T18:22:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3OTMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNjI0OQ==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420316249", "bodyText": "cf. https://blog.colinbreck.com/should-we-write-a-unit-test-or-an-end-to-end-test/", "author": "nbrahms", "createdAt": "2020-05-05T18:23:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3OTMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyMDM4Nw==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420320387", "bodyText": "Thanks! I had similar thoughts and had just documented that philosophy here: https://github.com/returntocorp/semgrep/blob/bence/pytest/semgrep/tests/README.md", "author": "underyx", "createdAt": "2020-05-05T18:30:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3OTMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyNjgxNg==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420326816", "bodyText": "FWIW, pretty-printing the JSON blobs might make debugging e2e failures much easier. Food for thought.", "author": "nbrahms", "createdAt": "2020-05-05T18:41:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3OTMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0MzI1Nw==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420343257", "bodyText": "Yeah. I was considering that too but felt like it would be too unclean to mess with the stdout \ud83e\udd14\nAdded this change now though!", "author": "underyx", "createdAt": "2020-05-05T19:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3OTMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyMjUyMw==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420822523", "bodyText": "When I think about testing I tend to use unit tests to test a single component, integration tests to test the interaction of two (or a few) components, and e2e tests to test many components or the system as a whole. Since semgrep is really only one component, or two if you count the core separately, I would lean toward unit tests.\n\n... end-to-end tests (using snapshots here) guarantee behavior, while unit tests allow you to debug regressions ... But end-to-end tests would usually be primary, as without them, you can't guarantee your system works.\n\nI'm not sure I agree here. In my opinion unit tests can also guarantee behavior, and e2e tests can be used to debug regressions. I've seen highly stable systems that use nothing but unit tests, and very fragile systems that use all e2e tests, or a mix of all three.\nRegardless, I won't harp on the issue too much since it seems the decision's been made to go with this approach \ud83d\udc4d", "author": "mschwager", "createdAt": "2020-05-06T14:10:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3OTMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE4MDQxOA==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420180418", "bodyText": "This is calling Python code from Python code. Is there any way we can just call this library directly instead of subprocessing out?", "author": "mschwager", "createdAt": "2020-05-05T15:03:33Z", "path": "semgrep/tests/e2e/conftest.py", "diffHunk": "@@ -0,0 +1,45 @@\n+import subprocess\n+from pathlib import Path\n+from typing import Optional\n+from typing import Sequence\n+from typing import Union\n+\n+import pytest\n+\n+\n+E2E_TESTS_PATH = Path(__file__).parent\n+\n+\n+def _run_semgrep(\n+    config: Optional[Union[str, Path]] = None,\n+    *,\n+    target_name: str = \"basic\",\n+    stderr: bool = False\n+) -> str:\n+    config_opts = [\"--config\", config] if config is not None else []\n+\n+    return subprocess.check_output(", "originalCommit": "62539570a6325a86a2d1866c57bb6e9465354291", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0NDY4NA==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420344684", "bodyText": "I think it fits with the end-to-end philosophy to test whether commands run as expected. In tests/unit/ we definitely shouldn't have a single usage of subprocess though. Does that sound okay?", "author": "underyx", "createdAt": "2020-05-05T19:12:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE4MDQxOA=="}], "type": "inlineReview"}, {"oid": "420b674a1cff91e15ba0b02a80fa23194e76e773", "url": "https://github.com/returntocorp/semgrep/commit/420b674a1cff91e15ba0b02a80fa23194e76e773", "message": "Makefile: Add regenerate-tests target for semgrep", "committedDate": "2020-05-05T11:12:05Z", "type": "forcePushed"}, {"oid": "373f790e59761dcb01991e135b1d58008fc3bd21", "url": "https://github.com/returntocorp/semgrep/commit/373f790e59761dcb01991e135b1d58008fc3bd21", "message": "Makefile: Add regenerate-tests target for semgrep", "committedDate": "2020-05-05T17:21:47Z", "type": "forcePushed"}, {"oid": "4df9b5028e7822baaf2f86b16b57afc360e733f3", "url": "https://github.com/returntocorp/semgrep/commit/4df9b5028e7822baaf2f86b16b57afc360e733f3", "message": "Makefile: Add regenerate-tests target for semgrep", "committedDate": "2020-05-05T17:25:04Z", "type": "forcePushed"}, {"oid": "930d22c1ac89e1b200303df41d227f519f86a746", "url": "https://github.com/returntocorp/semgrep/commit/930d22c1ac89e1b200303df41d227f519f86a746", "message": "Add semgrep testing README", "committedDate": "2020-05-05T18:04:28Z", "type": "forcePushed"}, {"oid": "97ca8ef6b923e4cb00ffd507cbadcd957a071dff", "url": "https://github.com/returntocorp/semgrep/commit/97ca8ef6b923e4cb00ffd507cbadcd957a071dff", "message": "Add semgrep testing README", "committedDate": "2020-05-05T18:05:21Z", "type": "forcePushed"}, {"oid": "ac0eb3257d12b67104da1bcc6d94d2d2971f6626", "url": "https://github.com/returntocorp/semgrep/commit/ac0eb3257d12b67104da1bcc6d94d2d2971f6626", "message": "Add semgrep testing README", "committedDate": "2020-05-05T18:10:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNzg4MA==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420317880", "bodyText": "At some point in the future, we probably want to be able to assert non-0 return codes", "author": "nbrahms", "createdAt": "2020-05-05T18:26:20Z", "path": "semgrep/tests/conftest.py", "diffHunk": "@@ -0,0 +1,64 @@\n+import subprocess\n+from pathlib import Path\n+from typing import Optional\n+from typing import Sequence\n+from typing import Union\n+\n+import pytest\n+\n+\n+TESTS_PATH = Path(__file__).parent\n+\n+\n+def _run_semgrep(\n+    config: Optional[Union[str, Path]] = None,\n+    *,\n+    target_name: str = \"basic\",\n+    stderr: bool = False\n+) -> str:\n+    config_opts = [\"--config\", config] if config is not None else []\n+\n+    return subprocess.check_output(", "originalCommit": "ac0eb3257d12b67104da1bcc6d94d2d2971f6626", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyMjQxMw==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420322413", "bodyText": "This is already possible! Check test_rule_parser.py.\nSample snippet:\n    with pytest.raises(CalledProcessError) as excinfo:\n        run_semgrep(f\"rules/syntax/{filename}.yaml\")\n    assert excinfo.value.returncode != 0", "author": "underyx", "createdAt": "2020-05-05T18:33:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNzg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyNjE3OA==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420326178", "bodyText": "ah right, because we throw a CalledProcessError. cool cool.", "author": "nbrahms", "createdAt": "2020-05-05T18:40:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNzg4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxOTg3OQ==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420319879", "bodyText": "Can this run from a temporary path?", "author": "nbrahms", "createdAt": "2020-05-05T18:29:28Z", "path": "semgrep/tests/qa/test_public_repos.py", "diffHunk": "@@ -0,0 +1,99 @@\n+import json\n+import subprocess\n+from pathlib import Path\n+\n+import pytest\n+\n+pytestmark = pytest.mark.qa\n+\n+\n+def xfail_repo(url, *, reason=None):\n+    return pytest.param(url, marks=pytest.mark.xfail(reason=reason))\n+\n+\n+@pytest.mark.parametrize(\n+    \"repo_url\",\n+    [\n+        \"https://github.com/Airtable/airtable.js\",\n+        \"https://github.com/seemoo-lab/opendrop\",\n+        \"https://github.com/lightstep/lightstep-tracer-python\",\n+        \"https://github.com/draios/sysdig-inspect\",\n+        \"https://github.com/getsentry/sentry-python\",\n+        \"https://github.com/signalapp/signal-webrtc-ios\",\n+        \"https://github.com/secdev/scapy\",\n+        \"https://github.com/apache/airflow\",\n+        \"https://github.com/preset-io/elasticsearch-dbapi\",\n+        \"https://github.com/apache/libcloud\",\n+        \"https://github.com/keybase/pykeybasebot\",\n+        \"https://gitbox.apache.org/repos/asf/cassandra\",\n+        \"https://github.com/coinbase/coinbase-commerce-python\",\n+        \"https://github.com/keybase/python-triplesec\",\n+        \"https://github.com/psycopg/psycopg2\",\n+        \"https://github.com/preset-io/flask-jwt-extended\",\n+        \"https://github.com/vstinner/pyperf\",\n+        \"https://github.com/mysql/mysql-connector-python\",\n+        \"https://github.com/Netflix/lemur\",\n+        xfail_repo(\"https://github.com/highcharts/highcharts\"),\n+        xfail_repo(\n+            \"https://github.com/lodash/lodash\",\n+            reason=\"https://github.com/returntocorp/semgrep/issues/580\",\n+        ),\n+        xfail_repo(\"https://github.com/signalapp/Signal-Desktop\"),\n+        xfail_repo(\"https://github.com/opensourceactivismtech/call-power\"),\n+        xfail_repo(\"https://github.com/zulip/zulip\"),\n+        xfail_repo(\n+            \"https://github.com/home-assistant/home-assistant\",\n+            reason=(\n+                \"https://github.com/returntocorp/semgrep/issues/599, \"\n+                \"https://github.com/returntocorp/semgrep/issues/600, \"\n+                \"https://github.com/returntocorp/semgrep/issues/601, \"\n+                \"https://github.com/returntocorp/semgrep/issues/602\"\n+            ),\n+        ),\n+        xfail_repo(\n+            \"https://github.com/apache/incubator-superset\",\n+            reason=(\n+                \"https://github.com/returntocorp/semgrep/issues/581, \"\n+                \"https://github.com/returntocorp/semgrep/issues/582\"\n+            ),\n+        ),\n+    ],\n+)\n+def test_semgrep_on_repo(run_semgrep, repo_url):", "originalCommit": "ac0eb3257d12b67104da1bcc6d94d2d2971f6626", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyMTM2NQ==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420321365", "bodyText": "It actually does, see behavior of https://github.com/returntocorp/semgrep/blob/bence/pytest/semgrep/tests/README.md#run_semgrep \u2014 the fixture prepares a temporary workspace with rules and target files.\nThis was one of the bits I was worried might be too magical \ud83d\ude05", "author": "underyx", "createdAt": "2020-05-05T18:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxOTg3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyNTc5MA==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420325790", "bodyText": "ah... maybe can we rename run_semgrep to run_semgrep_in_tmp?", "author": "nbrahms", "createdAt": "2020-05-05T18:39:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxOTg3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzOTUzOA==", "url": "https://github.com/returntocorp/semgrep/pull/680#discussion_r420339538", "bodyText": "Yeah! Renamed.", "author": "underyx", "createdAt": "2020-05-05T19:03:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxOTg3OQ=="}], "type": "inlineReview"}, {"oid": "5f3fa0f749aee9ff209623a9260d028c4d815454", "url": "https://github.com/returntocorp/semgrep/commit/5f3fa0f749aee9ff209623a9260d028c4d815454", "message": "fixup! tests: Pretty-print snapshot JSONs", "committedDate": "2020-05-06T09:31:51Z", "type": "forcePushed"}, {"oid": "b1a82cb24a2b97e261198ab60ded9b4f13dc15ab", "url": "https://github.com/returntocorp/semgrep/commit/b1a82cb24a2b97e261198ab60ded9b4f13dc15ab", "message": "pre-commit: Don't run mypy on tests", "committedDate": "2020-05-06T11:22:24Z", "type": "forcePushed"}, {"oid": "de2e8323f29bad39b3683ba0aa8a76997b1e47fe", "url": "https://github.com/returntocorp/semgrep/commit/de2e8323f29bad39b3683ba0aa8a76997b1e47fe", "message": "tests: Specify python3 is to be used to run semgrep", "committedDate": "2020-05-06T12:45:37Z", "type": "forcePushed"}, {"oid": "527398aa20ba33b0cb2bc5a358d9641fdee31ac5", "url": "https://github.com/returntocorp/semgrep/commit/527398aa20ba33b0cb2bc5a358d9641fdee31ac5", "message": "tests: Set up pytest to run semgrep and do snapshot testing", "committedDate": "2020-05-06T13:29:14Z", "type": "commit"}, {"oid": "291fa449590fec5e10b3a849f91da7084b38b8f1", "url": "https://github.com/returntocorp/semgrep/commit/291fa449590fec5e10b3a849f91da7084b38b8f1", "message": "tests: Refactor basic check tests to use pytest\n\nCloses https://github.com/returntocorp/semgrep/issues/626", "committedDate": "2020-05-06T13:37:42Z", "type": "commit"}, {"oid": "149339e7f6db96fa79698c77792c0317c54fa6c2", "url": "https://github.com/returntocorp/semgrep/commit/149339e7f6db96fa79698c77792c0317c54fa6c2", "message": "tests: Refactor hidden rulefile tests to use pytest", "committedDate": "2020-05-06T13:47:27Z", "type": "commit"}, {"oid": "51f6eb11bd1cc9c0b1468e2fd6731f75fa116c9c", "url": "https://github.com/returntocorp/semgrep/commit/51f6eb11bd1cc9c0b1468e2fd6731f75fa116c9c", "message": "tests: Refactor default config tests to use pytest", "committedDate": "2020-05-06T13:55:27Z", "type": "commit"}, {"oid": "9ce42fd3167dbaf996d138c7adcbd76ca8048d10", "url": "https://github.com/returntocorp/semgrep/commit/9ce42fd3167dbaf996d138c7adcbd76ca8048d10", "message": "tests: Refactor autofix & equivalence tests to use pytest\n\nPlaced these two in the same commit cause they're very similar in the\nnew testing architecture so it's a nice way to learn how these tests\nshould be written.", "committedDate": "2020-05-06T13:58:02Z", "type": "commit"}, {"oid": "2e5922df2c259d0fde8716c6a3aaf44289637cc5", "url": "https://github.com/returntocorp/semgrep/commit/2e5922df2c259d0fde8716c6a3aaf44289637cc5", "message": "tests: Refactor include/exclude tests to use pytest", "committedDate": "2020-05-06T14:00:51Z", "type": "commit"}, {"oid": "8a6837f5c15bfccc110a449a66dc799a98e60d37", "url": "https://github.com/returntocorp/semgrep/commit/8a6837f5c15bfccc110a449a66dc799a98e60d37", "message": "tests: Refactor rule parsing tests to use pytest", "committedDate": "2020-05-06T14:47:09Z", "type": "commit"}, {"oid": "e313adb17bd8b6b0fb464efa2e2f83f764670a36", "url": "https://github.com/returntocorp/semgrep/commit/e313adb17bd8b6b0fb464efa2e2f83f764670a36", "message": "tests: Refactor semgrep-rules regression testing to use pytest", "committedDate": "2020-05-06T14:48:49Z", "type": "commit"}, {"oid": "a5dcf5ccd5506b46ad3918bcefcfa335c21983aa", "url": "https://github.com/returntocorp/semgrep/commit/a5dcf5ccd5506b46ad3918bcefcfa335c21983aa", "message": "tests: Specify python3 is to be used to run semgrep", "committedDate": "2020-05-06T14:56:18Z", "type": "forcePushed"}, {"oid": "b2b701d250419f6a2ec78e26c3e11265d8795ea1", "url": "https://github.com/returntocorp/semgrep/commit/b2b701d250419f6a2ec78e26c3e11265d8795ea1", "message": "tests: Wipe resources used by old testing architecture", "committedDate": "2020-05-06T14:57:57Z", "type": "commit"}, {"oid": "dee253bda3a862ed32ee409e718431e68040c91e", "url": "https://github.com/returntocorp/semgrep/commit/dee253bda3a862ed32ee409e718431e68040c91e", "message": "Makefile: Add regenerate-tests target for semgrep", "committedDate": "2020-05-06T14:57:57Z", "type": "commit"}, {"oid": "391762c77112f54cd0b9e26989d2c3960c1ec75e", "url": "https://github.com/returntocorp/semgrep/commit/391762c77112f54cd0b9e26989d2c3960c1ec75e", "message": "Create unit tests directory for semgrep", "committedDate": "2020-05-06T14:57:57Z", "type": "commit"}, {"oid": "6c40eaa732a7e9670b414cf12f5d9646af02c1ba", "url": "https://github.com/returntocorp/semgrep/commit/6c40eaa732a7e9670b414cf12f5d9646af02c1ba", "message": "tests: Specify python3 is to be used to run semgrep", "committedDate": "2020-05-06T14:57:58Z", "type": "forcePushed"}, {"oid": "d11a59cff8ffbaf04909c734426eb10ab311ef61", "url": "https://github.com/returntocorp/semgrep/commit/d11a59cff8ffbaf04909c734426eb10ab311ef61", "message": "tests: Specify python3 is to be used to run semgrep", "committedDate": "2020-05-06T15:01:52Z", "type": "forcePushed"}, {"oid": "38560a05b3005741a2bbfb3a680dc95ceb05bb89", "url": "https://github.com/returntocorp/semgrep/commit/38560a05b3005741a2bbfb3a680dc95ceb05bb89", "message": "Add semgrep testing README", "committedDate": "2020-05-06T15:21:28Z", "type": "commit"}, {"oid": "1896a923c4f624ef15118333994108f27e618b54", "url": "https://github.com/returntocorp/semgrep/commit/1896a923c4f624ef15118333994108f27e618b54", "message": "tests; Rename run_semgrep to run_semgrep_in_tmp", "committedDate": "2020-05-06T15:21:42Z", "type": "commit"}, {"oid": "9c504870b6e9a453bf1c6e6fbcf0bc6c181fa2bf", "url": "https://github.com/returntocorp/semgrep/commit/9c504870b6e9a453bf1c6e6fbcf0bc6c181fa2bf", "message": "tests: Specify python3 is to be used to run semgrep", "committedDate": "2020-05-06T15:23:14Z", "type": "forcePushed"}, {"oid": "e08684a6dd38cf409f987d6deed2bb3938e936db", "url": "https://github.com/returntocorp/semgrep/commit/e08684a6dd38cf409f987d6deed2bb3938e936db", "message": "tests: Pretty-print snapshot JSONs", "committedDate": "2020-05-06T15:28:42Z", "type": "commit"}, {"oid": "9a0aa109a1d5038036ee3f074306f57a5903117d", "url": "https://github.com/returntocorp/semgrep/commit/9a0aa109a1d5038036ee3f074306f57a5903117d", "message": "pre-commit: Don't run mypy on tests", "committedDate": "2020-05-06T15:28:42Z", "type": "commit"}, {"oid": "db343e2ac18f48e4388bf394d1838eeb24f8fda3", "url": "https://github.com/returntocorp/semgrep/commit/db343e2ac18f48e4388bf394d1838eeb24f8fda3", "message": "Clean up leftover test files", "committedDate": "2020-05-06T15:28:42Z", "type": "commit"}, {"oid": "ae94329827a6eab529c4023d1711e08e364426a7", "url": "https://github.com/returntocorp/semgrep/commit/ae94329827a6eab529c4023d1711e08e364426a7", "message": "tox.ini: Fix testing for 3.7 and 3.8", "committedDate": "2020-05-06T15:28:42Z", "type": "commit"}, {"oid": "6b1f4a40a640d5465bd4d05351aff5316e016423", "url": "https://github.com/returntocorp/semgrep/commit/6b1f4a40a640d5465bd4d05351aff5316e016423", "message": "Update tox.ini to work with new tests", "committedDate": "2020-05-06T15:28:43Z", "type": "commit"}, {"oid": "61524dc8cae75ffa3266a62e413a85e77a9bbc76", "url": "https://github.com/returntocorp/semgrep/commit/61524dc8cae75ffa3266a62e413a85e77a9bbc76", "message": "tests: Specify python3 is to be used to run semgrep", "committedDate": "2020-05-06T15:28:43Z", "type": "commit"}, {"oid": "61524dc8cae75ffa3266a62e413a85e77a9bbc76", "url": "https://github.com/returntocorp/semgrep/commit/61524dc8cae75ffa3266a62e413a85e77a9bbc76", "message": "tests: Specify python3 is to be used to run semgrep", "committedDate": "2020-05-06T15:28:43Z", "type": "forcePushed"}, {"oid": "8c750933e36619bfd5e10bd1f2282f08aceff1a5", "url": "https://github.com/returntocorp/semgrep/commit/8c750933e36619bfd5e10bd1f2282f08aceff1a5", "message": "tests: Fix test_public_repos not scanning Python code\n\nPassing --language python --language javascript apparently made semgrep\nscan only javascript.\n\nThis commit changes it so we run semgrep twice for each repo,\nonce with both languages. Also added more assertions regarding output.", "committedDate": "2020-05-06T16:12:53Z", "type": "commit"}]}