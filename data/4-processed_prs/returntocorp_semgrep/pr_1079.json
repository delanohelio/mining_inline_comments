{"pr_number": 1079, "pr_title": "Refactor config validation interactions with output_manager", "pr_createdAt": "2020-06-19T18:20:55Z", "pr_url": "https://github.com/returntocorp/semgrep/pull/1079", "timeline": [{"oid": "da839fc59f99e4b0f997e9dc2778335c71ee0c7a", "url": "https://github.com/returntocorp/semgrep/commit/da839fc59f99e4b0f997e9dc2778335c71ee0c7a", "message": "fixup! output_manager: remove need to pass all the way down", "committedDate": "2020-06-19T21:56:22Z", "type": "forcePushed"}, {"oid": "01a95621852685ff9cd7a7c1156fbedce65c03ec", "url": "https://github.com/returntocorp/semgrep/commit/01a95621852685ff9cd7a7c1156fbedce65c03ec", "message": "fixup! output_manager: remove need to pass all the way down", "committedDate": "2020-06-19T21:58:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0NjQxMw==", "url": "https://github.com/returntocorp/semgrep/pull/1079#discussion_r443146413", "bodyText": "if you're refactoring this, I think we should fix it to accurately reflect what it's returning (really, just a YAML tree). The caller can attach the config id.", "author": "rcoh", "createdAt": "2020-06-20T17:25:02Z", "path": "semgrep/semgrep/config_resolver.py", "diffHunk": "@@ -90,37 +90,38 @@ def indent(msg: str) -> str:\n \n def parse_config_at_path(\n     loc: Path, base_path: Optional[Path] = None\n-) -> Dict[str, Optional[YamlTree]]:\n+) -> Dict[str, YamlTree]:\n+    \"\"\"\n+        Assumes file at loc exists\n+    \"\"\"\n     config_id = str(loc)\n     if base_path:\n         config_id = str(loc).replace(str(base_path), \"\")\n-    try:\n-        with loc.open() as f:\n-            return parse_config_string(config_id, f.read(), str(loc))\n-    except FileNotFoundError:\n-        print_error(f\"YAML file at {loc} not found\")\n-        return {str(loc): None}\n+\n+    with loc.open() as f:\n+        return parse_config_string(config_id, f.read(), str(loc))\n \n \n def parse_config_string(\n     config_id: str, contents: str, filename: Optional[str]\n-) -> Dict[str, Optional[YamlTree]]:\n+) -> Dict[str, YamlTree]:", "originalCommit": "01a95621852685ff9cd7a7c1156fbedce65c03ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY5NTAxNQ==", "url": "https://github.com/returntocorp/semgrep/pull/1079#discussion_r443695015", "bodyText": "We could also have a global outputmanager or a way to access it from anywhere ala logger built-in.", "author": "brendongo", "createdAt": "2020-06-22T16:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0NjQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcwODQyNg==", "url": "https://github.com/returntocorp/semgrep/pull/1079#discussion_r443708426", "bodyText": "I'd rather avoid having it be global -- having it be properly scoped enables us to eg. run multiple tests in parallel and keep output contained", "author": "rcoh", "createdAt": "2020-06-22T17:12:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0NjQxMw=="}], "type": "inlineReview"}, {"oid": "a2cbe9bb71a9b4de2fa05b5164c42e5a3a36d49c", "url": "https://github.com/returntocorp/semgrep/commit/a2cbe9bb71a9b4de2fa05b5164c42e5a3a36d49c", "message": "output_manager: remove need to pass all the way down", "committedDate": "2020-06-22T17:03:46Z", "type": "commit"}, {"oid": "277ebfa5134e83c310ebf0c0a1ddf689fbdf6d48", "url": "https://github.com/returntocorp/semgrep/commit/277ebfa5134e83c310ebf0c0a1ddf689fbdf6d48", "message": "fixup! output_manager: remove need to pass all the way down", "committedDate": "2020-06-22T17:03:46Z", "type": "commit"}, {"oid": "277ebfa5134e83c310ebf0c0a1ddf689fbdf6d48", "url": "https://github.com/returntocorp/semgrep/commit/277ebfa5134e83c310ebf0c0a1ddf689fbdf6d48", "message": "fixup! output_manager: remove need to pass all the way down", "committedDate": "2020-06-22T17:03:46Z", "type": "forcePushed"}, {"oid": "66382910e622e678c754df86c2d1b41eccd722d3", "url": "https://github.com/returntocorp/semgrep/commit/66382910e622e678c754df86c2d1b41eccd722d3", "message": "fixup! output_manager: remove need to pass all the way down", "committedDate": "2020-06-22T19:07:07Z", "type": "commit"}]}