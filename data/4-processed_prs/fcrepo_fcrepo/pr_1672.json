{"pr_number": 1672, "pr_title": "Implement adding ACLs", "pr_createdAt": "2020-05-02T23:11:45Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1672", "timeline": [{"oid": "e8fa96f0ec46f125de3155900bb6bc4abce2c1f3", "url": "https://github.com/fcrepo/fcrepo/commit/e8fa96f0ec46f125de3155900bb6bc4abce2c1f3", "message": "Implement adding ACLs", "committedDate": "2020-05-02T22:57:58Z", "type": "commit"}, {"oid": "0057294a256b4cfbe7f36c8662de9a874245678b", "url": "https://github.com/fcrepo/fcrepo/commit/0057294a256b4cfbe7f36c8662de9a874245678b", "message": "Re-enable more tests", "committedDate": "2020-05-04T14:03:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5NDEwNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419394104", "bodyText": "This should be written:\nprivate final static Set<String> extensions = Set.of(\n    FCR_TOMBSTONE,\n    FCR_METADAT,\n    // etc\n);", "author": "pwinckles", "createdAt": "2020-05-04T12:19:48Z", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraId.java", "diffHunk": "@@ -60,6 +65,14 @@\n     private String mementoDatetimeStr;\n     private String pathOnly;\n \n+    private final static Set<String> extensions = new HashSet<>();", "originalCommit": "e8fa96f0ec46f125de3155900bb6bc4abce2c1f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwNTI5MA==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419405290", "bodyText": "Since the pattern never changes, and extensions isn't used for anything else, it may as well be Set<Pattern>. I'd be curious to know if there is any performance gain from doing the contains check before applying the regex as the contains will have to scan the string. If you do want to do the check, extensions could easily be Map<String, Pattern>.", "author": "pwinckles", "createdAt": "2020-05-04T12:41:02Z", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraId.java", "diffHunk": "@@ -347,6 +364,31 @@ private void processIdentifier() {\n         if (processID.endsWith(\"/\")) {\n             processID = processID.replaceAll(\"/+$\", \"\");\n         }\n-        this.id = processID;\n+        this.resourceId = processID;\n+    }\n+\n+    /**\n+     * Check for obvious path errors.\n+     */\n+    private void checkForInvalidPath() {\n+        // Check for combinations of endpoints not allowed.\n+        if (\n+            // ID contains fcr:acl or fcr:tombstone AND fcr:metadata or fcr:versions\n+            ((this.fullId.contains(FCR_ACL) || this.fullId.contains(FCR_TOMBSTONE)) &&\n+                (this.fullId.contains(FCR_METADATA) || this.fullId.contains(FCR_VERSIONS))) ||\n+            // or ID contains fcr:acl AND fcr:tombstone\n+            (this.fullId.contains(FCR_TOMBSTONE) && this.fullId.contains(FCR_ACL))\n+        ) {\n+            throw new InvalidResourceIdentifierException(String.format(\"Path is invalid: %s\", pathOnly));\n+        }\n+        // Ensure we don't have 2 of any of the extensions, ie. info:fedora/object/fcr:acl/fcr:acl, etc.\n+        for (final String extension : extensions) {\n+            if (this.fullId.contains(extension)) {\n+                final Pattern extPattern = Pattern.compile(extension);", "originalCommit": "e8fa96f0ec46f125de3155900bb6bc4abce2c1f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMjMzMQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419612331", "bodyText": "Fair enough, as the test is just for more than one match I can skip the contains.", "author": "whikloj", "createdAt": "2020-05-04T17:44:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwNTI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQxNDM0OQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419414349", "bodyText": "Is this needed since it's just calling super?", "author": "pwinckles", "createdAt": "2020-05-04T12:55:47Z", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/WebacAclImpl.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.kernel.impl.models;\n+\n+import org.fcrepo.kernel.api.RdfStream;\n+import org.fcrepo.kernel.api.Transaction;\n+import org.fcrepo.kernel.api.exception.PathNotFoundException;\n+import org.fcrepo.kernel.api.exception.PathNotFoundRuntimeException;\n+import org.fcrepo.kernel.api.identifiers.FedoraId;\n+import org.fcrepo.kernel.api.models.FedoraResource;\n+import org.fcrepo.kernel.api.models.ResourceFactory;\n+import org.fcrepo.kernel.api.models.WebacAcl;\n+import org.fcrepo.persistence.api.PersistentStorageSessionManager;\n+\n+/**\n+ * Webac Acl class\n+ */\n+public class WebacAclImpl extends ContainerImpl implements WebacAcl {\n+\n+    /**\n+     * Constructor\n+     * @param fedoraID the internal identifier\n+     * @param tx the current transaction\n+     * @param pSessionManager a session manager\n+     * @param resourceFactory a resource factory instance.\n+     */\n+    public WebacAclImpl(final FedoraId fedoraID, final Transaction tx,\n+                        final PersistentStorageSessionManager pSessionManager, final ResourceFactory resourceFactory) {\n+        super(fedoraID, tx, pSessionManager, resourceFactory);\n+    }\n+\n+    @Override\n+    public FedoraResource getDescribedResource() {\n+        final var originalId = FedoraId.create(getFedoraId().getResourceId());\n+        try {\n+            return resourceFactory.getResource(tx, originalId);\n+        } catch (final PathNotFoundException exc) {\n+            throw new PathNotFoundRuntimeException(exc);\n+        }\n+    }\n+\n+    @Override\n+    public RdfStream getTriples() {", "originalCommit": "e8fa96f0ec46f125de3155900bb6bc4abce2c1f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5OTQzNw==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419499437", "bodyText": "Does this commit a potentially \"long-running transaction\"... irrespective of the transaction API?", "author": "awoods", "createdAt": "2020-05-04T14:56:29Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraAcl.java", "diffHunk": "@@ -130,37 +128,32 @@ public Response createFedoraWebacAcl(@HeaderParam(CONTENT_TYPE) final MediaType\n         if (resource().isAcl() || resource().isMemento()) {\n             throw new BadRequestException(\"ACL resource creation is not allowed for resource \" + resource().getId());\n         }\n+        LOGGER.info(\"PUT acl resource '{}'\", externalPath());\n \n-        final boolean created;\n-        final FedoraResource aclResource;\n-\n-        final String path = toPath(translator(), externalPath);\n-        LOGGER.info(\"PUT acl resource '{}'\", externalPath);\n-\n-        final var transaction = transaction();\n-\n-        aclResource = webacAclService.findOrCreate(transaction, path);\n-        created = aclResource.isNew();\n-        final FedoraId aclId = aclResource.getFedoraId();\n+        final FedoraId aclId = identifierConverter().pathToInternalId(externalPath()).resolve(FCR_ACL);\n+        final boolean exists = resourceFactory.doesResourceExist(transaction(), aclId);\n \n         final MediaType contentType =\n             requestContentType == null ? RDFMediaType.TURTLE_TYPE : valueOf(getSimpleContentType(requestContentType));\n         if (isRdfContentType(contentType.toString())) {\n \n-            // TODO: confirm this is correct logic for ACL's\n-            final Model model = httpRdfService.bodyToInternalModel(externalPath() + \"/fcr:acl\",\n-                    requestBodyStream, requestContentType, identifierConverter());\n-\n-            replacePropertiesService.perform(transaction.getId(), getUserPrincipal(), aclId, model);\n+            final Model model = httpRdfService.bodyToInternalModel(aclId.getFullId(),\n+                    requestBodyStream, contentType, identifierConverter());\n+            if (exists) {\n+                replacePropertiesService.perform(transaction().getId(), getUserPrincipal(), aclId, model);\n+            } else {\n+                webacAclService.create(transaction(), aclId, getUserPrincipal(), model);\n+            }\n         } else {\n             throw new BadRequestException(\"Content-Type (\" + requestContentType + \") is invalid. Try text/turtle \" +\n                                           \"or other RDF compatible type.\");\n         }\n-        transaction.commit();\n+        transaction().commit();", "originalCommit": "0057294a256b4cfbe7f36c8662de9a874245678b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNjk3MA==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419616970", "bodyText": "Shutting down / committing a long-running transaction may not be the desired behavior. For example, I am creating several resources, and updating their ACLs... and boom, my transaction gets committed.", "author": "awoods", "createdAt": "2020-05-04T17:51:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5OTQzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNjAyMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419626023", "bodyText": "Sorry the \ud83d\udc4d was that this is a correct observation and a mistake in my PR. I am replacing with\ntransaction().commitIfShortLived();", "author": "whikloj", "createdAt": "2020-05-04T18:06:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5OTQzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUzNDA3Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419534077", "bodyText": "This can probably be removed.", "author": "awoods", "createdAt": "2020-05-04T15:44:50Z", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraId.java", "diffHunk": "@@ -48,8 +52,9 @@\n  */\n public class FedoraId {\n \n-    private String id;\n+    private String resourceId;\n     private String fullId;\n+    private String parentId;", "originalCommit": "0057294a256b4cfbe7f36c8662de9a874245678b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5NDI4MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419594281", "bodyText": "In the past, we supported /fcr:metadata having their own ACLs, no? Was it decided that this would no longer be supported?\nThis impacts FedoraIdTest.java updates.", "author": "awoods", "createdAt": "2020-05-04T17:14:55Z", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraId.java", "diffHunk": "@@ -347,6 +364,31 @@ private void processIdentifier() {\n         if (processID.endsWith(\"/\")) {\n             processID = processID.replaceAll(\"/+$\", \"\");\n         }\n-        this.id = processID;\n+        this.resourceId = processID;\n+    }\n+\n+    /**\n+     * Check for obvious path errors.\n+     */\n+    private void checkForInvalidPath() {\n+        // Check for combinations of endpoints not allowed.\n+        if (\n+            // ID contains fcr:acl or fcr:tombstone AND fcr:metadata or fcr:versions\n+            ((this.fullId.contains(FCR_ACL) || this.fullId.contains(FCR_TOMBSTONE)) &&\n+                (this.fullId.contains(FCR_METADATA) || this.fullId.contains(FCR_VERSIONS))) ||", "originalCommit": "0057294a256b4cfbe7f36c8662de9a874245678b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxMzk1Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419613957", "bodyText": "Did we support that, I wasn't sure. But I can move back to it.", "author": "whikloj", "createdAt": "2020-05-04T17:46:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5NDI4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNzMxNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419617316", "bodyText": "Let me double-check... but I believe it was supported.", "author": "awoods", "createdAt": "2020-05-04T17:52:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5NDI4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzMTg3OQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419631879", "bodyText": "Binaries and their descriptions can be versioned separately... but they share an ACL: the ACL on the binary.\nYou can disregard this comment thread :)", "author": "awoods", "createdAt": "2020-05-04T18:15:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5NDI4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5NzYzNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419597636", "bodyText": "In the case that the resource is an ACL (see line:100 above), there may not be a \"memento instant\", no?", "author": "awoods", "createdAt": "2020-05-04T17:20:33Z", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/ResourceFactoryImpl.java", "diffHunk": "@@ -96,18 +97,20 @@ public boolean doesResourceExist(final Transaction transaction, final FedoraId f\n             // Root always exists.\n             return true;\n         }\n-        if (!fedoraId.isMemento()) {\n-            // containment index doesn't handle versions, so don't bother checking for them.\n+        if (!(fedoraId.isMemento() || fedoraId.isAcl())) {\n+            // containment index doesn't handle versions and only tells us if the resource (not acl) is there,\n+            // so don't bother checking for them.\n             final String transactionId = transaction == null ? null : transaction.getId();\n             return containmentIndex.resourceExists(transactionId, fedoraId);\n         } else {\n \n             final PersistentStorageSession psSession = getSession(transaction);\n \n             try {\n-                final String id = fedoraId.isDescription() ? fedoraId.getDescriptionId() : fedoraId.getResourceId();\n-                psSession.getHeaders(id, fedoraId.getMementoInstant());\n-                return true;\n+                // Resource ID for metadata or ACL contains their individual endopoints (ie. fcr:metadata, fcr:acl)\n+                final String id = fedoraId.getResourceId();\n+                final ResourceHeaders headers = psSession.getHeaders(id, fedoraId.getMementoInstant());", "originalCommit": "0057294a256b4cfbe7f36c8662de9a874245678b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNDQwMA==", "url": "https://github.com/fcrepo/fcrepo/pull/1672#discussion_r419614400", "bodyText": "Yes and the getMementoInstant() function would return null in that case.", "author": "whikloj", "createdAt": "2020-05-04T17:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5NzYzNg=="}], "type": "inlineReview"}, {"oid": "317054c330dd4a4ed3508d6ee508eb3425173acc", "url": "https://github.com/fcrepo/fcrepo/commit/317054c330dd4a4ed3508d6ee508eb3425173acc", "message": "Code review", "committedDate": "2020-05-04T18:28:42Z", "type": "commit"}]}