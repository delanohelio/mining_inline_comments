{"pr_number": 1599, "pr_title": "Fedora 6 Demo 1", "pr_createdAt": "2020-01-04T01:14:05Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1599", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQzMTMyNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363431326", "bodyText": "There is already org.apache.jena.vocabulary.RDF.type, so we probably don't need to declare our own constant.", "author": "bbpennel", "createdAt": "2020-01-06T18:54:52Z", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/RdfLexicon.java", "diffHunk": "@@ -131,6 +134,9 @@\n     public static final Resource FEDORA_PAIR_TREE =\n             createResource(REPOSITORY_NAMESPACE + \"Pairtree\");\n \n+    //RDF\n+    public static final Node RDF_TYPE = createURI(RDF_NAMESPACE + \"type\");", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxOTUyMA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363519520", "bodyText": "will fix.", "author": "dbernstein", "createdAt": "2020-01-06T22:46:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQzMTMyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3NDAzNw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363474037", "bodyText": "I believe the intent of getTriples is to return user supplied triples, since whether to include managed properties will need to be decided based on prefer headers. Perhaps https://github.com/fcrepo4/fcrepo4/blob/c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java#L291 could be updated to always concat in the managed properties for the purposes of this demo?\nWe probably can actually drop OCFLPersistentStorageSession.getManagedProperties, it is leftover from when we thought we would store managed properties as RDF. getHeaders returns all the pertinent info from the persistence layer. The properties that constitute managed properties are largely available as getters from FedoraResource. Some of the indexes that populate them aren't present yet unfortunately (like getTypes, which I suppose could temporarily just return the interaction model). I think we had talked about there being services for pulling together each of the chunks of triples for responses, perhaps we could add the one that puts together the managed properties now, which would produce roughly what getManagedProperties does currently.", "author": "bbpennel", "createdAt": "2020-01-06T20:43:32Z", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/FedoraResourceImpl.java", "diffHunk": "@@ -178,7 +181,10 @@ public boolean hasType(final String type) {\n     @Override\n     public RdfStream getTriples() {\n         try {\n-            return getSession().getTriples(id, getMementoDatetime());\n+            final var triples = Stream.concat(getSession().getTriples(id, getMementoDatetime()),", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg5NDQ2OA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363894468", "bodyText": "yes - will do.", "author": "dbernstein", "createdAt": "2020-01-07T18:47:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3NDAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3ODEwNQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363478105", "bodyText": "Not sure why checkstyles isn't complaining, but lines 54 and 58 are over 120 characters long.\nI'd also line to suggest logging something when the initializer finds the root missing so that logs will indicate that its starting from an empty repo, in case that's surprising.", "author": "bbpennel", "createdAt": "2020-01-06T20:53:47Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl;\n+\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperationFactory;\n+import org.fcrepo.persistence.api.PersistentStorageSession;\n+import org.fcrepo.persistence.api.exceptions.PersistentItemNotFoundException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistentSessionManager;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.PostConstruct;\n+import javax.inject.Inject;\n+\n+import static org.fcrepo.kernel.api.FedoraTypes.FEDORA_ID_PREFIX;\n+\n+/**\n+ * This class is responsible for initializing the repository on start-up.\n+ *\n+ * @author dbernstein\n+ */\n+@Component\n+public class RepositoryInitializer {\n+\n+    @Inject\n+    private OCFLPersistentSessionManager sessionManager;\n+\n+    @Inject\n+    private RdfSourceOperationFactory operationFactory;\n+\n+    /**\n+     * Initializes the repository\n+     */\n+    @PostConstruct\n+    public void initialize() {\n+        //check that the root is initialized\n+        final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" + System.currentTimeMillis());", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxOTYwMg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363519602", "bodyText": "will fix.", "author": "dbernstein", "createdAt": "2020-01-06T22:46:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3ODEwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3OTUyNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363479526", "bodyText": "I think the duplicate catch can be refactored into one:\ntry {\n        try {\n            session.getHeaders(FEDORA_ID_PREFIX, null);\n        } catch (PersistentItemNotFoundException e) {\n            final RdfSourceOperation operation = this.operationFactory.createBuilder(FEDORA_ID_PREFIX, \"http://www.w3.org/ns/ldp#BasicContainer\")\n                    .parentId(FEDORA_ID_PREFIX).build();\n\n            session.persist(operation);\n            session.commit();\n        }\n} catch (PersistentStorageException ex) {\n    throw new RepositoryRuntimeException(e);\n}", "author": "bbpennel", "createdAt": "2020-01-06T20:57:33Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl;\n+\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperationFactory;\n+import org.fcrepo.persistence.api.PersistentStorageSession;\n+import org.fcrepo.persistence.api.exceptions.PersistentItemNotFoundException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistentSessionManager;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.PostConstruct;\n+import javax.inject.Inject;\n+\n+import static org.fcrepo.kernel.api.FedoraTypes.FEDORA_ID_PREFIX;\n+\n+/**\n+ * This class is responsible for initializing the repository on start-up.\n+ *\n+ * @author dbernstein\n+ */\n+@Component\n+public class RepositoryInitializer {\n+\n+    @Inject\n+    private OCFLPersistentSessionManager sessionManager;\n+\n+    @Inject\n+    private RdfSourceOperationFactory operationFactory;\n+\n+    /**\n+     * Initializes the repository\n+     */\n+    @PostConstruct\n+    public void initialize() {\n+        //check that the root is initialized\n+        final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" + System.currentTimeMillis());\n+        try {\n+            session.getHeaders(FEDORA_ID_PREFIX, null);\n+        } catch (PersistentItemNotFoundException e) {\n+            final RdfSourceOperation operation = this.operationFactory.createBuilder(FEDORA_ID_PREFIX, \"http://www.w3.org/ns/ldp#BasicContainer\")\n+                    .parentId(FEDORA_ID_PREFIX).build();\n+            try {\n+                session.persist(operation);\n+                session.commit();\n+            } catch (PersistentStorageException ex) {\n+                throw new RepositoryRuntimeException(e);\n+            }\n+        } catch (PersistentStorageException e) {", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUyMjAzMg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363522032", "bodyText": "will do.", "author": "dbernstein", "createdAt": "2020-01-06T22:54:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3OTUyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3OTc0NQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363479745", "bodyText": "the paragraphs are back", "author": "bbpennel", "createdAt": "2020-01-06T20:58:05Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/FedoraToOCFLObjectIndex.java", "diffHunk": "@@ -31,10 +31,10 @@\n      * as an OCFL object and returns its identifiers.\n      *\n      * If you pass fedora identifier that is not part of an archival group such as\n-     * \"my/fedora/binary/fcr:metadata\"  the parent fedora resource returned in the mapping will be \"my/fedora/binary\".\n-     *\n+     * \"my/fedora/binary/fcr:metadata\"  the  fedora resource returned in the mapping will be \"my/fedora/binary\".\n+     * <p>", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUyMDI4Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363520287", "bodyText": "Hmm. I still have them turned off.  Not sure why this one appeared.  Will remove.", "author": "dbernstein", "createdAt": "2020-01-06T22:48:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3OTc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDY3Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363484673", "bodyText": "Guessing we'll eventually want a more permanent location for this, probably from config? Maybe its not worthwhile to make a constant yet, hmm.", "author": "bbpennel", "createdAt": "2020-01-06T21:11:00Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DefaultOCFLObjectSessionFactory.java", "diffHunk": "@@ -55,7 +54,7 @@ private static final File resolveDir(final String systemPropertyKey, final Strin\n             return new File(path);\n         } else {\n             //return default\n-            return Paths.get(getProperty(JAVA_IO_TMPDIR), defaultDirectoryName).toFile();\n+            return Paths.get(\"fcrepo-data\", defaultDirectoryName).toFile();", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUyNDYzMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363524633", "bodyText": "I'll put one in.", "author": "dbernstein", "createdAt": "2020-01-06T23:04:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcxMjQ2MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363712461", "bodyText": "Actually, I have an update that puts the OCFL storage in the tmp-dir... as intended.\nhttps://jira.lyrasis.org/browse/FCREPO-3162\nThe \"more permanent location\" can currently be defined by the system properties: https://github.com/fcrepo4/fcrepo4/pull/1599/files#diff-f2c25ea789161a21300d5fa03b8a3965R43-R45", "author": "awoods", "createdAt": "2020-01-07T11:47:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjU3MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363872571", "bodyText": "I have merged FCREPO-3162, so this will need a rebase to pick up the changes.", "author": "whikloj", "createdAt": "2020-01-07T17:54:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NDkxNw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363884917", "bodyText": "okay - I will not make any changes here.", "author": "dbernstein", "createdAt": "2020-01-07T18:24:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDY3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDgzMA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363484830", "bodyText": "space.\nIs this covering the case where a client provides an empty body for a rdf source?", "author": "bbpennel", "createdAt": "2020-01-06T21:11:28Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/OCFLPersistentStorageUtils.java", "diffHunk": "@@ -173,7 +173,9 @@ public static WriteOutcome writeRDF(final OCFLObjectSession session, final RdfSt\n         try (final var os = new ByteArrayOutputStream()) {\n             final StreamRDF streamRDF = getWriterStream(os, getRdfFormat());\n             streamRDF.start();\n-            triples.forEach(streamRDF::triple);\n+            if(triples != null) {", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUyNTUxOQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363525519", "bodyText": "I believe so, but I'll check.", "author": "dbernstein", "createdAt": "2020-01-06T23:07:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDgzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAyMTUzMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364021533", "bodyText": "This does not cover the case of an empty body: https://jira.lyrasis.org/browse/FCREPO-3168", "author": "dbernstein", "createdAt": "2020-01-08T00:51:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDgzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1ODcwNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364758704", "bodyText": "Okay, what scenario do you get an null triples stream in a call to writeRDF?", "author": "bbpennel", "createdAt": "2020-01-09T14:13:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDgzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2OTUzOA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364869538", "bodyText": "It looks like CreateRdfSourceOperationBuilder passes a null tripleStream when the stream from the request is empty.  So the resulting CreateRdfSourceOperation passes the null triples along.", "author": "dbernstein", "createdAt": "2020-01-09T17:31:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3MzU4Ng==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363673586", "bodyText": "May as well remove these.", "author": "awoods", "createdAt": "2020-01-07T10:03:06Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -74,10 +74,10 @@\n import static org.fcrepo.kernel.api.RdfLexicon.VERSIONING_TIMEMAP_TYPE;\n import static org.fcrepo.kernel.api.RdfLexicon.isManagedNamespace;\n import static org.fcrepo.kernel.api.RdfLexicon.isManagedPredicate;\n-import static org.fcrepo.kernel.api.RequiredRdfContext.EMBED_RESOURCES;\n-import static org.fcrepo.kernel.api.RequiredRdfContext.INBOUND_REFERENCES;\n-import static org.fcrepo.kernel.api.RequiredRdfContext.LDP_CONTAINMENT;\n-import static org.fcrepo.kernel.api.RequiredRdfContext.LDP_MEMBERSHIP;\n+//import static org.fcrepo.kernel.api.RequiredRdfContext.EMBED_RESOURCES;", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NTAyNQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363885025", "bodyText": "will do.", "author": "dbernstein", "createdAt": "2020-01-07T18:24:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3MzU4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk0Nzc2OA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364947768", "bodyText": "Done", "author": "dbernstein", "createdAt": "2020-01-09T20:35:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3MzU4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3NDQ2Ng==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363674466", "bodyText": "An explanation for why these are being commented out would be helpful. I assume this is a temporary hack?\nShould there be an added TODO linking to a ticket to bring them back?", "author": "awoods", "createdAt": "2020-01-07T10:05:17Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -330,32 +322,32 @@ private RdfStream getResourceTriples(final int limit, final FedoraResource resou\n             // Additional server-managed triples about this resource\n             // Mementos already have the server managed properties in the PROPERTIES category\n             // since mementos are immutable and these triples are no longer managed\n-             if (ldpPreferences.prefersServerManaged() && !resource.isMemento()) {\n-                streams.add(getTriples(resource, SERVER_MANAGED));\n+            if (ldpPreferences.prefersServerManaged() && !resource.isMemento()) {\n+                //streams.add(getTriples(resource, SERVER_MANAGED));", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1OTkxNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363859916", "bodyText": "I think include/omit choices were supposed to occur in a service...can't remember which service. So I agree this needs a TODO but I think it could be removed.", "author": "whikloj", "createdAt": "2020-01-07T17:24:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3NDQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4MTY0Mg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363881642", "bodyText": "will do.", "author": "dbernstein", "createdAt": "2020-01-07T18:16:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3NDQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk0NzcyNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364947724", "bodyText": "Done", "author": "dbernstein", "createdAt": "2020-01-09T20:35:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3NDQ2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5NzgzOQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363697839", "bodyText": "It seems safer to use identifierConverter() getter... instead of the this.identifierConverter directly.", "author": "awoods", "createdAt": "2020-01-07T11:04:36Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -447,7 +439,7 @@ private RdfStream getTriples(final FedoraResource resource, final TripleCategory\n \n     protected URI getUri(final FedoraResource resource) {\n         try {\n-            final String uri = translator().reverse().convert(resource).getURI();\n+            final String uri = this.identifierConverter.toExternalId(resource.getId());", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NzA4MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363887081", "bodyText": "will do.", "author": "dbernstein", "createdAt": "2020-01-07T18:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5NzgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk0NzUzMA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364947530", "bodyText": "Done.", "author": "dbernstein", "createdAt": "2020-01-09T20:34:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5NzgzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5ODExMQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363698111", "bodyText": "As a separate issue, should we go ahead and purge all usage of translator()?", "author": "awoods", "createdAt": "2020-01-07T11:05:25Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -447,7 +439,7 @@ private RdfStream getTriples(final FedoraResource resource, final TripleCategory\n \n     protected URI getUri(final FedoraResource resource) {\n         try {\n-            final String uri = translator().reverse().convert(resource).getURI();", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg2NDExMg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363864112", "bodyText": "I think this might be more easily tackled once we can get a response from the server. But I'm not opposed if @dbernstein feels he can fix them all, it will make this a more complex PR.", "author": "whikloj", "createdAt": "2020-01-07T17:33:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5ODExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4Njk5Mg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363886992", "bodyText": "I created a JIRA: https://jira.lyrasis.org/browse/FCREPO-3163", "author": "dbernstein", "createdAt": "2020-01-07T18:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5ODExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5NTU5Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364895593", "bodyText": "I'm good with this, @awoods can we consider this resolved?", "author": "whikloj", "createdAt": "2020-01-09T18:32:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5ODExMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcwNjQ2OQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363706469", "bodyText": "For consistency and safety, probably best to use the identifierConverter() method.", "author": "awoods", "createdAt": "2020-01-07T11:29:47Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -425,8 +428,8 @@ public Response createOrReplaceObjectRdf(\n                         links, checksums, requestBodyStream, extContent);\n             }\n         } else {\n-            final Model model = httpRdfService.bodyToInternalModel(externalPath(), requestBodyStream,\n-                requestContentType);\n+            final Model model = httpRdfService.bodyToInternalModel(externalUri, requestBodyStream,\n+                requestContentType, identifierConverter);", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk0NzMxNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364947316", "bodyText": "This is done.", "author": "dbernstein", "createdAt": "2020-01-09T20:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcwNjQ2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg2OTM1OA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363869358", "bodyText": "Just noting that we get the externalPath from the @PathParam so adding the host and context back on is why I added the toDomain() method to the HttpIdentifierConverter. So these two lines could be\nfinal String fedoraId = identifierConverter().toInternalId(identifierConverter().toDomain(externalPath()));\n\nOtherwise we could remove the externalPath() setup and make either externalUri and/or fedoraId into a class variable as this will probably be needed.", "author": "whikloj", "createdAt": "2020-01-07T17:46:25Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -409,7 +411,8 @@ public Response createOrReplaceObjectRdf(\n             //}\n         }\n \n-        final String fedoraId = identifierConverter().toInternalId(externalPath());\n+        final String externalUri = this.uriInfo.getRequestUri().toString();\n+        final String fedoraId = identifierConverter().toInternalId(externalUri);", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4MTMyNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364881324", "bodyText": "@whikloj :  I'd prefer to defer this change for another PR in the interest of moving things along.  Would you mind creating a JIRA describing the changes you are recommending?", "author": "dbernstein", "createdAt": "2020-01-09T17:59:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg2OTM1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5MzkyOA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364893928", "bodyText": "https://jira.lyrasis.org/browse/FCREPO-3170", "author": "whikloj", "createdAt": "2020-01-09T18:29:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg2OTM1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MDY2NA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363870664", "bodyText": "This class has been replaced by the HttpIdentifierConverter perhaps adding a @deprecated to this is now necessary?", "author": "whikloj", "createdAt": "2020-01-07T17:49:50Z", "path": "fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/api/rdf/HttpResourceConverter.java", "diffHunk": "@@ -96,8 +97,7 @@ protected FedoraResource doForward(final Resource resource) {\n \n     @Override\n     protected Resource doBackward(final FedoraResource resource) {\n-            //@TODO Implement this\n-            return null;\n+        return ResourceFactory.createResource(resource.getId());", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NjMyMg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363886322", "bodyText": "will add @deprecated", "author": "dbernstein", "createdAt": "2020-01-07T18:27:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MDY2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjA0Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363872047", "bodyText": "I'm not 100% sure, but if this is casting the long to a String I think\nfinal String stateToken = DigestUtils.md5Hex(String.valueOf(instant.toEpochMilli())).toUpperCase();\n\nwould be clearer...unless it doesn't work as expected?", "author": "whikloj", "createdAt": "2020-01-07T17:53:06Z", "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeaderUtils.java", "diffHunk": "@@ -111,6 +113,9 @@ public static void touchModificationHeaders(final ResourceHeadersImpl headers, f\n         }\n         headers.setLastModifiedDate(instant);\n         headers.setLastModifiedBy(userPrincipal);\n+\n+        final String stateToken = DigestUtils.md5Hex(instant.toEpochMilli() + \"\").toUpperCase();", "originalCommit": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NTkxMg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363885912", "bodyText": "I'm not sure if casting a long to a string will cause the result to include commas.", "author": "dbernstein", "createdAt": "2020-01-07T18:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAxNDE2NQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364014165", "bodyText": "I believe the \"state token\" should relate to the state of the resource, and therefore be reproducible in the case that the state of the resource does not change.\nThe idea is that the state token can be subsequently used by a client when requesting to make a change to a resource. If the state token can not be reproduced on the server-side when determining whether the client-provided state token represents the current state or not... then the utility of the token is lost.", "author": "awoods", "createdAt": "2020-01-08T00:19:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAyMjkzMg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364022932", "bodyText": "I think this should be addressed in a separate JIRA: https://jira.lyrasis.org/browse/FCREPO-3169", "author": "dbernstein", "createdAt": "2020-01-08T00:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1MjQ1MA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364752450", "bodyText": "Either String.valueOf or Long.toString would be fine and not add commas, but they might not matter at this point", "author": "bbpennel", "createdAt": "2020-01-09T14:00:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4MTUyNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364881526", "bodyText": "Done.", "author": "dbernstein", "createdAt": "2020-01-09T17:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjA0Nw=="}], "type": "inlineReview"}, {"oid": "c9e0453af293576cb1b2109dd653cdaf038dafcb", "url": "https://github.com/fcrepo/fcrepo/commit/c9e0453af293576cb1b2109dd653cdaf038dafcb", "message": "Adds repository initializer", "committedDate": "2020-01-07T20:31:08Z", "type": "commit"}, {"oid": "a6af5bc5d9feeccd05247f42f82ebd0d0bc4f7bc", "url": "https://github.com/fcrepo/fcrepo/commit/a6af5bc5d9feeccd05247f42f82ebd0d0bc4f7bc", "message": "Fixes GET repository root resource, PUT basic container and GET basic container.", "committedDate": "2020-01-07T20:45:12Z", "type": "commit"}, {"oid": "025ff0426598c930f81600e38b97543312b5f94d", "url": "https://github.com/fcrepo/fcrepo/commit/025ff0426598c930f81600e38b97543312b5f94d", "message": "Enables two integration tests for HEAD on the repository root and\nPUT and GET a direct container.", "committedDate": "2020-01-07T20:45:12Z", "type": "commit"}, {"oid": "2e801551083d36b5fbcbe3f49dd1ddb60b1e7e49", "url": "https://github.com/fcrepo/fcrepo/commit/2e801551083d36b5fbcbe3f49dd1ddb60b1e7e49", "message": "Address PR feedback.", "committedDate": "2020-01-08T00:41:07Z", "type": "forcePushed"}, {"oid": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "url": "https://github.com/fcrepo/fcrepo/commit/f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "message": "Address PR feedback.", "committedDate": "2020-01-08T00:44:49Z", "type": "commit"}, {"oid": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "url": "https://github.com/fcrepo/fcrepo/commit/f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "message": "Address PR feedback.", "committedDate": "2020-01-08T00:44:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA1MDMwMQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364050301", "bodyText": "Minor: space after if and between ){", "author": "awoods", "createdAt": "2020-01-08T03:25:16Z", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/FedoraResourceImpl.java", "diffHunk": "@@ -175,14 +176,25 @@ public boolean hasType(final String type) {\n \n     @Override\n     public List<URI> getTypes() {\n+        if(types == null){", "originalCommit": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM1MTU4MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364351581", "bodyText": "will fix.", "author": "dbernstein", "createdAt": "2020-01-08T17:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA1MDMwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk0NzkzMQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364947931", "bodyText": "Done", "author": "dbernstein", "createdAt": "2020-01-09T20:35:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA1MDMwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MDE1OA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364060158", "bodyText": "@Component is for Spring creation/scanning. @Provider is for jax-rs resources. Was this change intentional? ...it appears to have broken the auto-injection functionality.", "author": "awoods", "createdAt": "2020-01-08T04:31:43Z", "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/LinkHeaderProvider.java", "diffHunk": "@@ -49,18 +49,18 @@\n  * @author whikloj\n  * @since 2015-10-30\n  */\n-@Component\n+@Provider", "originalCommit": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM1MTUxNw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364351517", "bodyText": "I think it was intentional - but I will verify.", "author": "dbernstein", "createdAt": "2020-01-08T17:27:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM2MTU1OQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364361559", "bodyText": "Yes - it was intentional.  This provider uses the jax-rs @context parameter for injecting resources.   I changed it to @Provider to fix the problem which was that the dependencies weren't being injected.", "author": "dbernstein", "createdAt": "2020-01-08T17:50:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0NjQ4Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364546483", "bodyText": "I just double-checked to make sure...\nAs far as I can tell, this change removes LinkHeaderProvider from any execution flow.\nThe previous logic was that ContentExposingResource would invoke the HttpHeaderInjector:\nhttps://github.com/fcrepo4/fcrepo4/blob/master/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java#L691\n..which looks for Spring-managed classes that implement UriAwareHttpHeaderFactory:\nhttps://github.com/fcrepo4/fcrepo4/blob/master/fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/api/HttpHeaderInjector.java#L81\nBy changing LinkHeaderProviders annotation from @Component (Spring) to @Provider (jax-rs), the class is no longer found by HttpHeaderInjector... and therefore never invoked.", "author": "awoods", "createdAt": "2020-01-09T03:35:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0NzcxNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364547714", "bodyText": "As a side note, this class only uses the @Context annotation for injecting resources because you made that change in this PR :)", "author": "awoods", "createdAt": "2020-01-09T03:42:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MTEwNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364551106", "bodyText": "There is a more fundamental issue, which may have been the reason for your introduction of this change, which is how the TransactionProvider is now trying to be used. It is trying to be managed by both jax-rs (@Provider) and Spring (@Component):\nhttps://github.com/fcrepo4/fcrepo4/blob/master/fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/session/TransactionProvider.java#L38-L40\n..which I do not think is possible.\nAdditionally, the TransactionProvider implements org.glassfish.hk2.api.Factory<Transaction> in order to facilitate @injecting Transactions into classes via HK2 (https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest/ioc.html#d0e17033). It appears that an attempt was made to change this approach in https://github.com/fcrepo4/fcrepo4/pull/1559/files . Instead of Injecting TransactionProvider, I believe we should be Injecting Transaction... and allowing the TransactionProvider Factory to \"provide\" the Transaction.\nI will look into...", "author": "awoods", "createdAt": "2020-01-09T04:03:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcxODEwMA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364718100", "bodyText": "Issues should now be resolved with: dbernstein#8", "author": "awoods", "createdAt": "2020-01-09T12:42:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk0ODAzNw==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364948037", "bodyText": "Merged.", "author": "dbernstein", "createdAt": "2020-01-09T20:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MDE1OA=="}], "type": "inlineReview"}, {"oid": "ac006721bba09e15844f3c3c516081d598878bde", "url": "https://github.com/fcrepo/fcrepo/commit/ac006721bba09e15844f3c3c516081d598878bde", "message": "Minor update to address previously overlooked PR comment.", "committedDate": "2020-01-08T17:23:40Z", "type": "commit"}, {"oid": "18611709b6b51bf76a161c6e152caa9c7ae392c6", "url": "https://github.com/fcrepo/fcrepo/commit/18611709b6b51bf76a161c6e152caa9c7ae392c6", "message": "Formatting.", "committedDate": "2020-01-08T17:32:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyOTk5Ng==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364429996", "bodyText": "The tripleFilter thing might not be necessary here anymore since SMTs are being generated elsewhere. I think our conclusion was that we would silently ignore SMTs supplied by clients on POST/PUT. Or maybe i'm being overly optimistic", "author": "bbpennel", "createdAt": "2020-01-08T20:32:52Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -315,47 +303,54 @@ private RdfStream getResourceTriples(final int limit, final FedoraResource resou\n \n         final List<Stream<Triple>> streams = new ArrayList<>();\n \n-\n         if (returnPreference.getValue().equals(\"minimal\")) {\n-            streams.add(getTriples(resource, of(PROPERTIES, MINIMAL)).filter(tripleFilter));\n-\n+            streams.add(resource.getTriples().filter(tripleFilter));", "originalCommit": "18611709b6b51bf76a161c6e152caa9c7ae392c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3MDE4MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364870181", "bodyText": "I'll remove.", "author": "dbernstein", "createdAt": "2020-01-09T17:33:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyOTk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0MzQ1MQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364743451", "bodyText": "i don't think this is the right description", "author": "bbpennel", "createdAt": "2020-01-09T13:42:25Z", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/services/ManagedPropertiesService.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.kernel.api.services;\n+\n+import org.apache.jena.graph.Triple;\n+import org.fcrepo.kernel.api.models.FedoraResource;\n+\n+import java.util.stream.Stream;\n+\n+/**\n+ * Interface for a service to create a new resource via a POST request.", "originalCommit": "18611709b6b51bf76a161c6e152caa9c7ae392c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3MDIzNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364870236", "bodyText": "I will fix.", "author": "dbernstein", "createdAt": "2020-01-09T17:33:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0MzQ1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1NjYwNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364756606", "bodyText": "is \"read-only\" going to be referenced again in the future or is it just for the sake of having a string here? Wondering if it should be a constant.", "author": "bbpennel", "createdAt": "2020-01-09T14:08:41Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DefaultOCFLObjectSessionFactory.java", "diffHunk": "@@ -98,7 +99,9 @@ public DefaultOCFLObjectSessionFactory(final File ocflStagingDir, final File ocf\n \n     @Override\n     public OCFLObjectSession create(final String ocflId, final String persistentStorageSessionId) {\n-        final File stagingDirectory = new File(this.ocflStagingDir, persistentStorageSessionId);\n+\n+        final File stagingDirectory = new File(this.ocflStagingDir,\n+                persistentStorageSessionId == null ? \"read-only\" : persistentStorageSessionId);", "originalCommit": "18611709b6b51bf76a161c6e152caa9c7ae392c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5NDYwMA==", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364894600", "bodyText": "Ah - yeah:  I put that there for the sake of having a string - it won't be referenced elsewhere.", "author": "dbernstein", "createdAt": "2020-01-09T18:30:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1NjYwNg=="}], "type": "inlineReview"}, {"oid": "185a35d23a1dac356a91aaa80ae9fb8b39b12a16", "url": "https://github.com/fcrepo/fcrepo/commit/185a35d23a1dac356a91aaa80ae9fb8b39b12a16", "message": "Resolves issues with transaction injection\n\nRelated to: https://jira.lyrasis.org/browse/FCREPO-3159\n\nAlso resolves: https://jira.lyrasis.org/browse/FCREPO-3160", "committedDate": "2020-01-09T17:20:35Z", "type": "commit"}, {"oid": "ec054b1238962fd0cecfa7f1789d395e77ae800b", "url": "https://github.com/fcrepo/fcrepo/commit/ec054b1238962fd0cecfa7f1789d395e77ae800b", "message": "* Use String.valueOf() for converting long to String\n* Remove tripleFilter in getResourceTriples().\n* Update javadoc on ManagedPropertiesService.", "committedDate": "2020-01-09T17:37:49Z", "type": "commit"}]}