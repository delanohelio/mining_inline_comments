{"pr_number": 958, "pr_title": "Return the list of errors that cause validity/compatibility issues", "pr_createdAt": "2020-10-27T13:57:11Z", "pr_url": "https://github.com/Apicurio/apicurio-registry/pull/958", "timeline": [{"oid": "62ba1b08426f73e30e14676915a60047ce7ffdf3", "url": "https://github.com/Apicurio/apicurio-registry/commit/62ba1b08426f73e30e14676915a60047ce7ffdf3", "message": "Return the list of errors that cause validity/compatibility issues", "committedDate": "2020-10-27T13:56:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcyOTc0Ng==", "url": "https://github.com/Apicurio/apicurio-registry/pull/958#discussion_r512729746", "bodyText": "When should someone return an empty compatibility result? What does it mean?", "author": "ronsher", "createdAt": "2020-10-27T14:16:56Z", "path": "app/src/main/java/io/apicurio/registry/rules/compatibility/CompatibilityExecutionResult.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.apicurio.registry.rules.compatibility;\n+\n+import io.apicurio.registry.rules.compatibility.jsonschema.diff.Difference;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+\n+/**\n+ * Created by aohana\n+ */\n+public class CompatibilityExecutionResult {\n+\n+    private boolean isCompatible;\n+    private Set<Difference> incompatibleDifferences;\n+\n+    public CompatibilityExecutionResult(boolean isCompatible, Set<Difference> incompatibleDifferences) {\n+        this.isCompatible = isCompatible;\n+        this.incompatibleDifferences = incompatibleDifferences;\n+    }\n+\n+    public boolean isCompatible() {\n+        return isCompatible;\n+    }\n+\n+    public void setCompatible(boolean compatible) {\n+        isCompatible = compatible;\n+    }\n+\n+    public Set<Difference> getIncompatibleDifferences() {\n+        return incompatibleDifferences;\n+    }\n+\n+    public void setIncompatibleDifferences(Set<Difference> incompatibleDifferences) {\n+        this.incompatibleDifferences = incompatibleDifferences;\n+    }\n+\n+    public static CompatibilityExecutionResult empty(boolean isCompatible) {", "originalCommit": "62ba1b08426f73e30e14676915a60047ce7ffdf3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0OTM1OQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/958#discussion_r512749359", "bodyText": "all the schema types (except JSON) currently don't have information on the compatibility error so they will return isCompatible (true/false) and an empty diff set", "author": "adiohana", "createdAt": "2020-10-27T14:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcyOTc0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjczMDQxOQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/958#discussion_r512730419", "bodyText": "Indentation isn't compatible with existing code", "author": "ronsher", "createdAt": "2020-10-27T14:17:43Z", "path": "app/src/main/java/io/apicurio/registry/rules/compatibility/CompatibilityChecker.java", "diffHunk": "@@ -37,17 +38,17 @@\n      *                           (e.g. a global COMPATIBILITY rule with {@see io.apicurio.registry.rules.RuleApplicationType#CREATE})\n      * @param proposedArtifact   MUST NOT be null\n      */\n-    default boolean isCompatibleWith(CompatibilityLevel compatibilityLevel, List<ContentHandle> existingArtifacts, ContentHandle proposedArtifact) {\n+    default CompatibilityExecutionResult testCompatibility(CompatibilityLevel compatibilityLevel, List<ContentHandle> existingArtifacts, ContentHandle proposedArtifact) {\n         requireNonNull(compatibilityLevel, \"compatibilityLevel MUST NOT be null\");\n         requireNonNull(existingArtifacts, \"existingArtifacts MUST NOT be null\");\n         requireNonNull(proposedArtifact, \"proposedArtifact MUST NOT be null\");\n         if (existingArtifacts.contains(null)) {\n             throw new IllegalStateException(\"existingArtifacts contains null element(s)\");\n         }\n-        return isCompatibleWith(\n-            compatibilityLevel,\n-            existingArtifacts.stream().map(ContentHandle::content).collect(Collectors.toList()),\n-            proposedArtifact.content()\n+        return testCompatibility(\n+                compatibilityLevel,\n+                existingArtifacts.stream().map(ContentHandle::content).collect(Collectors.toList()),\n+                proposedArtifact.content()", "originalCommit": "62ba1b08426f73e30e14676915a60047ce7ffdf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjczMDk5NA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/958#discussion_r512730994", "bodyText": "Can you add to the comment some explanation on this class?", "author": "ronsher", "createdAt": "2020-10-27T14:18:26Z", "path": "app/src/main/java/io/apicurio/registry/rules/compatibility/CompatibilityExecutionResult.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.apicurio.registry.rules.compatibility;\n+\n+import io.apicurio.registry.rules.compatibility.jsonschema.diff.Difference;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+\n+/**\n+ * Created by aohana\n+ */\n+public class CompatibilityExecutionResult {", "originalCommit": "62ba1b08426f73e30e14676915a60047ce7ffdf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjczMTY0OA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/958#discussion_r512731648", "bodyText": "indentation too deep", "author": "ronsher", "createdAt": "2020-10-27T14:19:10Z", "path": "app/src/main/java/io/apicurio/registry/rules/compatibility/CompatibilityRuleExecutor.java", "diffHunk": "@@ -56,14 +61,31 @@ public void execute(RuleContext context) throws RuleViolationException {\n         CompatibilityChecker checker = provider.getCompatibilityChecker();\n         List<ContentHandle> existingArtifacts = context.getCurrentContent() != null\n             ? singletonList(context.getCurrentContent()) : emptyList();\n-        if (!checker.isCompatibleWith(\n-            level,\n-            existingArtifacts,\n-            context.getUpdatedContent())\n-        ) {\n-            throw new RuleViolationException(String.format(\"Incompatible artifact: %s [%s]\",\n-                context.getArtifactId(), context.getArtifactType()),\n-                RuleType.COMPATIBILITY, context.getConfiguration());\n+        CompatibilityExecutionResult compatibilityExecutionResult = checker.testCompatibility(\n+                level,\n+                existingArtifacts,\n+                context.getUpdatedContent());", "originalCommit": "62ba1b08426f73e30e14676915a60047ce7ffdf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjczODYxMg==", "url": "https://github.com/Apicurio/apicurio-registry/pull/958#discussion_r512738612", "bodyText": "indentation", "author": "ronsher", "createdAt": "2020-10-27T14:27:04Z", "path": "app/src/main/java/io/apicurio/registry/rules/compatibility/jsonschema/JsonSchemaDiffLibrary.java", "diffHunk": "@@ -45,12 +48,12 @@ public static DiffContext findDifferences(String original, String updated) {\n             JSONObject updatedJson = MAPPER.readValue(updated, JSONObject.class);\n \n             Schema originalSchema = SchemaLoader.builder()\n-                .schemaJson(originalJson)\n-                .build().load().build();\n+                    .schemaJson(originalJson)\n+                    .build().load().build();", "originalCommit": "62ba1b08426f73e30e14676915a60047ce7ffdf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjczODk1NA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/958#discussion_r512738954", "bodyText": "indentation", "author": "ronsher", "createdAt": "2020-10-27T14:27:25Z", "path": "app/src/main/java/io/apicurio/registry/rules/compatibility/jsonschema/diff/DiffContext.java", "diffHunk": "@@ -85,12 +86,12 @@ private void addToDifferenceSets(Difference difference) {\n \n     public void addDifference(DiffType type, Object originalSubchema, Object updatedSubchema) {\n         Difference difference = Difference.builder()\n-            .diffType(type)\n-            .pathOriginal(\"\")\n-            .pathUpdated(pathUpdated)\n-            .subSchemaOriginal(Objects.toString(originalSubchema)) // make sure toString is good enough\n-            .subSchemaUpdated(Objects.toString(updatedSubchema))\n-            .build();\n+                .diffType(type)\n+                .pathOriginal(\"\")\n+                .pathUpdated(pathUpdated)\n+                .subSchemaOriginal(Objects.toString(originalSubchema)) // make sure toString is good enough\n+                .subSchemaUpdated(Objects.toString(updatedSubchema))\n+                .build();", "originalCommit": "62ba1b08426f73e30e14676915a60047ce7ffdf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7d312f451c0e556b6761af8ec43f413aa6c5b85c", "url": "https://github.com/Apicurio/apicurio-registry/commit/7d312f451c0e556b6761af8ec43f413aa6c5b85c", "message": "fixed tests and indentation", "committedDate": "2020-10-27T15:02:32Z", "type": "commit"}, {"oid": "a44129b447d596caf798604c486ad1b71f2f44ce", "url": "https://github.com/Apicurio/apicurio-registry/commit/a44129b447d596caf798604c486ad1b71f2f44ce", "message": "remove thread sleep from resource test. CompatibilityExecutionResult class description.", "committedDate": "2020-10-27T15:21:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM1NTQ0NA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/958#discussion_r513355444", "bodyText": "...result for a compatibility check", "author": "ronsher", "createdAt": "2020-10-28T11:03:48Z", "path": "app/src/main/java/io/apicurio/registry/rules/compatibility/CompatibilityExecutionResult.java", "diffHunk": "@@ -7,6 +7,9 @@\n \n /**\n  * Created by aohana\n+ *\n+ * Holds the result for compatibility check", "originalCommit": "7d312f451c0e556b6761af8ec43f413aa6c5b85c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b5eb00eb9b0d6497940a845685711e20871c1973", "url": "https://github.com/Apicurio/apicurio-registry/commit/b5eb00eb9b0d6497940a845685711e20871c1973", "message": "fixed typo", "committedDate": "2020-10-28T13:37:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwNzQ3NQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/958#discussion_r516707475", "bodyText": ":) nice catch", "author": "EricWittmann", "createdAt": "2020-11-03T14:29:29Z", "path": "common/src/main/resources/META-INF/openapi.json", "diffHunk": "@@ -2233,7 +2233,7 @@\n                 }\n             },\n             \"RuleViolationCause\": {\n-                \"title\": \"Root Type for RuleViolationCAuse\",\n+                \"title\": \"Root Type for RuleViolationCause\",", "originalCommit": "b5eb00eb9b0d6497940a845685711e20871c1973", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "abefab6e32b81e4511a6bba1d002758a313f8172", "url": "https://github.com/Apicurio/apicurio-registry/commit/abefab6e32b81e4511a6bba1d002758a313f8172", "message": "Merge branch 'master' into issue_712_rule_violation", "committedDate": "2020-11-03T15:02:45Z", "type": "commit"}, {"oid": "5141416776a8e42e4acfc2a5816437b6c24819c2", "url": "https://github.com/Apicurio/apicurio-registry/commit/5141416776a8e42e4acfc2a5816437b6c24819c2", "message": "Merge branch 'master' of https://github.com/Apicurio/apicurio-registry into issue_712_rule_violation", "committedDate": "2020-11-03T15:26:44Z", "type": "commit"}, {"oid": "f202da1a89d6c08311a36157df15ead2cd18f867", "url": "https://github.com/Apicurio/apicurio-registry/commit/f202da1a89d6c08311a36157df15ead2cd18f867", "message": "fixed tests", "committedDate": "2020-11-03T15:28:21Z", "type": "commit"}, {"oid": "f32181b01b9b335461b2cfd6f408b9dea9236707", "url": "https://github.com/Apicurio/apicurio-registry/commit/f32181b01b9b335461b2cfd6f408b9dea9236707", "message": "Merge branch 'issue_712_rule_violation' of https://github.com/adiohana/apicurio-registry into issue_712_rule_violation", "committedDate": "2020-11-03T15:29:28Z", "type": "commit"}, {"oid": "b68e8163d422cda862c59602704a3c4c688c45df", "url": "https://github.com/Apicurio/apicurio-registry/commit/b68e8163d422cda862c59602704a3c4c688c45df", "message": "fixed tests", "committedDate": "2020-11-03T15:39:48Z", "type": "commit"}, {"oid": "b13e3d9ccd0451037a4da4f168f07b16d1f9e9d3", "url": "https://github.com/Apicurio/apicurio-registry/commit/b13e3d9ccd0451037a4da4f168f07b16d1f9e9d3", "message": "Merge branch 'master' into issue_712_rule_violation", "committedDate": "2020-11-03T16:27:59Z", "type": "commit"}]}