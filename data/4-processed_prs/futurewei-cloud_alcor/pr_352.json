{"pr_number": 352, "pr_title": "[Rbac] Alcor Rbac Support", "pr_createdAt": "2020-08-12T06:08:40Z", "pr_url": "https://github.com/futurewei-cloud/alcor/pull/352", "timeline": [{"oid": "81ea6d8c92fcdd7b852484bbcba34f918aaa5744", "url": "https://github.com/futurewei-cloud/alcor/commit/81ea6d8c92fcdd7b852484bbcba34f918aaa5744", "message": "add request attr null handle", "committedDate": "2020-08-12T06:12:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MjM4Mg==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r469452382", "bodyText": "@Gzure is this an typo \"@\"?", "author": "xieus", "createdAt": "2020-08-12T18:18:59Z", "path": "web/src/main/java/com/futurewei/alcor/web/rbac/aspect/Rbac.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.web.rbac.aspect;\n+\n+import java.lang.annotation.*;\n+\n+@Target(ElementType.METHOD)\n+@Retention(RetentionPolicy.RUNTIME)\n+@Documented\n+public @interface Rbac {", "originalCommit": "81ea6d8c92fcdd7b852484bbcba34f918aaa5744", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM1MTkyMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470351921", "bodyText": "Yes, It's an annotation.", "author": "Gzure", "createdAt": "2020-08-14T01:03:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MjM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNzQwOA==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470417408", "bodyText": "Can you document this new annotation in the design doc? This is good staff.", "author": "xieus", "createdAt": "2020-08-14T05:27:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MjM4Mg=="}], "type": "inlineReview"}, {"oid": "f9078319e1f0e6244851454324e5affcfc702ff7", "url": "https://github.com/futurewei-cloud/alcor/commit/f9078319e1f0e6244851454324e5affcfc702ff7", "message": "add rbac_design.adoc", "committedDate": "2020-08-14T02:43:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNDQ0Ng==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470404446", "bodyText": "This file appears to be changed unintentionally. Could you revert it back?", "author": "xieus", "createdAt": "2020-08-14T04:32:13Z", "path": "docs/modules/ROOT/pages/high_level/high_level_design.adoc", "diffHunk": "@@ -1,63 +1 @@\n-# Alcor - A Hyperscale Cloud-Native SDN Control Plane\n-\n-NOTE: This document is under development\n-\n-== Introduction\n-\n-Shared-nothing Micro-service Architecture\n-\n-* Micro-services design\n-** Each micro-service has its dedicated responsibility (e,g, allocating virtual IPs, virtual MACs) and provides gRPC apis for service access\n-* Shared-nothing architecture\n-** Database shards, cache and memory are owned by a service, and are not allowed to share across service boundary\n-* Shared-nothing architecture brings the following benefits:\n-** Eliminates contention of storage among services\n-** Reduce cache miss rate and hot cache removal due to noisy neighbors\n-** Each service could scale on its own by adding new instances, cache instance and database tables\n-** No single point of failure issue since there is no central resource bottleneck in the system\n-\n-\n-== Alcor Platform Key Feature Design\n-\n-=== Large Scale\n-\n-* Support 1 M VM/containers with MQ layer and batch processing\n-* Ability to process (potentially thousands) Goal State configuration in big batch for customers\n-\n-=== High Throughput\n-\n-* Target is 10K VM/container provisioning per minute\n-\n-=== Ultra-low Latency\n-Fast provisioning: One-layer controller design with Goal State push model and fast path\n-\n-* Using gRPC for super-fast goal state update for certain customer scenarios like serverless\n-* Goal state model consisting of network resource state and operation type,\n-grouping of network configurations and instantaneous provisioning\n-\n-=== Unified VM/container networking management\n-\n-=== Support agility and velocity in DevOps\n-* Sidecar model: decouple application and service governance in independent processes, across-language and upgrade decouple\n-* Services could be updated independently due to service decoupling\n-* Canary-based grey release\n-\n-=== Resilience\n-\n-* Controller AZ resilience\n-\n-* Communication channel resilience\n-** gRPC-based fast path\n-** MQ-based normal path (support Apache Pulsar, Kafka)\n-** Rescue path (skip local crashed agent and call neighbor agent to pass network configuration)\n-\n-=== Compatibility\n-\n-* Compatibility with OpenStack, Kubernetes, and OPNFV\n-* Support multiple data plane implementations including Mizar (eBPF/Geneve) currently and OVS/VxLan (in design)\n-** Open driver framework at Controllers\n-** Plugin model at Alcor Control Agent\n-\n-== Inside the Big Picture\n-\n-plantuml::../../workflows/vm_create.puml[format=\"svg\", align=\"center\"]\n+# Alcor - A Hyperscale Cloud-Native SDN Control Plane\r\rNOTE: This document is under development\r\r== Introduction\r\rShared-nothing Micro-service Architecture\r\r* Micro-services design\r** Each micro-service has its dedicated responsibility (e,g, allocating virtual IPs, virtual MACs) and provides gRPC apis for service access\r* Shared-nothing architecture\r** Database shards, cache and memory are owned by a service, and are not allowed to share across service boundary\r* Shared-nothing architecture brings the following benefits:\r** Eliminates contention of storage among services\r** Reduce cache miss rate and hot cache removal due to noisy neighbors\r** Each service could scale on its own by adding new instances, cache instance and database tables\r** No single point of failure issue since there is no central resource bottleneck in the system\r\r\r== Alcor Platform Key Feature Design\r\r=== Large Scale\r\r* Support 1 M VM/containers with MQ layer and batch processing\r* Ability to process (potentially thousands) Goal State configuration in big batch for customers\r\r=== High Throughput\r\r* Target is 10K VM/container provisioning per minute\r\r=== Ultra-low Latency\rFast provisioning: One-layer controller design with Goal State push model and fast path\r\r* Using gRPC for super-fast goal state update for certain customer scenarios like serverless\r* Goal state model consisting of network resource state and operation type,\rgrouping of network configurations and instantaneous provisioning\r\r=== Unified VM/container networking management\r\r=== Support agility and velocity in DevOps\r* Sidecar model: decouple application and service governance in independent processes, across-language and upgrade decouple\r* Services could be updated independently due to service decoupling\r* Canary-based grey release\r\r=== Resilience\r\r* Controller AZ resilience\r\r* Communication channel resilience\r** gRPC-based fast path\r** MQ-based normal path (support Apache Pulsar, Kafka)\r** Rescue path (skip local crashed agent and call neighbor agent to pass network configuration)\r\r=== Compatibility\r\r* Compatibility with OpenStack, Kubernetes, and OPNFV\r* Support multiple data plane implementations including Mizar (eBPF/Geneve) currently and OVS/VxLan (in design)\r** Open driver framework at Controllers\r** Plugin model at Alcor Control Agent\r\r== Inside the Big Picture\r\rplantuml::../../workflows/vm_create.puml[format=\"svg\", align=\"center\"]\r", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODAwNQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470428005", "bodyText": "This file appears to be changed unintentionally. Could you revert it back?\n\nok", "author": "Gzure", "createdAt": "2020-08-14T06:07:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNDQ0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNTc0MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470405740", "bodyText": "Recommended to change to:\nAlcor Rbac (Role based access control) is designed to be compatible with neutron Rbac.\nBoth are based on Openstack Keystone roles while Alcor Rbac is at a finer granularity level at microservices compared to Neutron at the whole service level.", "author": "xieus", "createdAt": "2020-08-14T04:38:05Z", "path": "docs/modules/ROOT/pages/high_level/rbac_design.adoc", "diffHunk": "@@ -0,0 +1,33 @@\n+= Alcor Rbac Design\n+v0.1, 2020-08-14\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Introduction\n+Alcor Rbac (Role based access control) is similar to neutron Rbac. It's base on Openstack Keystone roles.", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNjAzOQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470406039", "bodyText": "Could you give a reference link here for \"OpenStack Keystone roles\"", "author": "xieus", "createdAt": "2020-08-14T04:39:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk1NDczNA==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r471954734", "bodyText": "Could you give a reference link here for \"OpenStack Keystone roles\"\n\nOpenstack Keystone roles", "author": "Gzure", "createdAt": "2020-08-18T06:56:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyNzEzNg==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r474427136", "bodyText": "I mean adding the reference to the design doc :-)", "author": "xieus", "createdAt": "2020-08-21T06:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNTc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNjQxMg==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470406412", "bodyText": "Recommended to change to\nAlcor microservices load rbac rules at from its own rbac_policy.json file under the resource directory of each microservice.", "author": "xieus", "createdAt": "2020-08-14T04:40:54Z", "path": "docs/modules/ROOT/pages/high_level/rbac_design.adoc", "diffHunk": "@@ -0,0 +1,33 @@\n+= Alcor Rbac Design\n+v0.1, 2020-08-14\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Introduction\n+Alcor Rbac (Role based access control) is similar to neutron Rbac. It's base on Openstack Keystone roles.\n+Service will load rbac rules from rbac_policy.json file in project resources dirctory.", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwODkyNg==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470408926", "bodyText": "Pretty important interface. Could you add comments to its methods?", "author": "xieus", "createdAt": "2020-08-14T04:51:46Z", "path": "lib/src/main/java/com/futurewei/alcor/common/rbac/RbacManger.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.common.rbac;\n+\n+import com.futurewei.alcor.common.entity.TokenEntity;\n+import com.futurewei.alcor.common.exception.ParseObjectException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourceNotValidException;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface RbacManger {", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNDkzOA==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470414938", "bodyText": "What other rbacType do we plan to support?", "author": "xieus", "createdAt": "2020-08-14T05:18:00Z", "path": "lib/src/main/java/com/futurewei/alcor/common/rbac/RbacManagerConfiguration.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.common.rbac;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import java.io.IOException;\n+\n+@Configuration\n+public class RbacManagerConfiguration {\n+\n+    @Value(\"${rbac.policy.type: strict}\")\n+    private String rbacType;", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODUwNA==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470428504", "bodyText": "There are two rbacType Ignore or strict. Ignore rbac let all requestes access.", "author": "Gzure", "createdAt": "2020-08-14T06:08:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNDkzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyNjg3OQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r474426879", "bodyText": "Okay thanks. In this case, we would suggest to name the rbacType as Ignore and Enforced.", "author": "xieus", "createdAt": "2020-08-21T06:06:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNDkzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYxNTkyMA==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r474615920", "bodyText": "One more minor suggestion: rbacType should be \"ignored\" and \"enforced\".\nPlease also update the class name as well.", "author": "xieus", "createdAt": "2020-08-21T10:32:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNDkzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNTY3OQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470415679", "bodyText": "We have also a Alcor logger under common lib. do you find anything missing compared to slf4j? If not, maybe a good idea to switch to our own logger :-)", "author": "xieus", "createdAt": "2020-08-14T05:20:55Z", "path": "lib/src/main/java/com/futurewei/alcor/common/rbac/StrictRbacManager.java", "diffHunk": "@@ -0,0 +1,232 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.common.rbac;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.common.entity.*;\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.utils.ControllerUtil;\n+import com.futurewei.alcor.common.utils.JsonUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.reflect.Field;\n+import java.util.*;\n+\n+public class StrictRbacManager implements RbacManger {\n+    private static final Logger LOG = LoggerFactory.getLogger(StrictRbacManager.class);", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODY0Ng==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470428646", "bodyText": "ok", "author": "Gzure", "createdAt": "2020-08-14T06:09:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNTY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzOTQ1Nw==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r472139457", "bodyText": "We have also a Alcor logger under common lib. do you find anything missing compared to slf4j? If not, maybe a good idea to switch to our own logger :-)\n\nSlf4j is a strong log frame. All our own logger features can supported by Slf4j.", "author": "Gzure", "createdAt": "2020-08-18T12:28:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNTY3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNjA2NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470416064", "bodyText": "initServiceRbacRules", "author": "xieus", "createdAt": "2020-08-14T05:22:21Z", "path": "lib/src/main/java/com/futurewei/alcor/common/rbac/StrictRbacManager.java", "diffHunk": "@@ -0,0 +1,232 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.common.rbac;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.common.entity.*;\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.utils.ControllerUtil;\n+import com.futurewei.alcor.common.utils.JsonUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.reflect.Field;\n+import java.util.*;\n+\n+public class StrictRbacManager implements RbacManger {\n+    private static final Logger LOG = LoggerFactory.getLogger(StrictRbacManager.class);\n+\n+    private static final String DEFAULT_RBAC_FILE_PATH = \"config/rbac_policy.json\";\n+    private static final String SERVICE_RBAC_FILE_PATH = \"rbac_policy.json\";\n+\n+    private static final String ADMIN_ROLE_NAME = \"admin\";\n+    private static final String ADVSVC_ROLE_NAME = \"advsvc\";\n+\n+    private ServiceRbacRule serviceRbacRule;\n+\n+    public StrictRbacManager() throws IOException {\n+        initServiceRbacRule();\n+    }\n+\n+    private void initServiceRbacRule() throws IOException {", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNjU2OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470416568", "bodyText": "Do we plan to have some fun with RbacConfiguration? It is empty for now. :-)", "author": "xieus", "createdAt": "2020-08-14T05:24:29Z", "path": "web/src/main/java/com/futurewei/alcor/web/rbac/aspect/RbacConfiguration.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.web.rbac.aspect;\n+\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+@ComponentScan(value = {\"com.futurewei.alcor.common.rbac\", \"com.futurewei.alcor.web.rbac.aspect\"})\n+public class RbacConfiguration {\n+}", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODg4NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470428885", "bodyText": "This file is config @componentscan Only, So it have empty body.", "author": "Gzure", "createdAt": "2020-08-14T06:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNjU2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxODE3MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470418170", "bodyText": "Pretty important class. Some more comments would be helpful.", "author": "xieus", "createdAt": "2020-08-14T05:30:44Z", "path": "web/src/main/java/com/futurewei/alcor/web/rbac/aspect/RbacAspect.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.web.rbac.aspect;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.common.entity.TokenEntity;\n+import com.futurewei.alcor.common.exception.PolicyNotAuthorizedException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.rbac.RbacManger;\n+import com.futurewei.alcor.common.utils.ControllerUtil;\n+import com.futurewei.alcor.web.exception.NotAuthorizedException;\n+import com.futurewei.alcor.web.exception.NotFoundException;\n+import org.aspectj.lang.ProceedingJoinPoint;\n+import org.aspectj.lang.annotation.Around;\n+import org.aspectj.lang.annotation.Aspect;\n+import org.aspectj.lang.annotation.Pointcut;\n+import org.aspectj.lang.reflect.MethodSignature;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.bind.annotation.RequestBody;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+import java.util.*;\n+\n+import static com.futurewei.alcor.common.constants.CommonConstants.*;\n+\n+@Aspect\n+@Component\n+public class RbacAspect {", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxODQ1Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470418453", "bodyText": "Could ms be possibly NULL or guaranteed to have value?", "author": "xieus", "createdAt": "2020-08-14T05:31:47Z", "path": "web/src/main/java/com/futurewei/alcor/web/rbac/aspect/RbacAspect.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.web.rbac.aspect;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.common.entity.TokenEntity;\n+import com.futurewei.alcor.common.exception.PolicyNotAuthorizedException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.rbac.RbacManger;\n+import com.futurewei.alcor.common.utils.ControllerUtil;\n+import com.futurewei.alcor.web.exception.NotAuthorizedException;\n+import com.futurewei.alcor.web.exception.NotFoundException;\n+import org.aspectj.lang.ProceedingJoinPoint;\n+import org.aspectj.lang.annotation.Around;\n+import org.aspectj.lang.annotation.Aspect;\n+import org.aspectj.lang.annotation.Pointcut;\n+import org.aspectj.lang.reflect.MethodSignature;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.bind.annotation.RequestBody;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+import java.util.*;\n+\n+import static com.futurewei.alcor.common.constants.CommonConstants.*;\n+\n+@Aspect\n+@Component\n+public class RbacAspect {\n+    private static final Logger LOG = LoggerFactory.getLogger(RbacAspect.class);\n+\n+    private static final String POST_METHOD_NAME = \"POST\";\n+    private static final String PUT_METHDO_NAME = \"PUT\";\n+    private static final String DELETE_METHDO_NAME = \"DELETE\";\n+    private static final String GET_METHDO_NAME = \"GET\";\n+\n+    @Autowired\n+    private OwnerCheckerSupplier ownerCheckerSupplier;\n+\n+    @Autowired\n+    private HttpServletRequest request;\n+\n+    @Autowired\n+    private RbacManger rbacManger;\n+\n+    @Pointcut(\"@annotation(com.futurewei.alcor.web.rbac.aspect.Rbac)\")\n+    public void annotationPointCut(){}\n+\n+    @Around(\"annotationPointCut()\")\n+    public Object checkRbac(ProceedingJoinPoint pjp) throws Throwable {\n+\n+        String methodType = request.getMethod().toUpperCase();\n+        String tokenInfo = request.getHeader(TOKEN_INFO_HEADER);\n+        MethodSignature ms = (MethodSignature)pjp.getSignature();", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk1NzI3Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r471957273", "bodyText": "Could ms be possibly NULL or guaranteed to have value?\nMs could not be null.", "author": "Gzure", "createdAt": "2020-08-18T07:01:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxODQ1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyMTcwOQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r470421709", "bodyText": "In this design doc, I would recommend to add a few more sections\n\nMicroservices with support of Rbac (which miroservices need RBAC and why...)\nAuthorization implementation (is the validation local on a microservice or need to talk to KeyStone etc.)\nAn example rbac_policy.json and a brief explanation.", "author": "xieus", "createdAt": "2020-08-14T05:44:24Z", "path": "docs/modules/ROOT/pages/high_level/rbac_design.adoc", "diffHunk": "@@ -0,0 +1,33 @@\n+= Alcor Rbac Design\n+v0.1, 2020-08-14\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Introduction\n+Alcor Rbac (Role based access control) is similar to neutron Rbac. It's base on Openstack Keystone roles.\n+Service will load rbac rules from rbac_policy.json file in project resources dirctory.\n+\n+== Access Type\n+Alcor rbac supports a few of access type\n+\n+. admin_only -- Only admin role can access\n+. rule_any -- Every one can access\n+. admin_or_owner -- Admin role or resource owner can access\n+. multi_roles -- Only specified roles can access\n+. multi_roles_or_owner -- Only specified roles or admin can access\n+\n+== Permission Granularity\n+Alcor can support method and resource field check granularity.\n+\n+. Method -- The method granularity determines whether the user role can access the method.\n+. Resource field -- The field granularity determines whether a user role can be accessed, modified, deleted, or added\n+\n+== WorkFlow\n+Rbac check around a http request.\n+\n+. a request come\n+. rbac check method access, failed throw exception\n+. rbac check field access, failed throw exception\n+. handle request\n+. rbac check field access, failed hide the field\n+. response the request", "originalCommit": "f9078319e1f0e6244851454324e5affcfc702ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "04a0101347190c1d9f2725ed627f1302215b108d", "url": "https://github.com/futurewei-cloud/alcor/commit/04a0101347190c1d9f2725ed627f1302215b108d", "message": "add some comments", "committedDate": "2020-08-18T12:46:59Z", "type": "forcePushed"}, {"oid": "f42572cc00f8b5eadedb032c62f65a582f40b529", "url": "https://github.com/futurewei-cloud/alcor/commit/f42572cc00f8b5eadedb032c62f65a582f40b529", "message": "merge with master", "committedDate": "2020-08-20T09:43:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyNTg3Mg==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r474425872", "bodyText": "@Gzure if rule_type=admin_or_owner, why is the value of roles required to be admin? What would be the roles of the token included in our X-Token-info header field?", "author": "xieus", "createdAt": "2020-08-21T06:03:08Z", "path": "docs/modules/ROOT/pages/high_level/rbac_design.adoc", "diffHunk": "@@ -0,0 +1,227 @@\n+= Alcor Rbac Design\n+v0.1, 2020-08-14\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Introduction\n+Alcor Rbac (Role based access control) is designed to be compatible with neutron Rbac. Both are based on Openstack Keystone\n+ roles while Alcor Rbac is at a finer granularity level at microservices compared to Neutron at the whole service level.\n+Alcor microservices load rbac rules at from its own rbac_policy.json file under the resource directory of each microservice.\n+\n+== Microservices with support of Rbac\n+Alcor some common services (VPC, Subnet, Port, Security-group, Eip, eg) support resources should support Rbac. In this services\n+there are some resources operations access should control by roles.\n+\n+== Authorization implementation\n+A request come API GW service first, API GW will verify the token in http request. And API GW will add a new http header\n+'X-Token-info'. Microservice will get the token info from http header. +\n+Not all microservices apis require Rbac. We only need to add the @Rbac annotation to the APIs that need to support Rbac,\n+And set the 'resource' attribute of the @Rbac annotation. Finally, you need to introduce RbacConfiguration to the microservice entry class. +\n+Like this.\n+......\n+@EnableAsync\n+@SpringBootApplication\n+@Import({DbBaseConfiguration.class, JsonHandlerConfiguration.class, RbacConfiguration.class})\n+public class SubnetApplication {\n+\n+    public static void main(String[] args) {\n+        SpringApplication.run(SubnetApplication.class, args);\n+    }\n+\n+}\n+......\n+We only need to set these modifiers for the microservices.\n+THe RbacManager automatically completes the rest of the work.\n+\n+== Access Type\n+Alcor rbac supports a few of access type\n+\n+. admin_only -- Only admin role can access\n+. rule_any -- Every one can access\n+. admin_or_owner -- Admin role or resource owner can access\n+. multi_roles -- Only specified roles can access\n+. multi_roles_or_owner -- Only specified roles or admin can access\n+\n+== Permission Granularity\n+Alcor can support method and resource field check granularity.\n+\n+. Method -- The method granularity determines whether the user role can access the method.\n+. Resource field -- The field granularity determines whether a user role can be accessed, modified, deleted, or added\n+\n+== WorkFlow\n+Rbac check around a http request.\n+\n+. a request come\n+. rbac check method access, failed throw exception\n+. rbac check field access, failed throw exception\n+. handle request\n+. rbac check field access, failed hide the field\n+. response the request\n+\n+== rbac_policy.json example\n+....\n+{\n+  \"serviceRules\": [\n+    {\n+      \"name\": \"create_vpc\",\n+      \"method_type\": \"POST\",\n+      \"description\": \"create a vpc\",\n+      \"rule_type\": \"rule_any\",\n+      \"roles\": [],\n+      \"field_rbac_rules\": [\n+        {\n+          \"name\": \"shared\",\n+          \"description\": \"create a shared vpc\",\n+          \"rule_type\": \"admin_only\",\n+          \"roles\": [\"admin\"]\n+        },\n+        {\n+          \"name\": \"router:external\",\n+          \"description\": \"create an external vpc\",\n+          \"rule_type\": \"admin_only\",\n+          \"roles\": [\"admin\"]\n+        },\n+        {\n+          \"name\": \"is_default\",\n+          \"description\": \"Specify ''is_default'' attribute when creating a vpc\",\n+          \"rule_type\": \"admin_only\",\n+          \"roles\": [\"admin\"]\n+        },\n+        {\n+          \"name\": \"port_security_enabled\",\n+          \"description\": \"Specify ''port_security_enabled'' attribute when creating a vpc\",\n+          \"rule_type\": \"rule_any\",\n+          \"roles\": []\n+        },\n+        {\n+          \"name\": \"segments\",\n+          \"description\": \"Specify ''segments'' attribute when creating a vpc\",\n+          \"rule_type\": \"admin_only\",\n+          \"roles\": [\"admin\"]\n+        },\n+        {\n+          \"name\": \"provider:network_type\",\n+          \"description\": \"Specify ''provider:network_type'' attribute when creating a vpc\",\n+          \"rule_type\": \"admin_only\",\n+          \"roles\": [\"admin\"]\n+        },\n+        {\n+          \"name\": \"provider:physical_network\",\n+          \"description\": \"Specify ''provider:physical_network'' attribute when creating a vpc\",\n+          \"rule_type\": \"admin_only\",\n+          \"roles\": [\"admin\"]\n+        },\n+        {\n+          \"name\": \"provider:segmentation_id\",\n+          \"description\": \"Specify ''provider:segmentation_id'' attribute when creating a vpc\",\n+          \"rule_type\": \"admin_only\",\n+          \"roles\": [\"admin\"]\n+        }\n+      ]\n+    },\n+    {\n+      \"name\": \"get_vpc\",\n+      \"method_type\": \"GET\",\n+      \"description\": \"Get or list vpc\",\n+      \"rule_type\": \"admin_or_owner\",", "originalCommit": "f42572cc00f8b5eadedb032c62f65a582f40b529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzNjM5MQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r474436391", "bodyText": "@Gzure if rule_type=admin_or_owner, why is the value of roles required to be admin? What would be the roles of the token included in our X-Token-info header field?\nAdmin_or_owner rule type will ignore the roles.", "author": "Gzure", "createdAt": "2020-08-21T06:34:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyNTg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ1OTA5Nw==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r474459097", "bodyText": "Okay in this case, please keep the example as accurate as possible. maybe remove any entry in the roles array. @Gzure", "author": "xieus", "createdAt": "2020-08-21T07:16:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyNTg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ4NzIyNQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/352#discussion_r474487225", "bodyText": "Okay in this case, please keep the example as accurate as possible. maybe remove any entry in the roles array. @Gzure\n\nOkay, I will remove the roles.", "author": "Gzure", "createdAt": "2020-08-21T07:50:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyNTg3Mg=="}], "type": "inlineReview"}, {"oid": "70febdb0b2e0ac6b55214ddb58ae85fbf3bca923", "url": "https://github.com/futurewei-cloud/alcor/commit/70febdb0b2e0ac6b55214ddb58ae85fbf3bca923", "message": "merge with master", "committedDate": "2020-08-21T06:27:00Z", "type": "forcePushed"}, {"oid": "c1dd2a50b483a2924b8124d315e0b634ff64cc5d", "url": "https://github.com/futurewei-cloud/alcor/commit/c1dd2a50b483a2924b8124d315e0b634ff64cc5d", "message": "add rbac support", "committedDate": "2020-08-21T07:55:10Z", "type": "commit"}, {"oid": "4b6303fff9008dd90be8cf3c9691fe0ac01997b7", "url": "https://github.com/futurewei-cloud/alcor/commit/4b6303fff9008dd90be8cf3c9691fe0ac01997b7", "message": "add policy json files", "committedDate": "2020-08-21T07:55:10Z", "type": "commit"}, {"oid": "07e9063ead9ecc48965cca064b488d2600a4a3d3", "url": "https://github.com/futurewei-cloud/alcor/commit/07e9063ead9ecc48965cca064b488d2600a4a3d3", "message": "add rbac in config file", "committedDate": "2020-08-21T07:55:10Z", "type": "commit"}, {"oid": "9266a8ece0d73b071d63771b74085fe3a223da24", "url": "https://github.com/futurewei-cloud/alcor/commit/9266a8ece0d73b071d63771b74085fe3a223da24", "message": "add rbac in config file", "committedDate": "2020-08-21T07:55:10Z", "type": "commit"}, {"oid": "8f3410719b6c5f114a058c9f8f8b3eeb1900347b", "url": "https://github.com/futurewei-cloud/alcor/commit/8f3410719b6c5f114a058c9f8f8b3eeb1900347b", "message": "add some new exceptions", "committedDate": "2020-08-21T07:55:10Z", "type": "commit"}, {"oid": "2f0da9487a4bd3b686d95ecbd7f18264a0e2819a", "url": "https://github.com/futurewei-cloud/alcor/commit/2f0da9487a4bd3b686d95ecbd7f18264a0e2819a", "message": "change isAdmin impl", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "22ac6646216cc132d6250e74cf9ab26ebf306b63", "url": "https://github.com/futurewei-cloud/alcor/commit/22ac6646216cc132d6250e74cf9ab26ebf306b63", "message": "add request attr null handle", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "f83cbfea3bf10225a1976b5807413227b89aff66", "url": "https://github.com/futurewei-cloud/alcor/commit/f83cbfea3bf10225a1976b5807413227b89aff66", "message": "fix a spell error", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "ba6a3baf8db614467693922abf9f0296d37266a0", "url": "https://github.com/futurewei-cloud/alcor/commit/ba6a3baf8db614467693922abf9f0296d37266a0", "message": "add rbac_design.adoc", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "5e2c9d2f6726ffdd37335e62393472b90206e5aa", "url": "https://github.com/futurewei-cloud/alcor/commit/5e2c9d2f6726ffdd37335e62393472b90206e5aa", "message": "add more details in rbac_design.adoc", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "32120afb7697cb97b30d4543b4a7e0789f896ed9", "url": "https://github.com/futurewei-cloud/alcor/commit/32120afb7697cb97b30d4543b4a7e0789f896ed9", "message": "add some comments", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "6ffbc105106a7e5b5cef3e3bdafac0c384add1b6", "url": "https://github.com/futurewei-cloud/alcor/commit/6ffbc105106a7e5b5cef3e3bdafac0c384add1b6", "message": "add RbacManager UT", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "24e229b19cb017d31fff2c332f7e21d1d2c2ff4b", "url": "https://github.com/futurewei-cloud/alcor/commit/24e229b19cb017d31fff2c332f7e21d1d2c2ff4b", "message": "add RbacManager UT", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "6916746d5b3478421041f3a355a4bc9499489abc", "url": "https://github.com/futurewei-cloud/alcor/commit/6916746d5b3478421041f3a355a4bc9499489abc", "message": "merge with master", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "1e6a68171a09bdae1744dea5d7c9086ba6ed9ae1", "url": "https://github.com/futurewei-cloud/alcor/commit/1e6a68171a09bdae1744dea5d7c9086ba6ed9ae1", "message": "rename strict to Enforced", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "a438008e7a39c5ced222da74d245aa113d7a0679", "url": "https://github.com/futurewei-cloud/alcor/commit/a438008e7a39c5ced222da74d245aa113d7a0679", "message": "remove admin_or_owner roles", "committedDate": "2020-08-21T07:55:11Z", "type": "commit"}, {"oid": "a438008e7a39c5ced222da74d245aa113d7a0679", "url": "https://github.com/futurewei-cloud/alcor/commit/a438008e7a39c5ced222da74d245aa113d7a0679", "message": "remove admin_or_owner roles", "committedDate": "2020-08-21T07:55:11Z", "type": "forcePushed"}]}