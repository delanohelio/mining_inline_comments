{"pr_number": 580, "pr_title": "XRDDEV-1179 Add clients and service clients sorting", "pr_createdAt": "2020-07-06T13:49:09Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/580", "timeline": [{"oid": "e8f6b4fece7a546d04d0885a7a8cdf6ec6e00eb8", "url": "https://github.com/nordic-institute/X-Road/commit/e8f6b4fece7a546d04d0885a7a8cdf6ec6e00eb8", "message": "XRDDEV-1179 Add sorting clients and service clients sorting\n\n- Sort clients by name (primary) and client id (secondary).\n- Sort service clients by name / group description (primary) and id (secondary).\n- Update unit tests.", "committedDate": "2020-07-06T13:47:55Z", "type": "commit"}, {"oid": "2b58df88dcaf26ffc0f28af76127999233f5cd47", "url": "https://github.com/nordic-institute/X-Road/commit/2b58df88dcaf26ffc0f28af76127999233f5cd47", "message": "XRDDEV-1179 Fix failing test", "committedDate": "2020-07-06T14:48:46Z", "type": "commit"}, {"oid": "fddea15b1321ae408427e319a8ae25146dad43b7", "url": "https://github.com/nordic-institute/X-Road/commit/fddea15b1321ae408427e319a8ae25146dad43b7", "message": "XRDDEV-1179 Fix checkstyle error", "committedDate": "2020-07-06T15:28:57Z", "type": "commit"}, {"oid": "8be464f01bf35bd44390e2405fe16c4e78a07957", "url": "https://github.com/nordic-institute/X-Road/commit/8be464f01bf35bd44390e2405fe16c4e78a07957", "message": "XRDDEV-1179 Fix Sonarqube findings", "committedDate": "2020-07-06T17:15:01Z", "type": "commit"}, {"oid": "7655aaa306110c89e7ee9d43664eb26ca3f08d5f", "url": "https://github.com/nordic-institute/X-Road/commit/7655aaa306110c89e7ee9d43664eb26ca3f08d5f", "message": "XRDDEV-1179 Remove unused imports", "committedDate": "2020-07-07T01:09:40Z", "type": "commit"}, {"oid": "39c23aea3880b7ef9c38c8af30bacc3a864b3cad", "url": "https://github.com/nordic-institute/X-Road/commit/39c23aea3880b7ef9c38c8af30bacc3a864b3cad", "message": "XRDDEV-1179 Make comparison in lower case letters", "committedDate": "2020-07-07T04:45:57Z", "type": "commit"}, {"oid": "9f61d4581009dfae6a4de98d0abe927dfadf4cc0", "url": "https://github.com/nordic-institute/X-Road/commit/9f61d4581009dfae6a4de98d0abe927dfadf4cc0", "message": "XRDDEV-1179 Update tests", "committedDate": "2020-07-07T04:52:09Z", "type": "commit"}, {"oid": "8926c9f8906716e21d9b803a757927ea527bae18", "url": "https://github.com/nordic-institute/X-Road/commit/8926c9f8906716e21d9b803a757927ea527bae18", "message": "XRDDEV-1179 Add sorting to Client -> Local groups\n\n- Add backend implementation.\n- Update frontend implementation.", "committedDate": "2020-07-08T08:18:50Z", "type": "commit"}, {"oid": "80e9faadf8eaec101f6daa6a10d552ab0ff934f4", "url": "https://github.com/nordic-institute/X-Road/commit/80e9faadf8eaec101f6daa6a10d552ab0ff934f4", "message": "XRDDEV-1179 Refactor clients and service clients sorting", "committedDate": "2020-07-08T08:29:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNDMxNg==", "url": "https://github.com/nordic-institute/X-Road/pull/580#discussion_r454124316", "bodyText": "Instead of this concrete list-sorting method (and ClientUtils.sortClientsList) a Comparator implementing the comparison logic would be more reusable (can sort arrays, sorted sets etc), and maybe even a bit cleaner design. Both Comparators could then be in same package (probably org.niis.xroad.restapi.controller or org.niis.xroad.restapi.openapi - or maybe even a new org.niis.xroad.restapi.converter.comparator to signal this is part of the \"converting\" domain...) and so be more consistent with each other and \"discoverable\".\nFor the actual implementation, there's also alternatives https://stackoverflow.com/a/20093642/1469083 such as\n\nusing Comparator.comparing+thenComparing+nullsFirst builders (end result may be cleaner or messier)\nusing Guava or Apache commons helpers\n\nAlthough the actual implementation is pretty simple so I don't know if alternative ways are worth it.", "author": "jansu76", "createdAt": "2020-07-14T06:10:49Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/controller/ServiceClientHelper.java", "diffHunk": "@@ -104,4 +105,27 @@ public BadRequestException wrapInBadRequestException(\n         return new BadRequestException(INVALID_SERVICE_CLIENT_ID + e.getServiceClientIdentifier(),\n                 new ErrorDeviation(ERROR_INVALID_SERVICE_CLIENT_ID));\n     }\n+\n+    /**\n+     * Sort a list of ServiceClient objects using member name / group description as the primary sort key, and client id\n+     * as the secondary sort key.\n+     * @param clients\n+     */\n+    public void sortServiceClientsList(List<ServiceClient> clients) {", "originalCommit": "80e9faadf8eaec101f6daa6a10d552ab0ff934f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MzEyNA==", "url": "https://github.com/nordic-institute/X-Road/pull/580#discussion_r454293124", "bodyText": "Created a new package org.niis.xroad.restapi.converter.comparator and added both comparators implementing the Comparator interface under it. In this way they are more discoverable. However, the implementation was left as it was before.", "author": "petkivim", "createdAt": "2020-07-14T11:37:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNDMxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNjcxMg==", "url": "https://github.com/nordic-institute/X-Road/pull/580#discussion_r454126712", "bodyText": "I would add some tests to verify just the ordering (without any controllers, services, etc) and the logic for different null / not null cases etc.\nIn fact, I would usually start with the test and then write the implementation, I find that the easiest way to reach correct result in details like \"should null here be +1 or -1...?\". Especially since the test should be easy to implement (building a few ServiceClient objects with wanted name & id fields, and the test could be a pure (fast) unit test for Comparators without any Spring constructs).", "author": "jansu76", "createdAt": "2020-07-14T06:17:05Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/controller/ServiceClientHelper.java", "diffHunk": "@@ -104,4 +105,27 @@ public BadRequestException wrapInBadRequestException(\n         return new BadRequestException(INVALID_SERVICE_CLIENT_ID + e.getServiceClientIdentifier(),\n                 new ErrorDeviation(ERROR_INVALID_SERVICE_CLIENT_ID));\n     }\n+\n+    /**\n+     * Sort a list of ServiceClient objects using member name / group description as the primary sort key, and client id\n+     * as the secondary sort key.\n+     * @param clients\n+     */\n+    public void sortServiceClientsList(List<ServiceClient> clients) {\n+        clients.sort((c1, c2) -> {\n+                if (c1.getName() == null && c2.getName() == null) {\n+                    return c1.getId().compareToIgnoreCase(c2.getId());", "originalCommit": "80e9faadf8eaec101f6daa6a10d552ab0ff934f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MzkzOQ==", "url": "https://github.com/nordic-institute/X-Road/pull/580#discussion_r454293939", "bodyText": "Added tests for both comparators that verify the comparison logic.", "author": "petkivim", "createdAt": "2020-07-14T11:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNjcxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzMzMxNw==", "url": "https://github.com/nordic-institute/X-Road/pull/580#discussion_r454133317", "bodyText": "I am happy to see that sorting is a separate feature, and not e.g. included in ServiceClientConverter.convertServiceClientDtos. I think it keeps the role of converters more clear and retains the possibility of only converting without changing the order.", "author": "jansu76", "createdAt": "2020-07-14T06:34:04Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/controller/ServiceClientHelper.java", "diffHunk": "@@ -104,4 +105,27 @@ public BadRequestException wrapInBadRequestException(\n         return new BadRequestException(INVALID_SERVICE_CLIENT_ID + e.getServiceClientIdentifier(),\n                 new ErrorDeviation(ERROR_INVALID_SERVICE_CLIENT_ID));\n     }\n+\n+    /**\n+     * Sort a list of ServiceClient objects using member name / group description as the primary sort key, and client id\n+     * as the secondary sort key.\n+     * @param clients\n+     */\n+    public void sortServiceClientsList(List<ServiceClient> clients) {\n+        clients.sort((c1, c2) -> {", "originalCommit": "80e9faadf8eaec101f6daa6a10d552ab0ff934f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0MDM3NQ==", "url": "https://github.com/nordic-institute/X-Road/pull/580#discussion_r454140375", "bodyText": "There are some APIs that return unsorted service client collections:\n\nEndpointsApiController.addEndpointServiceClients (response from adding a new service client to an endpoint)\nServicesApiController.addServiceServiceClients (same for a service)\n\nThat's probably OK, although could consider adding the sort to them also, for consistency.", "author": "jansu76", "createdAt": "2020-07-14T06:50:38Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/EndpointsApiController.java", "diffHunk": "@@ -156,6 +156,7 @@ public EndpointsApiController(\n         }\n         List<ServiceClient> serviceClients = serviceClientConverter", "originalCommit": "80e9faadf8eaec101f6daa6a10d552ab0ff934f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5NDc1Nw==", "url": "https://github.com/nordic-institute/X-Road/pull/580#discussion_r454294757", "bodyText": "Thanks, I added sorting to those endpoints too. I think it's good to try to keep the ordering consistent between different endpoints.", "author": "petkivim", "createdAt": "2020-07-14T11:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0MDM3NQ=="}], "type": "inlineReview"}, {"oid": "2ef2ebc1e91d252659a3acf08efac9235852369d", "url": "https://github.com/nordic-institute/X-Road/commit/2ef2ebc1e91d252659a3acf08efac9235852369d", "message": "XRDDEV-1179 Refactor implementation based on review comments\n\n- Implement comparator classes instead of helper methods.\n- Add unit tests.", "committedDate": "2020-07-14T10:42:58Z", "type": "commit"}, {"oid": "49d93454d758ae03bc28428de8e6d71241bac612", "url": "https://github.com/nordic-institute/X-Road/commit/49d93454d758ae03bc28428de8e6d71241bac612", "message": "XRDDEV-1179 Add sorting to two endpoints", "committedDate": "2020-07-14T10:56:20Z", "type": "commit"}, {"oid": "f379ee0a0b90f66c195277c532015878d86bd512", "url": "https://github.com/nordic-institute/X-Road/commit/f379ee0a0b90f66c195277c532015878d86bd512", "message": "XRDDEV-1179 Use class variables instead of creating new comparator object every time", "committedDate": "2020-07-14T11:34:11Z", "type": "commit"}, {"oid": "91222c952f3837ad3257f8df5db89b470733ff39", "url": "https://github.com/nordic-institute/X-Road/commit/91222c952f3837ad3257f8df5db89b470733ff39", "message": "XRDDEV-1179 Update initializing the comparators in controllers", "committedDate": "2020-07-14T11:58:02Z", "type": "commit"}, {"oid": "73a61a879f1a58e520192ff41a663a58c5212f6d", "url": "https://github.com/nordic-institute/X-Road/commit/73a61a879f1a58e520192ff41a663a58c5212f6d", "message": "Merge branch 'develop' into XRDDEV-1179", "committedDate": "2020-07-14T13:58:33Z", "type": "commit"}]}