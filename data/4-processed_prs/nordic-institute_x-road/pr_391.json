{"pr_number": 391, "pr_title": "Xrddev 875 localgroups members e2etests", "pr_createdAt": "2020-02-26T15:00:41Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/391", "timeline": [{"oid": "f494aeafa2397b6b76787bb55603f88f9ecdce11", "url": "https://github.com/nordic-institute/X-Road/commit/f494aeafa2397b6b76787bb55603f88f9ecdce11", "message": "XRDDEV-459 clientslist e2e tests\n\nAdd e2e test for security server clients list.", "committedDate": "2019-12-17T11:01:23Z", "type": "commit"}, {"oid": "23cea51577a7f27d59d26cb73347787d00a3e54c", "url": "https://github.com/nordic-institute/X-Road/commit/23cea51577a7f27d59d26cb73347787d00a3e54c", "message": "XRDDEV-459 clientslist e2e tests\n\nChange to chrome style sorting, add more test data", "committedDate": "2019-12-27T14:15:55Z", "type": "commit"}, {"oid": "ce273ff209c1b6e793b9490722cfb8e7b814ab7f", "url": "https://github.com/nordic-institute/X-Road/commit/ce273ff209c1b6e793b9490722cfb8e7b814ab7f", "message": "XRDDEV-459 clientslist e2e tests\n\nChange test data", "committedDate": "2019-12-27T15:11:29Z", "type": "commit"}, {"oid": "cae260d780b63a1a40190f02cf82605467a2f376", "url": "https://github.com/nordic-institute/X-Road/commit/cae260d780b63a1a40190f02cf82605467a2f376", "message": "XRDDEV-460 client details e2e tests\n\nAdd test for client details and update page object", "committedDate": "2020-01-09T05:31:24Z", "type": "commit"}, {"oid": "876415efe6bbd4db1aa19737ed56f1ecde3dda0d", "url": "https://github.com/nordic-institute/X-Road/commit/876415efe6bbd4db1aa19737ed56f1ecde3dda0d", "message": "XRDDEV-327 logout e2e tests\n\nAdd test for logout and timed logout, update page object and global settings", "committedDate": "2020-01-10T17:39:40Z", "type": "commit"}, {"oid": "1b6bf459bfae7a8d9875ca377c8a6bf41857185a", "url": "https://github.com/nordic-institute/X-Road/commit/1b6bf459bfae7a8d9875ca377c8a6bf41857185a", "message": "XRDDEV-841 client local groups filtering e2e tests\n\nAdd e2e test for filtering client local groups\nChange default selector to xpath\nMove clearValue2 to common library", "committedDate": "2020-01-28T17:19:04Z", "type": "commit"}, {"oid": "9b946bcec8b809744e86286a3c595ebdcc57a086", "url": "https://github.com/nordic-institute/X-Road/commit/9b946bcec8b809744e86286a3c595ebdcc57a086", "message": "XRDDEV-841 client local groups filtering e2e tests\n\nFixed json error", "committedDate": "2020-01-29T12:00:14Z", "type": "commit"}, {"oid": "17bb3ead55222c674cde508dd95bd32e982ee63f", "url": "https://github.com/nordic-institute/X-Road/commit/17bb3ead55222c674cde508dd95bd32e982ee63f", "message": "XRDDEV-842 client local groups add new group e2e tests\n\nAdd new e2e tests for add  local group dialog\nChange to use data-test attributes\nFix to client details certificate UI change", "committedDate": "2020-02-03T14:40:20Z", "type": "commit"}, {"oid": "30f1249ade9d99fddf7883493d75d39781c82e02", "url": "https://github.com/nordic-institute/X-Road/commit/30f1249ade9d99fddf7883493d75d39781c82e02", "message": "XRDDEV-842 local group add new group e2e tests\n\nFix chromedriver version and settings.", "committedDate": "2020-02-20T07:19:08Z", "type": "commit"}, {"oid": "560a1d56af7be43bf2c3c8650fb96229414e5c61", "url": "https://github.com/nordic-institute/X-Road/commit/560a1d56af7be43bf2c3c8650fb96229414e5c61", "message": "XRDDEV-842 local group add new group e2e tests\n\nFix logout test.", "committedDate": "2020-02-20T07:45:49Z", "type": "commit"}, {"oid": "70a1fc117562a732ae70f87f29ddfa8a6dee1799", "url": "https://github.com/nordic-institute/X-Road/commit/70a1fc117562a732ae70f87f29ddfa8a6dee1799", "message": "XRDDEV-875 clients localgroup members e2e tests\n\nAdd localgroup member e2e tests", "committedDate": "2020-02-26T13:46:26Z", "type": "commit"}, {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23", "url": "https://github.com/nordic-institute/X-Road/commit/f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23", "message": "Merge branch 'XRDDEV-842-localgroups-add-e2etests' into XRDDEV-875-localgroups-members-e2etests", "committedDate": "2020-02-26T14:04:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3ODMzMA==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386878330", "bodyText": "This kind of bootstrapping repeats a lot, could this be implemented as e.g. a helper method?", "author": "jansu76", "createdAt": "2020-03-03T09:02:05Z", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+", "originalCommit": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODEyNQ==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198125", "bodyText": "Implemented", "author": "olliru", "createdAt": "2020-03-18T09:11:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3ODMzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MDkzMA==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386880930", "bodyText": "Would maybe be beneficial to test corner case: 255 characters long description can be saved. Even though acceptance criteria does not require it.", "author": "jansu76", "createdAt": "2020-03-03T09:06:56Z", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));", "originalCommit": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODMxNg==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198316", "bodyText": "Implemented", "author": "olliru", "createdAt": "2020-03-18T09:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MDkzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTUwMA==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386881500", "bodyText": "Maybe even this part, also?", "author": "jansu76", "createdAt": "2020-03-03T09:08:06Z", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);", "originalCommit": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5OTc2NQ==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394199765", "bodyText": "The way how tests navigate to the actual target area of the SUT is going to be changed when the page model is refactored, so I'm not changing it at this time.", "author": "olliru", "createdAt": "2020-03-18T09:13:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTUwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MzE4MQ==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386883181", "bodyText": "This cancels local group removal, not local group member removal, right? Should the name be different?", "author": "jansu76", "createdAt": "2020-03-03T09:11:13Z", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');;\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription('GroupChanged');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Description saved');\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"GroupChanged\")]]')\n+    browser.end();\n+\n+  },\n+  'Security server delete local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Delete and cancel\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.cancelMemberRemove();", "originalCommit": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODQ2OQ==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198469", "bodyText": "Implemented", "author": "olliru", "createdAt": "2020-03-18T09:11:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MzE4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MzYwNw==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386883607", "bodyText": "This confirms local group removal, not local group member removal, right? Should the name be different?", "author": "jansu76", "createdAt": "2020-03-03T09:11:56Z", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');;\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription('GroupChanged');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Description saved');\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"GroupChanged\")]]')\n+    browser.end();\n+\n+  },\n+  'Security server delete local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Delete and cancel\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');   \n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")]]')\n+\n+    // Delete and confirm\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.confirmMemberRemove();  ", "originalCommit": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODU2Nw==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198567", "bodyText": "Implemented", "author": "olliru", "createdAt": "2020-03-18T09:12:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MzYwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4NDM4MQ==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386884381", "bodyText": "Should this test that the removed local group was successfully removed, ie. does not exist in the list anymore?", "author": "jansu76", "createdAt": "2020-03-03T09:13:20Z", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');;\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription('GroupChanged');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Description saved');\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"GroupChanged\")]]')\n+    browser.end();\n+\n+  },\n+  'Security server delete local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Delete and cancel\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');   \n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")]]')\n+\n+    // Delete and confirm\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.confirmMemberRemove();  \n+    browser.waitForElementVisible(clientLocalGroups); ", "originalCommit": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODY2Nw==", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198667", "bodyText": "Implemented", "author": "olliru", "createdAt": "2020-03-18T09:12:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4NDM4MQ=="}], "type": "inlineReview"}, {"oid": "e17a2c58d985e3d3cdc16bbc5ad51f90ef8da184", "url": "https://github.com/nordic-institute/X-Road/commit/e17a2c58d985e3d3cdc16bbc5ad51f90ef8da184", "message": "XRDDEV-875 localgroup members e2etests\n\nImplement review changes", "committedDate": "2020-03-17T07:52:22Z", "type": "commit"}, {"oid": "299353798960056e204fa52ba3be8f6c5f8c3a26", "url": "https://github.com/nordic-institute/X-Road/commit/299353798960056e204fa52ba3be8f6c5f8c3a26", "message": "Merge branch 'develop' into XRDDEV-875-localgroups-members-e2etests", "committedDate": "2020-03-17T19:14:59Z", "type": "commit"}, {"oid": "efad5abe15980c8a49cf2a1522ad10ec55c091de", "url": "https://github.com/nordic-institute/X-Road/commit/efad5abe15980c8a49cf2a1522ad10ec55c091de", "message": "Merge branch 'develop' into XRDDEV-875-localgroups-members-e2etests", "committedDate": "2020-03-18T16:14:54Z", "type": "commit"}, {"oid": "32872e95d46817fb3884e6bbe41f180b7b885053", "url": "https://github.com/nordic-institute/X-Road/commit/32872e95d46817fb3884e6bbe41f180b7b885053", "message": "Merge branch 'develop' into XRDDEV-875-localgroups-members-e2etests", "committedDate": "2020-03-23T14:18:33Z", "type": "commit"}]}