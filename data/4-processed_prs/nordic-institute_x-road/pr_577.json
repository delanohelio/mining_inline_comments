{"pr_number": 577, "pr_title": "XRDDEV-1172 WSDL request size limit bug", "pr_createdAt": "2020-07-02T13:22:32Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/577", "timeline": [{"oid": "4490cfba10d16f71cc741089d3bddbe69b96f748", "url": "https://github.com/nordic-institute/X-Road/commit/4490cfba10d16f71cc741089d3bddbe69b96f748", "message": "XRDDEV-1172 Set a 10MB size limit for a WSDL document", "committedDate": "2020-07-02T11:07:31Z", "type": "commit"}, {"oid": "3d2ee9417ccfb7c58453302a3fcf94681e8d20a4", "url": "https://github.com/nordic-institute/X-Road/commit/3d2ee9417ccfb7c58453302a3fcf94681e8d20a4", "message": "XRDDEV-1172 WSDL size error cause to detail message", "committedDate": "2020-07-02T12:12:25Z", "type": "commit"}, {"oid": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1", "url": "https://github.com/nordic-institute/X-Road/commit/40ece9e3adbafe6317e488c5dac0e9f17e1719b1", "message": "Merge branch 'develop' into XRDDEV-1172-wsdl-request-size-limit-bug", "committedDate": "2020-07-03T05:56:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwNjgyNA==", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r450806824", "bodyText": "It would be a bit more efficient to avoid creating the potentially large String if logging is not set at trace level. Suggestion: surround with if ( log.isTraceEnabled() ) ....", "author": "jhyoty", "createdAt": "2020-07-07T11:52:27Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "diffHunk": "@@ -282,22 +288,35 @@ public ServiceInfo(String name, String title, String url,\n             this.wsdlUrl = wsdlUrl;\n         }\n \n+        // cannot change the method signature when overriding so we need to sneakily throw the WsdlParseException\n+        @SneakyThrows(WsdlParseException.class)\n         @Override\n         public InputSource getBaseInputSource() {\n-            try {\n+            try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {\n                 URLConnection conn = new URL(wsdlUrl).openConnection();\n                 if (conn instanceof HttpsURLConnection) {\n                     configureHttps((HttpsURLConnection) conn);\n                 }\n \n-                // cache the response\n-                byte[] response;\n                 try (InputStream in = conn.getInputStream()) {\n-                    response = IOUtils.toByteArray(in);\n+                    long count = 0;\n+                    int n;\n+                    byte[] buf = new byte[BUF_SIZE];\n+                    while ((n = in.read(buf)) != -1) {\n+                        count += n;\n+                        if (count > MAX_DESCRIPTION_SIZE) {\n+                            throw new WsdlParseException(\n+                                    \"Error reading WSDL: Size exceeds \" + MAX_DESCRIPTION_SIZE + \" bytes.\");\n+                        }\n+                        byteArrayOutputStream.write(buf, 0, n);\n+                    }\n                 }\n+                byte[] response = byteArrayOutputStream.toByteArray();\n                 log.trace(\"Received WSDL response: {}\", new String(response));", "originalCommit": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzODQ4OQ==", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r451338489", "bodyText": "Added the suggested if clause", "author": "carohauta", "createdAt": "2020-07-08T07:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwNjgyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwNzgzMw==", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r450807833", "bodyText": "Instead of WsdlParseException, one could use e.g. UncheckedIOException (and avoid using SneakyThrows).  It seems that most exceptions are anyway converted to WsdlParseExceptions on a higher level.", "author": "jhyoty", "createdAt": "2020-07-07T11:54:27Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "diffHunk": "@@ -282,22 +288,35 @@ public ServiceInfo(String name, String title, String url,\n             this.wsdlUrl = wsdlUrl;\n         }\n \n+        // cannot change the method signature when overriding so we need to sneakily throw the WsdlParseException\n+        @SneakyThrows(WsdlParseException.class)\n         @Override\n         public InputSource getBaseInputSource() {\n-            try {\n+            try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {\n                 URLConnection conn = new URL(wsdlUrl).openConnection();\n                 if (conn instanceof HttpsURLConnection) {\n                     configureHttps((HttpsURLConnection) conn);\n                 }\n \n-                // cache the response\n-                byte[] response;\n                 try (InputStream in = conn.getInputStream()) {\n-                    response = IOUtils.toByteArray(in);\n+                    long count = 0;\n+                    int n;\n+                    byte[] buf = new byte[BUF_SIZE];\n+                    while ((n = in.read(buf)) != -1) {\n+                        count += n;\n+                        if (count > MAX_DESCRIPTION_SIZE) {\n+                            throw new WsdlParseException(", "originalCommit": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzOTU4MQ==", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r451339581", "bodyText": "Changed to UncheckedIOException", "author": "carohauta", "createdAt": "2020-07-08T07:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwNzgzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxMTY5OQ==", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r450811699", "bodyText": "This catches also java.lang.Errors, which should not be normally done. Should be narrowed to the actual possible checked exception types or at least \"Exception\".", "author": "jhyoty", "createdAt": "2020-07-07T12:01:51Z", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "diffHunk": "@@ -282,22 +288,35 @@ public ServiceInfo(String name, String title, String url,\n             this.wsdlUrl = wsdlUrl;\n         }\n \n+        // cannot change the method signature when overriding so we need to sneakily throw the WsdlParseException\n+        @SneakyThrows(WsdlParseException.class)\n         @Override\n         public InputSource getBaseInputSource() {\n-            try {\n+            try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {\n                 URLConnection conn = new URL(wsdlUrl).openConnection();\n                 if (conn instanceof HttpsURLConnection) {\n                     configureHttps((HttpsURLConnection) conn);\n                 }\n \n-                // cache the response\n-                byte[] response;\n                 try (InputStream in = conn.getInputStream()) {\n-                    response = IOUtils.toByteArray(in);\n+                    long count = 0;\n+                    int n;\n+                    byte[] buf = new byte[BUF_SIZE];\n+                    while ((n = in.read(buf)) != -1) {\n+                        count += n;\n+                        if (count > MAX_DESCRIPTION_SIZE) {\n+                            throw new WsdlParseException(\n+                                    \"Error reading WSDL: Size exceeds \" + MAX_DESCRIPTION_SIZE + \" bytes.\");\n+                        }\n+                        byteArrayOutputStream.write(buf, 0, n);\n+                    }\n                 }\n+                byte[] response = byteArrayOutputStream.toByteArray();\n                 log.trace(\"Received WSDL response: {}\", new String(response));\n \n                 return new InputSource(new ByteArrayInputStream(response));\n+            } catch (WsdlParseException e) {\n+                throw e;\n             } catch (Throwable t) {", "originalCommit": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzOTg4NQ==", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r451339885", "bodyText": "Updated to catch Exceptions", "author": "carohauta", "createdAt": "2020-07-08T07:31:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxMTY5OQ=="}], "type": "inlineReview"}, {"oid": "845d074ffaac13a35572a2374e3619695b0fd13a", "url": "https://github.com/nordic-institute/X-Road/commit/845d074ffaac13a35572a2374e3619695b0fd13a", "message": "XRDDEV-1172 Update exception handling // PR fix 1", "committedDate": "2020-07-08T07:27:17Z", "type": "commit"}]}