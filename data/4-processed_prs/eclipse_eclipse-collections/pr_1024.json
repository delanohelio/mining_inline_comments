{"pr_number": 1024, "pr_title": "Optimize containsAll on primitive iterables.", "pr_createdAt": "2020-10-25T16:56:28Z", "pr_url": "https://github.com/eclipse/eclipse-collections/pull/1024", "timeline": [{"oid": "24a41dc0dec2fa50be86bc65178cf41547f89a94", "url": "https://github.com/eclipse/eclipse-collections/commit/24a41dc0dec2fa50be86bc65178cf41547f89a94", "message": "Optimize containsAll on primitive iterables.\n\nSigned-off-by: Rinat Gatyatullin <rinattalgatovich.gatyatullin@bnymellon.com>", "committedDate": "2020-10-29T01:52:37Z", "type": "commit"}, {"oid": "24a41dc0dec2fa50be86bc65178cf41547f89a94", "url": "https://github.com/eclipse/eclipse-collections/commit/24a41dc0dec2fa50be86bc65178cf41547f89a94", "message": "Optimize containsAll on primitive iterables.\n\nSigned-off-by: Rinat Gatyatullin <rinattalgatovich.gatyatullin@bnymellon.com>", "committedDate": "2020-10-29T01:52:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg4OTQwMg==", "url": "https://github.com/eclipse/eclipse-collections/pull/1024#discussion_r513889402", "bodyText": "This could be simplified, with a small cost. It might be worth the tradeoff for code savings. What do you think @mohrezaei ?\ndefault boolean containsAll(<type>... source)\n{\n    return this.containsAll(new <name>ArrayList(source));\n}", "author": "donraab", "createdAt": "2020-10-29T02:32:16Z", "path": "eclipse-collections-code-generator/src/main/resources/api/primitiveIterable.stg", "diffHunk": "@@ -79,16 +80,52 @@ public interface <name>Iterable extends PrimitiveIterable\n     boolean contains(<type> value);\n \n     /**\n-     * Returns true if the all of the values specified in the source array are contained\n+     * Returns true if all of the values specified in the source array are contained\n      * in the <name>Iterable, and false if they are not.\n      */\n-    boolean containsAll(<type>... source);\n+    default boolean containsAll(<type>... source)\n+    {\n+        if (this.size() \\<= 32 || source.length \\< 4)", "originalCommit": "24a41dc0dec2fa50be86bc65178cf41547f89a94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NDg3Ng==", "url": "https://github.com/eclipse/eclipse-collections/pull/1024#discussion_r513894876", "bodyText": "That's not a good tradeoff for small arrays. I'd rather keep the code as is.", "author": "mohrezaei", "createdAt": "2020-10-29T02:42:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg4OTQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5NzM1OQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/1024#discussion_r513897359", "bodyText": "This is one of those places where having primitive array utility classes with some basic patterns would have helped. Something for another day perhaps. Please feel free to merge.", "author": "donraab", "createdAt": "2020-10-29T02:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg4OTQwMg=="}], "type": "inlineReview"}]}