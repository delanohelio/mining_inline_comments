{"pr_number": 891, "pr_title": "Closes #890: Implements Null Safe Comparators by Function", "pr_createdAt": "2020-05-20T18:36:16Z", "pr_url": "https://github.com/eclipse/eclipse-collections/pull/891", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI0NzUzOA==", "url": "https://github.com/eclipse/eclipse-collections/pull/891#discussion_r428247538", "bodyText": "Why not just use Assert.assertEqual()?", "author": "donraab", "createdAt": "2020-05-20T19:10:02Z", "path": "unit-tests/src/test/java/org/eclipse/collections/impl/block/factory/ComparatorsTest.java", "diffHunk": "@@ -196,6 +197,44 @@ public void fromFunctions()\n         Verify.assertZero(personComparator.compare(raab, raab));\n     }\n \n+    @Test\n+    public void fromFunctionsSafeNullsHigh()\n+    {\n+        Person bob = new Person(\"Bob\", null, 0);\n+        Person dan = new Person(\"Dan\", \"Witwicky\", 0);\n+        Person alice = new Person(\"Alice\", \"Liddell\", 0);\n+        Person carol = new Person(\"Carol\", null, 0);\n+\n+        Comparator<Person> personComparator = Comparators.byFunctionNullsLast(Person::getLastName);\n+        Verify.assertNegative(personComparator.compare(alice, bob));\n+        Verify.assertPositive(personComparator.compare(carol, alice));\n+        Verify.assertNegative(personComparator.compare(alice, dan));\n+        Verify.assertZero(personComparator.compare(bob, carol));\n+\n+        MutableList<Person> people = Lists.mutable.of(bob, dan, carol, alice);\n+        people.sortThis(personComparator);\n+        Verify.assertIterablesEqual(Lists.immutable.of(alice, dan, bob, carol), people);", "originalCommit": "d8fb82c57a3ece3798a4097450f9450bd6c8b96c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI0NzgyOA==", "url": "https://github.com/eclipse/eclipse-collections/pull/891#discussion_r428247828", "bodyText": "Just use Assert.assertEqual().", "author": "donraab", "createdAt": "2020-05-20T19:10:34Z", "path": "unit-tests/src/test/java/org/eclipse/collections/impl/block/factory/ComparatorsTest.java", "diffHunk": "@@ -196,6 +197,44 @@ public void fromFunctions()\n         Verify.assertZero(personComparator.compare(raab, raab));\n     }\n \n+    @Test\n+    public void fromFunctionsSafeNullsHigh()\n+    {\n+        Person bob = new Person(\"Bob\", null, 0);\n+        Person dan = new Person(\"Dan\", \"Witwicky\", 0);\n+        Person alice = new Person(\"Alice\", \"Liddell\", 0);\n+        Person carol = new Person(\"Carol\", null, 0);\n+\n+        Comparator<Person> personComparator = Comparators.byFunctionNullsLast(Person::getLastName);\n+        Verify.assertNegative(personComparator.compare(alice, bob));\n+        Verify.assertPositive(personComparator.compare(carol, alice));\n+        Verify.assertNegative(personComparator.compare(alice, dan));\n+        Verify.assertZero(personComparator.compare(bob, carol));\n+\n+        MutableList<Person> people = Lists.mutable.of(bob, dan, carol, alice);\n+        people.sortThis(personComparator);\n+        Verify.assertIterablesEqual(Lists.immutable.of(alice, dan, bob, carol), people);\n+    }\n+\n+    @Test\n+    public void fromFunctionsSafeNullsLow()\n+    {\n+        Person bob = new Person(\"Bob\", null, 0);\n+        Person dan = new Person(\"Dan\", \"Witwicky\", 0);\n+        Person alice = new Person(\"Alice\", \"Liddell\", 0);\n+        Person carol = new Person(\"Carol\", null, 0);\n+\n+        Comparator<Person> personComparator = Comparators.byFunctionNullsFirst(Person::getLastName);\n+        Verify.assertPositive(personComparator.compare(alice, bob));\n+        Verify.assertNegative(personComparator.compare(carol, alice));\n+        Verify.assertNegative(personComparator.compare(alice, dan));\n+        Verify.assertZero(personComparator.compare(bob, carol));\n+\n+        MutableList<Person> people = Lists.mutable.of(bob, dan, carol, alice);\n+        people.sortThis(personComparator);\n+        Verify.assertIterablesEqual(Lists.immutable.of(bob, carol, alice, dan), people);", "originalCommit": "d8fb82c57a3ece3798a4097450f9450bd6c8b96c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4MDkyMQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/891#discussion_r428280921", "bodyText": "As discussed, also added serialization tests", "author": "vmzakharov", "createdAt": "2020-05-20T20:13:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI0NzgyOA=="}], "type": "inlineReview"}, {"oid": "3876f2c5c9b59e3e96529b17f7bc470ca0842628", "url": "https://github.com/eclipse/eclipse-collections/commit/3876f2c5c9b59e3e96529b17f7bc470ca0842628", "message": "Closes #890: Implements Null Safe Comparators by Function\n\nSigned-off-by: vmzakharov <zakharov.vladimir.m@gmail.com>", "committedDate": "2020-05-20T20:12:53Z", "type": "commit"}, {"oid": "3876f2c5c9b59e3e96529b17f7bc470ca0842628", "url": "https://github.com/eclipse/eclipse-collections/commit/3876f2c5c9b59e3e96529b17f7bc470ca0842628", "message": "Closes #890: Implements Null Safe Comparators by Function\n\nSigned-off-by: vmzakharov <zakharov.vladimir.m@gmail.com>", "committedDate": "2020-05-20T20:12:53Z", "type": "forcePushed"}]}