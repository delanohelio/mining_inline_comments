{"pr_number": 889, "pr_title": "Closes #888: BooleanArrayStack is code generated from the common primitive stack template", "pr_createdAt": "2020-05-19T03:05:29Z", "pr_url": "https://github.com/eclipse/eclipse-collections/pull/889", "timeline": [{"oid": "b71b4f161971cbfb35e797089da20847c493af67", "url": "https://github.com/eclipse/eclipse-collections/commit/b71b4f161971cbfb35e797089da20847c493af67", "message": "Closes #888: BooleanArrayStack is code generated from the common primitive stack template\n\nSigned-off-by: vmzakharov <zakharov.vladimir.m@gmail.com>", "committedDate": "2020-05-19T03:30:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5ODYwNQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/889#discussion_r427298605", "bodyText": "I think we should leave the current implementation in AbstractPrimitiveStack and add the new implementation override in the concrete ArrayStack implementations.", "author": "donraab", "createdAt": "2020-05-19T13:24:10Z", "path": "eclipse-collections-code-generator/src/main/resources/impl/stack/abstractPrimitiveStack.stg", "diffHunk": "@@ -256,11 +256,9 @@ public abstract class Abstract<name>Stack implements <name>Stack\n     public int hashCode()\n     {\n         int hashCode = 1;\n-        <name>Iterable iterable = this.getDelegate().asReversed();", "originalCommit": "b71b4f161971cbfb35e797089da20847c493af67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzODg4OA==", "url": "https://github.com/eclipse/eclipse-collections/pull/889#discussion_r427338888", "bodyText": "Happy to make the change, just want to understand the reasoning behind it.  In AbstactPrimitveStack getDelegate() is defined as returning a PrimitveArrayList so the cost of random access of the underlying implementation should not be an issue. Or is it something else?", "author": "vmzakharov", "createdAt": "2020-05-19T14:19:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5ODYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0NDYwMA==", "url": "https://github.com/eclipse/eclipse-collections/pull/889#discussion_r427344600", "bodyText": "If someone extends the Abstract class, the implementation may not be RandomAccess.", "author": "donraab", "createdAt": "2020-05-19T14:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5ODYwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5OTI3Mw==", "url": "https://github.com/eclipse/eclipse-collections/pull/889#discussion_r427299273", "bodyText": "This looks like an unrelated change. Please revert and create an issue if this is duplication.", "author": "donraab", "createdAt": "2020-05-19T13:25:08Z", "path": "eclipse-collections-code-generator/src/main/resources/impl/stack/mutable/primitiveArrayStack.stg", "diffHunk": "@@ -151,12 +151,7 @@ public class <name>ArrayStack extends Abstract<name>Stack\n         this.delegate.clear();\n     }\n \n-    @Override", "originalCommit": "b71b4f161971cbfb35e797089da20847c493af67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzMTg1OQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/889#discussion_r427331859", "bodyText": "It is related. Please see the PR comment and the issue comment. BooleanIterable does not have toSortedList() so to have a single template for primitive stacks it needs to be excluded from code generation for boolean (just like sortThis() is already excluded from mutable primitive list generation for booleans).", "author": "vmzakharov", "createdAt": "2020-05-19T14:10:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5OTI3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0ODEzMg==", "url": "https://github.com/eclipse/eclipse-collections/pull/889#discussion_r427348132", "bodyText": "Agree with you Vlad, however, such \u201cbaked in\u201d changes make it difficult to write release notes. This is what I propose, break it up as an additional commit as a part of this same PR so that it reads as another commit.", "author": "nikhilnanivadekar", "createdAt": "2020-05-19T14:30:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5OTI3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3NzU5OQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/889#discussion_r427377599", "bodyText": "I see, thanks for clarifying.", "author": "donraab", "createdAt": "2020-05-19T15:06:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5OTI3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQxNjE4MA==", "url": "https://github.com/eclipse/eclipse-collections/pull/889#discussion_r427416180", "bodyText": "Wouldn't describe it as a \u201cbaked in\u201d change. The actual change is to have BooleanArrayStack generated and this is necessary to make it happen. The template change preserves APIs for the other primitive stacks and for the boolean array stack, so there is really no change in behavior. BooleanArrayStack never supported toSortedList, toSortedList is a part of the common template, so we exclude toSortedList generation for booleans in the template", "author": "vmzakharov", "createdAt": "2020-05-19T15:59:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5OTI3Mw=="}], "type": "inlineReview"}, {"oid": "5ff8a4bf83c68a60de831ef4c05df7b6cd57b3bc", "url": "https://github.com/eclipse/eclipse-collections/commit/5ff8a4bf83c68a60de831ef4c05df7b6cd57b3bc", "message": "Closes #888: BooleanArrayStack is code generated from the common primitive stack template\n\nSigned-off-by: vmzakharov <zakharov.vladimir.m@gmail.com>", "committedDate": "2020-05-19T15:38:24Z", "type": "commit"}, {"oid": "5ff8a4bf83c68a60de831ef4c05df7b6cd57b3bc", "url": "https://github.com/eclipse/eclipse-collections/commit/5ff8a4bf83c68a60de831ef4c05df7b6cd57b3bc", "message": "Closes #888: BooleanArrayStack is code generated from the common primitive stack template\n\nSigned-off-by: vmzakharov <zakharov.vladimir.m@gmail.com>", "committedDate": "2020-05-19T15:38:24Z", "type": "forcePushed"}]}