{"pr_number": 877, "pr_title": "Fix inspections violations.", "pr_createdAt": "2020-04-30T05:02:52Z", "pr_url": "https://github.com/eclipse/eclipse-collections/pull/877", "timeline": [{"oid": "98b54952128325306e4c7aa57e46cbad594539c9", "url": "https://github.com/eclipse/eclipse-collections/commit/98b54952128325306e4c7aa57e46cbad594539c9", "message": "Fix inspections violations.", "committedDate": "2020-04-30T16:18:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMzOTU0NQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/877#discussion_r418339545", "bodyText": "Why is it ok to remove transient here?", "author": "donraab", "createdAt": "2020-04-30T23:11:26Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/collection/mutable/AbstractMultiReaderMutableCollection.java", "diffHunk": "@@ -77,10 +77,11 @@\n  * AbstractMultiReaderMutableCollection is a common abstraction that provides thread-safe collection behaviors.\n  * Subclasses of this class must provide implementations of getDelegate() and getLock().\n  */\n+@SuppressWarnings(\"unused\")\n public abstract class AbstractMultiReaderMutableCollection<T> implements MutableCollection<T>\n {\n-    protected transient ReadWriteLock lock;\n-    protected transient ReadWriteLockWrapper lockWrapper;\n+    protected ReadWriteLock lock;", "originalCommit": "98b54952128325306e4c7aa57e46cbad594539c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMzUyOA==", "url": "https://github.com/eclipse/eclipse-collections/pull/877#discussion_r418613528", "bodyText": "transient only affects Serializable classes. AbstractMultiReaderMutableCollection and its subclasses are not Serializable. Its subclasses are Externalizable\nIn theory, someone could write a new serializable subclass of AbstractMultiReaderMutableCollection. If you would prefer, I could bring back the keyword and suppress the warning.", "author": "motlin", "createdAt": "2020-05-01T16:15:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMzOTU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgxNzgxOQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/877#discussion_r418817819", "bodyText": "Yes, bring back the keyword and suppress the warning.", "author": "donraab", "createdAt": "2020-05-02T01:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMzOTU0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM0MDEyMw==", "url": "https://github.com/eclipse/eclipse-collections/pull/877#discussion_r418340123", "bodyText": "Is readWriteLock is not used?", "author": "donraab", "createdAt": "2020-04-30T23:13:16Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/collection/mutable/AbstractMultiReaderMutableCollection.java", "diffHunk": "@@ -1981,13 +1982,11 @@ public void appendString(Appendable appendable, String start, String separator,\n \n     public static class ReadWriteLockWrapper\n     {\n-        private final ReadWriteLock readWriteLock;", "originalCommit": "98b54952128325306e4c7aa57e46cbad594539c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMzkzMA==", "url": "https://github.com/eclipse/eclipse-collections/pull/877#discussion_r418613930", "bodyText": "Correct, the field is not used. The parameter is still used in the constructor.\n    public static class ReadWriteLockWrapper\n    {\n        private final ReadWriteLock readWriteLock;\n        private final LockWrapper readLock;\n        private final LockWrapper writeLock;\n\n        public ReadWriteLockWrapper(ReadWriteLock readWriteLock)\n        {\n            this.readWriteLock = readWriteLock;\n            this.readLock = new LockWrapper(readWriteLock.readLock());\n            this.writeLock = new LockWrapper(readWriteLock.writeLock());\n        }\n...", "author": "motlin", "createdAt": "2020-05-01T16:16:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM0MDEyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgyMDM2OQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/877#discussion_r418820369", "bodyText": "Ok", "author": "donraab", "createdAt": "2020-05-02T01:41:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM0MDEyMw=="}], "type": "inlineReview"}, {"oid": "1a2facfe2f0ffeacaf149041f026072a402c8cf4", "url": "https://github.com/eclipse/eclipse-collections/commit/1a2facfe2f0ffeacaf149041f026072a402c8cf4", "message": "Fix inspections violations.\n\nSigned-off-by: Craig P. Motlin <cmotlin@gmail.com>", "committedDate": "2020-05-02T02:26:59Z", "type": "commit"}, {"oid": "1a2facfe2f0ffeacaf149041f026072a402c8cf4", "url": "https://github.com/eclipse/eclipse-collections/commit/1a2facfe2f0ffeacaf149041f026072a402c8cf4", "message": "Fix inspections violations.\n\nSigned-off-by: Craig P. Motlin <cmotlin@gmail.com>", "committedDate": "2020-05-02T02:26:59Z", "type": "forcePushed"}]}