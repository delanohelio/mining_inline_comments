{"pr_number": 1036, "pr_title": "Implement symmetric difference on primitive sets. Partially addresses #310.", "pr_createdAt": "2020-11-28T22:48:51Z", "pr_url": "https://github.com/eclipse/eclipse-collections/pull/1036", "timeline": [{"oid": "05b9de3beaa52ba6484226979e3eef13677fa3eb", "url": "https://github.com/eclipse/eclipse-collections/commit/05b9de3beaa52ba6484226979e3eef13677fa3eb", "message": "Implement symmetric difference on primitive sets. Partially addresses #310.\n\nSigned-off-by: Sirisha Pratha <sirisha.pratha@bnymellon.com>", "committedDate": "2020-11-28T22:26:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNjUzOQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/1036#discussion_r532126539", "bodyText": "Hi @prathasirisha, we might be able to optimize this slightly.\nreturn set.reject(this::contains, this.reject(set::contains, <name>Sets.mutable.empty())).toImmutable();", "author": "donraab", "createdAt": "2020-11-29T01:10:05Z", "path": "eclipse-collections-code-generator/src/main/resources/api/set/immutablePrimitiveSet.stg", "diffHunk": "@@ -90,6 +90,19 @@ public interface Immutable<name>Set extends Immutable<name>Collection, <name>Set\n         return this.reject(set::contains);\n     }\n \n+    /**\n+     * Returns the set of all objects that are a member of exactly one of {@code this} and {@code set} (elements which\n+     * are in one of the sets, but not in both). For instance, for the sets [1, 2, 3] and [2, 3, 4], the symmetric\n+     * difference set is [1, 4] . It is the set difference of the union and the intersection.\n+     *\n+     * @since 11.0.\n+     */\n+    @Override\n+    default Immutable<name>Set symmetricDifference(<name>Set set)\n+    {\n+        return this.toSet().symmetricDifference(set).toImmutable();", "originalCommit": "05b9de3beaa52ba6484226979e3eef13677fa3eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNjk1Ng==", "url": "https://github.com/eclipse/eclipse-collections/pull/1036#discussion_r532126956", "bodyText": "Sets is not for primitives, no?", "author": "mohrezaei", "createdAt": "2020-11-29T01:15:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNjUzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNzY1MA==", "url": "https://github.com/eclipse/eclipse-collections/pull/1036#discussion_r532127650", "bodyText": "Oh right... and we don't have primitive factories available in API module yet.", "author": "donraab", "createdAt": "2020-11-29T01:24:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNjUzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyODMyNw==", "url": "https://github.com/eclipse/eclipse-collections/pull/1036#discussion_r532128327", "bodyText": "@mohrezaei, any other suggestions on the code for potential optimizations?", "author": "donraab", "createdAt": "2020-11-29T01:32:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNjUzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyODQwOQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/1036#discussion_r532128409", "bodyText": "@donraab nope. LGTM", "author": "mohrezaei", "createdAt": "2020-11-29T01:34:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNjUzOQ=="}], "type": "inlineReview"}]}