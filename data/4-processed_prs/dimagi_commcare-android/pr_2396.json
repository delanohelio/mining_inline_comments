{"pr_number": 2396, "pr_title": "Add manual quarantine tests", "pr_createdAt": "2020-10-29T10:01:18Z", "pr_url": "https://github.com/dimagi/commcare-android/pull/2396", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5MjQ4Mw==", "url": "https://github.com/dimagi/commcare-android/pull/2396#discussion_r514892483", "bodyText": "nit: if we are using position as input to openModule, we should put a comment here specifiying the text of module we want to open for better readability or move the value 12 in a constant whose name indicates what module this position is for.", "author": "shubham1g5", "createdAt": "2020-10-30T06:19:58Z", "path": "app/instrumentation-tests/src/org/commcare/androidTests/ManualQuarantineTest.kt", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.commcare.androidTests\n+\n+import android.os.Build\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.action.ViewActions.longClick\n+import androidx.test.espresso.matcher.ViewMatchers.withId\n+import androidx.test.espresso.matcher.ViewMatchers.withText\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.filters.SdkSuppress\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.commcare.utils.doesNotExist\n+import org.commcare.utils.isDisplayed\n+import org.hamcrest.Matchers.allOf\n+import org.junit.Before\n+import org.junit.FixMethodOrder\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.MethodSorters\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+@SdkSuppress(maxSdkVersion = Build.VERSION_CODES.Q)\n+@FixMethodOrder(MethodSorters.NAME_ASCENDING)\n+class ManualQuarantineTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"ccqa.ccz\"\n+        const val APP_NAME = \"Basic Tests\"\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"test\", \"1234\")\n+        // Enable quarantine\n+        enableFormQuarantine()\n+        InstrumentationUtility.changeWifi(false)\n+    }\n+\n+    private fun enableFormQuarantine() {\n+        InstrumentationUtility.gotoHome()\n+        InstrumentationUtility.selectOptionItem(withText(\"Advanced\"))\n+        onView(withText(\"Enable Manual Form Quarantine\"))\n+                .perform(click())\n+        InstrumentationUtility.gotoHome()\n+    }\n+\n+    @Test\n+    fun test_A_Quarantine() {\n+        InstrumentationUtility.openModule(12)", "originalCommit": "19543378bb8be61d6ce1f182fafc1ba21660bfe1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5MzI5NA==", "url": "https://github.com/dimagi/commcare-android/pull/2396#discussion_r514893294", "bodyText": "we should add an additional step that just checks that you can't quarantine without this call.", "author": "shubham1g5", "createdAt": "2020-10-30T06:23:08Z", "path": "app/instrumentation-tests/src/org/commcare/androidTests/ManualQuarantineTest.kt", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.commcare.androidTests\n+\n+import android.os.Build\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.action.ViewActions.longClick\n+import androidx.test.espresso.matcher.ViewMatchers.withId\n+import androidx.test.espresso.matcher.ViewMatchers.withText\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.filters.SdkSuppress\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.commcare.utils.doesNotExist\n+import org.commcare.utils.isDisplayed\n+import org.hamcrest.Matchers.allOf\n+import org.junit.Before\n+import org.junit.FixMethodOrder\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.MethodSorters\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+@SdkSuppress(maxSdkVersion = Build.VERSION_CODES.Q)\n+@FixMethodOrder(MethodSorters.NAME_ASCENDING)\n+class ManualQuarantineTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"ccqa.ccz\"\n+        const val APP_NAME = \"Basic Tests\"\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"test\", \"1234\")\n+        // Enable quarantine\n+        enableFormQuarantine()\n+        InstrumentationUtility.changeWifi(false)\n+    }\n+\n+    private fun enableFormQuarantine() {\n+        InstrumentationUtility.gotoHome()\n+        InstrumentationUtility.selectOptionItem(withText(\"Advanced\"))\n+        onView(withText(\"Enable Manual Form Quarantine\"))\n+                .perform(click())\n+        InstrumentationUtility.gotoHome()\n+    }\n+\n+    @Test\n+    fun test_A_Quarantine() {\n+        InstrumentationUtility.openModule(12)\n+        onView(withId(R.id.nav_btn_finish))\n+                .perform(click())\n+        InstrumentationUtility.openModule(12)\n+        onView(withId(R.id.nav_btn_finish))\n+                .perform(click())\n+\n+        // Go to saved forms and quarantine them\n+        InstrumentationUtility.selectOptionItem(withText(\"Saved Forms\"))\n+\n+        // Quarantine first form.\n+        onView(CustomMatchers.find(\n+                allOf(withText(\"Display Form\")),\n+                1\n+        )).perform(longClick())\n+        // Unsent forms should not be delete-able\n+        withText(\"Delete Record\").doesNotExist()\n+        onView(withText(\"Scan Record Integrity\"))\n+                .perform(click())\n+        onView(withText(\"QUARANTINE FORM\"))\n+                .perform(click())\n+\n+        // After quarantining one form we'll have to re-enable quarantine setting.\n+        enableFormQuarantine()", "originalCommit": "19543378bb8be61d6ce1f182fafc1ba21660bfe1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5NDEyNw==", "url": "https://github.com/dimagi/commcare-android/pull/2396#discussion_r514894127", "bodyText": "Need to suppress below Android 10", "author": "shubham1g5", "createdAt": "2020-10-30T06:25:59Z", "path": "app/instrumentation-tests/src/org/commcare/androidTests/ManualQuarantineTest.kt", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.commcare.androidTests\n+\n+import android.os.Build\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.action.ViewActions.longClick\n+import androidx.test.espresso.matcher.ViewMatchers.withId\n+import androidx.test.espresso.matcher.ViewMatchers.withText\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.filters.SdkSuppress\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.commcare.utils.doesNotExist\n+import org.commcare.utils.isDisplayed\n+import org.hamcrest.Matchers.allOf\n+import org.junit.Before\n+import org.junit.FixMethodOrder\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.MethodSorters\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+@SdkSuppress(maxSdkVersion = Build.VERSION_CODES.Q)\n+@FixMethodOrder(MethodSorters.NAME_ASCENDING)\n+class ManualQuarantineTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"ccqa.ccz\"\n+        const val APP_NAME = \"Basic Tests\"\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"test\", \"1234\")\n+        // Enable quarantine\n+        enableFormQuarantine()\n+        InstrumentationUtility.changeWifi(false)", "originalCommit": "19543378bb8be61d6ce1f182fafc1ba21660bfe1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5f8e6611e069ff8da727a5cbbe09367ccee66b9f", "url": "https://github.com/dimagi/commcare-android/commit/5f8e6611e069ff8da727a5cbbe09367ccee66b9f", "message": "Add manual quarantine tests", "committedDate": "2020-11-04T09:40:24Z", "type": "commit"}, {"oid": "323fc84e8108f23626bb185afbdda8a9ee926bf9", "url": "https://github.com/dimagi/commcare-android/commit/323fc84e8108f23626bb185afbdda8a9ee926bf9", "message": "PR suggestion", "committedDate": "2020-11-04T09:40:24Z", "type": "commit"}, {"oid": "7d87c33356a44ab86b2e1e3e462dc76c34c9df3f", "url": "https://github.com/dimagi/commcare-android/commit/7d87c33356a44ab86b2e1e3e462dc76c34c9df3f", "message": "Add custom annotation for wifi dependent tests", "committedDate": "2020-11-04T09:40:24Z", "type": "commit"}, {"oid": "989224c7fc5c0da54602cdb995ed5e9691922677", "url": "https://github.com/dimagi/commcare-android/commit/989224c7fc5c0da54602cdb995ed5e9691922677", "message": "Add custom annotation for running tests on browserstack", "committedDate": "2020-11-04T09:52:30Z", "type": "commit"}, {"oid": "989224c7fc5c0da54602cdb995ed5e9691922677", "url": "https://github.com/dimagi/commcare-android/commit/989224c7fc5c0da54602cdb995ed5e9691922677", "message": "Add custom annotation for running tests on browserstack", "committedDate": "2020-11-04T09:52:30Z", "type": "forcePushed"}, {"oid": "0c7dffdfc69e911f188c943a0b4f3b37f62dbc66", "url": "https://github.com/dimagi/commcare-android/commit/0c7dffdfc69e911f188c943a0b4f3b37f62dbc66", "message": "Fix annotation param value for browserstack", "committedDate": "2020-11-04T10:18:54Z", "type": "commit"}, {"oid": "c26ad19f40d000ac886c96537bc673811b07a733", "url": "https://github.com/dimagi/commcare-android/commit/c26ad19f40d000ac886c96537bc673811b07a733", "message": "Use notAnnotation to run tests skipped on browserstack", "committedDate": "2020-11-04T10:25:11Z", "type": "commit"}]}