{"pr_number": 2358, "pr_title": "Add fixtures test", "pr_createdAt": "2020-09-24T12:43:31Z", "pr_url": "https://github.com/dimagi/commcare-android/pull/2358", "timeline": [{"oid": "d6937f905dc3cbf3baaed041f5a5ef5a6b0fb390", "url": "https://github.com/dimagi/commcare-android/commit/d6937f905dc3cbf3baaed041f5a5ef5a6b0fb390", "message": "Add fixtures test", "committedDate": "2020-09-24T12:42:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NTgyOQ==", "url": "https://github.com/dimagi/commcare-android/pull/2358#discussion_r494285829", "bodyText": "This should fail on master right now.", "author": "ShivamPokhriyal", "createdAt": "2020-09-24T12:43:51Z", "path": "app/instrumentation-tests/src/org/commcare/androidTests/FixturesTest.kt", "diffHunk": "@@ -0,0 +1,166 @@\n+package org.commcare.androidTests\n+\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.assertion.ViewAssertions.doesNotExist\n+import androidx.test.espresso.assertion.ViewAssertions.matches\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.hamcrest.Matchers.*\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class FixturesTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"fixtures.ccz\"\n+        const val APP_NAME = \"Fixtures\"\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+    }\n+\n+    @Test\n+    fun testMissingFixture_throwsError() {\n+        InstrumentationUtility.login(\"fixtures_fails\", \"123\")\n+        openFixtureForm()\n+        onView(withId(R.id.nav_btn_next))\n+                .perform(click())\n+        onView(withText(\"Error Occurred\"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(startsWith(\"Make sure the 'Test' lookup table is available\")))\n+                .check(matches(isDisplayed()))\n+    }\n+\n+    @Test\n+    fun testFixturesWork() {\n+        InstrumentationUtility.login(\"fixtures_works\", \"123\")\n+        openFixtureForm_andSelectFirstTwoCheckboxes()\n+        onView(withText(\"Essex\"))\n+                .perform(click())\n+        onView(withId(R.id.nav_btn_next))\n+                .perform(click())\n+        onView(withText(\"Saugus\"))\n+                .perform(click())\n+        onView(withId(R.id.nav_btn_finish))\n+                .perform(click())\n+        onView(withText(\"Saved\"))\n+                .perform(click())\n+        onView(withText(\"Fixtures Form\"))\n+                .perform(click())\n+        onView(withText(\"3 3 \"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(\"Essex\"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(\"Saugus\"))\n+                .check(matches(isDisplayed()))\n+    }\n+\n+    @Test\n+    fun testFixtureFiltering() {\n+        InstrumentationUtility.login(\"fixtures_works\", \"123\")\n+        openFixtureForm_andSelectFirstTwoCheckboxes()\n+        // Proceed without selecting country\n+        onView(withId(R.id.nav_btn_next))\n+                .perform(click())\n+        // confirm you don't see any radio button now to select a city.\n+        onView(withClassName(endsWith(\"RadioButton\")))\n+                .check(doesNotExist())\n+\n+        // Go back now and pick a country and confirm the cities are filtered.\n+        onView(withId(R.id.nav_btn_prev))\n+                .perform(click())\n+        onView(withText(\"Essex\"))\n+                .perform(click())\n+        onView(withId(R.id.nav_btn_next))\n+                .perform(click())\n+        onView(withText(\"Saugus\"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(\"Andover\"))\n+                .check(matches(isDisplayed()))\n+\n+        onView(withId(R.id.nav_btn_prev))\n+                .perform(click())\n+        onView(withText(\"Middlesex\"))\n+                .perform(click())\n+        onView(withId(R.id.nav_btn_next))\n+                .perform(click())\n+        onView(withText(\"Cambridge\"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(\"Wilmington\"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(\"Billerica\"))\n+                .check(matches(isDisplayed()))\n+\n+        onView(withId(R.id.nav_btn_prev))\n+                .perform(click())\n+        onView(withText(\"Suffolk\"))\n+                .perform(click())\n+        onView(withId(R.id.nav_btn_next))\n+                .perform(click())\n+        onView(withText(\"Boston\"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(\"Winthrop\"))\n+                .check(matches(isDisplayed()))\n+\n+        onView(withText(\"Boston\"))\n+                .perform(click())\n+        onView(withId(R.id.nav_btn_finish))\n+                .perform(click())\n+    }\n+\n+    @Test\n+    fun testFixture_with1Mb_works() {", "originalCommit": "d6937f905dc3cbf3baaed041f5a5ef5a6b0fb390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4MjE2NA==", "url": "https://github.com/dimagi/commcare-android/pull/2358#discussion_r495882164", "bodyText": "Noting that test failed successfully.", "author": "ShivamPokhriyal", "createdAt": "2020-09-28T11:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4NTgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3ODAyMg==", "url": "https://github.com/dimagi/commcare-android/pull/2358#discussion_r494778022", "bodyText": "both next and prev navigations can be encapsulated into functions so that if we ever change the view id of buttons, we only need to change the ui tests in one place.", "author": "shubham1g5", "createdAt": "2020-09-25T06:39:06Z", "path": "app/instrumentation-tests/src/org/commcare/androidTests/FixturesTest.kt", "diffHunk": "@@ -0,0 +1,166 @@\n+package org.commcare.androidTests\n+\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.assertion.ViewAssertions.doesNotExist\n+import androidx.test.espresso.assertion.ViewAssertions.matches\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.hamcrest.Matchers.*\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class FixturesTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"fixtures.ccz\"\n+        const val APP_NAME = \"Fixtures\"\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+    }\n+\n+    @Test\n+    fun testMissingFixture_throwsError() {\n+        InstrumentationUtility.login(\"fixtures_fails\", \"123\")\n+        openFixtureForm()\n+        onView(withId(R.id.nav_btn_next))\n+                .perform(click())\n+        onView(withText(\"Error Occurred\"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(startsWith(\"Make sure the 'Test' lookup table is available\")))\n+                .check(matches(isDisplayed()))\n+    }\n+\n+    @Test\n+    fun testFixturesWork() {\n+        InstrumentationUtility.login(\"fixtures_works\", \"123\")\n+        openFixtureForm_andSelectFirstTwoCheckboxes()\n+        onView(withText(\"Essex\"))\n+                .perform(click())\n+        onView(withId(R.id.nav_btn_next))", "originalCommit": "d6937f905dc3cbf3baaed041f5a5ef5a6b0fb390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk0NTc3Ng==", "url": "https://github.com/dimagi/commcare-android/pull/2358#discussion_r495945776", "bodyText": "I think it goes with all the strings/ids that we're using in androidTests and it's always hard to have them at one place. So I feel like not doing it.", "author": "ShivamPokhriyal", "createdAt": "2020-09-28T13:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3ODAyMg=="}], "type": "inlineReview"}, {"oid": "42e40ea3369a3dad91e880d7ce71e20764258a04", "url": "https://github.com/dimagi/commcare-android/commit/42e40ea3369a3dad91e880d7ce71e20764258a04", "message": "Merge branch 'master' into fixture-test", "committedDate": "2020-09-28T07:38:51Z", "type": "commit"}, {"oid": "171f1c236e5f598a0a1c4a4e8f1a0fd42002a1b1", "url": "https://github.com/dimagi/commcare-android/commit/171f1c236e5f598a0a1c4a4e8f1a0fd42002a1b1", "message": "Merge branch 'master' into fixture-test", "committedDate": "2020-09-28T11:54:09Z", "type": "commit"}, {"oid": "06360d09183d05ce0dee0a3f0b32ce826ca21914", "url": "https://github.com/dimagi/commcare-android/commit/06360d09183d05ce0dee0a3f0b32ce826ca21914", "message": "Fix 1mb fixture test", "committedDate": "2020-09-28T13:33:59Z", "type": "commit"}, {"oid": "c7e3aff8f7a800ea70f1695ca2d8e20d57d40f5c", "url": "https://github.com/dimagi/commcare-android/commit/c7e3aff8f7a800ea70f1695ca2d8e20d57d40f5c", "message": "Fix Ambigious View matcher exception\n\nwith text: a string starting with 'Increase Enalapril' matches multiple views in the hierarchy causing the tests to fail.", "committedDate": "2020-09-29T06:11:52Z", "type": "commit"}]}