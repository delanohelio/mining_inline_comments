{"pr_number": 2412, "pr_title": "Launch Session endpoints from Intent", "pr_createdAt": "2020-12-02T14:07:56Z", "pr_url": "https://github.com/dimagi/commcare-android/pull/2412", "timeline": [{"oid": "9e816b7173889c178ae3efddcf42205f48dcdc24", "url": "https://github.com/dimagi/commcare-android/commit/9e816b7173889c178ae3efddcf42205f48dcdc24", "message": "WIP: Session endpoints handling", "committedDate": "2020-10-29T18:29:23Z", "type": "commit"}, {"oid": "05c8f9483d71d794075602a690212f0528429e22", "url": "https://github.com/dimagi/commcare-android/commit/05c8f9483d71d794075602a690212f0528429e22", "message": "Handle session endpoint launch", "committedDate": "2020-11-30T09:26:03Z", "type": "commit"}, {"oid": "53bf31b5a31cb63807a3c1074fdf7b9b0aa13608", "url": "https://github.com/dimagi/commcare-android/commit/53bf31b5a31cb63807a3c1074fdf7b9b0aa13608", "message": "Perform substitue on a copy", "committedDate": "2020-12-02T13:03:56Z", "type": "commit"}, {"oid": "99e10e29fac3383cec5cf6a736deef55175845a5", "url": "https://github.com/dimagi/commcare-android/commit/99e10e29fac3383cec5cf6a736deef55175845a5", "message": "Tests", "committedDate": "2020-12-02T13:04:05Z", "type": "commit"}, {"oid": "8ed866ec909bbb84d16d31d92519ae1354f37fcf", "url": "https://github.com/dimagi/commcare-android/commit/8ed866ec909bbb84d16d31d92519ae1354f37fcf", "message": "error handling", "committedDate": "2020-12-02T13:50:59Z", "type": "commit"}, {"oid": "7287d568b83b39ef45ef0e2132bd0185d1786a66", "url": "https://github.com/dimagi/commcare-android/commit/7287d568b83b39ef45ef0e2132bd0185d1786a66", "message": "Prototype test fix", "committedDate": "2020-12-03T11:01:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2NjczOA==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r539466738", "bodyText": "Wouldn't these arguments need to be a Map (name to value) rather than a list?", "author": "ctsims", "createdAt": "2020-12-09T16:42:49Z", "path": "app/src/org/commcare/activities/DispatchActivity.java", "diffHunk": "@@ -321,14 +330,24 @@ private void handleUnvalidatedApp() {\n     private void handleExternalLaunch() {\n         //First off, make sure the incoming session is clear\n         CommCareApplication.instance().getSession().proceedWithSavedSessionIfNeeded(() -> {\n-                    String sessionRequest = this.getIntent().getStringExtra(SESSION_REQUEST);\n-                    SessionStateDescriptor ssd = new SessionStateDescriptor();\n-                    ssd.fromBundle(sessionRequest);\n-                    CommCareApplication.instance().getCurrentSessionWrapper().loadFromStateDescription(ssd);\n-                    Intent i = new Intent(this, StandardHomeActivity.class);\n-                    i.putExtra(WAS_EXTERNAL, true);\n-                    startActivityForResult(i, HOME_SCREEN);\n-        }\n+                    if (getIntent().hasExtra(SESSION_REQUEST)) {\n+                        String sessionRequest = this.getIntent().getStringExtra(SESSION_REQUEST);\n+                        SessionStateDescriptor ssd = new SessionStateDescriptor();\n+                        ssd.fromBundle(sessionRequest);\n+                        CommCareApplication.instance().getCurrentSessionWrapper().loadFromStateDescription(ssd);\n+                        Intent i = new Intent(this, StandardHomeActivity.class);\n+                        i.putExtra(WAS_EXTERNAL, true);\n+                        startActivityForResult(i, HOME_SCREEN);\n+                    } else if (getIntent().hasExtra(SESSION_ENDPOINT_ID)) {\n+                        String sessionEndpointId = this.getIntent().getStringExtra(SESSION_ENDPOINT_ID);\n+                        ArrayList<String> args = this.getIntent().getStringArrayListExtra(SESSION_ENDPOINT_ARGUMENTS);", "originalCommit": "7287d568b83b39ef45ef0e2132bd0185d1786a66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2NzE5Ng==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r539467196", "bodyText": "^ If this were true, we might also want to consider having the args provided as a bundle map.", "author": "ctsims", "createdAt": "2020-12-09T16:43:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2NjczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2ODg2Nw==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r539468867", "bodyText": "I mentioned this in the commcare-core PR, but I think we should be setting the arguments by setting them as XPath variables on the evaluation context, since that will naturally and robustly substitute them in as needed as the stack ops are calculated.", "author": "ctsims", "createdAt": "2020-12-09T16:45:20Z", "path": "app/src/org/commcare/activities/HomeScreenBaseActivity.java", "diffHunk": "@@ -194,10 +199,59 @@ private void loadInstanceState(Bundle savedInstanceState) {\n     private void processFromExternalLaunch(Bundle savedInstanceState) {\n         if (savedInstanceState == null && getIntent().hasExtra(DispatchActivity.WAS_EXTERNAL)) {\n             wasExternal = true;\n+            processSessionEndpoint();\n             sessionNavigator.startNextSessionStep();\n         }\n     }\n \n+    private void processSessionEndpoint() {\n+        if (getIntent().hasExtra(SESSION_ENDPOINT_ID)) {\n+            Endpoint endpoint = validateIntentForSessionEndpoint(getIntent());\n+            if (endpoint != null) {\n+                Vector<String> endpointArguments = endpoint.getArguments();\n+                ArrayList<String> intentArguments = getIntent().getStringArrayListExtra(SESSION_ENDPOINT_ARGUMENTS);\n+                HashMap<String, String> compositeArguments = new HashMap<>(endpointArguments.size());\n+                for (int i = 0; i < endpointArguments.size(); i++) {", "originalCommit": "7287d568b83b39ef45ef0e2132bd0185d1786a66", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2OTA4NQ==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r539469085", "bodyText": "Should we be ensuring the stack is clean here before firing everything?", "author": "ctsims", "createdAt": "2020-12-09T16:45:36Z", "path": "app/src/org/commcare/activities/HomeScreenBaseActivity.java", "diffHunk": "@@ -194,10 +199,59 @@ private void loadInstanceState(Bundle savedInstanceState) {\n     private void processFromExternalLaunch(Bundle savedInstanceState) {\n         if (savedInstanceState == null && getIntent().hasExtra(DispatchActivity.WAS_EXTERNAL)) {\n             wasExternal = true;\n+            processSessionEndpoint();\n             sessionNavigator.startNextSessionStep();\n         }\n     }\n \n+    private void processSessionEndpoint() {\n+        if (getIntent().hasExtra(SESSION_ENDPOINT_ID)) {\n+            Endpoint endpoint = validateIntentForSessionEndpoint(getIntent());\n+            if (endpoint != null) {\n+                Vector<String> endpointArguments = endpoint.getArguments();\n+                ArrayList<String> intentArguments = getIntent().getStringArrayListExtra(SESSION_ENDPOINT_ARGUMENTS);\n+                HashMap<String, String> compositeArguments = new HashMap<>(endpointArguments.size());\n+                for (int i = 0; i < endpointArguments.size(); i++) {\n+                    compositeArguments.put(endpointArguments.elementAt(i),\n+                            intentArguments.get(i));\n+                }\n+\n+                CommCareApplication.instance().getCurrentSessionWrapper()", "originalCommit": "7287d568b83b39ef45ef0e2132bd0185d1786a66", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "64505f8a3287c8869304d038b58a0662ac9ffe57", "url": "https://github.com/dimagi/commcare-android/commit/64505f8a3287c8869304d038b58a0662ac9ffe57", "message": "reset session before launching endpoint, eval args by setting vars to evalcontext", "committedDate": "2020-12-14T07:02:29Z", "type": "commit"}, {"oid": "c57523f7c3b9f901c61eb3dbc21d88479dfda098", "url": "https://github.com/dimagi/commcare-android/commit/c57523f7c3b9f901c61eb3dbc21d88479dfda098", "message": "load arguments from bundle", "committedDate": "2020-12-14T08:27:28Z", "type": "commit"}, {"oid": "a991bc316e140d61dde641a446954267a0345266", "url": "https://github.com/dimagi/commcare-android/commit/a991bc316e140d61dde641a446954267a0345266", "message": "Merge branch 'master' into sessionEndpoints", "committedDate": "2020-12-14T08:31:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5NzQxMA==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r542197410", "bodyText": "Should we be creating a copy of evaluationContext here ?", "author": "shubham1g5", "createdAt": "2020-12-14T08:32:48Z", "path": "app/src/org/commcare/activities/HomeScreenBaseActivity.java", "diffHunk": "@@ -189,15 +194,75 @@ private void loadInstanceState(Bundle savedInstanceState) {\n     }\n \n     /**\n-     * Set state that signifies activity was launch from external app.\n+     * Set state that signifies activity was launch from external app\n      */\n     private void processFromExternalLaunch(Bundle savedInstanceState) {\n         if (savedInstanceState == null && getIntent().hasExtra(DispatchActivity.WAS_EXTERNAL)) {\n             wasExternal = true;\n+            processSessionEndpoint();\n             sessionNavigator.startNextSessionStep();\n         }\n     }\n \n+    private void processSessionEndpoint() {\n+        if (getIntent().hasExtra(SESSION_ENDPOINT_ID)) {\n+            Endpoint endpoint = validateIntentForSessionEndpoint(getIntent());\n+            if (endpoint != null) {\n+                Vector<String> endpointArguments = endpoint.getArguments();\n+                Bundle intentArguments = getIntent().getBundleExtra(SESSION_ENDPOINT_ARGUMENTS);\n+                EvaluationContext evaluationContext = CommCareApplication.instance().getCurrentSessionWrapper().getEvaluationContext();", "originalCommit": "a991bc316e140d61dde641a446954267a0345266", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM5OTk3NA==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r542399974", "bodyText": "Requests to the session wrapper for an EC should always return a new, clean evaluation context, so I don't think you explicitly need to fork it here unless it will be used in more than one subcontext (IE: If, for example, you needed to evaluate expressions with different sets of argument variables being set).", "author": "ctsims", "createdAt": "2020-12-14T13:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5NzQxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1MzgzMg==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r543253832", "bodyText": "that makes sense. Thanks!", "author": "shubham1g5", "createdAt": "2020-12-15T11:11:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5NzQxMA=="}], "type": "inlineReview"}, {"oid": "9d7c499f7a34a9266d46f0601e7027cab86eb0d0", "url": "https://github.com/dimagi/commcare-android/commit/9d7c499f7a34a9266d46f0601e7027cab86eb0d0", "message": "cleanup", "committedDate": "2020-12-14T08:42:18Z", "type": "commit"}, {"oid": "5567d2a1151a224a61cd7d2909a27393e951a9ab", "url": "https://github.com/dimagi/commcare-android/commit/5567d2a1151a224a61cd7d2909a27393e951a9ab", "message": "Support both bundle and a list as arguments to session endpoint launch", "committedDate": "2020-12-15T12:17:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1MzA0Mw==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r544453043", "bodyText": "Nit: It feels a bit error prone to me for the processing to not fork to being either Dictionary based or List Order based upfront and then in their own block, rather than inline under the same process, but just a style thing.", "author": "ctsims", "createdAt": "2020-12-16T16:44:24Z", "path": "app/src/org/commcare/activities/HomeScreenBaseActivity.java", "diffHunk": "@@ -189,15 +194,86 @@ private void loadInstanceState(Bundle savedInstanceState) {\n     }\n \n     /**\n-     * Set state that signifies activity was launch from external app.\n+     * Set state that signifies activity was launch from external app\n      */\n     private void processFromExternalLaunch(Bundle savedInstanceState) {\n         if (savedInstanceState == null && getIntent().hasExtra(DispatchActivity.WAS_EXTERNAL)) {\n             wasExternal = true;\n+            processSessionEndpoint();\n             sessionNavigator.startNextSessionStep();\n         }\n     }\n \n+    private void processSessionEndpoint() {\n+        if (getIntent().hasExtra(SESSION_ENDPOINT_ID)) {\n+            Endpoint endpoint = validateIntentForSessionEndpoint(getIntent());\n+            if (endpoint != null) {\n+                Vector<String> endpointArguments = endpoint.getArguments();\n+                EvaluationContext evaluationContext = CommCareApplication.instance().getCurrentSessionWrapper().getEvaluationContext();\n+\n+                Bundle intentArgumentsAsBundle = getIntent().getBundleExtra(SESSION_ENDPOINT_ARGUMENTS_BUNDLE);\n+                ArrayList<String> intentArgumentsAsList = getIntent().getStringArrayListExtra(SESSION_ENDPOINT_ARGUMENTS_LIST);\n+\n+                for (int i = 0; i < endpointArguments.size(); i++) {\n+                    String argumentName = endpointArguments.elementAt(i);\n+                    if (intentArgumentsAsBundle != null && !intentArgumentsAsBundle.containsKey(argumentName)) {\n+                        String noArgumentWithNameError = org.commcare.utils.StringUtils.getStringRobust(\n+                                this,\n+                                R.string.session_endpoint_no_argument_with_name,\n+                                new String[]{argumentName, endpoint.getId()});\n+                        UserfacingErrorHandling.createErrorDialog(this, noArgumentWithNameError, true);\n+                        return;\n+                    }\n+\n+                    // Bundle Arguments take precdence over list arguments", "originalCommit": "5567d2a1151a224a61cd7d2909a27393e951a9ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1NjExNA==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r544456114", "bodyText": "Just realized: We should be doing the session stack reset here, rather than below, since the EC here depends on the current session state, and this could introduce unpredictable behavior for the stack ops depending on the session state when the callout was received.", "author": "ctsims", "createdAt": "2020-12-16T16:48:08Z", "path": "app/src/org/commcare/activities/HomeScreenBaseActivity.java", "diffHunk": "@@ -189,15 +194,86 @@ private void loadInstanceState(Bundle savedInstanceState) {\n     }\n \n     /**\n-     * Set state that signifies activity was launch from external app.\n+     * Set state that signifies activity was launch from external app\n      */\n     private void processFromExternalLaunch(Bundle savedInstanceState) {\n         if (savedInstanceState == null && getIntent().hasExtra(DispatchActivity.WAS_EXTERNAL)) {\n             wasExternal = true;\n+            processSessionEndpoint();\n             sessionNavigator.startNextSessionStep();\n         }\n     }\n \n+    private void processSessionEndpoint() {\n+        if (getIntent().hasExtra(SESSION_ENDPOINT_ID)) {\n+            Endpoint endpoint = validateIntentForSessionEndpoint(getIntent());\n+            if (endpoint != null) {\n+                Vector<String> endpointArguments = endpoint.getArguments();\n+                EvaluationContext evaluationContext = CommCareApplication.instance().getCurrentSessionWrapper().getEvaluationContext();", "originalCommit": "5567d2a1151a224a61cd7d2909a27393e951a9ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1NzM4Mw==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r544457383", "bodyText": "Another consideration on that point: We may need the Endpoint definition to be able to provide its own <instance> connectors, since it won't necessarily be connected to any of the other components where connectors are defined. This can be \"future\" addition, since most of the inbound expressions now will just be Strings or whatnot, but I'd expect us to run into it at some point.", "author": "ctsims", "createdAt": "2020-12-16T16:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1NjExNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzU2MA==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r545733560", "bodyText": "Sounds good. Keeping it as a future addition.", "author": "shubham1g5", "createdAt": "2020-12-18T10:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1NjExNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1OTIxOA==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r544459218", "bodyText": "Idea: The notion of supporting either a list or a dictionary to populate the list feels like it is in a funny place where it's part of the core app contract but implemented in Android.\nI wonder whether it would be helpful to put more of this code into commcare-core in a method that receives either a list or dict and populates (or even retrieves then populates, based on the line 212 comment) an EC, just so the behavior is clearly part of the core contract.", "author": "ctsims", "createdAt": "2020-12-16T16:52:07Z", "path": "app/src/org/commcare/activities/HomeScreenBaseActivity.java", "diffHunk": "@@ -189,15 +194,86 @@ private void loadInstanceState(Bundle savedInstanceState) {\n     }\n \n     /**\n-     * Set state that signifies activity was launch from external app.\n+     * Set state that signifies activity was launch from external app\n      */\n     private void processFromExternalLaunch(Bundle savedInstanceState) {\n         if (savedInstanceState == null && getIntent().hasExtra(DispatchActivity.WAS_EXTERNAL)) {\n             wasExternal = true;\n+            processSessionEndpoint();\n             sessionNavigator.startNextSessionStep();\n         }\n     }\n \n+    private void processSessionEndpoint() {\n+        if (getIntent().hasExtra(SESSION_ENDPOINT_ID)) {\n+            Endpoint endpoint = validateIntentForSessionEndpoint(getIntent());\n+            if (endpoint != null) {\n+                Vector<String> endpointArguments = endpoint.getArguments();\n+                EvaluationContext evaluationContext = CommCareApplication.instance().getCurrentSessionWrapper().getEvaluationContext();\n+\n+                Bundle intentArgumentsAsBundle = getIntent().getBundleExtra(SESSION_ENDPOINT_ARGUMENTS_BUNDLE);\n+                ArrayList<String> intentArgumentsAsList = getIntent().getStringArrayListExtra(SESSION_ENDPOINT_ARGUMENTS_LIST);\n+\n+                for (int i = 0; i < endpointArguments.size(); i++) {\n+                    String argumentName = endpointArguments.elementAt(i);\n+                    if (intentArgumentsAsBundle != null && !intentArgumentsAsBundle.containsKey(argumentName)) {\n+                        String noArgumentWithNameError = org.commcare.utils.StringUtils.getStringRobust(\n+                                this,\n+                                R.string.session_endpoint_no_argument_with_name,\n+                                new String[]{argumentName, endpoint.getId()});\n+                        UserfacingErrorHandling.createErrorDialog(this, noArgumentWithNameError, true);\n+                        return;\n+                    }\n+\n+                    // Bundle Arguments take precdence over list arguments\n+                    String argValue = intentArgumentsAsBundle == null ? intentArgumentsAsList.get(i)\n+                            : intentArgumentsAsBundle.getString(argumentName);\n+\n+                    evaluationContext.setVariable(argumentName, argValue);", "originalCommit": "5567d2a1151a224a61cd7d2909a27393e951a9ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1OTgwMA==", "url": "https://github.com/dimagi/commcare-android/pull/2412#discussion_r544459800", "bodyText": "do we need the check block on line 219 if this validation code runs over things first?", "author": "ctsims", "createdAt": "2020-12-16T16:52:51Z", "path": "app/src/org/commcare/activities/HomeScreenBaseActivity.java", "diffHunk": "@@ -189,15 +194,86 @@ private void loadInstanceState(Bundle savedInstanceState) {\n     }\n \n     /**\n-     * Set state that signifies activity was launch from external app.\n+     * Set state that signifies activity was launch from external app\n      */\n     private void processFromExternalLaunch(Bundle savedInstanceState) {\n         if (savedInstanceState == null && getIntent().hasExtra(DispatchActivity.WAS_EXTERNAL)) {\n             wasExternal = true;\n+            processSessionEndpoint();\n             sessionNavigator.startNextSessionStep();\n         }\n     }\n \n+    private void processSessionEndpoint() {\n+        if (getIntent().hasExtra(SESSION_ENDPOINT_ID)) {\n+            Endpoint endpoint = validateIntentForSessionEndpoint(getIntent());\n+            if (endpoint != null) {\n+                Vector<String> endpointArguments = endpoint.getArguments();\n+                EvaluationContext evaluationContext = CommCareApplication.instance().getCurrentSessionWrapper().getEvaluationContext();\n+\n+                Bundle intentArgumentsAsBundle = getIntent().getBundleExtra(SESSION_ENDPOINT_ARGUMENTS_BUNDLE);\n+                ArrayList<String> intentArgumentsAsList = getIntent().getStringArrayListExtra(SESSION_ENDPOINT_ARGUMENTS_LIST);\n+\n+                for (int i = 0; i < endpointArguments.size(); i++) {\n+                    String argumentName = endpointArguments.elementAt(i);\n+                    if (intentArgumentsAsBundle != null && !intentArgumentsAsBundle.containsKey(argumentName)) {\n+                        String noArgumentWithNameError = org.commcare.utils.StringUtils.getStringRobust(\n+                                this,\n+                                R.string.session_endpoint_no_argument_with_name,\n+                                new String[]{argumentName, endpoint.getId()});\n+                        UserfacingErrorHandling.createErrorDialog(this, noArgumentWithNameError, true);\n+                        return;\n+                    }\n+\n+                    // Bundle Arguments take precdence over list arguments\n+                    String argValue = intentArgumentsAsBundle == null ? intentArgumentsAsList.get(i)\n+                            : intentArgumentsAsBundle.getString(argumentName);\n+\n+                    evaluationContext.setVariable(argumentName, argValue);\n+                }\n+\n+                CommCareApplication.instance().getCurrentSessionWrapper().reset();\n+                CommCareApplication.instance().getCurrentSessionWrapper()\n+                        .executeStackActions(endpoint.getStackOperations(), evaluationContext);\n+            }\n+        }\n+    }\n+\n+    private Endpoint validateIntentForSessionEndpoint(Intent intent) {", "originalCommit": "5567d2a1151a224a61cd7d2909a27393e951a9ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a19d4dc832f0412a3cfed0b9039b730ff55211c0", "url": "https://github.com/dimagi/commcare-android/commit/a19d4dc832f0412a3cfed0b9039b730ff55211c0", "message": "Moves code to core, pr feedback", "committedDate": "2020-12-18T09:55:59Z", "type": "commit"}]}