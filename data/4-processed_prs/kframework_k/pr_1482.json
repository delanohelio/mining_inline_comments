{"pr_number": 1482, "pr_title": "Location info in k", "pr_createdAt": "2020-08-03T20:17:17Z", "pr_url": "https://github.com/kframework/k/pull/1482", "timeline": [{"oid": "508f12b35e743fa6cebaad405764c83b90b4ef8b", "url": "https://github.com/kframework/k/commit/508f12b35e743fa6cebaad405764c83b90b4ef8b", "message": "K-LOCATIONS module in kast.k", "committedDate": "2020-07-31T21:19:52Z", "type": "commit"}, {"oid": "ad83ccd60eebbea80ce330f2087bceadec5cab8f", "url": "https://github.com/kframework/k/commit/ad83ccd60eebbea80ce330f2087bceadec5cab8f", "message": "semantic value type contains a location", "committedDate": "2020-07-31T21:20:15Z", "type": "commit"}, {"oid": "177ddfb3350884d9771c3a95b44527ec7dcae7ae", "url": "https://github.com/kframework/k/commit/177ddfb3350884d9771c3a95b44527ec7dcae7ae", "message": "generate locations embedded in semantic values", "committedDate": "2020-07-31T21:20:35Z", "type": "commit"}, {"oid": "af116717f6fd6675557f8f6843b9e25ed55fb0f2", "url": "https://github.com/kframework/k/commit/af116717f6fd6675557f8f6843b9e25ed55fb0f2", "message": "store filename in static variable", "committedDate": "2020-07-31T21:20:50Z", "type": "commit"}, {"oid": "757148946d0dcbef7f3fc8b6557554acdbb0f686", "url": "https://github.com/kframework/k/commit/757148946d0dcbef7f3fc8b6557554acdbb0f686", "message": "print locations as part of resulting term", "committedDate": "2020-07-31T21:21:02Z", "type": "commit"}, {"oid": "23dce5906edbaeed8099c177af7cfe657d8c5975", "url": "https://github.com/kframework/k/commit/23dce5906edbaeed8099c177af7cfe657d8c5975", "message": "filename tracking", "committedDate": "2020-08-03T20:16:04Z", "type": "commit"}, {"oid": "fa9887be378d8c8d7988218c150688ec4e8b90d0", "url": "https://github.com/kframework/k/commit/fa9887be378d8c8d7988218c150688ec4e8b90d0", "message": "fix error message", "committedDate": "2020-08-03T20:16:13Z", "type": "commit"}, {"oid": "76b4bb7c77f22dfb29fbab418939dd56236445db", "url": "https://github.com/kframework/k/commit/76b4bb7c77f22dfb29fbab418939dd56236445db", "message": "line markers", "committedDate": "2020-08-03T20:16:30Z", "type": "commit"}, {"oid": "beeaa24832ec8ad11a92a4b32ae3e48949cdfb45", "url": "https://github.com/kframework/k/commit/beeaa24832ec8ad11a92a4b32ae3e48949cdfb45", "message": "--bison-file", "committedDate": "2020-08-03T20:16:46Z", "type": "commit"}, {"oid": "f333a7fa949da511efd012d0723b15f26fe77ff0", "url": "https://github.com/kframework/k/commit/f333a7fa949da511efd012d0723b15f26fe77ff0", "message": "fix tests", "committedDate": "2020-08-04T16:14:19Z", "type": "commit"}, {"oid": "bfe8ee6c327b7d1b1ec1208b165c7d1896eed67d", "url": "https://github.com/kframework/k/commit/bfe8ee6c327b7d1b1ec1208b165c7d1896eed67d", "message": "add test", "committedDate": "2020-08-04T18:38:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1NTY1NQ==", "url": "https://github.com/kframework/k/pull/1482#discussion_r465255655", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              syntax {Sort} Sort ::= #location(Sort, String, Int, Int, Int, Int) [symbol, format(%3)]\n          \n          \n            \n              syntax {Sort} Sort ::= #location(Sort, file: String, startLine: Int, startColumn: Int, endLine: Int, endColumn: Int) [symbol, format(%3)]", "author": "nishantjr", "createdAt": "2020-08-04T18:44:57Z", "path": "k-distribution/include/kframework/builtin/kast.k", "diffHunk": "@@ -295,6 +295,15 @@ module K-AMBIGUITIES\n \n endmodule\n \n+module K-LOCATIONS\n+  imports STRING-SYNTAX\n+  imports INT-SYNTAX\n+\n+  // filename, startLine, startCol, endLine, endCol\n+  syntax {Sort} Sort ::= #location(Sort, String, Int, Int, Int, Int) [symbol, format(%3)]", "originalCommit": "508f12b35e743fa6cebaad405764c83b90b4ef8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4MDkzMw==", "url": "https://github.com/kframework/k/pull/1482#discussion_r465280933", "bodyText": "Believe me, I wanted to do this. But the accessor functions that this would generate would be parametric functions, which we don't support yet.", "author": "dwightguth", "createdAt": "2020-08-04T19:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1NTY1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1ODMzMg==", "url": "https://github.com/kframework/k/pull/1482#discussion_r465258332", "bodyText": "What is the purpose of the IntConst label?", "author": "nishantjr", "createdAt": "2020-08-04T18:49:53Z", "path": "k-distribution/tests/regression-new/locations/test.k", "diffHunk": "@@ -0,0 +1,13 @@\n+module TEST-SYNTAX\n+  imports UNSIGNED-INT-SYNTAX\n+  syntax Exp [locations]\n+  syntax Exp ::= Exp \"+\" Exp | Int [klabel(IntConst)]", "originalCommit": "bfe8ee6c327b7d1b1ec1208b165c7d1896eed67d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2MDkxNQ==", "url": "https://github.com/kframework/k/pull/1482#discussion_r465260915", "bodyText": "I think, instead of an injection, it adds the label IntConst.\nBut I have a different question, why do you need to add [locations] to the sort declaration?\nI would expect location information to be accessible to every term everywhere.\nEven if the backend doesn't preserve it currently, we can say N/A and fix it later.", "author": "radumereuta", "createdAt": "2020-08-04T18:54:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1ODMzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3MTI5OA==", "url": "https://github.com/kframework/k/pull/1482#discussion_r465271298", "bodyText": "Yes, by why do we need that label? Won't an injection work just as well?", "author": "nishantjr", "createdAt": "2020-08-04T19:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1ODMzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3MzE1OA==", "url": "https://github.com/kframework/k/pull/1482#discussion_r465273158", "bodyText": "If we added it to every term everywhere, it would greatly increase the size of the kore representation. We'd also need to unwrap the source information for every sort.", "author": "nishantjr", "createdAt": "2020-08-04T19:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1ODMzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4MjA5Ng==", "url": "https://github.com/kframework/k/pull/1482#discussion_r465282096", "bodyText": "I'm pretty sure you're right that an injection would also work for the location information; I didn't think of this when I was writing the test, though. Do you want me to change it back? Both should work so there's nothing wrong with the test as it is currently written.", "author": "dwightguth", "createdAt": "2020-08-04T19:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1ODMzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4MjcwMg==", "url": "https://github.com/kframework/k/pull/1482#discussion_r465282702", "bodyText": "As far as why we don't add it everywhere, the answer is it will greatly complexify the implementation of the semantics which would then need to know how to deal with location information being wrapped around every single term.", "author": "dwightguth", "createdAt": "2020-08-04T19:32:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1ODMzMg=="}], "type": "inlineReview"}, {"oid": "89c5e47c440119db41ad4d1cdfb69af41e8d3208", "url": "https://github.com/kframework/k/commit/89c5e47c440119db41ad4d1cdfb69af41e8d3208", "message": "documentation", "committedDate": "2020-08-04T19:36:11Z", "type": "commit"}, {"oid": "d05fc17fa3d99c62051bc665a106ad30b0ec6b43", "url": "https://github.com/kframework/k/commit/d05fc17fa3d99c62051bc665a106ad30b0ec6b43", "message": "Merge branch 'master' into locinfo", "committedDate": "2020-08-05T18:37:47Z", "type": "commit"}]}