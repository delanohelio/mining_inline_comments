{"pr_number": 1449, "pr_title": "rename substitution.k to substitution.md", "pr_createdAt": "2020-07-22T18:23:59Z", "pr_url": "https://github.com/kframework/k/pull/1449", "timeline": [{"oid": "4cb1b9e7587d5f2c1c8c39a7ce6886541d3cc672", "url": "https://github.com/kframework/k/commit/4cb1b9e7587d5f2c1c8c39a7ce6886541d3cc672", "message": "rename file", "committedDate": "2020-07-22T18:23:03Z", "type": "commit"}, {"oid": "b779782d725c6b2581cc89bd9e65f9e947667836", "url": "https://github.com/kframework/k/commit/b779782d725c6b2581cc89bd9e65f9e947667836", "message": "add documentation", "committedDate": "2020-07-22T18:23:03Z", "type": "commit"}, {"oid": "b852e4917dcf4ffc2a56b6d2553243efc9110998", "url": "https://github.com/kframework/k/commit/b852e4917dcf4ffc2a56b6d2553243efc9110998", "message": "remove references to substitution.k", "committedDate": "2020-07-22T18:23:03Z", "type": "commit"}, {"oid": "d4512d2074e75efde198e0c1bd33cb6d3409dce5", "url": "https://github.com/kframework/k/commit/d4512d2074e75efde198e0c1bd33cb6d3409dce5", "message": "add warning for substitution.k", "committedDate": "2020-07-22T18:23:03Z", "type": "commit"}, {"oid": "8cf9639972b1fcc4230440264d219f1480a36a66", "url": "https://github.com/kframework/k/commit/8cf9639972b1fcc4230440264d219f1480a36a66", "message": "fix error", "committedDate": "2020-07-22T18:45:49Z", "type": "commit"}, {"oid": "7c5216d931fe054bd3ec3a052e2128f533529dc0", "url": "https://github.com/kframework/k/commit/7c5216d931fe054bd3ec3a052e2128f533529dc0", "message": "make variable effectively final", "committedDate": "2020-07-22T20:55:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ3NjcxMQ==", "url": "https://github.com/kframework/k/pull/1449#discussion_r459476711", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              syntax KVar ::= r\"(?<![A-Za-z0-9\\\\_])[A-Za-z\\\\_][A-Za-z0-9\\\\_]*\"     [prec(1), token]\n          \n          \n            \n            \n          \n          \n            \n                          | #LowerId                                             [token]\n          \n          \n            \n                          | #UpperId                                             [token]\n          \n          \n            \n              syntax KVar ::= r\"(?<![A-Za-z0-9\\\\_])[A-Za-z\\\\_][A-Za-z0-9\\\\_]*\"     [prec(1), token]\n          \n          \n            \n                            | #LowerId                                             [token]\n          \n          \n            \n                            | #UpperId                                             [token]", "author": "ehildenb", "createdAt": "2020-07-23T14:07:25Z", "path": "k-distribution/include/kframework/builtin/substitution.md", "diffHunk": "@@ -0,0 +1,108 @@\n+---\n+permalink: substitution.html\n+copyright: Copyright (c) 2015-2020 K Team. All Rights Reserved.\n+---\n+\n+Capture-Aware Substitution in K\n+===============================\n+\n+One of the traditional ways in which functional languages are given operational\n+semantics is via substitution. In particular, you can view a function as\n+declaring a particular bound variable, the parameter of the function, as well\n+as the body of the function, within which both bound and free variables can\n+occur, and implement the process of beta-reduction (one of the axioms of the\n+lambda calculus) by means of a substitution operator which is aware of the\n+difference between free variables and bound variables and prevents variable\n+capture.\n+\n+In K this is implemented using two mechanisms: The `KVar` sort, and the\n+`binder` attribute.\n+\n+The `KVar` Sort\n+---------------\n+\n+K introduces a new hooked sort, `KVar`, which the substitution operator\n+(defined below) understands in a particular way. The syntax of `KVar` is the\n+same as for sort `Id` in `DOMAINS`, but with a different sort name. Similarly,\n+some of the same operators are defined over `KVar` which are defined for `Id`,\n+such as conversion from `String` to `KVar` and support for the `!Var:KVar`\n+syntax.\n+\n+A `KVar` is simply an identifier with special meaning during substitution.\n+`KVar`s must begin with a letter or underscore,\n+and can be followed by zero or more letters, numbers, or underscores.\n+\n+```k\n+module KVAR-SYNTAX-PROGRAM-PARSING\n+  imports BUILTIN-ID-TOKENS\n+\n+  syntax KVar ::= r\"(?<![A-Za-z0-9\\\\_])[A-Za-z\\\\_][A-Za-z0-9\\\\_]*\"     [prec(1), token]\n+\n+              | #LowerId                                             [token]\n+              | #UpperId                                             [token]", "originalCommit": "7c5216d931fe054bd3ec3a052e2128f533529dc0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "70dda58da2390c217363444b26012462c9162306", "url": "https://github.com/kframework/k/commit/70dda58da2390c217363444b26012462c9162306", "message": "Update k-distribution/include/kframework/builtin/substitution.md\n\nCo-authored-by: Everett Hildenbrandt <everett.hildenbrandt@gmail.com>", "committedDate": "2020-07-23T14:12:35Z", "type": "commit"}, {"oid": "517cd6610cf7b93964efe19a4a6622908fcddf06", "url": "https://github.com/kframework/k/commit/517cd6610cf7b93964efe19a4a6622908fcddf06", "message": "Merge branch 'master' into substitution", "committedDate": "2020-07-23T15:21:44Z", "type": "commit"}]}