{"pr_number": 1254, "pr_title": "domains.k: #Ceil rules for padLeftBytes, padRightBytes", "pr_createdAt": "2020-05-05T09:29:23Z", "pr_url": "https://github.com/kframework/k/pull/1254", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4MDY2OA==", "url": "https://github.com/kframework/k/pull/1254#discussion_r419980668", "bodyText": "Shouldn't this also require that the middle argument be non-zero? What do the backend implementations of this assume? We should strive to make sure that this is an accurate description of what the users can expect the backends to be able to handle.", "author": "ehildenb", "createdAt": "2020-05-05T09:34:08Z", "path": "k-distribution/include/builtin/domains.k", "diffHunk": "@@ -836,6 +836,9 @@ module BYTES-IN-K\n   rule padLeftBytes(BS, LEN, VAL) => BS requires lengthBytes(BS) >=Int LEN\n   rule padLeftBytes(BS, LEN, VAL) => padLeftBytes(VAL : BS, LEN, VAL) requires lengthBytes(BS) <Int LEN\n \n+  rule #Ceil(padRightBytes(_,_, VAL)) => {(0 <=Int VAL andBool VAL <Int 256) #Equals true} [anywhere]\n+  rule #Ceil(padLeftBytes(_,_, VAL))  => {(0 <=Int VAL andBool VAL <Int 256) #Equals true} [anywhere]", "originalCommit": "ef136fdea5fba4050506271436897ecccfc4bc57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4NTAzNA==", "url": "https://github.com/kframework/k/pull/1254#discussion_r419985034", "bodyText": "Judging by K implementation there are no restrictions on middle argument. Hooked implementation must be reviewed and adapted so that it matches K implementation. If this is not practical then the discrepancy must be commented.", "author": "denis-bogdanas", "createdAt": "2020-05-05T09:41:53Z", "path": "k-distribution/include/builtin/domains.k", "diffHunk": "@@ -836,6 +836,9 @@ module BYTES-IN-K\n   rule padLeftBytes(BS, LEN, VAL) => BS requires lengthBytes(BS) >=Int LEN\n   rule padLeftBytes(BS, LEN, VAL) => padLeftBytes(VAL : BS, LEN, VAL) requires lengthBytes(BS) <Int LEN", "originalCommit": "ef136fdea5fba4050506271436897ecccfc4bc57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE2NjU5OQ==", "url": "https://github.com/kframework/k/pull/1254#discussion_r420166599", "bodyText": "We should change the K implementation so that the len requirement has to be nonnegative.", "author": "dwightguth", "createdAt": "2020-05-05T14:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4NTAzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwOTMyMA==", "url": "https://github.com/kframework/k/pull/1254#discussion_r421709320", "bodyText": "I have the same comment I have on the other PR. If these are intended for the haskell backend, they should not be in the module tagged [kast].", "author": "dwightguth", "createdAt": "2020-05-07T18:31:07Z", "path": "k-distribution/include/builtin/domains.k", "diffHunk": "@@ -863,6 +863,10 @@ endmodule\n \n module BYTES-SYMBOLIC [symbolic, kast]\n   imports BYTES-IN-K\n+\n+  rule #Ceil(padRightBytes(_, LEN, VAL)) => {(0 <=Int LEN andBool 0 <=Int VAL andBool VAL <Int 256) #Equals true} [anywhere, simplification]", "originalCommit": "67566a26874bbd7e38085a4941efc6e71ee9d9ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcyMTI2Mg==", "url": "https://github.com/kframework/k/pull/1254#discussion_r421721262", "bodyText": "@dwightguth Should I create a separate module just for these rules?", "author": "denis-bogdanas", "createdAt": "2020-05-07T18:51:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwOTMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA3MjIwMQ==", "url": "https://github.com/kframework/k/pull/1254#discussion_r422072201", "bodyText": "They should be in a module tagged kore or kore, symbolic", "author": "ehildenb", "createdAt": "2020-05-08T10:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwOTMyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MjkyMg==", "url": "https://github.com/kframework/k/pull/1254#discussion_r433452922", "bodyText": "I don't understand this change; why was it necessary?", "author": "dwightguth", "createdAt": "2020-06-01T19:50:36Z", "path": "k-distribution/include/builtin/domains.k", "diffHunk": "@@ -830,11 +830,11 @@ module BYTES-IN-K\n   rule replaceAtBytes(B : BS, N, BS') => B : replaceAtBytes(BS, N -Int 1, BS') requires N >Int 0\n   rule replaceAtBytes(_ : BS, 0, B : BS') => B : replaceAtBytes(BS, 0, BS')\n \n-  syntax Bytes ::= padRightBytes(Bytes, Int, Int) [function]\n-                 | padLeftBytes(Bytes, Int, Int) [function]\n+  syntax Bytes ::= padRightBytes(Bytes, Int, Int) [function, klabel(padRightBytes)]", "originalCommit": "57be3c43b8a81f7044f52a96614b5e567a90a2cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4NjgwOA==", "url": "https://github.com/kframework/k/pull/1254#discussion_r433686808", "bodyText": "I don't remember. Probably for debugging. Can be removed.", "author": "denis-bogdanas", "createdAt": "2020-06-02T07:52:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MjkyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyODI0OA==", "url": "https://github.com/kframework/k/pull/1254#discussion_r434128248", "bodyText": "I'd rather we remove it because as it stands it's not going to do anything, which makes it redundant.", "author": "dwightguth", "createdAt": "2020-06-02T19:32:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MjkyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MzM1Mw==", "url": "https://github.com/kframework/k/pull/1254#discussion_r433453353", "bodyText": "this entire module is not going to get imported on the haskell backend, thus, neither will this import.", "author": "dwightguth", "createdAt": "2020-06-01T19:51:32Z", "path": "k-distribution/include/builtin/domains.k", "diffHunk": "@@ -863,6 +863,14 @@ endmodule\n \n module BYTES-SYMBOLIC [symbolic, kast]\n   imports BYTES-IN-K\n+  imports BYTES-SYMBOLIC-CEIL", "originalCommit": "57be3c43b8a81f7044f52a96614b5e567a90a2cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4ODE5NQ==", "url": "https://github.com/kframework/k/pull/1254#discussion_r433688195", "bodyText": "Can you explain how module attributes work? Will [symbolic, kast] get imported by union or intersection of backends marked with [symbolic] and [kast]? If it's union, I guess hashell backend will import BYTES-SYMBOLIC.", "author": "denis-bogdanas", "createdAt": "2020-06-02T07:55:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MzM1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNzczMA==", "url": "https://github.com/kframework/k/pull/1254#discussion_r434127730", "bodyText": "A module tagged symbolic, kast will be imported only by the java backend.", "author": "dwightguth", "createdAt": "2020-06-02T19:31:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MzM1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMwMjY4Ng==", "url": "https://github.com/kframework/k/pull/1254#discussion_r435302686", "bodyText": "Ok, so what's your solution, where to put those rules? I have no idea based on your explanation. Feel free to close the PR/fix/suggest an actionable fix.", "author": "denis-bogdanas", "createdAt": "2020-06-04T14:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MzM1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMxNTI5NA==", "url": "https://github.com/kframework/k/pull/1254#discussion_r435315294", "bodyText": "It's the intersection of the kore and symbolic which makes it the Haskell backend.\nSo you may need to make a new module.", "author": "ehildenb", "createdAt": "2020-06-04T14:45:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MzM1Mw=="}], "type": "inlineReview"}, {"oid": "d92f7cf9cbcfa1794e3c003d794717dbf033310b", "url": "https://github.com/kframework/k/commit/d92f7cf9cbcfa1794e3c003d794717dbf033310b", "message": "domains.k: #Ceil rules for padLeftBytes, padRightBytes", "committedDate": "2020-06-04T19:14:59Z", "type": "commit"}, {"oid": "197b9a59bd8c0b8cd2b9cbb28ec8feec91e98390", "url": "https://github.com/kframework/k/commit/197b9a59bd8c0b8cd2b9cbb28ec8feec91e98390", "message": "added [simplification]", "committedDate": "2020-06-04T19:15:00Z", "type": "commit"}, {"oid": "0e14121d1a9ca848bf37b39956e93d63aeb2c33e", "url": "https://github.com/kframework/k/commit/0e14121d1a9ca848bf37b39956e93d63aeb2c33e", "message": "Added `0 <= LEN` to implementation and `#Ceil` rules", "committedDate": "2020-06-04T19:16:42Z", "type": "commit"}, {"oid": "03c2130e172518532189a3b6508fad6a3b46121e", "url": "https://github.com/kframework/k/commit/03c2130e172518532189a3b6508fad6a3b46121e", "message": "fix for previous", "committedDate": "2020-06-04T19:16:42Z", "type": "commit"}, {"oid": "0906c9dda1f62745eb250c97f7e5a8179fe1f3de", "url": "https://github.com/kframework/k/commit/0906c9dda1f62745eb250c97f7e5a8179fe1f3de", "message": "put the #Ceil rules in [symbolic] module", "committedDate": "2020-06-04T19:16:42Z", "type": "commit"}, {"oid": "cb238618fdc1c33afd87f5301688926617f9e2cf", "url": "https://github.com/kframework/k/commit/cb238618fdc1c33afd87f5301688926617f9e2cf", "message": "moved #Ceil rules tp BYTES-KORE", "committedDate": "2020-06-04T19:17:51Z", "type": "commit"}, {"oid": "30520afb303bdc7446ed84a4f3a8f7e2bd883136", "url": "https://github.com/kframework/k/commit/30520afb303bdc7446ed84a4f3a8f7e2bd883136", "message": "#Ceil rules moved to BYTES-SYMBOLIC-CEIL, separate module.", "committedDate": "2020-06-04T19:17:54Z", "type": "commit"}, {"oid": "4b2fc07bf3e8360203ba8bc184bbaec359904bfb", "url": "https://github.com/kframework/k/commit/4b2fc07bf3e8360203ba8bc184bbaec359904bfb", "message": "domains, #Ceil rules: addressed another iteration of PR comments", "committedDate": "2020-06-04T19:17:54Z", "type": "commit"}, {"oid": "4b2fc07bf3e8360203ba8bc184bbaec359904bfb", "url": "https://github.com/kframework/k/commit/4b2fc07bf3e8360203ba8bc184bbaec359904bfb", "message": "domains, #Ceil rules: addressed another iteration of PR comments", "committedDate": "2020-06-04T19:17:54Z", "type": "forcePushed"}, {"oid": "b5db86eb35d38c162bcc77dae4943ce6fe2f42cd", "url": "https://github.com/kframework/k/commit/b5db86eb35d38c162bcc77dae4943ce6fe2f42cd", "message": "fix", "committedDate": "2020-06-04T20:00:20Z", "type": "commit"}, {"oid": "65be01c7dd161644b372b724e9003ad9c60913a9", "url": "https://github.com/kframework/k/commit/65be01c7dd161644b372b724e9003ad9c60913a9", "message": "Merge branch 'master' into ceil-padBytes", "committedDate": "2020-06-08T16:43:12Z", "type": "commit"}, {"oid": "01e1a79a43dc801c35f56e9a9dd511624fbe010c", "url": "https://github.com/kframework/k/commit/01e1a79a43dc801c35f56e9a9dd511624fbe010c", "message": "domains, #Ceil rules for `padLeftBytes`, `padRightBytes` now with [anywhere, simplification]", "committedDate": "2020-06-09T18:34:47Z", "type": "commit"}, {"oid": "8bfa9aa8716227e4ffd82080f6dea07f9385cb73", "url": "https://github.com/kframework/k/commit/8bfa9aa8716227e4ffd82080f6dea07f9385cb73", "message": "Merge remote-tracking branch 'origin/master' into ceil-padBytes", "committedDate": "2020-06-11T14:08:15Z", "type": "commit"}]}