{"pr_number": 3464, "pr_title": "HHH-14108 - PADDED and DYNAMIC Batch loading strategies not compatible with the Enhanced Proxy feature", "pr_createdAt": "2020-07-15T20:31:35Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3464", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2Mzk1OA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455463958", "bodyText": "It might be considerable approach to put enhancementAsProxyEnabled to left of && for its performance cost is lower and we might end up with performance gain due to short-circuiting.", "author": "NathanQingyangXu", "createdAt": "2020-07-16T01:56:48Z", "path": "hibernate-core/src/main/java/org/hibernate/loader/Loader.java", "diffHunk": "@@ -1666,50 +1663,46 @@ protected void instanceAlreadyLoaded(\n \t\t\t);\n \t\t}\n \n-\t\tif ( persister.getBytecodeEnhancementMetadata().isEnhancedForLazyLoading() && enhancementAsProxyEnabled ) {\n-\t\t\tif ( \"merge\".equals( session.getLoadQueryInfluencers().getInternalFetchProfile() ) ) {\n-\t\t\t\tassert this instanceof CascadeEntityLoader;\n-\t\t\t\t// we are processing a merge and have found an existing \"managed copy\" in the\n-\t\t\t\t// session - we need to check if this copy is an enhanced-proxy and, if so,\n-\t\t\t\t// perform the hydration just as if it were \"not yet loaded\"\n-\t\t\t\tfinal PersistentAttributeInterceptable interceptable = (PersistentAttributeInterceptable) object;\n-\t\t\t\tfinal PersistentAttributeInterceptor interceptor = interceptable.$$_hibernate_getInterceptor();\n-\t\t\t\tif ( interceptor instanceof EnhancementAsProxyLazinessInterceptor ) {\n-\t\t\t\t\thydrateEntityState(\n-\t\t\t\t\t\t\trs,\n-\t\t\t\t\t\t\ti,\n-\t\t\t\t\t\t\tpersister,\n-\t\t\t\t\t\t\tgetEntityAliases()[i].getRowIdAlias(),\n-\t\t\t\t\t\t\tkey,\n-\t\t\t\t\t\t\thydratedObjects,\n-\t\t\t\t\t\t\tsession,\n-\t\t\t\t\t\t\tgetInstanceClass(\n-\t\t\t\t\t\t\t\t\trs,\n-\t\t\t\t\t\t\t\t\ti,\n-\t\t\t\t\t\t\t\t\tpersister,\n-\t\t\t\t\t\t\t\t\tkey.getIdentifier(),\n-\t\t\t\t\t\t\t\t\tsession\n-\t\t\t\t\t\t\t),\n-\t\t\t\t\t\t\tobject,\n-\t\t\t\t\t\t\trequestedLockMode\n-\t\t\t\t\t);\n+\t\tif (persister.getBytecodeEnhancementMetadata().isEnhancedForLazyLoading() && enhancementAsProxyEnabled) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0NjU3MQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455546571", "bodyText": "I'll fix it thanks", "author": "dreab8", "createdAt": "2020-07-16T06:47:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2Mzk1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2NDI4Mw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455464283", "bodyText": "It is a pattern to get rid of space char uses previously advised. Is that a new format pattern to advocate then?", "author": "NathanQingyangXu", "createdAt": "2020-07-16T01:58:08Z", "path": "hibernate-core/src/main/java/org/hibernate/loader/Loader.java", "diffHunk": "@@ -1610,7 +1607,7 @@ private void checkVersion(\n \t\t\telse {\n \t\t\t\t//If the object is already loaded, return the loaded one\n \t\t\t\tobject = session.getEntityUsingInterceptor( key );\n-\t\t\t\tif ( object != null ) {\n+\t\t\t\tif (object != null) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzODIyMA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455538220", "bodyText": "No it is not, I'm going to fix it, thanks", "author": "dreab8", "createdAt": "2020-07-16T06:28:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2NDI4Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY3NzY0Nw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455677647", "bodyText": "Looks like the body of the test is exactly the same in both subclasses. Could be moved to the parent class to make this more clear?", "author": "Sanne", "createdAt": "2020-07-16T10:12:00Z", "path": "hibernate-core/src/test/java/org/hibernate/test/bytecode/enhancement/lazy/proxy/batch/DynamicBatchingTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * License: GNU Lesser General Public License (LGPL), version 2.1 or later.\n+ * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.\n+ */\n+package org.hibernate.test.bytecode.enhancement.lazy.proxy.batch;\n+\n+import org.hibernate.Hibernate;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n+import org.hibernate.cfg.AvailableSettings;\n+import org.hibernate.loader.BatchFetchStyle;\n+import org.hibernate.stat.spi.StatisticsImplementor;\n+\n+import org.hibernate.testing.TestForIssue;\n+import org.junit.Test;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+\n+/**\n+ * @author Andrea Boriero\n+ */\n+@TestForIssue(jiraKey = \"HHH-14108\")\n+public class DynamicBatchingTest extends AbstractBatchingTest {\n+\n+\t@Override\n+\tprotected void configureStandardServiceRegistryBuilder(StandardServiceRegistryBuilder ssrb) {\n+\t\tsuper.configureStandardServiceRegistryBuilder( ssrb );\n+\t\tssrb.applySetting( AvailableSettings.BATCH_FETCH_STYLE, BatchFetchStyle.DYNAMIC.toString() );\n+\t}\n+\n+\t@Test\n+\tpublic void testLoadParent() {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcyNDYxOQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455724619", "bodyText": "done thanks", "author": "dreab8", "createdAt": "2020-07-16T11:43:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY3NzY0Nw=="}], "type": "inlineReview"}, {"oid": "1fda9b0136cab2380c749f587dedbb692efe71b3", "url": "https://github.com/hibernate/hibernate-orm/commit/1fda9b0136cab2380c749f587dedbb692efe71b3", "message": "HHH-14108 Add test for issue", "committedDate": "2020-07-16T11:42:24Z", "type": "commit"}, {"oid": "3642fdcda8e7f4eec067648340c0e029713418c7", "url": "https://github.com/hibernate/hibernate-orm/commit/3642fdcda8e7f4eec067648340c0e029713418c7", "message": "HHH-14108 PADDED and DYNAMIC Batch loading strategies not compatible with the Enhanced Proxy feature", "committedDate": "2020-07-16T11:42:24Z", "type": "commit"}, {"oid": "3642fdcda8e7f4eec067648340c0e029713418c7", "url": "https://github.com/hibernate/hibernate-orm/commit/3642fdcda8e7f4eec067648340c0e029713418c7", "message": "HHH-14108 PADDED and DYNAMIC Batch loading strategies not compatible with the Enhanced Proxy feature", "committedDate": "2020-07-16T11:42:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MTI3Mg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455791272", "bodyText": "This looks a bit puzzling. Do you know why it was limited to \"merge\" fetch profiles?\nNow you're expanding the set of operations to all, but the test just wants the load. I see we only use this for \"merge\" and \"refresh\" BTW... I suppose there's not  something special about \"refresh\" that we need to take into account during this load opertion?", "author": "Sanne", "createdAt": "2020-07-16T13:37:03Z", "path": "hibernate-core/src/main/java/org/hibernate/loader/Loader.java", "diffHunk": "@@ -1666,38 +1663,34 @@ protected void instanceAlreadyLoaded(\n \t\t\t);\n \t\t}\n \n-\t\tif ( persister.getBytecodeEnhancementMetadata().isEnhancedForLazyLoading() && enhancementAsProxyEnabled ) {\n-\t\t\tif ( \"merge\".equals( session.getLoadQueryInfluencers().getInternalFetchProfile() ) ) {", "originalCommit": "3642fdcda8e7f4eec067648340c0e029713418c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MTY0Mg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455861642", "bodyText": "I do not remember the reason why it was limited to the merge fetch profile, for the test case the fetch profile value is null but we need to hydrate the entity state and I think anything special is needed in case of \"refresh\". basically in such a case we just hydrate the entity state with the value retrieved from the db.", "author": "dreab8", "createdAt": "2020-07-16T15:10:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MTI3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5MDg0NA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455890844", "bodyText": "great, thanks", "author": "Sanne", "createdAt": "2020-07-16T15:51:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MTI3Mg=="}], "type": "inlineReview"}]}