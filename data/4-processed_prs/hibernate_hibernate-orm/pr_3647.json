{"pr_number": 3647, "pr_title": "HHH-13945: catch exception and fallback to call mapToMapFromEntity directly", "pr_createdAt": "2020-11-17T07:40:45Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3647", "timeline": [{"oid": "9a8eb0ea2e0bce150c4b170bd71fc1612d490059", "url": "https://github.com/hibernate/hibernate-orm/commit/9a8eb0ea2e0bce150c4b170bd71fc1612d490059", "message": "HHH-13945: fallback to call map if exception thrown", "committedDate": "2020-11-04T09:33:03Z", "type": "commit"}, {"oid": "9dbb5f7c216397244b7f3e9594d3a91803eec852", "url": "https://github.com/hibernate/hibernate-orm/commit/9dbb5f7c216397244b7f3e9594d3a91803eec852", "message": "Merge branch 'master' of https://github.com/hibernate/hibernate-orm into HHH-13945", "committedDate": "2020-11-17T02:21:57Z", "type": "commit"}, {"oid": "1e91f57c976633b5a08149011444b66a3b84d96b", "url": "https://github.com/hibernate/hibernate-orm/commit/1e91f57c976633b5a08149011444b66a3b84d96b", "message": "HHH-13945: catch PersistenceException during envers unproxy the field value, and fallback to using proxy entity", "committedDate": "2020-11-17T07:24:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMDc4OQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3647#discussion_r526220789", "bodyText": "IMO the exception should at least be logged with a DEBUG level. Since this throws a PersistenceException I assume that this will cause a transaction rollback due to the semantics of JPA, so this might not be the best way to fix this. Can you verify if the TX is marked as rollback only here?", "author": "beikov", "createdAt": "2020-11-18T16:21:21Z", "path": "hibernate-envers/src/main/java/org/hibernate/envers/internal/entities/mapper/relation/ToOneIdMapper.java", "diffHunk": "@@ -58,8 +60,16 @@ public boolean mapToMapFromEntity(\n \t\t// bi-directional relation, we always store the \"old\", unchanged data, to prevent storing changes made\n \t\t// to this field. It is the responsibility of the collection to properly update it if it really changed.\n \t\tObject entity = nonInsertableFake ? oldObj : newObj;\n+\n+\t\t// fix HHH-13760 - try to aggressively un-proxy this entity to help get the correct type of data later\n+\t\t// in mapToMapFromEntity. But it might fail while getImplementation() if object is deleted or other reasons.\n+\t\t// We catch the exception and fallback to call mapToMapFromEntity directly with the HibernateProxy entity\n \t\tif ( lazyMapping && entity instanceof HibernateProxy ) {\n-\t\t\tentity = ( (HibernateProxy) entity ).getHibernateLazyInitializer().getImplementation();\n+\t\t\ttry {\n+\t\t\t\tentity = ((HibernateProxy) entity).getHibernateLazyInitializer().getImplementation();\n+\t\t\t} catch ( PersistenceException e ) {\n+\t\t\t\t// Ignore the exception and fallback to call mapToMapFromEntity directly", "originalCommit": "1e91f57c976633b5a08149011444b66a3b84d96b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY5MzI0Ng==", "url": "https://github.com/hibernate/hibernate-orm/pull/3647#discussion_r526693246", "bodyText": "Ok, I just checked the code and the TX is not marked as rollback-only in this case, so this is fine.\nIf you introduce the logging, I will merge this.", "author": "beikov", "createdAt": "2020-11-19T08:57:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMDc4OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "8080da2ac098b29cbfec4128fa4caf6eb3118a53", "url": "https://github.com/hibernate/hibernate-orm/commit/8080da2ac098b29cbfec4128fa4caf6eb3118a53", "message": "HHH-13945: add debug log during exception thrown", "committedDate": "2020-11-20T03:37:27Z", "type": "commit"}, {"oid": "8080da2ac098b29cbfec4128fa4caf6eb3118a53", "url": "https://github.com/hibernate/hibernate-orm/commit/8080da2ac098b29cbfec4128fa4caf6eb3118a53", "message": "HHH-13945: add debug log during exception thrown", "committedDate": "2020-11-20T03:37:27Z", "type": "forcePushed"}]}