{"pr_number": 3548, "pr_title": "HHH-14212 Ultimate Fetch Graph fix", "pr_createdAt": "2020-09-13T14:04:35Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3548", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzMzk4MA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3548#discussion_r487533980", "bodyText": "The above one-liner is the gist of the ultimate fix. Its comment is self-explanatory.", "author": "NathanQingyangXu", "createdAt": "2020-09-13T14:08:17Z", "path": "hibernate-core/src/main/java/org/hibernate/engine/internal/TwoPhaseLoad.java", "diffHunk": "@@ -465,25 +428,14 @@ private static Boolean getOverridingEager(\n \t\t// Performance: check type.isCollectionType() first, as type.isAssociationType() is megamorphic\n \t\tif ( associationType.isCollectionType() || associationType.isAssociationType()  ) {\n \n-\t\t\t// check 'fetch graph' first; skip 'fetch profile' if 'fetch graph' takes effect\n-\t\t\tBoolean overridingEager = isEagerFetchGraph( session, associationName, associationType );\n-\n-\t\t\tif ( overridingEager != null ) {\n-\t\t\t\t//This method is very hot, and private so let's piggy back on the fact that the caller already knows the debugging state.\n-\t\t\t\tif ( isDebugEnabled ) {\n-\t\t\t\t\tLOG.debugf(\n-\t\t\t\t\t\t\t\"Overriding eager fetching using fetch graph. EntityName: %s, associationName: %s, eager fetching: %s\",\n-\t\t\t\t\t\t\tentityName,\n-\t\t\t\t\t\t\tassociationName,\n-\t\t\t\t\t\t\toverridingEager\n-\t\t\t\t\t);\n-\t\t\t\t}\n-\n-\t\t\t\treturn overridingEager;\n+\t\t\t// we can return false invariably for if the entity has been covered by entity graph,\n+\t\t\t// its associated JOIN has been present in the SQL generated and hence it would be loaded anyway\n+\t\t\tif ( session.isEnforcingFetchGraph() ) {\n+\t\t\t\treturn false;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cea7175f67721a750e01f1a89a1f6dc22e075b63", "url": "https://github.com/hibernate/hibernate-orm/commit/cea7175f67721a750e01f1a89a1f6dc22e075b63", "message": "HHH-14212 revert back HHH-14124 (retaining testing case)", "committedDate": "2020-09-21T16:49:50Z", "type": "commit"}, {"oid": "3f82d7458ea1f1892788561baa9fb4f31def1d7b", "url": "https://github.com/hibernate/hibernate-orm/commit/3f82d7458ea1f1892788561baa9fb4f31def1d7b", "message": "HHH-14212 revert back HHH-14097 (retaining testing case)", "committedDate": "2020-09-21T16:49:51Z", "type": "commit"}, {"oid": "198d3185cea1ecf200dbcb86846cd5ec09f9f3ac", "url": "https://github.com/hibernate/hibernate-orm/commit/198d3185cea1ecf200dbcb86846cd5ec09f9f3ac", "message": "HHH-14212 revert back HHH-8776 (retaining testing case)", "committedDate": "2020-09-21T16:49:51Z", "type": "commit"}, {"oid": "311c18097f55a3cd724e32ef1801d8c0d1a0a7df", "url": "https://github.com/hibernate/hibernate-orm/commit/311c18097f55a3cd724e32ef1801d8c0d1a0a7df", "message": "HHH-14212 fix Fetch Graph by simply returning false in TwoPhaseLoad#getOverridingEager() when Fetch Graph is being enforced", "committedDate": "2020-09-21T16:49:51Z", "type": "commit"}, {"oid": "311c18097f55a3cd724e32ef1801d8c0d1a0a7df", "url": "https://github.com/hibernate/hibernate-orm/commit/311c18097f55a3cd724e32ef1801d8c0d1a0a7df", "message": "HHH-14212 fix Fetch Graph by simply returning false in TwoPhaseLoad#getOverridingEager() when Fetch Graph is being enforced", "committedDate": "2020-09-21T16:49:51Z", "type": "forcePushed"}]}