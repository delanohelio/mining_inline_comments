{"pr_number": 3491, "pr_title": "HHH-14137 Empty String check performance improvements", "pr_createdAt": "2020-08-03T17:50:07Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3491", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MjkyMw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3491#discussion_r465292923", "bodyText": "This used to be null safe and is not anymore. I would keep the null safe behavior just to be sure.", "author": "gsmet", "createdAt": "2020-08-04T19:52:23Z", "path": "hibernate-core/src/main/java/org/hibernate/cfg/Ejb3Column.java", "diffHunk": "@@ -566,7 +566,7 @@ public void forceNotNull() {\n \t\t\t\t\t}\n \n \t\t\t\t\tfinal String columnName;\n-\t\t\t\t\tif ( \"\".equals( col.name() ) ) {\n+\t\t\t\t\tif ( col.name().isEmpty() ) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MzAxOA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3491#discussion_r465293018", "bodyText": "Same here.", "author": "gsmet", "createdAt": "2020-08-04T19:52:33Z", "path": "hibernate-core/src/main/java/org/hibernate/cfg/Ejb3JoinColumn.java", "diffHunk": "@@ -367,7 +367,7 @@ public static Ejb3JoinColumn buildJoinColumn(\n \t\t\t}\n \n \t\t\tfinal String name;\n-\t\t\tif ( \"\".equals( colName ) ) {\n+\t\t\tif ( colName.isEmpty() ) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MzExNg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3491#discussion_r465293116", "bodyText": "Same here.", "author": "gsmet", "createdAt": "2020-08-04T19:52:46Z", "path": "hibernate-core/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java", "diffHunk": "@@ -1458,7 +1458,7 @@ else if ( anyAnn != null ) {\n \t\t\t\t\tConstraintMode foreignKeyValue = joinTableAnn.inverseForeignKey().value();\n \t\t\t\t\tif ( joinTableAnn.inverseJoinColumns().length != 0 ) {\n \t\t\t\t\t\tfinal JoinColumn joinColumnAnn = joinTableAnn.inverseJoinColumns()[0];\n-\t\t\t\t\t\tif ( \"\".equals( foreignKeyName ) ) {\n+\t\t\t\t\t\tif ( foreignKeyName.isEmpty() ) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MzQzNQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3491#discussion_r465293435", "bodyText": "I would add parentheses here around the condition just to be safe.", "author": "gsmet", "createdAt": "2020-08-04T19:53:25Z", "path": "hibernate-core/src/main/java/org/hibernate/engine/internal/JoinSequence.java", "diffHunk": "@@ -334,9 +334,9 @@ else if ( needsTableGroupJoin( joins, withClauseFragment ) ) {\n \t\t\t\t\t\tjoin.getAlias(),\n \t\t\t\t\t\tenabledFilters\n \t\t\t\t);\n-\t\t\t\tcondition = \"\".equals( manyToManyFilter )\n+\t\t\t\tcondition = manyToManyFilter != null && manyToManyFilter.isEmpty()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MzQ3NQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3491#discussion_r465293475", "bodyText": "Same here.", "author": "gsmet", "createdAt": "2020-08-04T19:53:31Z", "path": "hibernate-core/src/main/java/org/hibernate/engine/internal/JoinSequence.java", "diffHunk": "@@ -334,9 +334,9 @@ else if ( needsTableGroupJoin( joins, withClauseFragment ) ) {\n \t\t\t\t\t\tjoin.getAlias(),\n \t\t\t\t\t\tenabledFilters\n \t\t\t\t);\n-\t\t\t\tcondition = \"\".equals( manyToManyFilter )\n+\t\t\t\tcondition = manyToManyFilter != null && manyToManyFilter.isEmpty()\n \t\t\t\t\t\t? on\n-\t\t\t\t\t\t: \"\".equals( on ) ? manyToManyFilter : on + \" and \" + manyToManyFilter;\n+\t\t\t\t\t\t: on != null && on.isEmpty() ? manyToManyFilter : on + \" and \" + manyToManyFilter;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5Mzc4NQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3491#discussion_r465293785", "bodyText": "Not null safe anymore but I suppose it can't happen considering the line before.", "author": "gsmet", "createdAt": "2020-08-04T19:54:08Z", "path": "hibernate-core/src/main/java/org/hibernate/hql/internal/ast/util/SyntheticAndFactory.java", "diffHunk": "@@ -147,7 +147,7 @@ public void addDiscriminatorWhereFragment(\n \t\t\tMap enabledFilters,\n \t\t\tString alias) {\n \t\tString whereFragment = persister.filterFragment( alias, enabledFilters ).trim();\n-\t\tif ( \"\".equals( whereFragment ) ) {\n+\t\tif ( whereFragment.isEmpty() ) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MzkxNw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3491#discussion_r465293917", "bodyText": "Same here about the parenthesis.", "author": "gsmet", "createdAt": "2020-08-04T19:54:23Z", "path": "hibernate-core/src/main/java/org/hibernate/loader/OuterJoinableAssociation.java", "diffHunk": "@@ -193,9 +193,9 @@ public boolean isManyToManyWith(OuterJoinableAssociation other) {\n \n \tpublic void addManyToManyJoin(JoinFragment outerjoin, QueryableCollection collection) throws MappingException {\n \t\tString manyToManyFilter = collection.getManyToManyFilterFragment( rhsAlias, enabledFilters );\n-\t\tString condition = \"\".equals( manyToManyFilter )\n+\t\tString condition = manyToManyFilter != null && manyToManyFilter.isEmpty()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5Mzk3Ng==", "url": "https://github.com/hibernate/hibernate-orm/pull/3491#discussion_r465293976", "bodyText": "and here too", "author": "gsmet", "createdAt": "2020-08-04T19:54:30Z", "path": "hibernate-core/src/main/java/org/hibernate/loader/OuterJoinableAssociation.java", "diffHunk": "@@ -193,9 +193,9 @@ public boolean isManyToManyWith(OuterJoinableAssociation other) {\n \n \tpublic void addManyToManyJoin(JoinFragment outerjoin, QueryableCollection collection) throws MappingException {\n \t\tString manyToManyFilter = collection.getManyToManyFilterFragment( rhsAlias, enabledFilters );\n-\t\tString condition = \"\".equals( manyToManyFilter )\n+\t\tString condition = manyToManyFilter != null && manyToManyFilter.isEmpty()\n \t\t\t\t? on\n-\t\t\t\t: \"\".equals( on )\n+\t\t\t\t: on != null && on.isEmpty()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5NDI3Nw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3491#discussion_r465294277", "bodyText": "Let's keep the null safe behavior here.", "author": "gsmet", "createdAt": "2020-08-04T19:55:06Z", "path": "hibernate-envers/src/main/java/org/hibernate/envers/configuration/internal/metadata/CollectionMetadataGenerator.java", "diffHunk": "@@ -553,7 +553,7 @@ else if ( mapKeyEnumType != null ) {\n \t\t\t\tfinal IdMappingData referencedIdMapping = mainGenerator.getEntitiesConfigurations()\n \t\t\t\t\t\t.get( referencedEntityName ).getIdMappingData();\n \t\t\t\tfinal int currentIndex = queryGeneratorBuilder == null ? 0 : queryGeneratorBuilder.getCurrentIndex();\n-\t\t\t\tif ( \"\".equals( mapKey ) ) {\n+\t\t\t\tif ( mapKey.isEmpty() ) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "eecbfd044e7004546f77711d3df6fff006e15772", "url": "https://github.com/hibernate/hibernate-orm/commit/eecbfd044e7004546f77711d3df6fff006e15772", "message": "HHH-14137 Empty String check performance improvements", "committedDate": "2020-08-04T20:41:23Z", "type": "commit"}, {"oid": "eecbfd044e7004546f77711d3df6fff006e15772", "url": "https://github.com/hibernate/hibernate-orm/commit/eecbfd044e7004546f77711d3df6fff006e15772", "message": "HHH-14137 Empty String check performance improvements", "committedDate": "2020-08-04T20:41:23Z", "type": "forcePushed"}]}