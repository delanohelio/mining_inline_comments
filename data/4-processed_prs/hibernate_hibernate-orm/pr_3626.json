{"pr_number": 3626, "pr_title": "HHH-14315 Upgrade to Gradle 6.7 and use toolchains for per-JDK builds", "pr_createdAt": "2020-11-09T16:37:58Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3626", "timeline": [{"oid": "e56ce94f2c4886479654e88d2fb47df72557d514", "url": "https://github.com/hibernate/hibernate-orm/commit/e56ce94f2c4886479654e88d2fb47df72557d514", "message": "HHH-14315 Upgrade to Gradle 6.7\n\nSigned-off-by: Yoann Rodi\u00e8re <yoann@hibernate.org>", "committedDate": "2020-11-10T07:39:26Z", "type": "commit"}, {"oid": "95f482146983471ad4aa6c9c098b162963a10949", "url": "https://github.com/hibernate/hibernate-orm/commit/95f482146983471ad4aa6c9c098b162963a10949", "message": "HHH-14315 Add optional support for toolchains to the Gradle build\n\nSigned-off-by: Yoann Rodi\u00e8re <yoann@hibernate.org>", "committedDate": "2020-11-10T07:39:26Z", "type": "commit"}, {"oid": "73d0801a7aebcff105855477e81e160e745376b0", "url": "https://github.com/hibernate/hibernate-orm/commit/73d0801a7aebcff105855477e81e160e745376b0", "message": "HHH-14315 Force JVM options when using toolchains\n\nApparently Gradle won't just use the same options as in its own JVM.\n\nSigned-off-by: Yoann Rodi\u00e8re <yoann@hibernate.org>", "committedDate": "2020-11-10T07:39:26Z", "type": "commit"}, {"oid": "73d0801a7aebcff105855477e81e160e745376b0", "url": "https://github.com/hibernate/hibernate-orm/commit/73d0801a7aebcff105855477e81e160e745376b0", "message": "HHH-14315 Force JVM options when using toolchains\n\nApparently Gradle won't just use the same options as in its own JVM.\n\nSigned-off-by: Yoann Rodi\u00e8re <yoann@hibernate.org>", "committedDate": "2020-11-10T07:39:26Z", "type": "forcePushed"}, {"oid": "4182ec5d55479c075f2d2d00cca0cc26828cf070", "url": "https://github.com/hibernate/hibernate-orm/commit/4182ec5d55479c075f2d2d00cca0cc26828cf070", "message": "HHH-14315 Upgrade Travis build to OpenJDK 11.0.9\n\nFor some reason the gradle build gets stuck at task\n:hibernate-core:compileTestJava when using OpenJDK 11.0.3.\nI can't reproduce the problem with 11.0.9, though, so it's probably a\nbug in OpenJDK 11.0.3.\n\nSigned-off-by: Yoann Rodi\u00e8re <yoann@hibernate.org>", "committedDate": "2020-11-10T10:10:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ2ODA1OQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3626#discussion_r520468059", "bodyText": "just wondering, was it necessary to remove these?", "author": "Sanne", "createdAt": "2020-11-10T10:50:35Z", "path": "gradle/java-module.gradle", "diffHunk": "@@ -112,17 +112,72 @@ dependencies {\n \n tasks.withType( JavaCompile ) {\n \toptions.encoding = 'UTF-8'\n-\tsourceCompatibility = project.baselineJavaVersion", "originalCommit": "4182ec5d55479c075f2d2d00cca0cc26828cf070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ3MzAxNg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3626#discussion_r520473016", "bodyText": "I didn't remove these, I just moved them further below. We can't use sourceCompatibility and such when toolchains are enabled, so I needed an if block.", "author": "yrodiere", "createdAt": "2020-11-10T10:58:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ2ODA1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ2OTE0NA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3626#discussion_r520469144", "bodyText": "hu?? Have a pointer about what kinds of things it needs doing?", "author": "Sanne", "createdAt": "2020-11-10T10:52:13Z", "path": "settings.gradle", "diffHunk": "@@ -13,35 +13,79 @@ if ( !JavaVersion.current().java8Compatible ) {\n     throw new GradleException( \"Gradle must be run with Java 8 or later\" )\n }\n \n-// Consume the property 'testedJavaVersion' here and\n-// set it on gradle.ext so that we can inspect the result in build.gradle.\n-// We wouldn't be able to do that if we consumed\n-// the property in base-information.gradle and set it on project.ext.\n-\n-if ( hasProperty( 'testedJavaVersion' ) ) {\n-    logger.warn( \"[WARN] Targeting Java version '$testedJavaVersion' in tests.\" )\n-    gradle.ext.testedJavaVersion = testedJavaVersion\n-    gradle.ext.testedJavaVersionAsEnum = JavaVersion.toVersion( testedJavaVersion )\n-}\n-else {\n-    // We will simply use Gradle's JDK for compilation, tests and javadoc generation.\n-    def major\n-    if ( JavaVersion.current() == JavaVersion.VERSION_HIGHER) {\n-        logger.warn( \"Gradle does not support this JDK, because it is too recent; build is likely to fail.\" +\n-                \" To avoid failures, you should specify an older Java version in the 'testedJavaVersion' parameter.\" +\n-                \" Just append the following to your gradle command:\" +\n-                \" '-PtestedJavaVersion=<major version of your newer JDK, e.g. 14>'\" )\n-        // Use a hack to retrieve the major as a string.\n-        // This only works for Java 9+ (we're at least on Java 18 here).\n-        gradle.ext.testedJavaVersion = System.getProperty( 'java.specification.version' )\n+gradle.ext.baselineJavaVersion = JavaLanguageVersion.of( 8 )\n+\n+// Gradle does bytecode transformation on tests.", "originalCommit": "4182ec5d55479c075f2d2d00cca0cc26828cf070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ3MTc3Mg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3626#discussion_r520471772", "bodyText": "Not really, but you can try setting the max supported version to 16 and running the build on 16: you'll see errors related to \"incompatible major.minor\" pop up, originating from Gradle.\nMaybe Gradle just inspects the bytecode, I don't know. But it definitely is sensitive to the bytecode version.", "author": "yrodiere", "createdAt": "2020-11-10T10:56:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ2OTE0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ3MjYwMA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3626#discussion_r520472600", "bodyText": "ok, thanks.", "author": "Sanne", "createdAt": "2020-11-10T10:57:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ2OTE0NA=="}], "type": "inlineReview"}]}