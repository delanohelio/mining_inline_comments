{"pr_number": 3477, "pr_title": "HHH-14113 Entity Graph attribute resolution not based on selected entity", "pr_createdAt": "2020-07-22T22:59:27Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3477", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg3MDM0Mg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3477#discussion_r460870342", "bodyText": "I noticed there seems to be some additional issue here. So from the HQL it seems the result should be a list of Set<Group>, but the real result is a list of Group. Is that a bug?", "author": "NathanQingyangXu", "createdAt": "2020-07-27T12:58:17Z", "path": "hibernate-core/src/test/java/org/hibernate/jpa/test/graphs/EntityGraphAttributeResolutionTest.java", "diffHunk": "@@ -0,0 +1,254 @@\n+package org.hibernate.jpa.test.graphs;\n+\n+import java.util.Arrays;\n+import java.util.EnumSet;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import javax.persistence.CollectionTable;\n+import javax.persistence.ElementCollection;\n+import javax.persistence.Entity;\n+import javax.persistence.EntityGraph;\n+import javax.persistence.EntityManager;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToMany;\n+import javax.persistence.NamedAttributeNode;\n+import javax.persistence.NamedEntityGraph;\n+import javax.persistence.Table;\n+\n+import org.hibernate.graph.GraphSemantic;\n+import org.hibernate.jpa.test.BaseEntityManagerFunctionalTestCase;\n+\n+import org.hibernate.testing.TestForIssue;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+\n+/**\n+ * @author Benjamin M.\n+ * @author Nathan Xu\n+ */\n+@TestForIssue( jiraKey = \"HHH-14113\" )\n+public class EntityGraphAttributeResolutionTest extends BaseEntityManagerFunctionalTestCase {\n+\n+\tprivate User u;\n+\tprivate Group g1, g2;\n+\n+\t@Override\n+\tprotected Class<?>[] getAnnotatedClasses() {\n+\t\treturn new Class[] { User.class, Group.class };\n+\t}\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tEntityManager em = getOrCreateEntityManager();\n+\t\tem.getTransaction().begin();\n+\n+\t\tg1 = new Group();\n+\t\tg1.addPermission( Permission.BAR );\n+\t\tem.persist( g1 );\n+\n+\t\tg2 = new Group();\n+\t\tg2.addPermission( Permission.BAZ );\n+\t\tem.persist( g2 );\n+\n+\t\tu = new User();\n+\t\tem.persist( u );\n+\t\tu.addGroup( g1 );\n+\t\tu.addGroup( g2 );\n+\n+\t\tem.getTransaction().commit();\n+\t}\n+\n+\t@Test\n+\tpublic void fetchAssocWithNamedFetchGraph() {\n+\t\tEntityManager em = getOrCreateEntityManager();\n+\t\tList result = em.createQuery( \"SELECT u.groups FROM User u WHERE u.id = ?1\" )\n+\t\t\t\t.setParameter(1, u.getId() )\n+\t\t\t\t.setHint( GraphSemantic.FETCH.getJpaHintName(), em.getEntityGraph( Group.ENTITY_GRAPH ) )\n+\t\t\t\t.getResultList();\n+\n+\t\tassertEquals( Arrays.asList( g1, g2 ), result );", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4ODk2OQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3477#discussion_r460888969", "bodyText": "You are mixing things up. When encountering a path expression that ends on a non-basic typed attribute, it is implicit joined. So the query would be equivalent to the following SELECT g FROM User u JOIN u.groups g WHERE u.id = ?1", "author": "beikov", "createdAt": "2020-07-27T13:28:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg3MDM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5OTI3NQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3477#discussion_r460899275", "bodyText": "thanks for clarification. my knowledge gap here.", "author": "NathanQingyangXu", "createdAt": "2020-07-27T13:43:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg3MDM0Mg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "35ca367a0585ef331087309d9b0e5294cac65c7b", "url": "https://github.com/hibernate/hibernate-orm/commit/35ca367a0585ef331087309d9b0e5294cac65c7b", "message": "HHH-14113 Entity Graph attribute resolution not based on selected entity", "committedDate": "2020-07-29T19:38:00Z", "type": "commit"}, {"oid": "35ca367a0585ef331087309d9b0e5294cac65c7b", "url": "https://github.com/hibernate/hibernate-orm/commit/35ca367a0585ef331087309d9b0e5294cac65c7b", "message": "HHH-14113 Entity Graph attribute resolution not based on selected entity", "committedDate": "2020-07-29T19:38:00Z", "type": "forcePushed"}]}