{"pr_number": 3227, "pr_title": "HHH-13853 - Pass the merged Integration settings and Persistence Unit properties to buildBootstrapServiceRegistry", "pr_createdAt": "2020-02-07T14:58:30Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3227", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzMTk0Ng==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380631946", "bodyText": "I do not think it is so simple as adding to a map the integrationSettings and then persistenceUnit.getProperties(), see MergedSettings creation at https://github.com/hibernate/hibernate-orm/pull/3227/files#diff-c1662f25d34183e3651ada18824bbd27R216", "author": "dreab8", "createdAt": "2020-02-18T12:07:57Z", "path": "hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/EntityManagerFactoryBuilderImpl.java", "diffHunk": "@@ -196,8 +196,19 @@ private EntityManagerFactoryBuilderImpl(\n \t\t\tintegrationSettings = Collections.emptyMap();\n \t\t}\n \n+\t\tMap mergedIntegrationSettings = null;\n+\t\tProperties properties = persistenceUnit.getProperties();\n+\t\tif ( properties != null ) {\n+\t\t\tmergedIntegrationSettings = new HashMap( integrationSettings );\n+\t\t\tmergedIntegrationSettings.putAll( persistenceUnit.getProperties() );\n+\t\t}\n+", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY3NTAxNg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380675016", "bodyText": "@dreab8 The goal of this change is to allow the Persistence Unit properties to be passed to the BootstrapServiceRegistry creation process.\nThe MergedSettings object requires the BootstrapServiceRegistry instance, hence this change. So, you cannot create a MergedSettings without a BootstrapServiceRegistry.\nBut the goal of this PR is not to provide all possible settings to the BootstrapServiceRegistry, as the  `MergedSettings does. You only need the JPA properties as they are the typical way of configuring a JPA application.\nAlso, this change does not impact how the MergedSettings is used. It just provides more info to the BootstrapServiceRegistry, and the temporary mergedIntegrationSettings is never used after the BootstrapServiceRegistry instance gets created.\nAll in all, I think this is safe to be integrated, having a test case that proves the fix, and all other tests have run successfully too.", "author": "vladmihalcea", "createdAt": "2020-02-18T13:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcwNjE3Mg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380706172", "bodyText": "I didn't want to say that you have to use MergedSettings but that it is an example showing that the logic is not so easy in case of values that are presents in both integrationSettings and persistenceUnit.getProperties() .\nIn your solution the properties of PersistenceUnitDescriptor override the integrationSettings ones and I think this is not correct.", "author": "dreab8", "createdAt": "2020-02-18T14:29:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcxMzAzMg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380713032", "bodyText": "That's a good observation. I could initialize the new Map using the persistenceUnit.getProperties() and call putAll using the integrationSettings, as these are provided at bootstrap time, and should take precedence.\nShould I refactor it like this?", "author": "vladmihalcea", "createdAt": "2020-02-18T14:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgxOTEyNQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380819125", "bodyText": "I rebased the changes according to your suggestion.", "author": "vladmihalcea", "createdAt": "2020-02-18T17:20:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyNDI3OA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380824278", "bodyText": "Awesome!", "author": "sebersole", "createdAt": "2020-02-18T17:30:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyOTUyMA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380829520", "bodyText": "thanks @vladmihalcea", "author": "dreab8", "createdAt": "2020-02-18T17:39:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzOTM5Nw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380839397", "bodyText": "The more complex merging that Andrea is talking about (I think) is more about, e.g., JDBC config from integrationSettings ought to override not just JDBC config from PU properties - it should also override datasource config from the PU properties.  I can't say whether those more complete overriding is needed here - probably not", "author": "sebersole", "createdAt": "2020-02-18T17:58:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzMTk0Ng=="}], "type": "inlineReview"}, {"oid": "0ca1464ca52200ea49bc10ec2b3c4ab3575ef97c", "url": "https://github.com/hibernate/hibernate-orm/commit/0ca1464ca52200ea49bc10ec2b3c4ab3575ef97c", "message": "HHH-13853 - Pass the merged Integration settings and Persistence Unit properties to buildBootstrapServiceRegistry", "committedDate": "2020-02-18T16:33:27Z", "type": "commit"}, {"oid": "0ca1464ca52200ea49bc10ec2b3c4ab3575ef97c", "url": "https://github.com/hibernate/hibernate-orm/commit/0ca1464ca52200ea49bc10ec2b3c4ab3575ef97c", "message": "HHH-13853 - Pass the merged Integration settings and Persistence Unit properties to buildBootstrapServiceRegistry", "committedDate": "2020-02-18T16:33:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzMTk1Mg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380831952", "bodyText": "I think at least we can reuse properties at the above statement to improve code readability a little bit.\nif (properties != null ) {\n    mergedIntegrationSettings = new HashMap( properties );\n    ... ...\n}", "author": "NathanQingyangXu", "createdAt": "2020-02-18T17:44:17Z", "path": "hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/EntityManagerFactoryBuilderImpl.java", "diffHunk": "@@ -196,8 +196,19 @@ private EntityManagerFactoryBuilderImpl(\n \t\t\tintegrationSettings = Collections.emptyMap();\n \t\t}\n \n+\t\tMap mergedIntegrationSettings = null;\n+\t\tProperties properties = persistenceUnit.getProperties();\n+\t\tif ( properties != null ) {\n+\t\t\tmergedIntegrationSettings = new HashMap( persistenceUnit.getProperties() );", "originalCommit": "0ca1464ca52200ea49bc10ec2b3c4ab3575ef97c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg0MDk4Mg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380840982", "bodyText": "+1 good catch", "author": "sebersole", "createdAt": "2020-02-18T18:01:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzMTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg0NDk4NQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380844985", "bodyText": "@NathanQingyangXu do you want to create a PR for that since it was your catch?", "author": "sebersole", "createdAt": "2020-02-18T18:08:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzMTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3NDQ4OQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380874489", "bodyText": "There is another subtle bug that if the passed 'integrationSettings' is null the entries from PU might be added to Collections.emptyMap() ending up with UnsupportedOperationException.\nYeah, I am gonna create a PR to fix all such issues.", "author": "NathanQingyangXu", "createdAt": "2020-02-18T19:05:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzMTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg4MDM2Mg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3227#discussion_r380880362", "bodyText": "PR created at: #3246. It might be a little bit aggressive, but I do think we can improve code readability besides fixing a subtle potential bug.", "author": "NathanQingyangXu", "createdAt": "2020-02-18T19:17:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzMTk1Mg=="}], "type": "inlineReview"}]}