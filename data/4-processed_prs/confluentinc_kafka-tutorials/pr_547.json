{"pr_number": 547, "pr_title": "Add new tutorial - Kafka version of  Count messages in a topic", "pr_createdAt": "2020-09-21T16:45:23Z", "pr_url": "https://github.com/confluentinc/kafka-tutorials/pull/547", "timeline": [{"oid": "42147b5675640c94f021651fa9bf1f89bfe8d44a", "url": "https://github.com/confluentinc/kafka-tutorials/commit/42147b5675640c94f021651fa9bf1f89bfe8d44a", "message": "Add ksqlDB tutorial - count messages in a topic", "committedDate": "2020-09-17T20:58:26Z", "type": "commit"}, {"oid": "b19172e4e6c60554f669ef519d1046c78628bda9", "url": "https://github.com/confluentinc/kafka-tutorials/commit/b19172e4e6c60554f669ef519d1046c78628bda9", "message": "Fix problem with ksqlDB test runner stderr getting lost", "committedDate": "2020-09-17T21:22:09Z", "type": "commit"}, {"oid": "72c3e765349daececbe088fc8d59807cee2a8cb9", "url": "https://github.com/confluentinc/kafka-tutorials/commit/72c3e765349daececbe088fc8d59807cee2a8cb9", "message": "Merge branch 'master' into gh261", "committedDate": "2020-09-21T13:58:36Z", "type": "commit"}, {"oid": "94e3fc27caf1c21422d4abd20b82b9b72bc4fde9", "url": "https://github.com/confluentinc/kafka-tutorials/commit/94e3fc27caf1c21422d4abd20b82b9b72bc4fde9", "message": "Add new tutorial - Count messages with kafkacat", "committedDate": "2020-09-21T16:43:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcyNDA2NA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/547#discussion_r493724064", "bodyText": "For your consideration - it's not obvious from the rendered formatting that users can click on here, so maybe change to make it more obvious  but I don't have a better suggestion", "author": "bbejeck", "createdAt": "2020-09-23T16:21:10Z", "path": "_includes/tutorials/count-messages/ksql/markup/dev/03d-count-all-messages-pageview.adoc", "diffHunk": "@@ -0,0 +1,15 @@\n+Now let's count all of the messages in the topic: \n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/count-messages/ksql/code/tutorial-steps/dev/03d-count-all-messages-pageview.sql %}</code></pre>\n++++++\n+\n+We're specifying a `LIMIT 1` clause here so that the query exits after the first row has returned. Without this, ksqlDB will continue to write any changes in the count to the screen as new messages arrive. \n+\n+You should now see a count of all the messages in the topic: \n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/count-messages/ksql/code/tutorial-steps/dev/03d-count-all-messages-pageview.out %}</code></pre>\n++++++\n+\n+NOTE: _You may be wondering about the purpose of `X` in the query. It's a dummy field to pursuade ksqlDB to do an aggregation across all messages. You can read more about this https://github.com/confluentinc/ksql/issues/430[here]_.", "originalCommit": "94e3fc27caf1c21422d4abd20b82b9b72bc4fde9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMwODQ5MQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/547#discussion_r494308491", "bodyText": "fixed. thanks.", "author": "rmoff", "createdAt": "2020-09-24T13:17:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcyNDA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczMjcyNA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/547#discussion_r493732724", "bodyText": "I'm not sure if it fits with this tutorial but we've updated the existing files in the harness directory to add this extra step\nccloud:\n  steps:\n    - title: Run your app to Confluent Cloud\n      content:\n        - action: skip\n          render:\n            file: shared/markup/ccloud/try-ccloud.adoc", "author": "bbejeck", "createdAt": "2020-09-23T16:34:27Z", "path": "_data/harnesses/count-messages/ksql.yml", "diffHunk": "@@ -0,0 +1,120 @@\n+dev:\n+  steps:\n+    - title: Initialize the project\n+      content:\n+        - action: execute\n+          file: tutorial-steps/dev/01a-init.sh\n+          render:\n+            file: tutorials/count-messages/ksql/markup/dev/01a-init.adoc\n+\n+        - action: execute\n+          file: tutorial-steps/dev/01b-make-dirs.sh\n+          render:\n+            file: tutorials/count-messages/ksql/markup/dev/01b-make-dirs.adoc\n+\n+    - title: Get Confluent Platform\n+      content:\n+        - action: make_file\n+          file: docker-compose.yml\n+          render:\n+            file: tutorials/count-messages/ksql/markup/dev/02a-make-docker-compose.adoc\n+\n+        - action: execute\n+          file: tutorial-steps/dev/02b-docker-compose-up.sh\n+          render:\n+            file: tutorials/count-messages/ksql/markup/dev/02b-start-compose.adoc\n+\n+        - action: execute\n+          file: tutorial-steps/dev/02c-wait-for-containers.sh\n+          render:\n+            file: tutorials/count-messages/ksql/markup/dev/02c-wait-for-containers.adoc\n+\n+    - title: Launch the ksqlDB CLI and declare a stream\n+      content:\n+        - action: docker_ksql_cli_session\n+          container: ksqldb\n+          docker_bootup_file: tutorial-steps/dev/03a-start-ksqldb-cli.sh\n+          column_width: 24\n+          render:\n+            file: tutorials/count-messages/ksql/markup/dev/03a-start-ksqldb-cli.adoc\n+          stdin:\n+            - file: tutorial-steps/dev/03b-declare-pageview-stream.sql\n+              render:\n+                file: tutorials/count-messages/ksql/markup/dev/03b-declare-pageview-stream.adoc\n+\n+          stdout:\n+            directory: tutorial-steps/dev/outputs\n+\n+    - title: Count all the messages in a topic\n+      content:\n+        - action: docker_ksql_cli_session\n+          container: ksqldb\n+          docker_bootup_file: tutorial-steps/dev/03a-start-ksqldb-cli.sh\n+          column_width: 24\n+          render:\n+            skip: true\n+          stdin:\n+\n+            - file: tutorial-steps/dev/03c-set-offset-earliest.sql\n+              render:\n+                file: tutorials/count-messages/ksql/markup/dev/03c-set-offset-earliest.adoc\n+                \n+            - file: tutorial-steps/dev/03d-count-all-messages-pageview.sql\n+              render:\n+                file: tutorials/count-messages/ksql/markup/dev/03d-count-all-messages-pageview.adoc\n+\n+            - file: tutorial-steps/dev/04a-build-table.sql\n+              render:\n+                file: tutorials/count-messages/ksql/markup/dev/04a-build-table.adoc\n+            - file: tutorial-steps/dev/04b-push-query-table.sql\n+              render:\n+                file: tutorials/count-messages/ksql/markup/dev/empty.adoc\n+            - file: tutorial-steps/dev/04c-pull-query-table.sql\n+              render:\n+                file: tutorials/count-messages/ksql/markup/dev/04c-pull-query-table.adoc\n+          stdout:\n+            directory: tutorial-steps/dev/outputs\n+\n+    - title: Query the number of messages using the REST API\n+      content:\n+        - action: execute\n+          file: tutorial-steps/dev/05a-pull-query-restapi.sh\n+          render:\n+            file: tutorials/count-messages/ksql/markup/dev/05a-pull-query-restapi.adoc\n+          stdout: tutorial-steps/dev/outputs/05a-pull-query-restapi.log\n+          \n+    - title: Write your statements to a file\n+      content:\n+        - action: make_file\n+          file: src/statements.sql\n+          render:\n+            file: tutorials/count-messages/ksql/markup/dev/07a-make-src-file.adoc\n+\n+test:\n+  steps:\n+    - title: Create the test data\n+      content:\n+        - action: make_file\n+          file: test/input.json\n+          render:\n+            file: tutorials/count-messages/ksql/markup/test/00-make-test-input.adoc\n+\n+        - action: make_file\n+          file: test/output.json\n+          render:\n+            file: tutorials/count-messages/ksql/markup/test/01-make-test-output.adoc\n+\n+    - title: Invoke the tests\n+      content:\n+        - action: execute\n+          file: tutorial-steps/test/02-run-tests.sh\n+          stdout: tutorial-steps/test/outputs/test-results.log\n+          render:\n+            file: tutorials/count-messages/ksql/markup/test/02-run-tests.adoc\n+\n+    - title: Clean up\n+      content:\n+        - action: execute\n+          file: tutorial-steps/test/03-clean-up.sh\n+          render:\n+            file: tutorials/count-messages/ksql/markup/test/03-clean-up.adoc", "originalCommit": "94e3fc27caf1c21422d4abd20b82b9b72bc4fde9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczNzYwOQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/547#discussion_r493737609", "bodyText": "For your consideration - render the command for waiting as you did in the ksqlDB version.\nI needed to run the kafkacat command twice the first time I got this\nERROR: Topic pageviews error: Broker: Unknown topic or partition\n       0\n\nI realize it's a very minor point.", "author": "bbejeck", "createdAt": "2020-09-23T16:42:12Z", "path": "_data/harnesses/count-messages/kafka.yml", "diffHunk": "@@ -0,0 +1,55 @@\n+dev:\n+  steps:\n+    - title: Initialize the project\n+      content:\n+        - action: execute\n+          file: tutorial-steps/dev/01a-init.sh\n+          render:\n+            file: tutorials/count-messages/kafka/markup/dev/01a-init.adoc\n+\n+    - title: Get Confluent Platform\n+      content:\n+        - action: make_file\n+          file: docker-compose.yml\n+          render:\n+            file: tutorials/count-messages/kafka/markup/dev/02a-make-docker-compose.adoc\n+\n+        - action: execute\n+          file: tutorial-steps/dev/02b-docker-compose-up.sh\n+          render:\n+            file: tutorials/count-messages/kafka/markup/dev/02b-start-compose.adoc\n+\n+        - action: execute\n+          file: tutorial-steps/dev/02c-wait-for-containers.sh\n+          render:\n+            skip: true", "originalCommit": "94e3fc27caf1c21422d4abd20b82b9b72bc4fde9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMxNTMwMA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/547#discussion_r494315300", "bodyText": "Good catch. I've added the instruction in.", "author": "rmoff", "createdAt": "2020-09-24T13:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczNzYwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczOTU3Ng==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/547#discussion_r493739576", "bodyText": "Great description of using kafkacat!", "author": "bbejeck", "createdAt": "2020-09-23T16:45:28Z", "path": "_includes/tutorials/count-messages/kafka/markup/dev/03a-count-messages.adoc", "diffHunk": "@@ -0,0 +1,25 @@\n+You can count the number of messages in a Kafka topic simply by consuming the entire topic and counting how many messages are read. \n+\n+To do this from the commandline you can use the https://github.com/edenhill/kafkacat[`kafkacat`] tool which can act as a consumer (and producer) and is built around the https://en.wikipedia.org/wiki/Pipeline_(Unix)[Unix philosophy of pipelines]. This means that you can pipe the output (messages) from kafkacat into another tool to count the number of messages.\n+\n++++++\n+<pre class=\"snippet\"><code class=\"shell\">{% include_raw tutorials/count-messages/kafka/code/tutorial-steps/dev/03a-count-messages.sh %}</code></pre>\n++++++\n+\n++++++\n+<pre class=\"snippet\"><code class=\"shell\">{% include_raw tutorials/count-messages/kafka/code/tutorial-steps/dev/03a-count-messages.out %}</code></pre>\n++++++\n+\n+Let's take a close look at the commandline soup we've used here to count the messages. \n+\n+* `docker exec kafkacat` runs the following command with its arguments in the Docker container called `kafkacat`", "originalCommit": "94e3fc27caf1c21422d4abd20b82b9b72bc4fde9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cf81107a19499d82f93d355acaf79227d1766892", "url": "https://github.com/confluentinc/kafka-tutorials/commit/cf81107a19499d82f93d355acaf79227d1766892", "message": "Merge branch 'master' into gh261-kafka", "committedDate": "2020-09-24T13:03:28Z", "type": "commit"}, {"oid": "02be7b8ee78e4c4890d5fc66bca0a89d58e62d87", "url": "https://github.com/confluentinc/kafka-tutorials/commit/02be7b8ee78e4c4890d5fc66bca0a89d58e62d87", "message": "Improve link legibility", "committedDate": "2020-09-24T13:17:16Z", "type": "commit"}, {"oid": "77723e3cbebd8124b85bea66257991eebb29c6fd", "url": "https://github.com/confluentinc/kafka-tutorials/commit/77723e3cbebd8124b85bea66257991eebb29c6fd", "message": "Add visual rendering of requirement to wait for components to start", "committedDate": "2020-09-24T13:26:34Z", "type": "commit"}]}