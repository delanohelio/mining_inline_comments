{"pr_number": 665, "pr_title": "GH-411: Adds a multi-way join tutorial", "pr_createdAt": "2020-12-09T20:08:21Z", "pr_url": "https://github.com/confluentinc/kafka-tutorials/pull/665", "timeline": [{"oid": "4ee0c7b02df1fb50edfec0e9eabe3265bd00c608", "url": "https://github.com/confluentinc/kafka-tutorials/commit/4ee0c7b02df1fb50edfec0e9eabe3265bd00c608", "message": "GH-411: Initial add for multi-joins ksqldb tutorial", "committedDate": "2020-12-09T20:05:15Z", "type": "commit"}, {"oid": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "url": "https://github.com/confluentinc/kafka-tutorials/commit/9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "message": "GH-411: Complete multi-way join tutorial", "committedDate": "2020-12-09T20:05:15Z", "type": "commit"}, {"oid": "f2f867d273413dc705237e1ef12f4c32dd83ea35", "url": "https://github.com/confluentinc/kafka-tutorials/commit/f2f867d273413dc705237e1ef12f4c32dd83ea35", "message": "GH-411: Move multi-way join to join data category", "committedDate": "2020-12-09T21:18:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0OTcxMg==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539649712", "bodyText": "@rspurgeon would you consider adding a Short Answer to this KT? (e.g. https://kafka-tutorials.confluent.io/create-stateful-aggregation-count/ksql.html)", "author": "ybyzek", "createdAt": "2020-12-09T21:10:10Z", "path": "_data/harnesses/multi-joins/ksql.yml", "diffHunk": "@@ -0,0 +1,132 @@\n+dev:", "originalCommit": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4MDE1MQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539680151", "bodyText": "added in latest", "author": "rspurgeon", "createdAt": "2020-12-09T22:00:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0OTcxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0OTk4OQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539649989", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              question: \"How can I join multiple streams or tables of data together using a single expression in ksqlDB?\"\n          \n          \n            \n              question: \"How can I join multiple streams or tables together using a single expression?\"\n          \n      \n    \n    \n  \n\nRemoving ksqlDB because a Kafka Streams example could come later", "author": "ybyzek", "createdAt": "2020-12-09T21:10:35Z", "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+multi-joins:\n+  title: \"Multi-join expressions\"\n+  meta-description: \"Learn how to collapse multiple joins into a single statement with ksqlDB\"\n+  slug: \"/multi-joins\"\n+  question: \"How can I join multiple streams or tables of data together using a single expression in ksqlDB?\"", "originalCommit": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MDc0OA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539650748", "bodyText": "@rspurgeon great intro to setup the context", "author": "ybyzek", "createdAt": "2020-12-09T21:11:53Z", "path": "_includes/tutorials/multi-joins/ksql/markup/dev/start-cli.adoc", "diffHunk": "@@ -0,0 +1,7 @@\n+To create our application, we'll first model some input data to mimic an online store. We will then use the ksqlDB multi-join feature to create a https://docs.ksqldb.io/en/latest/#what-are-the-components-of-ksqldb[Stream] of orders enriched with data from the inputs.", "originalCommit": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MTUzNw==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539651537", "bodyText": "Is it significant that these are all 1 partition?  If yes, please explain why.  If no, consider omitting to make the example simpler.", "author": "ybyzek", "createdAt": "2020-12-09T21:13:14Z", "path": "_includes/tutorials/multi-joins/ksql/markup/dev/create-inputs-customers.adoc", "diffHunk": "@@ -0,0 +1,6 @@\n+First let's create an input https://docs.ksqldb.io/en/latest/concepts/collections/#tables[Table] of customer data which will hold data in JSON format over 1 partition:", "originalCommit": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2MDYyOA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539660628", "bodyText": "removed in latest", "author": "rspurgeon", "createdAt": "2020-12-09T21:27:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MTUzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MjM2NA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539652364", "bodyText": "It may be worth pointing out that this stream contains fields shared by the other two previously created tables.", "author": "ybyzek", "createdAt": "2020-12-09T21:14:33Z", "path": "_includes/tutorials/multi-joins/ksql/markup/dev/create-inputs-orders.adoc", "diffHunk": "@@ -0,0 +1,6 @@\n+Next we create a stream containing orders submitted to our online store, also formatted in JSON.", "originalCommit": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2MTkyMA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539661920", "bodyText": "You mean fields that are related?", "author": "rspurgeon", "createdAt": "2020-12-09T21:29:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MjM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MzI0Ng==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539653246", "bodyText": "It would be helpful to differentiate the values in items and customers, instead of both having sample data 1, 2, 3....maybe make items be something else, like 101, 102, 103?", "author": "ybyzek", "createdAt": "2020-12-09T21:16:02Z", "path": "_includes/tutorials/multi-joins/ksql/code/tutorial-steps/dev/populate-table-items.sql", "diffHunk": "@@ -0,0 +1,3 @@\n+INSERT INTO items VALUES ('1', 'Television 60-in');", "originalCommit": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3OTk0Ng==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539679946", "bodyText": "changed in latest", "author": "rspurgeon", "createdAt": "2020-12-09T21:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MzI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1NDA2MQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539654061", "bodyText": "This section is quite big.  It would help to split this up maybe into two separate parts:\n\nCreating the streams/tables and inserting values\nCreating the multi-way joined stream uses common SQL join syntax.", "author": "ybyzek", "createdAt": "2020-12-09T21:17:15Z", "path": "_data/harnesses/multi-joins/ksql.yml", "diffHunk": "@@ -0,0 +1,132 @@\n+dev:\n+  steps:\n+    - title: Initialize the project\n+      content:\n+        - action: execute\n+          file: tutorial-steps/dev/init.sh\n+          render:\n+            file: tutorials/multi-joins/ksql/markup/dev/init.adoc\n+\n+        - change_directory: multi-joins\n+          action: execute\n+          file: tutorial-steps/dev/make-dirs.sh\n+          render:\n+            file: tutorials/multi-joins/ksql/markup/dev/make-dirs.adoc\n+\n+    - title: Get Confluent Platform\n+      content:\n+        - action: make_file\n+          file: docker-compose.yml\n+          render:\n+            file: tutorials/multi-joins/ksql/markup/dev/make-docker-compose.adoc\n+\n+        - action: execute_async\n+          file: tutorial-steps/dev/docker-compose-up.sh\n+          render:\n+            file: tutorials/multi-joins/ksql/markup/dev/start-compose.adoc\n+\n+        - action: execute\n+          file: tutorial-steps/dev/wait-for-containers.sh\n+          render:\n+            skip: true\n+\n+    - title: Write the program interactively using the CLI", "originalCommit": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1MTIzNQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r541051235", "bodyText": "+1 on breaking up this section", "author": "bbejeck", "createdAt": "2020-12-11T16:00:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1NDA2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1OTExMQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r541059111", "bodyText": "I'm not sure how to break up into sections.   What should be the values of a new \"title\" for content.action, docker_bootup_file_render, etc...?\n      - title: Create the multi-way join\n        content:\n        - action: docker_ksql_cli_session\n          container: ksqldb-cli\n          docker_bootup_file: tutorial-steps/dev/start-cli.sh\n          column_width: 17\n          render:\n            file: tutorials/multi-joins/ksql/markup/dev/start-cli.adoc\n          stdin:", "author": "rspurgeon", "createdAt": "2020-12-11T16:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1NDA2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA2ODM0NQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r541068345", "bodyText": "I think I may have figured out my questions, please review the latest @bbejeck & @ybyzek", "author": "rspurgeon", "createdAt": "2020-12-11T16:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1NDA2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1NDgyOA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539654828", "bodyText": "Is it helpful to explain what LEFT JOIN is?  Or link out to something else that does explain it?", "author": "ybyzek", "createdAt": "2020-12-09T21:18:32Z", "path": "_includes/tutorials/multi-joins/ksql/code/src/statements.sql", "diffHunk": "@@ -0,0 +1,22 @@\n+CREATE TABLE customers (customerid STRING PRIMARY KEY, customername STRING)\n+    WITH (KAFKA_TOPIC='customers',\n+          VALUE_FORMAT='json',\n+          PARTITIONS=1);\n+\n+CREATE TABLE items (itemid STRING PRIMARY KEY, itemname STRING)\n+    WITH (KAFKA_TOPIC='items',\n+          VALUE_FORMAT='json',\n+          PARTITIONS=1);\n+\n+CREATE STREAM orders (orderid STRING KEY, customerid STRING, itemid STRING, purchasedate STRING)\n+    WITH (KAFKA_TOPIC='orders',\n+          VALUE_FORMAT='json',\n+          PARTITIONS=1);\n+\n+CREATE STREAM orders_enriched AS \n+  SELECT customers.customerid AS customerid, customers.customername AS customername, \n+         orders.orderid, orders.purchasedate,\n+         items.itemid, items.itemname\n+  FROM orders \n+  LEFT JOIN customers on orders.customerid = customers.customerid ", "originalCommit": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3MTUyMw==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539671523", "bodyText": "I included a link in the tutorial to the ksqldb docs on joins: \"See the ksqlDB documentation for the full details on joins\".\nIMO getting into the anatomy of joins in the text of the tutorial seems out of scope for this 'lesson', but just an opinion.   Does that link help?", "author": "rspurgeon", "createdAt": "2020-12-09T21:45:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1NDgyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1NTQ4OA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539655488", "bodyText": "Any reason why this was mentioned?  If so, please explain...otherwise it might appear out of place", "author": "ybyzek", "createdAt": "2020-12-09T21:19:33Z", "path": "_includes/tutorials/multi-joins/ksql/markup/dev/print-topic.adoc", "diffHunk": "@@ -0,0 +1,13 @@\n+Finally, let's see what's available on the underlying Kafka topic for the new stream. We can print that out easily.\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/multi-joins/ksql/code/tutorial-steps/dev/print-topic.sql %}</code></pre>\n++++++\n+\n+Notice that the key for each message includes not just the enriched order data, but also the rowtime of the records. It should look something like this:", "originalCommit": "9b3003c4a3f2ffe4461fc6f32e002183e6890bc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3OTgyMA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539679820", "bodyText": "changed this in latest to discuss why the item id is the key of the resulting topic records", "author": "rspurgeon", "createdAt": "2020-12-09T21:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1NTQ4OA=="}], "type": "inlineReview"}, {"oid": "6069f9d324b3f6f9c605b231441425b6dfe5d380", "url": "https://github.com/confluentinc/kafka-tutorials/commit/6069f9d324b3f6f9c605b231441425b6dfe5d380", "message": "PR Feedback\n\nCo-authored-by: Yeva Byzek <ybyzek@users.noreply.github.com>", "committedDate": "2020-12-09T21:20:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1NzA0MQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r539657041", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Then we insert some orders which contain a unique order id, a customer id, an item id, and a purchase date:\n          \n          \n            \n            Then we insert some orders.  Each order contains a unique order id, a customer id, an item id, and a purchase date:", "author": "ybyzek", "createdAt": "2020-12-09T21:22:07Z", "path": "_includes/tutorials/multi-joins/ksql/markup/dev/populate-stream-orders.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Then we insert some orders which contain a unique order id, a customer id, an item id, and a purchase date:", "originalCommit": "6069f9d324b3f6f9c605b231441425b6dfe5d380", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7e96736332bfbff4557afacc6b50d77feca93066", "url": "https://github.com/confluentinc/kafka-tutorials/commit/7e96736332bfbff4557afacc6b50d77feca93066", "message": "GH-411: Add Short Answer to multi-way join tutorial", "committedDate": "2020-12-09T21:23:59Z", "type": "commit"}, {"oid": "26600248a6a128c163d60724a3a683e3ab96d658", "url": "https://github.com/confluentinc/kafka-tutorials/commit/26600248a6a128c163d60724a3a683e3ab96d658", "message": "GH-411: PR Review feedback", "committedDate": "2020-12-09T21:25:53Z", "type": "commit"}, {"oid": "c14cfb30c3cb98710b5ec2f50c04fe62e1886b28", "url": "https://github.com/confluentinc/kafka-tutorials/commit/c14cfb30c3cb98710b5ec2f50c04fe62e1886b28", "message": "Merge upstream PR changes github.com:confluentinc/kafka-tutorials into GH-411", "committedDate": "2020-12-09T21:26:23Z", "type": "commit"}, {"oid": "c58fcb8ee557599330f0567ca83c12c689830b07", "url": "https://github.com/confluentinc/kafka-tutorials/commit/c58fcb8ee557599330f0567ca83c12c689830b07", "message": "PR Feedback\n\nCo-authored-by: Yeva Byzek <ybyzek@users.noreply.github.com>", "committedDate": "2020-12-09T21:28:40Z", "type": "commit"}, {"oid": "3d4ea2a69c0484d6f0958eaec166a8d6e75329df", "url": "https://github.com/confluentinc/kafka-tutorials/commit/3d4ea2a69c0484d6f0958eaec166a8d6e75329df", "message": "GH-411: Add short answer to multi-way join", "committedDate": "2020-12-09T21:34:11Z", "type": "commit"}, {"oid": "47c5e14777e8b4efd8b0803a5b8e91a8cae49803", "url": "https://github.com/confluentinc/kafka-tutorials/commit/47c5e14777e8b4efd8b0803a5b8e91a8cae49803", "message": "GH-411: multi-way joins change item ids for clarity", "committedDate": "2020-12-09T21:42:08Z", "type": "commit"}, {"oid": "ceb71f808d1436f19015576dbc55b59224170c31", "url": "https://github.com/confluentinc/kafka-tutorials/commit/ceb71f808d1436f19015576dbc55b59224170c31", "message": "GH-411: multi-way joins clarify topic data description", "committedDate": "2020-12-09T21:50:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1NDgyMQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r541054821", "bodyText": "nit: Exit the ksqlDB CLI by typing exit", "author": "bbejeck", "createdAt": "2020-12-11T16:06:23Z", "path": "_includes/tutorials/multi-joins/ksql/markup/dev/print-topic.adoc", "diffHunk": "@@ -0,0 +1,13 @@\n+Finally, let's see what's available on the underlying Kafka topic for the new stream. We can print that out easily.\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/multi-joins/ksql/code/tutorial-steps/dev/print-topic.sql %}</code></pre>\n++++++\n+\n++++++\n+<pre class=\"snippet\"><code class=\"shell\">{% include_raw tutorials/multi-joins/ksql/code/tutorial-steps/dev/expected-print-topic.log %}</code></pre>\n++++++\n+\n+Notice that the key for each message is the Item ID of the order.  This is the result of the join with the items table being the last join for our `CREATE STREAM` command. The key of the last join will become the key of the records in the underlying topic.\n+\n+Exit the ksqlDB CLI with `Ctrl-d`.", "originalCommit": "ceb71f808d1436f19015576dbc55b59224170c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA2MTEwNA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r541061104", "bodyText": "Updated in latest", "author": "rspurgeon", "createdAt": "2020-12-11T16:15:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1NDgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1NjAwMQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r541056001", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tbash -c \"diff --strip-trailing-cr <(sort <(cut -d ',' -f 2- $(STEPS_DIR)/dev/expected-print-topic.log)) <(sort <(cut -d ',' -f 2- $(DEV_OUTPUTS_DIR)/print-topic/output-0.log))\"\n          \n          \n            \n            \tbash -c \"diff --strip-trailing-cr <(sort <(cut -d ',' -f 2- $(STEPS_DIR)/dev/expected-print-topic.log)) <(sort <(cut -d ',' -f 2- $(DEV_OUTPUTS_DIR)/print-topic/output-0.log))\"\n          \n          \n            \n            \tbash -c \"diff --strip-trailing-cr <(sort $(STEPS_DIR)/test/expected-results.log) <(sort $(TEST_OUTPUTS_DIR)/test-results.log)\"\n          \n      \n    \n    \n  \n\nWould you mind adding a check against the testing section of this tutorial? (might need to double check that this is the same expected test + test results log file name and location)", "author": "awalther28", "createdAt": "2020-12-11T16:08:06Z", "path": "_includes/tutorials/multi-joins/ksql/code/Makefile", "diffHunk": "@@ -0,0 +1,16 @@\n+STEPS_DIR := tutorial-steps\n+DEV_OUTPUTS_DIR := $(STEPS_DIR)/dev/outputs\n+TEST_OUTPUTS_DIR := $(STEPS_DIR)/test/outputs\n+PROD_OUTPUTS_DIR := $(STEPS_DIR)/prod/outputs\n+TEMP_DIR := $(shell mktemp -d)\n+SEQUENCE := \"dev, test, prod, ccloud\"\n+\n+tutorial:\n+\trm -r $(DEV_OUTPUTS_DIR) || true\n+\trm -r $(TEST_OUTPUTS_DIR) || true\n+\tmkdir $(DEV_OUTPUTS_DIR)\n+\tmkdir -p $(TEST_OUTPUTS_DIR)\n+\tharness-runner ../../../../../_data/harnesses/multi-joins/ksql.yml $(TEMP_DIR) $(SEQUENCE)\n+\tdiff --strip-trailing-cr $(STEPS_DIR)/dev/expected-transient-query.log $(DEV_OUTPUTS_DIR)/transient-query/output-0.log\n+\tbash -c \"diff --strip-trailing-cr <(sort <(cut -d ',' -f 2- $(STEPS_DIR)/dev/expected-print-topic.log)) <(sort <(cut -d ',' -f 2- $(DEV_OUTPUTS_DIR)/print-topic/output-0.log))\"", "originalCommit": "ceb71f808d1436f19015576dbc55b59224170c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA2NDA5Nw==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/665#discussion_r541064097", "bodyText": "Thanks @awalther28 , I added your suggestion and verified the tests pass.  Thank you", "author": "rspurgeon", "createdAt": "2020-12-11T16:20:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1NjAwMQ=="}], "type": "inlineReview"}, {"oid": "449cd01676e36fce9b82388abf7e7fb31ed10b2a", "url": "https://github.com/confluentinc/kafka-tutorials/commit/449cd01676e36fce9b82388abf7e7fb31ed10b2a", "message": "GH-411: multi-way joins clarify cli exit cmd", "committedDate": "2020-12-11T16:14:52Z", "type": "commit"}, {"oid": "8e6780c479140469209f8a3aede44fca071377c8", "url": "https://github.com/confluentinc/kafka-tutorials/commit/8e6780c479140469209f8a3aede44fca071377c8", "message": "GH-411: Add validation of test results to multi-way join tutorial\n\nCo-authored-by: Allison Walther <12937975+awalther28@users.noreply.github.com>", "committedDate": "2020-12-11T16:19:58Z", "type": "commit"}, {"oid": "20f4596a2d9af06e319e3bdaef440a742c625363", "url": "https://github.com/confluentinc/kafka-tutorials/commit/20f4596a2d9af06e319e3bdaef440a742c625363", "message": "GH-411: multi-way joins breakup dev section", "committedDate": "2020-12-11T16:26:03Z", "type": "commit"}, {"oid": "283477fd981b7e966f4d79a700b0a476273c2d3a", "url": "https://github.com/confluentinc/kafka-tutorials/commit/283477fd981b7e966f4d79a700b0a476273c2d3a", "message": "GH-411: multi-way joins breakup dev section", "committedDate": "2020-12-11T19:54:08Z", "type": "commit"}]}