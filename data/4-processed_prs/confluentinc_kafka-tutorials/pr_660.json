{"pr_number": 660, "pr_title": "DEVX-2225: Convert column concatenation recipe to KT", "pr_createdAt": "2020-12-04T21:55:05Z", "pr_url": "https://github.com/confluentinc/kafka-tutorials/pull/660", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc0MTIwMQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537741201", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"\n          \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple columns\"", "author": "awalther28", "createdAt": "2020-12-07T18:44:33Z", "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+ksql-concatenation-columns:\n+  title: \"Column Concatenation\"\n+  meta-description: \"Column Concatenation\"\n+  slug: \"/concatenate-columns\"\n+  question: \"How do I concatenate values in multiple columns into a single one?\"\n+  introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1MzUxMA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537753510", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n          \n          \n            \n            Now we write a query to concatenate multiple columns. To achieve this, we will use the `+` operator between the fields in our `SELECT` statement rather than a comma.\n          \n      \n    \n    \n  \n\nReading through this a few times, I thought maybe it was talking about the output of the query being comma separated. Feel free to wordsmith different. I think it would be helpful here to say what you are trying to accomplish (column concat) and how you are doing that (+ instead of ,).", "author": "awalther28", "createdAt": "2020-12-07T19:02:01Z", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3ODQ5Mg==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538078492", "bodyText": "\u2795 to what @awalther28 wrote.  Explain what you're doing first (which fields, concat, why, etc)...then show.", "author": "ybyzek", "createdAt": "2020-12-08T06:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1MzUxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NDA0NQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537754045", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n          \n          \n            \n            Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causing them to get concatenated together.\n          \n      \n    \n    \n  \n\n^ If you don't move forward with my other suggestion, I think you meant 'causing'", "author": "awalther28", "createdAt": "2020-12-07T19:02:47Z", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NDY1MQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537754651", "bodyText": "What happens if you don't cast a field to a varchar?", "author": "awalther28", "createdAt": "2020-12-07T19:03:47Z", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMxNDU1NA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r541314554", "bodyText": "results in an error, I've updated the text to state as much", "author": "bbejeck", "createdAt": "2020-12-11T21:32:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NDY1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2MjYxMg==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537762612", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now that the reporting query works, let's update it to create a continous query for your reporting scenario\n          \n          \n            \n            Now that the reporting query works, let's update it to create a continuous query for your reporting scenario", "author": "awalther28", "createdAt": "2020-12-07T19:16:36Z", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types\n+\n+NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example\n+SELECT field_1, field_2, field_3 + field_4\n+\n+This query should produce the following output:\n+\n++++++\n+<pre class=\"snippet\"><code class=\"shell\">{% include_raw tutorials/ksql-concatenation-columns/ksql/code/tutorial-steps/dev/expected-transient-reporting.log %}</code></pre>\n++++++\n+\n+Now that the reporting query works, let's update it to create a continous query for your reporting scenario", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NDQ5Mw==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538074493", "bodyText": "@bbejeck all file names should not include ksql because later an equivalent tutorial could be written for KStreams.  So ksql-concatenation-columns --> concatenation-columns, etc", "author": "ybyzek", "createdAt": "2020-12-08T06:44:08Z", "path": ".semaphore/semaphore.yml", "diffHunk": "@@ -344,3 +344,7 @@ blocks:\n         - name: KSQL Time Concepts Tutorial tests\n           commands:\n             - make -C _includes/tutorials/time-concepts/ksql/code tutorial\n+        \n+        - name: KSQL Test ksqlDB concatenate columns tests\n+          commands:\n+            - make -C _includes/tutorials/ksql-concatenation-columns/ksql/code tutorial", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NDk5Mw==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538074993", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              question: \"How do I concatenate values in multiple columns into a single one?\"\n          \n          \n            \n              question: \"How do I concatenate values from multiple columns into a single one?\"", "author": "ybyzek", "createdAt": "2020-12-08T06:45:20Z", "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+ksql-concatenation-columns:\n+  title: \"Column Concatenation\"\n+  meta-description: \"Column Concatenation\"\n+  slug: \"/concatenate-columns\"\n+  question: \"How do I concatenate values in multiple columns into a single one?\"", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NTIzNQ==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538075235", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"\n          \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the concatenation operator to create a single value from multiple coolumns\"", "author": "ybyzek", "createdAt": "2020-12-08T06:45:55Z", "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+ksql-concatenation-columns:\n+  title: \"Column Concatenation\"\n+  meta-description: \"Column Concatenation\"\n+  slug: \"/concatenate-columns\"\n+  question: \"How do I concatenate values in multiple columns into a single one?\"\n+  introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NjA0Mg==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538076042", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Select the fields you want to combine and use the `+` operator to concatenate them together into one field:\n          \n          \n            \n            Select the fields you want to combine and use the `+` operator to concatenate them into one field:\n          \n      \n    \n    \n  \n\nIt is my understanding that concatenate doesn't need the word together (few instances of this usage in the KT)", "author": "ybyzek", "createdAt": "2020-12-08T06:47:55Z", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/answer/concatenation-answer.adoc", "diffHunk": "@@ -0,0 +1,7 @@\n+Select the fields you want to combine and use the `+` operator to concatenate them together into one field:", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NzMxMw==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538077313", "bodyText": "Is the sequencing right?  The topic hasn't been created yet (that's in the next step).\nWhat does \"no special structure\" mean?  Is there a more technical term that can be used?  (schemaless?)", "author": "ybyzek", "createdAt": "2020-12-08T06:51:14Z", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/create-financial-transaction-stream.adoc", "diffHunk": "@@ -0,0 +1,8 @@\n+The first thing we do is to create a stream `ACTIVITY_STREAM` based off the topic `stock_purchases`.  The data contained in the topic is just plain JSON, with no special structure.", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3OTM3Mg==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538079372", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example\n          \n          \n            \n            NOTE: You can also SELECT fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate.  For example, you can SELECT individual fields `field_1` and `field_2` at the same time that you concatenate `field_3` with `field_4`.", "author": "ybyzek", "createdAt": "2020-12-08T06:54:54Z", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types\n+\n+NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3OTUxMg==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538079512", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            SELECT field_1, field_2, field_3 + field_4\n          \n          \n            \n            `SELECT field_1, field_2, field_3 + field_4`", "author": "ybyzek", "createdAt": "2020-12-08T06:55:06Z", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types\n+\n+NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example\n+SELECT field_1, field_2, field_3 + field_4", "originalCommit": "4f918c7185296c80fa6552d272dc316c588b4d2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d3ffae6cdb6314a57de729be27c4e56f234d2a18", "url": "https://github.com/confluentinc/kafka-tutorials/commit/d3ffae6cdb6314a57de729be27c4e56f234d2a18", "message": "Updates per comments", "committedDate": "2020-12-11T22:13:32Z", "type": "forcePushed"}, {"oid": "468b3f2e1feea6a4ebd006a7bc3417fa1ded5159", "url": "https://github.com/confluentinc/kafka-tutorials/commit/468b3f2e1feea6a4ebd006a7bc3417fa1ded5159", "message": "re-commit after undoing a merge", "committedDate": "2020-12-14T15:07:57Z", "type": "commit"}, {"oid": "9497978f0547a7aa00b3e000c13433a011abe200", "url": "https://github.com/confluentinc/kafka-tutorials/commit/9497978f0547a7aa00b3e000c13433a011abe200", "message": "Updates per comments", "committedDate": "2020-12-14T15:10:56Z", "type": "commit"}, {"oid": "9497978f0547a7aa00b3e000c13433a011abe200", "url": "https://github.com/confluentinc/kafka-tutorials/commit/9497978f0547a7aa00b3e000c13433a011abe200", "message": "Updates per comments", "committedDate": "2020-12-14T15:10:56Z", "type": "forcePushed"}, {"oid": "00e906dffe6a9a6afb954a8208394d480b6ebe48", "url": "https://github.com/confluentinc/kafka-tutorials/commit/00e906dffe6a9a6afb954a8208394d480b6ebe48", "message": "fix from botched rebase", "committedDate": "2020-12-14T15:14:09Z", "type": "commit"}]}