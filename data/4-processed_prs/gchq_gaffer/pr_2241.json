{"pr_number": 2241, "pr_title": "Gh 2240 federated view validator bug", "pr_createdAt": "2020-02-11T20:31:20Z", "pr_url": "https://github.com/gchq/Gaffer/pull/2241", "timeline": [{"oid": "8655a1d8311a1591333c29b3ce45e612586c2530", "url": "https://github.com/gchq/Gaffer/commit/8655a1d8311a1591333c29b3ce45e612586c2530", "message": "gh-2240 FederatedViewValidator bug", "committedDate": "2020-02-10T16:32:15Z", "type": "commit"}, {"oid": "e9cad6da21d952dd947c3bfbf3a028d6fd37eb90", "url": "https://github.com/gchq/Gaffer/commit/e9cad6da21d952dd947c3bfbf3a028d6fd37eb90", "message": "gh-2240 FederatedViewValidator bug.", "committedDate": "2020-02-11T18:15:36Z", "type": "commit"}, {"oid": "77e7d114bbc36108d2c0baa4721d320afdc18dcb", "url": "https://github.com/gchq/Gaffer/commit/77e7d114bbc36108d2c0baa4721d320afdc18dcb", "message": "gh-2240 FederatedViewValidator removing dead code", "committedDate": "2020-02-12T16:07:40Z", "type": "commit"}, {"oid": "77e7d114bbc36108d2c0baa4721d320afdc18dcb", "url": "https://github.com/gchq/Gaffer/commit/77e7d114bbc36108d2c0baa4721d320afdc18dcb", "message": "gh-2240 FederatedViewValidator removing dead code", "committedDate": "2020-02-12T16:07:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2MDUzMA==", "url": "https://github.com/gchq/Gaffer/pull/2241#discussion_r378360530", "bodyText": "Couldn't you just add it to the validation result here?", "author": "d47853", "createdAt": "2020-02-12T16:21:49Z", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/schema/FederatedViewValidator.java", "diffHunk": "@@ -56,14 +61,38 @@ public ValidationResult validate(final View view, final Schema schema, final Set\n     }\n \n     protected ValidationResult getEdgeResult(final View view, final Schema schema, final Set<StoreTrait> storeTraits, final boolean isStoreOrdered) {\n-        final ValidationResult edgeResult = new ValidationResult();\n-        validateEdge(view, schema, storeTraits, isStoreOrdered, edgeResult);\n-        return edgeResult;\n+        final Function<Map.Entry<String, ViewElementDefinition>, ValidationResult> validationResultFunction = e -> {\n+            final ValidationResult singleResult = new ValidationResult();\n+            validateEdge(new View.Builder().edge(e.getKey(), e.getValue()).build(), schema, storeTraits, isStoreOrdered, singleResult);\n+            return singleResult;\n+        };\n+\n+        return getElementResult(validationResultFunction, view.getEdges());\n     }\n \n     protected ValidationResult getEntityResult(final View view, final Schema schema, final Set<StoreTrait> storeTraits, final boolean isStoreOrdered) {\n-        final ValidationResult entitiesResult = new ValidationResult();\n-        validateEntities(view, schema, storeTraits, isStoreOrdered, entitiesResult);\n-        return entitiesResult;\n+\n+        final Function<Map.Entry<String, ViewElementDefinition>, ValidationResult> validationResultFunction = e -> {\n+            final ValidationResult singleResult = new ValidationResult();\n+            validateEntities(new View.Builder().entity(e.getKey(), e.getValue()).build(), schema, storeTraits, isStoreOrdered, singleResult);\n+            return singleResult;\n+        };\n+        return getElementResult(validationResultFunction, view.getEntities());\n+    }\n+\n+    private ValidationResult getElementResult(final Function<Map.Entry<String, ViewElementDefinition>, ValidationResult> validationResultFunction, final Map<String, ViewElementDefinition> elements) {\n+        final ValidationResult rtn = new ValidationResult();\n+\n+        final List<ValidationResult> viewResults = elements.entrySet().stream()\n+                .map(validationResultFunction)\n+                .collect(Collectors.toList());", "originalCommit": "77e7d114bbc36108d2c0baa4721d320afdc18dcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk0NTYxMg==", "url": "https://github.com/gchq/Gaffer/pull/2241#discussion_r378945612", "bodyText": "No I don't want the errors if one is successful. So I got to check first, if all fail, then I add them to the return", "author": "GCHQDev404", "createdAt": "2020-02-13T15:47:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2MDUzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2MDc5NA==", "url": "https://github.com/gchq/Gaffer/pull/2241#discussion_r378360794", "bodyText": "elements is a little misleading - elementDefinitions may be more appropriate", "author": "d47853", "createdAt": "2020-02-12T16:22:14Z", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/schema/FederatedViewValidator.java", "diffHunk": "@@ -56,14 +61,38 @@ public ValidationResult validate(final View view, final Schema schema, final Set\n     }\n \n     protected ValidationResult getEdgeResult(final View view, final Schema schema, final Set<StoreTrait> storeTraits, final boolean isStoreOrdered) {\n-        final ValidationResult edgeResult = new ValidationResult();\n-        validateEdge(view, schema, storeTraits, isStoreOrdered, edgeResult);\n-        return edgeResult;\n+        final Function<Map.Entry<String, ViewElementDefinition>, ValidationResult> validationResultFunction = e -> {\n+            final ValidationResult singleResult = new ValidationResult();\n+            validateEdge(new View.Builder().edge(e.getKey(), e.getValue()).build(), schema, storeTraits, isStoreOrdered, singleResult);\n+            return singleResult;\n+        };\n+\n+        return getElementResult(validationResultFunction, view.getEdges());\n     }\n \n     protected ValidationResult getEntityResult(final View view, final Schema schema, final Set<StoreTrait> storeTraits, final boolean isStoreOrdered) {\n-        final ValidationResult entitiesResult = new ValidationResult();\n-        validateEntities(view, schema, storeTraits, isStoreOrdered, entitiesResult);\n-        return entitiesResult;\n+\n+        final Function<Map.Entry<String, ViewElementDefinition>, ValidationResult> validationResultFunction = e -> {\n+            final ValidationResult singleResult = new ValidationResult();\n+            validateEntities(new View.Builder().entity(e.getKey(), e.getValue()).build(), schema, storeTraits, isStoreOrdered, singleResult);\n+            return singleResult;\n+        };\n+        return getElementResult(validationResultFunction, view.getEntities());\n+    }\n+\n+    private ValidationResult getElementResult(final Function<Map.Entry<String, ViewElementDefinition>, ValidationResult> validationResultFunction, final Map<String, ViewElementDefinition> elements) {", "originalCommit": "77e7d114bbc36108d2c0baa4721d320afdc18dcb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "12532ab332d4f3c5390c2a8747226b936cdb737e", "url": "https://github.com/gchq/Gaffer/commit/12532ab332d4f3c5390c2a8747226b936cdb737e", "message": "gh-2240 pr change", "committedDate": "2020-02-13T15:47:51Z", "type": "commit"}]}