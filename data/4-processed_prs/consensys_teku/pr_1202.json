{"pr_number": 1202, "pr_title": "Change JsonProvider to be non static and use Jackson", "pr_createdAt": "2020-02-19T23:01:32Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1202", "timeline": [{"oid": "ebbcc3285bc7838e023633bfa389e8858d9fa70e", "url": "https://github.com/ConsenSys/teku/commit/ebbcc3285bc7838e023633bfa389e8858d9fa70e", "message": "create the jsonProvider as a Jackson object to ensure we're using the same mapper for the api results as for openApi.\n\nFixes:#1190\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-02-19T21:38:16Z", "type": "commit"}, {"oid": "fad255793756d3ff6a87d81131b175268ee285cd", "url": "https://github.com/ConsenSys/teku/commit/fad255793756d3ff6a87d81131b175268ee285cd", "message": "Merge remote-tracking branch 'upstream/master' into jacksonProvider", "committedDate": "2020-02-19T22:21:57Z", "type": "commit"}, {"oid": "b8280c3e7ad80f64b0f5e3cab702b2a054d47ae0", "url": "https://github.com/ConsenSys/teku/commit/b8280c3e7ad80f64b0f5e3cab702b2a054d47ae0", "message": "fixes\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-02-19T23:15:54Z", "type": "commit"}, {"oid": "e40d2be171f621e77c8032378ac4757150165363", "url": "https://github.com/ConsenSys/teku/commit/e40d2be171f621e77c8032378ac4757150165363", "message": "Merge remote-tracking branch 'upstream/master' into jacksonProvider", "committedDate": "2020-02-19T23:59:51Z", "type": "commit"}, {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec", "url": "https://github.com/ConsenSys/teku/commit/120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec", "message": "Merge remote-tracking branch 'upstream/master' into jacksonProvider\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>\n\n# Conflicts:\n#\tdata/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "committedDate": "2020-02-20T00:02:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjc1OA==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381616758", "bodyText": "sounds bad", "author": "macfarla", "createdAt": "2020-02-19T23:59:16Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "diffHunk": "@@ -59,9 +61,11 @@ public BeaconRestApi(\n         requestedPortNumber,\n         Javalin.create(\n             config -> {\n-              config.registerPlugin(new OpenApiPlugin(getOpenApiOptions()));\n+              config.registerPlugin(new OpenApiPlugin(getOpenApiOptions(new JsonProvider())));\n               config.defaultContentType = \"application/json\";\n             }));\n+    // TODO because of the static function in getOpenAiOptions, had to pass a new jsonProvider here,\n+    // which means we have 2 instances of the JsonProvider, not 1.", "originalCommit": "b8280c3e7ad80f64b0f5e3cab702b2a054d47ae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyNDI4Mg==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381624282", "bodyText": "it's not awful, but it could be cleaner. I had a go with fixing this with Adrian, but failed. i'll have another pass.", "author": "rolfyone", "createdAt": "2020-02-20T00:24:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjc1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyNzE5Mg==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381627192", "bodyText": "refactored the constructors to not cascade so that i can fix this issue.", "author": "rolfyone", "createdAt": "2020-02-20T00:34:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjc1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjg0Mw==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381616843", "bodyText": "stray comment", "author": "macfarla", "createdAt": "2020-02-19T23:59:38Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "diffHunk": "@@ -112,6 +119,8 @@ private static OpenApiOptions getOpenApiOptions() {\n                     .url(\"https://www.apache.org/licenses/LICENSE-2.0.html\"));\n     OpenApiOptions options =\n         new OpenApiOptions(applicationInfo)\n+            //            .jacksonMapper(factory.getObjectMapper())", "originalCommit": "b8280c3e7ad80f64b0f5e3cab702b2a054d47ae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMTEzNQ==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381621135", "bodyText": "good point - if you enable that, bad things happen :D", "author": "rolfyone", "createdAt": "2020-02-20T00:14:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjg0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODcyMw==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381618723", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void UnsignedLongShouldSerializeToJson() throws JsonProcessingException {\n          \n          \n            \n              public void unsignedLongShouldSerializeToJson() throws JsonProcessingException {", "author": "macfarla", "createdAt": "2020-02-20T00:05:52Z", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();\n+  private static final String Q = \"\\\"\";\n \n   @Test\n-  void beaconStateJsonTest() {\n+  public void bytes32ShouldSerializeToJsonAndBack() throws JsonProcessingException {\n+    Bytes32 data = Bytes32.random();\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(Q + data.toHexString().toLowerCase() + Q, serialized);\n+\n+    Bytes32 deserialize = jsonProvider.jsonToObject(serialized, Bytes32.class);\n+    assertEquals(data, deserialize);\n+  }\n+\n+  @Test\n+  public void UnsignedLongShouldSerializeToJson() throws JsonProcessingException {", "originalCommit": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODc2NA==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381618764", "bodyText": "why is this called Q", "author": "macfarla", "createdAt": "2020-02-20T00:06:00Z", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();\n+  private static final String Q = \"\\\"\";", "originalCommit": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODc5NA==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381618794", "bodyText": "private final", "author": "macfarla", "createdAt": "2020-02-20T00:06:06Z", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();", "originalCommit": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMTUzOQ==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381621539", "bodyText": "that'll be in a lot of places, i'll fix them.", "author": "rolfyone", "createdAt": "2020-02-20T00:15:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODc5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODk3Mg==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381618972", "bodyText": "prob can remove empty lines they aren't doing much", "author": "macfarla", "createdAt": "2020-02-20T00:06:45Z", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();\n+  private static final String Q = \"\\\"\";\n \n   @Test\n-  void beaconStateJsonTest() {\n+  public void bytes32ShouldSerializeToJsonAndBack() throws JsonProcessingException {\n+    Bytes32 data = Bytes32.random();\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(Q + data.toHexString().toLowerCase() + Q, serialized);\n+\n+    Bytes32 deserialize = jsonProvider.jsonToObject(serialized, Bytes32.class);\n+    assertEquals(data, deserialize);\n+  }\n+\n+  @Test\n+  public void UnsignedLongShouldSerializeToJson() throws JsonProcessingException {\n+    UnsignedLong data = DataStructureUtil.randomUnsignedLong(1111);\n+\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, data.toString());\n+  }\n+\n+  @Test\n+  public void vectorShouldSerializeToJson() throws JsonProcessingException {\n+    SSZVector<String> data = new SSZVector<String>(List.of(\"One\", \"Two\"), String.class);\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, \"[\" + Q + \"One\" + Q + \",\" + Q + \"Two\" + Q + \"]\");\n+  }\n+\n+  @Test\n+  public void stringShouldSerializeToJson() throws JsonProcessingException {\n+    JsonProvider provider = new JsonProvider();\n+", "originalCommit": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxOTAxNQ==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381619015", "bodyText": "prob can remove empty lines they aren't doing much", "author": "macfarla", "createdAt": "2020-02-20T00:06:53Z", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();\n+  private static final String Q = \"\\\"\";\n \n   @Test\n-  void beaconStateJsonTest() {\n+  public void bytes32ShouldSerializeToJsonAndBack() throws JsonProcessingException {\n+    Bytes32 data = Bytes32.random();\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(Q + data.toHexString().toLowerCase() + Q, serialized);\n+\n+    Bytes32 deserialize = jsonProvider.jsonToObject(serialized, Bytes32.class);\n+    assertEquals(data, deserialize);\n+  }\n+\n+  @Test\n+  public void UnsignedLongShouldSerializeToJson() throws JsonProcessingException {\n+    UnsignedLong data = DataStructureUtil.randomUnsignedLong(1111);\n+\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, data.toString());\n+  }\n+\n+  @Test\n+  public void vectorShouldSerializeToJson() throws JsonProcessingException {\n+    SSZVector<String> data = new SSZVector<String>(List.of(\"One\", \"Two\"), String.class);\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, \"[\" + Q + \"One\" + Q + \",\" + Q + \"Two\" + Q + \"]\");\n+  }\n+\n+  @Test\n+  public void stringShouldSerializeToJson() throws JsonProcessingException {\n+    JsonProvider provider = new JsonProvider();\n+\n+    String data = \"test\";\n+", "originalCommit": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMjM2Mg==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381622362", "bodyText": "that's an instance where i left the jsonProvider for no reason, i'll fix that too.", "author": "rolfyone", "createdAt": "2020-02-20T00:18:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxOTAxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxOTM5Mw==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381619393", "bodyText": "private final", "author": "macfarla", "createdAt": "2020-02-20T00:08:11Z", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconChainHeadHandlerTest.java", "diffHunk": "@@ -29,6 +29,7 @@\n import tech.pegasys.artemis.storage.ChainStorageClient;\n \n public class BeaconChainHeadHandlerTest {\n+  JsonProvider jsonProvider = new JsonProvider();", "originalCommit": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxOTQ4Mw==", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381619483", "bodyText": "private final", "author": "macfarla", "createdAt": "2020-02-20T00:08:27Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/VersionHandler.java", "diffHunk": "@@ -25,7 +25,12 @@\n \n public class VersionHandler implements Handler {\n \n+  public VersionHandler(JsonProvider jsonProvider) {\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n   public static final String ROUTE = \"/node/version/\";\n+  JsonProvider jsonProvider;", "originalCommit": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b525f7c9b6294e27a151e0144dec8f52ddbdbb43", "url": "https://github.com/ConsenSys/teku/commit/b525f7c9b6294e27a151e0144dec8f52ddbdbb43", "message": "Update data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java\n\nCo-Authored-By: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-20T00:14:44Z", "type": "commit"}, {"oid": "a2dc3ff74b9a33249cf70342d3b71551ec8d7113", "url": "https://github.com/ConsenSys/teku/commit/a2dc3ff74b9a33249cf70342d3b71551ec8d7113", "message": "changes per review comments.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-02-20T00:33:14Z", "type": "commit"}, {"oid": "063595153f8f803b5f529502f3f21886b4c1659c", "url": "https://github.com/ConsenSys/teku/commit/063595153f8f803b5f529502f3f21886b4c1659c", "message": "Merge remote-tracking branch 'origin/jacksonProvider' into jacksonProvider", "committedDate": "2020-02-20T00:33:32Z", "type": "commit"}, {"oid": "0890396d9b24c8627f3a67b6d0907d257a4d6140", "url": "https://github.com/ConsenSys/teku/commit/0890396d9b24c8627f3a67b6d0907d257a4d6140", "message": "Merge remote-tracking branch 'upstream/master' into jacksonProvider", "committedDate": "2020-02-20T01:38:13Z", "type": "commit"}, {"oid": "48bc579dcd9cbd91b9f47bcb6b6e6c799c5e90fa", "url": "https://github.com/ConsenSys/teku/commit/48bc579dcd9cbd91b9f47bcb6b6e6c799c5e90fa", "message": "acceptance test object needs jackson annotations\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-02-20T02:31:25Z", "type": "commit"}, {"oid": "9451d96be0ce9357f556ba3f78f59414e463c971", "url": "https://github.com/ConsenSys/teku/commit/9451d96be0ce9357f556ba3f78f59414e463c971", "message": "acceptance test object needs jackson annotations\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-02-20T03:02:20Z", "type": "commit"}, {"oid": "9bc6bf43d37ea1140ea2e829081deca09de5ec6b", "url": "https://github.com/ConsenSys/teku/commit/9bc6bf43d37ea1140ea2e829081deca09de5ec6b", "message": "spotless\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-02-20T03:06:44Z", "type": "commit"}, {"oid": "786bc355d18768af30af9fa0d9cc44588792dac0", "url": "https://github.com/ConsenSys/teku/commit/786bc355d18768af30af9fa0d9cc44588792dac0", "message": "Merge remote-tracking branch 'upstream/master' into jacksonProvider", "committedDate": "2020-02-20T03:07:15Z", "type": "commit"}]}