{"pr_number": 1516, "pr_title": "Modify allOf to capture all errors thrown by the futures", "pr_createdAt": "2020-04-01T02:22:36Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1516", "timeline": [{"oid": "750248183d0a3e38cc4b3d77d68753f95d0b6c9b", "url": "https://github.com/ConsenSys/teku/commit/750248183d0a3e38cc4b3d77d68753f95d0b6c9b", "message": "Modify allOf to capture all errors thrown by the futures, not just the first.", "committedDate": "2020-04-01T02:17:55Z", "type": "commit"}, {"oid": "02142b4425fc690e631138237a7bb105da2c8be5", "url": "https://github.com/ConsenSys/teku/commit/02142b4425fc690e631138237a7bb105da2c8be5", "message": "Add a success test.", "committedDate": "2020-04-01T02:22:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMyODA2MA==", "url": "https://github.com/ConsenSys/teku/pull/1516#discussion_r401328060", "bodyText": "lol", "author": "cemozerr", "createdAt": "2020-04-01T02:56:56Z", "path": "util/src/test/java/tech/pegasys/artemis/util/async/SafeFutureTest.java", "diffHunk": "@@ -485,6 +485,45 @@ public void fromRunnable_propagatesExceptionalResult() {\n     assertExceptionallyCompletedWith(future, error);\n   }\n \n+  @Test\n+  public void allOf_shouldAddAllSuppressedExceptions() {\n+    final Throwable error1 = new RuntimeException(\"Nope\");\n+    final Throwable error2 = new RuntimeException(\"Oh dear\");", "originalCommit": "02142b4425fc690e631138237a7bb105da2c8be5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMyODcyNA==", "url": "https://github.com/ConsenSys/teku/pull/1516#discussion_r401328724", "bodyText": "What makes the error1 the root cause here and not the error2?", "author": "cemozerr", "createdAt": "2020-04-01T02:59:36Z", "path": "util/src/test/java/tech/pegasys/artemis/util/async/SafeFutureTest.java", "diffHunk": "@@ -485,6 +485,45 @@ public void fromRunnable_propagatesExceptionalResult() {\n     assertExceptionallyCompletedWith(future, error);\n   }\n \n+  @Test\n+  public void allOf_shouldAddAllSuppressedExceptions() {\n+    final Throwable error1 = new RuntimeException(\"Nope\");\n+    final Throwable error2 = new RuntimeException(\"Oh dear\");\n+    final SafeFuture<Void> future1 = new SafeFuture<>();\n+    final SafeFuture<Void> future2 = new SafeFuture<>();\n+    final SafeFuture<Void> future3 = new SafeFuture<>();\n+\n+    final SafeFuture<Void> result = SafeFuture.allOf(future1, future2, future3);\n+    assertThat(result).isNotDone();\n+\n+    future2.completeExceptionally(error2);\n+    assertThat(result).isNotDone();\n+\n+    future3.complete(null);\n+    assertThat(result).isNotDone();\n+\n+    future1.completeExceptionally(error1);\n+\n+    assertThat(result).isCompletedExceptionally();\n+    assertThatThrownBy(result::join).hasSuppressedException(error2);\n+    assertThatThrownBy(result::join).hasRootCause(error1);", "originalCommit": "02142b4425fc690e631138237a7bb105da2c8be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMyOTgwMw==", "url": "https://github.com/ConsenSys/teku/pull/1516#discussion_r401329803", "bodyText": "Just the way CompletableFuture works.  I was expecting error2 as well to be honest.", "author": "ajsutton", "createdAt": "2020-04-01T03:04:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMyODcyNA=="}], "type": "inlineReview"}]}