{"pr_number": 2663, "pr_title": "[Issue-2608] Rework hot state checkpoint selection", "pr_createdAt": "2020-08-26T22:41:49Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2663", "timeline": [{"oid": "d4558b6c79e7e99483759017c6db1ed42dedb1fd", "url": "https://github.com/ConsenSys/teku/commit/d4558b6c79e7e99483759017c6db1ed42dedb1fd", "message": "Rework hot state checkpoint selection", "committedDate": "2020-08-26T22:23:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzgxNTM1Nw==", "url": "https://github.com/ConsenSys/teku/pull/2663#discussion_r477815357", "bodyText": "Probably more understandable written as:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .map(e -> e.dividedBy(n))\n          \n          \n            \n                    .map(parentEpoch -> getEpoch(blockRoot).dividedBy(n).isGreaterThan(parentEpoch))\n          \n          \n            \n                    .map(parentEpoch -> getEpoch(blockRoot).dividedBy(n).isGreaterThan(parentEpoch.dividedBy(n)))\n          \n      \n    \n    \n  \n\nOtherwise parentEpoch is a misleading name and it's hard to see the symmetry of dividing both epochs.", "author": "ajsutton", "createdAt": "2020-08-27T00:51:34Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/store/BlockTree.java", "diffHunk": "@@ -89,19 +89,22 @@ public boolean contains(final Bytes32 blockRoot) {\n   }\n \n   /**\n-   * Returns true if the block root is at an internal epoch boundary. The rootHash is not considered\n-   * an epoch boundary. A block is at an epoch boundary if it is the first block within an epoch.\n+   * Returns true if the block root is at an epoch boundary where the epoch boundary spanned by this\n+   * block is a multiple of n. The rootHash is not considered an epoch boundary. A block is at an\n+   * epoch boundary if it is the first block at or after an epoch start slot.\n    *\n    * @param blockRoot The block root to check.\n    * @return True if the block root is at an internal epoch boundary.\n    */\n-  public boolean isRootAtEpochBoundary(Bytes32 blockRoot) {\n+  public boolean isRootAtNthEpochBoundary(Bytes32 blockRoot, final int n) {\n+    checkArgument(n > 0, \"Parameter n must be greater than 0\");\n     assertBlockIsInTree(blockRoot);\n     return hashTree\n         .getParent(blockRoot)\n         .filter(this::contains)\n         .map(this::getEpoch)\n-        .map(parentEpoch -> getEpoch(blockRoot).isGreaterThan(parentEpoch))\n+        .map(e -> e.dividedBy(n))\n+        .map(parentEpoch -> getEpoch(blockRoot).dividedBy(n).isGreaterThan(parentEpoch))", "originalCommit": "d4558b6c79e7e99483759017c6db1ed42dedb1fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f8f82c37440a76b9c7a986d6ca811d39e8fb0d79", "url": "https://github.com/ConsenSys/teku/commit/f8f82c37440a76b9c7a986d6ca811d39e8fb0d79", "message": "Clarify epoch boundary calculation", "committedDate": "2020-08-27T16:46:45Z", "type": "commit"}, {"oid": "7f0984a9d9e9c5ac70c74cbc60fa796bd69b8869", "url": "https://github.com/ConsenSys/teku/commit/7f0984a9d9e9c5ac70c74cbc60fa796bd69b8869", "message": "Merge branch 'master' into issue-2608/tweak-hot-state-selection", "committedDate": "2020-08-27T16:47:07Z", "type": "commit"}]}