{"pr_number": 1523, "pr_title": "added data backed integration tests for GetCommittees.", "pr_createdAt": "2020-04-02T05:31:18Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1523", "timeline": [{"oid": "f6055058c1108c4bafed2a6b2c128e30b048a3b6", "url": "https://github.com/ConsenSys/teku/commit/f6055058c1108c4bafed2a6b2c128e30b048a3b6", "message": "added data back integration tests for GetCommittees.\n\nFixed committees retrieval when block is missing from a slot.\n\nPartially addresses #1473\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-04-02T05:30:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NDI0Mg==", "url": "https://github.com/ConsenSys/teku/pull/1523#discussion_r402064242", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              void shouldGetCommitteesAtFutureEpochWhenBlockIsMissing() throws Exception {\n          \n          \n            \n              void shouldGetNotFoundAtFutureEpochWhenBlockIsMissing() throws Exception {", "author": "macfarla", "createdAt": "2020-04-02T05:45:10Z", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetCommitteesWithDataIntegrationTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_NOT_FOUND;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import okhttp3.Response;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.api.schema.Committee;\n+import tech.pegasys.artemis.beaconrestapi.AbstractDataBackedRestAPIIntegrationTest;\n+import tech.pegasys.artemis.beaconrestapi.RestApiConstants;\n+import tech.pegasys.artemis.beaconrestapi.handlers.beacon.GetCommittees;\n+\n+public class GetCommitteesWithDataIntegrationTest extends AbstractDataBackedRestAPIIntegrationTest {\n+\n+  public static final UnsignedLong TWENTY = UnsignedLong.valueOf(20L);\n+  public static final UnsignedLong SIXTEEN = UnsignedLong.valueOf(16L);\n+  public static final UnsignedLong TWENTY_FOUR = UnsignedLong.valueOf(24L);\n+\n+  @Test\n+  void shouldGetCommitteesAtCurrentEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(2);\n+    assertThat(result.get(0).slot).isEqualTo(SIXTEEN);\n+  }\n+\n+  @Test\n+  void shouldGetCommitteesAtNextEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(3);\n+    assertThat(result.get(0).slot).isEqualTo(TWENTY_FOUR);\n+  }\n+\n+  @Test\n+  void shouldGetCommitteesAtFutureEpochWhenBlockIsMissing() throws Exception {", "originalCommit": "f6055058c1108c4bafed2a6b2c128e30b048a3b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NjQyOQ==", "url": "https://github.com/ConsenSys/teku/pull/1523#discussion_r402066429", "bodyText": "actually isn't the \"when block is missing\" bit irrelevant - block will always be missing for future epoch, right?", "author": "macfarla", "createdAt": "2020-04-02T05:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NDI0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MTY3OA==", "url": "https://github.com/ConsenSys/teku/pull/1523#discussion_r402581678", "bodyText": "yep fair point", "author": "rolfyone", "createdAt": "2020-04-02T20:09:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NDI0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NDkyMA==", "url": "https://github.com/ConsenSys/teku/pull/1523#discussion_r402064920", "bodyText": "would it be clearer if instead of sixteen we had requestedEpoch * slots_per_epoch", "author": "macfarla", "createdAt": "2020-04-02T05:47:38Z", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetCommitteesWithDataIntegrationTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_NOT_FOUND;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import okhttp3.Response;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.api.schema.Committee;\n+import tech.pegasys.artemis.beaconrestapi.AbstractDataBackedRestAPIIntegrationTest;\n+import tech.pegasys.artemis.beaconrestapi.RestApiConstants;\n+import tech.pegasys.artemis.beaconrestapi.handlers.beacon.GetCommittees;\n+\n+public class GetCommitteesWithDataIntegrationTest extends AbstractDataBackedRestAPIIntegrationTest {\n+\n+  public static final UnsignedLong TWENTY = UnsignedLong.valueOf(20L);\n+  public static final UnsignedLong SIXTEEN = UnsignedLong.valueOf(16L);\n+  public static final UnsignedLong TWENTY_FOUR = UnsignedLong.valueOf(24L);\n+\n+  @Test\n+  void shouldGetCommitteesAtCurrentEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(2);\n+    assertThat(result.get(0).slot).isEqualTo(SIXTEEN);", "originalCommit": "f6055058c1108c4bafed2a6b2c128e30b048a3b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc6bb41369b8e56c9fa8bee0c7affad6618c3508", "url": "https://github.com/ConsenSys/teku/commit/fc6bb41369b8e56c9fa8bee0c7affad6618c3508", "message": "changes from review feedback.\n\nMoved hissing state test into the data backed tests.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-04-02T20:49:30Z", "type": "commit"}, {"oid": "ab5128c77275c511b447c9ff1b8dba4b9643b3d5", "url": "https://github.com/ConsenSys/teku/commit/ab5128c77275c511b447c9ff1b8dba4b9643b3d5", "message": "Merge remote-tracking branch 'upstream/master' into 1473-committees", "committedDate": "2020-04-02T21:35:39Z", "type": "commit"}, {"oid": "80e01d540f9b2ad8eff13c141b70f2648e36cabe", "url": "https://github.com/ConsenSys/teku/commit/80e01d540f9b2ad8eff13c141b70f2648e36cabe", "message": "spotless\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-04-02T22:01:30Z", "type": "commit"}]}