{"pr_number": 3139, "pr_title": "Enable different modes for performance tracking", "pr_createdAt": "2020-11-03T20:17:09Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3139", "timeline": [{"oid": "c909ddc8c8c9aa433ed7f664e79f685eb8d8d384", "url": "https://github.com/ConsenSys/teku/commit/c909ddc8c8c9aa433ed7f664e79f685eb8d8d384", "message": "Enable different modes for performance tracking", "committedDate": "2020-11-03T20:16:12Z", "type": "commit"}, {"oid": "f979096b698acb738bd40f523b7226c57431c8c5", "url": "https://github.com/ConsenSys/teku/commit/f979096b698acb738bd40f523b7226c57431c8c5", "message": "Run spotless", "committedDate": "2020-11-03T20:17:24Z", "type": "commit"}, {"oid": "cdd9527277e8f5674d90eb5a2ea1ed4b0e586a98", "url": "https://github.com/ConsenSys/teku/commit/cdd9527277e8f5674d90eb5a2ea1ed4b0e586a98", "message": "Explicitly pass mode to tracker", "committedDate": "2020-11-03T20:31:53Z", "type": "commit"}, {"oid": "a604f83de3b08b8a24181abd3400376eb237aa33", "url": "https://github.com/ConsenSys/teku/commit/a604f83de3b08b8a24181abd3400376eb237aa33", "message": "Fix unit tests", "committedDate": "2020-11-03T20:48:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MTI0MQ==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517081241", "bodyText": "I don't think this should be two different options.  Ultimately I think we want ``--validators-performance-tracking-modewhich can be one ofNONE`, `LOGGING`, `METRICS` or `ALL`.  We don't want to break backwards compatibility though so I'd keep `--validators-perforamance-tracking-enabled` but hide it, make it a `Boolean` with default `null` and then when it's set false makes the mode `NONE` and true makes it `ALL`.\nAnd I'd keep the default mode as ALL so this is enabled by default.  If people don't want the logs they can silence them but otherwise they don't tend to discover them.", "author": "ajsutton", "createdAt": "2020-11-04T03:42:06Z", "path": "teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorOptions.java", "diffHunk": "@@ -93,11 +94,19 @@\n   @Option(\n       names = {\"--validators-performance-tracking-enabled\"},\n       paramLabel = \"<BOOLEAN>\",\n-      description = \"Enable validator performance tracking and logging\",\n+      description = \"Enable validator performance tracking\",\n       fallbackValue = \"true\",\n       arity = \"0..1\")\n   private boolean validatorPerformanceTrackingEnabled = false;\n \n+  @Option(\n+      names = {\"--validators-performance-tracking-mode\"},\n+      paramLabel = \"<TRACKING_MODE>\",\n+      description = \"Set strategy for handling performance tracking\",\n+      arity = \"1\")\n+  private ValidatorPerformanceTrackingMode validatorPerformanceTrackingMode =\n+      ValidatorPerformanceTrackingMode.ALL;", "originalCommit": "a604f83de3b08b8a24181abd3400376eb237aa33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxMzM3NQ==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517613375", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-11-04T20:30:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MTI0MQ=="}], "type": "inlineReview"}, {"oid": "7a04ce0ffd695030f2f6a278df1ffa7857e1a719", "url": "https://github.com/ConsenSys/teku/commit/7a04ce0ffd695030f2f6a278df1ffa7857e1a719", "message": "Hide 'enabled' option and make it override 'mode' option if it exists", "committedDate": "2020-11-04T19:49:25Z", "type": "commit"}, {"oid": "13c3a7e283d7d797853224149364995fae70af50", "url": "https://github.com/ConsenSys/teku/commit/13c3a7e283d7d797853224149364995fae70af50", "message": "Merge branch 'master' into enablePerformanceTrackingDifferentModes", "committedDate": "2020-11-04T20:30:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyNTczOA==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517625738", "bodyText": "Does this get used anywhere?", "author": "ajsutton", "createdAt": "2020-11-04T20:55:06Z", "path": "util/src/main/java/tech/pegasys/teku/util/config/ValidatorPerformanceTrackingMode.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.util.config;\n+\n+import java.util.Objects;\n+\n+public enum ValidatorPerformanceTrackingMode {\n+  LOGGING,\n+  METRICS,\n+  ALL,\n+  NONE;\n+\n+  static ValidatorPerformanceTrackingMode fromString(final String value) {\n+    final String normalizedValue = value.trim().toUpperCase();\n+    for (ValidatorPerformanceTrackingMode mode : ValidatorPerformanceTrackingMode.values()) {\n+      if (Objects.equals(mode.name(), normalizedValue)) {\n+        return mode;\n+      }\n+    }\n+    throw new IllegalArgumentException(\"Unknown value supplied: \" + value);\n+  }", "originalCommit": "13c3a7e283d7d797853224149364995fae70af50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY2MDc1Ng==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517660756", "bodyText": "Removed.", "author": "cemozerr", "createdAt": "2020-11-04T22:10:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyNTczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyNzAzMQ==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517627031", "bodyText": "nit: I'd suggest having a ValidatorPerformanceTrackingMode.isEnabled() method (it would do this != NONE check but just makes things more readable).", "author": "ajsutton", "createdAt": "2020-11-04T20:57:37Z", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java", "diffHunk": "@@ -344,10 +345,15 @@ private void initRecentBlockFetcher() {\n \n   private void initPerformanceTracker() {\n     LOG.debug(\"BeaconChainController.initPerformanceTracker()\");\n-    if (beaconConfig.validatorConfig().isValidatorPerformanceTrackingEnabled()) {\n+    ValidatorPerformanceTrackingMode mode =\n+        beaconConfig.validatorConfig().getValidatorPerformanceTrackingMode();\n+    if (mode != ValidatorPerformanceTrackingMode.NONE) {", "originalCommit": "13c3a7e283d7d797853224149364995fae70af50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY2MzcyMg==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517663722", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-11-04T22:17:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyNzAzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyODI2Ng==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517628266", "bodyText": "I think this should probably just be done in ValidatorOptions.configure and this class would only take a ValidatorPerformanceTrackingMode so the backwards compatibility is isolated.", "author": "ajsutton", "createdAt": "2020-11-04T21:00:04Z", "path": "validator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java", "diffHunk": "@@ -58,17 +60,23 @@ private ValidatorConfig(\n     this.validatorExternalSignerUrl = validatorExternalSignerUrl;\n     this.validatorExternalSignerTimeout = validatorExternalSignerTimeout;\n     this.graffiti = graffiti;\n-    this.validatorPerformanceTrackingEnabled = validatorPerformanceTrackingEnabled;\n     this.validatorKeystoreLockingEnabled = validatorKeystoreLockingEnabled;\n     this.beaconNodeApiEndpoint = beaconNodeApiEndpoint;\n+    if (validatorPerformanceTrackingEnabled == null) {\n+      this.validatorPerformanceTrackingMode = validatorPerformanceTrackingMode;\n+    } else if (validatorPerformanceTrackingEnabled) {\n+      this.validatorPerformanceTrackingMode = ValidatorPerformanceTrackingMode.ALL;\n+    } else {\n+      this.validatorPerformanceTrackingMode = ValidatorPerformanceTrackingMode.NONE;\n+    }", "originalCommit": "13c3a7e283d7d797853224149364995fae70af50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY2NTAyNA==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517665024", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-11-04T22:20:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyODI2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyODg0Ng==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517628846", "bodyText": "nit: Possibly simpler as:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  switch (mode) {\n          \n          \n            \n                    case LOGGING:\n          \n          \n            \n                      statusLogger.performance(attestationPerformance.toString());\n          \n          \n            \n                      break;\n          \n          \n            \n                    case METRICS:\n          \n          \n            \n                      validatorPerformanceMetrics.updateAttestationPerformanceMetrics(attestationPerformance);\n          \n          \n            \n                      break;\n          \n          \n            \n                    case ALL:\n          \n          \n            \n                      statusLogger.performance(attestationPerformance.toString());\n          \n          \n            \n                      validatorPerformanceMetrics.updateAttestationPerformanceMetrics(attestationPerformance);\n          \n          \n            \n                      break;\n          \n          \n            \n                    case NONE:\n          \n          \n            \n                      throw new IllegalStateException(\n          \n          \n            \n                          \"Performance Tracker should not be running in NONE mode.\");\n          \n          \n            \n                  if (mode.isLoggingEnabled()) {\n          \n          \n            \n                      statusLogger.performance(attestationPerformance.toString());\n          \n          \n            \n                 }\n          \n          \n            \n                 if (mode.isMetricsEnabled()) {\n          \n          \n            \n                    validatorPerformanceMetrics.updateAttestationPerformanceMetrics(attestationPerformance);\n          \n          \n            \n                 }", "author": "ajsutton", "createdAt": "2020-11-04T21:01:16Z", "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/performance/DefaultPerformanceTracker.java", "diffHunk": "@@ -104,10 +108,23 @@ public void onSlot(UInt64 slot) {\n       UInt64 analyzedEpoch = currentEpoch.minus(ATTESTATION_INCLUSION_RANGE);\n       AttestationPerformance attestationPerformance =\n           getAttestationPerformanceForEpoch(currentEpoch, analyzedEpoch);\n-      statusLogger.performance(attestationPerformance.toString());\n+      switch (mode) {\n+        case LOGGING:\n+          statusLogger.performance(attestationPerformance.toString());\n+          break;\n+        case METRICS:\n+          validatorPerformanceMetrics.updateAttestationPerformanceMetrics(attestationPerformance);\n+          break;\n+        case ALL:\n+          statusLogger.performance(attestationPerformance.toString());\n+          validatorPerformanceMetrics.updateAttestationPerformanceMetrics(attestationPerformance);\n+          break;\n+        case NONE:\n+          throw new IllegalStateException(\n+              \"Performance Tracker should not be running in NONE mode.\");", "originalCommit": "13c3a7e283d7d797853224149364995fae70af50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY2MzY2Nw==", "url": "https://github.com/ConsenSys/teku/pull/3139#discussion_r517663667", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-11-04T22:17:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyODg0Ng=="}], "type": "inlineReview"}, {"oid": "eea9502e766f7ee3dd85c88af4ab51f76006d1d1", "url": "https://github.com/ConsenSys/teku/commit/eea9502e766f7ee3dd85c88af4ab51f76006d1d1", "message": "Remove redundant method and make mode more readable", "committedDate": "2020-11-04T22:27:37Z", "type": "commit"}, {"oid": "f231432170285be381d1392ff1125df295443737", "url": "https://github.com/ConsenSys/teku/commit/f231432170285be381d1392ff1125df295443737", "message": "Isolate backwards compability effort", "committedDate": "2020-11-04T22:27:37Z", "type": "commit"}, {"oid": "b26cb1fb9f01e71ef6fe27ae8d086d638ead721f", "url": "https://github.com/ConsenSys/teku/commit/b26cb1fb9f01e71ef6fe27ae8d086d638ead721f", "message": "Run spotless", "committedDate": "2020-11-04T22:27:38Z", "type": "commit"}, {"oid": "55c2ba194c151f987c0c7fbd253640133ba79543", "url": "https://github.com/ConsenSys/teku/commit/55c2ba194c151f987c0c7fbd253640133ba79543", "message": "Merge branch 'master' into enablePerformanceTrackingDifferentModes", "committedDate": "2020-11-04T22:31:17Z", "type": "commit"}, {"oid": "1cf84fd158d69953c623408975e5e3a3e2d5b531", "url": "https://github.com/ConsenSys/teku/commit/1cf84fd158d69953c623408975e5e3a3e2d5b531", "message": "Merge branch 'master' into enablePerformanceTrackingDifferentModes", "committedDate": "2020-11-05T13:14:18Z", "type": "commit"}]}