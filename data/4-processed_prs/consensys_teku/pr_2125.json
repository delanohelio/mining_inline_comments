{"pr_number": 2125, "pr_title": "Reduce log level when the stream is closed while sending block by range responses", "pr_createdAt": "2020-06-11T04:25:09Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2125", "timeline": [{"oid": "9d79dd58da4923a7eb8d0b733641cd699ef18db3", "url": "https://github.com/ConsenSys/teku/commit/9d79dd58da4923a7eb8d0b733641cd699ef18db3", "message": "Reduce log level when the stream is closed while sending block by range responses.\nIterate when possible to avoid risk of stack overflow exceptions.", "committedDate": "2020-06-11T04:17:54Z", "type": "commit"}, {"oid": "be01ce858e50dee8cf10891b03b77a196a2d0d14", "url": "https://github.com/ConsenSys/teku/commit/be01ce858e50dee8cf10891b03b77a196a2d0d14", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into block-by-range-loop", "committedDate": "2020-06-11T04:26:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMzM5NA==", "url": "https://github.com/ConsenSys/teku/pull/2125#discussion_r438833394", "bodyText": "nit: completing the comment here would be nice since its a pretty complex piece of code", "author": "cemozerr", "createdAt": "2020-06-11T14:35:39Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BeaconBlocksByRangeMessageHandler.java", "diffHunk": "@@ -92,17 +97,37 @@ public void onIncomingMessage(\n   }\n \n   private SafeFuture<RequestState> sendNextBlock(final RequestState requestState) {\n-    return combinedChainDataClient\n-        .getBlockAtSlotExact(requestState.currentSlot, requestState.headBlockRoot)\n-        .thenCompose(\n-            maybeBlock -> {\n-              maybeBlock.ifPresent(requestState::sendBlock);\n-              if (requestState.isComplete()) {\n-                return completedFuture(requestState);\n-              }\n-              requestState.incrementCurrentSlot();\n-              return sendNextBlock(requestState);\n-            });\n+    SafeFuture<Optional<SignedBeaconBlock>> blockFuture = loadNextBlock(requestState);\n+    // Avoid risk of", "originalCommit": "be01ce858e50dee8cf10891b03b77a196a2d0d14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1MjIxMw==", "url": "https://github.com/ConsenSys/teku/pull/2125#discussion_r439152213", "bodyText": "Fixed.", "author": "ajsutton", "createdAt": "2020-06-12T00:56:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMzM5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzNjUzMQ==", "url": "https://github.com/ConsenSys/teku/pull/2125#discussion_r438836531", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Avoid risk of\n          \n          \n            \n                // Avoid the risk of a stack overflow exception when sending a range of \n          \n          \n            \n                // hot blocks by iterating if the block is immediately available rather than \n          \n          \n            \n                // always chaining via thenCompose.", "author": "cemozerr", "createdAt": "2020-06-11T14:40:10Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BeaconBlocksByRangeMessageHandler.java", "diffHunk": "@@ -92,17 +97,37 @@ public void onIncomingMessage(\n   }\n \n   private SafeFuture<RequestState> sendNextBlock(final RequestState requestState) {\n-    return combinedChainDataClient\n-        .getBlockAtSlotExact(requestState.currentSlot, requestState.headBlockRoot)\n-        .thenCompose(\n-            maybeBlock -> {\n-              maybeBlock.ifPresent(requestState::sendBlock);\n-              if (requestState.isComplete()) {\n-                return completedFuture(requestState);\n-              }\n-              requestState.incrementCurrentSlot();\n-              return sendNextBlock(requestState);\n-            });\n+    SafeFuture<Optional<SignedBeaconBlock>> blockFuture = loadNextBlock(requestState);\n+    // Avoid risk of", "originalCommit": "be01ce858e50dee8cf10891b03b77a196a2d0d14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzNzMxNQ==", "url": "https://github.com/ConsenSys/teku/pull/2125#discussion_r438837315", "bodyText": "Although \"iterating if the block is immediately available\" is a bit vague, and I'm not sure what it means.", "author": "cemozerr", "createdAt": "2020-06-11T14:41:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzNjUzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0MzA4NQ==", "url": "https://github.com/ConsenSys/teku/pull/2125#discussion_r438843085", "bodyText": "I don't understand how this method fixes the stack overflow exception. It seems to me that you synchronously send the block if the block is available at the time (at line 103 with handleLoadedBlock) but otherwise you just keep chaining SafeFutures via thenCompose.", "author": "cemozerr", "createdAt": "2020-06-11T14:49:31Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BeaconBlocksByRangeMessageHandler.java", "diffHunk": "@@ -92,17 +97,37 @@ public void onIncomingMessage(\n   }\n \n   private SafeFuture<RequestState> sendNextBlock(final RequestState requestState) {\n-    return combinedChainDataClient\n-        .getBlockAtSlotExact(requestState.currentSlot, requestState.headBlockRoot)\n-        .thenCompose(\n-            maybeBlock -> {\n-              maybeBlock.ifPresent(requestState::sendBlock);\n-              if (requestState.isComplete()) {\n-                return completedFuture(requestState);\n-              }\n-              requestState.incrementCurrentSlot();\n-              return sendNextBlock(requestState);\n-            });\n+    SafeFuture<Optional<SignedBeaconBlock>> blockFuture = loadNextBlock(requestState);\n+    // Avoid risk of\n+    while (blockFuture.isDone() && !blockFuture.isCompletedExceptionally()) {\n+      final boolean complete = handleLoadedBlock(requestState, blockFuture.join());\n+      if (complete) {\n+        return completedFuture(requestState);\n+      }\n+      blockFuture = loadNextBlock(requestState);\n+    }\n+    return blockFuture.thenCompose(", "originalCommit": "be01ce858e50dee8cf10891b03b77a196a2d0d14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMDQ2Mg==", "url": "https://github.com/ConsenSys/teku/pull/2125#discussion_r439030462", "bodyText": "So the problem is that thenCompose will immediately callback if the future is already completed so when we're requesting from the in memory store, it always returns completed futures and we're always recursing back into the method on the same thread (thus in the same stack).\nWith this change, when the future is already completed we use iteration which doesn't add to the stack.  Then when we reach a future that isn't already complete, we chain, but that won't build on the stack because we wind up jumping threads by the time the future is completed.\nThere is a race condition where the future might not have been completed when we checked as part of the while loop, but then was by the time we called thenCompose but we'd have to lose that race a heap of times in a row to have any issue.  And in reality we're either going to return an immediately completed future and iterate (recent blocks) or go to storage which is unlikely to complete before we get to the thenCompose.", "author": "ajsutton", "createdAt": "2020-06-11T19:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0MzA4NQ=="}], "type": "inlineReview"}, {"oid": "8878b0c8df8f9275eb30f3d4d364086eea5b3cd4", "url": "https://github.com/ConsenSys/teku/commit/8878b0c8df8f9275eb30f3d4d364086eea5b3cd4", "message": "Finish comment.", "committedDate": "2020-06-11T19:56:22Z", "type": "commit"}, {"oid": "de2413743065553bada0e8541547d5d4573e1b1c", "url": "https://github.com/ConsenSys/teku/commit/de2413743065553bada0e8541547d5d4573e1b1c", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into block-by-range-loop", "committedDate": "2020-06-11T19:56:33Z", "type": "commit"}, {"oid": "b834702d56a72e21101e66a00c1d4871991d22bc", "url": "https://github.com/ConsenSys/teku/commit/b834702d56a72e21101e66a00c1d4871991d22bc", "message": "Merge branch 'master' into block-by-range-loop", "committedDate": "2020-06-12T03:06:05Z", "type": "commit"}, {"oid": "d072d94a2dbc32456cb5d7a2be2dc2328cd86371", "url": "https://github.com/ConsenSys/teku/commit/d072d94a2dbc32456cb5d7a2be2dc2328cd86371", "message": "Merge branch 'master' into block-by-range-loop", "committedDate": "2020-06-12T06:28:04Z", "type": "commit"}]}