{"pr_number": 1374, "pr_title": "Get listen port handler", "pr_createdAt": "2020-03-13T04:21:23Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1374", "timeline": [{"oid": "a165295fd4168c3f8bf1e60ae5bab07327a411f9", "url": "https://github.com/ConsenSys/teku/commit/a165295fd4168c3f8bf1e60ae5bab07327a411f9", "message": "expose ListenPort and add handler\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-03-13T04:13:33Z", "type": "commit"}, {"oid": "0c125185679eba1f6234d899862f72e6bccf0888", "url": "https://github.com/ConsenSys/teku/commit/0c125185679eba1f6234d899862f72e6bccf0888", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into get-listen-port", "committedDate": "2020-03-13T04:20:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyNDk4OA==", "url": "https://github.com/ConsenSys/teku/pull/1374#discussion_r392024988", "bodyText": "should we expand this to be something like the libp2p port or something? lighthouse says\n\nRequests the TCP port that the client's libp2p service is listening on.\n\ni guess I'm mainly asking because it's specifically our p2p port not our http port...", "author": "rolfyone", "createdAt": "2020-03-13T04:27:29Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/network/GetListenPort.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2019 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.handlers.network;\n+\n+import static tech.pegasys.artemis.beaconrestapi.CacheControlUtils.CACHE_NONE;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_NETWORK;\n+\n+import io.javalin.core.util.Header;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import tech.pegasys.artemis.api.NetworkDataProvider;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+\n+public class GetListenPort implements Handler {\n+\n+  public static final String ROUTE = \"/network/listen_port\";\n+\n+  private final NetworkDataProvider network;\n+  private final JsonProvider jsonProvider;\n+\n+  public GetListenPort(NetworkDataProvider network, JsonProvider jsonProvider) {\n+    this.network = network;\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get this beacon node's listening port.\",\n+      tags = {TAG_NETWORK},\n+      description = \"Returns the beacon node's listening port.\",", "originalCommit": "0c125185679eba1f6234d899862f72e6bccf0888", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyNjE2OA==", "url": "https://github.com/ConsenSys/teku/pull/1374#discussion_r392026168", "bodyText": "added", "author": "macfarla", "createdAt": "2020-03-13T04:33:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyNDk4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyNTMyOA==", "url": "https://github.com/ConsenSys/teku/pull/1374#discussion_r392025328", "bodyText": "there's a disconnect here maybe. the response type in OpenApi is marked as String.class, and this will render an integer.\nI think the simple fix would be to update the OpenApi to declare an Integer.class is returned...", "author": "rolfyone", "createdAt": "2020-03-13T04:29:23Z", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/network/GetListenPortTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.handlers.network;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+import static tech.pegasys.artemis.beaconrestapi.CacheControlUtils.CACHE_NONE;\n+\n+import io.javalin.core.util.Header;\n+import io.javalin.http.Context;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.api.NetworkDataProvider;\n+import tech.pegasys.artemis.networking.p2p.network.P2PNetwork;\n+import tech.pegasys.artemis.networking.p2p.peer.Peer;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+\n+public class GetListenPortTest {\n+  private Context context = mock(Context.class);\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private final P2PNetwork<Peer> p2pNetwork = mock(P2PNetwork.class);\n+\n+  private final JsonProvider jsonProvider = mock(JsonProvider.class);\n+\n+  @Test\n+  public void shouldReturnListenPort() throws Exception {\n+    NetworkDataProvider network = new NetworkDataProvider(p2pNetwork);\n+    final int port = 9876;\n+    final GetListenPort handler = new GetListenPort(network, jsonProvider);\n+\n+    when(p2pNetwork.getListenPort()).thenReturn(port);\n+    handler.handle(context);\n+    verify(context).header(Header.CACHE_CONTROL, CACHE_NONE);\n+    verify(context).result(jsonProvider.objectToJSON(port));\n+  }", "originalCommit": "0c125185679eba1f6234d899862f72e6bccf0888", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyNjE5NQ==", "url": "https://github.com/ConsenSys/teku/pull/1374#discussion_r392026195", "bodyText": "Integer it is", "author": "macfarla", "createdAt": "2020-03-13T04:33:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyNTMyOA=="}], "type": "inlineReview"}, {"oid": "c839b3f8a4ec6ebd15f6456bc7fe13e04be63a42", "url": "https://github.com/ConsenSys/teku/commit/c839b3f8a4ec6ebd15f6456bc7fe13e04be63a42", "message": "description\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-03-13T04:29:27Z", "type": "commit"}, {"oid": "1f31c05ad05d3b6ed23a61f06d802f468d2c4a45", "url": "https://github.com/ConsenSys/teku/commit/1f31c05ad05d3b6ed23a61f06d802f468d2c4a45", "message": "Integer\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-03-13T04:30:50Z", "type": "commit"}]}