{"pr_number": 2151, "pr_title": "Catch errors from Supplier and pass to returned future", "pr_createdAt": "2020-06-15T06:38:06Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2151", "timeline": [{"oid": "28f43de77e4461ff078b2346424d79621a53a418", "url": "https://github.com/ConsenSys/teku/commit/28f43de77e4461ff078b2346424d79621a53a418", "message": "Catch errors from Supplier and pass to returned future.", "committedDate": "2020-06-15T06:35:07Z", "type": "commit"}, {"oid": "261e519a7cbb7a29ac10e13e9f79bf953e9e8d09", "url": "https://github.com/ConsenSys/teku/commit/261e519a7cbb7a29ac10e13e9f79bf953e9e8d09", "message": "Handle stream closed.", "committedDate": "2020-06-15T06:37:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3ODA2MQ==", "url": "https://github.com/ConsenSys/teku/pull/2151#discussion_r440178061", "bodyText": "What I understand is that propagateResult, which dealt with exceptions that return failed future correctly, did not deal well with exceptions that do not return a failed future. Thus you've implemented runTask to account for any throwable that might occur. Did I get that correctly?", "author": "cemozerr", "createdAt": "2020-06-15T13:33:12Z", "path": "util/src/main/java/tech/pegasys/teku/util/async/DelayedExecutorAsyncRunner.java", "diffHunk": "@@ -58,15 +56,23 @@ public static DelayedExecutorAsyncRunner create(Executor executor) {\n   <U> SafeFuture<U> runAsync(final Supplier<SafeFuture<U>> action, final Executor executor) {\n     final SafeFuture<U> result = new SafeFuture<>();\n     try {\n-      executor.execute(() -> propagateResult(action.get(), result));", "originalCommit": "261e519a7cbb7a29ac10e13e9f79bf953e9e8d09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzMjEwMg==", "url": "https://github.com/ConsenSys/teku/pull/2151#discussion_r440432102", "bodyText": "Yep.", "author": "ajsutton", "createdAt": "2020-06-15T20:36:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3ODA2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3ODg3OA==", "url": "https://github.com/ConsenSys/teku/pull/2151#discussion_r440178878", "bodyText": "Looks good to me, but isn't this an anti-pattern? and is there any better way of doing this potentially?", "author": "cemozerr", "createdAt": "2020-06-15T13:34:27Z", "path": "util/src/main/java/tech/pegasys/teku/util/async/DelayedExecutorAsyncRunner.java", "diffHunk": "@@ -58,15 +56,23 @@ public static DelayedExecutorAsyncRunner create(Executor executor) {\n   <U> SafeFuture<U> runAsync(final Supplier<SafeFuture<U>> action, final Executor executor) {\n     final SafeFuture<U> result = new SafeFuture<>();\n     try {\n-      executor.execute(() -> propagateResult(action.get(), result));\n-    } catch (RejectedExecutionException ex) {\n+      executor.execute(() -> runTask(action, result));\n+    } catch (final RejectedExecutionException ex) {\n       LOG.debug(\"shutting down \", ex);\n     } catch (final Throwable t) {\n       result.completeExceptionally(t);\n     }\n     return result;\n   }\n \n+  private <U> void runTask(final Supplier<SafeFuture<U>> action, final SafeFuture<U> result) {\n+    try {\n+      action.get().propagateTo(result);\n+    } catch (final Throwable t) {", "originalCommit": "261e519a7cbb7a29ac10e13e9f79bf953e9e8d09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NDA5NA==", "url": "https://github.com/ConsenSys/teku/pull/2151#discussion_r440444094", "bodyText": "It's not anti-pattern though you do want to be careful when catching literally everything - you generally don't want to just log and suppress Error type exceptions but in this case we're just redirecting them back to the caller instead of them going straight to the uncaught exception handler.\nNormally we just hide this pattern behind SafeFuture.fromRunnable and it turns out we also have SafeFuture.ofComposed which does exactly what we need, so I've switched to that.", "author": "ajsutton", "createdAt": "2020-06-15T21:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3ODg3OA=="}], "type": "inlineReview"}, {"oid": "1dd546f86c5af5c563772a2783c2fbbfa087c9b6", "url": "https://github.com/ConsenSys/teku/commit/1dd546f86c5af5c563772a2783c2fbbfa087c9b6", "message": "Use the existing SafeFuture.ofComposed instead of duplicating it.", "committedDate": "2020-06-15T20:40:12Z", "type": "commit"}, {"oid": "fc33225264f7a666e927e9402a78fa5fb2e1c9f2", "url": "https://github.com/ConsenSys/teku/commit/fc33225264f7a666e927e9402a78fa5fb2e1c9f2", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into catch-supplier-errors", "committedDate": "2020-06-15T20:42:41Z", "type": "commit"}, {"oid": "11f37a959ddeef8d4cb879a7f55243e321aefc81", "url": "https://github.com/ConsenSys/teku/commit/11f37a959ddeef8d4cb879a7f55243e321aefc81", "message": "Add test.", "committedDate": "2020-06-15T20:50:52Z", "type": "commit"}, {"oid": "8699e6e808a48d69cbac50f66eb10ea80367bf82", "url": "https://github.com/ConsenSys/teku/commit/8699e6e808a48d69cbac50f66eb10ea80367bf82", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into catch-supplier-errors", "committedDate": "2020-06-15T21:01:54Z", "type": "commit"}]}