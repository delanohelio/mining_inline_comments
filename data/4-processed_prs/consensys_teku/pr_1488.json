{"pr_number": 1488, "pr_title": "Convert DiskUpdate events to EventChannels", "pr_createdAt": "2020-03-26T21:29:18Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1488", "timeline": [{"oid": "2b6d2abe6b9f5329d095d17bed0aadc4da3872a2", "url": "https://github.com/ConsenSys/teku/commit/2b6d2abe6b9f5329d095d17bed0aadc4da3872a2", "message": "Convert DiskUpdate events to EventChannels", "committedDate": "2020-03-26T21:24:50Z", "type": "commit"}, {"oid": "6c71b2442619cfb170edc0cd3f4a34f29e17dc16", "url": "https://github.com/ConsenSys/teku/commit/6c71b2442619cfb170edc0cd3f4a34f29e17dc16", "message": "Run spotless", "committedDate": "2020-03-26T21:28:37Z", "type": "commit"}, {"oid": "55284174dee98b851bae905688455877ebe5ce64", "url": "https://github.com/ConsenSys/teku/commit/55284174dee98b851bae905688455877ebe5ce64", "message": "Fix integration test", "committedDate": "2020-03-26T22:22:28Z", "type": "commit"}, {"oid": "0552b5f5ed308eb1bf7c480a1d1cbccd0fc1c610", "url": "https://github.com/ConsenSys/teku/commit/0552b5f5ed308eb1bf7c480a1d1cbccd0fc1c610", "message": "Fix integration test", "committedDate": "2020-03-26T23:21:14Z", "type": "commit"}, {"oid": "9f98f2b2cb7a93cb7b0fba7d81b8524856d614b1", "url": "https://github.com/ConsenSys/teku/commit/9f98f2b2cb7a93cb7b0fba7d81b8524856d614b1", "message": "Clean up PR", "committedDate": "2020-03-27T00:16:46Z", "type": "commit"}, {"oid": "9f98f2b2cb7a93cb7b0fba7d81b8524856d614b1", "url": "https://github.com/ConsenSys/teku/commit/9f98f2b2cb7a93cb7b0fba7d81b8524856d614b1", "message": "Clean up PR", "committedDate": "2020-03-27T00:16:46Z", "type": "forcePushed"}, {"oid": "d234cc4db0b252efc60eac32db617ff44a2a03b3", "url": "https://github.com/ConsenSys/teku/commit/d234cc4db0b252efc60eac32db617ff44a2a03b3", "message": "Merge branch 'master' into diskUpdateEventsToEventChannels", "committedDate": "2020-03-27T00:17:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MDY5Mg==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r398970692", "bodyText": "I wonder if we should create a text fixture class that creates a memory only ChainStorageClient and then it can automatically create the mock DiskUpdateChannel.  We never use the memory only version in production so it's weird that we've polluted our production code with test setup constructors.  Might be a separate PR though.", "author": "ajsutton", "createdAt": "2020-03-27T00:31:30Z", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApiWithSwaggerTest.java", "diffHunk": "@@ -28,12 +28,13 @@\n import tech.pegasys.artemis.api.DataProvider;\n import tech.pegasys.artemis.storage.ChainStorageClient;\n import tech.pegasys.artemis.storage.CombinedChainDataClient;\n+import tech.pegasys.artemis.storage.api.DiskUpdateChannel;\n import tech.pegasys.artemis.sync.SyncService;\n import tech.pegasys.artemis.util.config.ArtemisConfiguration;\n \n public class BeaconRestApiWithSwaggerTest {\n   private final ChainStorageClient storageClient =\n-      ChainStorageClient.memoryOnlyClient(new EventBus());\n+      ChainStorageClient.memoryOnlyClient(new EventBus(), mock(DiskUpdateChannel.class));", "originalCommit": "d234cc4db0b252efc60eac32db617ff44a2a03b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxOTAzOA==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399019038", "bodyText": "I highly agree. I actually want to do it in this PR. ChainStorageClient would be way more legible if cleaned from the non-production code.", "author": "cemozerr", "createdAt": "2020-03-27T03:43:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MDY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NTczMg==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399475732", "bodyText": "Actually, I will merge this in and quickly do a follow-up PR. I have a feeling that, that PR might get a lot of comments \ud83d\ude02", "author": "cemozerr", "createdAt": "2020-03-27T18:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MDY5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MTEyMw==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r398971123", "bodyText": "Not sure DiskGenesisUpdate is the right name for this event.  It's probably just GenesisEvent", "author": "ajsutton", "createdAt": "2020-03-27T00:33:16Z", "path": "data/recorder/src/main/java/tech/pegasys/artemis/data/recorder/SSZTransitionRecorder.java", "diffHunk": "@@ -42,7 +42,7 @@ public SSZTransitionRecorder(final Path outputDirectory) {\n   }\n \n   @Subscribe\n-  public void onGenesisEvent(final StoreGenesisDiskUpdateEvent genesisEvent) {\n+  public void onDiskGenesisUpdate(final DiskGenesisUpdate genesisEvent) {", "originalCommit": "d234cc4db0b252efc60eac32db617ff44a2a03b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0NTUyNw==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399445527", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-03-27T17:58:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MTEyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MjcxMA==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r398972710", "bodyText": "This seems like a complicated way of creating a mock that will always return new SafeFuture() that doesn't complete.  Since there's no subscriber, nothing will reply so the future never completes.", "author": "ajsutton", "createdAt": "2020-03-27T00:39:35Z", "path": "networking/eth2/src/testFixtures/java/tech/pegasys/artemis/networking/eth2/Eth2NetworkFactory.java", "diffHunk": "@@ -152,11 +156,16 @@ private NetworkConfig generateConfig() {\n     }\n \n     private void setDefaults() {\n+      if (diskUpdateChannel == null) {\n+        final EventChannels eventChannels =\n+            EventChannels.createSyncChannels(TEST_EXCEPTION_HANDLER, new NoOpMetricsSystem());\n+        diskUpdateChannel = eventChannels.getPublisher(DiskUpdateChannel.class);\n+      }", "originalCommit": "d234cc4db0b252efc60eac32db617ff44a2a03b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3MjEyNg==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399472126", "bodyText": "Agreed. Thanks for catching. Changed.", "author": "cemozerr", "createdAt": "2020-03-27T18:47:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MjcxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MzQxMA==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r398973410", "bodyText": "Given this was just creating a TransactionPrecommit.memoryOnly() maybe it should just create a stub DiskUpdateChannel implementation that returns the same DatabaseUpdateResult.successfulWithNothingPruned() as the result of onDiskUpdate calls.", "author": "ajsutton", "createdAt": "2020-03-27T00:42:24Z", "path": "storage/src/main/java/tech/pegasys/artemis/storage/ChainStorageClient.java", "diffHunk": "@@ -59,32 +60,33 @@\n   // Time\n   private volatile UnsignedLong genesisTime;\n \n-  public static ChainStorageClient memoryOnlyClient(final EventBus eventBus) {\n-    final ChainStorageClient client =\n-        new ChainStorageClient(eventBus, TransactionPrecommit.memoryOnly());\n+  public static ChainStorageClient memoryOnlyClient(\n+      final EventBus eventBus, final DiskUpdateChannel diskUpdateChannel) {\n+    final ChainStorageClient client = new ChainStorageClient(diskUpdateChannel, eventBus);\n     eventBus.register(client);\n     return client;\n   }", "originalCommit": "d234cc4db0b252efc60eac32db617ff44a2a03b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MzU5Mg==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r398973592", "bodyText": "We don't need the wrapper DiskGenesisUpdate event here - just pass store as the argument.", "author": "ajsutton", "createdAt": "2020-03-27T00:43:01Z", "path": "storage/src/main/java/tech/pegasys/artemis/storage/ChainStorageClient.java", "diffHunk": "@@ -103,7 +105,8 @@ public void initializeFromGenesis(final BeaconState genesisState) {\n           \"Failed to set genesis state: store has already been initialized\");\n     }\n \n-    eventBus.post(new StoreGenesisDiskUpdateEvent(store));\n+    diskUpdateChannel.onDiskGenesisUpdate(new DiskGenesisUpdate(store));", "originalCommit": "d234cc4db0b252efc60eac32db617ff44a2a03b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0ODE3Nw==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399448177", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-03-27T18:03:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MzU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3Mzk3Mg==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r398973972", "bodyText": "We shouldn't use supplyAsync here or events will be recorded in parallel and potentially out of order.  Just SafeFuture.of.", "author": "ajsutton", "createdAt": "2020-03-27T00:44:30Z", "path": "storage/src/main/java/tech/pegasys/artemis/storage/ChainStorageServer.java", "diffHunk": "@@ -81,15 +83,18 @@ public void onStoreRequest(final GetStoreRequest request) {\n     eventBus.post(new GetStoreResponse(request.getId(), getStore()));\n   }\n \n-  @Subscribe\n-  public void onStoreDiskUpdate(final StoreDiskUpdateEvent event) {\n-    final DatabaseUpdateResult result = database.update(event);\n-    handleStoreUpdate(result);\n-    eventBus.post(new StoreDiskUpdateCompleteEvent(event.getTransactionId(), result));\n+  @Override\n+  public SafeFuture<DiskUpdateResult> onDiskUpdate(final DiskUpdate event) {\n+    return SafeFuture.supplyAsync(", "originalCommit": "d234cc4db0b252efc60eac32db617ff44a2a03b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NDM0Ng==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r398974346", "bodyText": "Actually now I think about it, as a follow up to this we should be able to remove the .join() calls after each commit() because we know each change will be applied in order.\nThough there is still a question of what to do if the returned future throws an Exception. Will need some thought, but would be really nice if we can let our processing run ahead of storage.", "author": "ajsutton", "createdAt": "2020-03-27T00:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3Mzk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0ODgwOQ==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399448809", "bodyText": "Makes sense. Done.", "author": "cemozerr", "createdAt": "2020-03-27T18:04:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3Mzk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ1MDM1NQ==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399450355", "bodyText": "Thinking out loud, maybe, in a scenario where the disk is throwing exceptions, we can start logging warning level messages, but keep executing since being able to validate is more important than writing to disk. Through the messages, the user would know something needs fixing, but still not lose their stake in the meanwhile.", "author": "cemozerr", "createdAt": "2020-03-27T18:07:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3Mzk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ1MzEzMQ==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399453131", "bodyText": "https://pegasys1.atlassian.net/secure/RapidBoard.jspa?rapidView=67&modal=detail&selectedIssue=BC-319", "author": "cemozerr", "createdAt": "2020-03-27T18:12:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3Mzk3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTIxNA==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r398975214", "bodyText": "I wonder if we should be using Storage instead of Disk for these classes.  The storage system doesn't necessarily have to store to disk (it could be S3StorageServer etc).", "author": "ajsutton", "createdAt": "2020-03-27T00:49:14Z", "path": "storage/src/main/java/tech/pegasys/artemis/storage/api/DiskUpdateChannel.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.storage.api;\n+\n+import tech.pegasys.artemis.storage.events.diskupdates.DiskGenesisUpdate;\n+import tech.pegasys.artemis.storage.events.diskupdates.DiskUpdate;\n+import tech.pegasys.artemis.storage.events.diskupdates.DiskUpdateResult;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+\n+public interface DiskUpdateChannel {", "originalCommit": "d234cc4db0b252efc60eac32db617ff44a2a03b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ1MzY3Ng==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399453676", "bodyText": "Interesting point. I did not think of that. I'll make the change.", "author": "cemozerr", "createdAt": "2020-03-27T18:13:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ1NDUyNg==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399454526", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-03-27T18:14:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTQ3OA==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r398975478", "bodyText": "Slightly odd that we're using StubDiskUpdateChannel here but a mock in a lot of other places.  Seems like we could just be using the stub.", "author": "ajsutton", "createdAt": "2020-03-27T00:50:09Z", "path": "storage/src/test/java/tech/pegasys/artemis/storage/MapDbDatabaseTest.java", "diffHunk": "@@ -118,7 +116,7 @@ public void shouldRecreateOriginalGenesisStore() {\n \n   @Test\n   public void shouldGetHotBlockByRoot() {\n-    final Transaction transaction = store.startTransaction(databaseTransactionPrecommit);\n+    final Transaction transaction = store.startTransaction(new StubDiskUpdateChannel());", "originalCommit": "d234cc4db0b252efc60eac32db617ff44a2a03b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ1NzQwMg==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399457402", "bodyText": "It's because this is not actually a stub (I named it incorrectly) but an interface that handles writing to actual disk without requiring ChainStorageServer class in the process. I'll change the naming and make this more visible.", "author": "cemozerr", "createdAt": "2020-03-27T18:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ1NzgyMg==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399457822", "bodyText": "It also writes to the updateResults list in the process, which is a requirement for some of the tests.", "author": "cemozerr", "createdAt": "2020-03-27T18:20:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MzEzNA==", "url": "https://github.com/ConsenSys/teku/pull/1488#discussion_r399463134", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-03-27T18:30:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3NTQ3OA=="}], "type": "inlineReview"}, {"oid": "37f3c88fb87eb194f34e83e4ff6b724282947e1a", "url": "https://github.com/ConsenSys/teku/commit/37f3c88fb87eb194f34e83e4ff6b724282947e1a", "message": "Resolve comments", "committedDate": "2020-03-27T19:06:56Z", "type": "commit"}, {"oid": "1065f5419d30b45e64e6f0fbb0f9360a8b8472ec", "url": "https://github.com/ConsenSys/teku/commit/1065f5419d30b45e64e6f0fbb0f9360a8b8472ec", "message": "Merge remote-tracking branch 'remotes/origin/master' into diskUpdateEventsToEventChannels\n\n# Conflicts:\n#\tdata/provider/src/test/java/tech/pegasys/artemis/api/ChainDataProviderTest.java\n#\tvalidator/coordinator/src/test/java/tech/pegasys/artemis/validator/coordinator/ValidatorCoordinatorTest.java", "committedDate": "2020-03-27T19:09:44Z", "type": "commit"}, {"oid": "35032c2cae162d0fcfff46d0e726b45f3030a2c1", "url": "https://github.com/ConsenSys/teku/commit/35032c2cae162d0fcfff46d0e726b45f3030a2c1", "message": "Fix merge conflicts", "committedDate": "2020-03-27T19:13:56Z", "type": "commit"}]}