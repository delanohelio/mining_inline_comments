{"pr_number": 2941, "pr_title": "Added unit tests for translator part1", "pr_createdAt": "2020-04-21T14:13:21Z", "pr_url": "https://github.com/eclipse/kapua/pull/2941", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2ODk5Mg==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413568992", "bodyText": "Please change the scenario name to: \"Translating CommandRequestMessage to null\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:15:34Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU3NDg1OA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413574858", "bodyText": "Please change scenario name to: \"Translating \"CommandRequestMessage\" to \"KuraRequestMessage\"\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:25:24Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU3NTA1NA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413575054", "bodyText": "Please change scenario name to: \"Translating null to KuraRequestMessage\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:25:47Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU3NTU3Nw==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413575577", "bodyText": "Please change scenario name to: \"Translating empty message to empty message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:26:33Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU3Nzg4OA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413577888", "bodyText": "Please change scenario name to: \"Translating from \"AssetRequestMessage\" to \"AssetResponseMessage\"\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:30:23Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MDExNA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413580114", "bodyText": "Please  change scenario name to: \"Translation of mqtt message with invalid payload and valid topic into kura data message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:34:00Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MDY2Mg==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413580662", "bodyText": "Please change step name to: \"Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\"\nthere is a syntax error in the step name, it has to be ...with invalid payload... not \"valid\".", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:34:56Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTAwMg==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413581002", "bodyText": "Please change scenario name to: \"Translation of mqtt message with valid payload and valid topic into kura data message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:35:30Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4NTczNg==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413585736", "bodyText": "Can you please make this more specific, checking if proper payload is in the message?\nI mean..it is ok to check if it's not null, but it is also vital to check if the data is as it is supposed to be.", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:42:01Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4NjcwMg==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413586702", "bodyText": "Please change scenario name to: \"Translation of mqtt message with empty payload into kura data message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:43:35Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4NzI5Ng==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413587296", "bodyText": "Please change scenario name to: \"Translation of mqtt message with invalid payload and invalid topic into kura response message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:44:29Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4Nzc3MA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413587770", "bodyText": "Please change description to: \" Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response message.\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:45:16Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4ODI0Ng==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413588246", "bodyText": "Please change scenario name to: \"Translation of mqtt message with invalid payload and valid topic into kura response message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:46:00Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4ODc4Ng==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413588786", "bodyText": "Please change description to: \"Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response message.\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:46:45Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4OTI1NQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413589255", "bodyText": "Please change scenario name to: \"Translation of mqtt message with valid payload and invalid topic into kura response message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:47:29Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4OTUwNw==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413589507", "bodyText": "Please change description to: \"Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response message.\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:47:53Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5MDAxNQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413590015", "bodyText": "Please change scenario name to: \"Translation of mqtt message with valid payload and valid topic into kura response message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:48:35Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with valid payload \"response.code\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura response", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5MjA1NQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413592055", "bodyText": "Please change description to: \"Creating mqtt message with valid payload and valid topic. Trying to translate it into kura response message.  Check if kura response message with proper payload, metrics and correct channel is received.\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:51:36Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with valid payload \"response.code\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura response\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with proper payload, metrics and correct channel is received.", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5NDc3Nw==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413594777", "bodyText": "Pleae change scenario to: \"Translation of kura data message with valid channel and without body and metrics into mqtt message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:55:39Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with valid payload \"response.code\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura response\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with proper payload, metrics and correct channel is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with proper payload metrics\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorDataKuraMqtt\n+\n+  Scenario: Translating kura data message with valid channel and without body and metrics into mqtt message", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5NTY1Mw==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413595653", "bodyText": "Please change description to: \"Checking if mqtt message with valid topic and empty body is received.\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T07:56:57Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with valid payload \"response.code\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura response\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with proper payload, metrics and correct channel is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with proper payload metrics\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorDataKuraMqtt\n+\n+  Scenario: Translating kura data message with valid channel and without body and metrics into mqtt message\n+  Creating kura data message with valid channel and without body and metrics. Trying to translate it into mqtt message.\n+  Check if mqtt message with valid topic and empty body is received.", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyNjE2NQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413626165", "bodyText": "Please change scenario name to: \"Translation of kura data message with valid channel, metrics and without body into mqtt message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:40:22Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with valid payload \"response.code\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura response\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with proper payload, metrics and correct channel is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with proper payload metrics\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorDataKuraMqtt\n+\n+  Scenario: Translating kura data message with valid channel and without body and metrics into mqtt message\n+  Creating kura data message with valid channel and without body and metrics. Trying to translate it into mqtt message.\n+  Check if mqtt message with valid topic and empty body is received.\n+\n+    Given I create kura data message with channel with scope \"kapua-sys\", client id \"rpione3\" and payload without body and metrics\n+    When I try to translate kura data message to mqtt message\n+    Then I got mqtt message with channel with scope \"kapua-sys\", client id \"rpione3\" and empty body\n+    And No exception was thrown\n+\n+  Scenario: Translating kura data message with valid channel, metrics and without body into mqtt message", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyNjQ1OQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413626459", "bodyText": "Change description to: \"Creating kura data message with valid channel, metrics but without body. Trying to translate it into mqtt message.\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:40:47Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with valid payload \"response.code\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura response\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with proper payload, metrics and correct channel is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with proper payload metrics\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorDataKuraMqtt\n+\n+  Scenario: Translating kura data message with valid channel and without body and metrics into mqtt message\n+  Creating kura data message with valid channel and without body and metrics. Trying to translate it into mqtt message.\n+  Check if mqtt message with valid topic and empty body is received.\n+\n+    Given I create kura data message with channel with scope \"kapua-sys\", client id \"rpione3\" and payload without body and metrics\n+    When I try to translate kura data message to mqtt message\n+    Then I got mqtt message with channel with scope \"kapua-sys\", client id \"rpione3\" and empty body\n+    And No exception was thrown\n+\n+  Scenario: Translating kura data message with valid channel, metrics and without body into mqtt message\n+  Creating kura data message with valid channel, metrics and without body. Trying to translate it into mqtt message.", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyNzMxMg==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413627312", "bodyText": "Please change the step name to: \"Given I create kura data message with channel with scope \"kapua-sys\", client id \"rpione3\", valid payload and metrics but without body\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:41:57Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with valid payload \"response.code\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura response\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with proper payload, metrics and correct channel is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with proper payload metrics\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorDataKuraMqtt\n+\n+  Scenario: Translating kura data message with valid channel and without body and metrics into mqtt message\n+  Creating kura data message with valid channel and without body and metrics. Trying to translate it into mqtt message.\n+  Check if mqtt message with valid topic and empty body is received.\n+\n+    Given I create kura data message with channel with scope \"kapua-sys\", client id \"rpione3\" and payload without body and metrics\n+    When I try to translate kura data message to mqtt message\n+    Then I got mqtt message with channel with scope \"kapua-sys\", client id \"rpione3\" and empty body\n+    And No exception was thrown\n+\n+  Scenario: Translating kura data message with valid channel, metrics and without body into mqtt message\n+  Creating kura data message with valid channel, metrics and without body. Trying to translate it into mqtt message.\n+  Check if mqtt message with valid topic and encoded body is received.\n+\n+    Given I create kura data message with channel with scope \"kapua-sys\", client id \"rpione3\" and payload without body and with metrics", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyOTc1MQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413629751", "bodyText": "Then I get", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:45:17Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with valid payload \"response.code\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura response\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with proper payload, metrics and correct channel is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with proper payload metrics\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorDataKuraMqtt\n+\n+  Scenario: Translating kura data message with valid channel and without body and metrics into mqtt message\n+  Creating kura data message with valid channel and without body and metrics. Trying to translate it into mqtt message.\n+  Check if mqtt message with valid topic and empty body is received.\n+\n+    Given I create kura data message with channel with scope \"kapua-sys\", client id \"rpione3\" and payload without body and metrics\n+    When I try to translate kura data message to mqtt message\n+    Then I got mqtt message with channel with scope \"kapua-sys\", client id \"rpione3\" and empty body\n+    And No exception was thrown\n+\n+  Scenario: Translating kura data message with valid channel, metrics and without body into mqtt message\n+  Creating kura data message with valid channel, metrics and without body. Trying to translate it into mqtt message.\n+  Check if mqtt message with valid topic and encoded body is received.\n+\n+    Given I create kura data message with channel with scope \"kapua-sys\", client id \"rpione3\" and payload without body and with metrics\n+    When I try to translate kura data message to mqtt message\n+    Then I got mqtt message with channel with scope \"kapua-sys\", client id \"rpione3\" and non empty body", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzMDEyOA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413630128", "bodyText": "Please change the scenario name to: \"Translation of kura data message with valid channel, body and metrics into mqtt message\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:45:45Z", "path": "translator/test/src/test/resources/features/TranslatorUnitTests.feature", "diffHunk": "@@ -0,0 +1,156 @@\n+###############################################################################\n+# Copyright (c) 2020 Eurotech and/or its affiliates and others\n+#\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     Eurotech\n+###############################################################################\n+@unit\n+@translator\n+\n+Feature: Translator Service\n+  The Translator Service is responsible for messaging operations between Kura and Kapua.\n+\n+  #KapuaTranslatorApi\n+\n+  Scenario: Finding translator \"TranslatorAppCommandKapuaKura\"\n+  Trying to make translation from CommandRequestMessage to KuraRequestMessage.\n+\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then Translator \"TranslatorAppCommandKapuaKura\" is found\n+    And No exception was thrown\n+\n+  Scenario: Finding existing translator to null translator\n+  Trying to make translation from CommandRequestMessage to null message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"org.eclipse.kapua.service.device.management.command.message.internal.CommandRequestMessage\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding null translator to existing one\n+  Trying to make translation from null to KuraRequestMessage message.\n+  NullPointerException should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    When I try to translate from \"\" to \"org.eclipse.kapua.service.device.call.message.kura.app.request.KuraRequestMessage\"\n+    Then An exception was thrown\n+\n+\n+  Scenario: Finding null translator\n+  Trying to do translation without messages. NPE exception should be thrown.\n+\n+    Given I expect the exception \"NullPointerException\" with the text \"*\"\n+    And I try to translate from \"\" to \"\"\n+    Then An exception was thrown\n+\n+  Scenario: Finding wrong translator\n+  Trying to make translation from AssetRequestMessage to AssetResponseMessage.\n+  A translator not found exception should be thrown.\n+\n+    Given I expect the exception \"TranslatorNotFoundException\" with the text \"*\"\n+    And I try to translate from \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetRequestMessage\" to \"org.eclipse.kapua.service.device.management.asset.message.internal.AssetResponseMessage\"\n+    Then An exception was thrown\n+\n+  #TranslatorDataMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura data message\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if kura data message with valid channel and byte[] payload is received.\n+\n+    Given I create mqtt message with valid payload \"invalidPayload\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with \"byte[]\" payload body\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura data message\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and proper payload metrics is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with proper payload metrics\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with empty payload into kura data message\n+  Creating mqtt message with empty payload and valid topic. Trying to translate it into kura data message.\n+  Checking if mqtt message with valid channel and empty payload is received.\n+\n+    Given I create mqtt message with empty payload \"\" and valid topic \"kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    And I try to translate mqtt message to kura data message\n+    Then I got kura data message with empty payload\n+    And I got kura data message channel with \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorResponseMqttKura\n+\n+  Scenario: Translating of mqtt message with invalid payload and invalid topic into kura response\n+  Creating mqtt message with invalid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with invalid payload \"invalidPayload\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with invalid payload and valid topic into kura response\n+  Creating mqtt message with invalid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with byte[] body and correct channel is received.\n+\n+    Given I create mqtt message with invalid payload \"invalidPayload\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with \"byte[]\" payload body\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and invalid topic into kura response\n+  Creating mqtt message with valid payload and invalid topic. Trying to translate it into kura response.\n+\n+    Given I expect the exception \"InvalidChannelException\" with the text \"Invalid channel: DEPLOY-V2/GET/packages\"\n+    And I create mqtt message with valid payload \"response.code\" and invalid topic \"DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then An exception was thrown\n+\n+  Scenario: Translating of mqtt message with valid payload and valid topic into kura response\n+  Creating mqtt message with valid payload and valid topic. Trying to translate it into kura response.\n+  Check if kura response with proper payload, metrics and correct channel is received.\n+\n+    Given I create mqtt message with valid payload \"response.code\" and valid topic \"$EDC/kapua-sys/rpione3/DEPLOY-V2/GET/packages\"\n+    When I try to translate mqtt response\n+    Then I got kura response message with proper payload metrics\n+    And I got kura response message channel with \"GET\", \"packages\", \"DEPLOY-V2\", \"$EDC\", \"kapua-sys\" and \"rpione3\" data\n+    And No exception was thrown\n+\n+  #TranslatorDataKuraMqtt\n+\n+  Scenario: Translating kura data message with valid channel and without body and metrics into mqtt message\n+  Creating kura data message with valid channel and without body and metrics. Trying to translate it into mqtt message.\n+  Check if mqtt message with valid topic and empty body is received.\n+\n+    Given I create kura data message with channel with scope \"kapua-sys\", client id \"rpione3\" and payload without body and metrics\n+    When I try to translate kura data message to mqtt message\n+    Then I got mqtt message with channel with scope \"kapua-sys\", client id \"rpione3\" and empty body\n+    And No exception was thrown\n+\n+  Scenario: Translating kura data message with valid channel, metrics and without body into mqtt message\n+  Creating kura data message with valid channel, metrics and without body. Trying to translate it into mqtt message.\n+  Check if mqtt message with valid topic and encoded body is received.\n+\n+    Given I create kura data message with channel with scope \"kapua-sys\", client id \"rpione3\" and payload without body and with metrics\n+    When I try to translate kura data message to mqtt message\n+    Then I got mqtt message with channel with scope \"kapua-sys\", client id \"rpione3\" and non empty body\n+    And No exception was thrown\n+\n+  Scenario: Translating kura data message with valid channel, body and metrics into mqtt message", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzNTk3Nw==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413635977", "bodyText": "Please change method name to: \"public void creatingMqttMessage(String payload, String topic)\" becasue you have 6 options here and not only one.", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:53:55Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzNjQ3Ng==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413636476", "bodyText": "Plesase change the method name to: \"public voidkuraResponseMessageWithPayloadAndChannelAndData()\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:54:39Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzNzkxMA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413637910", "bodyText": "Please change method name to: \"mqttMessageWithChanneScopeClienIDandBody()\" and even this is too long... you can add a comment bellow, but the method name should never be this long.", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:56:39Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzODQwOA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413638408", "bodyText": "Change method name to: \"kuraResponseMessageWithChannelAndData\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:57:18Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        String requestTopic = scope.concat(\"/\" + clientId);\n+        assertEquals(requestTopic, mqttMessage.getRequestTopic().getTopic());\n+\n+        if (mqttMessage.getPayload().getBody().length == 0) {\n+            assertTrue(mqttMessage.getPayload().getBody().length == 0);\n+        } else {\n+            assertTrue(mqttMessage.getPayload().getBody().length != 0);\n+        }\n+    }\n+\n+    @And(\"^I got kura response message channel with \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraResponseMessageChannelWithAndData(String replyPart, String requestId, String appId, String messageClassification, String scope, String clientId) {", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzODY5OA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413638698", "bodyText": "Change method name to: \"kuraResponseMessageWithPayloadBody\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:57:46Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzOTc3OQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413639779", "bodyText": "Change method name to: \"kuraDataMessageWithoutBodyAndMetrics\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:59:11Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        String requestTopic = scope.concat(\"/\" + clientId);\n+        assertEquals(requestTopic, mqttMessage.getRequestTopic().getTopic());\n+\n+        if (mqttMessage.getPayload().getBody().length == 0) {\n+            assertTrue(mqttMessage.getPayload().getBody().length == 0);\n+        } else {\n+            assertTrue(mqttMessage.getPayload().getBody().length != 0);\n+        }\n+    }\n+\n+    @And(\"^I got kura response message channel with \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraResponseMessageChannelWithAndData(String replyPart, String requestId, String appId, String messageClassification, String scope, String clientId) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getChannel().getReplyPart().equals(replyPart));\n+        assertTrue(kuraResponseMessage.getChannel().getRequestId().equals(requestId));\n+        assertTrue(kuraResponseMessage.getChannel().getAppId().equals(appId));\n+        assertTrue(kuraResponseMessage.getChannel().getMessageClassification().equals(messageClassification));\n+        assertTrue(kuraResponseMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraResponseMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and with metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithoutBodyAndWithMetrics(String scope, String clientId) {", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0MDA5NQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413640095", "bodyText": "Change method name to: \"fullKuraDataMessage\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T08:59:38Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        String requestTopic = scope.concat(\"/\" + clientId);\n+        assertEquals(requestTopic, mqttMessage.getRequestTopic().getTopic());\n+\n+        if (mqttMessage.getPayload().getBody().length == 0) {\n+            assertTrue(mqttMessage.getPayload().getBody().length == 0);\n+        } else {\n+            assertTrue(mqttMessage.getPayload().getBody().length != 0);\n+        }\n+    }\n+\n+    @And(\"^I got kura response message channel with \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraResponseMessageChannelWithAndData(String replyPart, String requestId, String appId, String messageClassification, String scope, String clientId) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getChannel().getReplyPart().equals(replyPart));\n+        assertTrue(kuraResponseMessage.getChannel().getRequestId().equals(requestId));\n+        assertTrue(kuraResponseMessage.getChannel().getAppId().equals(appId));\n+        assertTrue(kuraResponseMessage.getChannel().getMessageClassification().equals(messageClassification));\n+        assertTrue(kuraResponseMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraResponseMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and with metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithoutBodyAndWithMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload with body and metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithBodyAndMetrics(String scope, String clientId) {", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0MDY5Nw==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413640697", "bodyText": "Change method name to: \"iCreateJmsMessageWithInvalidPayloadAndTopic\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T09:00:29Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        String requestTopic = scope.concat(\"/\" + clientId);\n+        assertEquals(requestTopic, mqttMessage.getRequestTopic().getTopic());\n+\n+        if (mqttMessage.getPayload().getBody().length == 0) {\n+            assertTrue(mqttMessage.getPayload().getBody().length == 0);\n+        } else {\n+            assertTrue(mqttMessage.getPayload().getBody().length != 0);\n+        }\n+    }\n+\n+    @And(\"^I got kura response message channel with \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraResponseMessageChannelWithAndData(String replyPart, String requestId, String appId, String messageClassification, String scope, String clientId) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getChannel().getReplyPart().equals(replyPart));\n+        assertTrue(kuraResponseMessage.getChannel().getRequestId().equals(requestId));\n+        assertTrue(kuraResponseMessage.getChannel().getAppId().equals(appId));\n+        assertTrue(kuraResponseMessage.getChannel().getMessageClassification().equals(messageClassification));\n+        assertTrue(kuraResponseMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraResponseMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and with metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithoutBodyAndWithMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload with body and metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithBodyAndMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.setBody(\"Payload\".getBytes());\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I try to translate mqtt message to kura data message$\")\n+    public void iTryToTranslateMqttMessageToKuraMessage() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+        KuraDataMessage kuraDataMessage = translatorDataMqttKura.translate(mqttMessage);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Then(\"^I got kura data message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraDataMessageWithPayloadBody(String payloadType) throws Throwable {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertTrue(kuraDataMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @And(\"^I got kura data message channel with \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraDataMessageChannelWithAndData(String scope, String clientId) {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertTrue(kuraDataMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraDataMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Then(\"^I got kura data message with proper payload metrics$\")\n+    public void iGotKuraDataMessageWithProperPayloadMetrics() {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertTrue(kuraDataMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Then(\"^I got kura data message with empty payload$\")\n+    public void iGotKuraDataMessageWithEmptyPayload() {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertEquals(null, kuraDataMessage.getPayload().getBody());\n+    }\n+\n+    @Given(\"^I create jms message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iCreateJmsMessageWithInvalidPayloadAndInvalidTopic(String payload, String topic) {\n+        Date date = new Date();\n+        JmsTopic jmsTopic = new JmsTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        JmsPayload jmsPayload = new JmsPayload(kuraPayload.toByteArray());\n+        JmsMessage jmsMessage = new JmsMessage(jmsTopic, date, jmsPayload);\n+\n+        stepData.put(\"JmsMessage\", jmsMessage);\n+    }\n+\n+    @And(\"^I try to translate jms message to kura data message$\")\n+    public void iTryToTranslateJmsMessageToKuraMessage() throws Exception {\n+        JmsMessage jmsMessage = (JmsMessage) stepData.get(\"JmsMessage\");\n+\n+        try {\n+            KuraDataMessage kuraDataMessage = translatorDataJmsKura.translate(jmsMessage);\n+            stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @And(\"^I try to translate kura data message to jms message$\")\n+    public void iTryToTranslateKuraDataMessageToJmsMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        JmsMessage jmsMessage = translatorDataKuraJms.translate(kuraDataMessage);\n+        stepData.put(\"JmsMessage\", jmsMessage);\n+    }\n+\n+    @Then(\"^I got kura data message channel with \\\"([^\\\"]*)\\\" scope, \\\"([^\\\"]*)\\\" client id and proper semanticPart$\")\n+    public void iGotKuraDataMessageChannelWithScopeClientIdAndProperSemanticPart(String scope, String clientId, List<String> semanticParts) {", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0MDkwNQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413640905", "bodyText": "Change method name to: \"iGotJmsMessageWithTopicAndEmptyPayload\"", "author": "LeoNerdoG", "createdAt": "2020-04-23T09:00:46Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        String requestTopic = scope.concat(\"/\" + clientId);\n+        assertEquals(requestTopic, mqttMessage.getRequestTopic().getTopic());\n+\n+        if (mqttMessage.getPayload().getBody().length == 0) {\n+            assertTrue(mqttMessage.getPayload().getBody().length == 0);\n+        } else {\n+            assertTrue(mqttMessage.getPayload().getBody().length != 0);\n+        }\n+    }\n+\n+    @And(\"^I got kura response message channel with \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraResponseMessageChannelWithAndData(String replyPart, String requestId, String appId, String messageClassification, String scope, String clientId) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getChannel().getReplyPart().equals(replyPart));\n+        assertTrue(kuraResponseMessage.getChannel().getRequestId().equals(requestId));\n+        assertTrue(kuraResponseMessage.getChannel().getAppId().equals(appId));\n+        assertTrue(kuraResponseMessage.getChannel().getMessageClassification().equals(messageClassification));\n+        assertTrue(kuraResponseMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraResponseMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and with metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithoutBodyAndWithMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload with body and metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithBodyAndMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.setBody(\"Payload\".getBytes());\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I try to translate mqtt message to kura data message$\")\n+    public void iTryToTranslateMqttMessageToKuraMessage() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+        KuraDataMessage kuraDataMessage = translatorDataMqttKura.translate(mqttMessage);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Then(\"^I got kura data message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraDataMessageWithPayloadBody(String payloadType) throws Throwable {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertTrue(kuraDataMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @And(\"^I got kura data message channel with \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraDataMessageChannelWithAndData(String scope, String clientId) {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertTrue(kuraDataMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraDataMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Then(\"^I got kura data message with proper payload metrics$\")\n+    public void iGotKuraDataMessageWithProperPayloadMetrics() {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertTrue(kuraDataMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Then(\"^I got kura data message with empty payload$\")\n+    public void iGotKuraDataMessageWithEmptyPayload() {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertEquals(null, kuraDataMessage.getPayload().getBody());\n+    }\n+\n+    @Given(\"^I create jms message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iCreateJmsMessageWithInvalidPayloadAndInvalidTopic(String payload, String topic) {\n+        Date date = new Date();\n+        JmsTopic jmsTopic = new JmsTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        JmsPayload jmsPayload = new JmsPayload(kuraPayload.toByteArray());\n+        JmsMessage jmsMessage = new JmsMessage(jmsTopic, date, jmsPayload);\n+\n+        stepData.put(\"JmsMessage\", jmsMessage);\n+    }\n+\n+    @And(\"^I try to translate jms message to kura data message$\")\n+    public void iTryToTranslateJmsMessageToKuraMessage() throws Exception {\n+        JmsMessage jmsMessage = (JmsMessage) stepData.get(\"JmsMessage\");\n+\n+        try {\n+            KuraDataMessage kuraDataMessage = translatorDataJmsKura.translate(jmsMessage);\n+            stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @And(\"^I try to translate kura data message to jms message$\")\n+    public void iTryToTranslateKuraDataMessageToJmsMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        JmsMessage jmsMessage = translatorDataKuraJms.translate(kuraDataMessage);\n+        stepData.put(\"JmsMessage\", jmsMessage);\n+    }\n+\n+    @Then(\"^I got kura data message channel with \\\"([^\\\"]*)\\\" scope, \\\"([^\\\"]*)\\\" client id and proper semanticPart$\")\n+    public void iGotKuraDataMessageChannelWithScopeClientIdAndProperSemanticPart(String scope, String clientId, List<String> semanticParts) {\n+\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertEquals(scope, kuraDataMessage.getChannel().getScope());\n+        assertEquals(clientId, kuraDataMessage.getChannel().getClientId());\n+\n+        for (String semanticPart : semanticParts) {\n+            assertTrue(kuraDataMessage.getChannel().getSemanticParts().contains(semanticPart));\n+        }\n+    }\n+\n+    @Then(\"^I got jms message with topic \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotJmsMessageWithTopicAndEmptyPayloa(JmsTopic topic) {", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0NDE2MQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413644161", "bodyText": "insert try/catch block, the \"stepdata.put\" part can be left ouside the try/catch.", "author": "LeoNerdoG", "createdAt": "2020-04-23T09:05:24Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0NDI0OA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413644248", "bodyText": "insert try/catch block, the \"stepdata.put\" part can be left ouside the try/catch.", "author": "LeoNerdoG", "createdAt": "2020-04-23T09:05:31Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0NTMwMw==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413645303", "bodyText": "insert try/catch block, the \"stepdata.put\" part can be left ouside the try/catch.", "author": "LeoNerdoG", "createdAt": "2020-04-23T09:06:59Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        String requestTopic = scope.concat(\"/\" + clientId);\n+        assertEquals(requestTopic, mqttMessage.getRequestTopic().getTopic());\n+\n+        if (mqttMessage.getPayload().getBody().length == 0) {\n+            assertTrue(mqttMessage.getPayload().getBody().length == 0);\n+        } else {\n+            assertTrue(mqttMessage.getPayload().getBody().length != 0);\n+        }\n+    }\n+\n+    @And(\"^I got kura response message channel with \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraResponseMessageChannelWithAndData(String replyPart, String requestId, String appId, String messageClassification, String scope, String clientId) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getChannel().getReplyPart().equals(replyPart));\n+        assertTrue(kuraResponseMessage.getChannel().getRequestId().equals(requestId));\n+        assertTrue(kuraResponseMessage.getChannel().getAppId().equals(appId));\n+        assertTrue(kuraResponseMessage.getChannel().getMessageClassification().equals(messageClassification));\n+        assertTrue(kuraResponseMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraResponseMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and with metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithoutBodyAndWithMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0NTkxNw==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413645917", "bodyText": "insert try/catch block, the \"stepdata.put\" part can be left ouside the try/catch.", "author": "LeoNerdoG", "createdAt": "2020-04-23T09:07:51Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        String requestTopic = scope.concat(\"/\" + clientId);\n+        assertEquals(requestTopic, mqttMessage.getRequestTopic().getTopic());\n+\n+        if (mqttMessage.getPayload().getBody().length == 0) {\n+            assertTrue(mqttMessage.getPayload().getBody().length == 0);\n+        } else {\n+            assertTrue(mqttMessage.getPayload().getBody().length != 0);\n+        }\n+    }\n+\n+    @And(\"^I got kura response message channel with \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraResponseMessageChannelWithAndData(String replyPart, String requestId, String appId, String messageClassification, String scope, String clientId) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getChannel().getReplyPart().equals(replyPart));\n+        assertTrue(kuraResponseMessage.getChannel().getRequestId().equals(requestId));\n+        assertTrue(kuraResponseMessage.getChannel().getAppId().equals(appId));\n+        assertTrue(kuraResponseMessage.getChannel().getMessageClassification().equals(messageClassification));\n+        assertTrue(kuraResponseMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraResponseMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and with metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithoutBodyAndWithMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload with body and metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithBodyAndMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.setBody(\"Payload\".getBytes());\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0NjgzNQ==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413646835", "bodyText": "insert try/catch block, the \"stepdata.put\" part can be left ouside the try/catch.", "author": "LeoNerdoG", "createdAt": "2020-04-23T09:09:08Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        String requestTopic = scope.concat(\"/\" + clientId);\n+        assertEquals(requestTopic, mqttMessage.getRequestTopic().getTopic());\n+\n+        if (mqttMessage.getPayload().getBody().length == 0) {\n+            assertTrue(mqttMessage.getPayload().getBody().length == 0);\n+        } else {\n+            assertTrue(mqttMessage.getPayload().getBody().length != 0);\n+        }\n+    }\n+\n+    @And(\"^I got kura response message channel with \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraResponseMessageChannelWithAndData(String replyPart, String requestId, String appId, String messageClassification, String scope, String clientId) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getChannel().getReplyPart().equals(replyPart));\n+        assertTrue(kuraResponseMessage.getChannel().getRequestId().equals(requestId));\n+        assertTrue(kuraResponseMessage.getChannel().getAppId().equals(appId));\n+        assertTrue(kuraResponseMessage.getChannel().getMessageClassification().equals(messageClassification));\n+        assertTrue(kuraResponseMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraResponseMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and with metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithoutBodyAndWithMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload with body and metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithBodyAndMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.setBody(\"Payload\".getBytes());\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I try to translate mqtt message to kura data message$\")\n+    public void iTryToTranslateMqttMessageToKuraMessage() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+        KuraDataMessage kuraDataMessage = translatorDataMqttKura.translate(mqttMessage);", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0NzUzMA==", "url": "https://github.com/eclipse/kapua/pull/2941#discussion_r413647530", "bodyText": "insert try/catch block, the \"stepdata.put\" part can be left ouside the try/catch.", "author": "LeoNerdoG", "createdAt": "2020-04-23T09:10:08Z", "path": "translator/test-steps/src/main/java/org/eclipse/kapua/translator/test/steps/TranslatorSteps.java", "diffHunk": "@@ -0,0 +1,363 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech\n+ *******************************************************************************/\n+package org.eclipse.kapua.translator.test.steps;\n+\n+import cucumber.api.Scenario;\n+import cucumber.api.java.After;\n+import cucumber.api.java.Before;\n+import cucumber.api.java.en.And;\n+import cucumber.api.java.en.Given;\n+import cucumber.api.java.en.Then;\n+import cucumber.api.java.en.When;\n+import cucumber.runtime.java.guice.ScenarioScoped;\n+import org.apache.shiro.SecurityUtils;\n+import org.eclipse.kapua.KapuaException;\n+import org.eclipse.kapua.commons.security.KapuaSecurityUtils;\n+import org.eclipse.kapua.commons.security.KapuaSession;\n+import org.eclipse.kapua.commons.util.xml.XmlUtil;\n+import org.eclipse.kapua.locator.KapuaLocator;\n+import org.eclipse.kapua.qa.common.DBHelper;\n+import org.eclipse.kapua.qa.common.StepData;\n+import org.eclipse.kapua.qa.common.TestBase;\n+import org.eclipse.kapua.qa.common.TestJAXBContextProvider;\n+import org.eclipse.kapua.service.device.call.message.kura.KuraPayload;\n+import org.eclipse.kapua.service.device.call.message.kura.app.response.KuraResponseMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataChannel;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataMessage;\n+import org.eclipse.kapua.service.device.call.message.kura.data.KuraDataPayload;\n+import org.eclipse.kapua.translator.Translator;\n+import org.eclipse.kapua.translator.jms.kura.TranslatorDataJmsKura;\n+import org.eclipse.kapua.translator.kura.jms.TranslatorDataKuraJms;\n+import org.eclipse.kapua.translator.kura.mqtt.TranslatorDataKuraMqtt;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorDataMqttKura;\n+import org.eclipse.kapua.translator.mqtt.kura.TranslatorResponseMqttKura;\n+import org.eclipse.kapua.transport.message.jms.JmsMessage;\n+import org.eclipse.kapua.transport.message.jms.JmsPayload;\n+import org.eclipse.kapua.transport.message.jms.JmsTopic;\n+import org.eclipse.kapua.transport.message.mqtt.MqttMessage;\n+import org.eclipse.kapua.transport.message.mqtt.MqttPayload;\n+import org.eclipse.kapua.transport.message.mqtt.MqttTopic;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.Date;\n+import java.util.List;\n+\n+/**\n+ * Implementation of Gherkin steps used in TranslatorUnitTests.feature scenarios.\n+ */\n+@ScenarioScoped\n+public class TranslatorSteps extends TestBase {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TranslatorSteps.class);\n+\n+\n+    private DBHelper database;\n+    private ExampleTranslator exampleTranslator;\n+    private TranslatorDataMqttKura translatorDataMqttKura;\n+    private TranslatorResponseMqttKura translatorResponseMqttKura;\n+    private TranslatorDataKuraMqtt translatorDataKuraMqtt;\n+    private TranslatorDataJmsKura translatorDataJmsKura;\n+    private TranslatorDataKuraJms translatorDataKuraJms;\n+\n+    @Inject\n+    public TranslatorSteps(StepData stepData, DBHelper dbHelper) {\n+\n+        this.stepData = stepData;\n+        this.database = dbHelper;\n+    }\n+\n+    // *************************************\n+    // Definition of Cucumber scenario steps\n+    // *************************************\n+\n+    @Before\n+    public void beforeScenario(Scenario scenario) {\n+\n+        this.scenario = scenario;\n+        database.setup();\n+        stepData.clear();\n+\n+        locator = KapuaLocator.getInstance();\n+        exampleTranslator = new ExampleTranslator();\n+\n+        translatorDataMqttKura = new TranslatorDataMqttKura();\n+        translatorResponseMqttKura = new TranslatorResponseMqttKura();\n+        translatorDataKuraMqtt = new TranslatorDataKuraMqtt();\n+        translatorDataJmsKura = new TranslatorDataJmsKura();\n+        translatorDataKuraJms = new TranslatorDataKuraJms();\n+\n+        if (isUnitTest()) {\n+            // Create KapuaSession using KapuaSecurtiyUtils and kapua-sys user as logged in user.\n+            // All operations on database are performed using system user.\n+            // Only for unit tests. Integration tests assume that a real logon is performed.\n+            KapuaSession kapuaSession = new KapuaSession(null, SYS_SCOPE_ID, SYS_USER_ID);\n+            KapuaSecurityUtils.setSession(kapuaSession);\n+        }\n+\n+        // Setup JAXB context\n+        XmlUtil.setContextProvider(new TestJAXBContextProvider());\n+    }\n+\n+    @After\n+    public void afterScenario() {\n+\n+        // Clean up the database\n+        try {\n+            logger.info(\"Logging out in cleanup\");\n+            if (isIntegrationTest()) {\n+                database.deleteAll();\n+                SecurityUtils.getSubject().logout();\n+            } else {\n+                database.dropAll();\n+                database.close();\n+            }\n+            KapuaSecurityUtils.clearSession();\n+        } catch (Exception e) {\n+            logger.error(\"Failed to log out in @After\", e);\n+        }\n+    }\n+\n+    @Given(\"^I try to translate from \\\"([^\\\"]*)\\\" to \\\"([^\\\"]*)\\\"$\")\n+    public void iFindTranslator(String from, String to) throws Exception {\n+        Class fromClass;\n+        Class toClass;\n+        try {\n+            if (!from.equals(\"\") && !to.equals(\"\")) {\n+                fromClass = Class.forName(from);\n+                toClass = Class.forName(to);\n+            } else {\n+                fromClass = null;\n+                toClass = null;\n+            }\n+            Translator translator = Translator.getTranslatorFor(exampleTranslator.getClass(fromClass), exampleTranslator.getClass(toClass));\n+            stepData.put(\"Translator\", translator);\n+        } catch (Exception ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^Translator \\\"([^\\\"]*)\\\" is found$\")\n+    public void translatorIsFound(String translatorName) {\n+        Translator translator = (Translator) stepData.get(\"Translator\");\n+        assertEquals(translatorName, translator.getClass().getSimpleName());\n+    }\n+\n+    @Given(\"^I create mqtt message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iTryToProvideInvalidTopic(String payload, String topic) {\n+\n+        Date date = new Date();\n+        MqttTopic mqttTopic = new MqttTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        MqttPayload mqttPayload = new MqttPayload(kuraPayload.toByteArray());\n+        MqttMessage mqttMessage = new MqttMessage(mqttTopic, date, mqttPayload);\n+\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @When(\"^I try to translate mqtt response$\")\n+    public void iTryToTranslateMqttResponse() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        try {\n+            KuraResponseMessage kuraResponseMessage = translatorResponseMqttKura.translate(mqttMessage);\n+            stepData.put(\"KuraResponseMessage\", kuraResponseMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @Then(\"^I got kura response message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraResponseMessageWithPayloadBody(String payloadType) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @Then(\"^I got kura response message with proper payload metrics$\")\n+    public void iGotKuraResponseMessageWithPayloadAndChannelWithAndData() {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and metrics$\")\n+    public void iCreateKuraDataMessage(String scope, String clientId) {\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        Date date = new Date();\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @And(\"^I try to translate kura data message to mqtt message$\")\n+    public void iTryToTranslateKuraDataMessageToMqttMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        MqttMessage mqttMessage = translatorDataKuraMqtt.translate(kuraDataMessage);\n+        stepData.put(\"MqttMessage\", mqttMessage);\n+    }\n+\n+    @Then(\"^I got mqtt message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and (?:empty body|non empty body)$\")\n+    public void iGotMqttMessageWithChannelWithClientIdScopeAndWithoutMetricsAndBodyInPayload(String scope, String clientId) {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+\n+        String requestTopic = scope.concat(\"/\" + clientId);\n+        assertEquals(requestTopic, mqttMessage.getRequestTopic().getTopic());\n+\n+        if (mqttMessage.getPayload().getBody().length == 0) {\n+            assertTrue(mqttMessage.getPayload().getBody().length == 0);\n+        } else {\n+            assertTrue(mqttMessage.getPayload().getBody().length != 0);\n+        }\n+    }\n+\n+    @And(\"^I got kura response message channel with \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\", \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraResponseMessageChannelWithAndData(String replyPart, String requestId, String appId, String messageClassification, String scope, String clientId) {\n+        KuraResponseMessage kuraResponseMessage = (KuraResponseMessage) stepData.get(\"KuraResponseMessage\");\n+\n+        assertTrue(kuraResponseMessage.getChannel().getReplyPart().equals(replyPart));\n+        assertTrue(kuraResponseMessage.getChannel().getRequestId().equals(requestId));\n+        assertTrue(kuraResponseMessage.getChannel().getAppId().equals(appId));\n+        assertTrue(kuraResponseMessage.getChannel().getMessageClassification().equals(messageClassification));\n+        assertTrue(kuraResponseMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraResponseMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload without body and with metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithoutBodyAndWithMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I create kura data message with channel with scope \\\"([^\\\"]*)\\\", client id \\\"([^\\\"]*)\\\" and payload with body and metrics$\")\n+    public void iCreateKuraDataMessageWithChannelWithScopeClientIdAndPayloadWithBodyAndMetrics(String scope, String clientId) {\n+        Date date = new Date();\n+        KuraDataChannel kuraDataChannel = new KuraDataChannel(scope, clientId);\n+        KuraDataPayload kuraDataPayload = new KuraDataPayload();\n+        kuraDataPayload.setBody(\"Payload\".getBytes());\n+        kuraDataPayload.getMetrics().put(\"response.code\", 200);\n+        KuraDataMessage kuraDataMessage = new KuraDataMessage(kuraDataChannel, date, kuraDataPayload);\n+\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Given(\"^I try to translate mqtt message to kura data message$\")\n+    public void iTryToTranslateMqttMessageToKuraMessage() throws Exception {\n+        MqttMessage mqttMessage = (MqttMessage) stepData.get(\"MqttMessage\");\n+        KuraDataMessage kuraDataMessage = translatorDataMqttKura.translate(mqttMessage);\n+        stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+    }\n+\n+    @Then(\"^I got kura data message with \\\"([^\\\"]*)\\\" payload body$\")\n+    public void iGotKuraDataMessageWithPayloadBody(String payloadType) throws Throwable {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertTrue(kuraDataMessage.getPayload().getBody().getClass().getSimpleName().equals(payloadType));\n+    }\n+\n+    @And(\"^I got kura data message channel with \\\"(.+)\\\" and \\\"(.+)\\\" data$\")\n+    public void iGotKuraDataMessageChannelWithAndData(String scope, String clientId) {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertTrue(kuraDataMessage.getChannel().getScope().equals(scope));\n+        assertTrue(kuraDataMessage.getChannel().getClientId().equals(clientId));\n+    }\n+\n+    @Then(\"^I got kura data message with proper payload metrics$\")\n+    public void iGotKuraDataMessageWithProperPayloadMetrics() {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertTrue(kuraDataMessage.getPayload().getMetrics() != null);\n+    }\n+\n+    @Then(\"^I got kura data message with empty payload$\")\n+    public void iGotKuraDataMessageWithEmptyPayload() {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+\n+        assertEquals(null, kuraDataMessage.getPayload().getBody());\n+    }\n+\n+    @Given(\"^I create jms message with (?:valid|invalid|empty) payload \\\"([^\\\"]*)\\\" and (?:valid|invalid) topic \\\"([^\\\"]*)\\\"$\")\n+    public void iCreateJmsMessageWithInvalidPayloadAndInvalidTopic(String payload, String topic) {\n+        Date date = new Date();\n+        JmsTopic jmsTopic = new JmsTopic(topic);\n+\n+        KuraPayload kuraPayload = new KuraPayload();\n+        if (payload.equals(\"invalidPayload\") || payload.equals(\"\")) {\n+            kuraPayload.setBody(payload.getBytes());\n+        } else {\n+            kuraPayload.getMetrics().put(payload, 200);\n+        }\n+\n+        JmsPayload jmsPayload = new JmsPayload(kuraPayload.toByteArray());\n+        JmsMessage jmsMessage = new JmsMessage(jmsTopic, date, jmsPayload);\n+\n+        stepData.put(\"JmsMessage\", jmsMessage);\n+    }\n+\n+    @And(\"^I try to translate jms message to kura data message$\")\n+    public void iTryToTranslateJmsMessageToKuraMessage() throws Exception {\n+        JmsMessage jmsMessage = (JmsMessage) stepData.get(\"JmsMessage\");\n+\n+        try {\n+            KuraDataMessage kuraDataMessage = translatorDataJmsKura.translate(jmsMessage);\n+            stepData.put(\"KuraDataMessage\", kuraDataMessage);\n+        } catch (KapuaException ex) {\n+            verifyException(ex);\n+        }\n+    }\n+\n+    @And(\"^I try to translate kura data message to jms message$\")\n+    public void iTryToTranslateKuraDataMessageToJmsMessage() throws Exception {\n+        KuraDataMessage kuraDataMessage = (KuraDataMessage) stepData.get(\"KuraDataMessage\");\n+        JmsMessage jmsMessage = translatorDataKuraJms.translate(kuraDataMessage);", "originalCommit": "400eb7bd926531f5b12f378c2c62c5fe8f8e1713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2d7d0206645175175a1a27a3ca30d84bb82b5188", "url": "https://github.com/eclipse/kapua/commit/2d7d0206645175175a1a27a3ca30d84bb82b5188", "message": "Added unit tests for translator part1\n\nSigned-off-by: code-incubus <nemanja.milutinovic@comtrade.com>", "committedDate": "2020-04-24T22:21:26Z", "type": "forcePushed"}, {"oid": "5c351a848e74a3e0206411470d734c3d4650b36b", "url": "https://github.com/eclipse/kapua/commit/5c351a848e74a3e0206411470d734c3d4650b36b", "message": "Added unit tests for translator part1\n\nSigned-off-by: code-incubus <nemanja.milutinovic@comtrade.com>", "committedDate": "2020-04-24T22:38:20Z", "type": "commit"}, {"oid": "5c351a848e74a3e0206411470d734c3d4650b36b", "url": "https://github.com/eclipse/kapua/commit/5c351a848e74a3e0206411470d734c3d4650b36b", "message": "Added unit tests for translator part1\n\nSigned-off-by: code-incubus <nemanja.milutinovic@comtrade.com>", "committedDate": "2020-04-24T22:38:20Z", "type": "forcePushed"}]}