{"pr_number": 1004, "pr_title": "feat: migrate resource group tagging interceptor to V2", "pr_createdAt": "2020-02-05T07:51:45Z", "pr_url": "https://github.com/Azure/azure-libraries-for-java/pull/1004", "timeline": [{"oid": "b72f3a57b03d2fe1151127e0d0f6db68d79c38c9", "url": "https://github.com/Azure/azure-libraries-for-java/commit/b72f3a57b03d2fe1151127e0d0f6db68d79c38c9", "message": "feat: migrate resource group tagging interceptor to V2", "committedDate": "2020-02-05T06:35:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwNzIxMA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1004#discussion_r375107210", "bodyText": "Do not use exception as flow control.", "author": "weidongxu-microsoft", "createdAt": "2020-02-05T08:07:16Z", "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/ResourceGroupTaggingPolicy.java", "diffHunk": "@@ -0,0 +1,88 @@\n+\n+\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+\n+package com.azure.management.resources.core;\n+\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.http.HttpPipelineNextPolicy;\n+import com.azure.core.http.HttpRequest;\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.management.serializer.AzureJacksonAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+import com.azure.management.resources.models.ResourceGroupInner;\n+import reactor.core.publisher.Mono;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.time.Instant;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Http Pipeline Policy for tagging resource groups created in tests.\n+ */\n+public class ResourceGroupTaggingPolicy implements HttpPipelinePolicy {\n+//    private static final String LOGGING_CONTEXT = \"com.microsoft.azure.management.resources.ResourceGroups createOrUpdate\";\n+    private static final String CALLER_METHOD = \"com.azure.management.resources.models.ResourceGroupsInner$ResourceGroupsService.createOrUpdate\";\n+    private AzureJacksonAdapter adapter = new AzureJacksonAdapter();\n+\n+    @Override\n+    public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n+        if (\"PUT\".equals(context.getHttpRequest().getHttpMethod().name()) &&\n+                context.getHttpRequest().getUrl().toString().contains(\"/resourcegroups/\") &&\n+                CALLER_METHOD.equals(context.getData(\"caller-method\").orElse(\"\").toString())) {\n+            return context.getHttpRequest().copy().getBody().flatMap(\n+                byteBuffer -> {\n+                    byte[] body = new byte[byteBuffer.remaining()];\n+                    byteBuffer.get(body);\n+                    String bodyStr = new String(body, StandardCharsets.UTF_8);\n+\n+                    ResourceGroupInner resourceGroupInner;\n+                    try {\n+                        resourceGroupInner = adapter.deserialize(bodyStr, ResourceGroupInner.class, SerializerEncoding.JSON);\n+                        if (resourceGroupInner == null) {\n+                            throw new IOException();", "originalCommit": "b72f3a57b03d2fe1151127e0d0f6db68d79c38c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwNzMzNA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1004#discussion_r375107334", "bodyText": "Clean up a bit.", "author": "weidongxu-microsoft", "createdAt": "2020-02-05T08:07:37Z", "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/ResourceGroupTaggingPolicy.java", "diffHunk": "@@ -0,0 +1,88 @@\n+\n+", "originalCommit": "b72f3a57b03d2fe1151127e0d0f6db68d79c38c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwODE2Mw==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1004#discussion_r375108163", "bodyText": "Will it overwrite users with same name?", "author": "weidongxu-microsoft", "createdAt": "2020-02-05T08:10:02Z", "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/ResourceGroupTaggingPolicy.java", "diffHunk": "@@ -0,0 +1,88 @@\n+\n+\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+\n+package com.azure.management.resources.core;\n+\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.http.HttpPipelineNextPolicy;\n+import com.azure.core.http.HttpRequest;\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.management.serializer.AzureJacksonAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+import com.azure.management.resources.models.ResourceGroupInner;\n+import reactor.core.publisher.Mono;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.time.Instant;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Http Pipeline Policy for tagging resource groups created in tests.\n+ */\n+public class ResourceGroupTaggingPolicy implements HttpPipelinePolicy {\n+//    private static final String LOGGING_CONTEXT = \"com.microsoft.azure.management.resources.ResourceGroups createOrUpdate\";\n+    private static final String CALLER_METHOD = \"com.azure.management.resources.models.ResourceGroupsInner$ResourceGroupsService.createOrUpdate\";\n+    private AzureJacksonAdapter adapter = new AzureJacksonAdapter();\n+\n+    @Override\n+    public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n+        if (\"PUT\".equals(context.getHttpRequest().getHttpMethod().name()) &&\n+                context.getHttpRequest().getUrl().toString().contains(\"/resourcegroups/\") &&\n+                CALLER_METHOD.equals(context.getData(\"caller-method\").orElse(\"\").toString())) {\n+            return context.getHttpRequest().copy().getBody().flatMap(\n+                byteBuffer -> {\n+                    byte[] body = new byte[byteBuffer.remaining()];\n+                    byteBuffer.get(body);\n+                    String bodyStr = new String(body, StandardCharsets.UTF_8);\n+\n+                    ResourceGroupInner resourceGroupInner;\n+                    try {\n+                        resourceGroupInner = adapter.deserialize(bodyStr, ResourceGroupInner.class, SerializerEncoding.JSON);\n+                        if (resourceGroupInner == null) {\n+                            throw new IOException();\n+                        }\n+                    } catch (IOException e) {\n+                        return Mono.error(new RuntimeException(\"Failed to deserialize \" + bodyStr));\n+                    }\n+\n+                    Map<String, String> tags = resourceGroupInner.getTags();\n+                    if (tags == null) {\n+                        tags = new HashMap<>();\n+                    }\n+                    tags.put(\"product\", \"javasdk\");\n+                    tags.put(\"cause\", \"automation\");\n+                    tags.put(\"date\", Instant.now().toString());", "originalCommit": "b72f3a57b03d2fe1151127e0d0f6db68d79c38c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTExMDE5OA==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1004#discussion_r375110198", "bodyText": "Yes, so it is only used at unit test.", "author": "ChenTanyi", "createdAt": "2020-02-05T08:15:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwODE2Mw=="}], "type": "inlineReview"}, {"oid": "9341caefc6c6eb610495cc765ba30ad4219cb53f", "url": "https://github.com/Azure/azure-libraries-for-java/commit/9341caefc6c6eb610495cc765ba30ad4219cb53f", "message": "fix: throw original IOException and throw runtime exception for null pointer", "committedDate": "2020-02-05T08:30:59Z", "type": "commit"}, {"oid": "53fa7f3b37c486e52c956153273e7c9fba1c4fdc", "url": "https://github.com/Azure/azure-libraries-for-java/commit/53fa7f3b37c486e52c956153273e7c9fba1c4fdc", "message": "fix: remove extra line", "committedDate": "2020-02-05T08:35:02Z", "type": "commit"}]}