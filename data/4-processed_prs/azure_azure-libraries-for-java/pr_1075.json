{"pr_number": 1075, "pr_title": "Compute: fix playback tests", "pr_createdAt": "2020-03-06T09:57:04Z", "pr_url": "https://github.com/Azure/azure-libraries-for-java/pull/1075", "timeline": [{"oid": "c114e33d245e763f17c19eadd0d65ccd1f308c58", "url": "https://github.com/Azure/azure-libraries-for-java/commit/c114e33d245e763f17c19eadd0d65ccd1f308c58", "message": "Compute: fix playback tests", "committedDate": "2020-03-06T09:53:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgzMTI5OQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1075#discussion_r388831299", "bodyText": "Maybe you can name it as loadCurrentPrimaryLoadBalancersIfAvailableAsync to make it clearer that it is async method.", "author": "weidongxu-microsoft", "createdAt": "2020-03-06T10:39:16Z", "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "diffHunk": "@@ -334,7 +334,7 @@ public Network getPrimaryNetwork() throws IOException {\n     @Override\n     public LoadBalancer getPrimaryInternetFacingLoadBalancer() throws IOException {\n         if (this.primaryInternetFacingLoadBalancer == null) {\n-            loadCurrentPrimaryLoadBalancersIfAvailable();\n+            loadCurrentPrimaryLoadBalancersIfAvailable().block();", "originalCommit": "c114e33d245e763f17c19eadd0d65ccd1f308c58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgzNTA4MQ==", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1075#discussion_r388835081", "bodyText": "self.map(ignored -> firstLoadBalancerId).flatMap(id -> ... might be better, since it keeps Mono (if I did not misunderstand, self is Mono.just(this), and you have no use on the Flux in middle)", "author": "weidongxu-microsoft", "createdAt": "2020-03-06T10:47:42Z", "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "diffHunk": "@@ -1902,17 +1906,18 @@ private void loadCurrentPrimaryLoadBalancersIfAvailable() throws IOException {\n         }\n \n         if (firstLoadBalancerId == null) {\n-            return;\n+            return self;\n         }\n \n-        LoadBalancer loadBalancer1 = this.networkManager\n-                .loadBalancers()\n-                .getById(firstLoadBalancerId);\n-        if (loadBalancer1.publicIPAddressIds() != null && loadBalancer1.publicIPAddressIds().size() > 0) {\n-            this.primaryInternetFacingLoadBalancer = loadBalancer1;\n-        } else {\n-            this.primaryInternalLoadBalancer = loadBalancer1;\n-        }\n+        self = self.concatWith(Mono.just(firstLoadBalancerId).flatMap(id -> this.networkManager.loadBalancers().getByIdAsync(id)", "originalCommit": "c114e33d245e763f17c19eadd0d65ccd1f308c58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6db0b114567ac7748cb95bf5cc61ceceec55f081", "url": "https://github.com/Azure/azure-libraries-for-java/commit/6db0b114567ac7748cb95bf5cc61ceceec55f081", "message": "Compute: rename async methods", "committedDate": "2020-03-09T04:43:26Z", "type": "commit"}]}