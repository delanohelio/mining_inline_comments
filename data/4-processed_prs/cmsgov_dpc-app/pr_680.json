{"pr_number": 680, "pr_title": "DPC-1158: Cannot delete Thomas Jefferson University or Webster organization records in the admin portal", "pr_createdAt": "2020-03-10T21:59:06Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/680", "timeline": [{"oid": "36e876912827501f91f8ad45025e8d18f60e7d91", "url": "https://github.com/CMSgov/dpc-app/commit/36e876912827501f91f8ad45025e8d18f60e7d91", "message": "switched delegated_macaroon with golden_macaroon to delete_organization function", "committedDate": "2020-03-05T13:58:58Z", "type": "commit"}, {"oid": "c34bf44fe95c5f18c81d19e7db6c9f99930a6c18", "url": "https://github.com/CMSgov/dpc-app/commit/c34bf44fe95c5f18c81d19e7db6c9f99930a6c18", "message": "delete_api_org exception", "committedDate": "2020-03-10T21:27:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0Mjk3OQ==", "url": "https://github.com/CMSgov/dpc-app/pull/680#discussion_r390642979", "bodyText": "Use a guard clause instead of wrapping the code inside a conditional expression.", "author": "codeclimate", "createdAt": "2020-03-10T22:15:14Z", "path": "dpc-web/app/models/registered_organization.rb", "diffHunk": "@@ -76,10 +76,15 @@ def update_api_endpoint\n   def delete_api_organization\n     api_request = APIClient.new(api_env).delete_organization(self)\n     api_response = api_request.response_body\n-    return if api_request.response_successful?\n \n-    errors.add(:base, \"couldn't be deleted from #{api_env} API: #{api_response}\")\n-    throw(:abort)\n+    if api_request.response_successful?", "originalCommit": "c34bf44fe95c5f18c81d19e7db6c9f99930a6c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0Mjk4MQ==", "url": "https://github.com/CMSgov/dpc-app/pull/680#discussion_r390642981", "bodyText": "Prefer single-quoted strings when you don't need string interpolation or special symbols.", "author": "codeclimate", "createdAt": "2020-03-10T22:15:15Z", "path": "dpc-web/app/models/registered_organization.rb", "diffHunk": "@@ -76,10 +76,15 @@ def update_api_endpoint\n   def delete_api_organization\n     api_request = APIClient.new(api_env).delete_organization(self)\n     api_response = api_request.response_body\n-    return if api_request.response_successful?\n \n-    errors.add(:base, \"couldn't be deleted from #{api_env} API: #{api_response}\")\n-    throw(:abort)\n+    if api_request.response_successful?\n+      return\n+    elsif api_response.include? \"Cannot find organization\"", "originalCommit": "c34bf44fe95c5f18c81d19e7db6c9f99930a6c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a6e19431fbd037f2bd6fc7f1377e7a350df08983", "url": "https://github.com/CMSgov/dpc-app/commit/a6e19431fbd037f2bd6fc7f1377e7a350df08983", "message": "climate code reqs", "committedDate": "2020-03-11T13:52:47Z", "type": "commit"}, {"oid": "2f2ebafd86847304b6d22b62caa58c513604a090", "url": "https://github.com/CMSgov/dpc-app/commit/2f2ebafd86847304b6d22b62caa58c513604a090", "message": "Registered organization spec test start", "committedDate": "2020-03-11T23:09:25Z", "type": "commit"}, {"oid": "614bd4a31e380c1fd10cbe6d833d2ed73cde8f1f", "url": "https://github.com/CMSgov/dpc-app/commit/614bd4a31e380c1fd10cbe6d833d2ed73cde8f1f", "message": "Test for deleting an organization missing in API complete\n\nChecked for false positives and can confirm test works.", "committedDate": "2020-03-12T14:58:02Z", "type": "commit"}, {"oid": "dfdd64633cbf9f1ed8fe78e196190107d2cbcaea", "url": "https://github.com/CMSgov/dpc-app/commit/dfdd64633cbf9f1ed8fe78e196190107d2cbcaea", "message": "Merge branch 'master' into nzonnenberg/DPC-1158-delete-org-from-api-bug", "committedDate": "2020-03-12T15:03:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyNDkyMA==", "url": "https://github.com/CMSgov/dpc-app/pull/680#discussion_r393324920", "bodyText": "In specs, it's conventional to assign variables used across examples with let outside of the before block. Instead of creating an instance variable here, before line 187 add this let block:\nlet(:registered_organization) { create(:registered_organization } \n\nAnd then you'll be able to use registered_organization in the examples instead of @reg_org", "author": "switzersc-usds", "createdAt": "2020-03-16T21:39:33Z", "path": "dpc-web/spec/models/registered_organization_spec.rb", "diffHunk": "@@ -184,18 +184,29 @@\n       end\n \n       context 'failed API request' do\n-        it 'adds to errors and does not destroy object' do\n+        before(:each) do\n           stub_api_client(message: :create_organization, success: true, response: default_org_creation_response)\n-          reg_org = create(:registered_organization)\n+          @reg_org = create(:registered_organization)", "originalCommit": "dfdd64633cbf9f1ed8fe78e196190107d2cbcaea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3NjE2MA==", "url": "https://github.com/CMSgov/dpc-app/pull/680#discussion_r393676160", "bodyText": "When I tried using let(:registered_organization) { create(:registered_organization) } the test responded with the following error for both tests:\nFailure/Error:\n       api_request = APIClient.new(api_env).create_organization(\n         organization,\n         fhir_endpoint: fhir_endpoint.attributes.slice('name', 'status', 'uri')\n       )\n     \n       #<InstanceDouble(APIClient) (anonymous)> received unexpected message :create_organization with (#<Organization id: 1, name: \"The Health Factory 1\", organization_type: \"primary_care_clinic\", num_pro...-03-17 13:18:11\", updated_at: \"2020-03-17 13:18:11\", npi: \"test-npi-1\", vendor: nil, vendor_id: nil>, {:fhir_endpoint=>{\"name\"=>\"DPC Sandbox Test Endpoint\", \"status\"=>\"test\", \"uri\"=>\"https://dpc.cms.gov/test-endpoint\"}})", "author": "Sun-Mountain", "createdAt": "2020-03-17T13:25:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyNDkyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyOTQzMg==", "url": "https://github.com/CMSgov/dpc-app/pull/680#discussion_r393729432", "bodyText": "Gotcha. Looks like that would be caused by let getting called before the API client gets stubbed (line 188). I don't think this is a blocker but I would prefer using let or local variables rather than instance variables, partly as a project convention and partly because ivars can end up being cruft that adds either latency or confusion later, IME.", "author": "switzersc-usds", "createdAt": "2020-03-17T14:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyNDkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyNTYyNQ==", "url": "https://github.com/CMSgov/dpc-app/pull/680#discussion_r393325625", "bodyText": "What do you think about logging that the org wasn't found in the API? I'm inclined to suggest it in case we have to trace a transaction later; logging that there was an unexpected consistency in the transaction chain might be helpful.", "author": "switzersc-usds", "createdAt": "2020-03-16T21:41:23Z", "path": "dpc-web/app/models/registered_organization.rb", "diffHunk": "@@ -76,8 +76,11 @@ def update_api_endpoint\n   def delete_api_organization\n     api_request = APIClient.new(api_env).delete_organization(self)\n     api_response = api_request.response_body\n+\n     return if api_request.response_successful?\n \n+    return if api_response.include? 'Cannot find organization'", "originalCommit": "dfdd64633cbf9f1ed8fe78e196190107d2cbcaea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3ODY3Nw==", "url": "https://github.com/CMSgov/dpc-app/pull/680#discussion_r393678677", "bodyText": "I agree. How would you log this in the app?", "author": "Sun-Mountain", "createdAt": "2020-03-17T13:29:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyNTYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NDI5Nw==", "url": "https://github.com/CMSgov/dpc-app/pull/680#discussion_r393694297", "bodyText": "if  api_response.include? 'Cannot find organization'\n  Rails.logger.warn \"Cannot delete API organization with id #{api_id}: Organization not found.\"\n  return\nend", "author": "switzersc-usds", "createdAt": "2020-03-17T13:52:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyNTYyNQ=="}], "type": "inlineReview"}, {"oid": "174a6f7e72fc14fb7fcc62edde3c95d9463ec23a", "url": "https://github.com/CMSgov/dpc-app/commit/174a6f7e72fc14fb7fcc62edde3c95d9463ec23a", "message": "Added rails logger for 'Cannot find organization'", "committedDate": "2020-03-18T13:42:02Z", "type": "commit"}, {"oid": "039eadcfb41870e3b96dcaa5227cb865db4eda86", "url": "https://github.com/CMSgov/dpc-app/commit/039eadcfb41870e3b96dcaa5227cb865db4eda86", "message": "Merge branch 'nzonnenberg/DPC-1158-delete-org-from-api-bug' of github.com:CMSgov/dpc-app into nzonnenberg/DPC-1158-delete-org-from-api-bug\n\nFixing out of sync branches.", "committedDate": "2020-03-18T13:43:30Z", "type": "commit"}, {"oid": "bf94bd4bc0473125bf1c468b7872017bbd19c15c", "url": "https://github.com/CMSgov/dpc-app/commit/bf94bd4bc0473125bf1c468b7872017bbd19c15c", "message": "Merge branch 'master' into nzonnenberg/DPC-1158-delete-org-from-api-bug", "committedDate": "2020-03-18T15:00:29Z", "type": "commit"}]}