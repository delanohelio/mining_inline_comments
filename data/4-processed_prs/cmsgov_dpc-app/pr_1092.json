{"pr_number": 1092, "pr_title": "Silvio/dpc 710 attr performance test for orgs", "pr_createdAt": "2020-10-19T15:35:25Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/1092", "timeline": [{"oid": "547e90f2a9a07bbb9e50529277e8a1094d895c2a", "url": "https://github.com/CMSgov/dpc-app/commit/547e90f2a9a07bbb9e50529277e8a1094d895c2a", "message": "add org tests to test runner and insert recover cleanup catchall", "committedDate": "2020-10-16T23:21:06Z", "type": "commit"}, {"oid": "082e4e8b78f000f745c44910b95b3afa1fe4d2e8", "url": "https://github.com/CMSgov/dpc-app/commit/082e4e8b78f000f745c44910b95b3afa1fe4d2e8", "message": "Initial org test scaffolding plus POST/DELETE test runs", "committedDate": "2020-10-16T23:24:25Z", "type": "commit"}, {"oid": "b7ee0d7595ebed999cbf7e98deb09b574920a743", "url": "https://github.com/CMSgov/dpc-app/commit/b7ee0d7595ebed999cbf7e98deb09b574920a743", "message": "Add test org req file", "committedDate": "2020-10-16T23:24:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg3MTcxOA==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r507871718", "bodyText": "Method orgTargeter.genReqs has a Cognitive Complexity of 17 (exceeds 9 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-10-19T16:02:22Z", "path": "dpc-testing/performance/organization.go", "diffHunk": "@@ -0,0 +1,150 @@\n+package main\n+\n+import (\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"path/filepath\"\n+\n+\tvegeta \"github.com/tsenart/vegeta/lib\"\n+)\n+\n+type orgTargetConfig struct {\n+\tMethod      string\n+\tBaseURL     string\n+\tPath        string\n+\tAccessToken string\n+\tFilePattern string   // Optional file pattern location(s)\n+\tIDs         []string // Optional list of ids to append url\n+}\n+\n+type orgTargeter struct {\n+\treqs chan Req\n+\torgTargetConfig\n+}\n+\n+type Req struct {\n+\tid   *string\n+\tbody []byte\n+}\n+\n+func NewOrgTargeter(config orgTargetConfig) *orgTargeter {\n+\ttargeter := &orgTargeter{\n+\t\treqs:            make(chan Req),\n+\t\torgTargetConfig: config,\n+\t}\n+\n+\ttargeter.genReqs()\n+\n+\treturn targeter\n+}\n+\n+func (o *orgTargeter) genReqs() {", "originalCommit": "b7ee0d7595ebed999cbf7e98deb09b574920a743", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a8a843d4c8c222cdfc35a43654ec13541c68110c", "url": "https://github.com/CMSgov/dpc-app/commit/a8a843d4c8c222cdfc35a43654ec13541c68110c", "message": "Merge branch 'master' into silvio/dpc-710-attr-performance-test-for-orgs", "committedDate": "2020-10-19T20:55:27Z", "type": "commit"}, {"oid": "89e56aadd9dd017ddb5615d2716fd59616853a36", "url": "https://github.com/CMSgov/dpc-app/commit/89e56aadd9dd017ddb5615d2716fd59616853a36", "message": "Add base org test file and test json update request files", "committedDate": "2020-10-20T20:20:24Z", "type": "commit"}, {"oid": "2fd52d9284ab90e33c5be70bed095126e07d9db0", "url": "https://github.com/CMSgov/dpc-app/commit/2fd52d9284ab90e33c5be70bed095126e07d9db0", "message": "Remove access token pass to testOrganizationEndpoints test runner", "committedDate": "2020-10-20T20:21:02Z", "type": "commit"}, {"oid": "5de4f5b02b065b2b1eec872f5f0bb5b89fc2155d", "url": "https://github.com/CMSgov/dpc-app/commit/5de4f5b02b065b2b1eec872f5f0bb5b89fc2155d", "message": "Remove id generation from go routine, pair org create down to one and include PUT and GET request tests", "committedDate": "2020-10-20T20:21:51Z", "type": "commit"}, {"oid": "91843471425cdf37ab0963384165e0c6acb4cf40", "url": "https://github.com/CMSgov/dpc-app/commit/91843471425cdf37ab0963384165e0c6acb4cf40", "message": "Add comments to test script", "committedDate": "2020-10-20T20:41:13Z", "type": "commit"}, {"oid": "7c30c9dd37b875c02e41449d6793307962f716ae", "url": "https://github.com/CMSgov/dpc-app/commit/7c30c9dd37b875c02e41449d6793307962f716ae", "message": "Readd cleanup call at end of test run", "committedDate": "2020-10-20T20:42:20Z", "type": "commit"}, {"oid": "ee057428dafbac87644ed0b9d0d414f992803f54", "url": "https://github.com/CMSgov/dpc-app/commit/ee057428dafbac87644ed0b9d0d414f992803f54", "message": "Merge branch 'master' into silvio/dpc-710-attr-performance-test-for-orgs", "committedDate": "2020-10-20T20:43:03Z", "type": "commit"}, {"oid": "aff422f5e221abf4b90b72262f6331a2b8e04137", "url": "https://github.com/CMSgov/dpc-app/commit/aff422f5e221abf4b90b72262f6331a2b8e04137", "message": "remove unused recover function", "committedDate": "2020-10-20T20:56:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg1MzMyOQ==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r508853329", "bodyText": "Method orgTargeter.genReqs has a Cognitive Complexity of 13 (exceeds 9 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-10-20T21:33:07Z", "path": "dpc-testing/performance/organization.go", "diffHunk": "@@ -0,0 +1,175 @@\n+package main\n+\n+import (\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"path/filepath\"\n+\n+\tvegeta \"github.com/tsenart/vegeta/lib\"\n+)\n+\n+type orgTargetConfig struct {\n+\tMethod      string\n+\tBaseURL     string\n+\tPath        string\n+\tAccessToken string\n+\tFilePattern string // Optional file pattern location(s)\n+\tID          string // Optional id to append to url\n+}\n+\n+type orgTargeter struct {\n+\tbodies chan []byte // channel for generating new request bodies\n+\torgTargetConfig\n+}\n+\n+// NewOrgTargeter constructs a new orgTargeter using provided config\n+func NewOrgTargeter(config orgTargetConfig) *orgTargeter {\n+\ttargeter := &orgTargeter{\n+\t\tbodies:          make(chan []byte),\n+\t\torgTargetConfig: config,\n+\t}\n+\n+\ttargeter.genReqs()\n+\n+\treturn targeter\n+}\n+\n+// genReqs setups the go routine necessary to generate new request bodies\n+// used by the vegeta test runner\n+func (o *orgTargeter) genReqs() {", "originalCommit": "aff422f5e221abf4b90b72262f6331a2b8e04137", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4dbd4a7f31d011cf96543d4e4e5472fac330134f", "url": "https://github.com/CMSgov/dpc-app/commit/4dbd4a7f31d011cf96543d4e4e5472fac330134f", "message": "readd orgid value", "committedDate": "2020-10-20T23:04:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NTg4Mw==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r509265883", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // builtTarget is the function passed to the vegeta test runner. It expects a\n          \n          \n            \n            // buildTarget is the function passed to the vegeta test runner. It expects a", "author": "em1", "createdAt": "2020-10-21T13:13:05Z", "path": "dpc-testing/performance/organization.go", "diffHunk": "@@ -0,0 +1,175 @@\n+package main\n+\n+import (\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"path/filepath\"\n+\n+\tvegeta \"github.com/tsenart/vegeta/lib\"\n+)\n+\n+type orgTargetConfig struct {\n+\tMethod      string\n+\tBaseURL     string\n+\tPath        string\n+\tAccessToken string\n+\tFilePattern string // Optional file pattern location(s)\n+\tID          string // Optional id to append to url\n+}\n+\n+type orgTargeter struct {\n+\tbodies chan []byte // channel for generating new request bodies\n+\torgTargetConfig\n+}\n+\n+// NewOrgTargeter constructs a new orgTargeter using provided config\n+func NewOrgTargeter(config orgTargetConfig) *orgTargeter {\n+\ttargeter := &orgTargeter{\n+\t\tbodies:          make(chan []byte),\n+\t\torgTargetConfig: config,\n+\t}\n+\n+\ttargeter.genReqs()\n+\n+\treturn targeter\n+}\n+\n+// genReqs setups the go routine necessary to generate new request bodies\n+// used by the vegeta test runner\n+func (o *orgTargeter) genReqs() {\n+\tbodies := make([][]byte, 0)\n+\n+\tif o.FilePattern != \"\" {\n+\t\tfileNames, err := filepath.Glob(o.FilePattern)\n+\t\tif err != nil {\n+\t\t\tpanic(err)\n+\t\t}\n+\n+\t\tfor _, f := range fileNames {\n+\t\t\tbody, err := ioutil.ReadFile(f)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t\tbodies = append(bodies, body)\n+\t\t}\n+\t}\n+\n+\t// kicks off generator to pull a new body from the request files that\n+\t// were loaded previously\n+\tgo func() {\n+\t\tfor {\n+\t\t\tfor _, body := range bodies {\n+\t\t\t\to.bodies <- body\n+\t\t\t}\n+\t\t}\n+\t}()\n+}\n+\n+// builtTarget is the function passed to the vegeta test runner. It expects a", "originalCommit": "4dbd4a7f31d011cf96543d4e4e5472fac330134f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "accae897724256185d882beb64b51c50d3b56fce", "url": "https://github.com/CMSgov/dpc-app/commit/accae897724256185d882beb64b51c50d3b56fce", "message": "Update dpc-testing/performance/organization.go\n\nCo-authored-by: Emily Hart <1923441+embh@users.noreply.github.com>", "committedDate": "2020-10-21T15:28:35Z", "type": "commit"}, {"oid": "040a85d80fa64de06a4472221dd519915b4e35fa", "url": "https://github.com/CMSgov/dpc-app/commit/040a85d80fa64de06a4472221dd519915b4e35fa", "message": "Merge branch 'master' into silvio/dpc-710-attr-performance-test-for-orgs", "committedDate": "2020-10-21T19:10:54Z", "type": "commit"}, {"oid": "bb802289b2547eff752d1bed8e0a5c8becffcca0", "url": "https://github.com/CMSgov/dpc-app/commit/bb802289b2547eff752d1bed8e0a5c8becffcca0", "message": "Merge branch 'master' into silvio/dpc-710-attr-performance-test-for-orgs", "committedDate": "2020-10-23T16:23:43Z", "type": "commit"}, {"oid": "bb1cdb806795f387becf0a3286a5801c13e1f61e", "url": "https://github.com/CMSgov/dpc-app/commit/bb1cdb806795f387becf0a3286a5801c13e1f61e", "message": "refactor main.go file", "committedDate": "2020-10-26T20:48:18Z", "type": "commit"}, {"oid": "1298e87809e781271c22f2273181eaa51ee048f5", "url": "https://github.com/CMSgov/dpc-app/commit/1298e87809e781271c22f2273181eaa51ee048f5", "message": "refactor tests files and setup file into new file structure", "committedDate": "2020-10-26T20:49:26Z", "type": "commit"}, {"oid": "5cd5fed1d27c7db2ec3746f7dd95376706e24b09", "url": "https://github.com/CMSgov/dpc-app/commit/5cd5fed1d27c7db2ec3746f7dd95376706e24b09", "message": "Updated readme", "committedDate": "2020-10-26T20:49:37Z", "type": "commit"}, {"oid": "b93a8aef751a8dc349ec8439dfb89eb14bf0d4b1", "url": "https://github.com/CMSgov/dpc-app/commit/b93a8aef751a8dc349ec8439dfb89eb14bf0d4b1", "message": "Updated base organization json file", "committedDate": "2020-10-26T20:50:16Z", "type": "commit"}, {"oid": "c1a456b183fb2172dd55d438d8f07fe848fbe237", "url": "https://github.com/CMSgov/dpc-app/commit/c1a456b183fb2172dd55d438d8f07fe848fbe237", "message": "merge upstream", "committedDate": "2020-10-26T20:51:35Z", "type": "commit"}, {"oid": "3a152fb05638c4a2fc96ea4cfa04766a99c2f598", "url": "https://github.com/CMSgov/dpc-app/commit/3a152fb05638c4a2fc96ea4cfa04766a99c2f598", "message": "Remove duplicate method", "committedDate": "2020-10-26T20:59:24Z", "type": "commit"}, {"oid": "7561f8fdee9e021bc52c215f53e99fb5aa84bc9a", "url": "https://github.com/CMSgov/dpc-app/commit/7561f8fdee9e021bc52c215f53e99fb5aa84bc9a", "message": "move org and accesstoken generation to test files", "committedDate": "2020-10-26T23:03:17Z", "type": "commit"}, {"oid": "1ad439246838984047bdf88df513c7372c418771", "url": "https://github.com/CMSgov/dpc-app/commit/1ad439246838984047bdf88df513c7372c418771", "message": "remove clienttoken return from setuporgauth function", "committedDate": "2020-10-26T23:03:51Z", "type": "commit"}, {"oid": "ddb4b089a08498a93b8f2b8002b9cef1f78d4805", "url": "https://github.com/CMSgov/dpc-app/commit/ddb4b089a08498a93b8f2b8002b9cef1f78d4805", "message": "Add package comment", "committedDate": "2020-10-26T23:04:21Z", "type": "commit"}, {"oid": "e0722063519fcf90258c4f874cefa5a8586b3303", "url": "https://github.com/CMSgov/dpc-app/commit/e0722063519fcf90258c4f874cefa5a8586b3303", "message": "Move org id creation to setupauthorg method", "committedDate": "2020-10-26T23:15:58Z", "type": "commit"}, {"oid": "0d1e675fb9c9ec983d3de0ab9f55c2f53f1ac4b4", "url": "https://github.com/CMSgov/dpc-app/commit/0d1e675fb9c9ec983d3de0ab9f55c2f53f1ac4b4", "message": "Increase vegeta targeter timeout to decrease timeout likelihood", "committedDate": "2020-10-26T23:16:36Z", "type": "commit"}, {"oid": "979bd7eeef0e9dbc362dfa5f9d242a5d9c29500d", "url": "https://github.com/CMSgov/dpc-app/commit/979bd7eeef0e9dbc362dfa5f9d242a5d9c29500d", "message": "add practitioner tests", "committedDate": "2020-10-26T23:17:14Z", "type": "commit"}, {"oid": "4f4fcd177831b194328189793fc9a58f25116f3c", "url": "https://github.com/CMSgov/dpc-app/commit/4f4fcd177831b194328189793fc9a58f25116f3c", "message": "Add practitioner json test files", "committedDate": "2020-10-26T23:17:48Z", "type": "commit"}, {"oid": "7e03ac4f0775d1a14af72746e8651b0ca7880c33", "url": "https://github.com/CMSgov/dpc-app/commit/7e03ac4f0775d1a14af72746e8651b0ca7880c33", "message": "update import for practitioner to be the same as the other files", "committedDate": "2020-10-26T23:27:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2MDc0Nw==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512360747", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "author": "codeclimate", "createdAt": "2020-10-27T01:22:06Z", "path": "dpc-testing/performance/pkg/dpc/test_patient.go", "diffHunk": "@@ -0,0 +1,65 @@\n+package dpc", "originalCommit": "7e03ac4f0775d1a14af72746e8651b0ca7880c33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2MDc0OA==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512360748", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "author": "codeclimate", "createdAt": "2020-10-27T01:22:07Z", "path": "dpc-testing/performance/pkg/dpc/test_practitioner.go", "diffHunk": "@@ -0,0 +1,65 @@\n+package dpc", "originalCommit": "7e03ac4f0775d1a14af72746e8651b0ca7880c33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2MDc0OQ==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512360749", "bodyText": "Method API.RunTokenTests has 51 lines of code (exceeds 50 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-10-27T01:22:07Z", "path": "dpc-testing/performance/pkg/dpc/test_token.go", "diffHunk": "@@ -0,0 +1,94 @@\n+package dpc\n+\n+import (\n+\t\"net/url\"\n+\n+\t\"github.com/CMSgov/dpc-app/dpc-testing/performance/pkg/dpc/targeter\"\n+\tdpcclient \"github.com/CMSgov/dpc-app/dpcclient/lib\"\n+)\n+\n+func (api *API) RunTokenTests() {", "originalCommit": "7e03ac4f0775d1a14af72746e8651b0ca7880c33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1NTYzNA==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512655634", "bodyText": "I think there's a risk of confusion here because the golden macaroon comes from an admin endpoint rather than an API endpoint. Maybe better in dpc or an admin package?", "author": "em1", "createdAt": "2020-10-27T12:36:20Z", "path": "dpc-testing/performance/main.go", "diffHunk": "@@ -1,99 +1,27 @@\n package main\n \n import (\n-\t\"crypto/rsa\"\n-\t\"fmt\"\n-\t\"os\"\n-\t\"time\"\n+\t\"flag\"\n \n-\tdpcclient \"github.com/CMSgov/dpc-app/dpcclient/lib\"\n-\tvegeta \"github.com/tsenart/vegeta/lib\"\n+\t\"github.com/CMSgov/dpc-app/dpc-testing/performance/pkg/dpc\"\n )\n \n-var (\n-\tapiURL, adminURL string\n-\tgoldenMacaroon   []byte\n-)\n-\n-func init() {\n-\tinitFlags()\n-\tcreateDirs()\n-\tgoldenMacaroon = getClientToken(\"\")\n-}\n-\n func main() {\n-\ttestMetadata()\n-\n-\torgID := createOrg()\n-\tpubKeyStr, privateKey, signature := generateKeyPairAndSignature()\n-\tkeyID := uploadKey(pubKeyStr, signature, orgID)\n-\tclientToken := getClientToken(orgID)\n-\n-\taccessToken := refreshAccessToken(privateKey, keyID, clientToken)\n-\ttestKeyEndpoints(accessToken)\n-\n-\taccessToken = refreshAccessToken(privateKey, keyID, clientToken)\n-\ttestTokenEndpoints(accessToken, privateKey, keyID, clientToken)\n-\n-\taccessToken = refreshAccessToken(privateKey, keyID, clientToken)\n-\ttestPatientEndpoints(accessToken)\n-\n-\tcleanUp(orgID)\n-}\n-\n-func testMetadata() {\n-\tgetMetadataTarget := vegeta.Target{\n-\t\tMethod: \"GET\",\n-\t\tURL:    fmt.Sprintf(\"%s%s\", apiURL, \"/metadata\"),\n-\t\tHeader: map[string][]string{\n-\t\t\t\"Accept\": {\"application/fhir+json\"},\n-\t\t},\n-\t}\n-\n-\trunTest(getMetadataTarget, 5, 5)\n-}\n-\n-func refreshAccessToken(privateKey *rsa.PrivateKey, keyID string, clientToken []byte) string {\n-\tauthToken, err := dpcclient.GenerateAuthToken(privateKey, keyID, clientToken, apiURL)\n-\tif err != nil {\n-\t\tcleanAndPanic(err)\n-\t}\n-\n-\taccessToken, err := dpcclient.GetAccessToken(authToken, apiURL)\n-\tif err != nil {\n-\t\tcleanAndPanic(err)\n-\t}\n-\n-\treturn accessToken\n-}\n-\n-func runTest(target vegeta.Target, duration, frequency int) [][]byte {\n-\treturn runTestWithTargeter(fmt.Sprintf(\"%s %s\", target.Method, target.URL), vegeta.NewStaticTargeter(target), duration, frequency)\n-}\n-\n-func runTestWithTargeter(name string, targeter vegeta.Targeter, duration, frequency int) [][]byte {\n-\n-\tfmt.Printf(\"\\nRunning performance test on %s...\\n\", name)\n-\n-\td := time.Second * time.Duration(duration)\n-\tr := vegeta.Rate{Freq: frequency, Per: time.Second}\n-\n-\tattacker := vegeta.NewAttacker()\n-\tvar metrics vegeta.Metrics\n-\tvar respBodies [][]byte\n-\tfor results := range attacker.Attack(targeter, r, d, fmt.Sprintf(\"%dps:\", r.Freq)) {\n-\t\tmetrics.Add(results)\n-\t\trespBodies = append(respBodies, results.Body)\n-\t}\n-\tmetrics.Close()\n-\n-\treporter := vegeta.NewJSONReporter(&metrics)\n-\treporter.Report(os.Stdout)\n-\n-\treturn respBodies\n-}\n-\n-func cleanAndPanic(err error) {\n-\tcleanUp()\n-\tpanic(err)\n+\tvar api dpc.API\n+\n+\tflag.StringVar(&api.URL, \"api_url\", \"http://localhost:3002/v1\", \"Base URL of API\")\n+\tflag.StringVar(&api.AdminURL, \"admin_url\", \"http://localhost:9903/tasks\", \"Base URL of admin tasks\")\n+\tflag.Parse()\n+\n+\tapi.CreateGoldenMacaroon()", "originalCommit": "7e03ac4f0775d1a14af72746e8651b0ca7880c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc5NjQ5NQ==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512796495", "bodyText": "I see what you mean. I kept it that way since the GetClientToken func was pulled directly from your code and combines both calls. But I can break them out.", "author": "SMLuthi", "createdAt": "2020-10-27T15:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1NTYzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1ODg4NA==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512658884", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            func (api *API) SetupOrgAuth(orgIDs ...string) orgAuth {\n          \n          \n            \n            func (api *API) SetUpOrgAuth(orgIDs ...string) orgAuth {", "author": "em1", "createdAt": "2020-10-27T12:41:41Z", "path": "dpc-testing/performance/pkg/dpc/api.go", "diffHunk": "@@ -121,34 +121,42 @@ func uploadKey(key, sig, orgID string) string {\n \treturn result.ID\n }\n \n-func cleanUp(orgIDs ...string) {\n-\tfor _, orgID := range orgIDs {\n-\t\tdeleteOrg(orgID)\n-\t}\n-\tdeleteDirs()\n-}\n-\n-func deleteOrg(orgID string) {\n-\treq, err := http.NewRequest(\"DELETE\", fmt.Sprintf(\"%s/Organization/%s\", apiURL, orgID), nil)\n+func (api *API) DeleteOrg(orgID string) {\n+\treq, err := http.NewRequest(\"DELETE\", fmt.Sprintf(\"%s/Organization/%s\", api.URL, orgID), nil)\n \tif err != nil {\n \t\tfmt.Println(\"Organization could not be deleted\", err)\n \t}\n-\treq.Header.Add(\"Authorization\", fmt.Sprintf(\"Bearer %s\", goldenMacaroon))\n+\treq.Header.Add(\"Authorization\", fmt.Sprintf(\"Bearer %s\", api.goldenMacaroon))\n \t_, err = http.DefaultClient.Do(req)\n \tif err != nil {\n \t\tfmt.Println(\"Organization could not be deleted\", err)\n \t}\n \n }\n \n-func deleteDirs() {\n-\terr := os.RemoveAll(\"keys\")\n-\tif err != nil {\n-\t\tfmt.Println(\"keys directory could not be deleted\", err)\n-\t}\n+type orgAuth struct {\n+\torgID       string\n+\taccessToken string\n+\tkeyID       string\n+\tprivateKey  *rsa.PrivateKey\n+}\n \n-\terr = os.RemoveAll(\"tokens\")\n-\tif err != nil {\n-\t\tfmt.Println(\"tokens directory could not be deleted\", err)\n+func (api *API) SetupOrgAuth(orgIDs ...string) orgAuth {", "originalCommit": "7e03ac4f0775d1a14af72746e8651b0ca7880c33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2MjE5Mw==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512662193", "bodyText": "https://github.com/golang/go/wiki/CodeReviewComments#mixed-caps", "author": "em1", "createdAt": "2020-10-27T12:47:11Z", "path": "dpc-testing/performance/pkg/dpc/dpc.go", "diffHunk": "@@ -0,0 +1,125 @@\n+// Package dpc contains all test methods, the api test runner, and common functionalities\n+package dpc\n+\n+import (\n+\t\"crypto/rsa\"\n+\t\"encoding/json\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\n+\t\"github.com/CMSgov/dpc-app/dpc-testing/performance/pkg/dpc/targeter\"\n+)\n+\n+type Resource struct {\n+\tID          string `json:\"id\"`\n+\tClientToken []byte `json:\"token\"`\n+\tAccessToken string `json:\"access_token\"`\n+}\n+\n+// Pull `ids` out of a set of response bodies\n+func unmarshalIDs(resps [][]byte) []string {\n+\tvar IDs []string\n+\tfor _, resp := range resps {\n+\t\tvar result Resource\n+\t\tjson.Unmarshal(resp, &result)\n+\t\tIDs = append(IDs, result.ID)\n+\t}\n+\n+\treturn IDs\n+}\n+\n+// Pull `clientTokens` out of a set of response bodies\n+func unmarshalClientTokens(resps [][]byte) [][]byte {\n+\tvar clientTokens [][]byte\n+\tfor _, resp := range resps {\n+\t\tvar result Resource\n+\t\tjson.Unmarshal(resp, &result)\n+\t\tclientTokens = append(clientTokens, result.ClientToken)\n+\t}\n+\n+\treturn clientTokens\n+}\n+\n+// Pull `accessTokens` out of a set of response bodies\n+func unmarshalAccessTokens(resps [][]byte) []string {\n+\tvar accessTokens []string\n+\tfor _, resp := range resps {\n+\t\tvar result Resource\n+\t\tjson.Unmarshal(resp, &result)\n+\t\taccessTokens = append(accessTokens, result.AccessToken)\n+\t}\n+\n+\treturn accessTokens\n+}\n+\n+var FHIR = \"application/fhir+json\"\n+var JSON = \"application/json\"\n+var PLAIN = \"text/plain\"\n+var FORM = \"application/x-www-form-urlencoded\"\n+var UNSET = \"\"", "originalCommit": "7e03ac4f0775d1a14af72746e8651b0ca7880c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc5MjYzOA==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512792638", "bodyText": "Had no idea, will rename!", "author": "SMLuthi", "createdAt": "2020-10-27T15:30:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2MjE5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NDk3OA==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512664978", "bodyText": "Could Headers() be changed to take a variable number of parameters so an unset one isn't required?", "author": "em1", "createdAt": "2020-10-27T12:51:32Z", "path": "dpc-testing/performance/pkg/dpc/test_key.go", "diffHunk": "@@ -0,0 +1,54 @@\n+package dpc\n+\n+import (\n+\t\"github.com/CMSgov/dpc-app/dpc-testing/performance/pkg/dpc/targeter\"\n+)\n+\n+func (api *API) RunKeyTests() {\n+\tconst ENDPOINT = \"Key\"\n+\n+\t// Create organization (and delete at the end) and setup accesstoken\n+\tauth := api.SetupOrgAuth()\n+\tdefer api.DeleteOrg(auth.orgID)\n+\n+\t// POST /Key\n+\tresps := targeter.New(targeter.Config{\n+\t\tMethod:      \"POST\",\n+\t\tBaseURL:     api.URL,\n+\t\tEndpoint:    ENDPOINT,\n+\t\tAccessToken: auth.accessToken,\n+\t\tBodies:      generateKeyBodies(25, api.GenerateKeyPairAndSignature),\n+\t\tHeaders:     Headers(JSON, UNSET),", "originalCommit": "7e03ac4f0775d1a14af72746e8651b0ca7880c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc5MjU0NQ==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r512792545", "bodyText": "Good question. The reason I settled on this is because, currently, most of the tests settle on default values of fhir json. This way resulted in the least amount of clutter in this field. I think, if/when more tests are included with more header parameters this will probably get reworked a bit into something thats not as minimal but more expandable... if that makes sense.", "author": "SMLuthi", "createdAt": "2020-10-27T15:29:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NDk3OA=="}], "type": "inlineReview"}, {"oid": "26e25c81c44631a6d8253c93bc22de0d4ae4d0dc", "url": "https://github.com/CMSgov/dpc-app/commit/26e25c81c44631a6d8253c93bc22de0d4ae4d0dc", "message": "Move token generation to a separate struct for admin calls and embedd in api struct", "committedDate": "2020-10-27T16:41:38Z", "type": "commit"}, {"oid": "eccaa03d21ca92f8366e115980d3b54547f3925e", "url": "https://github.com/CMSgov/dpc-app/commit/eccaa03d21ca92f8366e115980d3b54547f3925e", "message": "Rename constants to follow goism", "committedDate": "2020-10-27T16:42:31Z", "type": "commit"}, {"oid": "f1447abb85129f4e72727e1a61cbc27f9183d510", "url": "https://github.com/CMSgov/dpc-app/commit/f1447abb85129f4e72727e1a61cbc27f9183d510", "message": "clean package files", "committedDate": "2020-10-27T16:52:41Z", "type": "commit"}, {"oid": "182ca04d63eddcd6f68b2940c01bc7e63f6b642d", "url": "https://github.com/CMSgov/dpc-app/commit/182ca04d63eddcd6f68b2940c01bc7e63f6b642d", "message": "Merge branch 'master' into silvio/dpc-710-attr-performance-test-for-orgs", "committedDate": "2020-10-28T20:45:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ5OTk5OQ==", "url": "https://github.com/CMSgov/dpc-app/pull/1092#discussion_r509499999", "bodyText": "Will it matter now or in the future that we're reusing the same NPI for multiple orgs?  This is the same as the base org, and all the others use 2906714268.", "author": "dhgreene", "createdAt": "2020-10-21T17:48:24Z", "path": "src/main/resources/organizations/organization-1.json", "diffHunk": "@@ -0,0 +1,57 @@\n+{\n+  \"resourceType\": \"Organization\",\n+  \"identifier\": [\n+    {\n+      \"system\": \"http://hl7.org/fhir/sid/us-npi\",\n+      \"value\": \"1111112110\"", "originalCommit": "accae897724256185d882beb64b51c50d3b56fce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}