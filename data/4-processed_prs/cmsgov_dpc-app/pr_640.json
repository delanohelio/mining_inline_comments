{"pr_number": 640, "pr_title": "Switch to MBIs and use BFD prod sandbox environment", "pr_createdAt": "2020-02-24T19:18:43Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/640", "timeline": [{"oid": "1d418a35bad2997448ed4cdedeaf4c8b62e312e4", "url": "https://github.com/CMSgov/dpc-app/commit/1d418a35bad2997448ed4cdedeaf4c8b62e312e4", "message": "Adding BFD keystore to Vault", "committedDate": "2020-02-20T23:42:31Z", "type": "commit"}, {"oid": "fbef7befbc477f2220223d0bb948813c4ef30a48", "url": "https://github.com/CMSgov/dpc-app/commit/fbef7befbc477f2220223d0bb948813c4ef30a48", "message": "Change export command", "committedDate": "2020-02-21T14:50:54Z", "type": "commit"}, {"oid": "53cae6b306141d6d88cd95436adb91e7d84fef5c", "url": "https://github.com/CMSgov/dpc-app/commit/53cae6b306141d6d88cd95436adb91e7d84fef5c", "message": "Set env vars", "committedDate": "2020-02-21T18:19:30Z", "type": "commit"}, {"oid": "3ad4f331c2a1b9a5848a305ec2dfa522b740d6d0", "url": "https://github.com/CMSgov/dpc-app/commit/3ad4f331c2a1b9a5848a305ec2dfa522b740d6d0", "message": "Starting bene ID -> MBI transition", "committedDate": "2020-02-21T20:10:45Z", "type": "commit"}, {"oid": "fbdf50074a944c6d19d05e97aaee3100be0f7764", "url": "https://github.com/CMSgov/dpc-app/commit/fbdf50074a944c6d19d05e97aaee3100be0f7764", "message": "Bene ID -> MBI conversion continuing...", "committedDate": "2020-02-21T20:11:36Z", "type": "commit"}, {"oid": "8322e8bc13f9fd22c96340fbe4a061f257b6e0b9", "url": "https://github.com/CMSgov/dpc-app/commit/8322e8bc13f9fd22c96340fbe4a061f257b6e0b9", "message": "Apply Postman patch", "committedDate": "2020-02-21T20:12:09Z", "type": "commit"}, {"oid": "9dac30ff4046c801617532eaa9008355a744418c", "url": "https://github.com/CMSgov/dpc-app/commit/9dac30ff4046c801617532eaa9008355a744418c", "message": "DPC-993: Output secure-env files to file system for env file usage", "committedDate": "2020-02-21T20:16:08Z", "type": "commit"}, {"oid": "a6ab6cb7e6fa74f83fcd878d2094d462622148c0", "url": "https://github.com/CMSgov/dpc-app/commit/a6ab6cb7e6fa74f83fcd878d2094d462622148c0", "message": "DPC-993: Fix env path to be absolute", "committedDate": "2020-02-24T15:43:20Z", "type": "commit"}, {"oid": "cf7a30b52112304757d583f8f371cb9be825c605", "url": "https://github.com/CMSgov/dpc-app/commit/cf7a30b52112304757d583f8f371cb9be825c605", "message": "DPC-992: Use DPR environment for local and dev smoke tests", "committedDate": "2020-02-24T16:10:53Z", "type": "commit"}, {"oid": "c132f67990aba63f025eeaffa2d0fe286cbc0939", "url": "https://github.com/CMSgov/dpc-app/commit/c132f67990aba63f025eeaffa2d0fe286cbc0939", "message": "DPC-993: Include secure-envs for travis", "committedDate": "2020-02-24T17:16:03Z", "type": "commit"}, {"oid": "5d6cbc677dd013a3bc4778e9588028aae8865c71", "url": "https://github.com/CMSgov/dpc-app/commit/5d6cbc677dd013a3bc4778e9588028aae8865c71", "message": "Merge branch 'emily/dpc-993-keystore-vault' into emily/dpc-938-patient-profile-mbi", "committedDate": "2020-02-24T18:56:11Z", "type": "commit"}, {"oid": "4e51218e1cdbc5aa8dcd44daabef5d6edcc5c057", "url": "https://github.com/CMSgov/dpc-app/commit/4e51218e1cdbc5aa8dcd44daabef5d6edcc5c057", "message": "Merge branch 'master' into emily/dpc-938-patient-profile-mbi", "committedDate": "2020-02-24T22:21:28Z", "type": "commit"}, {"oid": "30a4e697b17384fdbc4ff546a9f88a31a9ba1691", "url": "https://github.com/CMSgov/dpc-app/commit/30a4e697b17384fdbc4ff546a9f88a31a9ba1691", "message": "Merge branch 'master' into emily/dpc-938-patient-profile-mbi", "committedDate": "2020-02-25T14:01:04Z", "type": "commit"}, {"oid": "e37d6cd04d3cb313c99f35e6f08cdec902609d79", "url": "https://github.com/CMSgov/dpc-app/commit/e37d6cd04d3cb313c99f35e6f08cdec902609d79", "message": "Merge branch 'master' into emily/dpc-938-patient-profile-mbi", "committedDate": "2020-02-25T14:32:54Z", "type": "commit"}, {"oid": "c15d97c034961428318af2aeb6ebf153e8513155", "url": "https://github.com/CMSgov/dpc-app/commit/c15d97c034961428318af2aeb6ebf153e8513155", "message": "Merge branch 'master' into emily/dpc-938-patient-profile-mbi", "committedDate": "2020-02-25T15:40:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3MjQzMg==", "url": "https://github.com/CMSgov/dpc-app/pull/640#discussion_r384072432", "bodyText": "Is there a reason for declaring this outside of the switch statement? If possible, I'd prefer to do a local allocation to a final, rather than have an uninitialized variable at the top.", "author": "nickrobison-usds", "createdAt": "2020-02-25T19:19:49Z", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -55,87 +57,114 @@\n      * Fetch all the resources for a specific patient. If errors are encountered from BlueButton,\n      * a OperationalOutcome resource is used.\n      *\n-     * @param patientID to use\n+     * @param mbi to use\n      * @return a flow with all the resources for specific patient\n      */\n-    Flowable<Resource> fetchResources(String patientID) {\n+    Flowable<Resource> fetchResources(String mbi) {\n         Retry retry = Retry.of(\"bb-resource-fetcher\", this.retryConfig);\n         return Flowable.fromCallable(() -> {\n-            logger.debug(\"Fetching first {} from BlueButton for {}\", resourceType.toString(), patientID);\n-            final Resource firstFetched = fetchFirst(patientID);\n+            String fetchId = UUID.randomUUID().toString();\n+            logger.debug(\"Fetching first {} from BlueButton for {}\", resourceType.toString(), fetchId);\n+            final Resource firstFetched = fetchFirst(mbi);\n             if (ResourceType.Coverage.equals(resourceType) || ResourceType.ExplanationOfBenefit.equals(resourceType)) {\n-                return fetchAllBundles(patientID, (Bundle)firstFetched);\n+                return fetchAllBundles((Bundle)firstFetched, fetchId);\n             } else {\n-                logger.debug(\"Done fetching {} for {}\", resourceType.toString(), patientID);\n+                logger.debug(\"Done fetching {} for {}\", resourceType.toString(), fetchId);\n                 return List.of(firstFetched);\n             }\n         })\n                 .compose(RetryTransformer.of(retry))\n-                .onErrorResumeNext((Throwable error) -> handleError(patientID, error))\n+                .onErrorResumeNext((Throwable error) -> handleError(mbi, error))\n                 .flatMap(Flowable::fromIterable);\n     }\n \n     /**\n      * Given a bundle, return a list of resources in the passed in bundle and all\n      * the resources from the next bundles.\n      *\n-     * @param patientID to fetch for\n      * @param firstBundle of resources. Included in the result list\n      * @return a list of all the resources in the first bundle and all next bundles\n      */\n-    private List<Resource> fetchAllBundles(String patientID, Bundle firstBundle) {\n+    private List<Resource> fetchAllBundles(Bundle firstBundle, String fetchId) {\n         final var resources = new ArrayList<Resource>();\n         addResources(resources, firstBundle);\n \n         // Loop until no more next bundles\n         var bundle = firstBundle;\n         while (bundle.getLink(Bundle.LINK_NEXT) != null) {\n-            logger.debug(\"Fetching next bundle {} from BlueButton for {}\", resourceType.toString(), patientID);\n+            logger.debug(\"Fetching next bundle {} from BlueButton for {}\", resourceType.toString(), fetchId);\n             bundle = blueButtonClient.requestNextBundleFromServer(bundle);\n             addResources(resources, bundle);\n         }\n \n-        logger.debug(\"Done fetching bundles {} for {}\", resourceType.toString(), patientID);\n+        logger.debug(\"Done fetching bundles {} for {}\", resourceType.toString(), fetchId);\n         return resources;\n     }\n \n     /**\n      * Turn an error into a flow.\n-     * @param patientID the flow\n+     * @param mbi MBI\n      * @param error the error\n      * @return a Flowable of list of resources\n      */\n-    private Publisher<List<Resource>> handleError(String patientID, Throwable error) {\n+    private Publisher<List<Resource>> handleError(String mbi, Throwable error) {\n         if (error instanceof JobQueueFailure) {\n             // JobQueueFailure is an internal error. Just pass it along as an error.\n             return Flowable.error(error);\n         }\n \n         // Other errors should be turned into OperationalOutcome and just recorded.\n         logger.error(\"Turning error into OperationalOutcome. Error is: \", error);\n-        final var operationOutcome = formOperationOutcome(patientID, error);\n+        final var operationOutcome = formOperationOutcome(mbi, error);\n         return Flowable.just(List.of(operationOutcome));\n     }\n \n     /**\n      * Based on resourceType, fetch a resource or a bundle of resources.\n      *\n-     * @param patientID of the resource to fetch\n+     * @param mbi of the resource to fetch\n      * @return either a single resource or the first bundle of resources\n      */\n-    private Resource fetchFirst(String patientID) {\n+    private Resource fetchFirst(String mbi) {\n+        Patient patient = fetchPatient(mbi);\n+        String beneId;", "originalCommit": "c15d97c034961428318af2aeb6ebf153e8513155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA4MTcyMA==", "url": "https://github.com/CMSgov/dpc-app/pull/640#discussion_r384081720", "bodyText": "The scope of a switch is the whole block. We can declare it under the EOB case, but it couldn't be final, unless I'm misunderstanding the suggestion?", "author": "em1", "createdAt": "2020-02-25T19:36:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3MjQzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3NDgyMQ==", "url": "https://github.com/CMSgov/dpc-app/pull/640#discussion_r384074821", "bodyText": "I believe I ran into an issue with the secret key factory not being thread safe, were you able to determine that as well? I believe there was a commit addressing that in my original branch.", "author": "nickrobison-usds", "createdAt": "2020-02-25T19:24:14Z", "path": "dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java", "diffHunk": "@@ -89,6 +89,18 @@ public Patient requestPatientFromServer(String patientID) throws ResourceNotFoun\n                 .execute());\n     }\n \n+    /**\n+     * Hashes MBI and queries Blue Button server for patient data.\n+     *\n+     * @param mbi The MBI\n+     * @return {@link Bundle} A FHIR Bundle of Patient resources\n+     */\n+    @Override\n+    public Bundle requestPatientFromServerByMbi(String mbi) throws ResourceNotFoundException, GeneralSecurityException {\n+        String mbiHash = hashMbi(mbi);", "originalCommit": "c15d97c034961428318af2aeb6ebf153e8513155", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5NDM3Ng==", "url": "https://github.com/CMSgov/dpc-app/pull/640#discussion_r384094376", "bodyText": "This change to this system value doesn't look right. BTW: BFD is removing this identifier in its latest response, so the best way to fix this may be to just remove the whole HICN identifier clause.", "author": "RickHawesUSDS", "createdAt": "2020-02-25T20:00:14Z", "path": "src/test/resources/bb-test-data/patient/-20140000009893.xml", "diffHunk": "@@ -9,12 +9,16 @@\n    </extension>\n    <identifier>\n       <system value=\"https://bluebutton.cms.gov/resources/variables/bene_id\"/>\n-      <value value=\"20140000009893\"/>\n+      <value value=\"-20140000009893\"/>\n    </identifier>\n    <identifier>\n-      <system value=\"https://bluebutton.cms.gov/resources/identifier/hicn-hash\"/>\n+      <system value=\"http://bluebutton.cms.hhs.gov/identifier#hicnHash\"/>", "originalCommit": "c15d97c034961428318af2aeb6ebf153e8513155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODQ5NA==", "url": "https://github.com/CMSgov/dpc-app/pull/640#discussion_r384108494", "bodyText": "That is how we've seen it in BFD responses. Also formatted that way here: https://github.com/CMSgov/beneficiary-fhir-data/blob/a995592c40d77e3974ade09eb5017492e0865608/apps/bfd-server/dev/data-model.md\nI'd propose a new ticket to remove HICN entirely.\nEdit: I see it changed. I'll remove the change in this PR.", "author": "em1", "createdAt": "2020-02-25T20:29:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5NDM3Ng=="}], "type": "inlineReview"}, {"oid": "bd9e133781fbe4a7d6dfa5cd3fc9a32842522490", "url": "https://github.com/CMSgov/dpc-app/commit/bd9e133781fbe4a7d6dfa5cd3fc9a32842522490", "message": "Move beneId declaration; fix HICN hash identifier URL", "committedDate": "2020-02-25T20:34:37Z", "type": "commit"}, {"oid": "19d3b6301fb6d39af89dcccdbf09c0b9ed81bf50", "url": "https://github.com/CMSgov/dpc-app/commit/19d3b6301fb6d39af89dcccdbf09c0b9ed81bf50", "message": "Merge branch 'master' into emily/dpc-938-patient-profile-mbi", "committedDate": "2020-02-25T20:42:41Z", "type": "commit"}, {"oid": "8020dc2d5362fc17be08a602982b0092c001c188", "url": "https://github.com/CMSgov/dpc-app/commit/8020dc2d5362fc17be08a602982b0092c001c188", "message": "SecretKeyFactory thread safety fix", "committedDate": "2020-02-25T22:10:43Z", "type": "commit"}, {"oid": "b25c4ad408ca0cb28fd108cff996e045650f2951", "url": "https://github.com/CMSgov/dpc-app/commit/b25c4ad408ca0cb28fd108cff996e045650f2951", "message": "Merge branch 'emily/dpc-938-patient-profile-mbi' of github.com:CMSgov/dpc-app into emily/dpc-938-patient-profile-mbi", "committedDate": "2020-02-25T22:10:52Z", "type": "commit"}, {"oid": "c099c9dc370646987083f8a43cc5a5b19b22fd80", "url": "https://github.com/CMSgov/dpc-app/commit/c099c9dc370646987083f8a43cc5a5b19b22fd80", "message": "Merge branch 'master' into emily/dpc-938-patient-profile-mbi", "committedDate": "2020-02-26T15:28:16Z", "type": "commit"}]}