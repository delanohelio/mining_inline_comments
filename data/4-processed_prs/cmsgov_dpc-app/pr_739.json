{"pr_number": 739, "pr_title": "DPC-1274-create nohtml validator", "pr_createdAt": "2020-04-10T13:59:06Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/739", "timeline": [{"oid": "0b1cbbfd1d083309d65de7e3cae5e4b27f7a3d87", "url": "https://github.com/CMSgov/dpc-app/commit/0b1cbbfd1d083309d65de7e3cae5e4b27f7a3d87", "message": "create nohtml validator", "committedDate": "2020-04-10T13:58:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc3ODI2Nw==", "url": "https://github.com/CMSgov/dpc-app/pull/739#discussion_r406778267", "bodyText": "Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.", "author": "codeclimate", "createdAt": "2020-04-10T14:19:22Z", "path": "dpc-common/src/main/java/gov/cms/dpc/common/hibernate/validator/NoHtmlValidator.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package gov.cms.dpc.common.hibernate.validator;\n+\n+import gov.cms.dpc.common.annotations.NoHtml;\n+import org.jsoup.Jsoup;\n+import org.jsoup.safety.Whitelist;\n+\n+import javax.validation.ConstraintValidator;\n+import javax.validation.ConstraintValidatorContext;\n+\n+public class NoHtmlValidator implements ConstraintValidator<NoHtml, String> {\n+\n+    public static final String VALIDATION_MESSAGE = \"Cannot contain HTML\";\n+\n+    @Override\n+    public void initialize(NoHtml noHtml) {", "originalCommit": "0b1cbbfd1d083309d65de7e3cae5e4b27f7a3d87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3dbe4da10d26c179adf3eef5f5df54de71406e63", "url": "https://github.com/CMSgov/dpc-app/commit/3dbe4da10d26c179adf3eef5f5df54de71406e63", "message": "handle null and blank strings", "committedDate": "2020-04-10T17:12:24Z", "type": "commit"}, {"oid": "c3a6c24c55ef8cb89b903c00d8466f4649117088", "url": "https://github.com/CMSgov/dpc-app/commit/c3a6c24c55ef8cb89b903c00d8466f4649117088", "message": "handle newlines", "committedDate": "2020-04-10T17:58:12Z", "type": "commit"}, {"oid": "f0fc9f852fedbbf47e93351a2df0444075b6cf24", "url": "https://github.com/CMSgov/dpc-app/commit/f0fc9f852fedbbf47e93351a2df0444075b6cf24", "message": "add annotation to entities", "committedDate": "2020-04-10T18:14:54Z", "type": "commit"}, {"oid": "b4dd2211650372d133f4255b13e5713d9e315642", "url": "https://github.com/CMSgov/dpc-app/commit/b4dd2211650372d133f4255b13e5713d9e315642", "message": "add annotation to resource endpoints with params that are strings", "committedDate": "2020-04-10T18:15:26Z", "type": "commit"}, {"oid": "db136b46b860df0c45a74b7f0a8c2ac81f696613", "url": "https://github.com/CMSgov/dpc-app/commit/db136b46b860df0c45a74b7f0a8c2ac81f696613", "message": "fix codeclimate issue", "committedDate": "2020-04-10T18:30:48Z", "type": "commit"}, {"oid": "a9af480157accd435d73224cb9711468dd29387e", "url": "https://github.com/CMSgov/dpc-app/commit/a9af480157accd435d73224cb9711468dd29387e", "message": "Merge branch 'master' into DPC-1274-input-validation-for-scripts", "committedDate": "2020-04-12T22:31:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ3Mjg0Nw==", "url": "https://github.com/CMSgov/dpc-app/pull/739#discussion_r407472847", "bodyText": "Should we also be preventing HTML in the FHIR resources like Provenance and Group?", "author": "em1", "createdAt": "2020-04-13T13:17:10Z", "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/AbstractGroupResource.java", "diffHunk": "@@ -26,7 +27,7 @@ protected AbstractGroupResource() {\n     public abstract Response createRoster(OrganizationPrincipal organizationPrincipal, @Valid @Profiled(profile = AttestationProfile.PROFILE_URI) Provenance rosterAttestation, Group attributionRoster);", "originalCommit": "a9af480157accd435d73224cb9711468dd29387e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ5NzE4MQ==", "url": "https://github.com/CMSgov/dpc-app/pull/739#discussion_r407497181", "bodyText": "@EmBh all the FHIR resources are not under our control so I can't add the annotation to them. That is why I had to validate our hibernate entity classes instead which should be fine since I believe this method hits the corresponding attribution method which just converts these FHIR resources into hibernate entity classes and saves to the database.", "author": "MrBilnon", "createdAt": "2020-04-13T14:09:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ3Mjg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA2MzA3Mg==", "url": "https://github.com/CMSgov/dpc-app/pull/739#discussion_r414063072", "bodyText": "Since our intent with this PR is to cover all cases, can you make a test that proves we're covered for Provenance and Group?", "author": "dhgreene", "createdAt": "2020-04-23T19:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ3Mjg0Nw=="}], "type": "inlineReview"}, {"oid": "eddbebca385bc8ce40d7e90dbc1f593ce8704395", "url": "https://github.com/CMSgov/dpc-app/commit/eddbebca385bc8ce40d7e90dbc1f593ce8704395", "message": "Merge branch 'master' into DPC-1274-input-validation-for-scripts", "committedDate": "2020-04-23T20:43:46Z", "type": "commit"}, {"oid": "142f6e62d44b912a1452b928cbd57e7508a62184", "url": "https://github.com/CMSgov/dpc-app/commit/142f6e62d44b912a1452b928cbd57e7508a62184", "message": "add some resource tests to show scripts aren't able to be saved", "committedDate": "2020-04-27T02:46:48Z", "type": "commit"}, {"oid": "a02ea2410128963894281c620249f27a6f62525b", "url": "https://github.com/CMSgov/dpc-app/commit/a02ea2410128963894281c620249f27a6f62525b", "message": "Merge remote-tracking branch 'origin/DPC-1274-input-validation-for-scripts' into DPC-1274-input-validation-for-scripts\n\n# Conflicts:\n#\tdpc-attribution/src/test/java/gov/cms/dpc/attribution/resources/PatientResourceTest.java", "committedDate": "2020-04-27T02:47:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEwMTk4Ng==", "url": "https://github.com/CMSgov/dpc-app/pull/739#discussion_r416101986", "bodyText": "There are a number of tricks attackers can use to fool HTML sanitizers.  Can you include a few from this or another source?", "author": "dhgreene", "createdAt": "2020-04-27T19:50:03Z", "path": "dpc-common/src/test/java/gov/cms/dpc/common/hibernate/validator/NoHtmlValidatorTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package gov.cms.dpc.common.hibernate.validator;\n+\n+import gov.cms.dpc.common.annotations.NoHtml;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import javax.validation.ConstraintViolation;\n+import javax.validation.Validation;\n+import javax.validation.Validator;\n+import javax.validation.ValidatorFactory;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+public class NoHtmlValidatorTest {\n+\n+    private Validator validator;\n+\n+    @BeforeEach\n+    public void setUp() {\n+        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();\n+        validator = factory.getValidator();\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"stringSource\")\n+    public void noHtmlValidatorTest(String value, boolean isEmpty) {\n+\n+        TestObject testObject = new TestObject();\n+        testObject.setA(value);\n+        Set<ConstraintViolation<TestObject>> violations = validator.validate(testObject);\n+        Assertions.assertEquals(isEmpty, violations.isEmpty());\n+    }\n+\n+    private static Stream<Arguments> stringSource() {", "originalCommit": "a02ea2410128963894281c620249f27a6f62525b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "434e75482ef5257e36eec1eab2b308b6f806ac2a", "url": "https://github.com/CMSgov/dpc-app/commit/434e75482ef5257e36eec1eab2b308b6f806ac2a", "message": "update validator unit tests with examples from owasp", "committedDate": "2020-04-28T14:56:55Z", "type": "commit"}, {"oid": "1ea7fcfa4cbbdf910ae354015ef08cb733a32cdc", "url": "https://github.com/CMSgov/dpc-app/commit/1ea7fcfa4cbbdf910ae354015ef08cb733a32cdc", "message": "add group test for scripts", "committedDate": "2020-04-28T15:24:46Z", "type": "commit"}, {"oid": "aa83eb7ee9ac4da082795f2c4f0bfd28e2f22832", "url": "https://github.com/CMSgov/dpc-app/commit/aa83eb7ee9ac4da082795f2c4f0bfd28e2f22832", "message": "Merge branch 'master' into DPC-1274-input-validation-for-scripts", "committedDate": "2020-04-28T22:15:42Z", "type": "commit"}]}