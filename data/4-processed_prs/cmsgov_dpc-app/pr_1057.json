{"pr_number": 1057, "pr_title": "DPC-731: Basic performance test setup for /Key endpoints", "pr_createdAt": "2020-09-21T18:03:05Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/1057", "timeline": [{"oid": "bdf01fa8aa314cdaf5ed755dc29ffe98e9dc592e", "url": "https://github.com/CMSgov/dpc-app/commit/bdf01fa8aa314cdaf5ed755dc29ffe98e9dc592e", "message": "Key tests in progress", "committedDate": "2020-09-17T17:15:31Z", "type": "commit"}, {"oid": "d8ba77af32885d5b8bfb5ad104ad59206ea38f81", "url": "https://github.com/CMSgov/dpc-app/commit/d8ba77af32885d5b8bfb5ad104ad59206ea38f81", "message": "Response bodies from test requests; custom targeters", "committedDate": "2020-09-17T21:08:35Z", "type": "commit"}, {"oid": "96e113c73d95f162a3a02b4e66d3c1a820c6968c", "url": "https://github.com/CMSgov/dpc-app/commit/96e113c73d95f162a3a02b4e66d3c1a820c6968c", "message": "Rename key/sig function", "committedDate": "2020-09-21T12:03:40Z", "type": "commit"}, {"oid": "01e44128e3ab70ffba968e104b851d629e3ddaec", "url": "https://github.com/CMSgov/dpc-app/commit/01e44128e3ab70ffba968e104b851d629e3ddaec", "message": "Remove panic on non-200 response (errors are logged in metrics JSON)", "committedDate": "2020-09-21T18:00:53Z", "type": "commit"}, {"oid": "a326d83e68da3c8a9fc64daea6c1ef3781553d00", "url": "https://github.com/CMSgov/dpc-app/commit/a326d83e68da3c8a9fc64daea6c1ef3781553d00", "message": "Merge branch 'master' into emily/dpc-731-perf-test-key", "committedDate": "2020-09-21T18:28:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczNzYxMg==", "url": "https://github.com/CMSgov/dpc-app/pull/1057#discussion_r493737612", "bodyText": "I like the nextKeyID func!", "author": "dhgreene", "createdAt": "2020-09-23T16:42:13Z", "path": "dpc-testing/performance/main.go", "diffHunk": "@@ -46,6 +49,71 @@ func testMetadata() {\n \trunTest(getMetadataTarget, 5, 5)\n }\n \n+func testKeyEndpoints(accessToken string) {\n+\n+\tresps := runTestWithTargeter(fmt.Sprintf(\"POST %s/Key\", apiURL), newPOSTKeyTargeter(accessToken), 5, 5)\n+\tfor _, resp := range resps {\n+\t\tvar result Resource\n+\t\tjson.Unmarshal(resp, &result)\n+\t\tkeyIDs = append(keyIDs, result.ID)\n+\t}\n+\n+\tgetKeysTarget := vegeta.Target{\n+\t\tMethod: \"GET\",\n+\t\tURL:    fmt.Sprintf(\"%s%s\", apiURL, \"/Key\"),\n+\t\tHeader: map[string][]string{\n+\t\t\t\"Accept\":        {\"application/json\"},\n+\t\t\t\"Authorization\": {fmt.Sprintf(\"Bearer %s\", accessToken)},\n+\t\t},\n+\t}\n+\trunTest(getKeysTarget, 5, 5)\n+\n+\tgetKeyTarget := vegeta.Target{\n+\t\tMethod: \"GET\",\n+\t\tURL:    fmt.Sprintf(\"%s%s%s\", apiURL, \"/Key/\", keyIDs[0]),\n+\t\tHeader: map[string][]string{\n+\t\t\t\"Accept\":        {\"application/json\"},\n+\t\t\t\"Authorization\": {fmt.Sprintf(\"Bearer %s\", accessToken)},\n+\t\t},\n+\t}\n+\trunTest(getKeyTarget, 5, 5)\n+\n+\tdeleteKeyTargeter := newDELETEKeyTargeter(accessToken, func() string {\n+\t\tkeyID := keyIDs[0]\n+\t\tkeyIDs = keyIDs[1:]\n+\t\treturn keyID\n+\t})\n+\trunTestWithTargeter(fmt.Sprintf(\"DELETE %s/Key/{id}\", apiURL), deleteKeyTargeter, 5, 5)\n+}\n+\n+func newPOSTKeyTargeter(accessToken string) vegeta.Targeter {\n+\treturn func(t *vegeta.Target) error {\n+\t\tt.Method = \"POST\"\n+\t\tt.URL = fmt.Sprintf(\"%s/Key\", apiURL)\n+\t\tt.Header = map[string][]string{\n+\t\t\t\"Content-Type\":  {\"application/json\"},\n+\t\t\t\"Authorization\": {fmt.Sprintf(\"Bearer %s\", accessToken)},\n+\t\t}\n+\n+\t\tpubKeyStr, _, signature := generateKeyPairAndSignature()\n+\t\tbody := fmt.Sprintf(\"{ \\\"key\\\": \\\"%s\\\", \\\"signature\\\": \\\"%s\\\"}\", pubKeyStr, signature)\n+\t\tt.Body = []byte(body)\n+\n+\t\treturn nil\n+\t}\n+}\n+\n+func newDELETEKeyTargeter(accessToken string, nextKeyID func() string) vegeta.Targeter {", "originalCommit": "a326d83e68da3c8a9fc64daea6c1ef3781553d00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc0MTI1OA==", "url": "https://github.com/CMSgov/dpc-app/pull/1057#discussion_r493741258", "bodyText": "Is this change an artifact from troubleshooting the intermittent signature bug, or is it helpful in another way?", "author": "dhgreene", "createdAt": "2020-09-23T16:48:19Z", "path": "dpc-testing/performance/setup.go", "diffHunk": "@@ -91,7 +91,7 @@ func getKeyPairAndSignature() (string, *rsa.PrivateKey, string) {\n \t\tcleanAndPanic(err)\n \t}\n \n-\tsignature, err := privKey.Sign(rand.Reader, snippetHash.Sum(nil), crypto.SHA256)\n+\tsignature, err := rsa.SignPKCS1v15(rand.Reader, privKey, crypto.SHA256, snippetHash.Sum(nil))", "originalCommit": "a326d83e68da3c8a9fc64daea6c1ef3781553d00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc1OTQzNw==", "url": "https://github.com/CMSgov/dpc-app/pull/1057#discussion_r493759437", "bodyText": "It is indeed the result of troubleshooting. Turns out rsa.SignPKCS1v15() is what PrivateKey.Sign() calls if you don't specify, so it didn't make any difference, but I figured it made sense to call it directly. https://golang.org/src/crypto/rsa/rsa.go?s=4735:4794#L136", "author": "em1", "createdAt": "2020-09-23T17:17:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc0MTI1OA=="}], "type": "inlineReview"}, {"oid": "9fe221c0aaab6dfa497122c34cca5672771565fc", "url": "https://github.com/CMSgov/dpc-app/commit/9fe221c0aaab6dfa497122c34cca5672771565fc", "message": "Merge branch 'master' into emily/dpc-731-perf-test-key", "committedDate": "2020-09-23T17:19:45Z", "type": "commit"}]}