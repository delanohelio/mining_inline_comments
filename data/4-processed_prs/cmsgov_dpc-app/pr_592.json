{"pr_number": 592, "pr_title": "DPC-993: Secrets management for Travis and local environments", "pr_createdAt": "2020-02-06T01:16:43Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/592", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MTY0Mg==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r376481642", "bodyText": "This is a great idea to verify the password file doesn't existing already, but I think it's still a risk to put the password file directly on the file system. Thankfully, Ansible actually provides the option to include a script when using the vault password.\nI think it's going to make sense to create a read-vault-password.sh script to either read an environment variable or read the .vault_password file. That way developers can place a .vault_password on their filesystem and CI/CD can use an environment variable.\nFor this to work, the read-vault-password.sh just needs to echo the password, and then change the --vault-password-file to use the script instead of the .vault_password.", "author": "ronaldheft-usds", "createdAt": "2020-02-07T16:23:05Z", "path": "dpc-test.sh", "diffHunk": "@@ -31,6 +31,14 @@ if [ -n \"$REPORT_COVERAGE\" ]; then\n   ./cc-test-reporter before-build\n fi\n \n+# Decrypt local environment configuration\n+if [ ! -z $VAULT_PW ] && [ ! -f .vault_password ]; then\n+  echo $VAULT_PW > .vault_password\n+fi", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5NTI2Mw==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r376495263", "bodyText": "I think decrypting directly to the file system is also a risk. To solve this, and also all the issues we're having with files already being decrypted, we can instead decrypt the vault directly into the environment variables.\nWe can accomplish this by using --output - on the decrypt call. This will echo to stout instead of to a file system. We can then use that output to read the values directly into environment variables as so:\nexport $(bash ops/scripts/secrets --decrypt | sed -e /^$/d -e /^#/d | xargs)\n\n^ The above assumes the --decrypt option was modified to use --output -.", "author": "ronaldheft-usds", "createdAt": "2020-02-07T16:49:11Z", "path": "dpc-test.sh", "diffHunk": "@@ -31,6 +31,14 @@ if [ -n \"$REPORT_COVERAGE\" ]; then\n   ./cc-test-reporter before-build\n fi\n \n+# Decrypt local environment configuration\n+if [ ! -z $VAULT_PW ] && [ ! -f .vault_password ]; then\n+  echo $VAULT_PW > .vault_password\n+fi\n+bash ops/scripts/secrets --decrypt\n+cp -fv ops/config/encrypted/* ops/config/decrypted/\n+bash ops/scripts/secrets --encrypt", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5NzEzNQ==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r376497135", "bodyText": "Alternatively, we could add an extra option to be clearer and have a new --decrypt-to-stout option, so we preserve the decrypting capabilities to the file system, when we're modifying the secrets.", "author": "ronaldheft-usds", "createdAt": "2020-02-07T16:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5NTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNjEwNQ==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r376506105", "bodyText": "It might also make sense to instead of having this logic in the test script, add a new make target called something like secure-envs that runs the environment variable decryption and sets it via export as dones in the one-liner above.\nIf we go through this process, we could ensure the environment script is run in the make target by updating various targets as so:\n.PHONY: ci-app\nci-app: docker-base secure-envs\n\t@./dpc-test.sh", "author": "ronaldheft-usds", "createdAt": "2020-02-07T17:11:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5NTI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5NTQ2OA==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r376495468", "bodyText": "We won't need to cleanup if we use the above techniques, as nothing will be on the file system.", "author": "ronaldheft-usds", "createdAt": "2020-02-07T16:49:36Z", "path": "dpc-test.sh", "diffHunk": "@@ -77,6 +85,8 @@ if [ -n \"$REPORT_COVERAGE\" ]; then\n     ./cc-test-reporter upload-coverage\n fi\n \n+rm ops/config/decrypted/*.env", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5NTk2NA==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r376495964", "bodyText": "We won't need to use an env_file if we follow the technique I detail below, and instead add the variables specifically to the list, such as:\n- BFD_HASH_ITER=${BFD_HASH_ITER}", "author": "ronaldheft-usds", "createdAt": "2020-02-07T16:50:35Z", "path": "docker-compose.yml", "diffHunk": "@@ -20,6 +20,8 @@ services:\n     environment:\n       - ENV=local\n       - JACOCO=${REPORT_COVERAGE}\n+    env_file:\n+      - ./ops/config/decrypted/local.env", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5NjM3MQ==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r376496371", "bodyText": "This looks great. We need this for Travis, as it won't be installed by default.", "author": "ronaldheft-usds", "createdAt": "2020-02-07T16:51:22Z", "path": ".travis.yml", "diffHunk": "@@ -29,4 +33,7 @@ jobs:\n       name: \"Website Build\"\n \n before_install:\n-  - sudo /etc/init.d/postgresql stop\n\\ No newline at end of file\n+  - sudo /etc/init.d/postgresql stop\n+\n+before_script:\n+  - sudo pip install ansible", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "98d07f073dd8c166eee83a5fed1e8290eb2340fb", "url": "https://github.com/CMSgov/dpc-app/commit/98d07f073dd8c166eee83a5fed1e8290eb2340fb", "message": "Move secrets decryption into Make target; Docker Compose BFD vars", "committedDate": "2020-02-09T15:19:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1OTU3NA==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r377159574", "bodyText": "Nice one-line bash command!", "author": "ronaldheft-usds", "createdAt": "2020-02-10T16:09:11Z", "path": "Makefile", "diffHunk": "@@ -70,3 +70,7 @@ smoke/prod-sbx: venv smoke\n .PHONY: docker-base\n docker-base:\n \t@docker-compose -f ./docker-compose.base.yml build base\n+\n+.PHONY: secure-envs\n+secure-envs:\n+\t@export $(bash ops/scripts/secrets --decrypt | tail -n +3 | sed -e'/^$/d' -e '/^#/d' | xargs)", "originalCommit": "98d07f073dd8c166eee83a5fed1e8290eb2340fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY2MDYzNA==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r377660634", "bodyText": "@msnook Just giving you a heads up on this, since I think it's slightly different from the way BCDA is handling the decryption. @ronaldheft-usds had some great suggestions for improving the security for environment variables.", "author": "nickrobison-usds", "createdAt": "2020-02-11T14:17:32Z", "path": "ops/scripts/secrets", "diffHunk": "@@ -0,0 +1,107 @@\n+#!/usr/bin/env bash\n+#\n+# A script to encrypt and decrypt project secrets with ansible vault.\n+#\n+# Usage:\n+# In the root project directory:\n+#   1. Obtain project password and save as .vault_password\n+#   2. Encrypt secret files with\n+#      $ ./scripts/secrets --encrypt\n+#   3. Decrypt secret files with\n+#      $ ./scripts/secrets --decrypt\n+\n+# menu prints help text\n+menu(){\n+    echo \"usage: $0 [--decrypt] [--encrypt] [arg]\"\n+    echo \"\"\n+    echo \"Optional argument taken to specify file or\"\n+    echo \"directory. If no arguments provided, default\"\n+    echo \"to all directories in .secret_files\"\n+    echo \"\"\n+    echo \"options:\"\n+    echo \"--encrypt  encrypt secret files\"\n+    echo \"--decrypt  decrypt secret files\"\n+}\n+\n+# if no argument is provided\n+if [ -z $2 ]; then\n+    # read contents of .secret_files, a text file containing\n+    # paths to secrets\n+    IFS=$'\\n' read -d '' -r -a secrets < .secrets\n+\n+# if argument is a directory\n+elif [ -d $2 ]; then\n+    # if directory is an environment directory\n+    if [[ \"$2\" =~ .*(dev|test|opensbx|prod)\\/?$ ]]; then\n+      secrets=(`ls -d $2/* 2> /dev/null`)\n+    # if not, assume we are in an application directory and\n+    # need to manage files one directory deeper\n+    else\n+      secrets=(`ls -d $2/*/* 2> /dev/null`)\n+    fi\n+\n+# if argument is a file\n+else\n+    secrets=\"$2\"\n+fi\n+\n+# parse command line arguments\n+POSITIONAL=()\n+while [[ $# -gt 0 ]]\n+do\n+key=\"$1\"\n+\n+\n+case $key in\n+    -h|--help)\n+    menu\n+    exit 1\n+    ;;\n+    --decrypt)\n+    DECRYPT=true\n+    shift # past argument\n+    shift # past value\n+    ;;\n+    --encrypt)\n+    ENCRYPT=true\n+    shift\n+    shift\n+    ;;\n+    *)\n+    POSITIONAL+=(\"$1\") # save it in an array for later\n+    shift # past argument\n+    ;;\n+esac\n+done\n+set -- \"${POSITIONAL[@]}\" # restore positional parameters\n+\n+# if neither decrypt nor encrypt flag provided, print help text and exit\n+if [[ \"$ENCRYPT\" != true && \"$DECRYPT\" != true ]]; then\n+    menu\n+    exit 1\n+fi\n+\n+\n+# decrypt decrypts a file with the vault password in the root directory\n+decrypt() {\n+    echo \"=> decrypting $1\";\n+    ansible-vault decrypt $1  --vault-password-file ./ops/scripts/read-vault-password.sh --output -", "originalCommit": "98d07f073dd8c166eee83a5fed1e8290eb2340fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY3MDE1Mg==", "url": "https://github.com/CMSgov/dpc-app/pull/592#discussion_r377670152", "bodyText": "@nickrobison-usds Thanks!  Yup, we've been following this PR over the last few days.  We created this JIRA ticket a few days ago to ensure we update our strategy to align with the DPC improvements.", "author": "msnook", "createdAt": "2020-02-11T14:32:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY2MDYzNA=="}], "type": "inlineReview"}, {"oid": "904bcaf5fca744ea0fbd1ec8de989a4232f45913", "url": "https://github.com/CMSgov/dpc-app/commit/904bcaf5fca744ea0fbd1ec8de989a4232f45913", "message": "Starting Ansible Vault setup", "committedDate": "2020-02-20T14:48:36Z", "type": "commit"}, {"oid": "e5e3d69a8c288fe7a3958f8a5640d6a0f695410b", "url": "https://github.com/CMSgov/dpc-app/commit/e5e3d69a8c288fe7a3958f8a5640d6a0f695410b", "message": "Correct .vault_password location in Travis config", "committedDate": "2020-02-20T14:48:40Z", "type": "commit"}, {"oid": "ea7b7fa3ad7a9486c59a05d6169280893802c9c2", "url": "https://github.com/CMSgov/dpc-app/commit/ea7b7fa3ad7a9486c59a05d6169280893802c9c2", "message": "dpc-test.sh and Travis config in progress", "committedDate": "2020-02-20T14:48:40Z", "type": "commit"}, {"oid": "7baab925f837866ab8b641846064156438f0db3d", "url": "https://github.com/CMSgov/dpc-app/commit/7baab925f837866ab8b641846064156438f0db3d", "message": "Script to read Vault password; config and test script changes", "committedDate": "2020-02-20T14:48:40Z", "type": "commit"}, {"oid": "0cfd3b6a927e570866808abf574a3e5f7fbd06d5", "url": "https://github.com/CMSgov/dpc-app/commit/0cfd3b6a927e570866808abf574a3e5f7fbd06d5", "message": "Move secrets decryption into Make target; Docker Compose BFD vars", "committedDate": "2020-02-20T14:48:40Z", "type": "commit"}, {"oid": "0cfd3b6a927e570866808abf574a3e5f7fbd06d5", "url": "https://github.com/CMSgov/dpc-app/commit/0cfd3b6a927e570866808abf574a3e5f7fbd06d5", "message": "Move secrets decryption into Make target; Docker Compose BFD vars", "committedDate": "2020-02-20T14:48:40Z", "type": "forcePushed"}, {"oid": "2162952aaf7654f8a3e46f9c5d0ed27a90bc0917", "url": "https://github.com/CMSgov/dpc-app/commit/2162952aaf7654f8a3e46f9c5d0ed27a90bc0917", "message": "Merge branch 'master' into emily/dpc-993-secrets-vault", "committedDate": "2020-02-20T15:20:39Z", "type": "commit"}, {"oid": "1e94607d34a4172a0542121bce50b472803d0f24", "url": "https://github.com/CMSgov/dpc-app/commit/1e94607d34a4172a0542121bce50b472803d0f24", "message": "Merge branch 'master' into emily/dpc-993-secrets-vault", "committedDate": "2020-02-20T16:18:48Z", "type": "commit"}]}