{"pr_number": 1043, "pr_title": "dpcclient CLI tool", "pr_createdAt": "2020-09-15T19:20:21Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/1043", "timeline": [{"oid": "80d90116618adb29de3b07ec080615c5e6b7b07e", "url": "https://github.com/CMSgov/dpc-app/commit/80d90116618adb29de3b07ec080615c5e6b7b07e", "message": "first commit of dpcclient", "committedDate": "2020-04-21T21:34:13Z", "type": "commit"}, {"oid": "878ec0565f49139ce7a8780a31764d8840698a34", "url": "https://github.com/CMSgov/dpc-app/commit/878ec0565f49139ce7a8780a31764d8840698a34", "message": "fix inconsistent example", "committedDate": "2020-04-24T20:24:11Z", "type": "commit"}, {"oid": "a15eba0e54ac425a1d8ad015d452099e1fc3e1cf", "url": "https://github.com/CMSgov/dpc-app/commit/a15eba0e54ac425a1d8ad015d452099e1fc3e1cf", "message": "Merge branch 'master' into dj/dpcclient", "committedDate": "2020-05-15T19:02:28Z", "type": "commit"}, {"oid": "021b3da1b0b4095d7eceb39e63b05d5c90a8f180", "url": "https://github.com/CMSgov/dpc-app/commit/021b3da1b0b4095d7eceb39e63b05d5c90a8f180", "message": "Rename/move internal package for use as library", "committedDate": "2020-09-15T18:51:32Z", "type": "commit"}, {"oid": "39a913afe590b86ef6def3f637a75add502767bb", "url": "https://github.com/CMSgov/dpc-app/commit/39a913afe590b86ef6def3f637a75add502767bb", "message": "Executables and README cleanup", "committedDate": "2020-09-15T19:13:52Z", "type": "commit"}, {"oid": "980e764ff4674edcd56bca3ee9f7937a80c61097", "url": "https://github.com/CMSgov/dpc-app/commit/980e764ff4674edcd56bca3ee9f7937a80c61097", "message": "Merge branch 'master' into emily/dpcclient", "committedDate": "2020-09-15T19:20:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzNDkxNg==", "url": "https://github.com/CMSgov/dpc-app/pull/1043#discussion_r488934916", "bodyText": "Function SaveDPCKeyPair has 5 return statements (exceeds 4 allowed).", "author": "codeclimate", "createdAt": "2020-09-15T19:53:05Z", "path": "dpcclient/lib/pki.go", "diffHunk": "@@ -0,0 +1,106 @@\n+package lib\n+\n+import (\n+\t\"crypto/rand\"\n+\t\"crypto/rsa\"\n+\t\"crypto/x509\"\n+\t\"encoding/pem\"\n+\t\"errors\"\n+\t\"fmt\"\n+)\n+\n+// https://dpc.cms.gov/docs, 'Uploading a public key' section. The first public key must be uploaded via the web UI.\n+// Thereafter, public keys can be managed via the API Key endpoint\n+const RsaKeyMinBits = 4096\n+\n+// GenRSAKeyPair generates a suitably-sized private key for use with DPC, returning both the private key\n+// and the associated public key. Note that no pass phrase is associated with the private key. Further note\n+// that the private key is in PKCS1 form, but the public key is in PKIX form. This is directly in response\n+// to DPC requirements; DPC only understands PKIX format for public keys.\n+// https://serverfault.com/questions/9708/what-is-a-pem-file-and-how-does-it-differ-from-other-openssl-generated-key-file\n+func GenRSAKeyPair() (*rsa.PrivateKey, *rsa.PublicKey, error) {\n+\tpriv, err := rsa.GenerateKey(rand.Reader, RsaKeyMinBits)\n+\tif err != nil {\n+\t\treturn nil, nil, err\n+\t}\n+\treturn priv, &priv.PublicKey, nil\n+}\n+\n+func savePrivateKey(prefix string, key *rsa.PrivateKey) error {\n+\tconvertedKey := x509.MarshalPKCS1PrivateKey(key)\n+\tif convertedKey == nil {\n+\t\treturn errors.New(\"could not marshall private key to x509 PKCS1 form\")\n+\t}\n+\tprivateKeyBytes := pem.EncodeToMemory(\n+\t\t&pem.Block{\n+\t\t\tType:  \"RSA PRIVATE KEY\",\n+\t\t\tBytes: convertedKey,\n+\t\t},\n+\t)\n+\tif err := WriteSmallFile(fmt.Sprintf(\"%s-private.pem\", prefix), privateKeyBytes); err != nil {\n+\t\treturn err\n+\t}\n+\treturn nil\n+}\n+\n+func savePublicKey(prefix string, key *rsa.PublicKey) error {\n+\tconvertedKey, err := x509.MarshalPKIXPublicKey(key)\n+\tif convertedKey == nil || err != nil {\n+\t\treturn errors.New(\"could not marshall public key to x509 PKIX form\")\n+\t}\n+\tpublicKeyBytes := pem.EncodeToMemory(&pem.Block{\n+\t\tType:  \"PUBLIC KEY\",\n+\t\tBytes: convertedKey,\n+\t})\n+\tif err := WriteSmallFile(fmt.Sprintf(\"%s-public.pem\", prefix), publicKeyBytes); err != nil {\n+\t\treturn err\n+\t}\n+\treturn nil\n+}\n+\n+// SaveDPCKeyPair saves an RSA Key Pair to files, first checking that it is valid for use with DPC.\n+// The prefix string should contain any path elements either relative to the working directory or absolute.\n+// Two files will be created using the prefix --- prefix-private.pem and prefix-public.pem ---\n+// with the obvious contents.\n+func SaveDPCKeyPair(prefix string, private *rsa.PrivateKey, public *rsa.PublicKey) error {", "originalCommit": "980e764ff4674edcd56bca3ee9f7937a80c61097", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "537b9269be2981771e8748f31a13b3b252c3705e", "url": "https://github.com/CMSgov/dpc-app/commit/537b9269be2981771e8748f31a13b3b252c3705e", "message": "Update README.md", "committedDate": "2020-09-15T20:05:42Z", "type": "commit"}]}