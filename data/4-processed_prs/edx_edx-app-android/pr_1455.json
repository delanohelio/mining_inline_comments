{"pr_number": 1455, "pr_title": "Crash Fix on first occurrence what's new Screen", "pr_createdAt": "2020-08-27T15:30:23Z", "pr_url": "https://github.com/edx/edx-app-android/pull/1455", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUxOTYwOQ==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478519609", "bodyText": "This should be called enrolledCoursesCall", "author": "miankhalid", "createdAt": "2020-08-27T15:47:04Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/MyCoursesListFragment.kt", "diffHunk": "@@ -49,6 +49,7 @@ class MyCoursesListFragment : OfflineSupportBaseFragment(), RefreshListener {\n     @Inject\n     private lateinit var courseAPI: CourseAPI\n     private lateinit var errorNotification: FullScreenErrorNotification\n+    private lateinit var enrolledCoursesApi: Call<List<EnrolledCoursesResponse>>", "originalCommit": "1cafe0e56bb1aceb07238cdcc29b22d07981d734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU1MTIwNw==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478551207", "bodyText": "Done", "author": "omerhabib26", "createdAt": "2020-08-27T16:36:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUxOTYwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyMjEzMg==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478522132", "bodyText": "comment not needed.", "author": "miankhalid", "createdAt": "2020-08-27T15:50:55Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/MyCoursesListFragment.kt", "diffHunk": "@@ -100,13 +101,15 @@ class MyCoursesListFragment : OfflineSupportBaseFragment(), RefreshListener {\n     override fun onResume() {\n         super.onResume()\n         if (refreshOnResume) {\n-            loadData(showProgress = false, isCached = true)\n+            loadData(showProgress = true, isCached = true)\n             refreshOnResume = false\n         }\n     }\n \n     override fun onDestroy() {\n         super.onDestroy()\n+        // Cancel the api call in case of activity destroy", "originalCommit": "1cafe0e56bb1aceb07238cdcc29b22d07981d734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU1MTQ4OQ==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478551489", "bodyText": "comment removed", "author": "omerhabib26", "createdAt": "2020-08-27T16:37:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyMjEzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyODcwNA==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478528704", "bodyText": "why was this changed?", "author": "miankhalid", "createdAt": "2020-08-27T16:00:56Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/MyCoursesListFragment.kt", "diffHunk": "@@ -100,13 +101,15 @@ class MyCoursesListFragment : OfflineSupportBaseFragment(), RefreshListener {\n     override fun onResume() {\n         super.onResume()\n         if (refreshOnResume) {\n-            loadData(showProgress = false, isCached = true)\n+            loadData(showProgress = true, isCached = true)", "originalCommit": "1cafe0e56bb1aceb07238cdcc29b22d07981d734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU1MTM4MQ==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478551381", "bodyText": "Change reverted", "author": "omerhabib26", "createdAt": "2020-08-27T16:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyODcwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU0MDUwMQ==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478540501", "bodyText": "isCached should be renamed to fromCache and javadoc should be updated accordingly.", "author": "miankhalid", "createdAt": "2020-08-27T16:19:46Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/MyCoursesListFragment.kt", "diffHunk": "@@ -124,23 +127,20 @@ class MyCoursesListFragment : OfflineSupportBaseFragment(), RefreshListener {\n             binding.loadingIndicator.root.visibility = View.VISIBLE\n             errorNotification.hideError()\n         }\n-        if (isCached) {\n-            getUserEnrolledCourses(courseAPI.enrolledCoursesFromCache, isCached = true)\n-        } else {\n-            getUserEnrolledCourses(courseAPI.enrolledCourses)\n-        }\n+        enrolledCoursesApi = if (isCached) courseAPI.enrolledCoursesFromCache else courseAPI.enrolledCourses", "originalCommit": "1cafe0e56bb1aceb07238cdcc29b22d07981d734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU1MzQ5NA==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478553494", "bodyText": "Renamed", "author": "omerhabib26", "createdAt": "2020-08-27T16:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU0MDUwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU0MzUxOA==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478543518", "bodyText": "Should add a comment here:\n// Fetch latest data from server in the background after displaying previously cached data", "author": "miankhalid", "createdAt": "2020-08-27T16:24:34Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/MyCoursesListFragment.kt", "diffHunk": "@@ -124,23 +127,20 @@ class MyCoursesListFragment : OfflineSupportBaseFragment(), RefreshListener {\n             binding.loadingIndicator.root.visibility = View.VISIBLE\n             errorNotification.hideError()\n         }\n-        if (isCached) {\n-            getUserEnrolledCourses(courseAPI.enrolledCoursesFromCache, isCached = true)\n-        } else {\n-            getUserEnrolledCourses(courseAPI.enrolledCourses)\n-        }\n+        enrolledCoursesApi = if (isCached) courseAPI.enrolledCoursesFromCache else courseAPI.enrolledCourses\n+        getUserEnrolledCourses(isCached)\n     }\n \n-    private fun getUserEnrolledCourses(enrolledCoursesApi: Call<List<EnrolledCoursesResponse>>, isCached: Boolean = false) {\n+    private fun getUserEnrolledCourses(isCached: Boolean = false) {\n         enrolledCoursesApi.enqueue(object : Callback<List<EnrolledCoursesResponse>> {\n             override fun onResponse(call: Call<List<EnrolledCoursesResponse>>, response: Response<List<EnrolledCoursesResponse>>) {\n                 if (response.isSuccessful && response.code() == HttpStatus.OK) {\n                     populateCourseData(ArrayList(response.body()), isCachedData = isCached)\n                     if (isCached) {\n-                        getUserEnrolledCourses(courseAPI.enrolledCourses)\n+                        loadData(showProgress = response.body()?.isEmpty() == true, isCached = false)", "originalCommit": "1cafe0e56bb1aceb07238cdcc29b22d07981d734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MDMzMw==", "url": "https://github.com/edx/edx-app-android/pull/1455#discussion_r478560333", "bodyText": "Done", "author": "omerhabib26", "createdAt": "2020-08-27T16:52:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU0MzUxOA=="}], "type": "inlineReview"}, {"oid": "d5671272b8cb6ca4179680cfdadd6d79b60a367c", "url": "https://github.com/edx/edx-app-android/commit/d5671272b8cb6ca4179680cfdadd6d79b60a367c", "message": "Fix crash on first occurrence of what's new screen\n- LEARNER-7894\nThe crash happens when \"Don't Keep Activity\" option is enabled.\nSo, by cancelling the API call and handling it gracefully when\nthe activity is destroyed fixes the problem.\nAlso, handled loader visibility when there's a cache miss.", "committedDate": "2020-08-27T16:45:34Z", "type": "commit"}, {"oid": "d5671272b8cb6ca4179680cfdadd6d79b60a367c", "url": "https://github.com/edx/edx-app-android/commit/d5671272b8cb6ca4179680cfdadd6d79b60a367c", "message": "Fix crash on first occurrence of what's new screen\n- LEARNER-7894\nThe crash happens when \"Don't Keep Activity\" option is enabled.\nSo, by cancelling the API call and handling it gracefully when\nthe activity is destroyed fixes the problem.\nAlso, handled loader visibility when there's a cache miss.", "committedDate": "2020-08-27T16:45:34Z", "type": "forcePushed"}]}