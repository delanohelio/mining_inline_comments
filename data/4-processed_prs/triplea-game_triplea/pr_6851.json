{"pr_number": 6851, "pr_title": "Fix NPEs in ProSimulateTurnUtils.", "pr_createdAt": "2020-06-25T18:00:04Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6851", "timeline": [{"oid": "38bca0238ac68737e487b53b2b0b7bada9b5f9bf", "url": "https://github.com/triplea-game/triplea/commit/38bca0238ac68737e487b53b2b0b7bada9b5f9bf", "message": "Fix NPEs in ProSimulateTurnUtils.\n\nMarks return value of functions that can return null w/\n@Nullable and adds null checks to callers.\n\nFixes: https://github.com/triplea-game/triplea/issues/6833", "committedDate": "2020-06-25T17:58:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk2NTA4Ng==", "url": "https://github.com/triplea-game/triplea/pull/6851#discussion_r445965086", "bodyText": "not necessary, but any thoughts to using Optional to avoid the intermediate variable?\ntransferUnit(u, unitTerritoryMap, usedUnits, toData, player).ifPresent(\nunit -> {\n:\n:\n});\nOptional return values generally work out very nicely and avoid needing to notice there is a nullable annotation and forces you (type safety) to deal with the null.", "author": "DanVanAtta", "createdAt": "2020-06-26T04:46:47Z", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/simulate/ProSimulateTurnUtils.java", "diffHunk": "@@ -181,28 +189,34 @@ public static void simulateBattles(\n       for (final Unit u : moveMap.get(fromTerritory).getUnits()) {\n         if (!amphibUnits.contains(u)) {\n           final Unit toUnit = transferUnit(u, unitTerritoryMap, usedUnits, toData, player);\n-          patd.addUnit(toUnit);\n-          ProLogger.trace(\"---Transferring unit \" + u + \" to \" + toUnit);\n+          if (toUnit != null) {", "originalCommit": "38bca0238ac68737e487b53b2b0b7bada9b5f9bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}