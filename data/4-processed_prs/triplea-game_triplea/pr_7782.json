{"pr_number": 7782, "pr_title": "Simplify BattleState api by combining methods", "pr_createdAt": "2020-09-26T16:54:00Z", "pr_url": "https://github.com/triplea-game/triplea/pull/7782", "timeline": [{"oid": "18af1317d04c31f1afaecb16779750487877fa29", "url": "https://github.com/triplea-game/triplea/commit/18af1317d04c31f1afaecb16779750487877fa29", "message": "Simplify BattleState api by combining methods", "committedDate": "2020-09-26T16:50:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzQ3MQ==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495483471", "bodyText": "Do I understand right that we're doing more of a filter operation here rather than a straight get? If so, what would you think of naming this method 'filterUnits'?  Or 'getUnitsByStatus', or 'filterUnitsBySTatus'", "author": "DanVanAtta", "createdAt": "2020-09-26T18:38:11Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/MustFightBattle.java", "diffHunk": "@@ -363,7 +365,29 @@ public BattleRound getBattleRoundState() {\n   }\n \n   @Override\n-  public Collection<Unit> getUnits(final Side... sides) {\n+  public GamePlayer getPlayer(final Side side) {\n+    return side == OFFENSE ? getAttacker() : getDefender();\n+  }\n+\n+  @Override\n+  public Collection<Unit> getUnits(final UnitsStatus status, final Side... sides) {", "originalCommit": "18af1317d04c31f1afaecb16779750487877fa29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NzI3OA==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495487278", "bodyText": "filterUnits sounds like it should take a collection of units and return a filtered subset.  This is more of a get.  I also don't think adding ByStatus to it is needed since the first parameter is the status so it already indicates you are getting by status.  But I could change it to getUnitsByStatus.", "author": "trevan", "createdAt": "2020-09-26T19:23:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzQ3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzY3MA==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495483670", "bodyText": "I'm a bit confused by 'active' being alive and casualty. The confusing part is if they are alive and casualty, then wouldn't they be 'casualty'?\nThe enum maybe would be more descriptive as well called UnitBattleStatus as it's seemingly the units status relative to the current battle.\nThe 'active' I think could use more clarity", "author": "DanVanAtta", "createdAt": "2020-09-26T18:40:20Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/BattleState.java", "diffHunk": "@@ -30,10 +30,24 @@ public Side getOpposite() {\n     }\n   }\n \n+  enum UnitsStatus {\n+    // units that have not been hit\n+    ALIVE,\n+    // both ALIVE and CASUALTY\n+    ACTIVE,", "originalCommit": "18af1317d04c31f1afaecb16779750487877fa29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495483784", "bodyText": "Would it make sense to call this \"removed\" and use that terminology in the comments above as well?\nI notice: \" but not yet cleared\", which would imply this is a \"CLEARED\" status. \"CLEARED\" could mean a few other things, \"REMOVED\" on the other hand I believe would be unambiguous.\nArguably, 'dead' and 'casualty' can mean the same thing, a slight rename would keep that distinction crystal clear.", "author": "DanVanAtta", "createdAt": "2020-09-26T18:41:45Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/BattleState.java", "diffHunk": "@@ -30,10 +30,24 @@ public Side getOpposite() {\n     }\n   }\n \n+  enum UnitsStatus {\n+    // units that have not been hit\n+    ALIVE,\n+    // both ALIVE and CASUALTY\n+    ACTIVE,\n+    // units that have been hit but not yet cleared\n+    CASUALTY,\n+    // units that are dead\n+    DEAD,", "originalCommit": "18af1317d04c31f1afaecb16779750487877fa29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NzA5Nw==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495487097", "bodyText": "Yeah, terminology is a little confusing.   Basically, there are 3 states a unit can have:\n\nUnit has been removed from the battle\nUnit is on the casualty strip but can still fire back\nUnit is none of the above\n\nThe 2nd and 3rd case are generally requested together (such as when figuring out who can fire) so I added a 4th state to combine the 2nd and 3rd case.\nSo, the names I picked were:\n\nDEAD\nCASUALTY\nALIVE\nACTIVE (the union of CASUALTY and ALIVE)\n\nCalling DEAD as REMOVED might add some confusion since retreated units are removed but they aren't dead.\nI see the confusion where the term casualty generally includes both dead and wounded.  I thought of WOUNDED but a two-hit unit with only one hit is \"wounded\" but it wouldn't be in that group.  I choose CASUALTY since the rules generally call it the \"casualty strip\".", "author": "trevan", "createdAt": "2020-09-26T19:21:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4ODg3NA==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495488874", "bodyText": "Perhaps: ACTIVE, CASUALTY, REMOVED_CASUALTY (?)\nIMO it would be good to refer to RETREATED rather than REMOVED, but perhaps beyond the point.\nThe union of the two other states is kinda odd.  Is it actually an intersection? Can a unit have multiple states? To resolve this, perhaps the callers should query for either CASUALTY or ALIVE and then it's just on the caller to query for either state?", "author": "DanVanAtta", "createdAt": "2020-09-26T19:43:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ5MDU0MQ==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495490541", "bodyText": "I've updated the comments because the original comment said \"ALIVE and CASUALTY\" when it probably should have said \"or\".  It is a union of the two states, not an intersection.  A unit can only have one state.\nThe \"ACTIVE\" state is there to help ensure that code doesn't forget to check the CASUALTY state.  Right now, I think there are a few cases where it is forgetting.  I expect ACTIVE to be the normal state that callers will use and ALIVE and CASUALTY will be the special cases.\nRETREATED doesn't exist yet but that is just because there is no current code that uses BattleState and that needs the retreated units.  It probably will exist at some point.\nIs REMOVED_CASUALTY supposed to replace DEAD?  Because the DEAD state really are dead units.  They are no longer in the game.", "author": "trevan", "createdAt": "2020-09-26T20:04:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ5MzU0NQ==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495493545", "bodyText": "Is REMOVED_CASUALTY supposed to replace DEAD? Because the DEAD state really are dead units. They are no longer in the game.\n\nYes, I believe the two are quite synonymous, a removed casualty is removed from the game. The idea is to try and bake into the names a relationship so we can see the transition from the naming alone. 'casualty' -> 'removed-casualty'.\n\nThe union still strikes me as odd. Typically states and even enum values are well to be mutually exclusive. It's kinda confusing as the union is both states, so it could be confusing to think that you are one enum value when you are really another. For example, take \"A\", \"B\", and \"C\" is the union of \"A\" and \"B\". If someone is looking at code dealing with only \"A\" and \"B\", it could be confusing to get a \"C\" state back and or know that if a unit transitions to state \"B\" then it's a conditional transition and the unit might have to go to state \"C\".\nAny thoughts to having callers to send the union? We have a vararg method already, I think one would only need to replace \"ALIVE\" to be its constituent components. That would make it clear at a caller level we are doing an 'or' between two states.", "author": "DanVanAtta", "createdAt": "2020-09-26T20:41:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ5NzAzMQ==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495497031", "bodyText": "I thought of doing a method but java doesn't allow two varargs in the same method.  I've just pushed a change where I created an overloaded getUnits.  And I've removed ACTIVE.\nBut, maybe the confusion is that it is named \"states\".  You initially mentioned calling it filterUnits.  Maybe it should be changed to that.  What about UnitBattleFilter or something?  Because ACTIVE isn't a \"state\".  It is a filter that is the boolean OR of ALIVE and CASUALTY.  A unit is either ALIVE or CASUALTY.  And since I expect most callers to want both ALIVE and CASUALTY units, I wanted to make it simple for callers to just request a pre-built \"OR\" filter, called ACTIVE.", "author": "trevan", "createdAt": "2020-09-26T21:24:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ5ODEzOQ==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495498139", "bodyText": "Here's another idea.  What about keeping the UnitBattleStatus and add a UnitBattleFilter that is defined like:\n  enum UnitBattleFilter {\n    ACTIVE(EnumSet.of(UnitBattleStatus.ALIVE, UnitBattleStatus.CASUALTY)),\n    ALIVE(EnumSet.of(UnitBattleStatus.ALIVE)),\n    CASUALTY(EnumSet.of(UnitBattleStatus.CASUALTY));\n\n    EnumSet<UnitBattleStatus> status;\n    UnitBattleFilter(final EnumSet<UnitBattleStatus> status) {\n      this.status = status;\n    }\n  }\n\nThen getUnits (or filterUnits) would take a UnitBattleFilter.", "author": "trevan", "createdAt": "2020-09-26T21:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwMzM4Nw==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495503387", "bodyText": "Interesting idea. My only concern is the amount of scaffolding/indirection, but we're still in a very reasonable realm here.\nYou might be able to absorb the filter method into the UnitBattleFilter method as well.\nSome really rough code for that to give an idea:\npublic class UnitBattleFilter implements UnaryFunction<Unit> {\n    ACTIVE = new UnitBattleFilter(UnitBattleStatus.ALIVE, UnitBattleStatus.CASUALTY));\n   \n   private final List<UnitBattleStatus> states;\n\n    private    UnitBattleFilter(UnitBattleStatus ... states)  {\n  }", "author": "DanVanAtta", "createdAt": "2020-09-26T22:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwNDk4MA==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495504980", "bodyText": "I don't think I can absorb the filter method into the UnitBattleFilter.  The class will need to access the raw unit lists (attackingUnits, defendingUnits, etc.) from MustFightBattle so I'd have to make public methods for access to those lists and that takes us back to having a bunch of public methods.", "author": "trevan", "createdAt": "2020-09-26T23:16:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwNTE0NQ==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495505145", "bodyText": "Oh, I guess if the unit knew which status it was, then the unary function would work.  But unfortunately, the units don't actually know what their status is.  Only MustFightBattle does at this time.", "author": "trevan", "createdAt": "2020-09-26T23:19:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwNjA5NQ==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495506095", "bodyText": "I've been wondering if unit attachment should be collapsed into units. That's a big change. The filter enum seems like a good compromise though in the meantime.", "author": "DanVanAtta", "createdAt": "2020-09-26T23:33:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwNjQzNg==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495506436", "bodyText": "That's a big change.  But even unit attachment doesn't store the battle status.  There's nothing on the unit nor anything attached to it (type, attachment, etc) that has the battle status.  It is solely managed by internal lists in MustFightBattle.  Which can mean that you can cause a bug where a unit is both alive, casualty, and dead at the same time.  You just have to add the unit to all three lists :)\nThat's kind of what caused the paratrooper issue.  The paratrooper was dead and so it was in the killed list.  But it was a dependent, so it was in the dependent list as well.  And air dependents are always considered alive.  So the paratrooper was both dead and alive :)", "author": "trevan", "createdAt": "2020-09-26T23:38:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzc5NA==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495483794", "bodyText": "Nice, many fewer methods here, good work  \ud83d\udc4d", "author": "DanVanAtta", "createdAt": "2020-09-26T18:42:10Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/BattleState.java", "diffHunk": "@@ -65,20 +77,10 @@ public boolean isFirstRound() {\n \n   Collection<Unit> getBombardingUnits();\n \n-  Collection<Unit> getKilled();", "originalCommit": "18af1317d04c31f1afaecb16779750487877fa29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NDE2OQ==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495484169", "bodyText": "The exact implementation in the fake as we have in the real is concerning. At some point this is not even a fake but just another battle-state implementation.  I don't know if there is a good solution for this problem that would fit within the scope of this PR. However, let's keep an eye on this as it seems to be a growing problem for the fake battle state.", "author": "DanVanAtta", "createdAt": "2020-09-26T18:46:26Z", "path": "game-core/src/test/java/games/strategy/triplea/delegate/battle/FakeBattleState.java", "diffHunk": "@@ -96,12 +94,34 @@\n   }\n \n   @Override\n-  public BattleRound getBattleRoundState() {\n-    return BattleRound.of(battleRound, maxBattleRounds);\n+  public BattleStatus getStatus() {\n+    return BattleStatus.of(battleRound, maxBattleRounds, over, amphibious, headless);\n   }\n \n   @Override\n-  public Collection<Unit> getUnits(final Side... sides) {\n+  public GamePlayer getPlayer(final Side side) {\n+    return side == OFFENSE ? attacker : defender;\n+  }\n+\n+  @Override\n+  public Collection<Unit> getUnits(final UnitsStatus status, final Side... sides) {", "originalCommit": "18af1317d04c31f1afaecb16779750487877fa29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NjE3Nw==", "url": "https://github.com/triplea-game/triplea/pull/7782#discussion_r495486177", "bodyText": "Yeah, it is turning into a real implementation.  I've started to think that it might be better to pull it out as a real implementation and change MustFightBattle to hold a transient instance of it.  Then instead of passing MustFightBattle around as a BattleState, it would instead pass this implementation.", "author": "trevan", "createdAt": "2020-09-26T19:10:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NDE2OQ=="}], "type": "inlineReview"}, {"oid": "a1d9b9adf660f2e3c6dc647c89d33d19056c86c0", "url": "https://github.com/triplea-game/triplea/commit/a1d9b9adf660f2e3c6dc647c89d33d19056c86c0", "message": "Improve UnitBattleStatus comments", "committedDate": "2020-09-26T19:29:37Z", "type": "commit"}, {"oid": "f153f6783f699e5f3223da8ad4ca6825ce144b39", "url": "https://github.com/triplea-game/triplea/commit/f153f6783f699e5f3223da8ad4ca6825ce144b39", "message": "Allow requesting multiple states for getUnits", "committedDate": "2020-09-26T21:20:07Z", "type": "commit"}, {"oid": "69789843330b2c4f25b2c1dac31c8ffa1c1ef8ab", "url": "https://github.com/triplea-game/triplea/commit/69789843330b2c4f25b2c1dac31c8ffa1c1ef8ab", "message": "Rename getUnits to filterUnits and use a filter that wraps the status", "committedDate": "2020-09-26T23:47:30Z", "type": "commit"}, {"oid": "e271f16b83bceef24d49a0383097dcec9a869595", "url": "https://github.com/triplea-game/triplea/commit/e271f16b83bceef24d49a0383097dcec9a869595", "message": "Fix checkstyle issues", "committedDate": "2020-09-27T01:44:39Z", "type": "commit"}]}