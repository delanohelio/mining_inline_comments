{"pr_number": 6053, "pr_title": "Statistics Panel (5) \u2013 Dynamic resource charts", "pr_createdAt": "2020-03-15T10:34:10Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6053", "timeline": [{"oid": "99fc8364f8a840180c87db93d980f163dde41ef4", "url": "https://github.com/triplea-game/triplea/commit/99fc8364f8a840180c87db93d980f163dde41ef4", "message": "1660 - delete dummy graphs", "committedDate": "2020-03-15T10:31:05Z", "type": "commit"}, {"oid": "5d0ffc9e8f38bc295cd8b798f90fc80492381558", "url": "https://github.com/triplea-game/triplea/commit/5d0ffc9e8f38bc295cd8b798f90fc80492381558", "message": "1660 - overTimeStatistics aggregation not hardcoded anymore", "committedDate": "2020-03-15T10:31:05Z", "type": "commit"}, {"oid": "d0f981463a1e1f6f1044d09c43a7fcc9ce0d62a8", "url": "https://github.com/triplea-game/triplea/commit/d0f981463a1e1f6f1044d09c43a7fcc9ce0d62a8", "message": "1660 - add (dynamic) map resource statistics", "committedDate": "2020-03-15T10:31:05Z", "type": "commit"}, {"oid": "e06bdddd99952c702f650cea295c9f97b5be0c91", "url": "https://github.com/triplea-game/triplea/commit/e06bdddd99952c702f650cea295c9f97b5be0c91", "message": "1660 - move overTimeStatistics collecting to own method", "committedDate": "2020-03-15T10:31:05Z", "type": "commit"}, {"oid": "3e67f4120971dadf118a691e2728af521418b9a6", "url": "https://github.com/triplea-game/triplea/commit/3e67f4120971dadf118a691e2728af521418b9a6", "message": "1660 - move ResourceStat to own file", "committedDate": "2020-03-15T10:31:05Z", "type": "commit"}, {"oid": "677da679ca8ae46ce41049988ee196c06a9b43bb", "url": "https://github.com/triplea-game/triplea/commit/677da679ca8ae46ce41049988ee196c06a9b43bb", "message": "1660 - correct field naming", "committedDate": "2020-03-15T10:31:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2MDgwNQ==", "url": "https://github.com/triplea-game/triplea/pull/6053#discussion_r392660805", "bodyText": "Method collectOverTimeStatistics has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-03-15T10:35:31Z", "path": "game-core/src/main/java/games/strategy/engine/stats/StatisticsAggregator.java", "diffHunk": "@@ -17,60 +21,64 @@\n @Log\n @RequiredArgsConstructor\n public class StatisticsAggregator {\n-  private static IStat productionStat = new ProductionStat();\n-  private static IStat tuvStat = new TuvStat();\n-  private static IStat unitsStat = new UnitsStat();\n-  private static IStat victoryCityStat = new VictoryCityStat();\n-\n   private final Statistics underConstruction = new Statistics();\n   private final GameData game;\n+  private static final Map<OverTimeStatisticType, IStat> defaultStatisticsMapping =\n+      Map.of(\n+          OverTimeStatisticType.PredefinedStatistics.TUV, new TuvStat(),\n+          OverTimeStatisticType.PredefinedStatistics.PRODUCTION, new ProductionStat(),\n+          OverTimeStatisticType.PredefinedStatistics.UNITS, new UnitsStat(),\n+          OverTimeStatisticType.PredefinedStatistics.VC, new VictoryCityStat());\n+\n+  private static Map<OverTimeStatisticType, IStat> createOverTimeStatisticsMapping(\n+      List<Resource> resources) {\n+    final Map<OverTimeStatisticType, IStat> statisticsMapping =\n+        new HashMap<>(defaultStatisticsMapping);\n+    resources.forEach(\n+        resource ->\n+            statisticsMapping.put(\n+                new OverTimeStatisticType.ResourceStatistic(resource), new ResourceStat(resource)));\n+    return statisticsMapping;\n+  }\n \n   public Statistics aggregate() {\n     log.info(\"Aggregating statistics for game \" + game.getGameName());\n+    collectOverTimeStatistics();\n+    return underConstruction;\n+  }\n+\n+  private void collectOverTimeStatistics() {", "originalCommit": "677da679ca8ae46ce41049988ee196c06a9b43bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2MDgwNg==", "url": "https://github.com/triplea-game/triplea/pull/6053#discussion_r392660806", "bodyText": "Method collectOverTimeStatistics has 28 lines of code (exceeds 25 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-03-15T10:35:31Z", "path": "game-core/src/main/java/games/strategy/engine/stats/StatisticsAggregator.java", "diffHunk": "@@ -17,60 +21,64 @@\n @Log\n @RequiredArgsConstructor\n public class StatisticsAggregator {\n-  private static IStat productionStat = new ProductionStat();\n-  private static IStat tuvStat = new TuvStat();\n-  private static IStat unitsStat = new UnitsStat();\n-  private static IStat victoryCityStat = new VictoryCityStat();\n-\n   private final Statistics underConstruction = new Statistics();\n   private final GameData game;\n+  private static final Map<OverTimeStatisticType, IStat> defaultStatisticsMapping =\n+      Map.of(\n+          OverTimeStatisticType.PredefinedStatistics.TUV, new TuvStat(),\n+          OverTimeStatisticType.PredefinedStatistics.PRODUCTION, new ProductionStat(),\n+          OverTimeStatisticType.PredefinedStatistics.UNITS, new UnitsStat(),\n+          OverTimeStatisticType.PredefinedStatistics.VC, new VictoryCityStat());\n+\n+  private static Map<OverTimeStatisticType, IStat> createOverTimeStatisticsMapping(\n+      List<Resource> resources) {\n+    final Map<OverTimeStatisticType, IStat> statisticsMapping =\n+        new HashMap<>(defaultStatisticsMapping);\n+    resources.forEach(\n+        resource ->\n+            statisticsMapping.put(\n+                new OverTimeStatisticType.ResourceStatistic(resource), new ResourceStat(resource)));\n+    return statisticsMapping;\n+  }\n \n   public Statistics aggregate() {\n     log.info(\"Aggregating statistics for game \" + game.getGameName());\n+    collectOverTimeStatistics();\n+    return underConstruction;\n+  }\n+\n+  private void collectOverTimeStatistics() {", "originalCommit": "677da679ca8ae46ce41049988ee196c06a9b43bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "659b6b78d1b708b5fd37e069188911a7bbb0d014", "url": "https://github.com/triplea-game/triplea/commit/659b6b78d1b708b5fd37e069188911a7bbb0d014", "message": "1660 - refactor", "committedDate": "2020-03-15T10:49:59Z", "type": "commit"}, {"oid": "d0c0d57061e19ddc8ee05b0b68ad8b77cb6e0f0b", "url": "https://github.com/triplea-game/triplea/commit/d0c0d57061e19ddc8ee05b0b68ad8b77cb6e0f0b", "message": "1660 - fix style warnings", "committedDate": "2020-03-15T11:33:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0NzQ4NQ==", "url": "https://github.com/triplea-game/triplea/pull/6053#discussion_r396047485", "bodyText": "Not for this PR, but for consideration as follow up perhaps - any considerations to make this data structure an object, or parts of it an object?", "author": "DanVanAtta", "createdAt": "2020-03-22T02:24:26Z", "path": "game-core/src/main/java/games/strategy/engine/stats/Statistics.java", "diffHunk": "@@ -12,8 +13,6 @@\n  */\n @Value\n public class Statistics {\n-  private final Table<String, Round, Double> productionOfPlayerInRound = HashBasedTable.create();\n-  private final Table<String, Round, Double> tuvOfPlayerInRound = HashBasedTable.create();\n-  private final Table<String, Round, Double> unitsOfPlayerInRound = HashBasedTable.create();\n-  private final Table<String, Round, Double> victoryCitiesOfPlayerInRound = HashBasedTable.create();\n+  private final Map<OverTimeStatisticType, Table<String, Round, Double>> overTimeStatistics =", "originalCommit": "d0c0d57061e19ddc8ee05b0b68ad8b77cb6e0f0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEwMDYwMA==", "url": "https://github.com/triplea-game/triplea/pull/6053#discussion_r396100600", "bodyText": "What do you mean by \"make it an object\"?\nThe plan is, that this data structure will be a container also for other types of statistics. Like\n\nan ordered list of battles with most units\nan ordered list of territories with most battles over the game\n\u2026", "author": "lenzls", "createdAt": "2020-03-22T14:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0NzQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyNjk4MA==", "url": "https://github.com/triplea-game/triplea/pull/6053#discussion_r396126980", "bodyText": "Essentially replace usages of this data type:  Map<OverTimeStatisticType, Table<String, Round, Double>>, with an object, eg: OverTimeStatistics\nOverTimeStatistics would itself contain the data structure   Map<OverTimeStatisticType, Table<String, Round, Double>> and would encapsulate all access to it. The holder object, beyond encapsulating the underlying data, could provide a nicer API compared to direct usage of the Map. It can go on to possibly make testing easier as you don't have to rely on an internal data structure nor mock objects of a more complicated API, instead can mock the one holder object that should have a stable API. In turn you can test the holder object in isolation.", "author": "DanVanAtta", "createdAt": "2020-03-22T18:41:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0NzQ4NQ=="}], "type": "inlineReview"}]}