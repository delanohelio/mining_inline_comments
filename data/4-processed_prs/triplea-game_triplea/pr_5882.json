{"pr_number": 5882, "pr_title": "Make MapData control lifecycle of resource loader and remove close method", "pr_createdAt": "2020-01-26T04:48:06Z", "pr_url": "https://github.com/triplea-game/triplea/pull/5882", "timeline": [{"oid": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "url": "https://github.com/triplea-game/triplea/commit/0e181e2ab98fee2373444ae2ca2012c4c9180692", "message": "Make MapData controll lifecycle of resource loader and remove close method.\n\nUpdates MapData to always instantiate a resource loader itself and to close\nit when construction is done. This ensures that the resource loader is closed\nand removes the burden of other classes from having to remember to call\nclose on map data.", "committedDate": "2020-01-26T04:41:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzM5OA==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370973398", "bodyText": "These three methods are moved, no updates to them.", "author": "DanVanAtta", "createdAt": "2020-01-26T04:50:27Z", "path": "game-core/src/main/java/games/strategy/triplea/ResourceLoader.java", "diffHunk": "@@ -276,4 +281,31 @@ public boolean hasPath(final String path) {\n     return UrlStreams.openStream(url)\n         .orElseThrow(() -> new IllegalStateException(\"Failed to open an input stream to: \" + path));\n   }\n+", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzQwNQ==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370973405", "bodyText": "Removing this kind of call to close() is the main impetus for this update.", "author": "DanVanAtta", "createdAt": "2020-01-26T04:50:48Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/HeadedUiContext.java", "diffHunk": "@@ -57,10 +57,7 @@\n   @Override\n   protected void internalSetMapDir(final String dir, final GameData data) {\n     resourceLoader = ResourceLoader.getMapResourceLoader(dir);\n-    if (mapData != null) {\n-      mapData.close();", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxMjA5OQ==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371312099", "bodyText": "Hmm I think we still have the initial Problem, but on a higher level.\nPreviously the code did call mapData.close() whenever internalSetMapDir is executed in order to close the underlying resourceloader that might still exist.\nNow MapData is fine, but in case this method is run twice (or more), we have n - 1 unclosed instances of ResourceLoader lying around, so it looks like this code needs to come back, I'm afraid :(", "author": "RoiEXLab", "createdAt": "2020-01-27T15:36:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM0MzMzNw==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371343337", "bodyText": "I agree to the issue you raised. The code that seemingly needs to come back it seems is a check for the previous resource loader and to close that. The resource loader is passed around a lot and references are kept to it. If we can avoid those references from being stored, we could safely close resourceLoader at the end of the internalSetMapDir method, which would long-term be more ideal IMHO.", "author": "DanVanAtta", "createdAt": "2020-01-27T16:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzQwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzQ1Mg==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370973452", "bodyText": "These 4 images were loaded when called, leveraging the fact that MapData had a reference to a resourceLoader. With the resourceLoader reference available now only on construction, we now load these images in the constructor.", "author": "DanVanAtta", "createdAt": "2020-01-26T04:51:36Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/mapdata/MapData.java", "diffHunk": "@@ -127,14 +122,16 @@\n   private final Map<Image, List<Point>> decorations = new HashMap<>();\n   private final Map<String, Image> territoryNameImages = new HashMap<>();\n   private final Map<String, Image> effectImages = new HashMap<>();\n-  private final ResourceLoader resourceLoader;\n \n-  public MapData(final String mapNameDir) {\n-    this(ResourceLoader.getMapResourceLoader(mapNameDir));\n-  }\n+  @Nullable private final Image vcImage;\n+  @Nullable private final Image blockadeImage;\n+  @Nullable private final Image errorImage;\n+  @Nullable private final Image warningImage;", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzUwMg==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370973502", "bodyText": "The updates to this method are a simplification:\n\nWe chain the if( img.isEmpty() )  check to the optional with an 'or' check\nRemove exception handling, none of the wrapped code (please double check) throws.", "author": "DanVanAtta", "createdAt": "2020-01-26T04:52:55Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/mapdata/MapData.java", "diffHunk": "@@ -224,52 +216,42 @@ public boolean scrollWrapY() {\n     return Boolean.parseBoolean(mapProperties.getProperty(PROPERTY_MAP_SCROLLWRAPY, \"false\"));\n   }\n \n-  @Override\n-  public void close() {\n-    resourceLoader.close();\n-  }\n-\n-  private Map<String, Image> territoryNameImages() {\n+  private Map<String, Image> territoryNameImages(final ResourceLoader resourceLoader) {\n     if (!resourceLoader.hasPath(\"territoryNames/\")) {\n       return new HashMap<>();\n     }\n \n     final Map<String, Image> territoryNameImages = new HashMap<>();\n     for (final String name : centers.keySet()) {\n-      final Optional<Image> territoryNameImage = loadTerritoryNameImage(name);\n+      final Optional<Image> territoryNameImage = loadTerritoryNameImage(resourceLoader, name);\n \n       territoryNameImage.ifPresent(image -> territoryNameImages.put(name, image));\n     }\n     return territoryNameImages;\n   }\n \n-  private Optional<Image> loadTerritoryNameImage(final String imageName) {", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0MTEyMg==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371041122", "bodyText": "Not sure about the exception part.\nloadImage explicitly rethrows an exception when there's an IOException thrown.\nBecause we have a URL-null check before, this shoudl happen rarely, but in case the image file has an unsupported format or something, this method would throw an exception.", "author": "RoiEXLab", "createdAt": "2020-01-27T00:45:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0MjU3NA==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371042574", "bodyText": "I believe you're right. I added the previous logging to 'loadImage': 8340c97", "author": "DanVanAtta", "createdAt": "2020-01-27T01:08:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzUwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzUxMA==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370973510", "bodyText": "loadImage is simply moved.", "author": "DanVanAtta", "createdAt": "2020-01-26T04:53:12Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/mapdata/MapData.java", "diffHunk": "@@ -765,34 +747,20 @@ private Rectangle getBoundingRectWithTranslate(\n   }\n \n   public Optional<Image> getVcImage() {\n-    return loadImage(\"misc/vc.png\");\n+\n+    return Optional.ofNullable(vcImage);\n   }\n \n   public Optional<Image> getBlockadeImage() {\n-    return loadImage(\"misc/blockade.png\");\n+    return Optional.ofNullable(blockadeImage);\n   }\n \n   public Optional<Image> getErrorImage() {\n-    return loadImage(\"misc/error.gif\");\n+    return Optional.of(errorImage);\n   }\n \n   public Optional<Image> getWarningImage() {\n-    return loadImage(\"misc/warning.gif\");\n-  }\n-\n-  private Optional<Image> loadImage(final String imageName) {", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzU1NA==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370973554", "bodyText": "This method looks up territory effects at runtime. It's not clear if we could load them all in construction very easily in case a map would add territory effects as some sort of trigger. Hence we need to instantiate a resource loader here to support dynamic lookup of territory effects. Not ideal, but a trade-off..", "author": "DanVanAtta", "createdAt": "2020-01-26T04:54:26Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/mapdata/MapData.java", "diffHunk": "@@ -811,15 +779,18 @@ private Rectangle getBoundingRectWithTranslate(\n   }\n \n   public Optional<Image> getTerritoryEffectImage(final String effectName) {\n-    // TODO: what does this cache buy us? should we still keep it?\n-    if (effectImages.get(effectName) != null) {\n-      return Optional.of(effectImages.get(effectName));\n-    }\n-    Optional<Image> effectImage = loadImage(\"territoryEffects/\" + effectName + \"_large.png\");\n-    if (effectImage.isEmpty()) {\n-      effectImage = loadImage(\"territoryEffects/\" + effectName + \".png\");\n+    try (ResourceLoader loader = ResourceLoader.getMapResourceLoader(mapNameDir)) {", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzU3NQ==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370973575", "bodyText": "This catch block would never have been triggered from new MapData to begin with, and is removed.", "author": "DanVanAtta", "createdAt": "2020-01-26T04:55:23Z", "path": "game-core/src/main/java/tools/image/AutoPlacementFinder.java", "diffHunk": "@@ -260,56 +260,44 @@ private void calculate() {\n     }\n \n     // makes TripleA read all the text data files for the map.\n-    try (MapData mapData = new MapData(mapDir)) {\n-      textOptionPane.show();\n-      textOptionPane.appendNewLine(\n-          \"Place Dimensions in pixels, being used: \" + placeWidth + \"x\" + placeHeight + \"\\r\\n\");\n-      textOptionPane.appendNewLine(\"Calculating, this may take a while...\\r\\n\");\n-      final Map<String, List<Point>> placements = new HashMap<>();\n-      for (final String name : mapData.getTerritories()) {\n-        final Set<Polygon> containedPolygons = mapData.getContainedTerritoryPolygons(name);\n-        final List<Point> points =\n-            containedPolygons.isEmpty()\n-                ? getPlacementsStartingAtMiddle(\n-                    mapData.getPolygons(name),\n-                    mapData.getBoundingRect(name),\n-                    mapData.getCenter(name))\n-                : getPlacementsStartingAtTopLeft(\n-                    mapData.getPolygons(name),\n-                    mapData.getBoundingRect(name),\n-                    mapData.getCenter(name),\n-                    containedPolygons);\n-        placements.put(name, points);\n-        textOptionPane.appendNewLine(name + \": \" + points.size());\n-      }\n-      textOptionPane.appendNewLine(\"\\r\\nAll Finished!\");\n-      textOptionPane.countDown();\n-      final String fileName =\n-          new FileSave(\"Where To Save place.txt ?\", \"place.txt\", mapFolderLocation).getPathString();\n-      if (fileName == null) {\n-        textOptionPane.appendNewLine(\"You chose not to save, Shutting down\");\n-        textOptionPane.dispose();\n-        return;\n-      }\n-      try (OutputStream os = new FileOutputStream(fileName)) {\n-        PointFileReaderWriter.writeOneToMany(os, placements);\n-        textOptionPane.appendNewLine(\"Data written to :\" + new File(fileName).getCanonicalPath());\n-      } catch (final IOException e) {\n-        log.log(Level.SEVERE, \"Failed to write points file: \" + fileName, e);\n-        textOptionPane.dispose();\n-        return;\n-      }\n+    MapData mapData = new MapData(mapDir);\n+    textOptionPane.show();\n+    textOptionPane.appendNewLine(\n+        \"Place Dimensions in pixels, being used: \" + placeWidth + \"x\" + placeHeight + \"\\r\\n\");\n+    textOptionPane.appendNewLine(\"Calculating, this may take a while...\\r\\n\");\n+    final Map<String, List<Point>> placements = new HashMap<>();\n+    for (final String name : mapData.getTerritories()) {\n+      final Set<Polygon> containedPolygons = mapData.getContainedTerritoryPolygons(name);\n+      final List<Point> points =\n+          containedPolygons.isEmpty()\n+              ? getPlacementsStartingAtMiddle(\n+                  mapData.getPolygons(name), mapData.getBoundingRect(name), mapData.getCenter(name))\n+              : getPlacementsStartingAtTopLeft(\n+                  mapData.getPolygons(name),\n+                  mapData.getBoundingRect(name),\n+                  mapData.getCenter(name),\n+                  containedPolygons);\n+      placements.put(name, points);\n+      textOptionPane.appendNewLine(name + \": \" + points.size());\n+    }\n+    textOptionPane.appendNewLine(\"\\r\\nAll Finished!\");\n+    textOptionPane.countDown();\n+    final String fileName =\n+        new FileSave(\"Where To Save place.txt ?\", \"place.txt\", mapFolderLocation).getPathString();\n+    if (fileName == null) {\n+      textOptionPane.appendNewLine(\"You chose not to save, Shutting down\");\n       textOptionPane.dispose();\n-    } catch (final Exception e) {", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0MTU1NA==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371041554", "bodyText": "Not sure about that either.\nThis catches any potential RuntimeExceptions as well and loadImage does still explicitly throw one, so the constructor could definitely throw an exception that could land here.", "author": "RoiEXLab", "createdAt": "2020-01-27T00:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0Mjk0NQ==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371042945", "bodyText": "I'm less sure now as well. Though, looking at the error handling, we would have shown a user 4 pop-ups, and none of which were very specific.\nConsidering this is in the map-making tools, I think letting it throw is probably okay.  @RoiEXLab WDYT?", "author": "DanVanAtta", "createdAt": "2020-01-27T01:13:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MzU3NQ=="}], "type": "inlineReview"}, {"oid": "a92ba18b532b30150b82140213e1489eb40bff1f", "url": "https://github.com/triplea-game/triplea/commit/a92ba18b532b30150b82140213e1489eb40bff1f", "message": "Make mapData final and move closer to usage", "committedDate": "2020-01-26T23:46:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MDY0Mw==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370990643", "bodyText": "This should be ofNullable, right?", "author": "RoiEXLab", "createdAt": "2020-01-26T11:12:20Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/mapdata/MapData.java", "diffHunk": "@@ -765,34 +747,20 @@ private Rectangle getBoundingRectWithTranslate(\n   }\n \n   public Optional<Image> getVcImage() {\n-    return loadImage(\"misc/vc.png\");\n+\n+    return Optional.ofNullable(vcImage);\n   }\n \n   public Optional<Image> getBlockadeImage() {\n-    return loadImage(\"misc/blockade.png\");\n+    return Optional.ofNullable(blockadeImage);\n   }\n \n   public Optional<Image> getErrorImage() {\n-    return loadImage(\"misc/error.gif\");\n+    return Optional.of(errorImage);", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0MjY3OQ==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371042679", "bodyText": "Yes. Initially I was debating whether to honor that previous contract as these are images shipped with the game engine. Regardless, updated: 0750229", "author": "DanVanAtta", "createdAt": "2020-01-27T01:09:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MDY0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MDY4MA==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370990680", "bodyText": "Same here, ofNullable", "author": "RoiEXLab", "createdAt": "2020-01-26T11:13:05Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/mapdata/MapData.java", "diffHunk": "@@ -765,34 +747,20 @@ private Rectangle getBoundingRectWithTranslate(\n   }\n \n   public Optional<Image> getVcImage() {\n-    return loadImage(\"misc/vc.png\");\n+\n+    return Optional.ofNullable(vcImage);\n   }\n \n   public Optional<Image> getBlockadeImage() {\n-    return loadImage(\"misc/blockade.png\");\n+    return Optional.ofNullable(blockadeImage);\n   }\n \n   public Optional<Image> getErrorImage() {\n-    return loadImage(\"misc/error.gif\");\n+    return Optional.of(errorImage);\n   }\n \n   public Optional<Image> getWarningImage() {\n-    return loadImage(\"misc/warning.gif\");\n-  }\n-\n-  private Optional<Image> loadImage(final String imageName) {\n-    final URL url = resourceLoader.getResource(imageName);\n-    if (url == null) {\n-      // this is actually pretty common that we try to read images that are not there. Let the\n-      // caller\n-      // decide if this is an error or not.\n-      return Optional.empty();\n-    }\n-    try {\n-      return Optional.of(ImageIO.read(url));\n-    } catch (final IOException e) {\n-      throw new IllegalStateException(e);\n-    }\n+    return Optional.of(warningImage);", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0MjY4OQ==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371042689", "bodyText": "0750229", "author": "DanVanAtta", "createdAt": "2020-01-27T01:09:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MDY4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MDkwNw==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370990907", "bodyText": "Is this resource loader closed at some point now?", "author": "RoiEXLab", "createdAt": "2020-01-26T11:17:13Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/HeadedUiContext.java", "diffHunk": "@@ -57,10 +57,7 @@\n   @Override\n   protected void internalSetMapDir(final String dir, final GameData data) {\n     resourceLoader = ResourceLoader.getMapResourceLoader(dir);", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0MjMwNg==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371042306", "bodyText": "Looks like it used to be in shutdown and indirectly via closing MapData. That was very indirect, I missed that nuance (also a complete violation of encapsulation..)\nGood call-out/catch, added an explicit close to the shutdown method: 87e8c7e", "author": "DanVanAtta", "createdAt": "2020-01-27T01:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MDkwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MDk5Ng==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370990996", "bodyText": "Thoughts about using a try-with-resources here? Feels a little bit safer in case an exception is raised somewhere", "author": "RoiEXLab", "createdAt": "2020-01-26T11:18:56Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/mapdata/MapData.java", "diffHunk": "@@ -127,14 +122,16 @@\n   private final Map<Image, List<Point>> decorations = new HashMap<>();\n   private final Map<String, Image> territoryNameImages = new HashMap<>();\n   private final Map<String, Image> effectImages = new HashMap<>();\n-  private final ResourceLoader resourceLoader;\n \n-  public MapData(final String mapNameDir) {\n-    this(ResourceLoader.getMapResourceLoader(mapNameDir));\n-  }\n+  @Nullable private final Image vcImage;\n+  @Nullable private final Image blockadeImage;\n+  @Nullable private final Image errorImage;\n+  @Nullable private final Image warningImage;\n+  private final String mapNameDir;\n \n-  public MapData(final ResourceLoader loader) {\n-    resourceLoader = loader;\n+  public MapData(final String mapNameDir) {\n+    this.mapNameDir = mapNameDir;\n+    final ResourceLoader loader = ResourceLoader.getMapResourceLoader(mapNameDir);", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0MjQyNQ==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371042425", "bodyText": "The nesting of try statements gets a bit nasty, not a bad idea nonetheless, added: cc36734", "author": "DanVanAtta", "createdAt": "2020-01-27T01:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MDk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MTEzMg==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r370991132", "bodyText": "Here you could use optional#or, like you did in the other method", "author": "RoiEXLab", "createdAt": "2020-01-26T11:21:43Z", "path": "game-core/src/main/java/games/strategy/triplea/ui/mapdata/MapData.java", "diffHunk": "@@ -811,15 +779,18 @@ private Rectangle getBoundingRectWithTranslate(\n   }\n \n   public Optional<Image> getTerritoryEffectImage(final String effectName) {\n-    // TODO: what does this cache buy us? should we still keep it?\n-    if (effectImages.get(effectName) != null) {\n-      return Optional.of(effectImages.get(effectName));\n-    }\n-    Optional<Image> effectImage = loadImage(\"territoryEffects/\" + effectName + \"_large.png\");\n-    if (effectImage.isEmpty()) {\n-      effectImage = loadImage(\"territoryEffects/\" + effectName + \".png\");\n+    try (ResourceLoader loader = ResourceLoader.getMapResourceLoader(mapNameDir)) {\n+      // TODO: what does this cache buy us? should we still keep it?\n+      if (effectImages.get(effectName) != null) {\n+        return Optional.of(effectImages.get(effectName));\n+      }\n+      Optional<Image> effectImage =\n+          loader.loadImage(\"territoryEffects/\" + effectName + \"_large.png\");\n+      if (effectImage.isEmpty()) {\n+        effectImage = loader.loadImage(\"territoryEffects/\" + effectName + \".png\");", "originalCommit": "0e181e2ab98fee2373444ae2ca2012c4c9180692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0MTI1NA==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371041254", "bodyText": "Thinking about this again, you could even use it twice, by prepending Optional.ofNullable(effectImages.get(effectImages)), but in this case we might end up re-inserting the element into effect images", "author": "RoiEXLab", "createdAt": "2020-01-27T00:47:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MTEzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0Mjc3MQ==", "url": "https://github.com/triplea-game/triplea/pull/5882#discussion_r371042771", "bodyText": "Good points. I wonder if I updated this further in the branch where this commit comes from. For now trying to limit the scope as this is mostly existing code.", "author": "DanVanAtta", "createdAt": "2020-01-27T01:11:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MTEzMg=="}], "type": "inlineReview"}, {"oid": "87e8c7ed8afb24a8dc3ac2e6d62d47417308da5f", "url": "https://github.com/triplea-game/triplea/commit/87e8c7ed8afb24a8dc3ac2e6d62d47417308da5f", "message": "Close resourceLoader on shutdown", "committedDate": "2020-01-27T01:02:45Z", "type": "commit"}, {"oid": "cc36734b6c71505dec7c519871e7840e1618de06", "url": "https://github.com/triplea-game/triplea/commit/cc36734b6c71505dec7c519871e7840e1618de06", "message": "Use try-with-resources block in MapData", "committedDate": "2020-01-27T01:05:19Z", "type": "commit"}, {"oid": "8340c9776d3bbc1a332e65867d4e696dbf708328", "url": "https://github.com/triplea-game/triplea/commit/8340c9776d3bbc1a332e65867d4e696dbf708328", "message": "Move image loading logging to \"loadImage\"", "committedDate": "2020-01-27T01:07:11Z", "type": "commit"}, {"oid": "07502296e5bc296cd65545a3152ad2ceae355414", "url": "https://github.com/triplea-game/triplea/commit/07502296e5bc296cd65545a3152ad2ceae355414", "message": "Use ofNullable instead of when loading error/warning images", "committedDate": "2020-01-27T01:08:43Z", "type": "commit"}, {"oid": "b060f844dc29c34fd6f8d4c1550233c23e10da46", "url": "https://github.com/triplea-game/triplea/commit/b060f844dc29c34fd6f8d4c1550233c23e10da46", "message": "Fix line length", "committedDate": "2020-01-27T15:27:26Z", "type": "commit"}, {"oid": "cdf4766caec4668d7dee4b4696b5769cc65d6bd3", "url": "https://github.com/triplea-game/triplea/commit/cdf4766caec4668d7dee4b4696b5769cc65d6bd3", "message": "Close any previous resourceLoader instance in HeadedUiContext", "committedDate": "2020-01-27T16:17:24Z", "type": "commit"}, {"oid": "8f666e147b6cbcd4edacc4a146aa6516119d5faf", "url": "https://github.com/triplea-game/triplea/commit/8f666e147b6cbcd4edacc4a146aa6516119d5faf", "message": "Auto-Formatting", "committedDate": "2020-01-27T16:19:55Z", "type": "commit"}]}