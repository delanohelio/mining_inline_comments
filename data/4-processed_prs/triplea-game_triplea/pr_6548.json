{"pr_number": 6548, "pr_title": "Fix link checker", "pr_createdAt": "2020-05-30T23:44:09Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6548", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAxNDU0Ng==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433014546", "bodyText": "I think positive confirmation would be helpful to know what we are checking and are seeing. I'd also recommend we try and keep it simple. Perhaps there is no need to even check the HTTP type, just status code and the optional last word.\nWDYT of something like this?\n  echo -n \"$uri -- \"  \n  local -r curlResult=$(curl -s --head \"$uri\" | head -n 1)\n  echo \"$curlResult\"\n  echo \"$curlResult\" | grep -qE \"200( OK)?|302( Found)?\" \\\n    || reportBrokenUri \"$uri\"", "author": "DanVanAtta", "createdAt": "2020-06-01T02:08:29Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -15,7 +15,7 @@ fi\n \n function checkUri() {\n   local -r uri=\"$1\"\n-  curl -s --head \"$uri\" | head -n 1  | grep -qE  \"HTTP/2 200|(200|302) (OK|Found)\" \\\n+  curl -s --head \"$uri\" | head -n 1  | grep -qE \"HTTP/(2 200|1.1 (200 OK|302 Found))\" \\\n     || reportBrokenUri \"$uri\"", "originalCommit": "1d353a503f3d4f1850900983df12642fb4c9e32c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2aa47bfb2c9632cd9a360600f5fb445f007e74d9", "url": "https://github.com/triplea-game/triplea/commit/2aa47bfb2c9632cd9a360600f5fb445f007e74d9", "message": "Fix link checker", "committedDate": "2020-06-01T16:56:57Z", "type": "commit"}, {"oid": "f1d399358824df2e091d9e8d2ae783f64e45a5d5", "url": "https://github.com/triplea-game/triplea/commit/f1d399358824df2e091d9e8d2ae783f64e45a5d5", "message": "Add fallback mechanism", "committedDate": "2020-06-01T16:56:57Z", "type": "commit"}, {"oid": "b7325c668e90ff556401376c6b20e4292b253a4f", "url": "https://github.com/triplea-game/triplea/commit/b7325c668e90ff556401376c6b20e4292b253a4f", "message": "Make RegEx more accurate", "committedDate": "2020-06-01T16:56:57Z", "type": "commit"}, {"oid": "7a9b497e0471b11a9dbeead91beb0302e20b071e", "url": "https://github.com/triplea-game/triplea/commit/7a9b497e0471b11a9dbeead91beb0302e20b071e", "message": "Make OK keyword optional", "committedDate": "2020-06-01T16:56:57Z", "type": "commit"}, {"oid": "5faba71158c32d8d1d38edc433a79cfea7518784", "url": "https://github.com/triplea-game/triplea/commit/5faba71158c32d8d1d38edc433a79cfea7518784", "message": "Clarify format differences", "committedDate": "2020-06-01T16:56:57Z", "type": "commit"}, {"oid": "786fc5094f07565d046e30551ac539c2279de7cb", "url": "https://github.com/triplea-game/triplea/commit/786fc5094f07565d046e30551ac539c2279de7cb", "message": "Use cURL mechanics to make script more robust", "committedDate": "2020-06-01T16:56:57Z", "type": "commit"}, {"oid": "098db2126d41f4aa1c50ea1b9ec0f02a9233a4e8", "url": "https://github.com/triplea-game/triplea/commit/098db2126d41f4aa1c50ea1b9ec0f02a9233a4e8", "message": "Different formatting", "committedDate": "2020-06-01T16:56:57Z", "type": "commit"}, {"oid": "371eb35d5b5f720dcc59226a01557658d9f5e5df", "url": "https://github.com/triplea-game/triplea/commit/371eb35d5b5f720dcc59226a01557658d9f5e5df", "message": "Add ignore mechanism", "committedDate": "2020-06-01T16:56:57Z", "type": "commit"}, {"oid": "371eb35d5b5f720dcc59226a01557658d9f5e5df", "url": "https://github.com/triplea-game/triplea/commit/371eb35d5b5f720dcc59226a01557658d9f5e5df", "message": "Add ignore mechanism", "committedDate": "2020-06-01T16:56:57Z", "type": "forcePushed"}, {"oid": "4a1155857fcab5f9e7511182c0dfa2d2e9c3e100", "url": "https://github.com/triplea-game/triplea/commit/4a1155857fcab5f9e7511182c0dfa2d2e9c3e100", "message": "Ignore A&A Forum", "committedDate": "2020-06-01T17:21:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4MDExNA==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433380114", "bodyText": "Interesting: If IGNORE_LIST is empty, this line throws an error on bash 4.3 and prior.\nFrom the changelog:\n\na.  Using ${a[@]} or ${a[*]} with an array without any assigned elements when\nthe nounset option is enabled no longer throws an unbound variable error.\n\nWhich is the reason this build failed: https://travis-ci.com/github/triplea-game/triplea/jobs/342279779", "author": "RoiEXLab", "createdAt": "2020-06-01T17:29:06Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -15,28 +17,31 @@ fi\n \n function checkUri() {\n   local -r uri=\"$1\"\n-  \n-  local -r curlResult=$(curl -s --head \"$uri\" | head -n 1)\n-  echo \"$uri -- $curlResult\"  \n-  # Temporarily disabled. We're unable to connect to A&A.org from Travis.\n-\n-  # echo $curlResult |  grep -qE  \"HTTP/2 200|(200|302) (OK|Found)\" \\\n-  #  || reportBrokenUri \"$uri\"\n+  local output\n+  if ! output=\"$FAILURE_PREFIX$(curl -Lsf -o /dev/null -w \"%{http_code}\" \"$uri\")\"; then\n+    reportBrokenUri \"$uri\" \"$output\"\n+    FAILURE=1\n+  fi\n }\n \n function reportBrokenUri() {\n-  FAILURE=1 \n   local -r red=\"\\e[38;5;196m\"\n   local -r blue=\"\\e[38;5;75m\"\n-  echo -en \"Error: ${red}$uri${end} ${blue}\"\n-  curl -s --head \"$uri\" | head -n 1 | sed 's|HTTP/[12][.01]?||'\n-  echo -en \"${end}\"\n+  local -r error_reason=${2//${FAILURE_PREFIX}000/Connection Failure!}\n+  echo -e \"Error: ${red}${1}${end} ${blue}${error_reason}${end}\"\n+}\n+\n+function checkIsOnIgnoreList() {\n+  for ignored_uri in \"${IGNORE_LIST[@]}\"; do", "originalCommit": "4a1155857fcab5f9e7511182c0dfa2d2e9c3e100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4MjA0MQ==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433382041", "bodyText": "What surprised me here is that $uri is not actually the parameter passed to this function, (which was unused before my change), but instead the global variable that is defined below at while read -r uri; do.\nI tried limiting the scope of this loop, but without success, so $uri could still  be used here.\nI wonder if it's better to use the global uri everywhere, or just ignore it an pass it everywhere explicitly \ud83e\udd14", "author": "RoiEXLab", "createdAt": "2020-06-01T17:32:37Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -15,28 +17,31 @@ fi\n \n function checkUri() {\n   local -r uri=\"$1\"\n-  \n-  local -r curlResult=$(curl -s --head \"$uri\" | head -n 1)\n-  echo \"$uri -- $curlResult\"  \n-  # Temporarily disabled. We're unable to connect to A&A.org from Travis.\n-\n-  # echo $curlResult |  grep -qE  \"HTTP/2 200|(200|302) (OK|Found)\" \\\n-  #  || reportBrokenUri \"$uri\"\n+  local output\n+  if ! output=\"$FAILURE_PREFIX$(curl -Lsf -o /dev/null -w \"%{http_code}\" \"$uri\")\"; then\n+    reportBrokenUri \"$uri\" \"$output\"\n+    FAILURE=1\n+  fi\n }\n \n function reportBrokenUri() {\n-  FAILURE=1 \n   local -r red=\"\\e[38;5;196m\"\n   local -r blue=\"\\e[38;5;75m\"\n-  echo -en \"Error: ${red}$uri${end} ${blue}\"\n-  curl -s --head \"$uri\" | head -n 1 | sed 's|HTTP/[12][.01]?||'", "originalCommit": "4a1155857fcab5f9e7511182c0dfa2d2e9c3e100", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1NzU1OQ==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433557559", "bodyText": "Fortunate bug, I think it was probably intended to assign it to a local function variable and then use that variable. The variables name happened to match so it worked \ud83d\ude1e", "author": "DanVanAtta", "createdAt": "2020-06-02T00:28:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4MjA0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4MjU1Nw==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433382557", "bodyText": "This replacement expression replaces Failed With Code: 000 with Connection Failure, which would be printed otherwise if curl was unable to reach the server at all", "author": "RoiEXLab", "createdAt": "2020-06-01T17:33:31Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -15,28 +17,31 @@ fi\n \n function checkUri() {\n   local -r uri=\"$1\"\n-  \n-  local -r curlResult=$(curl -s --head \"$uri\" | head -n 1)\n-  echo \"$uri -- $curlResult\"  \n-  # Temporarily disabled. We're unable to connect to A&A.org from Travis.\n-\n-  # echo $curlResult |  grep -qE  \"HTTP/2 200|(200|302) (OK|Found)\" \\\n-  #  || reportBrokenUri \"$uri\"\n+  local output\n+  if ! output=\"$FAILURE_PREFIX$(curl -Lsf -o /dev/null -w \"%{http_code}\" \"$uri\")\"; then\n+    reportBrokenUri \"$uri\" \"$output\"\n+    FAILURE=1\n+  fi\n }\n \n function reportBrokenUri() {\n-  FAILURE=1 \n   local -r red=\"\\e[38;5;196m\"\n   local -r blue=\"\\e[38;5;75m\"\n-  echo -en \"Error: ${red}$uri${end} ${blue}\"\n-  curl -s --head \"$uri\" | head -n 1 | sed 's|HTTP/[12][.01]?||'\n-  echo -en \"${end}\"\n+  local -r error_reason=${2//${FAILURE_PREFIX}000/Connection Failure!}", "originalCommit": "4a1155857fcab5f9e7511182c0dfa2d2e9c3e100", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1ODQzOQ==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433558439", "bodyText": "I'd recommend, if possible, replacing the '000' with 'Connection Failure' and then prefixing the 'Failed with Code' otherwise. Matching this much of a string seems indirect to me. I also think some commentary in-script would go quite a long way to explain that.", "author": "DanVanAtta", "createdAt": "2020-06-02T00:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4MjU1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI2NzIyOA==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r436267228", "bodyText": "I thought this way round is pretty convenient from a code perspective because it avoids the need for an else clause, but I think I can write something self-explanatory there", "author": "RoiEXLab", "createdAt": "2020-06-06T12:59:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4MjU1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4NjI5MQ==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433386291", "bodyText": "I think this is a lot more robust than the code we had before.\nThe command prints the actual HTTP status code purely for logging purposes.\n-L makes sure to follow redirects.\n-f makes curl return with non-zero exit codes in case the status code is 4xx or 5xx or something like that, whatever it considers to be an error\n-o /dev/null just redirects the HTTP body i.e. the HTML to void so it won't land in stdout\n-w \"%{http_code}\" makes curl print the status code in stdout if it exists, or \"000\" otherwise", "author": "RoiEXLab", "createdAt": "2020-06-01T17:40:36Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -15,28 +17,31 @@ fi\n \n function checkUri() {\n   local -r uri=\"$1\"\n-  \n-  local -r curlResult=$(curl -s --head \"$uri\" | head -n 1)\n-  echo \"$uri -- $curlResult\"  \n-  # Temporarily disabled. We're unable to connect to A&A.org from Travis.\n-\n-  # echo $curlResult |  grep -qE  \"HTTP/2 200|(200|302) (OK|Found)\" \\\n-  #  || reportBrokenUri \"$uri\"\n+  local output\n+  if ! output=\"$FAILURE_PREFIX$(curl -Lsf -o /dev/null -w \"%{http_code}\" \"$uri\")\"; then", "originalCommit": "4a1155857fcab5f9e7511182c0dfa2d2e9c3e100", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1Njk4Mw==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433556983", "bodyText": "-f and -w are really good flags, good work \ud83d\udc4d\nI think a good chunk of this comment probably needs to land in the code so that this reasoning/logic explanation can be carried forward.", "author": "DanVanAtta", "createdAt": "2020-06-02T00:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4NjI5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1NzI1Ng==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433557256", "bodyText": "Minor (consider fix if feasible): I also wonder if breaking up the assignment and status code check could potentially make things simpler, it seems we are quite overloaded on one line. Would it look gnarly to break it up to multiple lines?", "author": "DanVanAtta", "createdAt": "2020-06-02T00:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4NjI5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI2Njc5MQ==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r436266791", "bodyText": "The primary reason I made it like this is because shellheck suggested it.\nI see your point but I'm not actually sure it would make things better tbh", "author": "RoiEXLab", "createdAt": "2020-06-06T12:52:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4NjI5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1Nzg3Ng==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r433557876", "bodyText": "Would really love more insight about why A&A.org is failing from travis, have you been able to do any more research/investigation into this? Having a full status code and perhaps full output from curl, if not manually done, then printed by the script would seem helpful.\nIt's hard to know if the previous failure message was accurate and was not masking something a bit more benign.", "author": "DanVanAtta", "createdAt": "2020-06-02T00:29:36Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -5,6 +5,8 @@ set -eu\n URI_FILE=$(find . -type f -path \"*/src/main/java/*\" -name \"UrlConstants.java\")\n green=\"\\e[32m\"\n end=\"\\e[0m\"\n+FAILURE_PREFIX=\"Failed with Code: \"\n+IGNORE_LIST=(\"https://www.axisandallies.org/forums\")", "originalCommit": "4a1155857fcab5f9e7511182c0dfa2d2e9c3e100", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI2NjczNQ==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r436266735", "bodyText": "No Idea, I haven't been able to reach @djensen47 via GitHub.\nMy best guess atm is that the builds might exceeded some sort of threshold to we get blocked at a firewall level", "author": "RoiEXLab", "createdAt": "2020-06-06T12:51:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1Nzg3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NjEzNg==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r436296136", "bodyText": "A comment in the code with an issue reference would be good documentation and something for someone to check if there is ever follow-up on this.\nI'm otherwise surprised the request volume was ever noticeable enough for us to run into this situation. I would think the build verification check, being one-time, would have been a pittance compared to a single user browsing A&A.org", "author": "DanVanAtta", "createdAt": "2020-06-06T19:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1Nzg3Ng=="}], "type": "inlineReview"}, {"oid": "851a4628495c19053a0af0f1294c59cb4d234298", "url": "https://github.com/triplea-game/triplea/commit/851a4628495c19053a0af0f1294c59cb4d234298", "message": "Use ternary expression instead of replacement", "committedDate": "2020-06-06T13:06:41Z", "type": "commit"}, {"oid": "e093f03479478bff1952fe5667e2cb7bc21b4ba5", "url": "https://github.com/triplea-game/triplea/commit/e093f03479478bff1952fe5667e2cb7bc21b4ba5", "message": "Add positive return statement", "committedDate": "2020-06-06T13:11:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NjA3Nw==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r436296077", "bodyText": "Nit, the other scripts have a convention to assign parameters to variables in functions. Thus any parameter passed to a function receives a name, you see off-the-bat as well how many parameters are expected to be passed to a function. It also means that a variable like $1 is only ever referenced once in a function and that is only to assign it to another variable that then gives it a name.\nThis was undocumented, I added a note about this convention here: https://github.com/triplea-game/triplea/wiki/Shell-Script-Conventions", "author": "DanVanAtta", "createdAt": "2020-06-06T19:53:12Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -15,28 +16,37 @@ fi\n \n function checkUri() {\n   local -r uri=\"$1\"\n-  \n-  local -r curlResult=$(curl -s --head \"$uri\" | head -n 1)\n-  echo \"$uri -- $curlResult\"  \n-  # Temporarily disabled. We're unable to connect to A&A.org from Travis.\n-\n-  # echo $curlResult |  grep -qE  \"HTTP/2 200|(200|302) (OK|Found)\" \\\n-  #  || reportBrokenUri \"$uri\"\n+  local code\n+  if ! code=$(curl -Lsf -o /dev/null -w \"%{http_code}\" \"$uri\"); then\n+    reportBrokenUri \"$uri\" \"$code\"\n+    FAILURE=1\n+  else\n+    echo \"Successfully checked '$uri', returned $code\"\n+  fi\n }\n \n function reportBrokenUri() {\n-  FAILURE=1 \n   local -r red=\"\\e[38;5;196m\"\n   local -r blue=\"\\e[38;5;75m\"\n-  echo -en \"Error: ${red}$uri${end} ${blue}\"\n-  curl -s --head \"$uri\" | head -n 1 | sed 's|HTTP/[12][.01]?||'\n-  echo -en \"${end}\"\n+  local -r error_reason=$([[ $2 -ne 0 ]] && echo \"Failed with Code: $2\" || echo \"Connection Failure!\")\n+  echo -e \"Error: ${red}${1}${end} ${blue}${error_reason}${end}\"\n+}\n+\n+function checkIsOnIgnoreList() {\n+  for ignored_uri in \"${IGNORE_LIST[@]}\"; do\n+    if [[ \"$1\" = \"$ignored_uri\" ]]", "originalCommit": "e093f03479478bff1952fe5667e2cb7bc21b4ba5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NjE0OA==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r436296148", "bodyText": "\ud83d\udc4d", "author": "DanVanAtta", "createdAt": "2020-06-06T19:54:43Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -15,28 +16,37 @@ fi\n \n function checkUri() {\n   local -r uri=\"$1\"\n-  \n-  local -r curlResult=$(curl -s --head \"$uri\" | head -n 1)\n-  echo \"$uri -- $curlResult\"  \n-  # Temporarily disabled. We're unable to connect to A&A.org from Travis.\n-\n-  # echo $curlResult |  grep -qE  \"HTTP/2 200|(200|302) (OK|Found)\" \\\n-  #  || reportBrokenUri \"$uri\"\n+  local code\n+  if ! code=$(curl -Lsf -o /dev/null -w \"%{http_code}\" \"$uri\"); then\n+    reportBrokenUri \"$uri\" \"$code\"\n+    FAILURE=1\n+  else\n+    echo \"Successfully checked '$uri', returned $code\"", "originalCommit": "e093f03479478bff1952fe5667e2cb7bc21b4ba5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NjE1OA==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r436296158", "bodyText": "\ud83d\udc4d", "author": "DanVanAtta", "createdAt": "2020-06-06T19:54:51Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -15,28 +16,37 @@ fi\n \n function checkUri() {\n   local -r uri=\"$1\"\n-  \n-  local -r curlResult=$(curl -s --head \"$uri\" | head -n 1)\n-  echo \"$uri -- $curlResult\"  \n-  # Temporarily disabled. We're unable to connect to A&A.org from Travis.\n-\n-  # echo $curlResult |  grep -qE  \"HTTP/2 200|(200|302) (OK|Found)\" \\\n-  #  || reportBrokenUri \"$uri\"\n+  local code\n+  if ! code=$(curl -Lsf -o /dev/null -w \"%{http_code}\" \"$uri\"); then\n+    reportBrokenUri \"$uri\" \"$code\"\n+    FAILURE=1\n+  else\n+    echo \"Successfully checked '$uri', returned $code\"\n+  fi\n }\n \n function reportBrokenUri() {\n-  FAILURE=1 \n   local -r red=\"\\e[38;5;196m\"\n   local -r blue=\"\\e[38;5;75m\"\n-  echo -en \"Error: ${red}$uri${end} ${blue}\"\n-  curl -s --head \"$uri\" | head -n 1 | sed 's|HTTP/[12][.01]?||'\n-  echo -en \"${end}\"\n+  local -r error_reason=$([[ $2 -ne 0 ]] && echo \"Failed with Code: $2\" || echo \"Connection Failure!\")\n+  echo -e \"Error: ${red}${1}${end} ${blue}${error_reason}${end}\"\n+}\n+\n+function checkIsOnIgnoreList() {\n+  for ignored_uri in \"${IGNORE_LIST[@]}\"; do\n+    if [[ \"$1\" = \"$ignored_uri\" ]]\n+    then\n+      echo \"Ignoring '$1'\"\n+      return 0\n+    fi\n+  done\n+  return 1\n }\n \n FAILURE=0\n \n while read -r uri; do\n-  checkUri \"$uri\";\n+  checkIsOnIgnoreList \"$uri\" || checkUri \"$uri\"", "originalCommit": "e093f03479478bff1952fe5667e2cb7bc21b4ba5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NjE2Mw==", "url": "https://github.com/triplea-game/triplea/pull/6548#discussion_r436296163", "bodyText": "\ud83d\udc4d", "author": "DanVanAtta", "createdAt": "2020-06-06T19:54:57Z", "path": ".travis/stages/verify/check-links-and-yaml-syntax/check-links", "diffHunk": "@@ -15,28 +16,37 @@ fi\n \n function checkUri() {\n   local -r uri=\"$1\"\n-  \n-  local -r curlResult=$(curl -s --head \"$uri\" | head -n 1)\n-  echo \"$uri -- $curlResult\"  \n-  # Temporarily disabled. We're unable to connect to A&A.org from Travis.\n-\n-  # echo $curlResult |  grep -qE  \"HTTP/2 200|(200|302) (OK|Found)\" \\\n-  #  || reportBrokenUri \"$uri\"\n+  local code\n+  if ! code=$(curl -Lsf -o /dev/null -w \"%{http_code}\" \"$uri\"); then\n+    reportBrokenUri \"$uri\" \"$code\"\n+    FAILURE=1\n+  else\n+    echo \"Successfully checked '$uri', returned $code\"\n+  fi\n }\n \n function reportBrokenUri() {\n-  FAILURE=1 \n   local -r red=\"\\e[38;5;196m\"\n   local -r blue=\"\\e[38;5;75m\"\n-  echo -en \"Error: ${red}$uri${end} ${blue}\"\n-  curl -s --head \"$uri\" | head -n 1 | sed 's|HTTP/[12][.01]?||'\n-  echo -en \"${end}\"\n+  local -r error_reason=$([[ $2 -ne 0 ]] && echo \"Failed with Code: $2\" || echo \"Connection Failure!\")\n+  echo -e \"Error: ${red}${1}${end} ${blue}${error_reason}${end}\"\n+}\n+\n+function checkIsOnIgnoreList() {\n+  for ignored_uri in \"${IGNORE_LIST[@]}\"; do\n+    if [[ \"$1\" = \"$ignored_uri\" ]]\n+    then\n+      echo \"Ignoring '$1'\"", "originalCommit": "e093f03479478bff1952fe5667e2cb7bc21b4ba5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}