{"pr_number": 6109, "pr_title": "Add Missing PBF/PBEM Help Messages", "pr_createdAt": "2020-03-29T18:29:53Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6109", "timeline": [{"oid": "8d4235c3613175b6d846d95b98dfde0791414d58", "url": "https://github.com/triplea-game/triplea/commit/8d4235c3613175b6d846d95b98dfde0791414d58", "message": "Add dice server help", "committedDate": "2020-03-29T18:28:56Z", "type": "commit"}, {"oid": "b98f7c9478a915dcf0dad58500738e1b5b7bc4e2", "url": "https://github.com/triplea-game/triplea/commit/b98f7c9478a915dcf0dad58500738e1b5b7bc4e2", "message": "Fix button sizing", "committedDate": "2020-03-29T18:38:40Z", "type": "commit"}, {"oid": "9177a62ae3353fbb61328f1c7a8a8f0902fda6ae", "url": "https://github.com/triplea-game/triplea/commit/9177a62ae3353fbb61328f1c7a8a8f0902fda6ae", "message": "Add forum poster help text", "committedDate": "2020-03-29T19:05:35Z", "type": "commit"}, {"oid": "77a40d5a190b3fa8ddfd33b712492618c62354fe", "url": "https://github.com/triplea-game/triplea/commit/77a40d5a190b3fa8ddfd33b712492618c62354fe", "message": "Add pbem help text", "committedDate": "2020-03-29T19:31:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0MjM5MQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399842391", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "author": "codeclimate", "createdAt": "2020-03-29T19:32:55Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditor.java", "diffHunk": "@@ -177,6 +187,82 @@ public void viewModelChanged(final EmailSenderEditorViewModel viewModel) {\n           toggleFieldVisibility();\n           emailProviderSelectionBox.setSelectedItem(viewModel.getSelectedProvider());\n \n+          if (viewModel.isEmailProviderDisabled()) {\n+            helpMessage.setText(\n+                \"<html>\"\n+                    + \"Email sender<br/>\"\n+                    + \"An email sender can email the turn summary and save game to multiple \"\n+                    + \"recipients at the end of each players turn. This allows two or more \"\n+                    + \"players to play a game where you don't have to be online at the same \"\n+                    + \"time.<br/>\"\n+                    + \"Each email sender may require custom configuration, to learn more \"\n+                    + \"click help again after selecting a specific email sender.\"\n+                    + \"</html>\");\n+          } else if (viewModel.isEmailProviderGmail()) {\n+            helpMessage.setText(\n+                \"<html>\"\n+                    + \"Email through Gmail<br/>\"\n+                    + \"This email sends email via Gmails SMTP service. To use this you must have a \"\n+                    + \"gmail account. Configuration:<br/>\"\n+                    + \"Subject: This will be the subject of the email. In addition to the text \"\n+                    + \"entered, the player and round number will be appended<br/>\"\n+                    + \"To: A list of email addresses separated by space. the email will be sent to \"\n+                    + \"all these users<br/>\"\n+                    + \"Login: Your gmail login used to authenticate against the gmail smtp service\"\n+                    + \"<br/>\"\n+                    + \"Password: Your gmail password used to authenticate against the gmail smtp \"\n+                    + \"service<br/>\"\n+                    + \"Note: All communication with the Gmail service uses TLS encryption. Your \"\n+                    + \"Gmail login and password are not stored as part of the save game, but they \"\n+                    + \"are stored encrypted in the local file system if you select the option to \"\n+                    + \"remember your credentials.<br/>\"\n+                    + \"You may have to enter your login and password again if you open the save \"\n+                    + \"game on another computer.\"\n+                    + \"</html>\");\n+          } else if (viewModel.isEmailProviderHotmail()) {", "originalCommit": "77a40d5a190b3fa8ddfd33b712492618c62354fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0MjM5Mg==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399842392", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "author": "codeclimate", "createdAt": "2020-03-29T19:32:56Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditor.java", "diffHunk": "@@ -177,6 +187,82 @@ public void viewModelChanged(final EmailSenderEditorViewModel viewModel) {\n           toggleFieldVisibility();\n           emailProviderSelectionBox.setSelectedItem(viewModel.getSelectedProvider());\n \n+          if (viewModel.isEmailProviderDisabled()) {\n+            helpMessage.setText(\n+                \"<html>\"\n+                    + \"Email sender<br/>\"\n+                    + \"An email sender can email the turn summary and save game to multiple \"\n+                    + \"recipients at the end of each players turn. This allows two or more \"\n+                    + \"players to play a game where you don't have to be online at the same \"\n+                    + \"time.<br/>\"\n+                    + \"Each email sender may require custom configuration, to learn more \"\n+                    + \"click help again after selecting a specific email sender.\"\n+                    + \"</html>\");\n+          } else if (viewModel.isEmailProviderGmail()) {", "originalCommit": "77a40d5a190b3fa8ddfd33b712492618c62354fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0MzQ3MA==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399843470", "bodyText": "There is a build for dialogs, it might help for setting the title. Something to consider.", "author": "DanVanAtta", "createdAt": "2020-03-29T19:42:33Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/DiceServerEditor.java", "diffHunk": "@@ -36,6 +37,19 @@\n               \"<html>Opens email registration page to register with MARTI dice-roller.<br>\"\n                   + \"Needs to be done once before MARTI dice server can be used.</html>\")\n           .build();\n+  private final JButton helpButton =\n+      new JButtonBuilder(\"Help\")\n+          .actionListener(\n+              () ->\n+                  JOptionPane.showMessageDialog(", "originalCommit": "77a40d5a190b3fa8ddfd33b712492618c62354fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2MDA2MQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399860061", "bodyText": "showMessageDialog actually has a method to specify title so just used that.", "author": "ron-murhammer", "createdAt": "2020-03-29T22:01:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0MzQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399844158", "bodyText": "Design nit, the view model attempts to remove all logic from the view. This can be done by creating a method to fetch the help message directly from the view model, or alternatively by creating a method to tell the view which help text to render. This way the view asks the view model which help text to render as opposed to the view calculating which help text to render.\nEG:\n helpMessage.setText(viewModel.getEmailSenderHelpText());\n\nOr:\nswitch(viewModel.getHelpTextToDisplay()) {\n  case NO_EMAIL_PROVIDER_SELECTED:\n      helpMessage.setText( ...);\n      break;\n   case GMAIL_EMAIL_PROVIDER:\n     :\n     : \n}\n\nThe above is different as currently view model is interpreting the meaning of isEmailProviderDisabled rather than being told directly what to render.\nFor a viewmodel pattern, the first variant of getting the help message is probably closest to the pattern. The switch statement with a dedicated flag condition would work too.", "author": "DanVanAtta", "createdAt": "2020-03-29T19:47:48Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditor.java", "diffHunk": "@@ -177,6 +187,82 @@ public void viewModelChanged(final EmailSenderEditorViewModel viewModel) {\n           toggleFieldVisibility();\n           emailProviderSelectionBox.setSelectedItem(viewModel.getSelectedProvider());\n \n+          if (viewModel.isEmailProviderDisabled()) {", "originalCommit": "77a40d5a190b3fa8ddfd33b712492618c62354fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2MDEyNw==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399860127", "bodyText": "Out of scope. Feel free to follow on adjusting it if you want.", "author": "ron-murhammer", "createdAt": "2020-03-29T22:02:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTMzNQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399865335", "bodyText": "I really don't think it is out of scope:\n\nadds something that we really need to do that should be done now.\nvery much breaks pattern and consistency\nmisses updates to test cases, adding more stuff to do later.\n\nViewModel is a pretty powerful pattern: https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel, it was with quite some effort it was introduced to line up for the migration to javaFx where we would not need to update the views.", "author": "DanVanAtta", "createdAt": "2020-03-29T22:46:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTY3Nw==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399865677", "bodyText": "The update to get back to pattern is not very time consuming and changes the accessor methods added to the view model. The testing should be pretty quick as well, but we are talking 20 minutes of work. Opening up the view model as was done is breaking to the design pattern.", "author": "DanVanAtta", "createdAt": "2020-03-29T22:49:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkwNTc5MQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399905791", "bodyText": "I really don't think there is much difference between your switch example and what is implemented. Either way the view has to interpret what to do based on either some form of enumeration/key like your example (getHelpTextToDisplay) or interpret whether to display certain text based on a few booleans. In the end, you always have to draw the line somewhere and try to keep the \"business logic\" out of the view but where that line is drawn can always be debated to some extent which can be shown by your 2 examples which take it to different degrees.", "author": "ron-murhammer", "createdAt": "2020-03-30T03:13:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMTk2MQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399911961", "bodyText": "It's not that much different, perhaps there should be no objection then to fit squarely into the pattern?\nThe example we have here is really similar to: https://martinfowler.com/eaaDev/SeparatedPresentation.html\nThe 'boolean' parameter rather than an integer is less obvious of a parallel, but it's still state  that the view is interpreting state (logic) rather than being told what to do. In part, the pattern uses dedicated flags and switches to tell each component of the view what to do. The same could be said about the different boolean parameters that control the various buttons. Many have the same logic condition behind them, yet the view model exposes those attributes as different boolean methods. In this way the view is totally unaware of the backend state, nor does it know that any state is coupled to anything else.\nThere are also two or three other helper methods for the 'isGmail' etc that could drop away if the view model were to be passed the text to be rendered.", "author": "DanVanAtta", "createdAt": "2020-03-30T03:43:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjQ2MQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399912461", "bodyText": "If the view were to call: getHelpTextToDisplay, then it would have nothing to interpret. The switch is similar, but it's still different as one is inferring state, as opposed to being told what state to be in.", "author": "DanVanAtta", "createdAt": "2020-03-30T03:46:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjg2NA==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399912864", "bodyText": "Like notice we could have done the same with:\n    emailProviderSelectionBox.setSelectedItem(viewModel.getSelectedProvider());\n\nThat could have been a very similar 'if/else' block as well. It's not though to prevent the view from having to evaluate boolean conditions.  Let's do that consistently please.", "author": "DanVanAtta", "createdAt": "2020-03-30T03:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNDQ2NQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399914465", "bodyText": "Either way the view has to interpret what to do based on either some form of enumeration/key like your example (getHelpTextToDisplay) or interpret whether to display certain text based on a few booleans\n\nI don't think that fits. The enumeration/key would be dedicated and used in only one place in the view, and the enumeration would be provided to the view and not used internally by the view model. The enumeration/key would be a computed value, an output, it would not be an input used elsewhere. The output would be dedicated for the view component. In this example we are moving logic into the view.\nIt would also never be multiple booleans, the only boolean would be a single one. We really should have a string here to think about it, the state of the component is essentially a string. A view-model is the state of each component translated into a primitive. A button enabled = a single boolean, the text of an input field is a string. For a dynamic help text, it is a string.\nThink about it in this way, the view is pure presentation. We should be able to simply swap out the swing view for javafx and only need to update the component logic, the rest of the state logic should be able to stay the same. With javafx migration, we should be able to re-use exactly the view-model objects. It's argument for the help text to live in the view-model.", "author": "DanVanAtta", "createdAt": "2020-03-30T03:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNTQ0Mg==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399915442", "bodyText": "Piling on slightly, the switch and if statement are actually quite different.\nThe switch is iterating over a single value, it's a single value that controls the state of the UI. It is not the UI checking multiple parts of the backing state.\nA method to get the value of the text, is also a scalar. At the end of the day, the backend should give the front-end a single scalar to tell it how to render. Whether that scalar is a flag, or if it's the actual text, it's still a single value. It is not the view querying the view-model and doing logic.", "author": "DanVanAtta", "createdAt": "2020-03-30T04:01:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDE1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDMzNw==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399844337", "bodyText": "These values probably should not have been hardcoded to begin with - mea culpa. But,  we do have constants for these values:\nEmailProviderPreset.GMAIL.getName();", "author": "DanVanAtta", "createdAt": "2020-03-29T19:49:07Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditorViewModel.java", "diffHunk": "@@ -16,6 +16,8 @@\n \n class EmailSenderEditorViewModel {\n   static final String PROVIDER_DISABLED = \"Disabled\";\n+  static final String GMAIL = \"Gmail\";", "originalCommit": "77a40d5a190b3fa8ddfd33b712492618c62354fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2MDAwMw==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399860003", "bodyText": "Updated.", "author": "ron-murhammer", "createdAt": "2020-03-29T22:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDMzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDUyNw==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399844527", "bodyText": "Ditto on view model should be told what to render as opposed to computing what to render. This allows for the logic to be tested as well, you can append to the tests to verify that the right help message is provided under the correct conditions.", "author": "DanVanAtta", "createdAt": "2020-03-29T19:50:53Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbf/ForumPosterEditor.java", "diffHunk": "@@ -64,6 +73,43 @@\n           SwingComponents.highlightLabelIfNotValid(viewModel.isForumUsernameValid(), usernameLabel);\n           SwingComponents.highlightLabelIfNotValid(viewModel.isForumPasswordValid(), passwordLabel);\n           testForum.setEnabled(viewModel.isTestForumPostButtonEnabled());\n+          helpMessage.setText(\n+              viewModel.getForumSelection().equals(NodeBbForumPoster.TRIPLEA_FORUM_DISPLAY_NAME)", "originalCommit": "77a40d5a190b3fa8ddfd33b712492618c62354fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2MDUyNg==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399860526", "bodyText": "Updated to move the check to the view model.", "author": "ron-murhammer", "createdAt": "2020-03-29T22:05:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0NDUyNw=="}], "type": "inlineReview"}, {"oid": "a8e78cd954fcfffbbc0329d3b97fe3ef18760fee", "url": "https://github.com/triplea-game/triplea/commit/a8e78cd954fcfffbbc0329d3b97fe3ef18760fee", "message": "Add max dialog width and improve dialog title", "committedDate": "2020-03-29T21:55:01Z", "type": "commit"}, {"oid": "dff0d3d128cb64691b58c3922477eee3ca02bb54", "url": "https://github.com/triplea-game/triplea/commit/dff0d3d128cb64691b58c3922477eee3ca02bb54", "message": "Change all forum help messages to use username rather than login", "committedDate": "2020-03-29T21:56:51Z", "type": "commit"}, {"oid": "f3739fc20475e475b0dd73d93c89520c296f5a7c", "url": "https://github.com/triplea-game/triplea/commit/f3739fc20475e475b0dd73d93c89520c296f5a7c", "message": "Use existing constants", "committedDate": "2020-03-29T22:00:52Z", "type": "commit"}, {"oid": "5187fdf2977da847976d847ed2d44140aa82da92", "url": "https://github.com/triplea-game/triplea/commit/5187fdf2977da847976d847ed2d44140aa82da92", "message": "Move forum provider check logic to view", "committedDate": "2020-03-29T22:05:15Z", "type": "commit"}, {"oid": "f9fccdbd634b81e5aaee6197a41ec6500842ba11", "url": "https://github.com/triplea-game/triplea/commit/f9fccdbd634b81e5aaee6197a41ec6500842ba11", "message": "Fix line length violations", "committedDate": "2020-03-29T22:22:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkzNTk5NA==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399935994", "bodyText": "Building on the last thread, this is different from a switch statement on a single value.\n        } else if (viewModel.isEmailProviderGmail()) {\n\nThat is a brand new boolean condition on the view model, the view should be able to know what to do based on a single value. In this case we have business logic in the view.\nWe should be able to get rid of all if statements and the method isEmailProviderGmail. The view should not be aware of a concept of 'gmail' or the different view providers, only that it gets data and it knows how to render it.", "author": "DanVanAtta", "createdAt": "2020-03-30T05:33:04Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditor.java", "diffHunk": "@@ -177,6 +190,82 @@ public void viewModelChanged(final EmailSenderEditorViewModel viewModel) {\n           toggleFieldVisibility();\n           emailProviderSelectionBox.setSelectedItem(viewModel.getSelectedProvider());\n \n+          if (viewModel.isEmailProviderDisabled()) {\n+            helpMessage.setText(\n+                \"<html><p style='width: 400px;'>\"\n+                    + \"Email sender<br/>\"\n+                    + \"An email sender can email the turn summary and save game to multiple \"\n+                    + \"recipients at the end of each players turn. This allows two or more \"\n+                    + \"players to play a game where you don't have to be online at the same \"\n+                    + \"time.<br/>\"\n+                    + \"Each email sender may require custom configuration, to learn more \"\n+                    + \"click help again after selecting a specific email sender.\"\n+                    + \"</p></html>\");\n+          } else if (viewModel.isEmailProviderGmail()) {", "originalCommit": "f9fccdbd634b81e5aaee6197a41ec6500842ba11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0NjU1Nw==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399946557", "bodyText": "This is perfect \ud83d\udc4d", "author": "DanVanAtta", "createdAt": "2020-03-30T06:09:17Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbf/ForumPosterEditorViewModel.java", "diffHunk": "@@ -116,6 +116,10 @@ synchronized boolean areFieldsValid() {\n     return isTopicIdValid() && isForumUsernameValid() && isForumPasswordValid();\n   }\n \n+  boolean isForumProviderTripleA() {", "originalCommit": "f9fccdbd634b81e5aaee6197a41ec6500842ba11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0NjY2MA==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399946660", "bodyText": "This is perfect \ud83d\udc4d\nThe boolean is acting like a flag selecting between two values, looks good.", "author": "DanVanAtta", "createdAt": "2020-03-30T06:09:39Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbf/ForumPosterEditor.java", "diffHunk": "@@ -64,6 +75,48 @@\n           SwingComponents.highlightLabelIfNotValid(viewModel.isForumUsernameValid(), usernameLabel);\n           SwingComponents.highlightLabelIfNotValid(viewModel.isForumPasswordValid(), passwordLabel);\n           testForum.setEnabled(viewModel.isTestForumPostButtonEnabled());\n+          helpMessage.setText(\n+              viewModel.isForumProviderTripleA()", "originalCommit": "f9fccdbd634b81e5aaee6197a41ec6500842ba11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0Njg2MQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399946861", "bodyText": "This method was meant to stay internal. I know that from the perspective as the author of this class. It's re-used as part of other computations, it is not intended to be used by the UI.", "author": "DanVanAtta", "createdAt": "2020-03-30T06:10:16Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditorViewModel.java", "diffHunk": "@@ -100,10 +104,18 @@ boolean showEmailOptions() {\n     return !isEmailProviderDisabled();\n   }\n \n-  private boolean isEmailProviderDisabled() {\n+  protected boolean isEmailProviderDisabled() {", "originalCommit": "f9fccdbd634b81e5aaee6197a41ec6500842ba11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0NzIzNA==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399947234", "bodyText": "The genesis is this is actually just an extract method refactor, it's only here to avoid duplicate conditional checks elsewhere. A problem with exposing it to the UI is that it creates couplings between other logic checks where the value is de-duped. You couldn't change this value from isEmailProviderDisabled and impact only one UI control.", "author": "DanVanAtta", "createdAt": "2020-03-30T06:11:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0Njg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NzMwMA==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r400597300", "bodyText": "Reverted to private.", "author": "ron-murhammer", "createdAt": "2020-03-31T01:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0Njg2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0NzUzMA==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r399947530", "bodyText": "These two methods use in combination with the isEmailProviderDisabled is where I see a problem. Combining these three into one method I would suggest is the way to go to avoid having any logic in the view and to fit very cleanly with the existing pattern.", "author": "DanVanAtta", "createdAt": "2020-03-30T06:12:18Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditorViewModel.java", "diffHunk": "@@ -100,10 +104,18 @@ boolean showEmailOptions() {\n     return !isEmailProviderDisabled();\n   }\n \n-  private boolean isEmailProviderDisabled() {\n+  protected boolean isEmailProviderDisabled() {\n     return selectedProvider.equals(PROVIDER_DISABLED);\n   }\n \n+  protected boolean isEmailProviderGmail() {\n+    return selectedProvider.equals(EmailProviderPreset.GMAIL.getName());\n+  }\n+\n+  protected boolean isEmailProviderHotmail() {", "originalCommit": "f9fccdbd634b81e5aaee6197a41ec6500842ba11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NzMyOQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r400597329", "bodyText": "Updated to a single method.", "author": "ron-murhammer", "createdAt": "2020-03-31T01:56:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0NzUzMA=="}], "type": "inlineReview"}, {"oid": "21bebd580a7a6b0d90cec2ce91c32c560ef439ad", "url": "https://github.com/triplea-game/triplea/commit/21bebd580a7a6b0d90cec2ce91c32c560ef439ad", "message": "Refactor email help to use a single method call", "committedDate": "2020-03-31T01:55:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NzYyMA==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r400597620", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "author": "codeclimate", "createdAt": "2020-03-31T01:57:05Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditor.java", "diffHunk": "@@ -177,6 +190,83 @@ public void viewModelChanged(final EmailSenderEditorViewModel viewModel) {\n           toggleFieldVisibility();\n           emailProviderSelectionBox.setSelectedItem(viewModel.getSelectedProvider());\n \n+          final String emailHelpType = viewModel.getEmailHelpType();\n+          if (emailHelpType.equals(EmailSenderEditorViewModel.PROVIDER_DISABLED)) {\n+            helpMessage.setText(\n+                \"<html><p style='width: 400px;'>\"\n+                    + \"Email sender<br/>\"\n+                    + \"An email sender can email the turn summary and save game to multiple \"\n+                    + \"recipients at the end of each players turn. This allows two or more \"\n+                    + \"players to play a game where you don't have to be online at the same \"\n+                    + \"time.<br/>\"\n+                    + \"Each email sender may require custom configuration, to learn more \"\n+                    + \"click help again after selecting a specific email sender.\"\n+                    + \"</p></html>\");\n+          } else if (emailHelpType.equals(EmailProviderPreset.GMAIL.getName())) {\n+            helpMessage.setText(\n+                \"<html><p style='width: 400px;'>\"\n+                    + \"Email through Gmail<br/>\"\n+                    + \"This email sends email via Gmails SMTP service. To use this you must have a \"\n+                    + \"gmail account. Configuration:<br/>\"\n+                    + \"Subject: This will be the subject of the email. In addition to the text \"\n+                    + \"entered, the player and round number will be appended<br/>\"\n+                    + \"To: A list of email addresses separated by space. the email will be sent to \"\n+                    + \"all these users<br/>\"\n+                    + \"Login: Your gmail login used to authenticate against the gmail smtp service\"\n+                    + \"<br/>\"\n+                    + \"Password: Your gmail password used to authenticate against the gmail smtp \"\n+                    + \"service<br/>\"\n+                    + \"Note: All communication with the Gmail service uses TLS encryption. Your \"\n+                    + \"Gmail login and password are not stored as part of the save game, but they \"\n+                    + \"are stored encrypted in the local file system if you select the option to \"\n+                    + \"remember your credentials.<br/>\"\n+                    + \"You may have to enter your login and password again if you open the save \"\n+                    + \"game on another computer.\"\n+                    + \"</p></html>\");\n+          } else if (emailHelpType.equals(EmailProviderPreset.HOTMAIL.getName())) {", "originalCommit": "21bebd580a7a6b0d90cec2ce91c32c560ef439ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NzYyMQ==", "url": "https://github.com/triplea-game/triplea/pull/6109#discussion_r400597621", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "author": "codeclimate", "createdAt": "2020-03-31T01:57:05Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditor.java", "diffHunk": "@@ -177,6 +190,83 @@ public void viewModelChanged(final EmailSenderEditorViewModel viewModel) {\n           toggleFieldVisibility();\n           emailProviderSelectionBox.setSelectedItem(viewModel.getSelectedProvider());\n \n+          final String emailHelpType = viewModel.getEmailHelpType();\n+          if (emailHelpType.equals(EmailSenderEditorViewModel.PROVIDER_DISABLED)) {\n+            helpMessage.setText(\n+                \"<html><p style='width: 400px;'>\"\n+                    + \"Email sender<br/>\"\n+                    + \"An email sender can email the turn summary and save game to multiple \"\n+                    + \"recipients at the end of each players turn. This allows two or more \"\n+                    + \"players to play a game where you don't have to be online at the same \"\n+                    + \"time.<br/>\"\n+                    + \"Each email sender may require custom configuration, to learn more \"\n+                    + \"click help again after selecting a specific email sender.\"\n+                    + \"</p></html>\");\n+          } else if (emailHelpType.equals(EmailProviderPreset.GMAIL.getName())) {", "originalCommit": "21bebd580a7a6b0d90cec2ce91c32c560ef439ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}