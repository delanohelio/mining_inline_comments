{"pr_number": 7461, "pr_title": "Simplify, Standardize & Document Docker Database scripts", "pr_createdAt": "2020-08-25T05:03:18Z", "pr_url": "https://github.com/triplea-game/triplea/pull/7461", "timeline": [{"oid": "03f485893501f0834936a2067ec094feb27b4100", "url": "https://github.com/triplea-game/triplea/commit/03f485893501f0834936a2067ec094feb27b4100", "message": "Simplify, Standardize & Document Docker Database scripts\n\n- Consolidates documentation to /docs/development/database\n- Standardizes the scripts between maps-db and lobby-db\n- Creates top-level utility script \"start-docker-databases\"\n- Merges loading of sample data and waiting for database start\n  into the database start script\n\nAt the end the four standard DB scripts will be:\n- build_docker_db\n- start_docker_db\n- connect_to_docker_db\n- reset_docker_db", "committedDate": "2020-08-25T05:00:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTczOA==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179738", "bodyText": "Useless cat. Consider 'cmd < file | ..' or 'cmd file | ..' instead.", "author": "codeclimate", "createdAt": "2020-08-25T05:05:26Z", "path": "lobby-db/reset_docker_db", "diffHunk": "@@ -0,0 +1,29 @@\n+#!/bin/bash\n+\n+set -u\n+\n+database_port=5433\n+database_name=maps_db\n+database_user=maps_user\n+\n+# Check if we can connect to database\n+if ! echo 'select 1' \\\n+       | psql -h localhost -p \"$database_port\" -U \"$database_user\" \"$database_name\" 2> /dev/null \\\n+       | grep -q '1 row';\n+then\n+ echo \"ERROR: docker not running, start the database first\"\n+ exit 1\n+fi\n+\n+PSQL=\"psql -h localhost -U $database_user -p $database_port -w -d postgres\"\n+\n+echo \"Force killing open connections to database\"\n+echo \"select pg_terminate_backend(pid) from pg_stat_activity where datname='$database_name';\" | $PSQL\n+echo \"drop database $database_name\" | $PSQL\n+echo \"create database $database_name\" | $PSQL\n+\n+echo \"Deploying schema\"\n+\"$(dirname \"$0\")/../gradlew\" flywayMigrate\n+\n+echo \"Loading sample data\"\n+cat \"$(dirname \"$0\")/sample_data.sql\" | psql -h localhost -U lobby_user lobby_db", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTczOQ==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179739", "bodyText": "Fenced code blocks should be surrounded by blank lines", "author": "codeclimate", "createdAt": "2020-08-25T05:05:26Z", "path": "docs/development/database/local-development.md", "diffHunk": "@@ -0,0 +1,53 @@\n+# Local Database Development\n+\n+- You need a local database to run the integration tests\n+- You need a local database to run the application servers\n+- Local database is run on docker containers\n+\n+Databases are kept in subprojects suffixed with `db` and have\n+standard scripts to make things easier.\n+\n+## Quick-Start\n+\n+- Install docker on your system\n+- Run the `build_docker_db` script in each of the `*-db` projects\n+- Run `./start-docker-databases`\n+\n+## Working with Local Databases\n+\n+We will use `lobby-db` as an example.\n+\n+### Build Docker\n+\n+First (one-time) build your docker container with:\n+```\n+./lobby-db/build_docker_db\n+```\n+\n+### Start Docker\n+\n+Next, start the docker database with:\n+```\n+./lobby-db/start_docker_db\n+```\n+The start script will run flyway to apply migrations files\n+and will insert example data.\n+\n+### Connect to Database on Docker\n+\n+You can then connect to your local docker database with:\n+```\n+./lobby-db/connect_to_docker_db\n+```\n+Note: You can view the connect script to obtain  connection parameters\n+such as port number and credentials.\n+\n+### Reset Database Docker\n+\n+If you are in development and wish to have a clean database (for example\n+you are modifying flyway migration files), to recreate a running\n+database, run:\n+```", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTc0MA==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179740", "bodyText": "Fenced code blocks should be surrounded by blank lines", "author": "codeclimate", "createdAt": "2020-08-25T05:05:27Z", "path": "docs/development/database/local-development.md", "diffHunk": "@@ -0,0 +1,53 @@\n+# Local Database Development\n+\n+- You need a local database to run the integration tests\n+- You need a local database to run the application servers\n+- Local database is run on docker containers\n+\n+Databases are kept in subprojects suffixed with `db` and have\n+standard scripts to make things easier.\n+\n+## Quick-Start\n+\n+- Install docker on your system\n+- Run the `build_docker_db` script in each of the `*-db` projects\n+- Run `./start-docker-databases`\n+\n+## Working with Local Databases\n+\n+We will use `lobby-db` as an example.\n+\n+### Build Docker\n+\n+First (one-time) build your docker container with:\n+```\n+./lobby-db/build_docker_db\n+```\n+\n+### Start Docker\n+\n+Next, start the docker database with:\n+```\n+./lobby-db/start_docker_db\n+```", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTc0MQ==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179741", "bodyText": "Fenced code blocks should be surrounded by blank lines", "author": "codeclimate", "createdAt": "2020-08-25T05:05:27Z", "path": "docs/development/database/local-development.md", "diffHunk": "@@ -0,0 +1,53 @@\n+# Local Database Development\n+\n+- You need a local database to run the integration tests\n+- You need a local database to run the application servers\n+- Local database is run on docker containers\n+\n+Databases are kept in subprojects suffixed with `db` and have\n+standard scripts to make things easier.\n+\n+## Quick-Start\n+\n+- Install docker on your system\n+- Run the `build_docker_db` script in each of the `*-db` projects\n+- Run `./start-docker-databases`\n+\n+## Working with Local Databases\n+\n+We will use `lobby-db` as an example.\n+\n+### Build Docker\n+\n+First (one-time) build your docker container with:\n+```\n+./lobby-db/build_docker_db\n+```\n+\n+### Start Docker\n+\n+Next, start the docker database with:\n+```\n+./lobby-db/start_docker_db\n+```\n+The start script will run flyway to apply migrations files\n+and will insert example data.\n+\n+### Connect to Database on Docker\n+\n+You can then connect to your local docker database with:\n+```", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTc0Mw==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179743", "bodyText": "Fenced code blocks should be surrounded by blank lines", "author": "codeclimate", "createdAt": "2020-08-25T05:05:27Z", "path": "docs/development/database/local-development.md", "diffHunk": "@@ -0,0 +1,53 @@\n+# Local Database Development\n+\n+- You need a local database to run the integration tests\n+- You need a local database to run the application servers\n+- Local database is run on docker containers\n+\n+Databases are kept in subprojects suffixed with `db` and have\n+standard scripts to make things easier.\n+\n+## Quick-Start\n+\n+- Install docker on your system\n+- Run the `build_docker_db` script in each of the `*-db` projects\n+- Run `./start-docker-databases`\n+\n+## Working with Local Databases\n+\n+We will use `lobby-db` as an example.\n+\n+### Build Docker\n+\n+First (one-time) build your docker container with:\n+```\n+./lobby-db/build_docker_db\n+```\n+\n+### Start Docker\n+\n+Next, start the docker database with:\n+```\n+./lobby-db/start_docker_db\n+```\n+The start script will run flyway to apply migrations files\n+and will insert example data.\n+\n+### Connect to Database on Docker\n+\n+You can then connect to your local docker database with:\n+```\n+./lobby-db/connect_to_docker_db\n+```", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTc0Ng==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179746", "bodyText": "Fenced code blocks should be surrounded by blank lines", "author": "codeclimate", "createdAt": "2020-08-25T05:05:27Z", "path": "docs/development/database/local-development.md", "diffHunk": "@@ -0,0 +1,53 @@\n+# Local Database Development\n+\n+- You need a local database to run the integration tests\n+- You need a local database to run the application servers\n+- Local database is run on docker containers\n+\n+Databases are kept in subprojects suffixed with `db` and have\n+standard scripts to make things easier.\n+\n+## Quick-Start\n+\n+- Install docker on your system\n+- Run the `build_docker_db` script in each of the `*-db` projects\n+- Run `./start-docker-databases`\n+\n+## Working with Local Databases\n+\n+We will use `lobby-db` as an example.\n+\n+### Build Docker\n+\n+First (one-time) build your docker container with:\n+```\n+./lobby-db/build_docker_db\n+```\n+\n+### Start Docker\n+\n+Next, start the docker database with:\n+```", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTc0Nw==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179747", "bodyText": "Line length", "author": "codeclimate", "createdAt": "2020-08-25T05:05:27Z", "path": "docs/development/database/deploying-database-changes.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Deploying Database Changes\n+\n+## Overview\n+\n+- Database changes are executed through migration files.\n+- [Flyway](https://flywaydb.org/) is used to run new migration files.\n+- Migrations files live in the `*-db` subprojects, in: `src/main/resources/db`\n+- New migration files only need to checked in and merged to master to\n+  be executed in prerelease and then eventually production.\n+- Execution of flyway to 'prerelease' is automatic after each merge.\n+- Execution of flyway to 'production' is automatic on production deployments.\n+\n+## Migration File Versioning\n+\n+- Versioning will follow [semver](https://semver.org/)\n+- Do not modify files that have already been run against prerelease (Flyway will halt", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTc0OQ==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179749", "bodyText": "Line length", "author": "codeclimate", "createdAt": "2020-08-25T05:05:27Z", "path": "docs/development/database/deploying-database-changes.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Deploying Database Changes\n+\n+## Overview\n+\n+- Database changes are executed through migration files.\n+- [Flyway](https://flywaydb.org/) is used to run new migration files.\n+- Migrations files live in the `*-db` subprojects, in: `src/main/resources/db`\n+- New migration files only need to checked in and merged to master to\n+  be executed in prerelease and then eventually production.\n+- Execution of flyway to 'prerelease' is automatic after each merge.\n+- Execution of flyway to 'production' is automatic on production deployments.\n+\n+## Migration File Versioning\n+\n+- Versioning will follow [semver](https://semver.org/)\n+- Do not modify files that have already been run against prerelease (Flyway will halt\n+  if an already applied migration has been modified).\n+- Group related database changes together to a single migration file and keep the\n+  migrations roughly single-purpose. For example, if adding indexes to existing tables,\n+  create one migration file for that and another for adding new tables.\n+\n+An example migration file could be named: `V1.09.00__add_some_table.sql`\n+\n+The structure of the migration file is:\n+```\n+V< compatibility > . < feature > . < patch >__< desciption >.sql\n+```\n+\n+Increment the `compatibility` number when for example an application must be updated to", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTc1MQ==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179751", "bodyText": "Line length", "author": "codeclimate", "createdAt": "2020-08-25T05:05:28Z", "path": "docs/development/database/deploying-database-changes.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Deploying Database Changes\n+\n+## Overview\n+\n+- Database changes are executed through migration files.\n+- [Flyway](https://flywaydb.org/) is used to run new migration files.\n+- Migrations files live in the `*-db` subprojects, in: `src/main/resources/db`\n+- New migration files only need to checked in and merged to master to\n+  be executed in prerelease and then eventually production.\n+- Execution of flyway to 'prerelease' is automatic after each merge.\n+- Execution of flyway to 'production' is automatic on production deployments.\n+\n+## Migration File Versioning\n+\n+- Versioning will follow [semver](https://semver.org/)\n+- Do not modify files that have already been run against prerelease (Flyway will halt\n+  if an already applied migration has been modified).\n+- Group related database changes together to a single migration file and keep the\n+  migrations roughly single-purpose. For example, if adding indexes to existing tables,\n+  create one migration file for that and another for adding new tables.\n+\n+An example migration file could be named: `V1.09.00__add_some_table.sql`\n+\n+The structure of the migration file is:\n+```\n+V< compatibility > . < feature > . < patch >__< desciption >.sql\n+```\n+\n+Increment the `compatibility` number when for example an application must be updated to\n+be able to continue reading the existing database (for example a table is dropped).\n+\n+Increment the `feature` number when introducing a new set of database features. Typically\n+most work will start by increasing this. While an application might need to be updated to", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTc1NA==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179754", "bodyText": "Fenced code blocks should be surrounded by blank lines", "author": "codeclimate", "createdAt": "2020-08-25T05:05:28Z", "path": "docs/development/database/deploying-database-changes.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Deploying Database Changes\n+\n+## Overview\n+\n+- Database changes are executed through migration files.\n+- [Flyway](https://flywaydb.org/) is used to run new migration files.\n+- Migrations files live in the `*-db` subprojects, in: `src/main/resources/db`\n+- New migration files only need to checked in and merged to master to\n+  be executed in prerelease and then eventually production.\n+- Execution of flyway to 'prerelease' is automatic after each merge.\n+- Execution of flyway to 'production' is automatic on production deployments.\n+\n+## Migration File Versioning\n+\n+- Versioning will follow [semver](https://semver.org/)\n+- Do not modify files that have already been run against prerelease (Flyway will halt\n+  if an already applied migration has been modified).\n+- Group related database changes together to a single migration file and keep the\n+  migrations roughly single-purpose. For example, if adding indexes to existing tables,\n+  create one migration file for that and another for adding new tables.\n+\n+An example migration file could be named: `V1.09.00__add_some_table.sql`\n+\n+The structure of the migration file is:\n+```", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE3OTc1Ng==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476179756", "bodyText": "Fenced code blocks should be surrounded by blank lines", "author": "codeclimate", "createdAt": "2020-08-25T05:05:28Z", "path": "docs/development/database/local-development.md", "diffHunk": "@@ -0,0 +1,53 @@\n+# Local Database Development\n+\n+- You need a local database to run the integration tests\n+- You need a local database to run the application servers\n+- Local database is run on docker containers\n+\n+Databases are kept in subprojects suffixed with `db` and have\n+standard scripts to make things easier.\n+\n+## Quick-Start\n+\n+- Install docker on your system\n+- Run the `build_docker_db` script in each of the `*-db` projects\n+- Run `./start-docker-databases`\n+\n+## Working with Local Databases\n+\n+We will use `lobby-db` as an example.\n+\n+### Build Docker\n+\n+First (one-time) build your docker container with:\n+```", "originalCommit": "03f485893501f0834936a2067ec094feb27b4100", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c733b0a9bea45c69567cee52494b88149d7f2ede", "url": "https://github.com/triplea-game/triplea/commit/c733b0a9bea45c69567cee52494b88149d7f2ede", "message": "Fix useless cat in shell script", "committedDate": "2020-08-25T07:19:24Z", "type": "commit"}, {"oid": "c71353d879db6980101341da4399cd64537a6843", "url": "https://github.com/triplea-game/triplea/commit/c71353d879db6980101341da4399cd64537a6843", "message": "Fix documentation formatting", "committedDate": "2020-08-25T07:22:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI1NTcxNg==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476255716", "bodyText": "Lists should be surrounded by blank lines", "author": "codeclimate", "createdAt": "2020-08-25T08:04:16Z", "path": "lobby-db/README.md", "diffHunk": "@@ -1,50 +1,15 @@\n-# lobby-db\n+# Maps-DB\n \n-TODO: rename this project to lobby-db-schema and ensure production migration scripts still work\n+Supports the lobby-server and stores:\n+  - users", "originalCommit": "c71353d879db6980101341da4399cd64537a6843", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI1NTcyMw==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476255723", "bodyText": "Line length", "author": "codeclimate", "createdAt": "2020-08-25T08:04:16Z", "path": "docs/development/database/deploying-database-changes.md", "diffHunk": "@@ -0,0 +1,38 @@\n+# Deploying Database Changes\n+\n+## Overview\n+\n+- Database changes are executed through migration files.\n+- [Flyway](https://flywaydb.org/) is used to run new migration files.\n+- Migrations files live in the `*-db` subprojects, in: `src/main/resources/db`\n+- New migration files only need to checked in and merged to master to\n+  be executed in prerelease and then eventually production.\n+- Execution of flyway to 'prerelease' is automatic after each merge.\n+- Execution of flyway to 'production' is automatic on production deployments.\n+\n+## Migration File Versioning\n+\n+- Versioning will follow [semver](https://semver.org/)\n+- Do not modify files that have already been run against prerelease (Flyway\n+  will halt if an already applied migration has been modified).\n+- Group related database changes together to a single migration file and keep the\n+  migrations roughly single-purpose. For example, if adding indexes to existing tables,\n+  create one migration file for that and another for adding new tables.\n+\n+An example migration file could be named: `V1.09.00__add_some_table.sql`\n+\n+The structure of the migration file is:\n+\n+```\n+V< compatibility > . < feature > . < patch >__< desciption >.sql\n+```\n+\n+Increment the `compatibility` number when for example an application must be updated\n+to be able to continue reading the existing database (for example a table is dropped).\n+\n+Increment the `feature` number when introducing a new set of database features.\n+Typically most work will start by increasing this. While an application might need to", "originalCommit": "c71353d879db6980101341da4399cd64537a6843", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI1NTcyNQ==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r476255725", "bodyText": "Line length", "author": "codeclimate", "createdAt": "2020-08-25T08:04:16Z", "path": "docs/development/database/deploying-database-changes.md", "diffHunk": "@@ -0,0 +1,38 @@\n+# Deploying Database Changes\n+\n+## Overview\n+\n+- Database changes are executed through migration files.\n+- [Flyway](https://flywaydb.org/) is used to run new migration files.\n+- Migrations files live in the `*-db` subprojects, in: `src/main/resources/db`\n+- New migration files only need to checked in and merged to master to\n+  be executed in prerelease and then eventually production.\n+- Execution of flyway to 'prerelease' is automatic after each merge.\n+- Execution of flyway to 'production' is automatic on production deployments.\n+\n+## Migration File Versioning\n+\n+- Versioning will follow [semver](https://semver.org/)\n+- Do not modify files that have already been run against prerelease (Flyway\n+  will halt if an already applied migration has been modified).\n+- Group related database changes together to a single migration file and keep the\n+  migrations roughly single-purpose. For example, if adding indexes to existing tables,\n+  create one migration file for that and another for adding new tables.\n+\n+An example migration file could be named: `V1.09.00__add_some_table.sql`\n+\n+The structure of the migration file is:\n+\n+```\n+V< compatibility > . < feature > . < patch >__< desciption >.sql\n+```\n+\n+Increment the `compatibility` number when for example an application must be updated\n+to be able to continue reading the existing database (for example a table is dropped).\n+\n+Increment the `feature` number when introducing a new set of database features.\n+Typically most work will start by increasing this. While an application might need to\n+be updated to pick up the changes, existing applications should still be able to run", "originalCommit": "c71353d879db6980101341da4399cd64537a6843", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "baf2f3d91be90ebca3b9de03c916b128ac5fe8c2", "url": "https://github.com/triplea-game/triplea/commit/baf2f3d91be90ebca3b9de03c916b128ac5fe8c2", "message": "Fix formatting", "committedDate": "2020-08-27T00:07:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzczODkxMA==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r477738910", "bodyText": "Codacy found an issue: [list-item-bullet-indent] Incorrect indentation before bullet: remove 2 spaces", "author": "DanVanAtta", "createdAt": "2020-08-27T00:11:01Z", "path": "lobby-db/README.md", "diffHunk": "@@ -1,50 +1,15 @@\n-# lobby-db\n+# Maps-DB\n \n-TODO: rename this project to lobby-db-schema and ensure production migration scripts still work\n+Supports the lobby-server and stores:\n+  - users\n+  - lobby chat history\n+  - user ban information\n+  - moderator audit logs\n+  - bug report history and rate limits", "originalCommit": "baf2f3d91be90ebca3b9de03c916b128ac5fe8c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzczODk0Ng==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r477738946", "bodyText": "Codacy found an issue: [list-item-bullet-indent] Incorrect indentation before bullet: remove 2 spaces", "author": "DanVanAtta", "createdAt": "2020-08-27T00:11:02Z", "path": "lobby-db/README.md", "diffHunk": "@@ -1,50 +1,15 @@\n-# lobby-db\n+# Maps-DB\n \n-TODO: rename this project to lobby-db-schema and ensure production migration scripts still work\n+Supports the lobby-server and stores:\n+  - users", "originalCommit": "baf2f3d91be90ebca3b9de03c916b128ac5fe8c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzczODk5MA==", "url": "https://github.com/triplea-game/triplea/pull/7461#discussion_r477738990", "bodyText": "Codacy found an issue: [list-item-bullet-indent] Incorrect indentation before bullet: remove 2 spaces", "author": "DanVanAtta", "createdAt": "2020-08-27T00:11:03Z", "path": "lobby-db/README.md", "diffHunk": "@@ -1,50 +1,15 @@\n-# lobby-db\n+# Maps-DB\n \n-TODO: rename this project to lobby-db-schema and ensure production migration scripts still work\n+Supports the lobby-server and stores:\n+  - users\n+  - lobby chat history\n+  - user ban information\n+  - moderator audit logs", "originalCommit": "baf2f3d91be90ebca3b9de03c916b128ac5fe8c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}