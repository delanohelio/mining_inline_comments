{"pr_number": 1676, "pr_title": "HIVE-24389: Trailing zeros of constant decimal numbers are removed", "pr_createdAt": "2020-11-16T13:31:55Z", "pr_url": "https://github.com/apache/hive/pull/1676", "timeline": [{"oid": "9b3b9979f11dc9826d890cdd6246810b1bab7773", "url": "https://github.com/apache/hive/commit/9b3b9979f11dc9826d890cdd6246810b1bab7773", "message": "HIVE-24389: Trailing zeros of constant decimal numbers are removed", "committedDate": "2020-11-17T07:26:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQyNjI5Mw==", "url": "https://github.com/apache/hive/pull/1676#discussion_r527426293", "bodyText": "Why does precision need to be overridden here (while scale does not)? Could we possibly remove this too?", "author": "jcamachor", "createdAt": "2020-11-20T05:46:25Z", "path": "serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableConstantHiveDecimalObjectInspector.java", "diffHunk": "@@ -62,13 +62,4 @@ public int precision() {\n     }", "originalCommit": "9b3b9979f11dc9826d890cdd6246810b1bab7773", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzczNTI2Mg==", "url": "https://github.com/apache/hive/pull/1676#discussion_r527735262", "bodyText": "We can remove it and it can also be removed from WritableConstant[Byte|Int|Long|Short]ObjectInspector.\nBut it doesn't have such an effect like scale(). scale() also plays a role in converting to String but precision() is used only in functions GenericUDFBaseNumeric, GenericUDAFAverage, GenericUDAFSum to determine the result type.", "author": "kasakrisz", "createdAt": "2020-11-20T14:39:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQyNjI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0NDIxNA==", "url": "https://github.com/apache/hive/pull/1676#discussion_r529244214", "bodyText": "Seems that removing precision override has unwanted side effects. I reverted that part.", "author": "kasakrisz", "createdAt": "2020-11-24T07:06:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQyNjI5Mw=="}], "type": "inlineReview"}, {"oid": "22c04850a19398cb1b3b1155f329bb83a3abdfdb", "url": "https://github.com/apache/hive/commit/22c04850a19398cb1b3b1155f329bb83a3abdfdb", "message": "HIVE-24389: Trailing zeros of constant decimal numbers are removed - remove override of precision()", "committedDate": "2020-11-20T14:56:25Z", "type": "forcePushed"}, {"oid": "804a1e0327a6bc95d708a8dabf8b7d2ab080c87b", "url": "https://github.com/apache/hive/commit/804a1e0327a6bc95d708a8dabf8b7d2ab080c87b", "message": "HIVE-24389: Trailing zeros of constant decimal numbers are removed - remove override of precision()", "committedDate": "2020-11-23T08:50:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTk3Ng==", "url": "https://github.com/apache/hive/pull/1676#discussion_r529045976", "bodyText": "Difference in precision and scale for column. Why has this changed?", "author": "jcamachor", "createdAt": "2020-11-23T22:48:31Z", "path": "ql/src/test/results/clientpositive/llap/materialized_view_rewrite_window.q.out", "diffHunk": "@@ -166,7 +166,7 @@ POSTHOOK: Input: arc_view@wealth\n #### A masked pattern was here ####\n CBO PLAN:\n HiveSortLimit(sort0=[$0], dir0=[ASC])\n-  HiveProject(quartile=[$0], total=[$1])\n+  HiveProject(quartile=[CAST($0):DECIMAL(12, 1)], total=[$1])", "originalCommit": "804a1e0327a6bc95d708a8dabf8b7d2ab080c87b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0NDUyOA==", "url": "https://github.com/apache/hive/pull/1676#discussion_r529244528", "bodyText": "Reverted the commit that removes precision override. Change in scale is expected.", "author": "kasakrisz", "createdAt": "2020-11-24T07:06:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4MzAwOA==", "url": "https://github.com/apache/hive/pull/1676#discussion_r529883008", "bodyText": "Why is this expected? It seems the decimal value is not a constant?", "author": "jcamachor", "createdAt": "2020-11-24T21:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI2NjU0NA==", "url": "https://github.com/apache/hive/pull/1676#discussion_r530266544", "bodyText": "The optimiziter rewrites this query to use materialized view mv_tv_view_data_av1.\nThe plan of the mv with this patch is changed\nfrom\nHiveTableScan(table=[[arc_view, mv_tv_view_data_av1]], table:alias=[mv_tv_view_data_av1])\n\nto\nLogicalProject(quartile=[CAST($0):DECIMAL(12, 1)], total=[$1])\n  HiveTableScan(table=[[arc_view, mv_tv_view_data_av1]], table:alias=[mv_tv_view_data_av1])\n\nThe mv definition contains a constant value cast to Decimal cast(1.5 as decimal(9,4))\ncreate materialized view mv_tv_view_data_av1 stored as orc TBLPROPERTIES ('transactional'='true') as\nselect\n  t.quartile,\n  max(t.total_views) total\nfrom wealth t2,\n(select\n  total_views `total_views`,\n  sum(cast(1.5 as decimal(9,4))) over (order by total_views) as quartile,\n  program\nfrom tv_view_data) t\nwhere t.program=t2.watches\ngroup by quartile;\n\nWe need the project with the cast on top of the mv scan because the mv table schema is different than the query schema.\nRowTypes after the patch\nviewscan rowType: RecordType(DECIMAL(12, 4) quartile, BIGINT total)\nqueryRel rowType: RecordType(DECIMAL(12, 1) quartile, BIGINT $f1)\n\nbefore the patch\nviewscan rowType: RecordType(DECIMAL(12, 1) quartile, BIGINT total)\nqueryRel rowType: RecordType(DECIMAL(12, 1) quartile, BIGINT $f1)", "author": "kasakrisz", "createdAt": "2020-11-25T10:29:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NTk3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NjA1OQ==", "url": "https://github.com/apache/hive/pull/1676#discussion_r529046059", "bodyText": "Difference in precision and scale for column. Why has this changed (same below)?", "author": "jcamachor", "createdAt": "2020-11-23T22:48:45Z", "path": "ql/src/test/results/clientpositive/llap/materialized_view_rewrite_window.q.out", "diffHunk": "@@ -293,24 +293,24 @@ STAGE PLANS:\n                 Statistics: Num rows: 4 Data size: 480 Basic stats: COMPLETE Column stats: COMPLETE\n                 Group By Operator\n                   aggregations: max(_col1)\n-                  keys: _col2 (type: decimal(12,1))\n+                  keys: _col2 (type: decimal(19,4))", "originalCommit": "804a1e0327a6bc95d708a8dabf8b7d2ab080c87b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NjYzNA==", "url": "https://github.com/apache/hive/pull/1676#discussion_r529046634", "bodyText": "Difference in precision and scale for column. Why has this changed?", "author": "jcamachor", "createdAt": "2020-11-23T22:49:57Z", "path": "ql/src/test/results/clientpositive/llap/metadata_only_queries.q.out", "diffHunk": "@@ -377,7 +377,7 @@ STAGE PLANS:\n                 outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8\n                 Statistics: Num rows: 1 Data size: 520 Basic stats: COMPLETE Column stats: NONE\n                 Select Operator\n-                  expressions: _col0 (type: bigint), '1' (type: string), _col1 (type: bigint), _col2 (type: decimal(11,1)), 2 (type: int), _col0 (type: bigint), _col3 (type: bigint), 7 (type: decimal(2,0)), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: bigint), _col7 (type: int), _col8 (type: bigint)\n+                  expressions: _col0 (type: bigint), '1' (type: string), _col1 (type: bigint), _col2 (type: decimal(11,1)), 2 (type: int), _col0 (type: bigint), _col3 (type: bigint), 7 (type: decimal(11,0)), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: bigint), _col7 (type: int), _col8 (type: bigint)", "originalCommit": "804a1e0327a6bc95d708a8dabf8b7d2ab080c87b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0NzI4OQ==", "url": "https://github.com/apache/hive/pull/1676#discussion_r529047289", "bodyText": "Difference in precision and scale for column. Why has this changed?", "author": "jcamachor", "createdAt": "2020-11-23T22:51:26Z", "path": "ql/src/test/results/clientpositive/llap/vector_cast_constant.q.out", "diffHunk": "@@ -180,7 +180,7 @@ STAGE PLANS:\n                               native: true\n                               nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true\n                           Statistics: Num rows: 257 Data size: 40092 Basic stats: COMPLETE Column stats: COMPLETE\n-                          value expressions: _col1 (type: bigint), _col2 (type: bigint), _col3 (type: double), _col4 (type: bigint), _col5 (type: decimal(12,0)), _col6 (type: bigint)\n+                          value expressions: _col1 (type: bigint), _col2 (type: bigint), _col3 (type: double), _col4 (type: bigint), _col5 (type: decimal(20,0)), _col6 (type: bigint)", "originalCommit": "804a1e0327a6bc95d708a8dabf8b7d2ab080c87b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0ODA2NQ==", "url": "https://github.com/apache/hive/pull/1676#discussion_r529048065", "bodyText": "I think this could lead to a change of behavior, e.g., all integers will have same precision by default, but constant integer would have the precision of the constant value?", "author": "jcamachor", "createdAt": "2020-11-23T22:53:12Z", "path": "serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/primitive/WritableConstantIntObjectInspector.java", "diffHunk": "@@ -46,12 +46,4 @@ public IntWritable getWritableConstantValue() {\n     return value;\n   }\n \n-  @Override\n-  public int precision() {", "originalCommit": "804a1e0327a6bc95d708a8dabf8b7d2ab080c87b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0NTE0Mw==", "url": "https://github.com/apache/hive/pull/1676#discussion_r529245143", "bodyText": "Yes, by overriding precision constant values has the precision of the value itself.", "author": "kasakrisz", "createdAt": "2020-11-24T07:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0ODA2NQ=="}], "type": "inlineReview"}, {"oid": "922a4a45710b978a34014419a2b498b3c8f5d9aa", "url": "https://github.com/apache/hive/commit/922a4a45710b978a34014419a2b498b3c8f5d9aa", "message": "HIVE-24389: Trailing zeros of constant decimal numbers are removed", "committedDate": "2020-11-24T05:39:25Z", "type": "commit"}, {"oid": "922a4a45710b978a34014419a2b498b3c8f5d9aa", "url": "https://github.com/apache/hive/commit/922a4a45710b978a34014419a2b498b3c8f5d9aa", "message": "HIVE-24389: Trailing zeros of constant decimal numbers are removed", "committedDate": "2020-11-24T05:39:25Z", "type": "forcePushed"}]}