{"pr_number": 1349, "pr_title": "HIVE-23973: Use SQL constraints to improve join reordering algorithm \u2026", "pr_createdAt": "2020-08-01T00:16:43Z", "pr_url": "https://github.com/apache/hive/pull/1349", "timeline": [{"oid": "298d29a3592abcaa7b9c8658369b771ab164019e", "url": "https://github.com/apache/hive/commit/298d29a3592abcaa7b9c8658369b771ab164019e", "message": "HIVE-23973: Use SQL constraints to improve join reordering algorithm (III)", "committedDate": "2020-08-02T18:02:32Z", "type": "commit"}, {"oid": "298d29a3592abcaa7b9c8658369b771ab164019e", "url": "https://github.com/apache/hive/commit/298d29a3592abcaa7b9c8658369b771ab164019e", "message": "HIVE-23973: Use SQL constraints to improve join reordering algorithm (III)", "committedDate": "2020-08-02T18:02:32Z", "type": "forcePushed"}, {"oid": "5b2b6f8c344ff30d0a389272bb88fe878f73ea03", "url": "https://github.com/apache/hive/commit/5b2b6f8c344ff30d0a389272bb88fe878f73ea03", "message": "constrain rule application, regenerate q files", "committedDate": "2020-08-03T04:07:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMwOTE1Ng==", "url": "https://github.com/apache/hive/pull/1349#discussion_r464309156", "bodyText": "nit: you can expose the id parameter to the constructor of HiveFilterJoinMergeRule", "author": "kasakrisz", "createdAt": "2020-08-03T09:47:03Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveFilterJoinRule.java", "diffHunk": "@@ -52,14 +55,34 @@ protected HiveFilterJoinRule(RelOptRuleOperand operand, String id, boolean smart\n     super(operand, id, smart, relBuilderFactory, TRUE_PREDICATE);\n   }\n \n+  /**\n+   * Rule that tries to push filter expressions into a join condition and into\n+   * the inputs of the join, iff the join is a column appending\n+   * non-filtering join.\n+   */\n+  public static class HiveFilterNonFilteringJoinMergeRule extends HiveFilterJoinMergeRule {\n+\n+    @Override\n+    public boolean matches(RelOptRuleCall call) {\n+      Join join = call.rel(1);\n+      RewritablePKFKJoinInfo joinInfo = HiveRelOptUtil.isRewritablePKFKJoin(\n+          join, true, call.getMetadataQuery());\n+      if (!joinInfo.rewritable) {\n+        return false;\n+      }\n+      return super.matches(call);\n+    }\n+\n+  }\n+\n   /**\n    * Rule that tries to push filter expressions into a join condition and into\n    * the inputs of the join.\n    */\n   public static class HiveFilterJoinMergeRule extends HiveFilterJoinRule {\n     public HiveFilterJoinMergeRule() {\n-      super(RelOptRule.operand(Filter.class, RelOptRule.operand(Join.class, RelOptRule.any())),\n-          \"HiveFilterJoinRule:filter\", true, HiveRelFactories.HIVE_BUILDER);\n+      super(operand(Filter.class, operand(Join.class, any())),\n+          null, true, HiveRelFactories.HIVE_BUILDER);", "originalCommit": "5b2b6f8c344ff30d0a389272bb88fe878f73ea03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}