{"pr_number": 1675, "pr_title": "HIVE-23197", "pr_createdAt": "2020-11-16T10:27:16Z", "pr_url": "https://github.com/apache/hive/pull/1675", "timeline": [{"oid": "d3e8ff5605606d8c60ffc38a59374bb4cea4b1c9", "url": "https://github.com/apache/hive/commit/d3e8ff5605606d8c60ffc38a59374bb4cea4b1c9", "message": "HIVE-23197: Implement selective purge for LRFU\n\nChange-Id: If4b6b20ce31d844318b6310db476af87216cbea4", "committedDate": "2020-11-16T10:26:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5MDk0OQ==", "url": "https://github.com/apache/hive/pull/1675#discussion_r524090949", "bodyText": "Why is this?", "author": "pvary", "createdAt": "2020-11-16T10:30:34Z", "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelLrfuCachePolicy.java", "diffHunk": "@@ -147,7 +152,9 @@ public void notifyLock(LlapCacheableBuffer buffer) {\n \n   @Override\n   public void notifyUnlock(LlapCacheableBuffer buffer) {\n-\n+    if (proactiveEvictionEnabled) {", "originalCommit": "d3e8ff5605606d8c60ffc38a59374bb4cea4b1c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5NDAwNg==", "url": "https://github.com/apache/hive/pull/1675#discussion_r524094006", "bodyText": "notifyUnlock(buffer) is invoked whenever a buffer was accessed (and the read from it has been finished)\nThis here covers a very rare scenario, details in the test here: https://github.com/apache/hive/pull/1675/files#diff-826be47ae17dbe2de96b3a40cf13fcc40604c5f630fd95d2732a646318ef33d4R307-R311", "author": "szlta", "createdAt": "2020-11-16T10:33:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5MDk0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5NjEyMg==", "url": "https://github.com/apache/hive/pull/1675#discussion_r524096122", "bodyText": "Maybe add a comment, if we have to push any changes?", "author": "pvary", "createdAt": "2020-11-16T10:35:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5MDk0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5NzQyOA==", "url": "https://github.com/apache/hive/pull/1675#discussion_r524097428", "bodyText": "ok", "author": "szlta", "createdAt": "2020-11-16T10:36:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5MDk0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEyMjkyMw==", "url": "https://github.com/apache/hive/pull/1675#discussion_r524122923", "bodyText": "Have I told you that I hate continue?\nThis is basically an if/else in disguise :(", "author": "pvary", "createdAt": "2020-11-16T10:59:43Z", "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelLrfuCachePolicy.java", "diffHunk": "@@ -240,18 +247,38 @@ public void setEvictionListener(EvictionListener listener) {\n     this.evictionListener = listener;\n   }\n \n-  @Override\n-  public long purge() {\n+  private long evictOrPurge(boolean isPurge) {\n     long evicted = 0;\n     LlapCacheableBuffer oldTail;\n     listLock.lock();\n     try {\n       LlapCacheableBuffer current = listTail;\n+      LlapCacheableBuffer lockedHead = null;\n+      LlapCacheableBuffer lockedTail = null;\n       oldTail = listTail;\n       while (current != null) {\n-        boolean canEvict = LlapCacheableBuffer.INVALIDATE_OK == current.invalidate();\n+        // Case for when there is proactive eviction, but current buffer is not marked -> thus need to be kept\n+        if (!isPurge && !current.isMarkedForEviction()) {\n+          LlapCacheableBuffer newCurrent = current.prev;\n+          oldTail = removeFromLocalList(oldTail, current);\n+\n+          current.indexInHeap = LlapCacheableBuffer.IN_LIST;\n+          if (lockedHead != null) {\n+            current.next = lockedHead;\n+            lockedHead.prev = current;\n+            lockedHead = current;\n+          } else {\n+            lockedHead = current;\n+            lockedTail = current;\n+            current.next = null;\n+          }\n+\n+          current = newCurrent;\n+          continue;", "originalCommit": "d3e8ff5605606d8c60ffc38a59374bb4cea4b1c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a47608910a7c0c31a8f309c88574edae96483c4e", "url": "https://github.com/apache/hive/commit/a47608910a7c0c31a8f309c88574edae96483c4e", "message": "Fixing maintaining memory manager state\n\nChange-Id: I6f0604a38d26b3bd7f52afc1ea4cd0cac8a2b109", "committedDate": "2020-11-17T10:42:56Z", "type": "commit"}]}