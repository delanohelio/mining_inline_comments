{"pr_number": 1209, "pr_title": "HIVE-22412: StatsUtils throw NPE when explain", "pr_createdAt": "2020-07-06T13:21:45Z", "pr_url": "https://github.com/apache/hive/pull/1209", "timeline": [{"oid": "2d05e44f56ffaf67e0876b54503c7ffa222c0569", "url": "https://github.com/apache/hive/commit/2d05e44f56ffaf67e0876b54503c7ffa222c0569", "message": "HIVE-22412: StatsUtils throw NPE when explain", "committedDate": "2020-07-06T13:11:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1NTcxNw==", "url": "https://github.com/apache/hive/pull/1209#discussion_r450655717", "bodyText": "please remove this and similar conditionals.... a map which is NULL is not EMPTY!\nthis should be fixed in StatsUtils", "author": "kgyrtkirk", "createdAt": "2020-07-07T07:13:05Z", "path": "serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/StandardConstantMapObjectInspector.java", "diffHunk": "@@ -40,8 +41,10 @@ protected StandardConstantMapObjectInspector() {\n    */\n    protected StandardConstantMapObjectInspector(ObjectInspector mapKeyObjectInspector,\n        ObjectInspector mapValueObjectInspector, Map<?, ?> value) {\n-    super(mapKeyObjectInspector, mapValueObjectInspector);\n-    this.value = value;\n+     super(mapKeyObjectInspector, mapValueObjectInspector);\n+     if (null != value) {", "originalCommit": "2d05e44f56ffaf67e0876b54503c7ffa222c0569", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2d252e3de5aca47cba6e7f2496ba2d6e22884905", "url": "https://github.com/apache/hive/commit/2d252e3de5aca47cba6e7f2496ba2d6e22884905", "message": "HIVE-22412: StatsUtils throw NPE when explain", "committedDate": "2020-07-07T11:31:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng==", "url": "https://github.com/apache/hive/pull/1209#discussion_r450931946", "bodyText": "This changes the behavior of the existing code.\nAn empty map may return a value greater than 0 further down in this method:\n// A result may be > 0, even with an empty map, because of the map's overhead\nresult += JavaDataModel.get().hashMap(map.entrySet().size());", "author": "belugabehr", "createdAt": "2020-07-07T14:59:48Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/stats/StatsUtils.java", "diffHunk": "@@ -1336,6 +1341,9 @@ public static long getSizeOfPrimitiveTypeArraysFromType(String colType, int leng\n    */\n   public static long getSizeOfMap(StandardConstantMapObjectInspector scmoi) {\n     Map<?, ?> map = scmoi.getWritableConstantValue();\n+    if (null == map || map.isEmpty()) {\n+      return 0L;\n+    }", "originalCommit": "2d252e3de5aca47cba6e7f2496ba2d6e22884905", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMjQ2Mg==", "url": "https://github.com/apache/hive/pull/1209#discussion_r451232462", "bodyText": "Thanks for your review, maybe we can return it like this:\nMap<?, ?> map = scmoi.getWritableConstantValue();\n    if (null == map || map.isEmpty()) {\n      return JavaDataModel.get().hashMap(0);\n    }", "author": "StefanXiepj", "createdAt": "2020-07-08T01:34:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0MjI4NQ==", "url": "https://github.com/apache/hive/pull/1209#discussion_r451242285", "bodyText": "I'm actually not sure what the correct behavior is here for a 'null' Map.  I'd have to dig in more to see if there is already precedence for that.  I just know that the current proposal is not correct.  Maybe someone else can weigh in on the correct handling of a null value.", "author": "belugabehr", "createdAt": "2020-07-08T02:12:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2MDAzNQ==", "url": "https://github.com/apache/hive/pull/1209#discussion_r451260035", "bodyText": "We can ask the original author's opinion, maybe he has a better idea.\nHi @prasanthj , Could you help me review it ?", "author": "StefanXiepj", "createdAt": "2020-07-08T03:24:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjExNzEyMg==", "url": "https://github.com/apache/hive/pull/1209#discussion_r452117122", "bodyText": "I think it will be ok\ncalculating with the size of an empty hashmap is an overestimation of the space needed to represent null - so we are making mistakes in the right direction....", "author": "kgyrtkirk", "createdAt": "2020-07-09T10:22:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0NzUxMg==", "url": "https://github.com/apache/hive/pull/1209#discussion_r452247512", "bodyText": "@kgyrtkirk I think a 'null' map can be size zero.  But any empty map is different and should probably include the overheard size (and not change the current behavior as part of this JIRA).", "author": "belugabehr", "createdAt": "2020-07-09T14:11:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1MTkwMg==", "url": "https://github.com/apache/hive/pull/1209#discussion_r452251902", "bodyText": "wasn't the old behaviour an exception? :D\nI think anything is better than that...for null it can be 0 as well; but in any case for empty stuff it may never be 0", "author": "kgyrtkirk", "createdAt": "2020-07-09T14:17:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1NDU3Ng==", "url": "https://github.com/apache/hive/pull/1209#discussion_r452254576", "bodyText": "@kgyrtkirk As I understand it, the issue was with 'null' value, not empty maps.  The code in master branch returns a value (probably 4) to account for the overhead of having a map, even if it's empty.\nWhat I am proposing is:\n    if (null == map) {\n      return 0L;\n    }\n   // otherwise, do the other/old/current stuff...", "author": "belugabehr", "createdAt": "2020-07-09T14:21:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2MzE4Mg==", "url": "https://github.com/apache/hive/pull/1209#discussion_r452263182", "bodyText": "oh, sorry!...\nof course; that perfectly makes sense!", "author": "kgyrtkirk", "createdAt": "2020-07-09T14:33:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY5MjkxNg==", "url": "https://github.com/apache/hive/pull/1209#discussion_r452692916", "bodyText": "@StefanXiepj could you update that if according @belugabehr 's proposal?", "author": "kgyrtkirk", "createdAt": "2020-07-10T08:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4OTUwNQ==", "url": "https://github.com/apache/hive/pull/1209#discussion_r452889505", "bodyText": "@belugabehr & @kgyrtkirk , I agree entirely with you!  It have been updated.", "author": "StefanXiepj", "createdAt": "2020-07-10T14:45:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTk0Ng=="}], "type": "inlineReview"}, {"oid": "d04a277ee8b705bc2d03119039a31bb3830147c3", "url": "https://github.com/apache/hive/commit/d04a277ee8b705bc2d03119039a31bb3830147c3", "message": "fix some bugs", "committedDate": "2020-07-08T01:31:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjExNTUwMw==", "url": "https://github.com/apache/hive/pull/1209#discussion_r452115503", "bodyText": "At some point we will add rules to enforce coding style...but until then:\nwe can have these 2 new spaces in the Hive codebase - we can't have enough of them :)\nEDIT: I've just noticed that this; in fact corrects the indentation!", "author": "kgyrtkirk", "createdAt": "2020-07-09T10:19:00Z", "path": "serde/src/java/org/apache/hadoop/hive/serde2/objectinspector/StandardConstantMapObjectInspector.java", "diffHunk": "@@ -40,8 +40,8 @@ protected StandardConstantMapObjectInspector() {\n    */\n    protected StandardConstantMapObjectInspector(ObjectInspector mapKeyObjectInspector,\n        ObjectInspector mapValueObjectInspector, Map<?, ?> value) {\n-    super(mapKeyObjectInspector, mapValueObjectInspector);\n-    this.value = value;\n+     super(mapKeyObjectInspector, mapValueObjectInspector);", "originalCommit": "d04a277ee8b705bc2d03119039a31bb3830147c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2MzIyNg==", "url": "https://github.com/apache/hive/pull/1209#discussion_r453263226", "bodyText": "Looking forward into master branch.", "author": "StefanXiepj", "createdAt": "2020-07-12T03:52:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjExNTUwMw=="}], "type": "inlineReview"}, {"oid": "181f4cb697a5445a161f835f76235fb626108a75", "url": "https://github.com/apache/hive/commit/181f4cb697a5445a161f835f76235fb626108a75", "message": "HIVE-22412: StatsUtils throw NPE when explain", "committedDate": "2020-07-10T14:36:59Z", "type": "commit"}]}