{"pr_number": 1380, "pr_title": "Show tables in database with owner policy", "pr_createdAt": "2020-08-07T15:28:26Z", "pr_url": "https://github.com/apache/hive/pull/1380", "timeline": [{"oid": "078e37916a49268810b44d110d77632160e7faa5", "url": "https://github.com/apache/hive/commit/078e37916a49268810b44d110d77632160e7faa5", "message": "Show tables in database with owner policy", "committedDate": "2020-08-07T15:17:10Z", "type": "commit"}, {"oid": "9b1250d98e5209c05d2a5612deeaf1f2c973dc89", "url": "https://github.com/apache/hive/commit/9b1250d98e5209c05d2a5612deeaf1f2c973dc89", "message": "Trigger ptests", "committedDate": "2020-08-07T18:22:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU0MTA4MQ==", "url": "https://github.com/apache/hive/pull/1380#discussion_r480541081", "bodyText": "Better follow the same pattern as the original function, return at the end.", "author": "yongzhi", "createdAt": "2020-09-01T01:17:55Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java", "diffHunk": "@@ -5695,8 +5695,16 @@ private void alter_table_core(String catName, String dbname, String name, Table\n       String[] parsedDbName = parseDbName(dbname, conf);\n       try {\n         ret = getMS().getTables(parsedDbName[CAT_NAME], parsedDbName[DB_NAME], pattern);\n-        ret = FilterUtils.filterTableNamesIfEnabled(isServerFilterEnabled, filterHook,\n-            parsedDbName[CAT_NAME], parsedDbName[DB_NAME], ret);\n+        if(ret !=  null && !ret.isEmpty()) {\n+          List<Table> tableInfo = new ArrayList<>();\n+          tableInfo = getMS().getTableObjectsByName(parsedDbName[CAT_NAME], parsedDbName[DB_NAME], ret);\n+          tableInfo = FilterUtils.filterTablesIfEnabled(isServerFilterEnabled, filterHook, tableInfo);\n+          List<String> result = new ArrayList<>(); // Cannot do ret.clear() because of query cannot be modified error in tests.\n+          for (Table tbl : tableInfo) {\n+            result.add(tbl.getTableName());\n+          }\n+          return result;", "originalCommit": "078e37916a49268810b44d110d77632160e7faa5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU1NDM4Mw==", "url": "https://github.com/apache/hive/pull/1380#discussion_r480554383", "bodyText": "Please add comments on why you pass-in tableInfo objects", "author": "yongzhi", "createdAt": "2020-09-01T01:30:18Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java", "diffHunk": "@@ -5695,8 +5695,16 @@ private void alter_table_core(String catName, String dbname, String name, Table\n       String[] parsedDbName = parseDbName(dbname, conf);\n       try {\n         ret = getMS().getTables(parsedDbName[CAT_NAME], parsedDbName[DB_NAME], pattern);\n-        ret = FilterUtils.filterTableNamesIfEnabled(isServerFilterEnabled, filterHook,\n-            parsedDbName[CAT_NAME], parsedDbName[DB_NAME], ret);\n+        if(ret !=  null && !ret.isEmpty()) {\n+          List<Table> tableInfo = new ArrayList<>();\n+          tableInfo = getMS().getTableObjectsByName(parsedDbName[CAT_NAME], parsedDbName[DB_NAME], ret);\n+          tableInfo = FilterUtils.filterTablesIfEnabled(isServerFilterEnabled, filterHook, tableInfo);", "originalCommit": "078e37916a49268810b44d110d77632160e7faa5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU1ODM4OQ==", "url": "https://github.com/apache/hive/pull/1380#discussion_r480558389", "bodyText": "Not quite understand the comment.  Maybe ret = new ArrayList<>();   good enough?", "author": "yongzhi", "createdAt": "2020-09-01T01:33:55Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java", "diffHunk": "@@ -5695,8 +5695,16 @@ private void alter_table_core(String catName, String dbname, String name, Table\n       String[] parsedDbName = parseDbName(dbname, conf);\n       try {\n         ret = getMS().getTables(parsedDbName[CAT_NAME], parsedDbName[DB_NAME], pattern);\n-        ret = FilterUtils.filterTableNamesIfEnabled(isServerFilterEnabled, filterHook,\n-            parsedDbName[CAT_NAME], parsedDbName[DB_NAME], ret);\n+        if(ret !=  null && !ret.isEmpty()) {\n+          List<Table> tableInfo = new ArrayList<>();\n+          tableInfo = getMS().getTableObjectsByName(parsedDbName[CAT_NAME], parsedDbName[DB_NAME], ret);\n+          tableInfo = FilterUtils.filterTablesIfEnabled(isServerFilterEnabled, filterHook, tableInfo);\n+          List<String> result = new ArrayList<>(); // Cannot do ret.clear() because of query cannot be modified error in tests.", "originalCommit": "078e37916a49268810b44d110d77632160e7faa5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU1OTgxMw==", "url": "https://github.com/apache/hive/pull/1380#discussion_r480559813", "bodyText": "Is that possible also to assert on owner related values?", "author": "yongzhi", "createdAt": "2020-09-01T01:35:17Z", "path": "itests/hive-unit/src/test/java/org/apache/hadoop/hive/ql/security/authorization/plugin/TestHiveAuthorizerCheckInvocation.java", "diffHunk": "@@ -600,6 +600,22 @@ public void testReplDump() throws Exception {\n     assertEquals(\"table name\", inDbTableName.toLowerCase(), dbObj.getObjectName());\n   }\n \n+  @Test\n+  public void showTablesInDB() throws Exception{\n+    final String tableName1 = \"table1\";\n+    driver.run(\"create table \" + dbName+\".\"+tableName1 + \"(eid int, yoj int)\");\n+    final String tableName2 = \"table2\";\n+    driver.run(\"create table \" + dbName+\".\"+tableName2 + \"(eid int, ecode int)\");\n+    reset(mockedAuthorizer);\n+\n+    int status = driver.compile(\"show tables in \"+dbName, true);\n+    assertEquals(0, status);\n+    Pair<List<HivePrivilegeObject>, List<HivePrivilegeObject>> io = getHivePrivilegeObjectInputs();\n+    List<HivePrivilegeObject> inputs = io.getLeft();\n+    HivePrivilegeObject dbObj = inputs.get(0);\n+    assertEquals(\"input type\", HivePrivilegeObjectType.DATABASE, dbObj.getType());", "originalCommit": "078e37916a49268810b44d110d77632160e7faa5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3OTY3Ng==", "url": "https://github.com/apache/hive/pull/1380#discussion_r499079676", "bodyText": "I have added the assert on owner info.", "author": "saihemanth-cloudera", "createdAt": "2020-10-02T22:48:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU1OTgxMw=="}], "type": "inlineReview"}, {"oid": "19098453d9918d0b05156c8b2be2fd2f41943bde", "url": "https://github.com/apache/hive/commit/19098453d9918d0b05156c8b2be2fd2f41943bde", "message": "HIVE-23969: Show tables in database with owner policy", "committedDate": "2020-10-02T22:20:14Z", "type": "commit"}, {"oid": "be2eb65d339e928a3adda67d2def4d6220245458", "url": "https://github.com/apache/hive/commit/be2eb65d339e928a3adda67d2def4d6220245458", "message": "Merge branch 'master' into hive23969", "committedDate": "2020-10-02T22:27:27Z", "type": "commit"}, {"oid": "31ae71e07d3b529d2f3f498d8a4dc9db41c456d4", "url": "https://github.com/apache/hive/commit/31ae71e07d3b529d2f3f498d8a4dc9db41c456d4", "message": "Merge branch 'hive23969' of https://github.com/saihemanth-cloudera/hive into hive23969", "committedDate": "2020-10-02T22:41:42Z", "type": "commit"}, {"oid": "f7090f910a4ae946ec023ad4dd8f5504c8cd13cc", "url": "https://github.com/apache/hive/commit/f7090f910a4ae946ec023ad4dd8f5504c8cd13cc", "message": "Trigger ptests again", "committedDate": "2020-10-03T17:30:15Z", "type": "commit"}, {"oid": "11f918d212702e895ef2e95b404330ef6f9c94ef", "url": "https://github.com/apache/hive/commit/11f918d212702e895ef2e95b404330ef6f9c94ef", "message": "Trigger ptests again", "committedDate": "2020-10-04T02:09:35Z", "type": "commit"}]}