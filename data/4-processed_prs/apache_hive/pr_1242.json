{"pr_number": 1242, "pr_title": "HIVE-20441: NPE in GenericUDF when hive.allow.udf.load.on.demand is s\u2026", "pr_createdAt": "2020-07-13T08:55:00Z", "pr_url": "https://github.com/apache/hive/pull/1242", "timeline": [{"oid": "c3e7a3b271c250798d92fb989d866c70866b4dce", "url": "https://github.com/apache/hive/commit/c3e7a3b271c250798d92fb989d866c70866b4dce", "message": "HIVE-20441: NPE in GenericUDF when hive.allow.udf.load.on.demand is set to true", "committedDate": "2020-07-13T08:53:06Z", "type": "commit"}, {"oid": "3ad807aa2a0e874ed011c2d7ec046e3242b2c195", "url": "https://github.com/apache/hive/commit/3ad807aa2a0e874ed011c2d7ec046e3242b2c195", "message": "fix username", "committedDate": "2020-07-13T12:46:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIwMjcwOQ==", "url": "https://github.com/apache/hive/pull/1242#discussion_r457202709", "bodyText": "I tried to understand the goal of the change, but could not find the root cause, and do not see what I miss.\nCould you please explain when this code results in different return value before and after the patch?", "author": "pvary", "createdAt": "2020-07-20T09:07:49Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/Registry.java", "diffHunk": "@@ -293,9 +293,10 @@ public FunctionInfo registerPermanentFunction(String functionName,\n     if (registerToSession) {\n       String qualifiedName = FunctionUtils.qualifyFunctionName(\n           functionName, SessionState.get().getCurrentDatabase().toLowerCase());\n-      if (registerToSessionRegistry(qualifiedName, function) != null) {\n+      FunctionInfo newFunction = registerToSessionRegistry(qualifiedName, function);", "originalCommit": "3ad807aa2a0e874ed011c2d7ec046e3242b2c195", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI0ODYwNw==", "url": "https://github.com/apache/hive/pull/1242#discussion_r457248607", "bodyText": "The call FunctionRegistry.getFunctionInfo(String functionName) will make HS2 lookup the function from MetaStore when the function does not find in the session or system registry with hive.allow.udf.load.on.demand enabled. If the function is found, a FunctionInfo created by new FunctionInfo(functionName, className, resources) will be returned, but the genericUDF field of the FunctionInfo is null,\n\n  \n    \n      hive/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionInfo.java\n    \n    \n        Lines 67 to 74\n      in\n      fa086ec\n    \n    \n    \n    \n\n        \n          \n           public FunctionInfo(String displayName, String className, FunctionResource... resources) { \n        \n\n        \n          \n             this.functionType = FunctionType.PERSISTENT; \n        \n\n        \n          \n             this.displayName = displayName; \n        \n\n        \n          \n             this.className = className; \n        \n\n        \n          \n             this.isInternalTableFunction = false; \n        \n\n        \n          \n             this.resources = resources; \n        \n\n        \n          \n             this.discarded = new AtomicBoolean(false);  // shared to all session functions \n        \n\n        \n          \n           } \n        \n    \n  \n\n .\nSo when TypeCheckProcFactory.DefaultExprProcessor gets function expr from AstNode,\n\n  \n    \n      hive/ql/src/java/org/apache/hadoop/hive/ql/parse/type/TypeCheckProcFactory.java\n    \n    \n        Lines 935 to 948\n      in\n      fa086ec\n    \n    \n    \n    \n\n        \n          \n           FunctionInfo fi = FunctionRegistry.getFunctionInfo(funcText); \n        \n\n        \n          \n            \n        \n\n        \n          \n           if (fi == null) { \n        \n\n        \n          \n             if (isFunction) { \n        \n\n        \n          \n               throw new SemanticException(ASTErrorUtils.getMsg( \n        \n\n        \n          \n                   ErrorMsg.INVALID_FUNCTION.getMsg(), (ASTNode) node.getChild(0))); \n        \n\n        \n          \n             } else { \n        \n\n        \n          \n               throw new SemanticException(ASTErrorUtils.getMsg( \n        \n\n        \n          \n                   ErrorMsg.INVALID_FUNCTION.getMsg(), node)); \n        \n\n        \n          \n             } \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           // getGenericUDF() actually clones the UDF. Just call it once and reuse. \n        \n\n        \n          \n           GenericUDF genericUDF = fi.getGenericUDF(); \n        \n    \n  \n\n,  The genericUDF got from GenericUDF genericUDF = fi.getGenericUDF();  is null,  if the genericUDF is used to create function expr desc afterwards, a npe will be thrown.\n\n  \n    \n      hive/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionInfo.java\n    \n    \n        Lines 117 to 123\n      in\n      fa086ec\n    \n    \n    \n    \n\n        \n          \n           public GenericUDF getGenericUDF() { \n        \n\n        \n          \n             // GenericUDF is stateful - we have to make a copy here \n        \n\n        \n          \n             if (genericUDF == null) { \n        \n\n        \n          \n               return null; \n        \n\n        \n          \n             } \n        \n\n        \n          \n             return FunctionRegistry.cloneGenericUDF(genericUDF); \n        \n\n        \n          \n           }", "author": "dengzhhu653", "createdAt": "2020-07-20T10:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIwMjcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI1NTY5Mg==", "url": "https://github.com/apache/hive/pull/1242#discussion_r457255692", "bodyText": "registerToSessionRegistry will finally initialize the genericUDF by calling FunctionInfo(FunctionType functionType, String displayName, GenericUDF genericUDF, FunctionResource... resources) \n  \n    \n      hive/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionInfo.java\n    \n    \n        Lines 76 to 83\n      in\n      fa086ec\n    \n    \n    \n    \n\n        \n          \n           public FunctionInfo(FunctionType functionType, String displayName, \n        \n\n        \n          \n               GenericUDF genericUDF, FunctionResource... resources) { \n        \n\n        \n          \n             this.functionType = functionType; \n        \n\n        \n          \n             this.displayName = displayName; \n        \n\n        \n          \n             this.genericUDF = genericUDF; \n        \n\n        \n          \n             this.isInternalTableFunction = false; \n        \n\n        \n          \n             this.resources = resources; \n        \n\n        \n          \n           } \n        \n    \n  \n\n, The genericUDF field  of  FunctionInfo returned by this call would not be null.", "author": "dengzhhu653", "createdAt": "2020-07-20T10:21:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIwMjcwOQ=="}], "type": "inlineReview"}]}