{"pr_number": 687, "pr_title": "merge Release 2.6.0", "pr_createdAt": "2020-08-10T09:20:43Z", "pr_url": "https://github.com/FISCO-BCOS/web3sdk/pull/687", "timeline": [{"oid": "edc0e1da4af214c17fb4b8dc5619c75bd9f7c8bc", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/edc0e1da4af214c17fb4b8dc5619c75bd9f7c8bc", "message": "add SDK_PERMISSION_DENIED", "committedDate": "2020-06-20T02:11:14Z", "type": "commit"}, {"oid": "9eee899faea69e803ab463c20632368af608efb4", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/9eee899faea69e803ab463c20632368af608efb4", "message": "add getBlockHeaderByHash and getBlockHeaderByNumber rpc interface", "committedDate": "2020-06-22T07:57:37Z", "type": "commit"}, {"oid": "317db3800cb3ab740c87728edb109827a503d468", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/317db3800cb3ab740c87728edb109827a503d468", "message": "Merge pull request #652 from ywy2090/dev-new\n\nadd getBlockHeaderByHash and getBlockHeaderByNumber rpc interface", "committedDate": "2020-06-23T02:14:12Z", "type": "commit"}, {"oid": "0f85ee8ed985305cb74675f3cca4ba2e4eedf5d9", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/0f85ee8ed985305cb74675f3cca4ba2e4eedf5d9", "message": "Adapt to IPv6", "committedDate": "2020-06-28T09:21:58Z", "type": "commit"}, {"oid": "4e82d768666a90a1339334702ba13cdcad2e8d78", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/4e82d768666a90a1339334702ba13cdcad2e8d78", "message": "Merge pull request #668 from sulenn/dev\n\nAdapt to IPv6", "committedDate": "2020-06-29T06:52:00Z", "type": "commit"}, {"oid": "5de23d23634bee0f9bc1f99e7c9b3b94c5245c9b", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/5de23d23634bee0f9bc1f99e7c9b3b94c5245c9b", "message": "update deps\n\nadd default certificate configuration for SM SSL\n\nTypeEncode to public", "committedDate": "2020-07-03T08:40:15Z", "type": "commit"}, {"oid": "594b57f65d54d8bab27eb27119dbbbc5c62f1145", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/594b57f65d54d8bab27eb27119dbbbc5c62f1145", "message": "Merge pull request #676 from ywy2090/release-2.6.0-origin\n\nupdate deps", "committedDate": "2020-07-03T08:55:15Z", "type": "commit"}, {"oid": "1b4a5915ff335060d9ca7f824e645917ca95ed00", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/1b4a5915ff335060d9ca7f824e645917ca95ed00", "message": "add sm binary code to Java contract", "committedDate": "2020-07-07T15:49:40Z", "type": "commit"}, {"oid": "bfcbb56290658513ffbf63c8490f4a4588c529ae", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/bfcbb56290658513ffbf63c8490f4a4588c529ae", "message": "Merge pull request #678 from ywy2090/release-2.6.0-origin\n\nadd sm binary code to Java contract", "committedDate": "2020-07-08T02:51:14Z", "type": "commit"}, {"oid": "a736639b776f84cb714159f5ea8c0b309635b3c3", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a736639b776f84cb714159f5ea8c0b309635b3c3", "message": "Fix the problem that web3sdk cannot connect to IPv6 node probabilistically", "committedDate": "2020-07-09T11:04:35Z", "type": "commit"}, {"oid": "a902641c80af62ef567b84519f43aa280232fb03", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a902641c80af62ef567b84519f43aa280232fb03", "message": "Merge pull request #673 from sulenn/dev\n\nFix connection problem for ipv6 peer", "committedDate": "2020-07-09T11:51:26Z", "type": "commit"}, {"oid": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/6c0c0bc7d04bedac383b4082a00050831ddda07b", "message": "add abi codec module", "committedDate": "2020-07-20T02:35:50Z", "type": "commit"}, {"oid": "89baa3781e017272c0b37f5e5be5805cce47aa69", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/89baa3781e017272c0b37f5e5be5805cce47aa69", "message": "Merge pull request #679 from ywy2090/release-2.6.0-origin\n\nadd abi codec module", "committedDate": "2020-07-28T11:00:13Z", "type": "commit"}, {"oid": "7e61958adc320bc49ce20b2cc722297285b6e891", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/7e61958adc320bc49ce20b2cc722297285b6e891", "message": "Modify the SSL connection engine to opensSL", "committedDate": "2020-08-05T07:41:59Z", "type": "commit"}, {"oid": "539f0eb0138880da91c8501683d99f364d8d0f8c", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/539f0eb0138880da91c8501683d99f364d8d0f8c", "message": "update tcnative version", "committedDate": "2020-08-05T08:05:05Z", "type": "commit"}, {"oid": "3913a5946fcd7c470d1451a26d02d3e1b33c72cb", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/3913a5946fcd7c470d1451a26d02d3e1b33c72cb", "message": "update ci_check.sh", "committedDate": "2020-08-06T02:18:40Z", "type": "commit"}, {"oid": "3159989a32b32b7500022c3a8bb36e2acd685705", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/3159989a32b32b7500022c3a8bb36e2acd685705", "message": "Merge pull request #684 from ywy2090/release-2.6.0-openssl\n\nModify the SSL connection engine to opensSL", "committedDate": "2020-08-06T02:27:58Z", "type": "commit"}, {"oid": "c8367908cd117ce4a76950d7790697a88cc79832", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/c8367908cd117ce4a76950d7790697a88cc79832", "message": "print handshake fail reason", "committedDate": "2020-08-06T02:29:04Z", "type": "commit"}, {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "message": "Merge pull request #685 from chaychen2005/release-2.6.0\n\nprint handshake fail reason", "committedDate": "2020-08-06T03:03:15Z", "type": "commit"}, {"oid": "7d1ed64c07e69b303c19a5e2a0dfbb09daf343dd", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/7d1ed64c07e69b303c19a5e2a0dfbb09daf343dd", "message": "fix bug of print handshake fail", "committedDate": "2020-08-10T09:17:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQxMg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782412", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:35Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +254,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQxNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782414", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:36Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +254,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQxNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782416", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:36Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +254,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQxOQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782419", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:36Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQyMg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782422", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:36Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQyNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782424", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:37Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQyNQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782425", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:37Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQyOA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782428", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:37Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQzMA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782430", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:37Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQzMw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782433", "bodyText": "[PMD Java] Found 'DU'-anomaly for variable 'port' (lines '324'-'352'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:37Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +313,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQzNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782434", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:37Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +313,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);\n \n-            if (!Host.validIP(IP)) {\n+            if (!(NetUtil.isValidIpV4Address(IP) || NetUtil.isValidIpV6Address(IP))) {\n+                throw new IllegalArgumentException(\n+                        \" Invalid configuration, invalid IP string format, value: \" + IP);\n+            }\n+\n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQzNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782437", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:38Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +313,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);\n \n-            if (!Host.validIP(IP)) {\n+            if (!(NetUtil.isValidIpV4Address(IP) || NetUtil.isValidIpV6Address(IP))) {\n+                throw new IllegalArgumentException(\n+                        \" Invalid configuration, invalid IP string format, value: \" + IP);\n+            }\n+\n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();\n+            } catch (Exception e) {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782440", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:38Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0Mg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782442", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:38Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0NA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782444", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:38Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782446", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:38Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0Nw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782447", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:38Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()\n+                && gmEnSslResource.exists()) {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782450", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:39Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +569,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1MQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782451", "bodyText": "[PMD Java] Found 'DU'-anomaly for variable 'caResource' (lines '574'-'630'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:39Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +569,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1NA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782454", "bodyText": "[PMD Java] Avoid throwing raw exception types. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidThrowingRawExceptionTypes\nDesign\n1\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:39Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +569,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1NQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782455", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:39Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +569,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(\n+                            (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1Nw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782457", "bodyText": "[PMD Java] Found 'DD'-anomaly for variable 'peer' (lines '637'-'637'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:39Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -568,9 +633,9 @@ public void heartbeat() {\n \n         List<Tuple2<String, ChannelHandlerContext>> tuple2List = new ArrayList<>();\n \n-        for (ConnectionInfo connectionInfo : connections) {\n-            String peer = connectionInfo.getHost() + \":\" + connectionInfo.getPort();\n-            ChannelHandlerContext ctx = networkConnections.get(peer);\n+        for (Map.Entry<String, ChannelHandlerContext> entry : networkConnections.entrySet()) {\n+            String peer = entry.getKey();", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1OQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782459", "bodyText": "[PMD Java] Found 'DU'-anomaly for variable 'peer' (lines '637'-'650'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:40Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -568,9 +633,9 @@ public void heartbeat() {\n \n         List<Tuple2<String, ChannelHandlerContext>> tuple2List = new ArrayList<>();\n \n-        for (ConnectionInfo connectionInfo : connections) {\n-            String peer = connectionInfo.getHost() + \":\" + connectionInfo.getPort();\n-            ChannelHandlerContext ctx = networkConnections.get(peer);\n+        for (Map.Entry<String, ChannelHandlerContext> entry : networkConnections.entrySet()) {\n+            String peer = entry.getKey();", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ2MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782460", "bodyText": "[PMD Java] The method 'decode(String, int, Class)' has a cyclomatic complexity of 10. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:40Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/TypeDecoder.java", "diffHunk": "@@ -36,7 +36,7 @@\n     static final int MAX_BYTE_LENGTH_FOR_HEX_STRING = Type.MAX_BYTE_LENGTH << 1;\n \n     @SuppressWarnings(\"unchecked\")\n-    static <T extends Type> T decode(String input, int offset, Class<T> type) {\n+    public static <T extends Type> T decode(String input, int offset, Class<T> type) {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ2Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782463", "bodyText": "[PMD Java] The class 'ABICodecJsonWrapper' has a total cyclomatic complexity of 80 (highest 35). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:40Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ2NQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782465", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:40Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ2Nw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782467", "bodyText": "[PMD Java] Private field 'objectMapper' could be made final; it is only initialized in the declaration or constructor. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nImmutableField\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#immutablefield\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:40Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ3MQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782471", "bodyText": "[PMD Java] A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidUncheckedExceptionsInSignatures\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:41Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ3Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782473", "bodyText": "[PMD Java] The method 'encodeNode(String, ABIObject, JsonNode)' has a cyclomatic complexity of 35. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:41Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ3NA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782474", "bodyText": "[PMD Java] Avoid really long methods. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nExcessiveMethodLength\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#excessivemethodlength\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:21:41Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "originalCommit": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "message": "Merge pull request #686 from chaychen2005/release-2.6.0\n\nfix bug of print handshake fail", "committedDate": "2020-08-10T09:29:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE4MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787180", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:39Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +260,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE4NA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787184", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:39Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +260,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE4OA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787188", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:39Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +260,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787190", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:40Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787193", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:40Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5NQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787195", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:40Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787196", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:40Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5OA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787198", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:40Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIwMg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787202", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:40Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIwNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787204", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:41Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +319,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);\n+\n+            if (!(NetUtil.isValidIpV4Address(IP) || NetUtil.isValidIpV6Address(IP))) {\n+                throw new IllegalArgumentException(\n+                        \" Invalid configuration, invalid IP string format, value: \" + IP);\n+            }\n \n-            if (!Host.validIP(IP)) {\n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIwNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787207", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:41Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +319,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);\n+\n+            if (!(NetUtil.isValidIpV4Address(IP) || NetUtil.isValidIpV6Address(IP))) {\n+                throw new IllegalArgumentException(\n+                        \" Invalid configuration, invalid IP string format, value: \" + IP);\n+            }\n \n-            if (!Host.validIP(IP)) {\n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();\n+            } catch (Exception e) {", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIwOQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787209", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:41Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIxMA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787210", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:41Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIxMQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787211", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:41Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIxNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787214", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:41Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIxNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787216", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:41Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()\n+                && gmEnSslResource.exists()) {", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIyMA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787220", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:42Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIyMg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787222", "bodyText": "[PMD Java] Avoid throwing raw exception types. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidThrowingRawExceptionTypes\nDesign\n1\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:42Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIyNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787224", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:42Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(\n+                            (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIyOQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787229", "bodyText": "[PMD Java] The method 'encodeNode(String, ABIObject, JsonNode)' has a NCSS line count of 81. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nNcssCount\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#ncsscount\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:42Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIzMw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787233", "bodyText": "[PMD Java] A high ratio of statements to labels in a switch statement.  Consider refactoring. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchDensity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#switchdensity\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:42Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIzNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787236", "bodyText": "[PMD Java] Switch statements should have a default label (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchStmtsShouldHaveDefault\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:42Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIzOA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787238", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-08-10T09:30:43Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),", "originalCommit": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}