{"pr_number": 3233, "pr_title": "Specify flex as StreetMode instead of TransportMode", "pr_createdAt": "2020-11-04T15:04:26Z", "pr_url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233", "timeline": [{"oid": "b36f82a91663c8bca93dc4ba49a3d8b864f11ea2", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/b36f82a91663c8bca93dc4ba49a3d8b864f11ea2", "message": "Specify flex as StreetMode instead of TransportMode", "committedDate": "2020-11-05T13:42:08Z", "type": "commit"}, {"oid": "0eba997f9b476219c19debae7a5a4eb4372a66f5", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0eba997f9b476219c19debae7a5a4eb4372a66f5", "message": "Only add the earliest itinerary per trip for direct flex", "committedDate": "2020-11-05T13:43:01Z", "type": "commit"}, {"oid": "0eba997f9b476219c19debae7a5a4eb4372a66f5", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0eba997f9b476219c19debae7a5a4eb4372a66f5", "message": "Only add the earliest itinerary per trip for direct flex", "committedDate": "2020-11-05T13:43:01Z", "type": "forcePushed"}, {"oid": "de919f80ad88a0bd38f7e4095de3054a52102ce6", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/de919f80ad88a0bd38f7e4095de3054a52102ce6", "message": "Update documentation", "committedDate": "2020-11-13T13:09:42Z", "type": "commit"}, {"oid": "15cefca9c15421cc0eb8b2ca284b24e3646bcfab", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/15cefca9c15421cc0eb8b2ca284b24e3646bcfab", "message": "Set default RequestModes to access/egress/direct walk", "committedDate": "2020-11-16T09:58:01Z", "type": "commit"}, {"oid": "4bbd037a2ec3aaa042286f7028fee12a739c62ad", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/4bbd037a2ec3aaa042286f7028fee12a739c62ad", "message": "Remove obsolete code in TransmodelGraphQLPlanner", "committedDate": "2020-11-16T09:59:47Z", "type": "commit"}, {"oid": "9abd20a5a8345d6feb0aa9eb0094fab54063a382", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9abd20a5a8345d6feb0aa9eb0094fab54063a382", "message": "Default TransportModes to empty list", "committedDate": "2020-11-16T11:12:53Z", "type": "commit"}, {"oid": "6af58293ca99532c77bb310ee73d04f4c971b963", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6af58293ca99532c77bb310ee73d04f4c971b963", "message": "Merge branch 'dev-2.x' into otp2_flex_as_streetmode", "committedDate": "2020-11-16T11:15:52Z", "type": "commit"}, {"oid": "abb0163345fda14391246b61319cb9ad90a36026", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/abb0163345fda14391246b61319cb9ad90a36026", "message": "Typo in FLEXEGRESS", "committedDate": "2020-11-16T14:56:43Z", "type": "commit"}, {"oid": "685e142f49df00e77037b4f4f28dd2144b1633e1", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/685e142f49df00e77037b4f4f28dd2144b1633e1", "message": "Merge branch 'dev-2.x' into otp2_flex_as_streetmode", "committedDate": "2020-12-02T10:51:00Z", "type": "commit"}, {"oid": "6b5148ee63c8770638ba936ebaa2e08a22050545", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6b5148ee63c8770638ba936ebaa2e08a22050545", "message": "Do not return TripTimesShort from flexible Legs", "committedDate": "2020-12-02T14:21:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA3ODAyMA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r535078020", "bodyText": "Rename to flexibleTrip", "author": "gmellemstrand", "createdAt": "2020-12-03T10:36:16Z", "path": "src/main/java/org/opentripplanner/model/plan/Leg.java", "diffHunk": "@@ -58,6 +58,11 @@\n     */\n    public Boolean realTime = false;\n \n+  /**\n+   * Whether this Leg describes a flexible trip\n+   */\n+  public Boolean flexible = false;", "originalCommit": "6b5148ee63c8770638ba936ebaa2e08a22050545", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA3ODY3OQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r535078679", "bodyText": "Document that the reference to flexibleTrip is lost at this point", "author": "gmellemstrand", "createdAt": "2020-12-03T10:36:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA3ODAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA4OTY5Mg==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r535089692", "bodyText": "Check for otpFeature flexible (also in other places in the code)", "author": "gmellemstrand", "createdAt": "2020-12-03T10:46:58Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -168,9 +205,14 @@ public RoutingResponse route(Router router) {\n                 egressStops\n             );\n ", "originalCommit": "6b5148ee63c8770638ba936ebaa2e08a22050545", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "27e8e3107ce17dc1f0e7a254697f96dd33281b4c", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/27e8e3107ce17dc1f0e7a254697f96dd33281b4c", "message": "Rename flexible to flexibleTrip and document", "committedDate": "2020-12-04T10:16:33Z", "type": "commit"}, {"oid": "3414ec557df7a33ca7392662ac1bfdb305679a2e", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/3414ec557df7a33ca7392662ac1bfdb305679a2e", "message": "Add checks if OTPFeature flexRouting is on", "committedDate": "2020-12-04T10:19:26Z", "type": "commit"}, {"oid": "f50c01b6a789d6949310619888558ac50dc9949e", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f50c01b6a789d6949310619888558ac50dc9949e", "message": "Merge branch 'dev-2.x' into otp2_flex_as_streetmode", "committedDate": "2020-12-04T11:04:06Z", "type": "commit"}, {"oid": "e256b117240a66dcf845931b1e68cf5fd4acd00b", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e256b117240a66dcf845931b1e68cf5fd4acd00b", "message": "Change flex access/egress/direct to be qualified modes in rest api", "committedDate": "2020-12-04T12:09:39Z", "type": "commit"}, {"oid": "121b67c848403e87ad217bfd6cd5153004b287c5", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/121b67c848403e87ad217bfd6cd5153004b287c5", "message": "Update translations", "committedDate": "2020-12-04T12:14:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4NDQwMA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r536084400", "bodyText": "List.of() is preferred instead of Collections.emptyList()", "author": "t2gran", "createdAt": "2020-12-04T13:03:26Z", "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLPlanner.java", "diffHunk": "@@ -188,15 +188,15 @@ private RoutingRequest createRequest(DataFetchingEnvironment environment) {\n             ElementWrapper<StreetMode> accessMode = new ElementWrapper<>();\n             ElementWrapper<StreetMode> egressMode = new ElementWrapper<>();\n             ElementWrapper<StreetMode> directMode = new ElementWrapper<>();\n-            ElementWrapper<ArrayList<TransitMode>> transitModes = new ElementWrapper<>();\n+            ElementWrapper<List<TransitMode>> transitModes = new ElementWrapper<>();\n             callWith.argument(\"modes.accessMode\", accessMode::set);\n             callWith.argument(\"modes.egressMode\", egressMode::set);\n             callWith.argument(\"modes.directMode\", directMode::set);\n             callWith.argument(\"modes.transportMode\", transitModes::set);\n \n             if (transitModes.get() == null) {\n-                // Default to all transport modes if transport modes not specified\n-                transitModes.set(new ArrayList<>(Arrays.asList(TransitMode.values())));\n+                // Default to no transport modes if transport modes not specified\n+                transitModes.set(Collections.emptyList());", "originalCommit": "121b67c848403e87ad217bfd6cd5153004b287c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4NDg5Nw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r536084897", "bodyText": "List.of()", "author": "t2gran", "createdAt": "2020-12-04T13:04:21Z", "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/model/plan/ModeInputType.java", "diffHunk": "@@ -41,9 +46,10 @@\n       .field(GraphQLInputObjectField\n           .newInputObjectField()\n           .name(\"transportMode\")\n+          .defaultValue(Collections.emptyList())", "originalCommit": "121b67c848403e87ad217bfd6cd5153004b287c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyMTUxOQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r536121519", "bodyText": "The routeTransit should give an overview of the transit routing - and delegate as much of the business logic as possible - the FLEX now complicate to main logic a lot and if we introduced another similar concept then it would become hard to understand. Also, people who do not care about FLEX should be able to skip all flex code. The new code in this method is not at the same abstraction level and it need to refactored out. Some of it should maybe be pushed to other classes and some into methods in this class. Enums are compared by equals. Also, the flow is very hard to follow, the check on mode is/is not FLEX is probably a business concept (not DRY) witch should have a name.", "author": "t2gran", "createdAt": "2020-12-04T14:03:48Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -148,29 +164,59 @@ public RoutingResponse route(Router router) {\n         this.debugAggregator.finishedPatternFiltering();\n \n         // Prepare access/egress transfers\n-        Collection<NearbyStop> accessStops = AccessEgressRouter.streetSearch(request, false, 2000);\n-        Collection<NearbyStop> egressStops = AccessEgressRouter.streetSearch(request, true, 2000);\n+        Collection<NearbyStop> accessStops = AccessEgressRouter.streetSearch(\n+            request,\n+            StreetMode.FLEXIBLE.equals(request.modes.accessMode)\n+                ? StreetMode.WALK\n+                : request.modes.accessMode,\n+            false,\n+            2000\n+        );\n+        Collection<NearbyStop> egressStops = AccessEgressRouter.streetSearch(\n+            request,\n+            StreetMode.FLEXIBLE.equals(request.modes.egressMode)\n+                ? StreetMode.WALK\n+                : request.modes.egressMode,\n+            true,\n+            2000\n+        );\n \n         AccessEgressMapper accessEgressMapper = new AccessEgressMapper(transitLayer.getStopIndex());\n-        Collection<AccessEgress> accessTransfers = accessEgressMapper.mapNearbyStops(accessStops, false);\n-        Collection<AccessEgress> egressTransfers = accessEgressMapper.mapNearbyStops(egressStops, true);\n+        Collection<AccessEgress> accessTransfers = new ArrayList<>();\n+        Collection<AccessEgress> egressTransfers = new ArrayList<>();\n \n         List<Itinerary> itineraries = new ArrayList<>();\n \n-        if (OTPFeature.FlexRouting.isOn() && request.modes.transitModes.contains(TransitMode.FLEXIBLE)) {\n-            FlexRouter flexRouter = new FlexRouter(\n-                request.rctx.graph,\n-                request.getDateTime().toInstant(),\n-                request.arriveBy,\n-                ADDITIONAL_SEARCH_DAYS_BEFORE_TODAY,\n-                ADDITIONAL_SEARCH_DAYS_AFTER_TODAY,\n-                accessStops,\n-                egressStops\n-            );\n+        // Add non-flex access transfers\n+        if (!StreetMode.FLEXIBLE.equals(request.modes.accessMode)) {\n+            accessTransfers.addAll(accessEgressMapper.mapNearbyStops(accessStops, false));\n+        }\n+        // Add non-flex egress transfers\n+        if (!StreetMode.FLEXIBLE.equals(request.modes.egressMode)) {\n+            egressTransfers.addAll(accessEgressMapper.mapNearbyStops(egressStops, true));\n+        }\n \n-            itineraries.addAll(flexRouter.createFlexOnlyItineraries());\n-            accessTransfers.addAll(accessEgressMapper.mapFlexAccessEgresses(flexRouter.createFlexAccesses()));\n-            egressTransfers.addAll(accessEgressMapper.mapFlexAccessEgresses(flexRouter.createFlexEgresses()));\n+        if (OTPFeature.FlexRouting.isOn()) {\n+            if (request.modes.contains(StreetMode.FLEXIBLE)) {\n+                FlexRouter flexRouter = new FlexRouter(\n+                    request.rctx.graph,\n+                    request.getDateTime().toInstant(),\n+                    request.arriveBy,\n+                    ADDITIONAL_SEARCH_DAYS_BEFORE_TODAY,\n+                    ADDITIONAL_SEARCH_DAYS_AFTER_TODAY,\n+                    accessStops,\n+                    egressStops\n+                );\n+\n+                // Add flex access transfers\n+                if (StreetMode.FLEXIBLE.equals(request.modes.accessMode)) {\n+                    accessTransfers.addAll(accessEgressMapper.mapFlexAccessEgresses(flexRouter.createFlexAccesses()));\n+                }\n+                // Add flex egress transfers\n+                if (StreetMode.FLEXIBLE.equals(request.modes.egressMode)) {\n+                    egressTransfers.addAll(accessEgressMapper.mapFlexAccessEgresses(flexRouter.createFlexEgresses()));\n+                }\n+            }", "originalCommit": "121b67c848403e87ad217bfd6cd5153004b287c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMxNTQ3Nw==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r537315477", "bodyText": "I have refactored out some of the access/egress logic for flex. I had to duplicate some code, as the flex access/egress search requires a regular access/egress search as input. It might be that a few lines of duplicated code is better than combining the logic for flex access/egress and regular access/egress.\nI still does look somewhat complicated, because you need to perform a check on access and egress separately, to see if you should use the flex logic or the regular logic. Still, it is more readable than what it was before.", "author": "gmellemstrand", "createdAt": "2020-12-07T08:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyMTUxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyNjA1NQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r536126055", "bodyText": "This should be listed after all bicycle options. This will also make the text appear in a more natural order in the translation files above.", "author": "t2gran", "createdAt": "2020-12-04T14:10:52Z", "path": "src/client/js/otp/config.js", "diffHunk": "@@ -316,6 +316,14 @@ otp.config.modes = {\n     \"CAR,WALK,TRANSIT\"          : _tr('Kiss and Ride'),\n     //TRANSLATORS: Travel by: mode of transport (Used in selection in Travel Options widgets)\n     \"BICYCLE_PARK,WALK,TRANSIT\" : _tr('Bike and Ride'),\n+    //TRANSLATORS: Travel by: mode of transport (Used in selection in Travel Options widgets)\n+    \"FLEX_ACCESS,WALK,TRANSIT\" : _tr('Transit with flex access'),\n+    //TRANSLATORS: Travel by: mode of transport (Used in selection in Travel Options widgets)\n+    \"FLEX_EGRESS,WALK,TRANSIT\" : _tr('Transit with flex egress'),\n+    //TRANSLATORS: Travel by: mode of transport (Used in selection in Travel Options widgets)\n+    \"FLEX_ACCESS,FLEX_EGRESS,TRANSIT\" : _tr('Transit with flex access and egress'),\n+    //TRANSLATORS: Travel by: mode of transport (Used in selection in Travel Options widgets)\n+    \"FLEX_DIRECT\" : _tr('Direct flex search'),", "originalCommit": "121b67c848403e87ad217bfd6cd5153004b287c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEzMjU5OQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r536132599", "bodyText": "accessTransfers is not a good name, maybe accessListTransit or accessToTransit ?", "author": "t2gran", "createdAt": "2020-12-04T14:20:39Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -148,29 +164,59 @@ public RoutingResponse route(Router router) {\n         this.debugAggregator.finishedPatternFiltering();\n \n         // Prepare access/egress transfers\n-        Collection<NearbyStop> accessStops = AccessEgressRouter.streetSearch(request, false, 2000);\n-        Collection<NearbyStop> egressStops = AccessEgressRouter.streetSearch(request, true, 2000);\n+        Collection<NearbyStop> accessStops = AccessEgressRouter.streetSearch(\n+            request,\n+            StreetMode.FLEXIBLE.equals(request.modes.accessMode)\n+                ? StreetMode.WALK\n+                : request.modes.accessMode,\n+            false,\n+            2000\n+        );\n+        Collection<NearbyStop> egressStops = AccessEgressRouter.streetSearch(\n+            request,\n+            StreetMode.FLEXIBLE.equals(request.modes.egressMode)\n+                ? StreetMode.WALK\n+                : request.modes.egressMode,\n+            true,\n+            2000\n+        );\n \n         AccessEgressMapper accessEgressMapper = new AccessEgressMapper(transitLayer.getStopIndex());\n-        Collection<AccessEgress> accessTransfers = accessEgressMapper.mapNearbyStops(accessStops, false);\n-        Collection<AccessEgress> egressTransfers = accessEgressMapper.mapNearbyStops(egressStops, true);\n+        Collection<AccessEgress> accessTransfers = new ArrayList<>();\n+        Collection<AccessEgress> egressTransfers = new ArrayList<>();", "originalCommit": "121b67c848403e87ad217bfd6cd5153004b287c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMxMzY0OQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r537313649", "bodyText": "I have renamed them to accessList and egressList, but it is hard to find a name that fits.", "author": "gmellemstrand", "createdAt": "2020-12-07T08:26:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEzMjU5OQ=="}], "type": "inlineReview"}, {"oid": "5847850b555be40f954c85ec84b6a318aadcbfe0", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/5847850b555be40f954c85ec84b6a318aadcbfe0", "message": "Separate flex access/egress routing more from the rest of the routing code", "committedDate": "2020-12-04T15:17:08Z", "type": "commit"}, {"oid": "c6cfda2c1f6e990541e2ee9107e6f50d2d72c1a3", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/c6cfda2c1f6e990541e2ee9107e6f50d2d72c1a3", "message": "Use List.of and formatting", "committedDate": "2020-12-07T08:11:29Z", "type": "commit"}, {"oid": "dea9917e3b736603d93f8d3b94e86298e7351f2d", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/dea9917e3b736603d93f8d3b94e86298e7351f2d", "message": "Change order of modes in built-in client and update translations again", "committedDate": "2020-12-07T08:23:52Z", "type": "commit"}, {"oid": "9fa6a6f39c0f42b694001e166e12737239fc5bd7", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9fa6a6f39c0f42b694001e166e12737239fc5bd7", "message": "Add javadoc to Qualifier, remove unused import", "committedDate": "2020-12-07T09:12:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1MTA1MA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r537451050", "bodyText": "Below there is some code that is commented out, should that be deleted or is this just a temporary guard, in witch case there should probably be a comment here telling why we can retrieve this info on a FLEX trip.", "author": "t2gran", "createdAt": "2020-12-07T11:59:02Z", "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/model/TripTimeShortHelper.java", "diffHunk": "@@ -23,6 +23,7 @@ private TripTimeShortHelper() { }\n     @Nullable\n     public static TripTimeShort getTripTimeShortForFromPlace(Leg leg, RoutingService routingService) {\n         if (!leg.isTransitLeg()) { return null; }\n+        if (leg.isFlexibleTrip()) { return null; }", "originalCommit": "9fa6a6f39c0f42b694001e166e12737239fc5bd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1NjI4NA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r537456284", "bodyText": "This is used to retrieve information to populate the estimateCall for to/from place. We have to decide if the EstimatedCallType is applicable to flexible trips. I can add a comment about it.", "author": "gmellemstrand", "createdAt": "2020-12-07T12:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1MTA1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1MzE1OQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r537453159", "bodyText": "This is redundant, the field is public", "author": "t2gran", "createdAt": "2020-12-07T12:02:28Z", "path": "src/main/java/org/opentripplanner/model/plan/Leg.java", "diffHunk": "@@ -193,6 +200,10 @@ public boolean isOnStreetNonTransit() {\n         return mode.isOnStreetNonTransit();\n     }\n \n+    public boolean isFlexibleTrip() {\n+     return flexibleTrip;\n+    }\n+", "originalCommit": "9fa6a6f39c0f42b694001e166e12737239fc5bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ2OTY4NA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r537469684", "bodyText": "These 2 parameters are passed inn with the request in several places, if we move them to the request they no longer need to be passed in. This would also make these parameters configurable.", "author": "t2gran", "createdAt": "2020-12-07T12:31:09Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -96,6 +98,20 @@ public RoutingResponse route(Router router) {\n             routingErrors.addAll(e.getRoutingErrors());\n         }\n \n+        // Direct flex routing\n+        if (OTPFeature.FlexRouting.isOn()) {\n+            try {\n+                itineraries.addAll(DirectFlexRouter.route(\n+                    request,\n+                    ADDITIONAL_SEARCH_DAYS_BEFORE_TODAY,\n+                    ADDITIONAL_SEARCH_DAYS_AFTER_TODAY", "originalCommit": "9fa6a6f39c0f42b694001e166e12737239fc5bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f22f009b6b6a2c57567fb4e7d48bd4f1b8f19b39", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f22f009b6b6a2c57567fb4e7d48bd4f1b8f19b39", "message": "Todo about TripTimeShortHelper", "committedDate": "2020-12-07T17:32:07Z", "type": "commit"}, {"oid": "9cb2f31e7d52f7ac4256393b855f4b1dc7f9764f", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9cb2f31e7d52f7ac4256393b855f4b1dc7f9764f", "message": "Remove getter for public field", "committedDate": "2020-12-07T17:35:26Z", "type": "commit"}, {"oid": "bd195ac288219c2403ae8570fcc5646960a0459e", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/bd195ac288219c2403ae8570fcc5646960a0459e", "message": "Move additional search days configuration to RoutingRequest", "committedDate": "2020-12-07T17:41:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIxNTIwNg==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r538215206", "bodyText": "Check how many itineraries are initially created here, and if we should prevent that from happening earlier.", "author": "gmellemstrand", "createdAt": "2020-12-08T10:23:29Z", "path": "src/ext/java/org/opentripplanner/ext/flex/FlexRouter.java", "diffHunk": "@@ -95,21 +96,32 @@ public FlexRouter(\n \n     Set<StopLocation> egressStops = streetEgressByStop.keySet();\n \n-    Collection<Itinerary> itineraries = new ArrayList<>();\n+    Map<FlexTrip, Itinerary> itinerariesByTrip = new HashMap<>();\n \n     for (FlexAccessTemplate template : this.flexAccessTemplates) {\n       StopLocation transferStop = template.getTransferStop();\n+      FlexTrip trip = template.getFlexTrip();\n       if (egressStops.contains(transferStop)) {\n-        for(NearbyStop egress : streetEgressByStop.get(transferStop)) {\n-          Itinerary itinerary = template.createDirectItinerary(egress, arriveBy, departureTime, startOfTime);\n-          if (itinerary != null) {\n-            itineraries.add(itinerary);\n+        for (NearbyStop egress : streetEgressByStop.get(transferStop)) {\n+          Itinerary itinerary = template.createDirectItinerary(", "originalCommit": "bd195ac288219c2403ae8570fcc5646960a0459e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3ODEzNA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r539178134", "bodyText": "This has been reverted, and will probably be part of the filtering in a future PR.", "author": "gmellemstrand", "createdAt": "2020-12-09T10:14:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIxNTIwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIxODIwOA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r538218208", "bodyText": "These can be deleted", "author": "gmellemstrand", "createdAt": "2020-12-08T10:27:53Z", "path": "src/main/java/org/opentripplanner/api/parameter/Qualifier.java", "diffHunk": "@@ -1,5 +1,32 @@\n package org.opentripplanner.api.parameter;\n \n public enum Qualifier {\n-  RENT, HAVE, PARK, KEEP, PICKUP, DROPOFF\n+  /** The vehicle has to be rented */\n+  RENT,\n+  @Deprecated", "originalCommit": "bd195ac288219c2403ae8570fcc5646960a0459e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIyMjcwNQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r538222705", "bodyText": "Ask @hannesj Why FlexTrip does not extend Trip", "author": "gmellemstrand", "createdAt": "2020-12-08T10:32:57Z", "path": "src/main/java/org/opentripplanner/model/plan/Leg.java", "diffHunk": "@@ -58,6 +58,13 @@\n     */\n    public Boolean realTime = false;\n ", "originalCommit": "bd195ac288219c2403ae8570fcc5646960a0459e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4OTY0MA==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r539189640", "bodyText": "I had a discussion with Hannes about this, and he agreed that it would probably be a good idea to have FlexTrip extend Trip. It is not quite straightforward, so we can handle it in another PR.", "author": "gmellemstrand", "createdAt": "2020-12-09T10:30:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIyMjcwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIzMDE3MQ==", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3233#discussion_r538230171", "bodyText": "Formatting", "author": "gmellemstrand", "createdAt": "2020-12-08T10:41:09Z", "path": "src/main/java/org/opentripplanner/routing/algorithm/raptor/router/street/FlexAccessEgressRouter.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.opentripplanner.routing.algorithm.raptor.router.street;\n+\n+import org.opentripplanner.ext.flex.FlexAccessEgress;\n+import org.opentripplanner.ext.flex.FlexRouter;\n+import org.opentripplanner.routing.api.request.RoutingRequest;\n+import org.opentripplanner.routing.api.request.StreetMode;\n+import org.opentripplanner.routing.graphfinder.NearbyStop;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class FlexAccessEgressRouter {\n+\n+  private FlexAccessEgressRouter() {}\n+\n+  public static Collection<FlexAccessEgress> routeAccessEgress(\n+      RoutingRequest request,\n+      boolean isEgress\n+  ) {\n+\n+    Collection<NearbyStop> accessStops = !isEgress ? AccessEgressRouter.streetSearch(request,\n+        StreetMode.WALK,\n+        false,\n+        2000\n+    ) : List.of();\n+", "originalCommit": "bd195ac288219c2403ae8570fcc5646960a0459e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5aa777a00e36839c48fde3aadacaea145e0ceadd", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/5aa777a00e36839c48fde3aadacaea145e0ceadd", "message": "Deleted unused Qualifier enum values", "committedDate": "2020-12-08T15:35:48Z", "type": "commit"}, {"oid": "907e90a9e27de58ad6261aa63a2e3032e8784812", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/907e90a9e27de58ad6261aa63a2e3032e8784812", "message": "Formatting", "committedDate": "2020-12-08T15:36:22Z", "type": "commit"}, {"oid": "e8de7594a05c69e24a5682c055a5b173860d9a58", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e8de7594a05c69e24a5682c055a5b173860d9a58", "message": "Revert \"Only add the earliest itinerary per trip for direct flex\"\n\nThis reverts commit 0eba997f9b476219c19debae7a5a4eb4372a66f5.", "committedDate": "2020-12-09T10:12:45Z", "type": "commit"}, {"oid": "e0ab98802557c683f85c837c96449f918a71a054", "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e0ab98802557c683f85c837c96449f918a71a054", "message": "Merge branch 'dev-2.x' into otp2_flex_as_streetmode", "committedDate": "2020-12-15T08:55:45Z", "type": "commit"}]}