{"pr_number": 309, "pr_title": "Rework track deletion UI", "pr_createdAt": "2020-07-03T21:36:56Z", "pr_url": "https://github.com/OpenTracksApp/OpenTracks/pull/309", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMwMTc4Nw==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/309#discussion_r450301787", "bodyText": "When deleting is finished the user can see the spinner going down. Why don't hide it before finish()?\nfindViewById(R.id.progress_bar).setVisibility(View.INVISIBLE);", "author": "rgmf", "createdAt": "2020-07-06T15:28:13Z", "path": "src/main/java/de/dennisguse/opentracks/TrackDeleteActivity.java", "diffHunk": "@@ -44,53 +42,52 @@ public void onCreate(Bundle savedInstanceState) {\n         setResult(RESULT_CANCELED);\n \n         Intent intent = getIntent();\n-        long[] trackIds = intent.getLongArrayExtra(EXTRA_TRACK_IDS);\n-\n-        Object retained = getLastNonConfigurationInstance();\n-        if (retained instanceof DeleteAsyncTask) {\n-            deleteAsyncTask = (DeleteAsyncTask) retained;\n-            deleteAsyncTask.setActivity(this);\n-        } else {\n-            deleteAsyncTask = new DeleteAsyncTask(this, trackIds);\n-            deleteAsyncTask.execute();\n-        }\n+        trackIds = intent.getLongArrayExtra(EXTRA_TRACK_IDS);\n+\n+        deleteAsyncTask = new DeleteAsyncTask();\n     }\n \n     @Override\n-    public Object onRetainNonConfigurationInstance() {\n-        deleteAsyncTask.setActivity(null);\n-        return deleteAsyncTask;\n+    protected void onStart() {\n+        super.onStart();\n+        deleteAsyncTask.execute();\n     }\n \n     @Override\n-    protected Dialog onCreateDialog(int id) {\n-        if (id != DIALOG_PROGRESS_ID) {\n-            return null;\n-        }\n-        return DialogUtils.createSpinnerProgressDialog(\n-                this, R.string.track_delete_progress_message, new DialogInterface.OnCancelListener() {\n-                    @Override\n-                    public void onCancel(DialogInterface dialog) {\n-                        deleteAsyncTask.cancel(true);\n-                        dialog.dismiss();\n-                        finish();\n-                    }\n-                });\n+    protected void onStop() {\n+        super.onStop();\n+        deleteAsyncTask.cancel(true);\n+    }\n+\n+    @Override\n+    protected int getLayoutResId() {\n+        return R.layout.track_delete;\n     }\n \n-    /**\n-     * Invokes when the associated AsyncTask completes.\n-     */\n     public void onAsyncTaskCompleted() {\n-        removeDialog(DIALOG_PROGRESS_ID);\n         setResult(RESULT_OK);\n         finish();", "originalCommit": "c2ceb88e8376f656093d50a4881376b53e442f44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMwMzQ4Ng==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/309#discussion_r450303486", "bodyText": "I like the best this transition for TrackDeleteActivity start (below startActivityForResult):\noverridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);", "author": "rgmf", "createdAt": "2020-07-06T15:30:42Z", "path": "src/main/java/de/dennisguse/opentracks/AbstractListActivity.java", "diffHunk": "@@ -62,17 +62,15 @@ protected void deleteTracks(long[] trackIds) {\n     @Override\n     public void onConfirmDeleteDone(long[] trackIds) {\n         boolean stopRecording = false;\n-        if (trackIds.length == 1 && trackIds[0] == -1L) {\n-            stopRecording = true;\n-        } else {\n-            long recordingTrackId = PreferencesUtils.getRecordingTrackId(this);\n-            for (long trackId : trackIds) {\n-                if (trackId == recordingTrackId) {\n-                    stopRecording = true;\n-                    break;\n-                }\n+\n+        long recordingTrackId = PreferencesUtils.getRecordingTrackId(this);\n+        for (long trackId : trackIds) {\n+            if (trackId == recordingTrackId) {\n+                stopRecording = true;\n+                break;\n             }\n         }\n+\n         if (stopRecording) {\n             getTrackRecordingServiceConnection().stopRecording(this, false);\n         }", "originalCommit": "c2ceb88e8376f656093d50a4881376b53e442f44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0911c3f57a9fbba512adb75103e5426326644e69", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/0911c3f57a9fbba512adb75103e5426326644e69", "message": "Track deletion shows an infinite progressbar.\nFixes #242.", "committedDate": "2020-07-07T16:26:32Z", "type": "commit"}, {"oid": "037cb681494be8491c498652ee74b1077e4f0211", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/037cb681494be8491c498652ee74b1077e4f0211", "message": "Track deletion UI: code cleanup.", "committedDate": "2020-07-07T16:26:32Z", "type": "commit"}, {"oid": "cfba3f1dc602bb02a8e4d023bee041e4e2f67a01", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/cfba3f1dc602bb02a8e4d023bee041e4e2f67a01", "message": "TrackDelete: hide progress bar before finishing and add custom animations.", "committedDate": "2020-07-07T16:26:32Z", "type": "commit"}, {"oid": "a85194f896d91aafd58aff97a742023f4717515a", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/a85194f896d91aafd58aff97a742023f4717515a", "message": "TrackDelete: use a Thread and always require TrackIds.", "committedDate": "2020-07-07T16:26:32Z", "type": "commit"}, {"oid": "a85194f896d91aafd58aff97a742023f4717515a", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/a85194f896d91aafd58aff97a742023f4717515a", "message": "TrackDelete: use a Thread and always require TrackIds.", "committedDate": "2020-07-07T16:26:32Z", "type": "forcePushed"}]}