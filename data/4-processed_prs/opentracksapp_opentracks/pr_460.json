{"pr_number": 460, "pr_title": "Export All: ask to the user when conflicts and show a summary.", "pr_createdAt": "2020-10-18T10:50:34Z", "pr_url": "https://github.com/OpenTracksApp/OpenTracks/pull/460", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNDEwMw==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507114103", "bodyText": "can we get landscape mode as well?\nEverything else supports this nowadays.", "author": "dennisguse", "createdAt": "2020-10-18T11:54:17Z", "path": "src/main/AndroidManifest.xml", "diffHunk": "@@ -154,9 +154,7 @@ limitations under the License.\n         <activity android:name=\".io.file.importer.DirectoryChooserActivity$ExportDirectoryChooserActivity\" />\n         <activity android:name=\".io.file.importer.DirectoryChooserActivity$DefaultTrackExportDirectoryChooserActivity\" />\n \n-        <activity\n-            android:name=\".io.file.exporter.ExportActivity\"\n-            android:theme=\"@style/ThemeCustomTransparentActivity\" />\n+        <activity android:name=\".io.file.exporter.ExportActivity\" android:screenOrientation=\"portrait\" />", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4MzM4Ng==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507183386", "bodyText": "How fun screen orientation is!!! \ud83d\ude05", "author": "rgmf", "createdAt": "2020-10-18T16:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNDEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTAwMQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507115001", "bodyText": "Under which circumstances can this happen?", "author": "dennisguse", "createdAt": "2020-10-18T11:56:33Z", "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportService.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package de.dennisguse.opentracks.io.file.exporter;\n+\n+import android.app.job.JobService;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.os.ResultReceiver;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.app.JobIntentService;\n+import androidx.documentfile.provider.DocumentFile;\n+\n+import de.dennisguse.opentracks.content.data.Track;\n+import de.dennisguse.opentracks.content.provider.ContentProviderUtils;\n+import de.dennisguse.opentracks.io.file.TrackFileFormat;\n+import de.dennisguse.opentracks.util.ExportUtils;\n+\n+public class ExportService extends JobIntentService {\n+\n+    private static final int JOB_ID = 1;\n+\n+    private static final String EXTRA_RECEIVER = \"extra_receiver\";\n+    private static final String EXTRA_TRACK_ID = \"extra_track_id\";\n+    private static final String EXTRA_TRACK_FILE_FORMAT = \"extra_track_file_format\";\n+    private static final String EXTRA_DIRECTORY_URI = \"extra_directory_uri\";\n+    private static final String EXTRA_CONFLICT_DECISION = \"extra_conflict_decision\";\n+\n+    public static final int CONFLICT_UNKNOWN = 0;\n+    public static final int CONFLICT_OVERWRITE = 1;\n+    public static final int CONFLICT_SKIP = 2;\n+\n+    public static void enqueue(Context context, ExportServiceResultReceiver receiver, Track.Id trackId, TrackFileFormat trackFileFormat, Uri directoryUri, int conflictDecision) {\n+        Intent intent = new Intent(context, JobService.class);\n+        intent.putExtra(EXTRA_RECEIVER, receiver);\n+        intent.putExtra(EXTRA_TRACK_ID, trackId);\n+        intent.putExtra(EXTRA_TRACK_FILE_FORMAT, trackFileFormat);\n+        intent.putExtra(EXTRA_DIRECTORY_URI, directoryUri);\n+        intent.putExtra(EXTRA_CONFLICT_DECISION, conflictDecision);\n+        enqueueWork(context, ExportService.class, JOB_ID, intent);\n+    }\n+\n+    @Override\n+    protected void onHandleWork(@NonNull Intent intent) {\n+        // Get all data.\n+        ResultReceiver resultReceiver = intent.getParcelableExtra(EXTRA_RECEIVER);\n+        Track.Id trackId = intent.getParcelableExtra(EXTRA_TRACK_ID);\n+        TrackFileFormat trackFileFormat = (TrackFileFormat) intent.getSerializableExtra(EXTRA_TRACK_FILE_FORMAT);\n+        Uri directoryUri = intent.getParcelableExtra(EXTRA_DIRECTORY_URI);\n+        int conflictDecision = intent.getIntExtra(EXTRA_CONFLICT_DECISION, CONFLICT_UNKNOWN);\n+\n+        // Build directory file.\n+        DocumentFile directoryFile = DocumentFile.fromTreeUri(this, directoryUri);\n+\n+        // Checks if the track is already exported in the directory.\n+        boolean fileAlreadyExists = ExportUtils.existsExportDocumentFile(trackId, trackFileFormat.getExtension(), directoryFile);\n+\n+        // Prepare resultCode and bundle to send to the receiver.\n+        int resultCode = getResultCode(fileAlreadyExists, conflictDecision);\n+        Bundle bundle = new Bundle();\n+        bundle.putParcelable(ExportServiceResultReceiver.RESULT_EXTRA_TRACK_ID, trackId);\n+        bundle.putBoolean(ExportServiceResultReceiver.RESULT_EXTRA_SUCCESS, false);\n+\n+        // If file doesn't exists or exists but conflict decision is overwrite then export the track.\n+        if (!fileAlreadyExists || (fileAlreadyExists && conflictDecision == CONFLICT_OVERWRITE)) {\n+            ContentProviderUtils contentProviderUtils = new ContentProviderUtils(this);\n+            Track track = contentProviderUtils.getTrack(trackId);\n+            boolean success = ExportUtils.exportTrack(this, trackFileFormat, directoryFile, track);\n+            bundle.putBoolean(ExportServiceResultReceiver.RESULT_EXTRA_SUCCESS, success);\n+        }\n+\n+        // Send result to the receiver.\n+        resultReceiver.send(resultCode, bundle);\n+    }\n+\n+    private int getResultCode(boolean fileExists, int conflictDecicions) {\n+        if (!fileExists) {\n+            return ExportServiceResultReceiver.RESULT_EXPORTED;\n+        }\n+\n+        switch (conflictDecicions) {\n+            case CONFLICT_OVERWRITE:\n+                return ExportServiceResultReceiver.RESULT_OVERWRITTEN;\n+            case CONFLICT_SKIP:\n+                return ExportServiceResultReceiver.RESULT_SKIPPED;\n+            default:\n+                return ExportServiceResultReceiver.RESULT_UNKNOWN;", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MDU1NQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507170555", "bodyText": "The first time there is a conflict (file already exists). Then service send a response with a RESULT_UNKNOWN so the client knows that the service doesn't know how to fix the conflict and the client ask the user (skip and overwrite buttons show).", "author": "rgmf", "createdAt": "2020-10-18T14:35:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MzA0Nw==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507173047", "bodyText": "I see: what about renaming to RESULT_NEEDS_CONFLICT_RESOLUTION?", "author": "dennisguse", "createdAt": "2020-10-18T14:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MzQyNg==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507173426", "bodyText": "Okay, more descriptive \ud83d\udc4d", "author": "rgmf", "createdAt": "2020-10-18T14:58:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTAwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTI5MQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507115291", "bodyText": "Can we get one sentence per line?\nAnd also I would put the description on top of the class rather than the constructor.\nWhen the documentation is generated, this will be the description.\nConstructor descriptions are only need (IMHO) if they do something unexpected.", "author": "dennisguse", "createdAt": "2020-10-18T11:57:15Z", "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportServiceResultReceiver.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package de.dennisguse.opentracks.io.file.exporter;\n+\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.ResultReceiver;\n+\n+public class ExportServiceResultReceiver extends ResultReceiver {\n+\n+    public static final int RESULT_UNKNOWN = 100;\n+    public static final int RESULT_OVERWRITTEN = 101;\n+    public static final int RESULT_SKIPPED = 102;\n+    public static final int RESULT_EXPORTED = 103;\n+\n+    public static final String RESULT_EXTRA_TRACK_ID = \"result_extra_track_id\";\n+    public static final String RESULT_EXTRA_SUCCESS = \"result_extra_success\";\n+\n+    private Receiver receiver;\n+\n+    /**\n+     * Create a new ResultReceive to receive results.  Your", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNjcxNQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507116715", "bodyText": "I have no better option, but the name is somehow not telling me what it does.\nSomething like: isExportFileExists (but sucks also) :)", "author": "dennisguse", "createdAt": "2020-10-18T12:00:55Z", "path": "src/main/java/de/dennisguse/opentracks/util/ExportUtils.java", "diffHunk": "@@ -59,6 +59,10 @@ public static DocumentFile getExportDocumentFile(Track.Id trackId, String trackF\n         return file;\n     }\n \n+    public static boolean existsExportDocumentFile(Track.Id trackId, String trackFileFormatExtension, DocumentFile directory) {", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNjg4OQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507116889", "bodyText": "directory.findFile(getExportFileNameByTrackId(trackId, trackFileFormatExtension)) != null", "author": "dennisguse", "createdAt": "2020-10-18T12:01:19Z", "path": "src/main/java/de/dennisguse/opentracks/util/ExportUtils.java", "diffHunk": "@@ -59,6 +59,10 @@ public static DocumentFile getExportDocumentFile(Track.Id trackId, String trackF\n         return file;\n     }\n \n+    public static boolean existsExportDocumentFile(Track.Id trackId, String trackFileFormatExtension, DocumentFile directory) {\n+        return directory.findFile(getExportFileNameByTrackId(trackId, trackFileFormatExtension)) == null ? false : true;", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNzE3MQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507117171", "bodyText": "sed s/!/./", "author": "dennisguse", "createdAt": "2020-10-18T12:01:59Z", "path": "src/main/res/values/strings.xml", "diffHunk": "@@ -216,6 +216,21 @@ limitations under the License.\n     <string name=\"export_progress_message\">Exporting to %1$s&#8230;</string>\n     <string name=\"export_success\">Exported %1$s to %2$s</string>\n     <string name=\"export_title\">Export to&#8230;</string>\n+    <string name=\"export_track_already_exists_msg\">The track %1$s already exists at the destination directory!</string>", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNzI5Mg==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507117292", "bodyText": "sed s/an/one/", "author": "dennisguse", "createdAt": "2020-10-18T12:02:17Z", "path": "src/main/res/values/strings.xml", "diffHunk": "@@ -216,6 +216,21 @@ limitations under the License.\n     <string name=\"export_progress_message\">Exporting to %1$s&#8230;</string>\n     <string name=\"export_success\">Exported %1$s to %2$s</string>\n     <string name=\"export_title\">Export to&#8230;</string>\n+    <string name=\"export_track_already_exists_msg\">The track %1$s already exists at the destination directory!</string>\n+    <string name=\"export_all_end_with_errors\">Completed with %1$d errors</string>\n+    <string name=\"export_all_end_with_error\">Completed with an error</string>", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzEyNTgxOQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507125819", "bodyText": "Should be done with plurals:\n    <plurals name=\"export_all_end_with_errors\">\n        <item quantity=\"one\">Completed with one error</item>\n        <item quantity=\"other\">Completed with %1$d errors</item>\n    </plurals>\n\nAnd the usage:\nString msg = getResources().getQuantityString(R.plurals.export_all_end_with_errors, trackExportErrorCount, trackExportErrorCount);", "author": "pstorch", "createdAt": "2020-10-18T12:25:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNzI5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNzkwNg==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507117906", "bodyText": "Why not use a checkbox?\nhttps://material.io/develop/android/components/checkboxes", "author": "dennisguse", "createdAt": "2020-10-18T12:03:43Z", "path": "src/main/res/layout/export_progress_activity.xml", "diffHunk": "@@ -0,0 +1,141 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/toolbar\" />\n+\n+    <androidx.constraintlayout.widget.ConstraintLayout\n+        android:layout_weight=\"1\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_done\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginStart=\"24dp\"\n+            android:layout_marginTop=\"48dp\"\n+            app:layout_constraintEnd_toStartOf=\"@id/export_progress_slash\"\n+            app:layout_constraintHorizontal_chainStyle=\"packed\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toTopOf=\"parent\"\n+            tools:text=\"1\" />\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_slash\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:text=\"@string/generic_separator_done_total\"\n+            app:layout_constraintBottom_toBottomOf=\"@id/export_progress_done\"\n+            app:layout_constraintEnd_toStartOf=\"@id/export_progress_total\"\n+            app:layout_constraintStart_toEndOf=\"@id/export_progress_done\"\n+            app:layout_constraintTop_toTopOf=\"@id/export_progress_done\" />\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_total\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginEnd=\"24dp\"\n+            app:layout_constraintBottom_toBottomOf=\"@id/export_progress_slash\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toEndOf=\"@id/export_progress_slash\"\n+            app:layout_constraintTop_toTopOf=\"@id/export_progress_slash\"\n+            tools:text=\"10\" />\n+\n+        <ProgressBar\n+            android:id=\"@+id/export_progress_bar\"\n+            style=\"@android:style/Widget.ProgressBar.Horizontal\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginLeft=\"24dp\"\n+            android:layout_marginTop=\"8dp\"\n+            android:layout_marginRight=\"24dp\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toBottomOf=\"@id/export_progress_done\"\n+            tools:progress=\"25\" />\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_summary\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_margin=\"24dp\"\n+            android:text=\"@string/export_progress_review\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toBottomOf=\"@id/export_progress_bar\" />\n+\n+        <ImageView\n+            android:id=\"@+id/export_progress_alert_icon\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginStart=\"24dp\"\n+            android:layout_marginEnd=\"8dp\"\n+            app:layout_constraintHorizontal_chainStyle=\"packed\"\n+            app:layout_constraintBottom_toBottomOf=\"@id/export_progress_alert_msg\"\n+            app:layout_constraintEnd_toStartOf=\"@id/export_progress_alert_msg\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toTopOf=\"@id/export_progress_alert_msg\"\n+            app:tint=\"@android:color/holo_red_dark\"\n+            app:srcCompat=\"@drawable/ic_report_problem_24\" />\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_alert_msg\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"0dp\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginTop=\"24dp\"\n+            android:layout_marginEnd=\"24dp\"\n+            android:layout_marginBottom=\"24dp\"\n+            app:layout_constraintBottom_toTopOf=\"@id/export_progress_toggle\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toEndOf=\"@id/export_progress_alert_icon\"\n+            app:layout_constraintTop_toBottomOf=\"@id/export_progress_summary\"\n+            app:layout_constraintVertical_chainStyle=\"packed\"\n+            tools:text=\"The track already exists\" />\n+\n+        <androidx.appcompat.widget.SwitchCompat", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExODI4Ng==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507118286", "bodyText": "i have not checked, but it might give us a problem with day/night mode.\nFor this we need to access colors via ?attr.", "author": "dennisguse", "createdAt": "2020-10-18T12:04:42Z", "path": "src/main/res/layout/export_progress_activity.xml", "diffHunk": "@@ -0,0 +1,141 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/toolbar\" />\n+\n+    <androidx.constraintlayout.widget.ConstraintLayout\n+        android:layout_weight=\"1\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_done\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginStart=\"24dp\"\n+            android:layout_marginTop=\"48dp\"\n+            app:layout_constraintEnd_toStartOf=\"@id/export_progress_slash\"\n+            app:layout_constraintHorizontal_chainStyle=\"packed\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toTopOf=\"parent\"\n+            tools:text=\"1\" />\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_slash\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:text=\"@string/generic_separator_done_total\"\n+            app:layout_constraintBottom_toBottomOf=\"@id/export_progress_done\"\n+            app:layout_constraintEnd_toStartOf=\"@id/export_progress_total\"\n+            app:layout_constraintStart_toEndOf=\"@id/export_progress_done\"\n+            app:layout_constraintTop_toTopOf=\"@id/export_progress_done\" />\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_total\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginEnd=\"24dp\"\n+            app:layout_constraintBottom_toBottomOf=\"@id/export_progress_slash\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toEndOf=\"@id/export_progress_slash\"\n+            app:layout_constraintTop_toTopOf=\"@id/export_progress_slash\"\n+            tools:text=\"10\" />\n+\n+        <ProgressBar\n+            android:id=\"@+id/export_progress_bar\"\n+            style=\"@android:style/Widget.ProgressBar.Horizontal\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginLeft=\"24dp\"\n+            android:layout_marginTop=\"8dp\"\n+            android:layout_marginRight=\"24dp\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toBottomOf=\"@id/export_progress_done\"\n+            tools:progress=\"25\" />\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_summary\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_margin=\"24dp\"\n+            android:text=\"@string/export_progress_review\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toBottomOf=\"@id/export_progress_bar\" />\n+\n+        <ImageView\n+            android:id=\"@+id/export_progress_alert_icon\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginStart=\"24dp\"\n+            android:layout_marginEnd=\"8dp\"\n+            app:layout_constraintHorizontal_chainStyle=\"packed\"\n+            app:layout_constraintBottom_toBottomOf=\"@id/export_progress_alert_msg\"\n+            app:layout_constraintEnd_toStartOf=\"@id/export_progress_alert_msg\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toTopOf=\"@id/export_progress_alert_msg\"\n+            app:tint=\"@android:color/holo_red_dark\"", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExOTQxOQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507119419", "bodyText": "We can move the progressbar into the actionbar, then it looks very similar to the dialog:\nNever done this, just know that it recommened for Material design: https://material.io/components/progress-indicators", "author": "dennisguse", "createdAt": "2020-10-18T12:07:37Z", "path": "src/main/res/layout/export_progress_activity.xml", "diffHunk": "@@ -0,0 +1,141 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/toolbar\" />\n+\n+    <androidx.constraintlayout.widget.ConstraintLayout\n+        android:layout_weight=\"1\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_done\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginStart=\"24dp\"\n+            android:layout_marginTop=\"48dp\"\n+            app:layout_constraintEnd_toStartOf=\"@id/export_progress_slash\"\n+            app:layout_constraintHorizontal_chainStyle=\"packed\"\n+            app:layout_constraintStart_toStartOf=\"parent\"\n+            app:layout_constraintTop_toTopOf=\"parent\"\n+            tools:text=\"1\" />\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_slash\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:text=\"@string/generic_separator_done_total\"\n+            app:layout_constraintBottom_toBottomOf=\"@id/export_progress_done\"\n+            app:layout_constraintEnd_toStartOf=\"@id/export_progress_total\"\n+            app:layout_constraintStart_toEndOf=\"@id/export_progress_done\"\n+            app:layout_constraintTop_toTopOf=\"@id/export_progress_done\" />\n+\n+        <TextView\n+            android:id=\"@+id/export_progress_total\"\n+            style=\"@style/TextMedium\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginEnd=\"24dp\"\n+            app:layout_constraintBottom_toBottomOf=\"@id/export_progress_slash\"\n+            app:layout_constraintEnd_toEndOf=\"parent\"\n+            app:layout_constraintStart_toEndOf=\"@id/export_progress_slash\"\n+            app:layout_constraintTop_toTopOf=\"@id/export_progress_slash\"\n+            tools:text=\"10\" />\n+\n+        <ProgressBar", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MjY5Mw==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507172693", "bodyText": "Don't you think is a better option the progress bar in the middle of the screen in this case?\nRead the \"Placement\" section in the link you point out: https://material.io/components/progress-indicators (also there is a video with an example and I'd do it like that video shows).", "author": "rgmf", "createdAt": "2020-10-18T14:52:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExOTQxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4MzQ1OA==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507183458", "bodyText": "Styling like Material Design says done...", "author": "rgmf", "createdAt": "2020-10-18T16:30:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExOTQxOQ=="}], "type": "inlineReview"}, {"oid": "0fc4929de78ff466f614070a02f67c2e42c087ff", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/0fc4929de78ff466f614070a02f67c2e42c087ff", "message": "Performance. Conflicts manage by ExporActivity instead of JobIntentService.", "committedDate": "2020-10-19T14:10:00Z", "type": "forcePushed"}, {"oid": "d68dbb3545bf8a6d819606bb5d10ea5179b992ef", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/d68dbb3545bf8a6d819606bb5d10ea5179b992ef", "message": "Uses DocumentsContract instead of DocumentFile for find files.", "committedDate": "2020-10-20T09:51:16Z", "type": "forcePushed"}, {"oid": "dc5ee1d7708f118ea48df61479df2d012b1e5115", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/dc5ee1d7708f118ea48df61479df2d012b1e5115", "message": "Export All: ask to the user when conflicts (track already exported in the selected directory) and show a summary. Fixes #451.", "committedDate": "2020-10-20T09:59:11Z", "type": "forcePushed"}, {"oid": "e945f586fe4211654d903de51ce7efe6a14d9437", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/e945f586fe4211654d903de51ce7efe6a14d9437", "message": "Export All: ask to the user when conflicts (track already exported in the selected directory) and show a summary. Fixes #451.", "committedDate": "2020-10-20T09:59:58Z", "type": "forcePushed"}, {"oid": "e945f586fe4211654d903de51ce7efe6a14d9437", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/e945f586fe4211654d903de51ce7efe6a14d9437", "message": "Export All: ask to the user when conflicts (track already exported in the selected directory) and show a summary. Fixes #451.", "committedDate": "2020-10-20T09:59:58Z", "type": "commit"}]}