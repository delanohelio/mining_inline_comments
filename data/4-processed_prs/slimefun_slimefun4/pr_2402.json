{"pr_number": 2402, "pr_title": "GPS Control Panel and GEO Scanner access checks", "pr_createdAt": "2020-10-07T00:50:45Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2402", "timeline": [{"oid": "a843e99dbf208af36c593501059dc210fa88b5c7", "url": "https://github.com/Slimefun/Slimefun4/commit/a843e99dbf208af36c593501059dc210fa88b5c7", "message": "Merge pull request #3 from Slimefun/master\n\nUpdate", "committedDate": "2020-09-19T21:27:08Z", "type": "commit"}, {"oid": "37f0715156dd8a8f7228f532daf9e3aeec34a2a4", "url": "https://github.com/Slimefun/Slimefun4/commit/37f0715156dd8a8f7228f532daf9e3aeec34a2a4", "message": "Added permission checks for the GEO Scanner and GPS Control Panel", "committedDate": "2020-10-07T00:46:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NzMzMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r500677330", "bodyText": "else on the next line after the bracket.", "author": "TheBusyBiscuit", "createdAt": "2020-10-07T00:58:08Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/gps/GPSControlPanel.java", "diffHunk": "@@ -17,6 +20,22 @@ public GPSControlPanel(Category category, SlimefunItemStack item, RecipeType rec\n \n     @Override\n     public BlockUseHandler getItemHandler() {\n-        return e -> SlimefunPlugin.getGPSNetwork().openTransmitterControlPanel(e.getPlayer());\n+        return e ->  {\n+            e.cancel();\n+\n+            Player p = e.getPlayer();\n+\n+            if (p.hasPermission(\"slimefun.inventory.bypass\")\n+                || (SlimefunPlugin.getProtectionManager().hasPermission(\n+                p, e.getClickedBlock().get().getLocation(), ProtectableAction.ACCESS_INVENTORIES))\n+                && Slimefun.hasUnlocked(p, item, false)\n+            ) {\n+\n+                SlimefunPlugin.getGPSNetwork().openTransmitterControlPanel(p);\n+            } else {", "originalCommit": "37f0715156dd8a8f7228f532daf9e3aeec34a2a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NzM1OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r500677358", "bodyText": "else on the next line after the bracket.", "author": "TheBusyBiscuit", "createdAt": "2020-10-07T00:58:15Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/geo/GEOScanner.java", "diffHunk": "@@ -19,10 +22,22 @@ public GEOScanner(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Override\n     public BlockUseHandler getItemHandler() {\n         return e -> {\n+            e.cancel();\n+\n             Block b = e.getClickedBlock().get();\n+            Player p = e.getPlayer();\n \n-            e.cancel();\n-            SlimefunPlugin.getGPSNetwork().getResourceManager().scan(e.getPlayer(), b, 0);\n+            if (p.hasPermission(\"slimefun.inventory.bypass\")\n+                || (SlimefunPlugin.getProtectionManager().hasPermission(\n+                p, b.getLocation(), ProtectableAction.ACCESS_INVENTORIES))\n+                && Slimefun.hasUnlocked(e.getPlayer(), item, false)\n+            ) {\n+\n+                SlimefunPlugin.getGPSNetwork().getResourceManager().scan(p, b, 0);\n+            } else {", "originalCommit": "37f0715156dd8a8f7228f532daf9e3aeec34a2a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NzUxNw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r500677517", "bodyText": "This check is redundant as it's already done before this handler is called.", "author": "TheBusyBiscuit", "createdAt": "2020-10-07T00:58:57Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/geo/GEOScanner.java", "diffHunk": "@@ -19,10 +22,22 @@ public GEOScanner(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Override\n     public BlockUseHandler getItemHandler() {\n         return e -> {\n+            e.cancel();\n+\n             Block b = e.getClickedBlock().get();\n+            Player p = e.getPlayer();\n \n-            e.cancel();\n-            SlimefunPlugin.getGPSNetwork().getResourceManager().scan(e.getPlayer(), b, 0);\n+            if (p.hasPermission(\"slimefun.inventory.bypass\")\n+                || (SlimefunPlugin.getProtectionManager().hasPermission(\n+                p, b.getLocation(), ProtectableAction.ACCESS_INVENTORIES))\n+                && Slimefun.hasUnlocked(e.getPlayer(), item, false)", "originalCommit": "37f0715156dd8a8f7228f532daf9e3aeec34a2a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY5ODUxOQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r500698519", "bodyText": "The entire thing? I have tested it and it allows other people to access them/activate them", "author": "NCBPFluffyBear", "createdAt": "2020-10-07T02:17:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NzUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1OTk4OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r501159989", "bodyText": "The hasUnlocked() check is redundant, handlers aren't even called unless the Player has access to the item.", "author": "TheBusyBiscuit", "createdAt": "2020-10-07T16:45:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NzUxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NzU0MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r500677541", "bodyText": "This check is redundant as it's already done before this handler is called.", "author": "TheBusyBiscuit", "createdAt": "2020-10-07T00:59:02Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/gps/GPSControlPanel.java", "diffHunk": "@@ -17,6 +20,22 @@ public GPSControlPanel(Category category, SlimefunItemStack item, RecipeType rec\n \n     @Override\n     public BlockUseHandler getItemHandler() {\n-        return e -> SlimefunPlugin.getGPSNetwork().openTransmitterControlPanel(e.getPlayer());\n+        return e ->  {\n+            e.cancel();\n+\n+            Player p = e.getPlayer();\n+\n+            if (p.hasPermission(\"slimefun.inventory.bypass\")\n+                || (SlimefunPlugin.getProtectionManager().hasPermission(\n+                p, e.getClickedBlock().get().getLocation(), ProtectableAction.ACCESS_INVENTORIES))\n+                && Slimefun.hasUnlocked(p, item, false)", "originalCommit": "37f0715156dd8a8f7228f532daf9e3aeec34a2a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NzY1MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r500677650", "bodyText": "You should really have a designated permissions node for this, it's not an inventory.", "author": "TheBusyBiscuit", "createdAt": "2020-10-07T00:59:29Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/gps/GPSControlPanel.java", "diffHunk": "@@ -17,6 +20,22 @@ public GPSControlPanel(Category category, SlimefunItemStack item, RecipeType rec\n \n     @Override\n     public BlockUseHandler getItemHandler() {\n-        return e -> SlimefunPlugin.getGPSNetwork().openTransmitterControlPanel(e.getPlayer());\n+        return e ->  {\n+            e.cancel();\n+\n+            Player p = e.getPlayer();\n+\n+            if (p.hasPermission(\"slimefun.inventory.bypass\")", "originalCommit": "37f0715156dd8a8f7228f532daf9e3aeec34a2a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NzY4MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r500677681", "bodyText": "You should really have a designated permissions node for this, it's not an inventory.", "author": "TheBusyBiscuit", "createdAt": "2020-10-07T00:59:34Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/geo/GEOScanner.java", "diffHunk": "@@ -19,10 +22,22 @@ public GEOScanner(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Override\n     public BlockUseHandler getItemHandler() {\n         return e -> {\n+            e.cancel();\n+\n             Block b = e.getClickedBlock().get();\n+            Player p = e.getPlayer();\n \n-            e.cancel();\n-            SlimefunPlugin.getGPSNetwork().getResourceManager().scan(e.getPlayer(), b, 0);\n+            if (p.hasPermission(\"slimefun.inventory.bypass\")", "originalCommit": "37f0715156dd8a8f7228f532daf9e3aeec34a2a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b577c1e4a369fe954420ecb7b2fe0aa2cd1ce5d7", "url": "https://github.com/Slimefun/Slimefun4/commit/b577c1e4a369fe954420ecb7b2fe0aa2cd1ce5d7", "message": "Did changes", "committedDate": "2020-10-07T18:45:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI4NDk5OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r501284998", "bodyText": "Misplaced imports.", "author": "LinoxGH", "createdAt": "2020-10-07T20:19:37Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/geo/GEOScanner.java", "diffHunk": "@@ -1,6 +1,9 @@\n package io.github.thebusybiscuit.slimefun4.implementation.items.geo;\n \n+import io.github.thebusybiscuit.cscorelib2.protection.ProtectableAction;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;", "originalCommit": "b577c1e4a369fe954420ecb7b2fe0aa2cd1ce5d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI4NTYzNg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2402#discussion_r501285636", "bodyText": "Misplaced imports.", "author": "LinoxGH", "createdAt": "2020-10-07T20:20:46Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/gps/GPSControlPanel.java", "diffHunk": "@@ -1,5 +1,8 @@\n package io.github.thebusybiscuit.slimefun4.implementation.items.gps;\n \n+import io.github.thebusybiscuit.cscorelib2.protection.ProtectableAction;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;", "originalCommit": "b577c1e4a369fe954420ecb7b2fe0aa2cd1ce5d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "90ccbb2261d0da148454f551b51853f8e00aae2b", "url": "https://github.com/Slimefun/Slimefun4/commit/90ccbb2261d0da148454f551b51853f8e00aae2b", "message": "Organized imports", "committedDate": "2020-10-07T22:37:41Z", "type": "commit"}]}