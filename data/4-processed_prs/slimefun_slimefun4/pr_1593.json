{"pr_number": 1593, "pr_title": "General performance improvements", "pr_createdAt": "2020-02-27T16:13:54Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/1593", "timeline": [{"oid": "cbd7faf4d74ac74cea96b75e1844222c82012afd", "url": "https://github.com/Slimefun/Slimefun4/commit/cbd7faf4d74ac74cea96b75e1844222c82012afd", "message": "General performance improvements", "committedDate": "2020-02-27T16:11:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MTk2Nw==", "url": "https://github.com/Slimefun/Slimefun4/pull/1593#discussion_r385351967", "bodyText": "SLASH? Shouldn't this be DASH?", "author": "TheBusyBiscuit", "createdAt": "2020-02-27T20:24:30Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/androids/ScriptHolder.java", "diffHunk": "@@ -71,7 +72,7 @@ protected void exoticFarm(BlockMenu menu, Block block) {\n \n \tpublic void openScript(Player p, Block b, String script) {\n \t\tChestMenu menu = new ChestMenu(ChatColor.DARK_AQUA + SlimefunPlugin.getLocal().getMessage(p, \"android.scripts.editor\"));\n-\t\tString[] commands = script.split(\"-\");\n+\t\tString[] commands = PatternUtils.SLASH_SEPARATOR.split(script);", "originalCommit": "cbd7faf4d74ac74cea96b75e1844222c82012afd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MjEzMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/1593#discussion_r385352132", "bodyText": "Again: SLASH? Shouldn't this be DASH?", "author": "TheBusyBiscuit", "createdAt": "2020-02-27T20:24:52Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/androids/ScriptHolder.java", "diffHunk": "@@ -391,7 +392,7 @@ protected String getScriptRatingPercentage(Config script) {\n \n \tprotected void openScriptComponentEditor(Player p, Block b, String script, int index) {\n \t\tChestMenu menu = new ChestMenu(ChatColor.DARK_AQUA + SlimefunPlugin.getLocal().getMessage(p, \"android.scripts.editor\"));\n-\t\tString[] commands = script.split(\"-\");\n+\t\tString[] commands = PatternUtils.SLASH_SEPARATOR.split(script);", "originalCommit": "cbd7faf4d74ac74cea96b75e1844222c82012afd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MzU5Mg==", "url": "https://github.com/Slimefun/Slimefun4/pull/1593#discussion_r385353592", "bodyText": "Is this Slash safe here or does it need to be escaped?", "author": "TheBusyBiscuit", "createdAt": "2020-02-27T20:28:10Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/PatternUtils.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.utils;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * This class is created for common-use patterns used in things such as {@link String#split(String)}. <br />\n+ * Every time something like {@link String#split(String)} is called it will compile a {@link Pattern}, for code that is called\n+ * often this can be a massive performance loss. This class solves that, one compile but many uses!\n+ */\n+public final class PatternUtils {\n+\n+    private PatternUtils() {}\n+\n+    public static final Pattern SEMICOLON = Pattern.compile(\";\");\n+    public static final Pattern HASH = Pattern.compile(\"#\");\n+    public static final Pattern COMMA = Pattern.compile(\",\");\n+    public static final Pattern SLASH_SEPARATOR = Pattern.compile(\" / \");", "originalCommit": "cbd7faf4d74ac74cea96b75e1844222c82012afd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEwODI3NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1593#discussion_r386108274", "bodyText": "yes its safe", "author": "J3fftw1", "createdAt": "2020-03-01T13:28:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MzU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NDIyMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1593#discussion_r385354221", "bodyText": "Please fix the indentation here.", "author": "TheBusyBiscuit", "createdAt": "2020-02-27T20:29:39Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/GearListener.java", "diffHunk": "@@ -1,68 +1,57 @@\n package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n \n-import me.mrCookieSlime.Slimefun.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.JetBootsTask;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.JetpackTask;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.MagnetTask;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.ParachuteTask;\n import me.mrCookieSlime.Slimefun.Lists.SlimefunItems;\n import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.JetBoots;\n import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.Jetpack;\n import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n import me.mrCookieSlime.Slimefun.Setup.SlimefunManager;\n+import me.mrCookieSlime.Slimefun.SlimefunPlugin;\n import me.mrCookieSlime.Slimefun.api.Slimefun;\n-\n-import org.bukkit.Bukkit;\n import org.bukkit.entity.Player;\n import org.bukkit.event.EventHandler;\n import org.bukkit.event.Listener;\n import org.bukkit.event.player.PlayerToggleSneakEvent;\n \n-import io.github.thebusybiscuit.slimefun4.implementation.tasks.JetBootsTask;\n-import io.github.thebusybiscuit.slimefun4.implementation.tasks.JetpackTask;\n-import io.github.thebusybiscuit.slimefun4.implementation.tasks.MagnetTask;\n-import io.github.thebusybiscuit.slimefun4.implementation.tasks.ParachuteTask;\n-\n public class GearListener implements Listener {\n \n-\tpublic GearListener(SlimefunPlugin plugin) {\n-\t\tplugin.getServer().getPluginManager().registerEvents(this, plugin);\n-\t}\n+    public GearListener(SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onToggleSneak(PlayerToggleSneakEvent e) {\n+        if (!e.isSneaking()) return;\n+\t\tPlayer p = e.getPlayer();", "originalCommit": "cbd7faf4d74ac74cea96b75e1844222c82012afd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NDkyOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/1593#discussion_r385354928", "bodyText": "So if the Player wears no chestplate you return.\nThe jetboots will never even get checked if you return here prematurely.", "author": "TheBusyBiscuit", "createdAt": "2020-02-27T20:31:09Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/GearListener.java", "diffHunk": "@@ -1,68 +1,57 @@\n package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n \n-import me.mrCookieSlime.Slimefun.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.JetBootsTask;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.JetpackTask;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.MagnetTask;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.ParachuteTask;\n import me.mrCookieSlime.Slimefun.Lists.SlimefunItems;\n import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.JetBoots;\n import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.Jetpack;\n import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n import me.mrCookieSlime.Slimefun.Setup.SlimefunManager;\n+import me.mrCookieSlime.Slimefun.SlimefunPlugin;\n import me.mrCookieSlime.Slimefun.api.Slimefun;\n-\n-import org.bukkit.Bukkit;\n import org.bukkit.entity.Player;\n import org.bukkit.event.EventHandler;\n import org.bukkit.event.Listener;\n import org.bukkit.event.player.PlayerToggleSneakEvent;\n \n-import io.github.thebusybiscuit.slimefun4.implementation.tasks.JetBootsTask;\n-import io.github.thebusybiscuit.slimefun4.implementation.tasks.JetpackTask;\n-import io.github.thebusybiscuit.slimefun4.implementation.tasks.MagnetTask;\n-import io.github.thebusybiscuit.slimefun4.implementation.tasks.ParachuteTask;\n-\n public class GearListener implements Listener {\n \n-\tpublic GearListener(SlimefunPlugin plugin) {\n-\t\tplugin.getServer().getPluginManager().registerEvents(this, plugin);\n-\t}\n+    public GearListener(SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onToggleSneak(PlayerToggleSneakEvent e) {\n+        if (!e.isSneaking()) return;\n+\t\tPlayer p = e.getPlayer();\n+\n+        if (p.getInventory().getChestplate() != null) {\n+            SlimefunItem chestplate = SlimefunItem.getByItem(p.getInventory().getChestplate());\n+            if (chestplate == null || !Slimefun.hasUnlocked(p, chestplate, true)) return;", "originalCommit": "cbd7faf4d74ac74cea96b75e1844222c82012afd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "105b32583dcb0d7efbd589acb0c1a55ae59abfcb", "url": "https://github.com/Slimefun/Slimefun4/commit/105b32583dcb0d7efbd589acb0c1a55ae59abfcb", "message": "Changed requested changes", "committedDate": "2020-03-01T13:27:11Z", "type": "commit"}, {"oid": "efa8d81f7714377bce41916137a6d94507072e5a", "url": "https://github.com/Slimefun/Slimefun4/commit/efa8d81f7714377bce41916137a6d94507072e5a", "message": "Merge branch 'master' of https://github.com/TheBusyBiscuit/Slimefun4 into fix/performance-improvements\n\n# Conflicts:\n#\tsrc/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "committedDate": "2020-03-01T13:33:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEwOTM3NQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1593#discussion_r386109375", "bodyText": "This should also rather be DASH than SLASH right?", "author": "TheBusyBiscuit", "createdAt": "2020-03-01T13:44:30Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -138,7 +139,8 @@ public void onEnchant(EnchantItemEvent e) {\n \t\t\t}\n \t\t\t\n \t\t\tString enchant = enchantments.get(random.nextInt(enchantments.size()));\n-\t\t\te.getEnchantsToAdd().put(Enchantment.getByKey(NamespacedKey.minecraft(enchant.split(\"-\")[0])), Integer.parseInt(enchant.split(\"-\")[1]));\n+\t\t\tString[] enchantSplit = PatternUtils.SLASH_SEPARATOR.split(enchant);", "originalCommit": "efa8d81f7714377bce41916137a6d94507072e5a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjExMDQyOQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/1593#discussion_r386110429", "bodyText": "fixed", "author": "J3fftw1", "createdAt": "2020-03-01T13:59:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEwOTM3NQ=="}], "type": "inlineReview"}, {"oid": "56648c464f8f0c35931b32284911b35e60f83319", "url": "https://github.com/Slimefun/Slimefun4/commit/56648c464f8f0c35931b32284911b35e60f83319", "message": "last fix!", "committedDate": "2020-03-01T13:59:11Z", "type": "commit"}, {"oid": "7b74a347b6c1762d1b7a8049e98a84c2feaef87a", "url": "https://github.com/Slimefun/Slimefun4/commit/7b74a347b6c1762d1b7a8049e98a84c2feaef87a", "message": "Merge branch 'master' of https://github.com/TheBusyBiscuit/Slimefun4 into fix/performance-improvements\n\n# Conflicts:\n#\tsrc/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/GearListener.java", "committedDate": "2020-03-01T14:52:36Z", "type": "commit"}]}