{"pr_number": 2121, "pr_title": "Fixed piglin SlimefunItem pickup", "pr_createdAt": "2020-07-25T10:24:36Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2121", "timeline": [{"oid": "9fb79c86225eb28824858ff30f908ea0a35ea452", "url": "https://github.com/Slimefun/Slimefun4/commit/9fb79c86225eb28824858ff30f908ea0a35ea452", "message": "Fixed piglin SlimefunItem pickup", "committedDate": "2020-07-25T10:04:22Z", "type": "commit"}, {"oid": "17a68ddcf507fce0d73708d22fb1169d7706f0ac", "url": "https://github.com/Slimefun/Slimefun4/commit/17a68ddcf507fce0d73708d22fb1169d7706f0ac", "message": "Removed unnecessary Zombified Piglin check", "committedDate": "2020-07-25T10:19:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5MTI0MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460391241", "bodyText": "Enum comparisons should be done using == instead of .equals() as it allows the JVM to do premature eliminations during compiler-time rather than runtime.", "author": "TheBusyBiscuit", "createdAt": "2020-07-25T10:30:04Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ItemPickupListener.java", "diffHunk": "@@ -30,6 +34,12 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         else if (e.getItem().getItemStack().hasItemMeta() && e.getItem().getItemStack().getItemMeta().hasDisplayName() && e.getItem().getItemStack().getItemMeta().getDisplayName().startsWith(ITEM_PREFIX)) {\n             e.setCancelled(true);\n             e.getItem().remove();\n+        } else if (SlimefunPlugin.getMinecraftVersion().isAtLeast(MinecraftVersion.MINECRAFT_1_16)) {\n+            if (e.getEntityType().equals(EntityType.PIGLIN)) {", "originalCommit": "17a68ddcf507fce0d73708d22fb1169d7706f0ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5MTMxMw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460391313", "bodyText": "Got it", "author": "poma123", "createdAt": "2020-07-25T10:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5MTI0MQ=="}], "type": "inlineReview"}, {"oid": "a6d69ee9d68c036e3909281c5d057be0b99c5637", "url": "https://github.com/Slimefun/Slimefun4/commit/a6d69ee9d68c036e3909281c5d057be0b99c5637", "message": "Requested changes", "committedDate": "2020-07-25T10:31:52Z", "type": "commit"}, {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4", "url": "https://github.com/Slimefun/Slimefun4/commit/5ff93b75e04a6101507ecd11259bf52dcd85cbf4", "message": "Added PiglinListener", "committedDate": "2020-07-25T11:37:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjQzMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396432", "bodyText": "I know I know don't blame me!!!", "author": "poma123", "createdAt": "2020-07-25T11:38:33Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -10,9 +10,12 @@\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;", "originalCommit": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a323b09e38755d8b73f51782eafd32cb1227bb90", "url": "https://github.com/Slimefun/Slimefun4/commit/a323b09e38755d8b73f51782eafd32cb1227bb90", "message": "Fixed a tremendous mistake", "committedDate": "2020-07-25T11:41:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjQzOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396438", "bodyText": "No star imports please D:", "author": "TheBusyBiscuit", "createdAt": "2020-07-25T11:38:44Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -10,9 +10,12 @@\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;", "originalCommit": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjQ3MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396470", "bodyText": "Also what is that import doing here?", "author": "TheBusyBiscuit", "createdAt": "2020-07-25T11:39:05Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -10,9 +10,12 @@\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n import org.bukkit.Bukkit;\n import org.bukkit.Server;\n import org.bukkit.command.Command;\n+import org.bukkit.entity.EntityType;", "originalCommit": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjgwMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396800", "bodyText": "No idea lol", "author": "poma123", "createdAt": "2020-07-25T11:43:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjYyNw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396627", "bodyText": "We should probably also add a message saying that you cannot barter with piglins using Slimefun items.", "author": "TheBusyBiscuit", "createdAt": "2020-07-25T11:40:45Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Item;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityPickupItemEvent;\n+import org.bukkit.event.entity.EntityTargetEvent;\n+import org.bukkit.event.player.PlayerInteractAtEntityEvent;\n+import org.bukkit.event.player.PlayerInteractEntityEvent;\n+import org.bukkit.inventory.EquipmentSlot;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * Listens to \"Piglin trading events\" to prevent trading with Slimefun items.\n+ *\n+ * @author poma123\n+ */\n+public class PiglinListener implements Listener {\n+\n+    public PiglinListener(SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onEntityPickup(EntityPickupItemEvent e) {\n+        if (e.getEntityType() == EntityType.PIGLIN) {\n+            if (SlimefunItem.getByItem(e.getItem().getItemStack()) != null) {\n+                e.setCancelled(true);\n+            }\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onInteractEntity(PlayerInteractEntityEvent e) {\n+        if (!e.getRightClicked().isValid() || e.getRightClicked().getType() != EntityType.PIGLIN) {\n+            return;\n+        }\n+\n+        ItemStack itemStack;\n+\n+        if (e.getHand() == EquipmentSlot.OFF_HAND) {\n+            itemStack = e.getPlayer().getInventory().getItemInOffHand();\n+        } else {\n+            itemStack = e.getPlayer().getInventory().getItemInMainHand();\n+        }\n+\n+        SlimefunItem sfItem = SlimefunItem.getByItem(itemStack);\n+\n+        if (sfItem != null) {\n+            e.setCancelled(true);", "originalCommit": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NzUwMw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460397503", "bodyText": "Is this resolved in the last commit?", "author": "poma123", "createdAt": "2020-07-25T11:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjYyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NzU3NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460397574", "bodyText": "Looks good to me", "author": "TheBusyBiscuit", "createdAt": "2020-07-25T11:53:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjYyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NzYxOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460397618", "bodyText": "Yay", "author": "poma123", "createdAt": "2020-07-25T11:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjYyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjY4Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396683", "bodyText": "Also just a small performance optimization: We should check if the item is a gold ingot, that way we won't have to do any checks that are not needed.", "author": "TheBusyBiscuit", "createdAt": "2020-07-25T11:41:41Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Item;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityPickupItemEvent;\n+import org.bukkit.event.entity.EntityTargetEvent;\n+import org.bukkit.event.player.PlayerInteractAtEntityEvent;\n+import org.bukkit.event.player.PlayerInteractEntityEvent;\n+import org.bukkit.inventory.EquipmentSlot;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * Listens to \"Piglin trading events\" to prevent trading with Slimefun items.\n+ *\n+ * @author poma123\n+ */\n+public class PiglinListener implements Listener {\n+\n+    public PiglinListener(SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onEntityPickup(EntityPickupItemEvent e) {\n+        if (e.getEntityType() == EntityType.PIGLIN) {\n+            if (SlimefunItem.getByItem(e.getItem().getItemStack()) != null) {\n+                e.setCancelled(true);\n+            }\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onInteractEntity(PlayerInteractEntityEvent e) {\n+        if (!e.getRightClicked().isValid() || e.getRightClicked().getType() != EntityType.PIGLIN) {\n+            return;\n+        }\n+\n+        ItemStack itemStack;\n+\n+        if (e.getHand() == EquipmentSlot.OFF_HAND) {\n+            itemStack = e.getPlayer().getInventory().getItemInOffHand();\n+        } else {\n+            itemStack = e.getPlayer().getInventory().getItemInMainHand();\n+        }\n+", "originalCommit": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dde3ec26ba57e3bd73d81c2ab7b977811f8390a0", "url": "https://github.com/Slimefun/Slimefun4/commit/dde3ec26ba57e3bd73d81c2ab7b977811f8390a0", "message": "Requested changes", "committedDate": "2020-07-25T11:51:10Z", "type": "commit"}]}