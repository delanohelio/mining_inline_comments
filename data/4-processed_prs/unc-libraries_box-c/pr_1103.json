{"pr_number": 1103, "pr_title": "Check patron roles instead of princ roles when adding patron-settings tag", "pr_createdAt": "2020-10-14T14:58:18Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/1103", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1NjkxMw==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r508656913", "bodyText": "After checking in with Julie about this, the tag should only appear if the patron permissions are set to something other than the default.\nFor folders/works/files, the default would be either objPatronRoles.size() == 0 OR the authenticated and everyone groups both set to canViewOriginals.\nFor collections, it has to work a little different, we would show patron-settings if objPatronRoles.size() < 2, or eitherauthenticated or everyone groups had any value other than canViewOriginals.\nAnd we can skip this tag altogether for Units.", "author": "bbpennel", "createdAt": "2020-10-20T16:09:40Z", "path": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetAccessStatusFilter.java", "diffHunk": "@@ -105,7 +106,7 @@ public void setObjectAclFactory(ObjectAclFactory oaf) {\n             status.add(FacetConstants.PUBLIC_ACCESS);\n         }\n \n-        if (objPrincRoles.size() > 0) {\n+        if (objPatronRoles.size() > 0) {", "originalCommit": "9343fbddfabc1b03728a29feccf3bd39a8492bb5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2MTEwNw==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r508661107", "bodyText": "Will probably want to add a test or two to verify that collections get the right patron-settings tag", "author": "bbpennel", "createdAt": "2020-10-20T16:14:02Z", "path": "solr-ingest/src/test/java/edu/unc/lib/dl/data/ingest/solr/filter/SetAccessStatusFilterTest.java", "diffHunk": "@@ -17,6 +17,7 @@\n \n import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.AUTHENTICATED_PRINC;\n import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.PUBLIC_PRINC;\n+import static java.util.Arrays.asList;", "originalCommit": "9343fbddfabc1b03728a29feccf3bd39a8492bb5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0863a738575a4bee7ba1dfa884024f5ee53bb3c2", "url": "https://github.com/UNC-Libraries/box-c/commit/0863a738575a4bee7ba1dfa884024f5ee53bb3c2", "message": "Don't add patron settings if obj type defaults are set", "committedDate": "2020-10-21T18:48:39Z", "type": "forcePushed"}, {"oid": "c4db2adad17a975f124a3420f39e0b4a6853e48a", "url": "https://github.com/UNC-Libraries/box-c/commit/c4db2adad17a975f124a3420f39e0b4a6853e48a", "message": "Don't add patron settings if obj type defaults are set", "committedDate": "2020-10-21T20:16:16Z", "type": "forcePushed"}, {"oid": "afdeb6463f8df2aa9bcffdb7a4f0829f782f5b52", "url": "https://github.com/UNC-Libraries/box-c/commit/afdeb6463f8df2aa9bcffdb7a4f0829f782f5b52", "message": "Check patron roles instead of princ roles when adding patron-settings tag", "committedDate": "2020-10-21T20:20:32Z", "type": "commit"}, {"oid": "ff1596765f5c9856ef9c07833b595c82ae8654b9", "url": "https://github.com/UNC-Libraries/box-c/commit/ff1596765f5c9856ef9c07833b595c82ae8654b9", "message": "Don't add patron settings if obj type defaults are set", "committedDate": "2020-10-21T20:20:32Z", "type": "commit"}, {"oid": "f85f1e7cfceebb1fb47935ccc24421a58272baa4", "url": "https://github.com/UNC-Libraries/box-c/commit/f85f1e7cfceebb1fb47935ccc24421a58272baa4", "message": "Fix issue when only one role is returned", "committedDate": "2020-10-21T20:31:56Z", "type": "commit"}, {"oid": "f85f1e7cfceebb1fb47935ccc24421a58272baa4", "url": "https://github.com/UNC-Libraries/box-c/commit/f85f1e7cfceebb1fb47935ccc24421a58272baa4", "message": "Fix issue when only one role is returned", "committedDate": "2020-10-21T20:31:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwOTA3Mg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r509709072", "bodyText": "you should do contentObj instanceof AdminUnit instead of retrieving the types and comparing them", "author": "bbpennel", "createdAt": "2020-10-21T21:21:43Z", "path": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetAccessStatusFilter.java", "diffHunk": "@@ -105,13 +108,45 @@ public void setObjectAclFactory(ObjectAclFactory oaf) {\n             status.add(FacetConstants.PUBLIC_ACCESS);\n         }\n \n-        if (objPrincRoles.size() > 0) {\n+        if (addPatronSettings(dip.getContentObject())) {\n             status.add(FacetConstants.PATRON_SETTINGS);\n         }\n \n         return status;\n     }\n \n+    private boolean addPatronSettings(ContentObject contentObj) {\n+        List<String> objTypes = contentObj.getTypes();", "originalCommit": "f85f1e7cfceebb1fb47935ccc24421a58272baa4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwOTk3MA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r509709970", "bodyText": "you can pass the contentObj in instead of rescType, then do contentObj instanceof CollectionObject. Might make sense at some point to add a method to ContentObject to getResourceType or something, which would return the ResourceType. But we probably don't need that here.", "author": "bbpennel", "createdAt": "2020-10-21T21:22:51Z", "path": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetAccessStatusFilter.java", "diffHunk": "@@ -105,13 +108,45 @@ public void setObjectAclFactory(ObjectAclFactory oaf) {\n             status.add(FacetConstants.PUBLIC_ACCESS);\n         }\n \n-        if (objPrincRoles.size() > 0) {\n+        if (addPatronSettings(dip.getContentObject())) {\n             status.add(FacetConstants.PATRON_SETTINGS);\n         }\n \n         return status;\n     }\n \n+    private boolean addPatronSettings(ContentObject contentObj) {\n+        List<String> objTypes = contentObj.getTypes();\n+        ResourceType objType = ResourceType.getResourceTypeForUris(objTypes);\n+        if (objType == null || objType.equals(Cdr.AdminUnit.getURI())) {\n+            return false;\n+        }\n+\n+        return hasPatronSettings(contentObj.getPid(), objType);\n+    }\n+\n+    private boolean hasPatronSettings(PID pid, ResourceType rescType) {\n+        List<RoleAssignment> objPatronRoles = objAclFactory.getPatronRoleAssignments(pid);\n+        int numRoles = objPatronRoles.size();\n+        boolean isCollection = rescType.equals(Cdr.Collection.getLocalName());", "originalCommit": "f85f1e7cfceebb1fb47935ccc24421a58272baa4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcxMjIwMg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r509712202", "bodyText": "I'd suggest giving the method a name that indicates that it is evaluating a condition rather than actually performing an addition. Maybe needsPatronSettingsStatus, or merge it with hasPatronSettings", "author": "bbpennel", "createdAt": "2020-10-21T21:25:52Z", "path": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetAccessStatusFilter.java", "diffHunk": "@@ -105,13 +108,45 @@ public void setObjectAclFactory(ObjectAclFactory oaf) {\n             status.add(FacetConstants.PUBLIC_ACCESS);\n         }\n \n-        if (objPrincRoles.size() > 0) {\n+        if (addPatronSettings(dip.getContentObject())) {\n             status.add(FacetConstants.PATRON_SETTINGS);\n         }\n \n         return status;\n     }\n \n+    private boolean addPatronSettings(ContentObject contentObj) {", "originalCommit": "f85f1e7cfceebb1fb47935ccc24421a58272baa4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcxMjU4NA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r509712584", "bodyText": "you can remove the inner parens", "author": "bbpennel", "createdAt": "2020-10-21T21:26:16Z", "path": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetAccessStatusFilter.java", "diffHunk": "@@ -105,13 +108,45 @@ public void setObjectAclFactory(ObjectAclFactory oaf) {\n             status.add(FacetConstants.PUBLIC_ACCESS);\n         }\n \n-        if (objPrincRoles.size() > 0) {\n+        if (addPatronSettings(dip.getContentObject())) {\n             status.add(FacetConstants.PATRON_SETTINGS);\n         }\n \n         return status;\n     }\n \n+    private boolean addPatronSettings(ContentObject contentObj) {\n+        List<String> objTypes = contentObj.getTypes();\n+        ResourceType objType = ResourceType.getResourceTypeForUris(objTypes);\n+        if (objType == null || objType.equals(Cdr.AdminUnit.getURI())) {\n+            return false;\n+        }\n+\n+        return hasPatronSettings(contentObj.getPid(), objType);\n+    }\n+\n+    private boolean hasPatronSettings(PID pid, ResourceType rescType) {\n+        List<RoleAssignment> objPatronRoles = objAclFactory.getPatronRoleAssignments(pid);\n+        int numRoles = objPatronRoles.size();\n+        boolean isCollection = rescType.equals(Cdr.Collection.getLocalName());\n+\n+        if ((!isCollection && numRoles == 0)) {", "originalCommit": "f85f1e7cfceebb1fb47935ccc24421a58272baa4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcxMzM1Mg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r509713352", "bodyText": "getURI() already returns a string", "author": "bbpennel", "createdAt": "2020-10-21T21:27:08Z", "path": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetAccessStatusFilter.java", "diffHunk": "@@ -105,13 +108,45 @@ public void setObjectAclFactory(ObjectAclFactory oaf) {\n             status.add(FacetConstants.PUBLIC_ACCESS);\n         }\n \n-        if (objPrincRoles.size() > 0) {\n+        if (addPatronSettings(dip.getContentObject())) {\n             status.add(FacetConstants.PATRON_SETTINGS);\n         }\n \n         return status;\n     }\n \n+    private boolean addPatronSettings(ContentObject contentObj) {\n+        List<String> objTypes = contentObj.getTypes();\n+        ResourceType objType = ResourceType.getResourceTypeForUris(objTypes);\n+        if (objType == null || objType.equals(Cdr.AdminUnit.getURI())) {\n+            return false;\n+        }\n+\n+        return hasPatronSettings(contentObj.getPid(), objType);\n+    }\n+\n+    private boolean hasPatronSettings(PID pid, ResourceType rescType) {\n+        List<RoleAssignment> objPatronRoles = objAclFactory.getPatronRoleAssignments(pid);\n+        int numRoles = objPatronRoles.size();\n+        boolean isCollection = rescType.equals(Cdr.Collection.getLocalName());\n+\n+        if ((!isCollection && numRoles == 0)) {\n+            return false;\n+        } else if (isCollection && numRoles < 2) {\n+            return true;\n+        }\n+\n+        String canViewOrig = canViewOriginals.getURI().toString();", "originalCommit": "f85f1e7cfceebb1fb47935ccc24421a58272baa4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDExMzQ1OA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r510113458", "bodyText": "Seems to return a URI, if the toString isn't added", "author": "lfarrell", "createdAt": "2020-10-22T12:18:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcxMzM1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcxNjM2Ng==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r509716366", "bodyText": "I'd suggest iterating through the list of roles and returning false if any of them aren't canViewOriginal. There will probably be more than 2 groups in the future, and should have the same affect.", "author": "bbpennel", "createdAt": "2020-10-21T21:30:28Z", "path": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetAccessStatusFilter.java", "diffHunk": "@@ -105,13 +108,45 @@ public void setObjectAclFactory(ObjectAclFactory oaf) {\n             status.add(FacetConstants.PUBLIC_ACCESS);\n         }\n \n-        if (objPrincRoles.size() > 0) {\n+        if (addPatronSettings(dip.getContentObject())) {\n             status.add(FacetConstants.PATRON_SETTINGS);\n         }\n \n         return status;\n     }\n \n+    private boolean addPatronSettings(ContentObject contentObj) {\n+        List<String> objTypes = contentObj.getTypes();\n+        ResourceType objType = ResourceType.getResourceTypeForUris(objTypes);\n+        if (objType == null || objType.equals(Cdr.AdminUnit.getURI())) {\n+            return false;\n+        }\n+\n+        return hasPatronSettings(contentObj.getPid(), objType);\n+    }\n+\n+    private boolean hasPatronSettings(PID pid, ResourceType rescType) {\n+        List<RoleAssignment> objPatronRoles = objAclFactory.getPatronRoleAssignments(pid);\n+        int numRoles = objPatronRoles.size();\n+        boolean isCollection = rescType.equals(Cdr.Collection.getLocalName());\n+\n+        if ((!isCollection && numRoles == 0)) {\n+            return false;\n+        } else if (isCollection && numRoles < 2) {\n+            return true;\n+        }\n+\n+        String canViewOrig = canViewOriginals.getURI().toString();\n+        UserRole roleOne = objPatronRoles.get(0).getRole();", "originalCommit": "f85f1e7cfceebb1fb47935ccc24421a58272baa4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b50dce62b1ed230176e4c693e6707f60dc12c85d", "url": "https://github.com/UNC-Libraries/box-c/commit/b50dce62b1ed230176e4c693e6707f60dc12c85d", "message": "* Combine patron setting check methods\n* Update tests", "committedDate": "2020-10-22T13:55:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4NjA1Ng==", "url": "https://github.com/UNC-Libraries/box-c/pull/1103#discussion_r510186056", "bodyText": "canViewOriginals.getURI() should be sufficient since it returns a string", "author": "bbpennel", "createdAt": "2020-10-22T14:00:47Z", "path": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetAccessStatusFilter.java", "diffHunk": "@@ -108,43 +108,35 @@ public void setObjectAclFactory(ObjectAclFactory oaf) {\n             status.add(FacetConstants.PUBLIC_ACCESS);\n         }\n \n-        if (addPatronSettings(dip.getContentObject())) {\n+        if (hasPatronSettings(dip.getContentObject())) {\n             status.add(FacetConstants.PATRON_SETTINGS);\n         }\n \n         return status;\n     }\n \n-    private boolean addPatronSettings(ContentObject contentObj) {\n-        List<String> objTypes = contentObj.getTypes();\n-        ResourceType objType = ResourceType.getResourceTypeForUris(objTypes);\n-        if (objType == null || objType.equals(Cdr.AdminUnit.getURI())) {\n+    private boolean hasPatronSettings(ContentObject contentObj) {\n+        if (contentObj instanceof AdminUnit) {\n             return false;\n         }\n \n-        return hasPatronSettings(contentObj.getPid(), objType);\n-    }\n-\n-    private boolean hasPatronSettings(PID pid, ResourceType rescType) {\n-        List<RoleAssignment> objPatronRoles = objAclFactory.getPatronRoleAssignments(pid);\n+        List<RoleAssignment> objPatronRoles = objAclFactory.getPatronRoleAssignments(contentObj.getPid());\n         int numRoles = objPatronRoles.size();\n-        boolean isCollection = rescType.equals(Cdr.Collection.getLocalName());\n+        boolean isCollection = contentObj instanceof CollectionObject;\n \n-        if ((!isCollection && numRoles == 0)) {\n+        if (!isCollection && numRoles == 0) {\n             return false;\n         } else if (isCollection && numRoles < 2) {\n             return true;\n         }\n \n-        String canViewOrig = canViewOriginals.getURI().toString();\n-        UserRole roleOne = objPatronRoles.get(0).getRole();\n-\n-        if (numRoles > 1) {\n-            UserRole roleTwo = objPatronRoles.get(1).getRole();\n-            return (!roleOne.equals(canViewOrig) || !roleTwo.equals(canViewOrig));\n+        for (RoleAssignment role : objPatronRoles) {\n+            if (!role.getRole().equals(canViewOriginals.getURI().toString())) {", "originalCommit": "b50dce62b1ed230176e4c693e6707f60dc12c85d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2e668ab1a29d5144ba392413732ef6b2454b0f94", "url": "https://github.com/UNC-Libraries/box-c/commit/2e668ab1a29d5144ba392413732ef6b2454b0f94", "message": "Update role check", "committedDate": "2020-10-22T14:13:33Z", "type": "commit"}]}