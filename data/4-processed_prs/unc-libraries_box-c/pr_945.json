{"pr_number": 945, "pr_title": "Change editLabel to edit Filename", "pr_createdAt": "2020-03-30T18:25:55Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/945", "timeline": [{"oid": "862010e5f4665e1b3ac0d0de1deb75f2de1740e0", "url": "https://github.com/UNC-Libraries/box-c/commit/862010e5f4665e1b3ac0d0de1deb75f2de1740e0", "message": "* Change editLabel to edit Filename\n* Update Premis event and tests", "committedDate": "2020-03-30T18:23:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MjE3OA==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r400892178", "bodyText": "should throw a more specific exception. Maybe either java.lang.IllegalArgumentException orServiceException are options. ObjectTypeMismatchException may not quite be the right fit.", "author": "bbpennel", "createdAt": "2020-03-31T12:58:52Z", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/edit/EditFilenameService.java", "diffHunk": "@@ -67,17 +69,21 @@ public void editLabel(AgentPrincipals agent, PID pid, String label) {\n \n         try (Timer.Context context = timer.time()) {\n             aclService.assertHasAccess(\n-                    \"User does not have permissions to edit labels\",\n+                    \"User does not have permissions to edit filenames\",\n                     pid, agent.getPrincipals(), Permission.editDescription);\n \n             RepositoryObject obj = repoObjLoader.getRepositoryObject(pid);\n \n+            if (!(obj instanceof FileObject)) {\n+                throw new Exception(\"Failed to edit filename for \" + obj.getPid());", "originalCommit": "862010e5f4665e1b3ac0d0de1deb75f2de1740e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MzUwNw==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r400893507", "bodyText": "i sort of regret how these transaction exceptions take over, since they can mask many types of failures. You could wrap the service call in a try/catch and check that the cause of the exception is the expected type", "author": "bbpennel", "createdAt": "2020-03-31T13:00:57Z", "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/EditFilenameServiceTest.java", "diffHunk": "@@ -156,6 +160,15 @@ public void editLabelTest() {\n         assertEquals(pid, pidCaptor.getValue().get(0));\n     }\n \n+    @Test(expected = TransactionCancelledException.class)", "originalCommit": "862010e5f4665e1b3ac0d0de1deb75f2de1740e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5NDczMQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r400894731", "bodyText": "There's a typo in the name of this file, EditFilenamelForm.js. Use our newfound EditFilename powers to remove that L.", "author": "bbpennel", "createdAt": "2020-03-31T13:02:49Z", "path": "static/js/admin/src/EditFilenamelForm.js", "diffHunk": "@@ -0,0 +1,55 @@\n+define('EditFilenameForm', [ 'jquery', 'jquery-ui', 'underscore', 'RemoteStateChangeMonitor', 'tpl!../templates/admin/editFilenameForm',", "originalCommit": "862010e5f4665e1b3ac0d0de1deb75f2de1740e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNjgzNg==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r400936836", "bodyText": "Its occurring to me now that we should change the filename instead of the label. Could you change this to setting the ebucore:filename? We retain the original filename in the PREMIS, so that should be okay.", "author": "bbpennel", "createdAt": "2020-03-31T14:00:12Z", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/edit/EditFilenameService.java", "diffHunk": "@@ -67,17 +69,21 @@ public void editLabel(AgentPrincipals agent, PID pid, String label) {\n \n         try (Timer.Context context = timer.time()) {\n             aclService.assertHasAccess(\n-                    \"User does not have permissions to edit labels\",\n+                    \"User does not have permissions to edit filenames\",\n                     pid, agent.getPrincipals(), Permission.editDescription);\n \n             RepositoryObject obj = repoObjLoader.getRepositoryObject(pid);\n \n+            if (!(obj instanceof FileObject)) {\n+                throw new Exception(\"Failed to edit filename for \" + obj.getPid());\n+            }\n+\n             String oldLabel = getOldLabel(obj);\n \n             repoObjFactory.createExclusiveRelationship(obj, DcElements.title, label);", "originalCommit": "862010e5f4665e1b3ac0d0de1deb75f2de1740e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk0MDAzMg==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r400940032", "bodyText": "Looking through the solr indexing code, it appears we aren't populating label anymore, so removing that was a good thing, and perhaps we should make a followup to remove the field.\nUnfortunately the title and the filename for a file object are not necessarily going to be the same... The actual filename is stored in the solr datastream field, for example:\noriginal_file|image/jpeg|IMG_20200324_174901.jpg|jpg|3890854|urn:md5:788a541160b26039299647c9005b0767|\nit is the 3rd field in there. Perhaps pull the value from there? I believe this field will get updated after edit filename completes, but you might want to verify that.", "author": "bbpennel", "createdAt": "2020-03-31T14:04:29Z", "path": "static/templates/admin/editFilenameForm.html", "diffHunk": "@@ -1,9 +1,8 @@\n <iframe id=\"upload_file_frame\" name=\"upload_file_frame\" height=\"0\" width=\"0\" style=\"display: none;\"></iframe>\n-<form id=\"edit_filename_form\" method=\"post\" action=\"editlabel/<%= pid %>\" enctype=\"multipart/form-data\" target=\"upload_file_container\" class=\"edit_form edit_filename_form\">\n-\t\n+<form id=\"edit_filename_form\" class=\"edit_form edit_filename_form\">\n \t<div class=\"form_field\">\n \t\t<label>Filename</label>\n-\t\t<input name=\"label\" size=\"40\" value=\"<%= metadata.label %>\"></input>", "originalCommit": "862010e5f4665e1b3ac0d0de1deb75f2de1740e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d42aff7840a5eea72e4e4a0d6816eed5ce42d241", "url": "https://github.com/UNC-Libraries/box-c/commit/d42aff7840a5eea72e4e4a0d6816eed5ce42d241", "message": "Switch event to ebucore:filename and update tests", "committedDate": "2020-03-31T17:19:25Z", "type": "commit"}, {"oid": "d42aff7840a5eea72e4e4a0d6816eed5ce42d241", "url": "https://github.com/UNC-Libraries/box-c/commit/d42aff7840a5eea72e4e4a0d6816eed5ce42d241", "message": "Switch event to ebucore:filename and update tests", "committedDate": "2020-03-31T17:19:25Z", "type": "forcePushed"}, {"oid": "6ff0bf329d60a0bd1915db86b77504572cef9143", "url": "https://github.com/UNC-Libraries/box-c/commit/6ff0bf329d60a0bd1915db86b77504572cef9143", "message": "* Update and rename IT test\n* Fix import ordering", "committedDate": "2020-03-31T18:25:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2Njk3NQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r401266975", "bodyText": "You shouldn't need this throw, the fact that the repoObjLoader returns a work should trigger the expected exception", "author": "bbpennel", "createdAt": "2020-03-31T23:09:53Z", "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/EditFilenameServiceTest.java", "diffHunk": "@@ -142,20 +145,33 @@ public Object answer(InvocationOnMock invocation) throws Throwable {\n     }\n \n     @Test\n-    public void editLabelTest() {\n+    public void editFilenameTest() {\n         String label = \"a brand-new title!\";\n         service.editLabel(agent, pid, label);\n \n-        verify(repoObjFactory).createExclusiveRelationship(eq(repoObj), eq(DcElements.title), any(Resource.class));\n-        verify(premisLogger).buildEvent(eq(Premis.Migration));\n+        verify(repoObjFactory).createExclusiveRelationship(eq(repoObj), eq(Ebucore.filename), any(Resource.class));\n+        verify(premisLogger).buildEvent(eq(Premis.FilenameChange));\n         verify(eventBuilder).addEventDetail(labelCaptor.capture());\n-        assertEquals(labelCaptor.getValue(), \"Object renamed from \" + \"no dc:title\" +\" to \" + label);\n+        assertEquals(labelCaptor.getValue(), \"Object renamed from \" + \"no ebucore:filename\" +\" to \" + label);\n         verify(eventBuilder).writeAndClose();\n \n         verify(messageSender).sendUpdateDescriptionOperation(anyString(), pidCaptor.capture());\n         assertEquals(pid, pidCaptor.getValue().get(0));\n     }\n \n+    @Test\n+    public void editFilenamelNonFileObjTest() {\n+        when(repoObjLoader.getRepositoryObject(any(PID.class))).thenReturn(workObj);\n+        doThrow(new IllegalArgumentException()).when(aclService)", "originalCommit": "6ff0bf329d60a0bd1915db86b77504572cef9143", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI3MDUyNA==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r401270524", "bodyText": "actually I'm realizing that that this relationship needs to be set on the binary rather than the FileObject. You can get the binary by calling fileObj.getOriginalFile(). You'll also need to get the old label from the same place. Sorry I didn't notice that sooner, I haven't gotten to manually test yet.", "author": "bbpennel", "createdAt": "2020-03-31T23:21:09Z", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/edit/EditFilenameService.java", "diffHunk": "@@ -67,17 +68,21 @@ public void editLabel(AgentPrincipals agent, PID pid, String label) {\n \n         try (Timer.Context context = timer.time()) {\n             aclService.assertHasAccess(\n-                    \"User does not have permissions to edit labels\",\n+                    \"User does not have permissions to edit filenames\",\n                     pid, agent.getPrincipals(), Permission.editDescription);\n \n             RepositoryObject obj = repoObjLoader.getRepositoryObject(pid);\n \n+            if (!(obj instanceof FileObject)) {\n+                throw new IllegalArgumentException(\"Failed to edit filename for \" + obj.getPid());\n+            }\n+\n             String oldLabel = getOldLabel(obj);\n \n-            repoObjFactory.createExclusiveRelationship(obj, DcElements.title, label);\n+            repoObjFactory.createExclusiveRelationship(obj, Ebucore.filename, label);", "originalCommit": "6ff0bf329d60a0bd1915db86b77504572cef9143", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI3MzQ3MA==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r401273470", "bodyText": "Hmm, I'd rather avoid adding the new filename related code into this class. You should be able to work this functionality into EditFilenameForm.js, maybe override the open method to set the filename and then call the parent method.", "author": "bbpennel", "createdAt": "2020-03-31T23:30:34Z", "path": "static/js/admin/src/AbstractForm.js", "diffHunk": "@@ -8,6 +8,11 @@ define('AbstractForm', [ 'jquery', 'jquery-ui', 'underscore', 'ModalCreate',\n \n \t\tAbstractForm.prototype.open = function(resultObject) {\n \t\t\tvar dialogBox = new ModalCreate(this.options);\n+\n+\t\t\tif (this.options.showCurrentFilename) {", "originalCommit": "6ff0bf329d60a0bd1915db86b77504572cef9143", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "62d956c4149d461bf2472d81dde58942578741b8", "url": "https://github.com/UNC-Libraries/box-c/commit/62d956c4149d461bf2472d81dde58942578741b8", "message": "* Change where event takes place\n* Move method call", "committedDate": "2020-04-01T14:38:22Z", "type": "commit"}, {"oid": "2bff7c6a33ffadd67cf96296db2a1295503c913a", "url": "https://github.com/UNC-Libraries/box-c/commit/2bff7c6a33ffadd67cf96296db2a1295503c913a", "message": "Remove unused imports", "committedDate": "2020-04-01T14:59:05Z", "type": "commit"}, {"oid": "263830a208fa37aeeb9dbe27f6a936a3fa871218", "url": "https://github.com/UNC-Libraries/box-c/commit/263830a208fa37aeeb9dbe27f6a936a3fa871218", "message": "Update tests to look for orignal file metadata", "committedDate": "2020-04-01T18:23:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzNTE4OA==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r401835188", "bodyText": "you should make sure that its setting the object of the relationship to the expected filename in all these tests.", "author": "bbpennel", "createdAt": "2020-04-01T18:50:16Z", "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/EditFilenameServiceTest.java", "diffHunk": "@@ -142,20 +148,47 @@ public Object answer(InvocationOnMock invocation) throws Throwable {\n     }\n \n     @Test\n-    public void editLabelTest() {\n+    public void editFilenameTest() {\n+        when(binaryObj.getFilename()).thenReturn(\"Old file name\");\n         String label = \"a brand-new title!\";\n         service.editLabel(agent, pid, label);\n \n-        verify(repoObjFactory).createExclusiveRelationship(eq(repoObj), eq(DcElements.title), any(Resource.class));\n-        verify(premisLogger).buildEvent(eq(Premis.Migration));\n+        verify(repoObjFactory).createExclusiveRelationship(eq(binaryObj), eq(Ebucore.filename), any(Resource.class));\n+        verify(premisLogger).buildEvent(eq(Premis.FilenameChange));\n         verify(eventBuilder).addEventDetail(labelCaptor.capture());\n-        assertEquals(labelCaptor.getValue(), \"Object renamed from \" + \"no dc:title\" +\" to \" + label);\n+        assertEquals(labelCaptor.getValue(), \"Object renamed from Old file name to \" + label);\n         verify(eventBuilder).writeAndClose();\n \n         verify(messageSender).sendUpdateDescriptionOperation(anyString(), pidCaptor.capture());\n         assertEquals(pid, pidCaptor.getValue().get(0));\n     }\n \n+    @Test\n+    public void editNoFilenameTest() {\n+        String label = \"a brand-new title too!\";\n+        service.editLabel(agent, pid, label);\n+\n+        verify(repoObjFactory).createExclusiveRelationship(eq(binaryObj), eq(Ebucore.filename), any(Resource.class));", "originalCommit": "263830a208fa37aeeb9dbe27f6a936a3fa871218", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzNzI3OQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r401837279", "bodyText": "just pass in null for the model", "author": "bbpennel", "createdAt": "2020-04-01T18:53:55Z", "path": "services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/EditFilenameIT.java", "diffHunk": "@@ -48,18 +51,22 @@\n @ContextHierarchy({\n     @ContextConfiguration(\"/spring-test/test-fedora-container.xml\"),\n     @ContextConfiguration(\"/spring-test/cdr-client-container.xml\"),\n-    @ContextConfiguration(\"/edit-label-it-servlet.xml\")\n+    @ContextConfiguration(\"/edit-filename-it-servlet.xml\")\n })\n-public class EditLabelIT extends AbstractAPIIT {\n+public class EditFilenameIT extends AbstractAPIIT {\n+    private String filename = \"file.txt\";\n+    private String mimetype = \"text/plain\";\n \n     @Test\n     public void testCreateLabelWhereNoneExists() throws UnsupportedOperationException, Exception {\n         PID pid = makePid();\n \n-        WorkObject work = repositoryObjectFactory.createWorkObject(pid, null);\n+        Path file = createTempFile(\"test\", \"txt\");\n+        FileObject fileObj = repositoryObjectFactory.createFileObject(pid, ModelFactory.createDefaultModel());", "originalCommit": "263830a208fa37aeeb9dbe27f6a936a3fa871218", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzOTA1OQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r401839059", "bodyText": "you can save some steps here by doing fileObj.getOriginalFile().getResource().hasProperty(...) (or maybe its hasLiteral, one of those two), or fileObj.getOriginalFile().getResource().getProperty(...) if you want to keep using assertEquals.\nthis is the case for most of the tests.", "author": "bbpennel", "createdAt": "2020-04-01T18:56:52Z", "path": "services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/EditFilenameIT.java", "diffHunk": "@@ -69,21 +76,25 @@ public void testCreateLabelWhereNoneExists() throws UnsupportedOperationExceptio\n         assertEquals(pid.getUUID(), respMap.get(\"pid\"));\n         assertEquals(\"editLabel\", respMap.get(\"action\"));\n \n-        assertEquals(\"work_label\",\n-                work.getModel().getRequiredProperty(work.getResource(), DcElements.title).getLiteral().toString());\n+        assertEquals(\"work_filename\",\n+                fileObj.getOriginalFile().getModel().getRequiredProperty(", "originalCommit": "263830a208fa37aeeb9dbe27f6a936a3fa871218", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0MDUxMA==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r401840510", "bodyText": "the filename shouldn't be set on the FileObject. ebucore:filename gets automatically generated on the binary by passing the filename parameter in addOriginalFile, so you can remove the model stuff for the fileobj", "author": "bbpennel", "createdAt": "2020-04-01T18:59:17Z", "path": "services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/EditFilenameIT.java", "diffHunk": "@@ -69,21 +76,25 @@ public void testCreateLabelWhereNoneExists() throws UnsupportedOperationExceptio\n         assertEquals(pid.getUUID(), respMap.get(\"pid\"));\n         assertEquals(\"editLabel\", respMap.get(\"action\"));\n \n-        assertEquals(\"work_label\",\n-                work.getModel().getRequiredProperty(work.getResource(), DcElements.title).getLiteral().toString());\n+        assertEquals(\"work_filename\",\n+                fileObj.getOriginalFile().getModel().getRequiredProperty(\n+                        fileObj.getOriginalFile().getResource(), Ebucore.filename).getLiteral().toString());\n     }\n \n     @Test\n     public void testReplaceLabel() throws UnsupportedOperationException, Exception {\n         PID pid = makePid();\n         String oldLabel = \"old_work_label\";\n-        Model workModel = ModelFactory.createDefaultModel();\n-        workModel.add(workModel.createResource(pid.getRepositoryPath()), DcElements.title,\n+        Model fileModel = ModelFactory.createDefaultModel();", "originalCommit": "263830a208fa37aeeb9dbe27f6a936a3fa871218", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7213583b1cf52a2bdcb6ee02a4147c4279e286db", "url": "https://github.com/UNC-Libraries/box-c/commit/7213583b1cf52a2bdcb6ee02a4147c4279e286db", "message": "Update tests", "committedDate": "2020-04-02T15:11:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5OTcyOQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r402499729", "bodyText": "You shouldn't need to verify this method was called twice in a row, so you should be able to get rid of this line. Also I don't think you're verify the value before it is getting overwritten by line 156 before you verify it. Have you tried just doing verify(repoObjFactory).createExclusiveRelationship(eq(binaryObj), eq(Ebucore.filename), eq(label)) ? If that doesn't work, then you'll need another assertEquals for the label right after this capture.\nYou'll want to make the same changes in the other test.", "author": "bbpennel", "createdAt": "2020-04-02T17:46:30Z", "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/EditFilenameServiceTest.java", "diffHunk": "@@ -154,6 +151,7 @@ public void editFilenameTest() {\n         service.editLabel(agent, pid, label);\n \n         verify(repoObjFactory).createExclusiveRelationship(eq(binaryObj), eq(Ebucore.filename), any(Resource.class));", "originalCommit": "7213583b1cf52a2bdcb6ee02a4147c4279e286db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0MzgwMg==", "url": "https://github.com/UNC-Libraries/box-c/pull/945#discussion_r402543802", "bodyText": "eq(label) seems to work fine. Updated", "author": "lfarrell", "createdAt": "2020-04-02T19:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5OTcyOQ=="}], "type": "inlineReview"}, {"oid": "2718804f1981a48ed3b3b1f9a015e85d6bfe2d6f", "url": "https://github.com/UNC-Libraries/box-c/commit/2718804f1981a48ed3b3b1f9a015e85d6bfe2d6f", "message": "Update title verification", "committedDate": "2020-04-02T18:57:21Z", "type": "commit"}]}