{"pr_number": 959, "pr_title": "Display MODs data", "pr_createdAt": "2020-04-23T15:28:32Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/959", "timeline": [{"oid": "38e1cd774036c4d5fb1876948e5a4b028a2e95a1", "url": "https://github.com/UNC-Libraries/box-c/commit/38e1cd774036c4d5fb1876948e5a4b028a2e95a1", "message": "Add mods metadata", "committedDate": "2020-04-22T12:35:06Z", "type": "commit"}, {"oid": "ed10fbb90c38d97fc19d3f7ecf671d6ffbcaf0de", "url": "https://github.com/UNC-Libraries/box-c/commit/ed10fbb90c38d97fc19d3f7ecf671d6ffbcaf0de", "message": "Add CSS display", "committedDate": "2020-04-22T12:35:06Z", "type": "commit"}, {"oid": "08b546503f2157f22e3b8b26ec1ae9dc0dfa6253", "url": "https://github.com/UNC-Libraries/box-c/commit/08b546503f2157f22e3b8b26ec1ae9dc0dfa6253", "message": "* Remove empty mods nodes\n* style results", "committedDate": "2020-04-23T15:48:15Z", "type": "commit"}, {"oid": "08b546503f2157f22e3b8b26ec1ae9dc0dfa6253", "url": "https://github.com/UNC-Libraries/box-c/commit/08b546503f2157f22e3b8b26ec1ae9dc0dfa6253", "message": "* Remove empty mods nodes\n* style results", "committedDate": "2020-04-23T15:48:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MDcyNA==", "url": "https://github.com/UNC-Libraries/box-c/pull/959#discussion_r413990724", "bodyText": "Would you be willing to break this out into its own utility class? Maybe in access-common. And then add a unit test for it so we can verify the behavior in a number of variations. I can help with the unit test if you would like, this just seems like something that is testable and would benefit from it.\nSome cases I would like to test:\n\nEmpty mods element\nMods document with a single top level element which is empty\nEmpty top level element\nEmpty nested element\nEmpty element with attributes\nDocument with multiple elements, 1 populated, 1 empty, 1 populated (to verify that both the preceding and succeeding elements are not lost or cause an error)\nElement containing only white space\nTriple nested empty element (for example, name/alternativeName/namePart)\nTop level element containing two children, one empty, one populated", "author": "bbpennel", "createdAt": "2020-04-23T17:34:08Z", "path": "access/src/main/java/edu/unc/lib/dl/ui/controller/FullRecordController.java", "diffHunk": "@@ -260,6 +261,39 @@ private String Jp2Pid(List<String> datastream) {\n         return \"\";\n     }\n \n+    private Document removeEmptyNodes(Document doc) {", "originalCommit": "08b546503f2157f22e3b8b26ec1ae9dc0dfa6253", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxMTcxNA==", "url": "https://github.com/UNC-Libraries/box-c/pull/959#discussion_r414011714", "bodyText": "The inclusion of this section should be conditional on there being a MODS datastream. You might need to modify PermissionsHelper to add a hasDescriptionAccess method like the other ones in that file.", "author": "bbpennel", "createdAt": "2020-04-23T18:05:14Z", "path": "access/src/main/webapp/WEB-INF/jsp/fullRecord/aggregateRecord.jsp", "diffHunk": "@@ -174,5 +174,6 @@\n \t\t</table>\n \t</div>\n </c:if>\n-\n+<h2 class=\"full-metadata\">Detailed Metadata</h2>", "originalCommit": "08b546503f2157f22e3b8b26ec1ae9dc0dfa6253", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxMzQ2Nw==", "url": "https://github.com/UNC-Libraries/box-c/pull/959#discussion_r414013467", "bodyText": "Might make more sense to return a response status of 404, but if it doesn't seem worth while at this time, we can live with it.", "author": "bbpennel", "createdAt": "2020-04-23T18:07:48Z", "path": "static/js/public/fullRecord.js", "diffHunk": "@@ -73,6 +74,24 @@ define('fullRecord', ['module', 'jquery', 'JP2Viewer', 'StructureView', 'dataTab\n \t\t});\n \t}\n \n+\tif ($modsDisplay.length > 0) {\n+\t\t$.ajax({\n+\t\t\turl: \"/record/\" + $modsDisplay.attr(\"data-pid\") + \"/metadataView\",\n+\t\t\tdataType: \"html\",\n+\t\t\tsuccess: function(data) {\n+\t\t\t\tif (/^no.metadata/i.test($.trim(data))) {", "originalCommit": "08b546503f2157f22e3b8b26ec1ae9dc0dfa6253", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56b310afb77d2de27611914ed93fbde36405d664", "url": "https://github.com/UNC-Libraries/box-c/commit/56b310afb77d2de27611914ed93fbde36405d664", "message": "Split out into a utility class", "committedDate": "2020-04-24T17:50:45Z", "type": "commit"}, {"oid": "2cf9a05fbe92bc78a613a7f3a5545c5117919595", "url": "https://github.com/UNC-Libraries/box-c/commit/2cf9a05fbe92bc78a613a7f3a5545c5117919595", "message": "Fix failing tests", "committedDate": "2020-04-24T20:20:01Z", "type": "commit"}, {"oid": "879d11aa31c9236fa98002ee3c07a23e4478dded", "url": "https://github.com/UNC-Libraries/box-c/commit/879d11aa31c9236fa98002ee3c07a23e4478dded", "message": "Make constructor private", "committedDate": "2020-04-24T22:06:41Z", "type": "commit"}, {"oid": "69c0cd0248dce753788c8d83bf280b7f423157f5", "url": "https://github.com/UNC-Libraries/box-c/commit/69c0cd0248dce753788c8d83bf280b7f423157f5", "message": "Add filter to check for md_descriptive", "committedDate": "2020-04-27T13:42:37Z", "type": "commit"}, {"oid": "2bd2f0be5fc3ad33bc6dd0ccb0fbcd9a5a1ef5d7", "url": "https://github.com/UNC-Libraries/box-c/commit/2bd2f0be5fc3ad33bc6dd0ccb0fbcd9a5a1ef5d7", "message": "Add tests for deeply nested content and update looping through elements", "committedDate": "2020-04-27T14:36:14Z", "type": "commit"}, {"oid": "b1c681dea6abfb394ac90c199b66af418ae39759", "url": "https://github.com/UNC-Libraries/box-c/commit/b1c681dea6abfb394ac90c199b66af418ae39759", "message": "Remove unnecessary loop", "committedDate": "2020-04-27T16:00:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MzYyOA==", "url": "https://github.com/UNC-Libraries/box-c/pull/959#discussion_r415953628", "bodyText": "maybe rename this to \"emptyNestedWithAttributes\"?", "author": "bbpennel", "createdAt": "2020-04-27T16:16:40Z", "path": "access-common/src/test/java/edu/unc/lib/dl/ui/util/ModsUtilTest.java", "diffHunk": "@@ -0,0 +1,250 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.dl.ui.util;\n+\n+import static edu.unc.lib.dl.xml.JDOMNamespaceUtil.MODS_V3_NS;\n+import static edu.unc.lib.dl.xml.SecureXMLFactory.createSAXBuilder;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import org.jdom2.Document;\n+import org.jdom2.Element;\n+import org.jdom2.JDOMException;\n+import org.jdom2.input.SAXBuilder;\n+import org.junit.Test;\n+\n+/**\n+ * @author lfarrell\n+ */\n+public class ModsUtilTest {\n+    @Test\n+    public void emptyMods() throws JDOMException, IOException {\n+        String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\"></mods>\";\n+        Document modsDoc = buildMods(modsString);\n+        assertEquals(0, modsDoc.getRootElement().getChildren().size());\n+    }\n+\n+    @Test\n+    public void emptyTopLevel() throws JDOMException, IOException {\n+        String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\">\" +\n+                \"  <titleInfo>\" +\n+                \"  </titleInfo>\" +\n+                \"</mods>\";\n+\n+        Document modsDoc = buildMods(modsString);\n+        assertEquals(0, modsDoc.getRootElement().getChildren().size());\n+    }\n+\n+    @Test\n+    public void emptyNested() throws JDOMException, IOException {\n+    String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\">\" +\n+            \"  <titleInfo>\" +\n+            \"    <title></title>\" +\n+            \"  </titleInfo>\" +\n+            \"</mods>\";\n+\n+        Document modsDoc = buildMods(modsString);\n+        assertEquals(0, modsDoc.getRootElement().getChildren().size());\n+    }\n+\n+    @Test\n+    public void emptyNestedWithAttributes() throws JDOMException, IOException {\n+        String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\">\" +\n+                \"  <titleInfo displayLabel=\\\"test item\\\">\" +\n+                \"    <title></title>\" +\n+                \"  </titleInfo>\" +\n+                \"</mods>\";\n+\n+        Document modsDoc = buildMods(modsString);\n+        assertEquals(0, modsDoc.getRootElement().getChildren().size());\n+    }\n+\n+    @Test\n+    public void sameLevelAllEmpty() throws JDOMException, IOException {\n+        String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\">\" +\n+                \"  <titleInfo>\" +\n+                \"    <title></title>\" +\n+                \"  </titleInfo>\" +\n+                \"  <genre authority=\\\"gmgpc\\\"></genre>\" +\n+                \"</mods>\";\n+\n+        Document modsDoc = buildMods(modsString);\n+        assertEquals(0, modsDoc.getRootElement().getChildren().size());\n+    }\n+\n+    @Test\n+    public void deeplyNestedWithText() throws JDOMException, IOException {\n+        String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\">\" +\n+                \"  <titleInfo>\" +\n+                \"     <title></title>\" +\n+                \"   </titleInfo>\" +\n+                \"  <relatedItem>\" +\n+                \"    <relatedItem>\" +\n+                \"      <relatedItem>\" +\n+                \"        <relatedItem>\" +\n+                \"          <abstract />\" +\n+                \"        </relatedItem>\" +\n+                \"        <abstract>Test Pic</abstract>\" +\n+                \"      </relatedItem>\" +\n+                \"    </relatedItem>\" +\n+                \"  </relatedItem>\" +\n+                \"</mods>\";\n+\n+        Document modsDoc = buildMods(modsString);\n+        Element docRoot = modsDoc.getRootElement();\n+        assertEquals(1, docRoot.getChildren().size());\n+\n+        Element relatedItems = docRoot.getChild(\"relatedItem\", MODS_V3_NS)\n+                .getChild(\"relatedItem\", MODS_V3_NS)\n+                .getChild(\"relatedItem\", MODS_V3_NS);\n+\n+        assertEquals(1, relatedItems.getChildren().size());\n+        assertEquals(\"Test Pic\",\n+                relatedItems.getChildText(\"abstract\", MODS_V3_NS));\n+    }\n+\n+    @Test\n+    public void deeplyNestedWithOutText() throws JDOMException, IOException {\n+        String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\">\" +\n+                \"  <titleInfo>\" +\n+                \"     <title></title>\" +\n+                \"   </titleInfo>\" +\n+                \"  <relatedItem>\" +\n+                \"    <relatedItem>\" +\n+                \"      <relatedItem>\" +\n+                \"        <relatedItem>\" +\n+                \"          <abstract />\" +\n+                \"        </relatedItem>\" +\n+                \"        <abstract></abstract>\" +\n+                \"      </relatedItem>\" +\n+                \"    </relatedItem>\" +\n+                \"  </relatedItem>\" +\n+                \"</mods>\";\n+\n+        Document modsDoc = buildMods(modsString);\n+        Element docRoot = modsDoc.getRootElement();\n+        assertEquals(0, docRoot.getChildren().size());\n+    }\n+\n+    @Test\n+    public void deeplyNestedWithTextVariation() throws JDOMException, IOException {\n+        String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\">\" +\n+                \"  <relatedItem>\" +\n+                \"    <relatedItem>\" +\n+                \"      <relatedItem>\" +\n+                \"        <relatedItem>\" +\n+                \"          <abstract />\" +\n+                \"        </relatedItem>\" +\n+                \"        <abstract>Test Pic</abstract>\" +\n+                \"      </relatedItem>\" +\n+                \"    </relatedItem>\" +\n+                \"  </relatedItem>\" +\n+                \"</mods>\";\n+\n+        Document modsDoc = buildMods(modsString);\n+        Element docRoot = modsDoc.getRootElement();\n+        assertEquals(1, docRoot.getChildren().size());\n+\n+        Element relatedItems = docRoot.getChild(\"relatedItem\", MODS_V3_NS)\n+                .getChild(\"relatedItem\", MODS_V3_NS)\n+                .getChild(\"relatedItem\", MODS_V3_NS);\n+\n+        assertEquals(1, relatedItems.getChildren().size());\n+        assertEquals(\"Test Pic\",\n+                relatedItems.getChildText(\"abstract\", MODS_V3_NS));\n+    }\n+\n+    @Test\n+    public void nestedPartiallyPopulated() throws JDOMException, IOException {\n+        String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\">\" +\n+                \"  <titleInfo>\" +\n+                \"    <title>Test Image</title>\" +\n+                \"  </titleInfo>\" +\n+                \"  <typeOfResource>still image</typeOfResource>\" +\n+                \"  <genre authority=\\\"gmgpc\\\">digital images</genre>\" +\n+                \"  <originInfo>\" +\n+                \"    <place>\" +\n+                \"      <placeTerm type=\\\"text\\\" />\" +\n+                \"    </place>\" +\n+                \"  </originInfo>\" +\n+                \"</mods>\";\n+\n+        Document modsDoc = buildMods(modsString);\n+        Element docRoot = modsDoc.getRootElement();\n+\n+        assertEquals(3, docRoot.getChildren().size());\n+        assertEquals(\"Test Image\",\n+                docRoot.getChild(\"titleInfo\", MODS_V3_NS).getChildText(\"title\", MODS_V3_NS));\n+        assertEquals(\"still image\",\n+                docRoot.getChild(\"typeOfResource\", MODS_V3_NS).getTextTrim());\n+        assertEquals(\"digital images\",\n+                docRoot.getChild(\"genre\", MODS_V3_NS).getTextTrim());\n+        assertNull(docRoot.getChild(\"originInfo\", MODS_V3_NS));\n+    }\n+\n+    @Test\n+    public void whiteSpaceOnly() throws JDOMException, IOException {\n+        String modsString = \"<mods xmlns=\\\"http://www.loc.gov/mods/v3\\\">\" +\n+                \"  <titleInfo>\" +\n+                \"    <title>  \\n  \\n</title>\" +\n+                \"  </titleInfo>\" +\n+                \"</mods>\";\n+\n+        Document modsDoc = buildMods(modsString);\n+        assertEquals(0, modsDoc.getRootElement().getChildren().size());\n+    }\n+\n+    @Test\n+    public void emptyDeepNested() throws JDOMException, IOException {", "originalCommit": "b1c681dea6abfb394ac90c199b66af418ae39759", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1NTQwMw==", "url": "https://github.com/UNC-Libraries/box-c/pull/959#discussion_r415955403", "bodyText": "One more case to test, make sure that if all elements are populated, nothing gets removed.", "author": "bbpennel", "createdAt": "2020-04-27T16:19:00Z", "path": "access-common/src/test/java/edu/unc/lib/dl/ui/util/ModsUtilTest.java", "diffHunk": "@@ -0,0 +1,250 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.dl.ui.util;\n+\n+import static edu.unc.lib.dl.xml.JDOMNamespaceUtil.MODS_V3_NS;\n+import static edu.unc.lib.dl.xml.SecureXMLFactory.createSAXBuilder;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import org.jdom2.Document;\n+import org.jdom2.Element;\n+import org.jdom2.JDOMException;\n+import org.jdom2.input.SAXBuilder;\n+import org.junit.Test;\n+\n+/**\n+ * @author lfarrell\n+ */\n+public class ModsUtilTest {", "originalCommit": "b1c681dea6abfb394ac90c199b66af418ae39759", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d08992541b4343b72307957e53395221f3a97670", "url": "https://github.com/UNC-Libraries/box-c/commit/d08992541b4343b72307957e53395221f3a97670", "message": "Index metadata datastreams in solr. Add test to verify metadata listing and adding of datastreams works", "committedDate": "2020-04-27T16:36:17Z", "type": "commit"}, {"oid": "05f244cb46f365af8bea54d33f8d68d264f6810f", "url": "https://github.com/UNC-Libraries/box-c/commit/05f244cb46f365af8bea54d33f8d68d264f6810f", "message": "* Remove duplicate test\n* Add test for all elements populated", "committedDate": "2020-04-27T16:50:24Z", "type": "commit"}, {"oid": "f45ac8ac2dd224bb8ac34f212103caaa4b86764f", "url": "https://github.com/UNC-Libraries/box-c/commit/f45ac8ac2dd224bb8ac34f212103caaa4b86764f", "message": "Allow for unpopulated datastreams fields. Cleanup test", "committedDate": "2020-04-27T17:17:36Z", "type": "commit"}, {"oid": "d68ffe51f9870bfffad2927e5624b8d9852bc04a", "url": "https://github.com/UNC-Libraries/box-c/commit/d68ffe51f9870bfffad2927e5624b8d9852bc04a", "message": "Merge branch 'very-mod' of https://github.com/UNC-Libraries/Carolina-Digital-Repository into very-mod", "committedDate": "2020-04-27T17:17:42Z", "type": "commit"}, {"oid": "54681136491f02f984a8fc6f4509d312fb785f87", "url": "https://github.com/UNC-Libraries/box-c/commit/54681136491f02f984a8fc6f4509d312fb785f87", "message": "Fix display of mods on deleted records", "committedDate": "2020-04-27T19:40:25Z", "type": "forcePushed"}, {"oid": "e0d0ff62dca2887913e74268c0dd1accdf0ce723", "url": "https://github.com/UNC-Libraries/box-c/commit/e0d0ff62dca2887913e74268c0dd1accdf0ce723", "message": "Fix display of mods on deleted records", "committedDate": "2020-04-27T19:50:04Z", "type": "forcePushed"}, {"oid": "aa9ce505c53b49c782986fd9de17c47494280836", "url": "https://github.com/UNC-Libraries/box-c/commit/aa9ce505c53b49c782986fd9de17c47494280836", "message": "Fix display of mods on deleted records", "committedDate": "2020-04-27T20:06:41Z", "type": "commit"}, {"oid": "aa9ce505c53b49c782986fd9de17c47494280836", "url": "https://github.com/UNC-Libraries/box-c/commit/aa9ce505c53b49c782986fd9de17c47494280836", "message": "Fix display of mods on deleted records", "committedDate": "2020-04-27T20:06:41Z", "type": "forcePushed"}, {"oid": "77338cc81e06b436d2d7c4f2c6b3bdda1202253b", "url": "https://github.com/UNC-Libraries/box-c/commit/77338cc81e06b436d2d7c4f2c6b3bdda1202253b", "message": "Align nested tables", "committedDate": "2020-04-28T14:20:39Z", "type": "commit"}, {"oid": "5e608c464876d1a0defe1f59634470ce897ad580", "url": "https://github.com/UNC-Libraries/box-c/commit/5e608c464876d1a0defe1f59634470ce897ad580", "message": "Update table spacing", "committedDate": "2020-04-28T15:40:17Z", "type": "commit"}]}