{"pr_number": 1003, "pr_title": "Improve UI for illegal move operations", "pr_createdAt": "2020-06-05T12:20:33Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/1003", "timeline": [{"oid": "b825bbbcd5e486d47578a7238dc292ac7a7b47ed", "url": "https://github.com/UNC-Libraries/box-c/commit/b825bbbcd5e486d47578a7238dc292ac7a7b47ed", "message": "Only highlight valid drop zones", "committedDate": "2020-06-04T18:52:14Z", "type": "commit"}, {"oid": "62487479646700ee432888c3b5899faf7bba4759", "url": "https://github.com/UNC-Libraries/box-c/commit/62487479646700ee432888c3b5899faf7bba4759", "message": "Check that object isn't moving into one of its children", "committedDate": "2020-06-05T12:15:21Z", "type": "commit"}, {"oid": "8fe9f0fac14dbb50539f10a33220a8003d60c40e", "url": "https://github.com/UNC-Libraries/box-c/commit/8fe9f0fac14dbb50539f10a33220a8003d60c40e", "message": "Fix issue with highlighting not being removed properly", "committedDate": "2020-06-05T13:29:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyOTEwNQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r436729105", "bodyText": "maybe make this method isValidTarget to get a verb in there, avoid the double negative when checking it, and it match the description?", "author": "bbpennel", "createdAt": "2020-06-08T14:00:24Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -178,6 +207,35 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \n \t\treturn title;\n \t}\n+\n+\t/**\n+\t * Check if destination object is a valid target\n+\t * @param target\n+\t * @param destination\n+\t * @returns {boolean|boolean}\n+\t * @private\n+\t */\n+\tMoveDropLocation.prototype._invalidTarget = function(target, destination) {", "originalCommit": "8fe9f0fac14dbb50539f10a33220a8003d60c40e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5MDA5OQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r436890099", "bodyText": "Might be personal opinion, but I feel like it might be easier to understand what's happening in this method if you explicitly spell out what types are allowed to move into a parent type, so maybe a static variable something like:\nallowedMoveMappings = { \n       'AdminUnit' : ['Collection'],\n       'Collection' : ['Folder', 'Work'],\n       ...};\n\ncurrent implementation feels a bit opaque/magical to me.", "author": "bbpennel", "createdAt": "2020-06-08T17:55:28Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -178,6 +207,35 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \n \t\treturn title;\n \t}\n+\n+\t/**\n+\t * Check if destination object is a valid target\n+\t * @param target\n+\t * @param destination\n+\t * @returns {boolean|boolean}\n+\t * @private\n+\t */\n+\tMoveDropLocation.prototype._invalidTarget = function(target, destination) {\n+\t\tconst TYPES = ['File', 'Work', 'Folder', 'Collection', 'AdminUnit', 'ContentRoot'];", "originalCommit": "8fe9f0fac14dbb50539f10a33220a8003d60c40e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5NjY4Mg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r437696682", "bodyText": "A few suggestions for this loop:\n\nLoop through all the dragTargets before this loop to determine if there are any admin units being moved. That would allow things to fail quickly, and its not something that will vary by potential destination. You could then move the adminUnitsMoving check out of the targets loop as well.\nInitialize destInfo once per target, probably right after var selector = $(this); since it will not vary by dragTarget.\nYou can move the setting of targets down to after adminUnit check. Also, could you rename it to something like \"destinations\" so that the name isn't so similar to dragTargets?\nIf the current target is an invalid destination for a dragTarget, then there's no need to check anymore dragTargets against that destination.", "author": "bbpennel", "createdAt": "2020-06-09T20:25:02Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -140,21 +139,81 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \t};\n \t\n \tMoveDropLocation.prototype.setMoveActive = function(active) {\n-\t\tif (active) {\n-\t\t\tthis.element.addClass(\"moving\");\n-\t\t\tthis.element.on(\"click.dropClickBlocking\", \"a\", function(e) {\n-\t\t\t\te.preventDefault();\n-\t\t\t}).on(\"mouseenter.dropTargetHover\", this.options.dropTargetSelector, function() {\n-\t\t\t\t$(this).addClass(\"drop_hover\");\n-\t\t\t}).on(\"mouseleave.dropTargetLeave\", this.options.dropTargetSelector, function() {\n-\t\t\t\t$(this).removeClass(\"drop_hover\");\n-\t\t\t});\n-\t\t} else {\n-\t\t\tthis.element.removeClass(\"moving\");\n-\t\t\tthis.element.off(\"click.dropClickBlocking\").off(\"mouseenter.dropTargetHover\").off(\"mouseleave.dropTargetLeave\");\n+\t\tvar targets = $('.structure_content a.res_link, .result_table a.res_link');\n+\n+\t\ttry {\n+\t\t\tif (active) {\n+\t\t\t\tvar self = this;\n+\t\t\t\tvar adminUnits = [];\n+\n+\t\t\t\t// Highlight valid drop locations\n+\t\t\t\ttargets.each(function() {", "originalCommit": "022c65f3f086e769760b2a096ba269db1f87b96d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5NzMxOQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r437697319", "bodyText": "3.3+ of what?", "author": "bbpennel", "createdAt": "2020-06-09T20:26:14Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -140,21 +139,81 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \t};\n \t\n \tMoveDropLocation.prototype.setMoveActive = function(active) {\n-\t\tif (active) {\n-\t\t\tthis.element.addClass(\"moving\");\n-\t\t\tthis.element.on(\"click.dropClickBlocking\", \"a\", function(e) {\n-\t\t\t\te.preventDefault();\n-\t\t\t}).on(\"mouseenter.dropTargetHover\", this.options.dropTargetSelector, function() {\n-\t\t\t\t$(this).addClass(\"drop_hover\");\n-\t\t\t}).on(\"mouseleave.dropTargetLeave\", this.options.dropTargetSelector, function() {\n-\t\t\t\t$(this).removeClass(\"drop_hover\");\n-\t\t\t});\n-\t\t} else {\n-\t\t\tthis.element.removeClass(\"moving\");\n-\t\t\tthis.element.off(\"click.dropClickBlocking\").off(\"mouseenter.dropTargetHover\").off(\"mouseleave.dropTargetLeave\");\n+\t\tvar targets = $('.structure_content a.res_link, .result_table a.res_link');\n+\n+\t\ttry {\n+\t\t\tif (active) {\n+\t\t\t\tvar self = this;\n+\t\t\t\tvar adminUnits = [];\n+\n+\t\t\t\t// Highlight valid drop locations\n+\t\t\t\ttargets.each(function() {\n+\t\t\t\t\tvar selector = $(this);\n+\n+\t\t\t\t\t$.each(self.manager.dragTargets, function() {\n+\t\t\t\t\t\tif (this.metadata.type === 'AdminUnit' &&\n+\t\t\t\t\t\t\tadminUnits.findIndex((d) => d === this.metadata.title) === -1) {\n+\t\t\t\t\t\t\tadminUnits.push(self._formatTitle(this.metadata.title));\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\tvar destInfo = {\n+\t\t\t\t\t\t\tid: selector.data(\"id\"),\n+\t\t\t\t\t\t\tpath: selector.data(\"path\"),\n+\t\t\t\t\t\t\ttype: selector.data(\"type\")\n+\t\t\t\t\t\t};\n+\n+\t\t\t\t\t\tif (!self._invalidTarget(this.metadata, destInfo)) {\n+\t\t\t\t\t\t\tselector.addClass(\"moving\");\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tselector.addClass(\"invalid_target\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t});\n+\t\t\t\t});\n+\n+\t\t\t\tvar adminUnitsMoving = adminUnits.length;\n+\n+\t\t\t\tif (adminUnitsMoving > 0) {\n+\t\t\t\t\tvar msg = \"\";\n+\n+\t\t\t\t\tif (adminUnitsMoving === 1) {\n+\t\t\t\t\t\tmsg += adminUnits[0] + \" is an admin unit and cannot be moved.\";\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tmsg += adminUnits.join(\", \") + \" are admin units and cannot be moved.\"\n+\t\t\t\t\t\tmsg += \" Please remove them from the selected objects to move and try again.\";\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tthrow(msg);\n+\t\t\t\t}\n+\n+\t\t\t\tthis.element.on(\"click.dropClickBlocking\", \"a\", function(e) {\n+\t\t\t\t\te.preventDefault();\n+\t\t\t\t}).on(\"mouseenter.dropTargetHover\", this.options.dropTargetSelector, function() {\n+\t\t\t\t\t$(this).addClass(\"drop_hover\");\n+\t\t\t\t}).on(\"mouseleave.dropTargetLeave\", this.options.dropTargetSelector, function() {\n+\t\t\t\t\t$(this).removeClass(\"drop_hover\");\n+\t\t\t\t});\n+\t\t\t} else {\n+\t\t\t\ttargets.removeClass(\"moving invalid_target\"); // 3.3+ syntax for this changes to [\"moving\", \"invalid_target\"]", "originalCommit": "022c65f3f086e769760b2a096ba269db1f87b96d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "018d2a27c5b2b8bc5f230cfce6a7424cd12856fd", "url": "https://github.com/UNC-Libraries/box-c/commit/018d2a27c5b2b8bc5f230cfce6a7424cd12856fd", "message": "Give immediate error if trying to move an admin unit", "committedDate": "2020-06-10T13:21:45Z", "type": "commit"}, {"oid": "018d2a27c5b2b8bc5f230cfce6a7424cd12856fd", "url": "https://github.com/UNC-Libraries/box-c/commit/018d2a27c5b2b8bc5f230cfce6a7424cd12856fd", "message": "Give immediate error if trying to move an admin unit", "committedDate": "2020-06-10T13:21:45Z", "type": "forcePushed"}, {"oid": "c237f5345df1bf84f568692c696958c1e57b5d94", "url": "https://github.com/UNC-Libraries/box-c/commit/c237f5345df1bf84f568692c696958c1e57b5d94", "message": "Simplify how the validLocation method works", "committedDate": "2020-06-10T14:30:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5Njk4Mg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r438196982", "bodyText": "This is much clearer, although I think it'd be faster for lookups if you did it as an object rather than an array, so you could do allowedMoveMappings[destination.type] to get the allowedTypes instead of a loop.\nAlso, it would make sense to declare the constant outside of the method so that it wouldn't need to be re-initialized on each _validTarget call. Could either be initialized when the object is initialized, or initialized when the class is created.", "author": "bbpennel", "createdAt": "2020-06-10T15:07:33Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -178,6 +238,35 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \n \t\treturn title;\n \t}\n+\n+\t/**\n+\t * Check if destination object is a valid target\n+\t * @param target\n+\t * @param destination\n+\t * @returns {boolean|boolean}\n+\t * @private\n+\t */\n+\tMoveDropLocation.prototype._validTarget = function(target, destination) {\n+\t\tconst allowedMoveMappings = [", "originalCommit": "c237f5345df1bf84f568692c696958c1e57b5d94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5ODM3OQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r438198379", "bodyText": "If we are already using things that arent' supported by ie11, could we use destLevel.allowedTypes.includes(target.type) here instead of indexOf?", "author": "bbpennel", "createdAt": "2020-06-10T15:09:33Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -178,6 +238,35 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \n \t\treturn title;\n \t}\n+\n+\t/**\n+\t * Check if destination object is a valid target\n+\t * @param target\n+\t * @param destination\n+\t * @returns {boolean|boolean}\n+\t * @private\n+\t */\n+\tMoveDropLocation.prototype._validTarget = function(target, destination) {\n+\t\tconst allowedMoveMappings = [\n+\t\t\t{ type: 'ContentRoot', allowedTypes: [] },\n+\t\t\t{ type: 'AdminUnit', allowedTypes: ['Collection'] },\n+\t\t\t{ type: 'AdminUnit', allowedTypes: ['Collection'] },\n+\t\t\t{ type: 'Collection', allowedTypes: ['Folder', 'Work'] },\n+\t\t\t{ type: 'Folder', allowedTypes: ['Folder', 'Work'] },\n+\t\t\t{ type: 'Work', allowedTypes: ['File'] },\n+\t\t\t{ type: 'File', allowedTypes: [] }\n+\t\t];\n+\n+\t\tvar destLevel = allowedMoveMappings.find((d) => d.type === destination.type);\n+\t\tvar ancestorPath = target.ancestorPath;\n+\n+\t\tvar invalidDestination = destLevel.allowedTypes.indexOf(target.type) === -1;", "originalCommit": "c237f5345df1bf84f568692c696958c1e57b5d94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwMDc4NA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r438200784", "bodyText": "minor, but it might make sense to check this case right away and return early if its true. Then i think it would be reasonable to remove the check here https://github.com/UNC-Libraries/Carolina-Digital-Repository/blob/c237f5345df1bf84f568692c696958c1e57b5d94/static/js/admin/src/MoveDropLocation.js#L43 since its redundant with the validTarget check", "author": "bbpennel", "createdAt": "2020-06-10T15:12:43Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -178,6 +238,35 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \n \t\treturn title;\n \t}\n+\n+\t/**\n+\t * Check if destination object is a valid target\n+\t * @param target\n+\t * @param destination\n+\t * @returns {boolean|boolean}\n+\t * @private\n+\t */\n+\tMoveDropLocation.prototype._validTarget = function(target, destination) {\n+\t\tconst allowedMoveMappings = [\n+\t\t\t{ type: 'ContentRoot', allowedTypes: [] },\n+\t\t\t{ type: 'AdminUnit', allowedTypes: ['Collection'] },\n+\t\t\t{ type: 'AdminUnit', allowedTypes: ['Collection'] },\n+\t\t\t{ type: 'Collection', allowedTypes: ['Folder', 'Work'] },\n+\t\t\t{ type: 'Folder', allowedTypes: ['Folder', 'Work'] },\n+\t\t\t{ type: 'Work', allowedTypes: ['File'] },\n+\t\t\t{ type: 'File', allowedTypes: [] }\n+\t\t];\n+\n+\t\tvar destLevel = allowedMoveMappings.find((d) => d.type === destination.type);\n+\t\tvar ancestorPath = target.ancestorPath;\n+\n+\t\tvar invalidDestination = destLevel.allowedTypes.indexOf(target.type) === -1;\n+\t\tvar isItself = target.id === destination.id;", "originalCommit": "c237f5345df1bf84f568692c696958c1e57b5d94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwMTA5Nw==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r438201097", "bodyText": "these lines should be indented", "author": "bbpennel", "createdAt": "2020-06-10T15:13:08Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -40,10 +40,17 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \t\t\t\t// Check that we are not moving an object to itself\n \t\t\t\ttry {\n \t\t\t\t\t$.each(self.manager.dragTargets, function() {\n-\t\t\t\t\t\tif (this.pid == metadata.id) {\n+\t\t\t\t\t\tif (this.pid === metadata.id) {\n \t\t\t\t\t\t\tthrow \"Invalid destination.  Object \" + this.pid + \" cannot be move into itself.\";\n \t\t\t\t\t\t}\n \n+\t\t\t\t\t\t// Return error message if dropTarget is invalid for the object being moved\n+\t\t\t\t\t\tif (!self._validTarget(this.metadata, metadata)) {\n+\t\t\t\t\t\t\tthrow \"Invalid move location for \" + self._formatTitle(this.metadata.title)\n+\t\t\t\t\t\t\t+ \" object\" + (self.manager.dragTargets.length > 1 ? \"s\" : \"\")", "originalCommit": "c237f5345df1bf84f568692c696958c1e57b5d94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwNDI4MQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r438204281", "bodyText": "I'm realizing that given that you are scanning the dragTargets (which are solr search results) for adminUnits, there shouldn't be any chance of encountering duplicates here. So you could probably only store the title of each unit and drop the check for duplicates.", "author": "bbpennel", "createdAt": "2020-06-10T15:17:34Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -140,18 +147,71 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \t};\n \t\n \tMoveDropLocation.prototype.setMoveActive = function(active) {\n-\t\tif (active) {\n-\t\t\tthis.element.addClass(\"moving\");\n-\t\t\tthis.element.on(\"click.dropClickBlocking\", \"a\", function(e) {\n-\t\t\t\te.preventDefault();\n-\t\t\t}).on(\"mouseenter.dropTargetHover\", this.options.dropTargetSelector, function() {\n-\t\t\t\t$(this).addClass(\"drop_hover\");\n-\t\t\t}).on(\"mouseleave.dropTargetLeave\", this.options.dropTargetSelector, function() {\n-\t\t\t\t$(this).removeClass(\"drop_hover\");\n-\t\t\t});\n-\t\t} else {\n-\t\t\tthis.element.removeClass(\"moving\");\n-\t\t\tthis.element.off(\"click.dropClickBlocking\").off(\"mouseenter.dropTargetHover\").off(\"mouseleave.dropTargetLeave\");\n+\t\tvar destinations = $('.structure_content a.res_link, .result_table a.res_link');\n+\n+\t\ttry {\n+\t\t\tif (active) {\n+\t\t\t\tvar self = this;\n+\n+\t\t\t\t// Check if trying to move an admin unit\n+\t\t\t\tvar adminUnits = [];", "originalCommit": "c237f5345df1bf84f568692c696958c1e57b5d94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMzM3Ng==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r438213376", "bodyText": "I wonder if we will end up making the jquery upgrade plunge or switching to vue first. Not really sure which makes more sense. But it'll be a while either way", "author": "bbpennel", "createdAt": "2020-06-10T15:28:10Z", "path": "static/js/admin/src/MoveDropLocation.js", "diffHunk": "@@ -140,18 +147,71 @@ define('MoveDropLocation', [ 'jquery', 'jquery-ui', 'ConfirmationDialog'],\n \t};\n \t\n \tMoveDropLocation.prototype.setMoveActive = function(active) {\n-\t\tif (active) {\n-\t\t\tthis.element.addClass(\"moving\");\n-\t\t\tthis.element.on(\"click.dropClickBlocking\", \"a\", function(e) {\n-\t\t\t\te.preventDefault();\n-\t\t\t}).on(\"mouseenter.dropTargetHover\", this.options.dropTargetSelector, function() {\n-\t\t\t\t$(this).addClass(\"drop_hover\");\n-\t\t\t}).on(\"mouseleave.dropTargetLeave\", this.options.dropTargetSelector, function() {\n-\t\t\t\t$(this).removeClass(\"drop_hover\");\n-\t\t\t});\n-\t\t} else {\n-\t\t\tthis.element.removeClass(\"moving\");\n-\t\t\tthis.element.off(\"click.dropClickBlocking\").off(\"mouseenter.dropTargetHover\").off(\"mouseleave.dropTargetLeave\");\n+\t\tvar destinations = $('.structure_content a.res_link, .result_table a.res_link');\n+\n+\t\ttry {\n+\t\t\tif (active) {\n+\t\t\t\tvar self = this;\n+\n+\t\t\t\t// Check if trying to move an admin unit\n+\t\t\t\tvar adminUnits = [];\n+\t\t\t\t$.each(self.manager.dragTargets, function() {\n+\t\t\t\t\tlet valueFound = adminUnits.findIndex((d) => d.id === this.metadata.id);\n+\t\t\t\t\tif (this.metadata.type === 'AdminUnit' && valueFound === -1) {\n+\t\t\t\t\t\tadminUnits.push({\n+\t\t\t\t\t\t\tid: this.metadata.id,\n+\t\t\t\t\t\t\ttitle: self._formatTitle(this.metadata.title)\n+\t\t\t\t\t\t});\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\n+\t\t\t\tvar adminUnitsMoving = adminUnits.length;\n+\t\t\t\tif (adminUnitsMoving > 0) {\n+\t\t\t\t\tvar msg = \"\";\n+\n+\t\t\t\t\tif (adminUnitsMoving === 1) {\n+\t\t\t\t\t\tmsg += adminUnits[0].title + \" is an admin unit and cannot be moved.\";\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tmsg += adminUnits.map((d) => d.title).join(\", \") + \" are admin units and cannot be moved.\"\n+\t\t\t\t\t\tmsg += \" Please remove them from the selected objects to move and try again.\";\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tthrow(msg);\n+\t\t\t\t}\n+\n+\t\t\t\t// Highlight valid drop locations\n+\t\t\t\tdestinations.each(function () {\n+\t\t\t\t\tlet selector = $(this);\n+\t\t\t\t\tlet destInfo = {\n+\t\t\t\t\t\tid: selector.data(\"id\"),\n+\t\t\t\t\t\tpath: selector.data(\"path\"),\n+\t\t\t\t\t\ttype: selector.data(\"type\")\n+\t\t\t\t\t};\n+\n+\t\t\t\t\t$.each(self.manager.dragTargets, function() {\n+\t\t\t\t\t\tif (self._validTarget(this.metadata, destInfo)) {\n+\t\t\t\t\t\t\tselector.addClass(\"moving\");\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tselector.addClass(\"invalid_target\");\n+\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t});\n+\t\t\t\t});\n+\n+\t\t\t\tthis.element.on(\"click.dropClickBlocking\", \"a\", function(e) {\n+\t\t\t\t\te.preventDefault();\n+\t\t\t\t}).on(\"mouseenter.dropTargetHover\", this.options.dropTargetSelector, function() {\n+\t\t\t\t\t$(this).addClass(\"drop_hover\");\n+\t\t\t\t}).on(\"mouseleave.dropTargetLeave\", this.options.dropTargetSelector, function() {\n+\t\t\t\t\t$(this).removeClass(\"drop_hover\");\n+\t\t\t\t});\n+\t\t\t} else {\n+\t\t\t\tdestinations.removeClass(\"moving invalid_target\"); // Jquery 3.3+ syntax for this changes to [\"moving\", \"invalid_target\"]", "originalCommit": "c237f5345df1bf84f568692c696958c1e57b5d94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0MTM1Mw==", "url": "https://github.com/UNC-Libraries/box-c/pull/1003#discussion_r438241353", "bodyText": "Thought it might be helpful for some confused soul, possibly us, to have a bit of a roadmap :)", "author": "lfarrell", "createdAt": "2020-06-10T16:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMzM3Ng=="}], "type": "inlineReview"}, {"oid": "aa60028d274e5610fdbdd0c45320e11b92363f8f", "url": "https://github.com/UNC-Libraries/box-c/commit/aa60028d274e5610fdbdd0c45320e11b92363f8f", "message": "Move allowedTypes object and remove title check", "committedDate": "2020-06-10T16:06:00Z", "type": "commit"}, {"oid": "d1eca061370ea9d7ff9c77b23e358a1f1d41289a", "url": "https://github.com/UNC-Libraries/box-c/commit/d1eca061370ea9d7ff9c77b23e358a1f1d41289a", "message": "Fix validLocation conditional and jitter when moving an admin unit", "committedDate": "2020-06-10T19:54:32Z", "type": "commit"}]}