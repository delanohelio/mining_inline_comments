{"pr_number": 177, "pr_title": "Implement a REST API for tenant admins to manage CORS at the tenant level", "pr_createdAt": "2020-06-23T01:31:12Z", "pr_url": "https://github.com/wso2/identity-api-server/pull/177", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk4MTY0Mg==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r443981642", "bodyText": "Shall we remove this comment if it is not required?", "author": "ShanChathusanda93", "createdAt": "2020-06-23T06:05:15Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/gen/java/org/wso2/carbon/identity/api/server/configs/v1/model/ServerConfig.java", "diffHunk": "@@ -151,6 +154,32 @@ public ServerConfig addAuthenticatorsItem(AuthenticatorListItem authenticatorsIt\n         return this;\n     }\n \n+        /**", "originalCommit": "0fab3079dcf8a8d33e735cd71117c034966ffb55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0NzI3OQ==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r453447279", "bodyText": "since this is auto-generated, IMO we don't have to remove this.", "author": "dewniMW", "createdAt": "2020-07-13T05:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk4MTY0Mg=="}], "type": "inlineReview"}, {"oid": "4a33a76c451194281aaeef7810ba80f120123d6d", "url": "https://github.com/wso2/identity-api-server/commit/4a33a76c451194281aaeef7810ba80f120123d6d", "message": "Add CORS API", "committedDate": "2020-06-23T06:11:24Z", "type": "forcePushed"}, {"oid": "59006dfa7989b3446606bbe0b6bc6c5227e88a41", "url": "https://github.com/wso2/identity-api-server/commit/59006dfa7989b3446606bbe0b6bc6c5227e88a41", "message": "Add CORS API", "committedDate": "2020-06-23T13:59:47Z", "type": "forcePushed"}, {"oid": "bac0855db57426c3398fb06dedbf6573ab06cc1f", "url": "https://github.com/wso2/identity-api-server/commit/bac0855db57426c3398fb06dedbf6573ab06cc1f", "message": "Add CORS API", "committedDate": "2020-07-09T05:02:58Z", "type": "forcePushed"}, {"oid": "76c4038725529bdf7fa03d36c8bd8e02223ef78b", "url": "https://github.com/wso2/identity-api-server/commit/76c4038725529bdf7fa03d36c8bd8e02223ef78b", "message": "Add CORS API", "committedDate": "2020-07-09T05:07:52Z", "type": "forcePushed"}, {"oid": "976c39686ab214593e3738d58bb9e608d545cb56", "url": "https://github.com/wso2/identity-api-server/commit/976c39686ab214593e3738d58bb9e608d545cb56", "message": "Add CORS API", "committedDate": "2020-07-10T04:34:14Z", "type": "forcePushed"}, {"oid": "a6ba02277dc17ae7612d3daa912c4f1031e37f08", "url": "https://github.com/wso2/identity-api-server/commit/a6ba02277dc17ae7612d3daa912c4f1031e37f08", "message": "Add CORS API", "committedDate": "2020-07-13T04:58:31Z", "type": "forcePushed"}, {"oid": "6f909d93866c8bb7457b723f7c5624b5b71eb891", "url": "https://github.com/wso2/identity-api-server/commit/6f909d93866c8bb7457b723f7c5624b5b71eb891", "message": "Add CORS API", "committedDate": "2020-07-13T09:34:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU0NzQ2Nw==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r453547467", "bodyText": "I think better to remove this.", "author": "ashensw", "createdAt": "2020-07-13T10:18:56Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/resources/configs.yaml", "diffHunk": "@@ -253,7 +253,156 @@ paths:\n             application/json:\n               schema:\n                 $ref: '#/components/schemas/Error'\n+  /configs/cors:\n+    get:\n+      tags:\n+        - CORS Configs\n+      summary: Retrieve the tenant CORS configuration.\n+      operationId: getCORSConfiguration\n+      description: Retrieve the tenant CORS configuration.\n+      responses:\n+        '200':\n+          description: Successful Response\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/CORSConfig'\n+        '400':\n+          description: Bad Request\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+        '401':\n+          description: Unauthorized\n+        '403':\n+          description: Forbidden\n+        '404':\n+          description: Not Found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+        '500':\n+          description: Server Error\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+    patch:\n+      tags:\n+        - CORS Configs\n+      summary: Patch the tenant CORS configuration.\n+      operationId: patchCORSConfiguration\n+      description: A JSONPatch as defined by RFC 6902.\n+      requestBody:\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/CORSPatchRequest'\n+        required: true\n+      responses:\n+        '200':\n+          description: Successful Response\n+        '400':\n+          description: Bad Request\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+        '401':\n+          description: Unauthorized\n+        '403':\n+          description: Forbidden\n+        '404':\n+          description: Not Found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+        '500':\n+          description: Server Error\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+  /configs/cors-origins:\n+    get:\n+      tags:\n+        - Tenant CORS origins\n+      summary: Retrieve the tenant CORS origins.\n+      operationId: getCORSOrigins\n+      description: Retrieve the tenant CORS origins.\n+      responses:\n+        '200':\n+          description: Successful Response\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/CORSOriginsGetResponse'\n+        '400':\n+          description: Bad Request\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+        '401':\n+          description: Unauthorized\n+        '403':\n+          description: Forbidden\n+        '404':\n+          description: Not Found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+        '500':\n+          description: Server Error\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+    patch:\n+      tags:\n+        - Tenant CORS origins\n+      summary: Patch the tenant CORS origins.\n+      operationId: patchCORSOrigins\n+      description: A JSONPatch as defined by RFC 6902.\n+      requestBody:\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/CORSOriginPatchRequest'\n+        required: true\n+      responses:\n+        '200':\n+          description: Successful Response\n+        '400':\n+          description: Bad Request\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+        '401':\n+          description: Unauthorized\n+        '403':\n+          description: Forbidden\n+        '404':\n+          description: Not Found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n+        '500':\n+          description: Server Error\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Error'\n servers:\n+  # Added by API Auto Mocking Plugin\n+  - description: SwaggerHub API Auto Mocking\n+    url: https://virtserver.swaggerhub.com/ivantha/wso2-cors-api/1.0.0", "originalCommit": "6f909d93866c8bb7457b723f7c5624b5b71eb891", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3MjcyNg==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r453672726", "bodyText": "Shall we update the version?", "author": "ashensw", "createdAt": "2020-07-13T14:02:28Z", "path": "pom.xml", "diffHunk": "@@ -510,7 +515,8 @@\n         <maven.buildnumber.plugin.version>1.4</maven.buildnumber.plugin.version>\n         <org.apache.felix.annotations.version>1.2.4</org.apache.felix.annotations.version>\n         <identity.governance.version>1.3.15</identity.governance.version>\n-        <carbon.identity.framework.version>5.18.0</carbon.identity.framework.version>\n+        <!--TODO-->\n+        <carbon.identity.framework.version>5.18.18-SNAPSHOT</carbon.identity.framework.version>", "originalCommit": "6f909d93866c8bb7457b723f7c5624b5b71eb891", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bbeb58b2cbf503d9238d9bb995d653bb14f759d4", "url": "https://github.com/wso2/identity-api-server/commit/bbeb58b2cbf503d9238d9bb995d653bb14f759d4", "message": "Add CORS API", "committedDate": "2020-07-14T03:35:22Z", "type": "forcePushed"}, {"oid": "b8000c9ca432557a991a3e212831b2d9e4d69ddf", "url": "https://github.com/wso2/identity-api-server/commit/b8000c9ca432557a991a3e212831b2d9e4d69ddf", "message": "Add CORS API", "committedDate": "2020-07-15T07:16:10Z", "type": "forcePushed"}, {"oid": "983b26eea96b8872b86672def5a4d09fa0ed1e17", "url": "https://github.com/wso2/identity-api-server/commit/983b26eea96b8872b86672def5a4d09fa0ed1e17", "message": "Add CORS API", "committedDate": "2020-07-15T12:53:39Z", "type": "forcePushed"}, {"oid": "295ae9aa3f9e861cd03453e454626299927795dd", "url": "https://github.com/wso2/identity-api-server/commit/295ae9aa3f9e861cd03453e454626299927795dd", "message": "Add CORS API for tenant admins", "committedDate": "2020-07-15T12:55:32Z", "type": "forcePushed"}, {"oid": "6837a3ba4ecfe205e4be67c83c815ee3a3611fa0", "url": "https://github.com/wso2/identity-api-server/commit/6837a3ba4ecfe205e4be67c83c815ee3a3611fa0", "message": "Add CORS API for tenant admins", "committedDate": "2020-07-17T09:40:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0Mzc5OA==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r456343798", "bodyText": "can't we inline 77 and 78?", "author": "dewniMW", "createdAt": "2020-07-17T09:56:18Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java", "diffHunk": "@@ -46,13 +62,34 @@ private Constants() {\n         ERROR_CODE_ERROR_RETRIEVING_AUTHENTICATOR(\"65003\",\n                 \"Unable to retrieve authenticator.\",\n                 \"Server encountered an error while retrieving the authenticator for the identifier %s.\"),\n-        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\", \"Resource not found.\",\n+        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\",\n+                \"Resource not found.\",\n                 \"Unable to find a resource matching the provided authenticator identifier %s.\"),\n-        ERROR_CODE_INVALID_INPUT(\"60003\", \"Invalid input.\", \"One of the given inputs is invalid. %s.\"),\n-        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\", \"Unable to update server configs.\", \"Server encountered an \" +\n+        ERROR_CODE_INVALID_INPUT(\"60003\",\n+                \"Invalid input.\",\n+                \"One of the given inputs is invalid. %s.\"),\n+        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\",\n+                \"Unable to update server configs.\",\n+                \"Server encountered an \" +\n                 \"error while updating the server configs.\"),\n-        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\", \"Unable to retrieve server configs.\", \"Server encountered an \" +\n-                \"error while retrieving the server configs.\");\n+        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\",\n+                \"Unable to retrieve server configs.\",\n+                \"Server encountered an \" +\n+                \"error while retrieving the server configs.\"),", "originalCommit": "6837a3ba4ecfe205e4be67c83c815ee3a3611fa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM1MTQ5MQ==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r456351491", "bodyText": "#177 (comment)", "author": "ivantha", "createdAt": "2020-07-17T10:11:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0Mzc5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0NDA5MQ==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r456344091", "bodyText": "Is this TODO still needed?", "author": "dewniMW", "createdAt": "2020-07-17T09:56:52Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java", "diffHunk": "@@ -46,13 +62,34 @@ private Constants() {\n         ERROR_CODE_ERROR_RETRIEVING_AUTHENTICATOR(\"65003\",\n                 \"Unable to retrieve authenticator.\",\n                 \"Server encountered an error while retrieving the authenticator for the identifier %s.\"),\n-        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\", \"Resource not found.\",\n+        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\",\n+                \"Resource not found.\",\n                 \"Unable to find a resource matching the provided authenticator identifier %s.\"),\n-        ERROR_CODE_INVALID_INPUT(\"60003\", \"Invalid input.\", \"One of the given inputs is invalid. %s.\"),\n-        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\", \"Unable to update server configs.\", \"Server encountered an \" +\n+        ERROR_CODE_INVALID_INPUT(\"60003\",\n+                \"Invalid input.\",\n+                \"One of the given inputs is invalid. %s.\"),\n+        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\",\n+                \"Unable to update server configs.\",\n+                \"Server encountered an \" +\n                 \"error while updating the server configs.\"),\n-        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\", \"Unable to retrieve server configs.\", \"Server encountered an \" +\n-                \"error while retrieving the server configs.\");\n+        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\",\n+                \"Unable to retrieve server configs.\",\n+                \"Server encountered an \" +\n+                \"error while retrieving the server configs.\"),\n+\n+        //TODO: What should be the error prefix?", "originalCommit": "6837a3ba4ecfe205e4be67c83c815ee3a3611fa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0OTI3Nw==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r456349277", "bodyText": "The prefix for the error messages should be decided before merging.", "author": "ivantha", "createdAt": "2020-07-17T10:06:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0NDA5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0NTM5OQ==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r456345399", "bodyText": "can path be null here?", "author": "dewniMW", "createdAt": "2020-07-17T09:59:26Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/core/ServerConfigManagementService.java", "diffHunk": "@@ -246,6 +262,192 @@ public void updateInboundScimConfigs(ScimConfig scimConfig) {\n         }\n     }\n \n+    /**\n+     * Get a list of CORS origins allowed by the tenant.\n+     *\n+     * @return List of CORSOriginGetObject.\n+     */\n+    public List<CORSOriginGetObject> getCORSOrigins() {\n+\n+        try {\n+            String tenantDomain = ContextLoader.getTenantDomainFromContext();\n+            List<CORSOrigin> corsOriginList = ConfigsServiceHolder.getInstance().getCorsManagementService()\n+                    .getTenantCORSOrigins(tenantDomain);\n+            return corsOriginList.stream().map(new CORSOriginToCORSOriginGetObject()).collect(Collectors.toList());\n+        } catch (CORSManagementServiceException e) {\n+            throw handleCORSException(e, Constants.ErrorMessage.ERROR_CODE_CORS_RETRIEVE, null);\n+        }\n+    }\n+\n+    /**\n+     * Patch CORS origins. Patch 'REPLACE', 'ADD', 'REMOVE' operations have been supported for primary attributes in\n+     * CORSOrigin model.\n+     *\n+     * @param patchRequest Patch request in Json Patch notation See\n+     *                     <a href=\"https://tools.ietf.org/html/rfc6902\">https://tools.ietf\n+     *                     .org/html/rfc6902</a>.\n+     */\n+    public void patchCORSOrigins(List<CORSOriginsPatch> patchRequest) {\n+\n+        if (CollectionUtils.isEmpty(patchRequest)) {\n+            return;\n+        }\n+\n+        String tenantDomain = ContextLoader.getTenantDomainFromContext();\n+\n+        for (CORSOriginsPatch corsOriginsPatch : patchRequest) {\n+            String path = corsOriginsPatch.getPath();\n+            CORSOriginsPatch.OperationEnum operation = corsOriginsPatch.getOperation();\n+            CORSOriginPatchObject corsOriginPatchObject = corsOriginsPatch.getValue();\n+\n+            try {\n+                // We support only 'REPLACE', 'ADD' and 'REMOVE' patch operations.\n+                if (operation == CORSOriginsPatch.OperationEnum.REPLACE) {\n+                    if (path.matches(Constants.CORS_ORIGIN_PATH_REGEX)", "originalCommit": "6837a3ba4ecfe205e4be67c83c815ee3a3611fa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODczMzMxNA==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r458733314", "bodyText": "It can't.", "author": "ivantha", "createdAt": "2020-07-22T11:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0NTM5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0MjkxMQ==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r456342911", "bodyText": "shall we define only the code here similar to the other error enums defined above? PREFIX can be defined in a constant.", "author": "emswbandara", "createdAt": "2020-07-17T09:54:39Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java", "diffHunk": "@@ -46,13 +62,34 @@ private Constants() {\n         ERROR_CODE_ERROR_RETRIEVING_AUTHENTICATOR(\"65003\",\n                 \"Unable to retrieve authenticator.\",\n                 \"Server encountered an error while retrieving the authenticator for the identifier %s.\"),\n-        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\", \"Resource not found.\",\n+        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\",\n+                \"Resource not found.\",\n                 \"Unable to find a resource matching the provided authenticator identifier %s.\"),\n-        ERROR_CODE_INVALID_INPUT(\"60003\", \"Invalid input.\", \"One of the given inputs is invalid. %s.\"),\n-        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\", \"Unable to update server configs.\", \"Server encountered an \" +\n+        ERROR_CODE_INVALID_INPUT(\"60003\",\n+                \"Invalid input.\",\n+                \"One of the given inputs is invalid. %s.\"),\n+        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\",\n+                \"Unable to update server configs.\",\n+                \"Server encountered an \" +\n                 \"error while updating the server configs.\"),\n-        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\", \"Unable to retrieve server configs.\", \"Server encountered an \" +\n-                \"error while retrieving the server configs.\");\n+        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\",\n+                \"Unable to retrieve server configs.\",\n+                \"Server encountered an \" +\n+                \"error while retrieving the server configs.\"),\n+\n+        //TODO: What should be the error prefix?\n+        ERROR_CODE_CORS_CONFIG_RETRIEVE(\"RST-65001\",", "originalCommit": "6837a3ba4ecfe205e4be67c83c815ee3a3611fa0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0MzQ1MA==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r456343450", "bodyText": "inline 77 and 78", "author": "emswbandara", "createdAt": "2020-07-17T09:55:32Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java", "diffHunk": "@@ -46,13 +62,34 @@ private Constants() {\n         ERROR_CODE_ERROR_RETRIEVING_AUTHENTICATOR(\"65003\",\n                 \"Unable to retrieve authenticator.\",\n                 \"Server encountered an error while retrieving the authenticator for the identifier %s.\"),\n-        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\", \"Resource not found.\",\n+        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\",\n+                \"Resource not found.\",\n                 \"Unable to find a resource matching the provided authenticator identifier %s.\"),\n-        ERROR_CODE_INVALID_INPUT(\"60003\", \"Invalid input.\", \"One of the given inputs is invalid. %s.\"),\n-        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\", \"Unable to update server configs.\", \"Server encountered an \" +\n+        ERROR_CODE_INVALID_INPUT(\"60003\",\n+                \"Invalid input.\",\n+                \"One of the given inputs is invalid. %s.\"),\n+        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\",\n+                \"Unable to update server configs.\",\n+                \"Server encountered an \" +\n                 \"error while updating the server configs.\"),\n-        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\", \"Unable to retrieve server configs.\", \"Server encountered an \" +\n-                \"error while retrieving the server configs.\");\n+        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\",\n+                \"Unable to retrieve server configs.\",\n+                \"Server encountered an \" +", "originalCommit": "6837a3ba4ecfe205e4be67c83c815ee3a3611fa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM1MDU5MQ==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r456350591", "bodyText": "Here some messages can be inlined and some cannot. This way all the constants have a bit of formatting consistency and a little easy on the eyes. WDYT?", "author": "ivantha", "createdAt": "2020-07-17T10:09:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0MzQ1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0NzY3OQ==", "url": "https://github.com/wso2/identity-api-server/pull/177#discussion_r456347679", "bodyText": "remove unnecessary new line", "author": "emswbandara", "createdAt": "2020-07-17T10:03:30Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSOriginToCORSOriginGetObject.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+", "originalCommit": "6837a3ba4ecfe205e4be67c83c815ee3a3611fa0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2e142e28ed74b4f1db424a72df58e53ee8b6ff7f", "url": "https://github.com/wso2/identity-api-server/commit/2e142e28ed74b4f1db424a72df58e53ee8b6ff7f", "message": "Add CORS API for tenant admins", "committedDate": "2020-07-21T03:27:51Z", "type": "forcePushed"}, {"oid": "0147613c5d8a9479b8b422e07d287e7cd53ca618", "url": "https://github.com/wso2/identity-api-server/commit/0147613c5d8a9479b8b422e07d287e7cd53ca618", "message": "Add CORS API for tenant admins", "committedDate": "2020-07-22T11:48:31Z", "type": "forcePushed"}, {"oid": "8285ce0e7c584fc53d4045e1a314c0efa57f1b4b", "url": "https://github.com/wso2/identity-api-server/commit/8285ce0e7c584fc53d4045e1a314c0efa57f1b4b", "message": "Add CORS API for tenant admins", "committedDate": "2020-07-23T02:51:16Z", "type": "forcePushed"}, {"oid": "c83dd3610326d0a8fdb7c92aa3e339ebc9e2e423", "url": "https://github.com/wso2/identity-api-server/commit/c83dd3610326d0a8fdb7c92aa3e339ebc9e2e423", "message": "Add CORS API for tenant admins", "committedDate": "2020-07-28T05:07:51Z", "type": "forcePushed"}, {"oid": "13397145f5e7ddffcc51d1f8e695e14192870dfb", "url": "https://github.com/wso2/identity-api-server/commit/13397145f5e7ddffcc51d1f8e695e14192870dfb", "message": "Add CORS API for tenant admins", "committedDate": "2020-08-04T19:04:48Z", "type": "forcePushed"}, {"oid": "6cfa49f16615e7852e09d655b897603c2cb75237", "url": "https://github.com/wso2/identity-api-server/commit/6cfa49f16615e7852e09d655b897603c2cb75237", "message": "Add CORS API for tenant admins", "committedDate": "2020-08-05T02:08:41Z", "type": "forcePushed"}, {"oid": "4716a0dd3c7526248a74d8f1168e389827f87485", "url": "https://github.com/wso2/identity-api-server/commit/4716a0dd3c7526248a74d8f1168e389827f87485", "message": "Add CORS API for tenant admins", "committedDate": "2020-08-06T14:39:26Z", "type": "commit"}, {"oid": "4716a0dd3c7526248a74d8f1168e389827f87485", "url": "https://github.com/wso2/identity-api-server/commit/4716a0dd3c7526248a74d8f1168e389827f87485", "message": "Add CORS API for tenant admins", "committedDate": "2020-08-06T14:39:26Z", "type": "forcePushed"}]}