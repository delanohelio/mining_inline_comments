{"pr_number": 4039, "pr_title": "remove snapshot-or-not logic from gradle configuration", "pr_createdAt": "2020-06-07T01:52:31Z", "pr_url": "https://github.com/MovingBlocks/Terasology/pull/4039", "timeline": [{"oid": "753ec8d53156d1da266c68089469b38d6aac19e2", "url": "https://github.com/MovingBlocks/Terasology/commit/753ec8d53156d1da266c68089469b38d6aac19e2", "message": "feat(build): use gestalt's parser for module.txt\n\nIt has the deserializer to give us type-safe access to this structure.\nAnd it will come in handy when we want to inspect the dependencies more thoroughly.", "committedDate": "2020-06-04T17:38:43Z", "type": "commit"}, {"oid": "8ff81036e969f7f46c9bc825389c540fa5e544c4", "url": "https://github.com/MovingBlocks/Terasology/commit/8ff81036e969f7f46c9bc825389c540fa5e544c4", "message": "feat(build): use module.txt dependency versions when defining gradle dependencies", "committedDate": "2020-06-04T19:43:25Z", "type": "commit"}, {"oid": "5b1902e7f0c30d9cfa17ae22f947eb5d3d3d5a36", "url": "https://github.com/MovingBlocks/Terasology/commit/5b1902e7f0c30d9cfa17ae22f947eb5d3d3d5a36", "message": "fix(build): require module's \"optional\" dependencies while running their tests", "committedDate": "2020-06-04T21:07:09Z", "type": "commit"}, {"oid": "f34bd09ecd75e04c7a74b44f0512a39d9c339ecd", "url": "https://github.com/MovingBlocks/Terasology/commit/f34bd09ecd75e04c7a74b44f0512a39d9c339ecd", "message": "chore: tidying up lint", "committedDate": "2020-06-05T02:44:27Z", "type": "commit"}, {"oid": "0bc080e7c895d1934ea2bddbd300f4c10f4b4876", "url": "https://github.com/MovingBlocks/Terasology/commit/0bc080e7c895d1934ea2bddbd300f4c10f4b4876", "message": "feat(build): better message on modules.txt errors, fixes #4018", "committedDate": "2020-06-05T02:45:49Z", "type": "commit"}, {"oid": "ad12d4063955b0cb3550c3fcf74375763fd3815d", "url": "https://github.com/MovingBlocks/Terasology/commit/ad12d4063955b0cb3550c3fcf74375763fd3815d", "message": "chore(build): use map-syntax for these extra props that are only accessed from other scopes\n\notherwise kotlin warns they are unused", "committedDate": "2020-06-05T02:57:46Z", "type": "commit"}, {"oid": "20701e277c3d1362b5eb7fa2cee3c633a7b90842", "url": "https://github.com/MovingBlocks/Terasology/commit/20701e277c3d1362b5eb7fa2cee3c633a7b90842", "message": "Merge remote-tracking branch 'origin/develop' into feat/versioned-mod-deps", "committedDate": "2020-06-05T03:05:53Z", "type": "commit"}, {"oid": "c2e5080eedb691173dc2f1c74b58a5ccb0e1bf0a", "url": "https://github.com/MovingBlocks/Terasology/commit/c2e5080eedb691173dc2f1c74b58a5ccb0e1bf0a", "message": "Merge remote-tracking branch 'origin/develop' into feat/versioned-mod-deps", "committedDate": "2020-06-07T00:18:03Z", "type": "commit"}, {"oid": "5de29be01ddbf5663a3c733c28cf039b07d2e0a7", "url": "https://github.com/MovingBlocks/Terasology/commit/5de29be01ddbf5663a3c733c28cf039b07d2e0a7", "message": "feat(build): use version as given from version.txt instead of adding -SNAPSHOT based on git branch\n\nfixes #4037", "committedDate": "2020-06-07T01:09:22Z", "type": "commit"}, {"oid": "ab028b2d5a8557b351e1c9a10ff051640ca8d176", "url": "https://github.com/MovingBlocks/Terasology/commit/ab028b2d5a8557b351e1c9a10ff051640ca8d176", "message": "chore: remove unused variable", "committedDate": "2020-06-07T01:54:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUxMzM5MA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4039#discussion_r436513390", "bodyText": "isChanging = true - hack for maven's SNAPSHOTs. (download newest SNAPSHOT from repo)\nFor releases it is not needed.", "author": "DarkWeird", "createdAt": "2020-06-08T07:50:15Z", "path": "buildSrc/src/main/kotlin/terasology-module.gradle.kts", "diffHunk": "@@ -100,21 +83,49 @@ configure<SourceSetContainer> {\n     }\n }\n val convention = project.getConvention().getPlugin(JavaPluginConvention::class)\n-val mainSourceSet = convention.getSourceSets().getByName(\"main\");\n+val mainSourceSet = convention.getSourceSets().getByName(\"main\")\n \n // TODO: Remove when we don't need to rely on snapshots. Needed here for solo builds in Jenkins\n configurations.all {\n     resolutionStrategy.cacheChangingModulesFor(0, \"seconds\")\n }\n \n+\n+val deps = moduleConfig.dependencies.filterNotNull()\n+val moduleDepends = deps.filterNot { it.id.toString() == \"engine\" }\n+val engineVersion = deps.find { it.id.toString() == \"engine\" }?.versionRange()?.toString() ?: \"+\"\n+\n // Set dependencies. Note that the dependency information from module.txt is used for other Terasology modules\n dependencies {\n-    // Check to see if this module is not the root Gradle project - if so we are in a multi-project workspace\n-    implementation(group = \"org.terasology.engine\", name = \"engine\", version = \"+\") { isChanging = true }\n-    implementation(group = \"org.terasology.engine\", name = \"engine-tests\", version = \"+\") { isChanging = true }\n+    implementation(group = \"org.terasology.engine\", name = \"engine\", version = engineVersion) { isChanging = true }", "originalCommit": "ab028b2d5a8557b351e1c9a10ff051640ca8d176", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkzNTM0Mw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4039#discussion_r474935343", "bodyText": "Okay, I have removed the isChanging = true statements.\nI believe if the modules follow the -SNAPSHOT version convention and they are stored in a Maven repository, gradle considers them Changing as is Maven policy.\nand yeah, we don't need it for released versions.", "author": "keturn", "createdAt": "2020-08-21T20:21:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUxMzM5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUxNDIwNw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4039#discussion_r436514207", "bodyText": "I think about remove snaphots anywhere :D.\nIt is maven way for multimodule project(I think).", "author": "DarkWeird", "createdAt": "2020-06-08T07:51:53Z", "path": "buildSrc/src/main/kotlin/terasology-module.gradle.kts", "diffHunk": "@@ -100,21 +83,49 @@ configure<SourceSetContainer> {\n     }\n }\n val convention = project.getConvention().getPlugin(JavaPluginConvention::class)\n-val mainSourceSet = convention.getSourceSets().getByName(\"main\");\n+val mainSourceSet = convention.getSourceSets().getByName(\"main\")\n \n // TODO: Remove when we don't need to rely on snapshots. Needed here for solo builds in Jenkins\n configurations.all {\n     resolutionStrategy.cacheChangingModulesFor(0, \"seconds\")\n }\n \n+\n+val deps = moduleConfig.dependencies.filterNotNull()\n+val moduleDepends = deps.filterNot { it.id.toString() == \"engine\" }\n+val engineVersion = deps.find { it.id.toString() == \"engine\" }?.versionRange()?.toString() ?: \"+\"\n+\n // Set dependencies. Note that the dependency information from module.txt is used for other Terasology modules\n dependencies {\n-    // Check to see if this module is not the root Gradle project - if so we are in a multi-project workspace\n-    implementation(group = \"org.terasology.engine\", name = \"engine\", version = \"+\") { isChanging = true }\n-    implementation(group = \"org.terasology.engine\", name = \"engine-tests\", version = \"+\") { isChanging = true }\n+    implementation(group = \"org.terasology.engine\", name = \"engine\", version = engineVersion) { isChanging = true }\n+    implementation(group = \"org.terasology.engine\", name = \"engine-tests\", version = engineVersion) { isChanging = true }\n+\n+    for (gestaltDep in moduleDepends) {\n+        if (!gestaltDep.minVersion.isSnapshot) {\n+            // gestalt considers snapshots to satisfy a minimum requirement:\n+            // https://github.com/MovingBlocks/gestalt/blob/fe1893821127/gestalt-module/src/main/java/org/terasology/naming/VersionRange.java#L58-L59\n+            gestaltDep.minVersion = gestaltDep.minVersion.snapshot", "originalCommit": "ab028b2d5a8557b351e1c9a10ff051640ca8d176", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUxNjk4OQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4039#discussion_r436516989", "bodyText": "Maybe use platform?", "author": "DarkWeird", "createdAt": "2020-06-08T07:57:15Z", "path": "buildSrc/src/main/kotlin/terasology-module.gradle.kts", "diffHunk": "@@ -100,21 +83,49 @@ configure<SourceSetContainer> {\n     }\n }\n val convention = project.getConvention().getPlugin(JavaPluginConvention::class)\n-val mainSourceSet = convention.getSourceSets().getByName(\"main\");\n+val mainSourceSet = convention.getSourceSets().getByName(\"main\")\n \n // TODO: Remove when we don't need to rely on snapshots. Needed here for solo builds in Jenkins\n configurations.all {\n     resolutionStrategy.cacheChangingModulesFor(0, \"seconds\")\n }\n \n+\n+val deps = moduleConfig.dependencies.filterNotNull()\n+val moduleDepends = deps.filterNot { it.id.toString() == \"engine\" }\n+val engineVersion = deps.find { it.id.toString() == \"engine\" }?.versionRange()?.toString() ?: \"+\"\n+\n // Set dependencies. Note that the dependency information from module.txt is used for other Terasology modules\n dependencies {\n-    // Check to see if this module is not the root Gradle project - if so we are in a multi-project workspace\n-    implementation(group = \"org.terasology.engine\", name = \"engine\", version = \"+\") { isChanging = true }\n-    implementation(group = \"org.terasology.engine\", name = \"engine-tests\", version = \"+\") { isChanging = true }\n+    implementation(group = \"org.terasology.engine\", name = \"engine\", version = engineVersion) { isChanging = true }\n+    implementation(group = \"org.terasology.engine\", name = \"engine-tests\", version = engineVersion) { isChanging = true }\n+\n+    for (gestaltDep in moduleDepends) {\n+        if (!gestaltDep.minVersion.isSnapshot) {\n+            // gestalt considers snapshots to satisfy a minimum requirement:\n+            // https://github.com/MovingBlocks/gestalt/blob/fe1893821127/gestalt-module/src/main/java/org/terasology/naming/VersionRange.java#L58-L59\n+            gestaltDep.minVersion = gestaltDep.minVersion.snapshot\n+            // (maybe there's some way to do that with a custom gradle resolver?", "originalCommit": "ab028b2d5a8557b351e1c9a10ff051640ca8d176", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkzMTgxOQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4039#discussion_r474931819", "bodyText": "I think gradle platform is for something else. For example, we could publish a platform specifying all the module versions that go with a particular Terasology release.\nWell, maybe it would be possible to attach a different resolution strategy to things in a platform, because gradle is flexible and does many things? but I am not sure it would be an improvement over this.", "author": "keturn", "createdAt": "2020-08-21T20:17:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUxNjk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkzMzQ4Mw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4039#discussion_r474933483", "bodyText": "\u2026if this stuff is still necessary in the first place? I half-remember some conversation @skaldarnar and @immortius had about making gestalt version comparisons more semver-like, but I'm not sure whether that was implemented and if so, if it applied to the thing we're working around here.", "author": "keturn", "createdAt": "2020-08-21T20:19:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUxNjk4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNTgwOA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4039#discussion_r442505808", "bodyText": "We should probably introduce pure test dependencies in module land... a task for another day ^^", "author": "skaldarnar", "createdAt": "2020-06-18T21:13:17Z", "path": "buildSrc/src/main/kotlin/terasology-module.gradle.kts", "diffHunk": "@@ -100,21 +83,49 @@ configure<SourceSetContainer> {\n     }\n }\n val convention = project.getConvention().getPlugin(JavaPluginConvention::class)\n-val mainSourceSet = convention.getSourceSets().getByName(\"main\");\n+val mainSourceSet = convention.getSourceSets().getByName(\"main\")\n \n // TODO: Remove when we don't need to rely on snapshots. Needed here for solo builds in Jenkins\n configurations.all {\n     resolutionStrategy.cacheChangingModulesFor(0, \"seconds\")\n }\n \n+\n+val deps = moduleConfig.dependencies.filterNotNull()\n+val moduleDepends = deps.filterNot { it.id.toString() == \"engine\" }\n+val engineVersion = deps.find { it.id.toString() == \"engine\" }?.versionRange()?.toString() ?: \"+\"\n+\n // Set dependencies. Note that the dependency information from module.txt is used for other Terasology modules\n dependencies {\n-    // Check to see if this module is not the root Gradle project - if so we are in a multi-project workspace\n-    implementation(group = \"org.terasology.engine\", name = \"engine\", version = \"+\") { isChanging = true }\n-    implementation(group = \"org.terasology.engine\", name = \"engine-tests\", version = \"+\") { isChanging = true }\n+    implementation(group = \"org.terasology.engine\", name = \"engine\", version = engineVersion) { isChanging = true }\n+    implementation(group = \"org.terasology.engine\", name = \"engine-tests\", version = engineVersion) { isChanging = true }\n+\n+    for (gestaltDep in moduleDepends) {\n+        if (!gestaltDep.minVersion.isSnapshot) {\n+            // gestalt considers snapshots to satisfy a minimum requirement:\n+            // https://github.com/MovingBlocks/gestalt/blob/fe1893821127/gestalt-module/src/main/java/org/terasology/naming/VersionRange.java#L58-L59\n+            gestaltDep.minVersion = gestaltDep.minVersion.snapshot\n+            // (maybe there's some way to do that with a custom gradle resolver?\n+            // but making a resolver that only works that way on gestalt modules specifically\n+            // sounds complicated.)\n+        }\n \n-    for (dependency in moduleDepends) {\n-        implementation(group = \"org.terasology.modules\", name = dependency, version = \"+\") { isChanging = true }\n+        val gradleDep = create(\n+            group = \"org.terasology.modules\",\n+            name = gestaltDep.id.toString(),\n+            version = gestaltDep.versionRange().toString()\n+        )\n+\n+        if (gestaltDep.isOptional) {\n+            // `optional` module dependencies are ones it does not require for runtime\n+            // (but will use opportunistically if available)\n+            compileOnly(gradleDep) { isChanging = true }\n+            // though modules also sometimes use \"optional\" to describe their test dependencies;\n+            // they're not required for runtime, but they *are* required for tests.\n+            testImplementation(gradleDep) { isChanging = true }", "originalCommit": "ab028b2d5a8557b351e1c9a10ff051640ca8d176", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNjM0Nw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4039#discussion_r442506347", "bodyText": "I somehow like that this code is gone now \ud83d\ude43 still being a bit afraid of what happens to module build chaos \ud83d\ude48", "author": "skaldarnar", "createdAt": "2020-06-18T21:14:29Z", "path": "config/gradle/publish.gradle", "diffHunk": "@@ -46,12 +33,10 @@ publishing {\n                             deducedPublishRepo = \"terasology\"\n                         }\n \n-                        // Check the active Git branch and some module logic to see whether we're doing a release or snapshot\n-                        String gitBranch = System.getenv()[\"BRANCH_NAME\"]\n-                        if (isMaster(gitBranch) && !shouldBypassModuleRelease()) {\n-                            deducedPublishRepo += \"-release-local\"\n-                        } else {\n+                        if (project.version.toString().endsWith(\"-SNAPSHOT\")) {", "originalCommit": "ab028b2d5a8557b351e1c9a10ff051640ca8d176", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5b7aa11b462cc986830acc66fc73a03eb95ca94a", "url": "https://github.com/MovingBlocks/Terasology/commit/5b7aa11b462cc986830acc66fc73a03eb95ca94a", "message": "Merge remote-tracking branch 'origin/develop' into feat/versioned-mod-deps", "committedDate": "2020-07-26T19:58:28Z", "type": "commit"}, {"oid": "4c109397cf4b8d5193675c70d221b05c67cafcad", "url": "https://github.com/MovingBlocks/Terasology/commit/4c109397cf4b8d5193675c70d221b05c67cafcad", "message": "Merge branch 'feat/versioned-mod-deps' into fix/explicit-snapshots", "committedDate": "2020-07-26T20:00:56Z", "type": "commit"}, {"oid": "f156755c6f55e871fd76280004291f3bcbe2ea07", "url": "https://github.com/MovingBlocks/Terasology/commit/f156755c6f55e871fd76280004291f3bcbe2ea07", "message": "Merge remote-tracking branch 'origin/develop' into feat/versioned-mod-deps", "committedDate": "2020-08-18T22:54:26Z", "type": "commit"}, {"oid": "b5d5e8cb01d5581dbb8f347e85ea8839c7060b17", "url": "https://github.com/MovingBlocks/Terasology/commit/b5d5e8cb01d5581dbb8f347e85ea8839c7060b17", "message": "Merge branch 'feat/versioned-mod-deps' into fix/explicit-snapshots", "committedDate": "2020-08-18T22:56:19Z", "type": "commit"}, {"oid": "bbac516c908bdf46f8b936476651d30247c7e54f", "url": "https://github.com/MovingBlocks/Terasology/commit/bbac516c908bdf46f8b936476651d30247c7e54f", "message": "chore(gradle): update idea-ext gradle plugin to 0.8.1\n\nnot specific to this branch, just something I tried to fix gradle import errors.", "committedDate": "2020-08-21T19:56:38Z", "type": "commit"}, {"oid": "d046341abd431c80fc64ba4a6653bbae1c14d16a", "url": "https://github.com/MovingBlocks/Terasology/commit/d046341abd431c80fc64ba4a6653bbae1c14d16a", "message": "fix(gradle): don't force all dependencies to be \"changing\"\n\nDependencies pulled from maven repositories with `-SNAPSHOT` versions are implicitly treated as changing without need for this override.", "committedDate": "2020-08-21T20:07:20Z", "type": "commit"}, {"oid": "93b62d02b21129e8b6565501978fc378e1e95bff", "url": "https://github.com/MovingBlocks/Terasology/commit/93b62d02b21129e8b6565501978fc378e1e95bff", "message": "fix(gradle): rely on engine-module.txt to tell us if the version is a snapshot\n\nfor consistency with other modules.", "committedDate": "2020-08-21T20:32:14Z", "type": "commit"}, {"oid": "dfb7a5b6d3253555c1c71acd8867ef863d4f9df1", "url": "https://github.com/MovingBlocks/Terasology/commit/dfb7a5b6d3253555c1c71acd8867ef863d4f9df1", "message": "Merge remote-tracking branch 'origin/develop' into feat/versioned-mod-deps\n\n# Conflicts:\n#\t.idea/.gitignore", "committedDate": "2020-11-15T00:50:10Z", "type": "commit"}, {"oid": "1e774d9924949ad1bcdf7e4e18c97462d7d60d6a", "url": "https://github.com/MovingBlocks/Terasology/commit/1e774d9924949ad1bcdf7e4e18c97462d7d60d6a", "message": "chore (git): ignore .idea/caches", "committedDate": "2020-11-15T01:00:36Z", "type": "commit"}, {"oid": "8e62650263d871c42602ecc0c410b1fdbb4156de", "url": "https://github.com/MovingBlocks/Terasology/commit/8e62650263d871c42602ecc0c410b1fdbb4156de", "message": "Merge branch 'feat/versioned-mod-deps' into fix/explicit-snapshots\n\n# Conflicts:\n#\tengine/src/main/resources/engine-module.txt", "committedDate": "2020-11-15T01:06:47Z", "type": "commit"}, {"oid": "791987d9e3030804257fc522626de78ec535c5e7", "url": "https://github.com/MovingBlocks/Terasology/commit/791987d9e3030804257fc522626de78ec535c5e7", "message": "chore (build): stop overriding the module cache lifetime\n\nSee discussion in https://github.com/MovingBlocks/Terasology/pull/4039#issuecomment-678582262", "committedDate": "2020-11-15T01:26:35Z", "type": "commit"}, {"oid": "3db59b7fa9ad4d6b90cdfa1745e5415ad6f21055", "url": "https://github.com/MovingBlocks/Terasology/commit/3db59b7fa9ad4d6b90cdfa1745e5415ad6f21055", "message": "chore (build): remove stray comment\n\ndon't worry about putting extra work into syncing the versions among subprojects. I think the depenecy resolver will work it out.", "committedDate": "2020-11-15T01:33:34Z", "type": "commit"}, {"oid": "0e58fce6223f40376135efa100d439ccb7ac8acb", "url": "https://github.com/MovingBlocks/Terasology/commit/0e58fce6223f40376135efa100d439ccb7ac8acb", "message": "Merge remote-tracking branch 'origin/develop' into feat/versioned-mod-deps", "committedDate": "2020-12-12T19:17:30Z", "type": "commit"}, {"oid": "18a5a6c7aee8fedd53de24f23e10334f2f8b3fa0", "url": "https://github.com/MovingBlocks/Terasology/commit/18a5a6c7aee8fedd53de24f23e10334f2f8b3fa0", "message": "Merge branch 'feat/versioned-mod-deps' into fix/explicit-snapshots", "committedDate": "2020-12-12T19:19:36Z", "type": "commit"}, {"oid": "25f47c83474fa9152fc435b16e1542fe0b0701f3", "url": "https://github.com/MovingBlocks/Terasology/commit/25f47c83474fa9152fc435b16e1542fe0b0701f3", "message": "Merge remote-tracking branch 'origin/develop' into feat/versioned-mod-deps\n\n# Conflicts:\n#\t.idea/.gitignore", "committedDate": "2020-12-12T20:02:27Z", "type": "commit"}, {"oid": "eea084781c935d43011d808e92103e367dbec0d6", "url": "https://github.com/MovingBlocks/Terasology/commit/eea084781c935d43011d808e92103e367dbec0d6", "message": "Merge branch 'feat/versioned-mod-deps' into fix/explicit-snapshots", "committedDate": "2020-12-12T20:02:57Z", "type": "commit"}, {"oid": "d10145537ffa13846b2f1e102309fb1a390c713c", "url": "https://github.com/MovingBlocks/Terasology/commit/d10145537ffa13846b2f1e102309fb1a390c713c", "message": "Merge remote-tracking branch 'origin/develop' into feat/versioned-mod-deps", "committedDate": "2020-12-21T00:17:07Z", "type": "commit"}, {"oid": "239f5e38027484b4d4f32ea6fa89604946ec9c95", "url": "https://github.com/MovingBlocks/Terasology/commit/239f5e38027484b4d4f32ea6fa89604946ec9c95", "message": "Merge branch 'feat/versioned-mod-deps' into fix/explicit-snapshots", "committedDate": "2020-12-21T00:17:41Z", "type": "commit"}]}