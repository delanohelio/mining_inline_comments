{"pr_number": 4063, "pr_title": "doc: Add docs and contracts for AbstractValueModifiableEvent", "pr_createdAt": "2020-07-02T10:25:02Z", "pr_url": "https://github.com/MovingBlocks/Terasology/pull/4063", "timeline": [{"oid": "36bb89510f7a593ed6ecebdf41e36cb312cd09be", "url": "https://github.com/MovingBlocks/Terasology/commit/36bb89510f7a593ed6ecebdf41e36cb312cd09be", "message": "fix(AbstractValueModifiableEvent): simplify calculation of result value, document guarantees", "committedDate": "2020-07-20T20:16:51Z", "type": "forcePushed"}, {"oid": "a04ce1b972acba40f1148538cc2f4b212abb625d", "url": "https://github.com/MovingBlocks/Terasology/commit/a04ce1b972acba40f1148538cc2f4b212abb625d", "message": "doc(ValueModifiableEvent): Add docs and contracts", "committedDate": "2020-07-20T20:17:56Z", "type": "commit"}, {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf", "url": "https://github.com/MovingBlocks/Terasology/commit/3ddfff104e6a858460ba414d417bde9a6c1f5faf", "message": "fix(AbstractValueModifiableEvent): simplify calculation of result value, document guarantees", "committedDate": "2020-07-20T20:18:28Z", "type": "commit"}, {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf", "url": "https://github.com/MovingBlocks/Terasology/commit/3ddfff104e6a858460ba414d417bde9a6c1f5faf", "message": "fix(AbstractValueModifiableEvent): simplify calculation of result value, document guarantees", "committedDate": "2020-07-20T20:18:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2OTI5NQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4063#discussion_r458969295", "bodyText": "Thanks to @4Denthusiast for pointing this out in #4094\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Math.max(0, baseValue + modifiers.sum() * product(multipliers) + postModifiers.sum());\n          \n          \n            \n                    return Math.max(0, (baseValue + modifiers.sum()) * product(multipliers) + postModifiers.sum());", "author": "skaldarnar", "createdAt": "2020-07-22T17:41:05Z", "path": "engine/src/main/java/org/terasology/entitySystem/event/AbstractValueModifiableEvent.java", "diffHunk": "@@ -44,31 +47,33 @@ public void add(float amount) {\n         modifiers.add(amount);\n     }\n \n+    /**\n+     * @deprecated please use {@link #postAdd(float)} instead.\n+     */\n+    @Deprecated\n     public void addPostMultiply(float amount) {\n+        postAdd(amount);\n+    }\n+\n+    public void postAdd(float amount) {\n         postModifiers.add(amount);\n     }\n \n+    /**\n+     * Calculates the result value from the base value and given modifiers and multipliers.\n+     * <p>\n+     * The value is calculated based on the following formula:\n+     * <pre>\n+     * result = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)\n+     * </pre>\n+     *\n+     * <emph>The result value is guaranteed to be non-negative!</emph>\n+     */\n     public float getResultValue() {\n-        // For now, add all modifiers and multiply by all multipliers. Negative modifiers cap to zero, but negative\n-        // multipliers remain.\n-\n-        float result = baseValue;\n-        TFloatIterator modifierIter = modifiers.iterator();\n-        while (modifierIter.hasNext()) {\n-            result += modifierIter.next();\n-        }\n-        result = Math.max(0, result);\n-\n-        TFloatIterator multiplierIter = multipliers.iterator();\n-        while (multiplierIter.hasNext()) {\n-            result *= multiplierIter.next();\n-        }\n-\n-        final TFloatIterator postModifierIter = postModifiers.iterator();\n-        while (postModifierIter.hasNext()) {\n-            result += postModifierIter.next();\n-        }\n-        return result;\n+        //TODO(skaldarnar): Based on a discussion in https://github.com/MovingBlocks/Terasology/pull/4063 we may want\n+        // to lift the guarantee/restriction that the result value needs to be non-negative. Systems are still free to\n+        // apply this restriction if needed.\n+        return Math.max(0, baseValue + modifiers.sum() * product(multipliers) + postModifiers.sum());", "originalCommit": "3ddfff104e6a858460ba414d417bde9a6c1f5faf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2OTQ0OA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4063#discussion_r458969448", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * result = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)\n          \n          \n            \n                 * result = max(0, (<baseValue> + \u03a3 <modifier>) * \u03a0 <multiplier> + \u03a3 <postModifier>)", "author": "skaldarnar", "createdAt": "2020-07-22T17:41:21Z", "path": "engine/src/main/java/org/terasology/entitySystem/event/AbstractValueModifiableEvent.java", "diffHunk": "@@ -44,31 +47,33 @@ public void add(float amount) {\n         modifiers.add(amount);\n     }\n \n+    /**\n+     * @deprecated please use {@link #postAdd(float)} instead.\n+     */\n+    @Deprecated\n     public void addPostMultiply(float amount) {\n+        postAdd(amount);\n+    }\n+\n+    public void postAdd(float amount) {\n         postModifiers.add(amount);\n     }\n \n+    /**\n+     * Calculates the result value from the base value and given modifiers and multipliers.\n+     * <p>\n+     * The value is calculated based on the following formula:\n+     * <pre>\n+     * result = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)", "originalCommit": "3ddfff104e6a858460ba414d417bde9a6c1f5faf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0fd27b861921f043ea5e2683f6a01de983a59e18", "url": "https://github.com/MovingBlocks/Terasology/commit/0fd27b861921f043ea5e2683f6a01de983a59e18", "message": "fix: correct precedence in computing result value", "committedDate": "2020-07-22T17:41:46Z", "type": "commit"}]}