{"pr_number": 4377, "pr_title": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "pr_createdAt": "2020-10-23T18:34:55Z", "pr_url": "https://github.com/wildfly/wildfly-core/pull/4377", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzNTM2OA==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r511135368", "bodyText": "Very minor nit, I think SSL_V2_HELLO reads a bit better than SSL_V2HELLO.", "author": "fjuma", "createdAt": "2020-10-23T20:16:22Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/ElytronDescriptionConstants.java", "diffHunk": "@@ -532,6 +532,7 @@\n     String SSL_CONTEXT = \"ssl-context\";\n     String SSL_CONTEXT_REGISTRATION = \"ssl-context-registration\";\n     String SSL_SESSION = \"ssl-session\";\n+    String SSL_V2HELLO = \"SSLv2Hello\";", "originalCommit": "99d6a0ec4915b1d6e8fc26b92969b228590ffe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjUzMA==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r511146530", "bodyText": "Looks like the ListRejectAttributeChecker could be used here instead.", "author": "fjuma", "createdAt": "2020-10-23T20:43:40Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java", "diffHunk": "@@ -119,7 +119,14 @@ public void registerTransformers(SubsystemTransformerRegistration registration)\n \n     private static void from12(ChainedTransformationDescriptionBuilder chainedBuilder) {\n         ResourceTransformationDescriptionBuilder builder = chainedBuilder.createBuilder(ELYTRON_12_0_0, ELYTRON_11_0_0);\n-\n+        builder.addChildResource(PathElement.pathElement(ElytronDescriptionConstants.SERVER_SSL_CONTEXT))\n+                .getAttributeBuilder()\n+                .addRejectCheck(new RejectAttributeChecker.SimpleAcceptListAttributeChecker(new ModelNode(ElytronDescriptionConstants.SSL_V2HELLO)), ElytronDescriptionConstants.PROTOCOLS)", "originalCommit": "99d6a0ec4915b1d6e8fc26b92969b228590ffe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MjMyNA==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r511152324", "bodyText": "It would also be good to add a test for the case where SSLv2Hello is only configured on the server side.", "author": "fjuma", "createdAt": "2020-10-23T20:58:12Z", "path": "elytron/src/test/java/org/wildfly/extension/elytron/TlsTestCase.java", "diffHunk": "@@ -368,6 +368,27 @@ public void testSslServiceAuthTLS13() throws Throwable {\n                 \"OU=Elytron,O=Elytron,C=UK,ST=Elytron,CN=Firefly\", \"TLS_AES_256_GCM_SHA384\", true);\n     }\n \n+    @Test\n+    public void testSslServiceAuthSSLv2Hello() throws Throwable {\n+        Assume.assumeFalse(\"Skipping testSslServiceAuthSSLv2Hello as IBM JDK does not support enabling SSLv2Hello \" +\n+                \"in the client\", JdkUtils.isIbmJdk());\n+        testCommunication(\"ServerSslContextSSLv2Hello\", \"ClientSslContextSSLv2Hello\", false, \"OU=Elytron,O=Elytron,C=CZ,ST=Elytron,CN=localhost\",\n+                \"OU=Elytron,O=Elytron,C=UK,ST=Elytron,CN=Firefly\");\n+    }\n+\n+    @Test\n+    public void testSslServiceAuthProtocolMismatchSSLv2Hello() throws Throwable {", "originalCommit": "99d6a0ec4915b1d6e8fc26b92969b228590ffe1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI2MjA3NQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r512262075", "bodyText": "Added", "author": "SoniaZaldana", "createdAt": "2020-10-26T20:55:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MjMyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyMDE5Mg==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r512920192", "bodyText": "Looks like it would be good to add one more test case that makes use of the default protocols on the server side and the client side to ensure that SSLv2Hello isn't enabled by default.", "author": "fjuma", "createdAt": "2020-10-27T18:09:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MjMyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyMzMwNQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r512923305", "bodyText": "It would also be good to either tweak testCommunication or create a new method that could be used instead in order to assert that serverSocket.getEnabledProtocols(), clientSocket.getEnabledProtocols(), serverSocket.getSession().getProtocol(), and clientSocket.getSession().getProtocol() return the expected values.", "author": "fjuma", "createdAt": "2020-10-27T18:14:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MjMyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ3ODg0NQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r513478845", "bodyText": "I've modified testCommunication to check the configured protocols.", "author": "SoniaZaldana", "createdAt": "2020-10-28T14:16:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MjMyNA=="}], "type": "inlineReview"}, {"oid": "902925f0ef172bc19e3392256adcd630a755e0a2", "url": "https://github.com/wildfly/wildfly-core/commit/902925f0ef172bc19e3392256adcd630a755e0a2", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2020-10-26T20:53:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxMzk2Mg==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r512913962", "bodyText": "This can be removed now since it's unused.", "author": "fjuma", "createdAt": "2020-10-27T18:01:48Z", "path": "controller/src/main/java/org/jboss/as/controller/logging/ControllerLogger.java", "diffHunk": "@@ -3629,4 +3629,7 @@ OperationFailedRuntimeException capabilityAlreadyRegisteredInContext(String capa\n \n     @Message(id = 476, value = \"Value for attribute '%s' is invalid: either '%s' must be specified on its own or '%s' needs to be specified with at least one of '%s' or '%s'\")\n     OperationFailedException invalidCredentialReferenceValue(String attributeName, String clearTextAttributeName, String credentialStoreAttributeName, String clearTextAttributeName1, String alias);\n+\n+    @Message(id = 477, value = \"The following attributes must not include %s in the current model: %s\")\n+    String attributesMustNotInclude(ModelNode value, Set<String> names);", "originalCommit": "902925f0ef172bc19e3392256adcd630a755e0a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "330bb3b1e484c89477a36f81ef158818f0e2e01c", "url": "https://github.com/wildfly/wildfly-core/commit/330bb3b1e484c89477a36f81ef158818f0e2e01c", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2020-10-28T14:15:22Z", "type": "forcePushed"}, {"oid": "ae143d92360abce28845fc9850c896117a5dac4e", "url": "https://github.com/wildfly/wildfly-core/commit/ae143d92360abce28845fc9850c896117a5dac4e", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2020-10-28T14:18:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUzNTAxNw==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r513535017", "bodyText": "I think double check that the same additions made in tls-sun.xml are also made in tls-ibm.xml and tls-oracle13plus.xml.xml. Notice that in TlsTestCase#prepare, we can see that one of these three test files will be used depending on the JDK version. So for any resources that we're adding for new test cases, we need to make sure that we add the same ones to all three test files.", "author": "fjuma", "createdAt": "2020-10-28T15:24:01Z", "path": "elytron/src/test/resources/org/wildfly/extension/elytron/tls-ibm.xml", "diffHunk": "@@ -111,6 +111,14 @@\n                                 key-manager=\"ServerKeyManager\" trust-manager=\"CaTrustManager\" want-client-auth=\"true\" need-client-auth=\"true\"\n                                 authentication-optional=\"false\" use-cipher-suites-order=\"false\" providers=\"openssl\"\n                                 session-timeout=\"321\" maximum-session-cache-size=\"123\"/>\n+            <server-ssl-context name=\"ServerSslContextSSLv2Hello\" protocols=\"TLSv1 SSLv2Hello\"", "originalCommit": "ae143d92360abce28845fc9850c896117a5dac4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYxOTc4MQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r513619781", "bodyText": "I've updated the files so that the same additions are added across all three files.", "author": "SoniaZaldana", "createdAt": "2020-10-28T17:12:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUzNTAxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU5MDM5Ng==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r514590396", "bodyText": "I think tls-ibm.xml is missing \"SeverSslContextSSLv2HelloOpenSsl\".", "author": "fjuma", "createdAt": "2020-10-29T21:54:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUzNTAxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU5MTU1Mw==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r514591553", "bodyText": "Actually, ignore that last comment, I can see that the test that makes use of that SSL context doesn't get run on IBM JDK. :)", "author": "fjuma", "createdAt": "2020-10-29T21:57:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUzNTAxNw=="}], "type": "inlineReview"}, {"oid": "c42b7ca55e59f194f270538b5c0c2a9928e9822d", "url": "https://github.com/wildfly/wildfly-core/commit/c42b7ca55e59f194f270538b5c0c2a9928e9822d", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2020-10-28T17:10:14Z", "type": "forcePushed"}, {"oid": "561e9e7b315ff89e019820d9874ba2254613fc23", "url": "https://github.com/wildfly/wildfly-core/commit/561e9e7b315ff89e019820d9874ba2254613fc23", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2020-10-29T19:59:14Z", "type": "forcePushed"}, {"oid": "d1ad6ad7380dcfc2abb09fedc5289afcbc0c4c6e", "url": "https://github.com/wildfly/wildfly-core/commit/d1ad6ad7380dcfc2abb09fedc5289afcbc0c4c6e", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2020-11-26T20:10:37Z", "type": "forcePushed"}, {"oid": "77d27081dacf12f8c23a43f82cb8135e70538b7b", "url": "https://github.com/wildfly/wildfly-core/commit/77d27081dacf12f8c23a43f82cb8135e70538b7b", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-01-11T15:13:50Z", "type": "forcePushed"}, {"oid": "779018ab56d60d4735b312b3ce1316890ec5ecd8", "url": "https://github.com/wildfly/wildfly-core/commit/779018ab56d60d4735b312b3ce1316890ec5ecd8", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-01-11T15:21:17Z", "type": "forcePushed"}, {"oid": "ff8313153bc99acf847ff0fb517fade6c1d0cda2", "url": "https://github.com/wildfly/wildfly-core/commit/ff8313153bc99acf847ff0fb517fade6c1d0cda2", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-01-11T19:37:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTMxNzQ1OQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4377#discussion_r555317459", "bodyText": "This block should be moved to the new from13 method.", "author": "fjuma", "createdAt": "2021-01-11T20:27:14Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java", "diffHunk": "@@ -127,6 +127,14 @@ private static void from13(ChainedTransformationDescriptionBuilder chainedBuilde\n \n     private static void from12(ChainedTransformationDescriptionBuilder chainedBuilder) {\n         ResourceTransformationDescriptionBuilder builder = chainedBuilder.createBuilder(ELYTRON_12_0_0, ELYTRON_11_0_0);\n+        builder.addChildResource(PathElement.pathElement(ElytronDescriptionConstants.SERVER_SSL_CONTEXT))\n+                .getAttributeBuilder()\n+                .addRejectCheck(new RejectAttributeChecker.ListRejectAttributeChecker(new RejectAttributeChecker.SimpleRejectAttributeChecker( new ModelNode(ElytronDescriptionConstants.SSL_V2_HELLO))), ElytronDescriptionConstants.PROTOCOLS)\n+                .end();\n+        builder.addChildResource(PathElement.pathElement(ElytronDescriptionConstants.CLIENT_SSL_CONTEXT))\n+                .getAttributeBuilder()\n+                .addRejectCheck(new RejectAttributeChecker.ListRejectAttributeChecker(new RejectAttributeChecker.SimpleRejectAttributeChecker( new ModelNode(ElytronDescriptionConstants.SSL_V2_HELLO))), ElytronDescriptionConstants.PROTOCOLS)\n+                .end();", "originalCommit": "ff8313153bc99acf847ff0fb517fade6c1d0cda2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4d638eae7fc954bebbad82ab20a67fb4df99462e", "url": "https://github.com/wildfly/wildfly-core/commit/4d638eae7fc954bebbad82ab20a67fb4df99462e", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-01-11T20:39:41Z", "type": "forcePushed"}, {"oid": "d7241e1b4ce64725797796061b3d544ef686ca53", "url": "https://github.com/wildfly/wildfly-core/commit/d7241e1b4ce64725797796061b3d544ef686ca53", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-02-01T20:04:28Z", "type": "forcePushed"}, {"oid": "c12350c2f0c38d171663a397d7329832cff4dec7", "url": "https://github.com/wildfly/wildfly-core/commit/c12350c2f0c38d171663a397d7329832cff4dec7", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-02-04T19:01:24Z", "type": "forcePushed"}, {"oid": "714733f3dfc8a36ce71dff388bd51429cfbf497c", "url": "https://github.com/wildfly/wildfly-core/commit/714733f3dfc8a36ce71dff388bd51429cfbf497c", "message": "[WFCORE-5341] Add version 14 of the WildFly Elytron model and schema.", "committedDate": "2021-03-17T16:17:41Z", "type": "commit"}, {"oid": "edae7e528db53c6de9b8d23872bcdcf5ee20d8aa", "url": "https://github.com/wildfly/wildfly-core/commit/edae7e528db53c6de9b8d23872bcdcf5ee20d8aa", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-03-17T20:46:53Z", "type": "forcePushed"}, {"oid": "c643a34a420d493041a817c145ab2c82d013f97a", "url": "https://github.com/wildfly/wildfly-core/commit/c643a34a420d493041a817c145ab2c82d013f97a", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-03-18T15:20:07Z", "type": "forcePushed"}, {"oid": "fc3bf9ebae5d2aaca1b3b3f90e4e647706ff7dd4", "url": "https://github.com/wildfly/wildfly-core/commit/fc3bf9ebae5d2aaca1b3b3f90e4e647706ff7dd4", "message": "[WFCORE-5341] Merge latest changes from \"master\".", "committedDate": "2021-03-22T15:53:02Z", "type": "commit"}, {"oid": "df2f4954b1778b64328a757b09d3607138f8a3c8", "url": "https://github.com/wildfly/wildfly-core/commit/df2f4954b1778b64328a757b09d3607138f8a3c8", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-04-08T18:24:04Z", "type": "forcePushed"}, {"oid": "57aa057c67cb0e9726c0db6d5f301641fc32ce12", "url": "https://github.com/wildfly/wildfly-core/commit/57aa057c67cb0e9726c0db6d5f301641fc32ce12", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-04-08T18:35:07Z", "type": "forcePushed"}, {"oid": "42fc8e8b3404db977825c2410a20a66985313236", "url": "https://github.com/wildfly/wildfly-core/commit/42fc8e8b3404db977825c2410a20a66985313236", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-05-31T14:38:34Z", "type": "commit"}, {"oid": "42fc8e8b3404db977825c2410a20a66985313236", "url": "https://github.com/wildfly/wildfly-core/commit/42fc8e8b3404db977825c2410a20a66985313236", "message": "[WFCORE-5145] Elytron server-ssl-context allowed protocols", "committedDate": "2021-05-31T14:38:34Z", "type": "forcePushed"}]}