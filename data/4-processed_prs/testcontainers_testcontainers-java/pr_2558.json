{"pr_number": 2558, "pr_title": "Include image name in RemoteDockerImage#toString", "pr_createdAt": "2020-04-12T17:33:38Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/2558", "timeline": [{"oid": "410e96ec764bdfb66498f09455a999e977147894", "url": "https://github.com/testcontainers/testcontainers-java/commit/410e96ec764bdfb66498f09455a999e977147894", "message": "clean up imports in GenericContainer", "committedDate": "2020-03-17T23:26:57Z", "type": "commit"}, {"oid": "12c3b1c8ef80c39f24b00c0235973214a3fd3c37", "url": "https://github.com/testcontainers/testcontainers-java/commit/12c3b1c8ef80c39f24b00c0235973214a3fd3c37", "message": "include image name in RemoteDockerImage.toString() to fix #2443", "committedDate": "2020-03-17T23:37:48Z", "type": "commit"}, {"oid": "47329ba7747df814e8d10615eeb474af8b84cc03", "url": "https://github.com/testcontainers/testcontainers-java/commit/47329ba7747df814e8d10615eeb474af8b84cc03", "message": "test RemoteDockerImage directly", "committedDate": "2020-03-18T21:29:41Z", "type": "commit"}, {"oid": "9b316322b2f323b32dbc861253154389485eb094", "url": "https://github.com/testcontainers/testcontainers-java/commit/9b316322b2f323b32dbc861253154389485eb094", "message": "handle failures getting the image name", "committedDate": "2020-03-19T01:16:41Z", "type": "commit"}, {"oid": "1af3325d90bddb46e8a66fe1494639c550bdc574", "url": "https://github.com/testcontainers/testcontainers-java/commit/1af3325d90bddb46e8a66fe1494639c550bdc574", "message": "use completeExceptionally instead of mocking", "committedDate": "2020-03-19T15:54:41Z", "type": "commit"}, {"oid": "c78defa80a7d3183973ee2b2757622fd6dd33c0a", "url": "https://github.com/testcontainers/testcontainers-java/commit/c78defa80a7d3183973ee2b2757622fd6dd33c0a", "message": "tweak assertions", "committedDate": "2020-03-19T15:55:04Z", "type": "commit"}, {"oid": "8a7318f0f4f6f6aee61690b78667b84d404f6fa4", "url": "https://github.com/testcontainers/testcontainers-java/commit/8a7318f0f4f6f6aee61690b78667b84d404f6fa4", "message": "more assertion tweaks", "committedDate": "2020-03-23T18:59:02Z", "type": "commit"}, {"oid": "d6908d0ede4cb4fde2a6d488eb6cfc041ac93c73", "url": "https://github.com/testcontainers/testcontainers-java/commit/d6908d0ede4cb4fde2a6d488eb6cfc041ac93c73", "message": "add isDone check to RemoteDockerImage.toString -- still figuring out why test fails", "committedDate": "2020-03-23T18:59:32Z", "type": "commit"}, {"oid": "1a31c5ce6739f66d38918253ef0c173a09f9e4d9", "url": "https://github.com/testcontainers/testcontainers-java/commit/1a31c5ce6739f66d38918253ef0c173a09f9e4d9", "message": "go back to using lombok @ToString, exclude dockerClient while we're at it", "committedDate": "2020-03-27T20:33:27Z", "type": "commit"}, {"oid": "d70c67a28fc3e7279d842c3bd645a6021f8d9c0c", "url": "https://github.com/testcontainers/testcontainers-java/commit/d70c67a28fc3e7279d842c3bd645a6021f8d9c0c", "message": "Merge branch 'image_name_in_RemoteDockerImage_toString' of https://github.com/locationlabs/testcontainers-java into locationlabs-image_name_in_RemoteDockerImage_toString", "committedDate": "2020-04-12T17:30:33Z", "type": "commit"}, {"oid": "4f627bca1774b74b4eefe91dbba59ca3c864d47b", "url": "https://github.com/testcontainers/testcontainers-java/commit/4f627bca1774b74b4eefe91dbba59ca3c864d47b", "message": "use `Futures.lazyTransform` that also proxies `isDone`", "committedDate": "2020-04-12T17:33:05Z", "type": "commit"}, {"oid": "6756f78c1d8917140b768a596d55217fc6a5efea", "url": "https://github.com/testcontainers/testcontainers-java/commit/6756f78c1d8917140b768a596d55217fc6a5efea", "message": "`imageNameToString` should not be public", "committedDate": "2020-04-12T17:35:39Z", "type": "commit"}, {"oid": "31630ce22bdebd3ea8c3e6c25037980622ad3b07", "url": "https://github.com/testcontainers/testcontainers-java/commit/31630ce22bdebd3ea8c3e6c25037980622ad3b07", "message": "Include the message on error", "committedDate": "2020-04-12T17:39:55Z", "type": "commit"}, {"oid": "d5c42d1014057473a6c985f9d79f84440033b067", "url": "https://github.com/testcontainers/testcontainers-java/commit/d5c42d1014057473a6c985f9d79f84440033b067", "message": "Merge branch 'master' into locationlabs-image_name_in_RemoteDockerImage_toString", "committedDate": "2020-04-12T17:59:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNDYzNQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407234635", "bodyText": "Why is try necessary after the future is done?", "author": "kiview", "createdAt": "2020-04-12T18:20:58Z", "path": "core/src/main/java/org/testcontainers/images/RemoteDockerImage.java", "diffHunk": "@@ -95,4 +92,21 @@ protected final String resolve() {\n             throw new ContainerFetchException(\"Failed to get Docker client for \" + imageName, e);\n         }\n     }\n+\n+    private DockerImageName getImageName() throws InterruptedException, ExecutionException {\n+        return imageNameFuture.get();\n+    }\n+\n+    @ToString.Include(name = \"imageName\", rank = 1)\n+    private String imageNameToString() {\n+        if (!imageNameFuture.isDone()) {\n+            return \"<resolving>\";\n+        }\n+\n+        try {\n+            return getImageName().toString();", "originalCommit": "d5c42d1014057473a6c985f9d79f84440033b067", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNTEzNA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407235134", "bodyText": "you need to get the value from the future. Unless I miss something \ud83d\ude05", "author": "bsideup", "createdAt": "2020-04-12T18:24:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNDYzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNDg1OQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407234859", "bodyText": "Why random string?", "author": "kiview", "createdAt": "2020-04-12T18:23:05Z", "path": "core/src/test/java/org/testcontainers/images/RemoteDockerImageTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.testcontainers.images;\n+\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+\n+import org.junit.Test;\n+import org.testcontainers.utility.Base58;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+public class RemoteDockerImageTest {\n+\n+    @Test\n+    public void toStringContainsOnlyImageName() {\n+        String imageName = Base58.randomString(8).toLowerCase();", "originalCommit": "d5c42d1014057473a6c985f9d79f84440033b067", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNDk1Ng==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407234956", "bodyText": "why not? :)", "author": "bsideup", "createdAt": "2020-04-12T18:23:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNDg1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNzA0MQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407237041", "bodyText": "Because constant example string seems more controlled to me.", "author": "kiview", "createdAt": "2020-04-12T18:42:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNDg1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNTQ3NA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407235474", "bodyText": "This caught me by surprise - in case of a failure, why would we not rethrow? At first sight it seems odd that an exception message could become the 'name' of the image...", "author": "rnorth", "createdAt": "2020-04-12T18:28:07Z", "path": "core/src/main/java/org/testcontainers/images/RemoteDockerImage.java", "diffHunk": "@@ -95,4 +92,21 @@ protected final String resolve() {\n             throw new ContainerFetchException(\"Failed to get Docker client for \" + imageName, e);\n         }\n     }\n+\n+    private DockerImageName getImageName() throws InterruptedException, ExecutionException {\n+        return imageNameFuture.get();\n+    }\n+\n+    @ToString.Include(name = \"imageName\", rank = 1)\n+    private String imageNameToString() {\n+        if (!imageNameFuture.isDone()) {\n+            return \"<resolving>\";\n+        }\n+\n+        try {\n+            return getImageName().toString();\n+        } catch (InterruptedException | ExecutionException e) {\n+            return e.getMessage();", "originalCommit": "d5c42d1014057473a6c985f9d79f84440033b067", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNTY2OA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407235668", "bodyText": "this is for toString() - it would be weird to rethrow from toString IMO. Instead, we return the message, so that RemoveDockerImage#toString shows that there was an exception", "author": "bsideup", "createdAt": "2020-04-12T18:29:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNTQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNjY2MQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407236661", "bodyText": "Fair enough - I guess we can't do too much more than this.", "author": "rnorth", "createdAt": "2020-04-12T18:38:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNTQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNzAyNA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407237024", "bodyText": "Yes, might create some nasty bugs if rethrowing.", "author": "kiview", "createdAt": "2020-04-12T18:42:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNTQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0ODk4OQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407248989", "bodyText": "Looks like this method name doesn't really match the contents anymore", "author": "dbyron0", "createdAt": "2020-04-12T20:34:21Z", "path": "core/src/test/java/org/testcontainers/images/RemoteDockerImageTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.testcontainers.images;\n+\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+\n+import org.junit.Test;\n+import org.testcontainers.utility.Base58;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+public class RemoteDockerImageTest {\n+\n+    @Test\n+    public void toStringContainsOnlyImageName() {\n+        String imageName = Base58.randomString(8).toLowerCase();\n+        RemoteDockerImage remoteDockerImage = new RemoteDockerImage(imageName);\n+        assertThat(remoteDockerImage.toString(), containsString(\"imageName=\" + imageName));\n+    }\n+\n+    @Test\n+    public void toStringWithExceptionContainsOnlyImageNameFuture()  {", "originalCommit": "d5c42d1014057473a6c985f9d79f84440033b067", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0OTI1Mw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2558#discussion_r407249253", "bodyText": "This method name came to be back when there was a choice between imageName and imageNameFuture.  Maybe a better name now is toStringWithCompletedImageName ?", "author": "dbyron0", "createdAt": "2020-04-12T20:36:44Z", "path": "core/src/test/java/org/testcontainers/images/RemoteDockerImageTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.testcontainers.images;\n+\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+\n+import org.junit.Test;\n+import org.testcontainers.utility.Base58;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+public class RemoteDockerImageTest {\n+\n+    @Test\n+    public void toStringContainsOnlyImageName() {", "originalCommit": "d5c42d1014057473a6c985f9d79f84440033b067", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}