{"pr_number": 2573, "pr_title": "Support ImageFromDockerfile authenticated image pulls", "pr_createdAt": "2020-04-14T09:51:26Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/2573", "timeline": [{"oid": "50f21e67b7d71945b3f3abfd16e1d31b53f15ded", "url": "https://github.com/testcontainers/testcontainers-java/commit/50f21e67b7d71945b3f3abfd16e1d31b53f15ded", "message": "Support ImageFromDockerfile authenticated image pulls", "committedDate": "2020-04-14T09:12:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTU0Ng==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2573#discussion_r408015546", "bodyText": "nit: why not the good old for-in? :D", "author": "bsideup", "createdAt": "2020-04-14T09:59:59Z", "path": "core/src/main/java/org/testcontainers/images/builder/ImageFromDockerfile.java", "diffHunk": "@@ -154,11 +146,30 @@ protected void configure(BuildImageCmd buildImageCmd) {\n         this.dockerfile.ifPresent(p -> {\n             buildImageCmd.withDockerfile(p.toFile());\n             dependencyImageNames = new ParsedDockerfile(p).getDependencyImageNames();\n+\n+            if (dependencyImageNames.size() > 0) {\n+                // if we'l be pre-pulling images, disable the built-in pull as it is not necessary and will fail for\n+                // authenticated registries\n+                buildImageCmd.withPull(false);\n+            }\n         });\n \n         this.buildArgs.forEach(buildImageCmd::withBuildArg);\n     }\n \n+    private void prePullDependencyImages(Set<String> imagesToPull) {\n+        final DockerClient dockerClient = DockerClientFactory.instance().client();\n+\n+        imagesToPull.forEach(imageName -> {", "originalCommit": "50f21e67b7d71945b3f3abfd16e1d31b53f15ded", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxODQzOA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2573#discussion_r408018438", "bodyText": "That's a really good point - I prefer that style anyway, don't know why I did this :D", "author": "rnorth", "createdAt": "2020-04-14T10:04:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyMDkxMg==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2573#discussion_r408020912", "bodyText": "Maybe it was a bit more complex before and involved some Streams or something? :)", "author": "bsideup", "createdAt": "2020-04-14T10:08:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNDk5Mg==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2573#discussion_r408404992", "bodyText": "I blame the month-ago version of me - he had no idea what he was doing \ud83d\ude02", "author": "rnorth", "createdAt": "2020-04-14T20:10:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTU0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIxNTE4Mg==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2573#discussion_r408215182", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // if we'l be pre-pulling images, disable the built-in pull as it is not necessary and will fail for\n          \n          \n            \n                            // if we'll be pre-pulling images, disable the built-in pull as it is not necessary and will fail for", "author": "dbyron0", "createdAt": "2020-04-14T15:11:01Z", "path": "core/src/main/java/org/testcontainers/images/builder/ImageFromDockerfile.java", "diffHunk": "@@ -154,11 +146,30 @@ protected void configure(BuildImageCmd buildImageCmd) {\n         this.dockerfile.ifPresent(p -> {\n             buildImageCmd.withDockerfile(p.toFile());\n             dependencyImageNames = new ParsedDockerfile(p).getDependencyImageNames();\n+\n+            if (dependencyImageNames.size() > 0) {\n+                // if we'l be pre-pulling images, disable the built-in pull as it is not necessary and will fail for", "originalCommit": "50f21e67b7d71945b3f3abfd16e1d31b53f15ded", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMjI1NA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2573#discussion_r408402254", "bodyText": "Whoops! Thank you \ud83d\ude04", "author": "rnorth", "createdAt": "2020-04-14T20:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIxNTE4Mg=="}], "type": "inlineReview"}, {"oid": "8f536def44edc1b776a0b6c344d21da61d943bc9", "url": "https://github.com/testcontainers/testcontainers-java/commit/8f536def44edc1b776a0b6c344d21da61d943bc9", "message": "Add integration tests for authenticated pulls for ImageFromDockerfile and Docker Compose", "committedDate": "2020-04-14T20:03:44Z", "type": "commit"}, {"oid": "b7fcf2236b4cf3fc695908396f23d8975dd70907", "url": "https://github.com/testcontainers/testcontainers-java/commit/b7fcf2236b4cf3fc695908396f23d8975dd70907", "message": "Update core/src/main/java/org/testcontainers/images/builder/ImageFromDockerfile.java\n\nCo-Authored-By: David Byron <dbyron@dbyron.com>", "committedDate": "2020-04-14T20:05:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNjMxNQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2573#discussion_r408406315", "bodyText": "Deprecation duty.", "author": "rnorth", "createdAt": "2020-04-14T20:12:49Z", "path": "core/src/test/java/org/testcontainers/utility/AuthenticatedImagePullTest.java", "diffHunk": "@@ -109,10 +169,7 @@ private void putImageInRegistry() throws InterruptedException {\n         client.tagImageCmd(id, testImageName, \"latest\").exec();\n \n         client.pushImageCmd(testImageNameWithTag)\n-            .exec(new PushImageResultCallback())\n+            .exec(new ResultCallback.Adapter<>())", "originalCommit": "b7fcf2236b4cf3fc695908396f23d8975dd70907", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNzgxNw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2573#discussion_r408407817", "bodyText": "I wish we had text blocks!\nI would have preferred to just point to a static file on disk, but unfortunately our dockerized private registry has a port number that can vary, and thus the image name changes.\nHence, constructing a tiny YAML file in a string seemed like a tolerable evil.", "author": "rnorth", "createdAt": "2020-04-14T20:15:41Z", "path": "core/src/test/java/org/testcontainers/utility/AuthenticatedImagePullTest.java", "diffHunk": "@@ -83,17 +83,77 @@ public void testThatAuthLocatorIsUsed() throws Exception {\n \n         // a push will use the auth locator for authentication, although that isn't the goal of this test\n         putImageInRegistry();\n+    }\n+\n+    @Before\n+    public void removeImageFromLocalDocker() {\n+        // remove the image tag from local docker so that it must be pulled before use\n+        client.removeImageCmd(testImageNameWithTag).withForce(true).exec();\n+    }\n \n+    @AfterClass\n+    public static void tearDown() {\n+        RegistryAuthLocator.setInstance(originalAuthLocatorSingleton);\n+    }\n+\n+    @Test\n+    public void testThatAuthLocatorIsUsedForContainerCreation() {\n         // actually start a container, which will require an authenticated pull\n-        try (final GenericContainer container = new GenericContainer<>(testImageNameWithTag)\n+        try (final GenericContainer<?> container = new GenericContainer<>(testImageNameWithTag)\n             .withCommand(\"/bin/sh\", \"-c\", \"sleep 10\")) {\n             container.start();\n \n             assertTrue(\"container started following an authenticated pull\", container.isRunning());\n         }\n     }\n \n-    private void putImageInRegistry() throws InterruptedException {\n+    @Test\n+    public void testThatAuthLocatorIsUsedForDockerfileBuild() throws IOException {\n+        // Prepare a simple temporary Dockerfile which requires our custom private image\n+        Path tempContext = Files.createTempDirectory(Paths.get(\".\"), this.getClass().getSimpleName() + \"-test-\");\n+        Path tempFile = Files.createTempFile(tempContext, \"test\", \".Dockerfile\");\n+        String dockerFileContent = \"FROM \" + testImageNameWithTag;\n+        Files.write(tempFile, dockerFileContent.getBytes());\n+\n+        // Start a container built from a derived image, which will require an authenticated pull\n+        try (final GenericContainer<?> container = new GenericContainer<>(\n+            new ImageFromDockerfile()\n+                .withDockerfile(tempFile)\n+        )\n+            .withCommand(\"/bin/sh\", \"-c\", \"sleep 10\")) {\n+            container.start();\n+\n+            assertTrue(\"container started following an authenticated pull\", container.isRunning());\n+        }\n+    }\n+\n+    @Test\n+    public void testThatAuthLocatorIsUsedForDockerComposePull() throws IOException {\n+        // Prepare a simple temporary Docker Compose manifest which requires our custom private image\n+        Path tempContext = Files.createTempDirectory(Paths.get(\".\"), this.getClass().getSimpleName() + \"-test-\");\n+        Path tempFile = Files.createTempFile(tempContext, \"test\", \".docker-compose.yml\");\n+        @Language(\"yaml\") String composeFileContent =\n+            \"version: '2.0'\\n\" +\n+                \"services:\\n\" +\n+                \"  privateservice:\\n\" +\n+                \"      command: /bin/sh -c 'sleep 60'\\n\" +\n+                \"      image: \" + testImageNameWithTag;", "originalCommit": "b7fcf2236b4cf3fc695908396f23d8975dd70907", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQzMDU0MA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2573#discussion_r408430540", "bodyText": "We can, with https://github.com/bsideup/jabel ;)", "author": "bsideup", "createdAt": "2020-04-14T20:57:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwNzgxNw=="}], "type": "inlineReview"}, {"oid": "23f26c9c3bdaff8eb28e8c3f22445a0fbdf971c3", "url": "https://github.com/testcontainers/testcontainers-java/commit/23f26c9c3bdaff8eb28e8c3f22445a0fbdf971c3", "message": "Merge branch 'master' into fix-imagefromdockerfile-authenticated-pull", "committedDate": "2020-04-14T21:01:08Z", "type": "commit"}, {"oid": "57754d42c29719980908484af40031a771819f28", "url": "https://github.com/testcontainers/testcontainers-java/commit/57754d42c29719980908484af40031a771819f28", "message": "Merge branch 'master' into fix-imagefromdockerfile-authenticated-pull", "committedDate": "2020-04-15T18:36:34Z", "type": "commit"}, {"oid": "ff3d053f8528322e946fa7f60b490f527f2eb324", "url": "https://github.com/testcontainers/testcontainers-java/commit/ff3d053f8528322e946fa7f60b490f527f2eb324", "message": "Merge branch 'master' into fix-imagefromdockerfile-authenticated-pull", "committedDate": "2020-04-19T12:55:38Z", "type": "commit"}, {"oid": "378cb6953f7de6d26749ebe11cafdeceaa21b2a0", "url": "https://github.com/testcontainers/testcontainers-java/commit/378cb6953f7de6d26749ebe11cafdeceaa21b2a0", "message": "Merge branch 'master' into fix-imagefromdockerfile-authenticated-pull", "committedDate": "2020-04-19T17:24:53Z", "type": "commit"}]}