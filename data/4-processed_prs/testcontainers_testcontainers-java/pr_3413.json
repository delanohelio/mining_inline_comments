{"pr_number": 3413, "pr_title": "Default prefixing image substitutor", "pr_createdAt": "2020-10-29T12:17:55Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/3413", "timeline": [{"oid": "0f51dfa6206162baa610463ce5d56358b5812d60", "url": "https://github.com/testcontainers/testcontainers-java/commit/0f51dfa6206162baa610463ce5d56358b5812d60", "message": "Refactor Testcontainers configuration to allow config by env var", "committedDate": "2020-10-29T11:42:21Z", "type": "commit"}, {"oid": "950af34178f3a28a3747b0b446738e83c7b62bbf", "url": "https://github.com/testcontainers/testcontainers-java/commit/950af34178f3a28a3747b0b446738e83c7b62bbf", "message": "Add Image substitution mechanism\n\nBuilds upon #3021 and #3411:\n\n* adds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n\n* provides a default implementation that behaves similarly to legacy `TestcontainersConfiguration` approach (`testcontainers.properties`)\n\nNotes:\n\n* behaviour is similar but not quite identical to `TestcontainersConfiguration`: use of a configured custom image for, e.g. Kafka/Pulsar that does not have a tag specified causes the substitution to take effect for all usages. It seems very unlikely that people would be using a mix of the config file image overrides in some places _and_ specific images specified in code in others.\n\n* Duplication of default image names in modules vs `TestcontainersConfiguration` class is intentional: specifying image overrides in `testcontainers.properties` should be removed in the future.\n\n* ~Add log deprecation warnings when `testcontainers.properties` image overrides are used.~ Defer to a future release?", "committedDate": "2020-10-29T12:14:54Z", "type": "commit"}, {"oid": "58179b38c687a945cbbe6263dcf1a67fc44a8dba", "url": "https://github.com/testcontainers/testcontainers-java/commit/58179b38c687a945cbbe6263dcf1a67fc44a8dba", "message": "Add Image substitution mechanism\n\nBuilds upon #3021 and #3411:\n\n* adds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n\n* provides a default implementation that behaves similarly to legacy `TestcontainersConfiguration` approach (`testcontainers.properties`)\n\nNotes:\n\n* behaviour is similar but not quite identical to `TestcontainersConfiguration`: use of a configured custom image for, e.g. Kafka/Pulsar that does not have a tag specified causes the substitution to take effect for all usages. It seems very unlikely that people would be using a mix of the config file image overrides in some places _and_ specific images specified in code in others.\n\n* Duplication of default image names in modules vs `TestcontainersConfiguration` class is intentional: specifying image overrides in `testcontainers.properties` should be removed in the future.\n\n* ~Add log deprecation warnings when `testcontainers.properties` image overrides are used.~ Defer to a future release?", "committedDate": "2020-10-29T12:16:57Z", "type": "commit"}, {"oid": "658c98a4e72ed1af6567f02d467755ea9939a013", "url": "https://github.com/testcontainers/testcontainers-java/commit/658c98a4e72ed1af6567f02d467755ea9939a013", "message": "Improve default image name substitution\n\nFor many orgs, sticking a prefix on the front of image names might be enough to use a private registry. I've added a default behaviour whereby, if a particular environment variable is present, image names are automatically substituted. e.g. `TESTCONTAINERS_IMAGE_NAME_PREFIX=my.registry.com/` would transform `redis` to `my.registry.com/redis` etc.", "committedDate": "2020-10-29T12:16:57Z", "type": "commit"}, {"oid": "83258722f999d7bc4fb27db968c8c1adeb39b8e4", "url": "https://github.com/testcontainers/testcontainers-java/commit/83258722f999d7bc4fb27db968c8c1adeb39b8e4", "message": "Merge remote-tracking branch 'origin/master' into default-prefixing-image-substitutor", "committedDate": "2020-11-07T14:38:40Z", "type": "commit"}, {"oid": "9bf309712a9110cfc3ee778c2a7ffacbd7a726a7", "url": "https://github.com/testcontainers/testcontainers-java/commit/9bf309712a9110cfc3ee778c2a7ffacbd7a726a7", "message": "Rework - WIP\nDocs update required", "committedDate": "2020-11-08T10:53:33Z", "type": "commit"}, {"oid": "2176ef8e2aa8c0a62a32d505b3f55dfc1d24112a", "url": "https://github.com/testcontainers/testcontainers-java/commit/2176ef8e2aa8c0a62a32d505b3f55dfc1d24112a", "message": "Provisional changes - single config setting, applied to Hub image names only", "committedDate": "2020-11-08T11:35:55Z", "type": "commit"}, {"oid": "8565f7f325b1b8be114771804cd4d59c6038abd2", "url": "https://github.com/testcontainers/testcontainers-java/commit/8565f7f325b1b8be114771804cd4d59c6038abd2", "message": "Tidy up merge issue", "committedDate": "2020-11-08T11:38:03Z", "type": "commit"}, {"oid": "45ac5f4b4dfb6fe8aa99483d1e0352bbeb3d7f95", "url": "https://github.com/testcontainers/testcontainers-java/commit/45ac5f4b4dfb6fe8aa99483d1e0352bbeb3d7f95", "message": "Tidy up merge issue", "committedDate": "2020-11-08T11:38:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM2NDQ4OQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r519364489", "bodyText": "Testcontainers will not apply the prefix to non-Hub image names.\n\nJudgement call required on this specific point!", "author": "rnorth", "createdAt": "2020-11-08T11:39:09Z", "path": "docs/features/image_name_substitution.md", "diffHunk": "@@ -45,7 +45,34 @@ to:\n \n \n \n+## Automatically modifying Docker Hub image names\n \n+Testcontainers can be configured to modify Docker Hub image names on the fly to apply a prefix string.\n+\n+Consider this if:\n+\n+* Developers and CI machines need to use different image names. For example, developers are able to pull images from Docker Hub, but CI machines need to pull from a private registry\n+* Your private registry has copies of images from Docker Hub where the names are predictable, and just adding a prefix is enough. \n+  For example, `registry.mycompany.com/mirror/mysql:8.0.22` can be derived from the original Docker Hub image name (`mysql:8.0.22`) with a consistent prefix string: `registry.mycompany.com/mirror/`\n+\n+In this case, image name references in code are **unchanged**.\n+i.e. you would leave as-is:\n+\n+<!--codeinclude--> \n+[Unchanged direct Docker Hub image name](../examples/junit4/generic/src/test/java/generic/ImageNameSubstitutionTest.java) inside_block:directDockerHubReference\n+<!--/codeinclude-->\n+\n+You can then configure Testcontainers to apply the prefix `registry.mycompany.com/mirror/` to every image that it tries to pull from Docker Hub.\n+This can be done in one of two ways:\n+\n+* Setting environment variables `TESTCONTAINERS_HUB_IMAGE_NAME_PREFIX=registry.mycompany.com/mirror/`\n+* Via config file, setting `hub.image.name.prefix` in either:\n+    * the `~/.testcontainers.properties` file in your user home directory, or\n+    * a file named `testcontainers.properties` on the classpath\n+    \n+Testcontainers will automatically apply the prefix to every image that it pulls from Docker Hub - please verify that all [the required images](./pull_rate_limiting.md#which-images-are-used-by-testcontainers) exist in your registry.\n+\n+Testcontainers will not apply the prefix to non-Hub image names.", "originalCommit": "2176ef8e2aa8c0a62a32d505b3f55dfc1d24112a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA2OTk2MQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r540069961", "bodyText": "Since the offender is Docker Hub with its rate limits, I would say let's focus on it first \ud83d\udc4d", "author": "bsideup", "createdAt": "2020-12-10T10:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM2NDQ4OQ=="}], "type": "inlineReview"}, {"oid": "73d22916d9bbb20dbf9eff8f163772ae3787158a", "url": "https://github.com/testcontainers/testcontainers-java/commit/73d22916d9bbb20dbf9eff8f163772ae3787158a", "message": "Tidy up merge issue", "committedDate": "2020-11-08T11:41:51Z", "type": "commit"}, {"oid": "b63f2a812ccaf79ee8ff04929576f83ac8e8cd41", "url": "https://github.com/testcontainers/testcontainers-java/commit/b63f2a812ccaf79ee8ff04929576f83ac8e8cd41", "message": "Merge branch 'master' into default-prefixing-image-substitutor", "committedDate": "2020-11-21T10:11:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE4MTYyMg==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r528181622", "bodyText": "leftover?", "author": "bsideup", "createdAt": "2020-11-21T10:52:50Z", "path": "docs/features/configuration.md", "diffHunk": "@@ -72,6 +72,8 @@ Some companies disallow the usage of Docker Hub, but you can override `*.image`\n > **pulsar.container.image = apachepulsar/pulsar:2.2.0**  \n > Used by Apache Pulsar\n \n+See [Image Name Substitution](./image_name_substitution.md) for other strategies for substituting image names to pull from other registries.", "originalCommit": "b63f2a812ccaf79ee8ff04929576f83ac8e8cd41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIxMjE5OQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r528212199", "bodyText": "Ah yes, will remove.", "author": "rnorth", "createdAt": "2020-11-21T16:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE4MTYyMg=="}], "type": "inlineReview"}, {"oid": "c7c0a0933d74e548df5f02f487a43a44cb1395ca", "url": "https://github.com/testcontainers/testcontainers-java/commit/c7c0a0933d74e548df5f02f487a43a44cb1395ca", "message": "Remove excess para", "committedDate": "2020-11-21T16:06:30Z", "type": "commit"}, {"oid": "b845b8a482411d18d6e6880eb308109494d38b08", "url": "https://github.com/testcontainers/testcontainers-java/commit/b845b8a482411d18d6e6880eb308109494d38b08", "message": "Merge remote-tracking branch 'origin/default-prefixing-image-substitutor' into default-prefixing-image-substitutor", "committedDate": "2020-11-21T16:07:03Z", "type": "commit"}, {"oid": "a7aced507f7fd3eca2d977b28f8af0d1eacbacae", "url": "https://github.com/testcontainers/testcontainers-java/commit/a7aced507f7fd3eca2d977b28f8af0d1eacbacae", "message": "Merge branch 'master' into default-prefixing-image-substitutor", "committedDate": "2020-11-26T09:24:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4MDM5NQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r532780395", "bodyText": "since it is package private, we can remove this annotation \ud83d\udc4d", "author": "bsideup", "createdAt": "2020-11-30T17:41:59Z", "path": "core/src/main/java/org/testcontainers/utility/PrefixingImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.NoArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.testcontainers.UnstableAPI;\n+\n+/**\n+ * An {@link ImageNameSubstitutor} which applies a prefix to all image names, e.g. a private registry host and path.\n+ * The prefix may be set via an environment variable (<code>TESTCONTAINERS_HUB_IMAGE_NAME_PREFIX</code>) or an equivalent\n+ * configuration file entry (see {@link TestcontainersConfiguration}).\n+ */\n+@UnstableAPI", "originalCommit": "a7aced507f7fd3eca2d977b28f8af0d1eacbacae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4Mjc4Ng==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r532782786", "bodyText": "double negotiation? \ud83d\ude31\ud83d\ude00\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!!configuredPrefix.isEmpty()) {\n          \n          \n            \n                    if (configuredPrefix.isEmpty()) {", "author": "bsideup", "createdAt": "2020-11-30T17:45:35Z", "path": "core/src/main/java/org/testcontainers/utility/PrefixingImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.NoArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.testcontainers.UnstableAPI;\n+\n+/**\n+ * An {@link ImageNameSubstitutor} which applies a prefix to all image names, e.g. a private registry host and path.\n+ * The prefix may be set via an environment variable (<code>TESTCONTAINERS_HUB_IMAGE_NAME_PREFIX</code>) or an equivalent\n+ * configuration file entry (see {@link TestcontainersConfiguration}).\n+ */\n+@UnstableAPI\n+@NoArgsConstructor\n+@Slf4j\n+final class PrefixingImageNameSubstitutor extends ImageNameSubstitutor {\n+\n+    @VisibleForTesting\n+    static final String PREFIX_PROPERTY_KEY = \"hub.image.name.prefix\";\n+\n+    private TestcontainersConfiguration configuration = TestcontainersConfiguration.getInstance();\n+\n+    @VisibleForTesting\n+    PrefixingImageNameSubstitutor(final TestcontainersConfiguration configuration) {\n+        this.configuration = configuration;\n+    }\n+\n+    @Override\n+    public DockerImageName apply(DockerImageName original) {\n+        final String configuredPrefix = configuration.getEnvVarOrProperty(PREFIX_PROPERTY_KEY, \"\");\n+\n+        if (!!configuredPrefix.isEmpty()) {", "originalCommit": "a7aced507f7fd3eca2d977b28f8af0d1eacbacae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEyMzE0MA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r533123140", "bodyText": "LOL I must have been so tired!", "author": "rnorth", "createdAt": "2020-12-01T07:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4Mjc4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4MzgzMA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r532783830", "bodyText": "Thought:\nMaybe we should only apply it on empty registry, while an explicit docker.io or registry.hub.docker.com would serve as \"I know what I am doing\". WDYT?", "author": "bsideup", "createdAt": "2020-11-30T17:47:10Z", "path": "core/src/main/java/org/testcontainers/utility/PrefixingImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.NoArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.testcontainers.UnstableAPI;\n+\n+/**\n+ * An {@link ImageNameSubstitutor} which applies a prefix to all image names, e.g. a private registry host and path.\n+ * The prefix may be set via an environment variable (<code>TESTCONTAINERS_HUB_IMAGE_NAME_PREFIX</code>) or an equivalent\n+ * configuration file entry (see {@link TestcontainersConfiguration}).\n+ */\n+@UnstableAPI\n+@NoArgsConstructor\n+@Slf4j\n+final class PrefixingImageNameSubstitutor extends ImageNameSubstitutor {\n+\n+    @VisibleForTesting\n+    static final String PREFIX_PROPERTY_KEY = \"hub.image.name.prefix\";\n+\n+    private TestcontainersConfiguration configuration = TestcontainersConfiguration.getInstance();\n+\n+    @VisibleForTesting\n+    PrefixingImageNameSubstitutor(final TestcontainersConfiguration configuration) {\n+        this.configuration = configuration;\n+    }\n+\n+    @Override\n+    public DockerImageName apply(DockerImageName original) {\n+        final String configuredPrefix = configuration.getEnvVarOrProperty(PREFIX_PROPERTY_KEY, \"\");\n+\n+        if (!!configuredPrefix.isEmpty()) {\n+            log.debug(\"No prefix is configured\");\n+            return original;\n+        }\n+\n+        boolean isAHubImage = original.getRegistry().isEmpty() ||", "originalCommit": "a7aced507f7fd3eca2d977b28f8af0d1eacbacae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY5NDYwMg==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r533694602", "bodyText": "Yeah, that's a good point. I wasn't especially keen on having to maintain this list anyway, so it's for the best all round.", "author": "rnorth", "createdAt": "2020-12-01T20:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4MzgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4NTAwNw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r532785007", "bodyText": "does it parse my.registry.com/ (note trailing slash) correctly?", "author": "bsideup", "createdAt": "2020-11-30T17:48:59Z", "path": "core/src/main/java/org/testcontainers/utility/PrefixingImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.NoArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.testcontainers.UnstableAPI;\n+\n+/**\n+ * An {@link ImageNameSubstitutor} which applies a prefix to all image names, e.g. a private registry host and path.\n+ * The prefix may be set via an environment variable (<code>TESTCONTAINERS_HUB_IMAGE_NAME_PREFIX</code>) or an equivalent\n+ * configuration file entry (see {@link TestcontainersConfiguration}).\n+ */\n+@UnstableAPI\n+@NoArgsConstructor\n+@Slf4j\n+final class PrefixingImageNameSubstitutor extends ImageNameSubstitutor {\n+\n+    @VisibleForTesting\n+    static final String PREFIX_PROPERTY_KEY = \"hub.image.name.prefix\";\n+\n+    private TestcontainersConfiguration configuration = TestcontainersConfiguration.getInstance();\n+\n+    @VisibleForTesting\n+    PrefixingImageNameSubstitutor(final TestcontainersConfiguration configuration) {\n+        this.configuration = configuration;\n+    }\n+\n+    @Override\n+    public DockerImageName apply(DockerImageName original) {\n+        final String configuredPrefix = configuration.getEnvVarOrProperty(PREFIX_PROPERTY_KEY, \"\");\n+\n+        if (!!configuredPrefix.isEmpty()) {\n+            log.debug(\"No prefix is configured\");\n+            return original;\n+        }\n+\n+        boolean isAHubImage = original.getRegistry().isEmpty() ||\n+            original.getRegistry().equals(\"docker.io\") ||\n+            original.getRegistry().equals(\"registry.hub.docker.com\");\n+        if (!isAHubImage) {\n+            log.debug(\"Image {} is not a Docker Hub image - not applying registry/repository change\", original);\n+            return original;\n+        }\n+\n+        log.debug(\n+            \"Applying changes to image name {}: applying prefix '{}'\",\n+            original,\n+            configuredPrefix\n+        );\n+\n+        DockerImageName prefixAsImage = DockerImageName.parse(configuredPrefix);", "originalCommit": "a7aced507f7fd3eca2d977b28f8af0d1eacbacae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcxOTUwMA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r533719500", "bodyText": "It does - in fact the trailing slash is required (and this is what we show in the docs).\nIf the trailing slash is omitted then the result looks like a simple concatenation. I've left this, rather than try to make the code clever, so that people have the choice - e.g. they may need to generate a name like my.registry.com/mirrored_postgres for postgres, etc.\nStill, this wasn't clear and could be prone to breakage in the future, so I've added some tests that explicitly cover this scenario.", "author": "rnorth", "createdAt": "2020-12-01T21:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4NTAwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MzM3Nw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r532883377", "bodyText": "I am curious how Docker handles a case where registry's host is \"some\".\nOr, to make it look more \"real\": localhost/image:tag", "author": "bsideup", "createdAt": "2020-11-30T20:28:43Z", "path": "core/src/test/java/org/testcontainers/utility/PrefixingImageNameSubstitutorTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.testcontainers.utility;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.rnorth.visibleassertions.VisibleAssertions.assertEquals;\n+import static org.testcontainers.utility.PrefixingImageNameSubstitutor.PREFIX_PROPERTY_KEY;\n+\n+public class PrefixingImageNameSubstitutorTest {\n+\n+    private TestcontainersConfiguration mockConfiguration;\n+    private PrefixingImageNameSubstitutor underTest;\n+\n+    @Before\n+    public void setUp() {\n+        mockConfiguration = mock(TestcontainersConfiguration.class);\n+        underTest = new PrefixingImageNameSubstitutor(mockConfiguration);\n+    }\n+\n+    @Test\n+    public void testHappyPath() {\n+        when(mockConfiguration.getEnvVarOrProperty(eq(PREFIX_PROPERTY_KEY), any())).thenReturn(\"someregistry.com/our-mirror/\");\n+\n+        final DockerImageName result = underTest.apply(DockerImageName.parse(\"some/image:tag\"));", "originalCommit": "a7aced507f7fd3eca2d977b28f8af0d1eacbacae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEyNDcwMg==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r533124702", "bodyText": "Interesting - I'll check. I'd assume that there has to be either a dot in the host part or there has to be a port part.", "author": "rnorth", "createdAt": "2020-12-01T07:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MzM3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyNDYyOA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r533724628", "bodyText": "OK, just quickly playing with Docker CLI vs DockerImageName.parse, and I think the behaviour is the same.\nDocker CLI:\n\nsome/foo -> Docker Hub, repo: some/foo\nsome.com/foo -> some.com registry, repo: foo\nsome:1234/foo -> some registry, port 1234, repo: foo\n\nDockerImageName:\n\nsome/foo -> Docker Hub, repo: some/foo\nsome.com/foo -> some.com registry, repo: foo\nsome:1234/foo -> some registry, port 1234, repo: foo\n\nThings get wild with localhost, though:\n$ docker pull localhost/foo\nUsing default tag: latest\nError response from daemon: Get http://localhost/v2/: dial tcp [::1]:80: connect: connection refused\n\n$ docker pull localhos/foo    # note missing t\nUsing default tag: latest\nError response from daemon: pull access denied for localhos/foo, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\n\ni.e. I think Docker daemon/CLI special-cases localhost as a registry name. We don't imitate this in DockerImageName.parse but I suspect it's a niche case that we can avoid.", "author": "rnorth", "createdAt": "2020-12-01T21:12:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MzM3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyNzA4MA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r533727080", "bodyText": "This looks like an example of localhost being treated specially in registry, and I imagine further searching would find more instances of this logic: https://github.com/moby/moby/blob/bb23f1bf61cb49c5aa3f7df934d79c305afb7c8c/registry/service.go#L153", "author": "rnorth", "createdAt": "2020-12-01T21:17:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MzM3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ0MzEyMw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r538443123", "bodyText": "Good finding! Perhaps we should add a similar logic then (and tests)", "author": "bsideup", "createdAt": "2020-12-08T14:38:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MzM3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcwNTg5Mg==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r539705892", "bodyText": "Can we defer or avoid? This is only going to be relevant if people are running a registry on port 80 on localhost, which seems extremely niche.", "author": "rnorth", "createdAt": "2020-12-09T22:47:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MzM3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA2Nzg3Mg==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r540067872", "bodyText": "Ok \ud83d\udc4d", "author": "bsideup", "createdAt": "2020-12-10T10:50:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MzM3Nw=="}], "type": "inlineReview"}, {"oid": "0d706f305e37e459ffaf16048ab7b9ce3e6a378a", "url": "https://github.com/testcontainers/testcontainers-java/commit/0d706f305e37e459ffaf16048ab7b9ce3e6a378a", "message": "Update core/src/main/java/org/testcontainers/utility/PrefixingImageNameSubstitutor.java\n\nCo-authored-by: Sergei Egorov <bsideup@gmail.com>", "committedDate": "2020-12-01T07:31:05Z", "type": "commit"}, {"oid": "6370a63392bb1dddc64b33c587fd515c195fc3fc", "url": "https://github.com/testcontainers/testcontainers-java/commit/6370a63392bb1dddc64b33c587fd515c195fc3fc", "message": "Simplify Hub image detection", "committedDate": "2020-12-01T20:25:56Z", "type": "commit"}, {"oid": "714f482663db66208c156c0912eed3cdfa69214e", "url": "https://github.com/testcontainers/testcontainers-java/commit/714f482663db66208c156c0912eed3cdfa69214e", "message": "Update test to reflect changed hub identification logic", "committedDate": "2020-12-01T20:40:47Z", "type": "commit"}, {"oid": "abdcd930383421bab2a400d42625c04cf1a35499", "url": "https://github.com/testcontainers/testcontainers-java/commit/abdcd930383421bab2a400d42625c04cf1a35499", "message": "Add tests that the prefix is applied literally (both for slash-present and -absent cases, the prefix is applied as-is)", "committedDate": "2020-12-01T20:58:56Z", "type": "commit"}, {"oid": "cd63ec6081cf60ee811ad5653de1b85cd5e67285", "url": "https://github.com/testcontainers/testcontainers-java/commit/cd63ec6081cf60ee811ad5653de1b85cd5e67285", "message": "Remove duplicate getter (Lombok @Getter exists)", "committedDate": "2020-12-01T21:18:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ0ODc1MQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r538448751", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Testcontainers will not apply the prefix to:\n          \n          \n            \n            Testcontainers will not apply the prefix to:\n          \n          \n            \n            \n          \n      \n    \n    \n  \n\nOtherwise it renders incorrectly:", "author": "bsideup", "createdAt": "2020-12-08T14:43:08Z", "path": "docs/features/image_name_substitution.md", "diffHunk": "@@ -45,7 +45,36 @@ to:\n \n \n \n+## Automatically modifying Docker Hub image names\n \n+Testcontainers can be configured to modify Docker Hub image names on the fly to apply a prefix string.\n+\n+Consider this if:\n+\n+* Developers and CI machines need to use different image names. For example, developers are able to pull images from Docker Hub, but CI machines need to pull from a private registry\n+* Your private registry has copies of images from Docker Hub where the names are predictable, and just adding a prefix is enough. \n+  For example, `registry.mycompany.com/mirror/mysql:8.0.22` can be derived from the original Docker Hub image name (`mysql:8.0.22`) with a consistent prefix string: `registry.mycompany.com/mirror/`\n+\n+In this case, image name references in code are **unchanged**.\n+i.e. you would leave as-is:\n+\n+<!--codeinclude--> \n+[Unchanged direct Docker Hub image name](../examples/junit4/generic/src/test/java/generic/ImageNameSubstitutionTest.java) inside_block:directDockerHubReference\n+<!--/codeinclude-->\n+\n+You can then configure Testcontainers to apply the prefix `registry.mycompany.com/mirror/` to every image that it tries to pull from Docker Hub.\n+This can be done in one of two ways:\n+\n+* Setting environment variables `TESTCONTAINERS_HUB_IMAGE_NAME_PREFIX=registry.mycompany.com/mirror/`\n+* Via config file, setting `hub.image.name.prefix` in either:\n+    * the `~/.testcontainers.properties` file in your user home directory, or\n+    * a file named `testcontainers.properties` on the classpath\n+    \n+Testcontainers will automatically apply the prefix to every image that it pulls from Docker Hub - please verify that all [the required images](../supported_docker_environment/image_registry_rate_limiting.md#which-images-are-used-by-testcontainers) exist in your registry.\n+\n+Testcontainers will not apply the prefix to:", "originalCommit": "cd63ec6081cf60ee811ad5653de1b85cd5e67285", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcwNTIzOA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/3413#discussion_r539705238", "bodyText": "Ah good catch, thanks", "author": "rnorth", "createdAt": "2020-12-09T22:46:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ0ODc1MQ=="}], "type": "inlineReview"}, {"oid": "9984aa2eeca2b25228395b4b1d2d06530841b604", "url": "https://github.com/testcontainers/testcontainers-java/commit/9984aa2eeca2b25228395b4b1d2d06530841b604", "message": "Update docs/features/image_name_substitution.md\n\nCo-authored-by: Sergei Egorov <bsideup@gmail.com>", "committedDate": "2020-12-09T22:46:10Z", "type": "commit"}]}