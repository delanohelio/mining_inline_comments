{"pr_number": 837, "pr_title": "Improve REST API responses for CC-related errors", "pr_createdAt": "2020-04-10T06:59:03Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/837", "timeline": [{"oid": "ebc2834346d3d03fd34af5182bb097e7d667c4cc", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/ebc2834346d3d03fd34af5182bb097e7d667c4cc", "message": "Improve REST API responses for CC-related errors\n\nJIRA: LMCROSSITXSADEPLOY-2037", "committedDate": "2020-04-10T06:35:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYzNzAyMA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/837#discussion_r406637020", "bodyText": "Why not Throwable?", "author": "enchobelezirev", "createdAt": "2020-04-10T07:20:21Z", "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapper.java", "diffHunk": "@@ -11,29 +12,31 @@\n import com.sap.cloud.lm.sl.common.ConflictException;\n import com.sap.cloud.lm.sl.common.ContentException;\n import com.sap.cloud.lm.sl.common.NotFoundException;\n-import com.sap.cloud.lm.sl.common.SLException;\n \n @ControllerAdvice\n public class CFExceptionMapper {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(CFExceptionMapper.class);\n \n-    @ExceptionHandler({ SLException.class, IllegalArgumentException.class })\n-    public ResponseEntity<String> handleException(Throwable t) {\n+    @ExceptionHandler\n+    public ResponseEntity<String> handleException(Exception e) {", "originalCommit": "ebc2834346d3d03fd34af5182bb097e7d667c4cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0NTc3MA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/837#discussion_r406645770", "bodyText": "Spring exception handlers do not support catching Throwables. The only reason this worked in the past is because of the annotation @ExceptionHandler({ SLException.class, IllegalArgumentException.class }). Basically, it caught only SLExceptions and IllegalArgumentExceptions and upcasted them to Throwable. However, I wanted this mapper to handle all kinds of exceptions without having to bloat that annotation with additional types. I also wanted to show the exception message regardless of the exception's type. That's why I removed the specific exception types from the annotation, and had to change the signature of the method to match what Spring supports.", "author": "nictas", "createdAt": "2020-04-10T07:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYzNzAyMA=="}], "type": "inlineReview"}]}