{"pr_number": 943, "pr_title": "Prepare changelogs for Liquibase versions >= 3.5.2", "pr_createdAt": "2020-08-31T17:35:18Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4OTU1Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r480889552", "bodyText": "Do you test these properties? Is it possible property which is specified for all dbms to override property for specific dbms?", "author": "theghost5800", "createdAt": "2020-09-01T06:52:22Z", "path": "multiapps-controller-core/src/main/resources/org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog.xml", "diffHunk": "@@ -4,84 +4,13 @@\n     xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog\n                 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd\">\n \n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_oauth_access_token_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_ongoing_operation_table.xml\" />\n-    <include file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_audit_log_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_configuration_subscription_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-rename_user_column_in_ongoing_operation_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_configuration_registry_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_ongoing_operation_table_add_final_state_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_registry_table_add_visible_in_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_registry_table_add_target_org_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-drop_configuration_registry_unique_constraint.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_new_configuration_registry_unique_constraint.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_registry_table_split_target_space_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-update_configuration_subscription_table_update_filter_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_ongoing_operation_table_rename_slp_states.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-rename_ongoing_operation_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_operation_table_add_ended_at_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_operation_table_timestamp_storing_columns.xml\" />\n-    <include file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_quartz_tables.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_registry_table_add_space_id_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_registry_table_extend_provider_version_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-index_space_id_operation.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-drop_context_extension_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_operation_table_drop_cleaned_up_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-prepare_for_flowable.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_registry_table_extend_provider_id_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-drop_deploy_target_tables.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_historic_operation_event_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_progress_message_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_progress_message_add_timestamp_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-add_task_extension_table.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_progress_message_add_task_execution_id_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_task_extension_add_task_execution_id_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-index_process_ids_of_progress_messages.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_progress_message_drop_task_execution_id_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-delete_task_startup_progress_messages.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-update_configuration_registry_clean_up_leftovers.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_operation_table_add_namespace_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_registry_table_add_namespace_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_registry_table_add_content_id_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_subscription_table_add_module_id_column.xml\" />\n-    <include\n-        file=\"org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-alter_configuration_subscription_table_add_resource_id_column.xml\" />\n+    <property name=\"small-blob.type\" value=\"BYTEA\" dbms=\"postgresql\" />\n+    <property name=\"large-blob.type\" value=\"OID\" dbms=\"postgresql\" />\n+\n+    <property name=\"small-blob.type\" value=\"BLOB\" dbms=\"all\" />", "originalCommit": "1c1b50535b7c35a70305f7759a04f9a58284d7d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1MzI5OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r480953299", "bodyText": "There are unit tests that use the h2 in-memory database. They pass so I assume that this is fine.", "author": "nictas", "createdAt": "2020-09-01T08:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4OTU1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1ODQ2NQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r480958465", "bodyText": "Yup, I just tested it. Changing this line to <property name=\"small-blob.type\" value=\"BLAH\" dbms=\"all\" /> makes the tests fail.", "author": "nictas", "createdAt": "2020-09-01T08:19:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4OTU1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg5MTk5OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r480891999", "bodyText": "Is it still need to keep old column in liquibase change? As far as I know we are using content_bytea only.", "author": "theghost5800", "createdAt": "2020-09-01T06:55:28Z", "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/db-changelog-1.110.0-persistence.xml", "diffHunk": "@@ -0,0 +1,86 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog\n+         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd\">\n+\n+    <changeSet author=\"sap.com\" id=\"create_table_lm_sl_persistence_file\">\n+        <preConditions onFail=\"MARK_RAN\">\n+            <not>\n+                <tableExists tableName=\"lm_sl_persistence_file\" />\n+            </not>\n+        </preConditions>\n+        <createTable tableName=\"lm_sl_persistence_file\">\n+            <column name=\"file_id\" type=\"CHAR(36)\">\n+                <constraints primaryKey=\"true\" primaryKeyName=\"file_id_pk\" nullable=\"false\" />\n+            </column>\n+            <column name=\"content\" type=\"${large-blob.type}\" />\n+            <column name=\"digest\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"digest_algorithm\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"modified\" type=\"TIMESTAMP\" />\n+            <column name=\"file_name\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"file_size\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"namespace\" type=\"VARCHAR(255)\" />\n+            <column name=\"space\" type=\"VARCHAR(255)\" />\n+        </createTable>\n+        <createIndex tableName=\"lm_sl_persistence_file\" indexName=\"idx_lm_sl_persistence_file_space\">\n+            <column name=\"space\" />\n+        </createIndex>\n+    </changeSet>\n+\n+    <changeSet author=\"sap.com\" id=\"create_table_process_log\">\n+        <preConditions onFail=\"MARK_RAN\">\n+            <not>\n+                <tableExists tableName=\"process_log\" />\n+            </not>\n+        </preConditions>\n+        <createTable tableName=\"process_log\">\n+            <column name=\"file_id\" type=\"CHAR(36)\">\n+                <constraints primaryKey=\"true\" primaryKeyName=\"log_file_id_pk\" nullable=\"false\" />\n+            </column>\n+            <column name=\"content\" type=\"${large-blob.type}\" />", "originalCommit": "1c1b50535b7c35a70305f7759a04f9a58284d7d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1NDU2Mw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r480954563", "bodyText": "The goal of these changes is to refactor the structure of the changelogs and not the tables. The tables are left exactly as they were. If the content column is no longer needed it can be dropped in another change.", "author": "nictas", "createdAt": "2020-09-01T08:13:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg5MTk5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg5NDE5Nw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r480894197", "bodyText": "What this line mean?", "author": "theghost5800", "createdAt": "2020-09-01T06:58:18Z", "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/sql/create_unlink_file_content_function.sql", "diffHunk": "@@ -0,0 +1,11 @@\n+CREATE OR REPLACE FUNCTION UNLINK_FILE_CONTENT() RETURNS TRIGGER AS\n+$$\n+  BEGIN\n+    PERFORM lo_unlink(OLD.content);\n+    RETURN NULL;\n+  EXCEPTION\n+    WHEN undefined_object THEN RAISE NOTICE 'Referenced large object could not be deleted, because it does not exist!';\n+    RETURN NULL;\n+  END;\n+$$\n+LANGUAGE 'plpgsql' STABLE;", "originalCommit": "1c1b50535b7c35a70305f7759a04f9a58284d7d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1NTc2OA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r480955768", "bodyText": "Whatever it meant before in: \n  \n    \n      multiapps-controller/multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/db-changelog-add_trigger_for_lm_sl_persistance_file_process_log_cf.xml\n    \n    \n         Line 14\n      in\n      43c220a\n    \n    \n    \n    \n\n        \n          \n           lo_unlink(OLD.content); return NULL; END; ' LANGUAGE 'plpgsql' STABLE; \n        \n    \n  \n\n\nThere's no change here.", "author": "nictas", "createdAt": "2020-09-01T08:15:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg5NDE5Nw=="}], "type": "inlineReview"}, {"oid": "0b7e2b12f10f9d8e4d21d7063d362935e1fde1af", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/0b7e2b12f10f9d8e4d21d7063d362935e1fde1af", "message": "Remove dead code", "committedDate": "2020-09-01T09:04:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAwMTI3Ng==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r481001276", "bodyText": "Previously we have added java classes which perform async index creation with CONCURRENTLY keyword which create index without locking the whole table. Does it mean now liquibase will use this feature of PostgreSQL to create indexes without locking whole tables?", "author": "theghost5800", "createdAt": "2020-09-01T09:31:28Z", "path": "multiapps-controller-core/src/main/resources/org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-1.110.0-core.xml", "diffHunk": "@@ -0,0 +1,265 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog\n+         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd\">\n+\n+    <changeSet author=\"sap.com\" id=\"create_table_audit_log\">\n+        <preConditions onFail=\"MARK_RAN\">\n+            <not>\n+                <tableExists tableName=\"audit_log\" />\n+            </not>\n+        </preConditions>\n+        <createTable tableName=\"audit_log\">\n+            <column name=\"user\" type=\"VARCHAR(255)\" />\n+            <column name=\"modified\" type=\"TIMESTAMP\" />\n+            <column name=\"category\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"severity\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"message\" type=\"CLOB\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+        </createTable>\n+    </changeSet>\n+\n+    <changeSet author=\"sap.com\" id=\"create_table_oauth_access_token\">\n+        <preConditions onFail=\"MARK_RAN\">\n+            <not>\n+                <tableExists tableName=\"oauth_access_token\" />\n+            </not>\n+        </preConditions>\n+        <createTable tableName=\"oauth_access_token\">\n+            <column name=\"token_id\" type=\"VARCHAR(255)\">\n+                <constraints primaryKey=\"true\" primaryKeyName=\"oauth_access_token_pk\" nullable=\"false\" />\n+            </column>\n+            <column name=\"token\" type=\"${small-blob.type}\" />\n+            <column name=\"authentication_id\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"user_name\" type=\"VARCHAR(255)\" />\n+            <column name=\"client_id\" type=\"VARCHAR(255)\" />\n+            <column name=\"authentication\" type=\"${small-blob.type}\" />\n+            <column name=\"refresh_token\" type=\"VARCHAR(255)\" />\n+        </createTable>\n+    </changeSet>\n+\n+    <changeSet author=\"sap.com\" id=\"create_table_configuration_registry\">\n+        <preConditions onFail=\"MARK_RAN\">\n+            <not>\n+                <sequenceExists sequenceName=\"configuration_entry_sequence\" />\n+            </not>\n+            <not>\n+                <tableExists tableName=\"configuration_registry\" />\n+            </not>\n+        </preConditions>\n+        <createSequence sequenceName=\"configuration_entry_sequence\" startValue=\"1\" incrementBy=\"1\" />\n+        <createTable tableName=\"configuration_registry\">\n+            <column name=\"id\" type=\"BIGINT\">\n+                <constraints primaryKey=\"true\" primaryKeyName=\"configuration_registry_pk\" />\n+            </column>\n+            <column name=\"provider_namespace\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"provider_nid\" type=\"VARCHAR(100)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"provider_id\" type=\"VARCHAR(500)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"provider_version\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"target_space\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"target_org\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"space_id\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"content_id\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"content\" type=\"CLOB\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"visibility\" type=\"CLOB\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+        </createTable>\n+        <addUniqueConstraint tableName=\"configuration_registry\"\n+            constraintName=\"configuration_registry_uq\"\n+            columnNames=\"provider_nid, provider_id, provider_version, target_space, target_org, provider_namespace\" />\n+    </changeSet>\n+\n+    <changeSet author=\"sap.com\" id=\"create_table_configuration_subscription\">\n+        <preConditions onFail=\"MARK_RAN\">\n+            <not>\n+                <sequenceExists sequenceName=\"configuration_subscription_sequence\" />\n+            </not>\n+            <not>\n+                <tableExists tableName=\"configuration_subscription\" />\n+            </not>\n+        </preConditions>\n+        <createSequence sequenceName=\"configuration_subscription_sequence\" startValue=\"1\" incrementBy=\"1\" />\n+        <createTable tableName=\"configuration_subscription\">\n+            <column name=\"id\" type=\"BIGINT\">\n+                <constraints primaryKey=\"true\" primaryKeyName=\"configuration_subscription_pk\" />\n+            </column>\n+            <column name=\"mta_id\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"space_id\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"app_name\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"filter\" type=\"CLOB\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"module_id\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"module\" type=\"CLOB\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"resource_id\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"resource_name\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"resource_properties\" type=\"CLOB\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+        </createTable>\n+        <addUniqueConstraint tableName=\"configuration_subscription\"\n+            columnNames=\"mta_id, app_name, space_id, resource_name\" constraintName=\"configuration_subscription_uq\" />\n+    </changeSet>\n+\n+    <changeSet author=\"sap.com\" id=\"create_table_historic_operation_event\">\n+        <preConditions onFail=\"MARK_RAN\">\n+            <not>\n+                <sequenceExists sequenceName=\"historic_operation_event_sequence\" />\n+            </not>\n+            <not>\n+                <tableExists tableName=\"historic_operation_event\" />\n+            </not>\n+        </preConditions>\n+        <createSequence sequenceName=\"historic_operation_event_sequence\" startValue=\"1\" incrementBy=\"1\" />\n+        <createTable tableName=\"historic_operation_event\">\n+            <column name=\"id\" type=\"BIGINT\">\n+                <constraints primaryKey=\"true\" primaryKeyName=\"historic_operation_event_pk\" nullable=\"false\" />\n+            </column>\n+            <column name=\"process_id\" type=\"VARCHAR(255)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"event\" type=\"VARCHAR(100)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+            <column name=\"timestamp\" type=\"TIMESTAMP\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+        </createTable>\n+        <createIndex tableName=\"historic_operation_event\" indexName=\"idx_historic_operation_event_process_id \">", "originalCommit": "0b7e2b12f10f9d8e4d21d7063d362935e1fde1af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAwMzg0OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r481003849", "bodyText": "Nope. Indexes will now be created non-concurrently, but this is fine since these changesets will only be executed if the table/index/sequence doesn't already exist.", "author": "nictas", "createdAt": "2020-09-01T09:35:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAwMTI3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAwMjg4Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r481002882", "bodyText": "Why is the name on these foreign keys repeated?\nCan't it be just FK_QRTZ_CRON_TRIGGERS?", "author": "radito3", "createdAt": "2020-09-01T09:34:16Z", "path": "multiapps-controller-core/src/main/resources/org/cloudfoundry/multiapps/controller/core/db/changelog/db-changelog-1.110.0-quartz.xml", "diffHunk": "@@ -221,12 +236,25 @@\n             <column name=\"END_TIME\" type=\"BIGINT\" />\n             <column name=\"CALENDAR_NAME\" type=\"NVARCHAR(200)\" />\n             <column name=\"MISFIRE_INSTR\" type=\"SMALLINT\" />\n-            <column name=\"JOB_DATA\" type=\"BLOB\" />\n+            <column name=\"JOB_DATA\" type=\"${small-blob.type}\" />\n         </createTable>\n \n     </changeSet>\n \n-    <changeSet author=\"quartz.generated\" id=\"2\">\n+    <changeSet author=\"quartz.generated\" id=\"create_quartz_foreign_keys\">\n+\n+        <preConditions onFail=\"MARK_RAN\">\n+            <not>\n+                <foreignKeyConstraintExists\n+                    foreignKeyName=\"FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS\" />", "originalCommit": "0b7e2b12f10f9d8e4d21d7063d362935e1fde1af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzNDA1Mw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r481034053", "bodyText": "Now that this is gone, when will the changes be made?\nOr do we even need to make these changes on app startup?", "author": "radito3", "createdAt": "2020-09-01T10:21:34Z", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/bootstrap/BootstrapServlet.java", "diffHunk": "@@ -110,31 +102,4 @@ private void initializeProviders() {\n         AuditLoggingProvider.setFacade(new AuditLoggingFacadeSLImpl(dataSource, getUserInfoProvider()));\n     }\n \n-    private void executeAsyncDatabaseChanges() {", "originalCommit": "0b7e2b12f10f9d8e4d21d7063d362935e1fde1af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzNTkyOA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r481035928", "bodyText": "Since in both normal execution and in the event of an exception we return  NULL, wouldn't it be better if this is a procedure rather than a function?", "author": "radito3", "createdAt": "2020-09-01T10:25:14Z", "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/sql/create_unlink_file_content_function.sql", "diffHunk": "@@ -0,0 +1,11 @@\n+CREATE OR REPLACE FUNCTION UNLINK_FILE_CONTENT() RETURNS TRIGGER AS", "originalCommit": "0b7e2b12f10f9d8e4d21d7063d362935e1fde1af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzODc0Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/943#discussion_r481038742", "bodyText": "I understand that this file is called in case of a rollback but wouldn't it be cleaner if these DROP statemets are executed immediately prior to the trigger's creation?\nOr is it neccessary to have them deleted in a rollback?", "author": "radito3", "createdAt": "2020-09-01T10:30:35Z", "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/sql/delete_unlink_file_content_triggers.sql", "diffHunk": "@@ -0,0 +1,5 @@\n+DROP TRIGGER IF EXISTS DELETE_FROM_SYSTEM_TABLE_LM_SL_PERSISTANCE_FILE ON LM_SL_PERSISTENCE_FILE;", "originalCommit": "0b7e2b12f10f9d8e4d21d7063d362935e1fde1af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "90ecae52bf3671ce0c76d98929953a7b7709f150", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/90ecae52bf3671ce0c76d98929953a7b7709f150", "message": "Prepare changelogs for Liquibase versions >= 3.5.2\n\nSince https://liquibase.jira.com/projects/CORE/issues/CORE-1863\nLiquibase maps the generic BLOB type to OID instead of BYTEA for PostgreSQL\ndatabases.\n\nThis commit adapts our existing changelogs to that breaking change and\nalso solves #942.", "committedDate": "2020-09-01T11:52:43Z", "type": "commit"}, {"oid": "76030e445c2a113677080ee97317a0083ab0c6ab", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/76030e445c2a113677080ee97317a0083ab0c6ab", "message": "Remove dead code", "committedDate": "2020-09-01T11:52:51Z", "type": "commit"}, {"oid": "76030e445c2a113677080ee97317a0083ab0c6ab", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/76030e445c2a113677080ee97317a0083ab0c6ab", "message": "Remove dead code", "committedDate": "2020-09-01T11:52:51Z", "type": "forcePushed"}]}