{"pr_number": 854, "pr_title": "Fix cases when the processes are already deleted", "pr_createdAt": "2020-05-12T13:37:20Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/854", "timeline": [{"oid": "07c761bcdbef9b645c0a22eef55fa7965ccb9bd6", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/07c761bcdbef9b645c0a22eef55fa7965ccb9bd6", "message": "Fix cases when the processes are already deleted", "committedDate": "2020-05-12T13:10:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyODkzMA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/854#discussion_r424228930", "bodyText": "The name deleteOperation is a little bit misleading for me because OperationsCleanerActions.abortOperation is used in OperationCleaner. Afterwards records in operation table for finished old operations are deleted.\nOne can be mislead that the current function \"deleteOperation\" will do the required job after abortOperation() s but it makes changes in flowable.\nSo we can rename it to note that it make changes in flowable, e.g. \"abortFlowableProcess\" or something similar", "author": "boyan-velinov", "createdAt": "2020-05-13T07:31:06Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/jobs/OperationsCleanerActions.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.sap.cloud.lm.sl.cf.process.jobs;\n+\n+import static java.text.MessageFormat.format;\n+\n+import java.text.MessageFormat;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.sap.cloud.lm.sl.cf.process.Messages;\n+import com.sap.cloud.lm.sl.cf.process.flowable.AbortProcessAction;\n+import com.sap.cloud.lm.sl.cf.process.flowable.FlowableFacade;\n+import com.sap.cloud.lm.sl.cf.process.flowable.ProcessAction;\n+import com.sap.cloud.lm.sl.cf.process.flowable.ProcessActionRegistry;\n+import com.sap.cloud.lm.sl.cf.web.api.model.Operation;\n+\n+@Named\n+public class OperationsCleanerActions {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(OperationsCleanerActions.class);\n+\n+    private final FlowableFacade flowableFacade;\n+    private final ProcessActionRegistry processActionRegistry;\n+\n+    @Inject\n+    public OperationsCleanerActions(FlowableFacade flowableFacade, ProcessActionRegistry processActionRegistry) {\n+        this.flowableFacade = flowableFacade;\n+        this.processActionRegistry = processActionRegistry;\n+    }\n+\n+    public void abortOperation(Operation operation) {\n+        ProcessAction abortAction = processActionRegistry.getAction(AbortProcessAction.ACTION_ID_ABORT);\n+        String processId = operation.getProcessId();\n+        LOGGER.debug(CleanUpJob.LOG_MARKER, format(Messages.ABORTING_OPERATION_0, processId));\n+        abortAction.execute(null, processId);\n+        deleteOperation(operation);\n+    }\n+\n+    public void deleteOperation(Operation operation) {", "originalCommit": "5198ae3c010681cbcf9ba2a8dc8b89ccec37eabc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5NTI5Mw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/854#discussion_r424295293", "bodyText": "I agree but the problem is that from the beginning, the semantics behind the \"abort\" was always delete the process forcefully. Now it is changed and the semantic is \"release the operation lock and stop the currently running process\". If I change it to \"abortFlowableProcess\" one could be confused how we are releasing the lock from the Flowable process and how we are stopping it.\nThe only reasonable name, IMO, is to be renamed to \"deleteFlowableProcess\". This way we are not mixing both semantics and also we are turbo explicit about the method name.\nWhat you say?", "author": "enchobelezirev", "createdAt": "2020-05-13T09:19:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyODkzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMwMjg0OA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/854#discussion_r424302848", "bodyText": "Good, let's use the proposed name deleteFlowableProcess", "author": "boyan-velinov", "createdAt": "2020-05-13T09:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyODkzMA=="}], "type": "inlineReview"}, {"oid": "be62635dd5b03c49ae3eb4e290d3e1a2b4aa03c2", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/be62635dd5b03c49ae3eb4e290d3e1a2b4aa03c2", "message": "Change order of AbortedOperationsCleaner", "committedDate": "2020-05-13T11:43:37Z", "type": "commit"}, {"oid": "be62635dd5b03c49ae3eb4e290d3e1a2b4aa03c2", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/be62635dd5b03c49ae3eb4e290d3e1a2b4aa03c2", "message": "Change order of AbortedOperationsCleaner", "committedDate": "2020-05-13T11:43:37Z", "type": "forcePushed"}]}