{"pr_number": 895, "pr_title": "Optimize debug log enable check", "pr_createdAt": "2020-12-14T22:42:51Z", "pr_url": "https://github.com/opensearch-project/security/pull/895", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNDkyMw==", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r568114923", "bodyText": "can we make these class level fields, then we can utilize them for other methods (eg: configureSSL) as well?", "author": "debjanibnrj", "createdAt": "2021-02-01T20:22:51Z", "path": "src/main/java/com/amazon/dlic/auth/ldap/backend/LDAPAuthorizationBackend.java", "diffHunk": "@@ -257,9 +257,11 @@ private static Connection getConnection0(final Settings settings, final Path con\n         Connection connection = null;\n         Exception lastException = null;\n \n+        final boolean isDebugEnabled = log.isDebugEnabled();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNzI0OQ==", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r568117249", "bodyText": "anyway to avoid passing these in args and declare them as class variables.", "author": "debjanibnrj", "createdAt": "2021-02-01T20:26:59Z", "path": "src/main/java/com/amazon/dlic/auth/ldap2/LDAPAuthorizationBackend2.java", "diffHunk": "@@ -408,12 +409,13 @@ private void fillRoles0(final User user, final AuthCredentials optionalAuthCreds\n \n     protected Set<LdapName> resolveNestedRoles(final LdapName roleDn, final Connection ldapConnection,\n                                                String userRoleName, int depth, final boolean rolesearchEnabled,\n-                                               Set<Map.Entry<String, Settings>> roleSearchBaseSettingsSet)\n+                                               Set<Map.Entry<String, Settings>> roleSearchBaseSettingsSet,\n+                                               final boolean isDebugEnabled, final boolean isTraceEnabled)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNzU5Nw==", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r568117597", "bodyText": "do we need isDebugEnabled variable here?", "author": "debjanibnrj", "createdAt": "2021-02-01T20:27:35Z", "path": "src/main/java/com/amazon/dlic/auth/ldap2/LDAPUserSearcher.java", "diffHunk": "@@ -101,7 +101,7 @@ private LdapEntry existsSearchingUntilFirstHit(Connection ldapConnection, String\n                     SearchScope.SUBTREE);\n \n             if (log.isDebugEnabled()) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNzkwMg==", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r568117902", "bodyText": "do we need isDebugEnabled variable here?", "author": "debjanibnrj", "createdAt": "2021-02-01T20:28:04Z", "path": "src/main/java/com/amazon/dlic/util/SettingsBasedSSLConfigurator.java", "diffHunk": "@@ -414,7 +414,7 @@ public SSLConfig(SSLContext sslContext, String[] supportedProtocols, String[] su\n             this.effectiveKeyAlias = effectiveKeyAlias;\n \n             if (log.isDebugEnabled()) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDcxNDE1Nw==", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r594714157", "bodyText": "This is not reused or loop in same method scope", "author": "sujithvm", "createdAt": "2021-03-15T22:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNzkwMg=="}], "type": "inlineReview"}, {"oid": "32b3677b4563476884ada33f65c77e59038de0fc", "url": "https://github.com/opensearch-project/security/commit/32b3677b4563476884ada33f65c77e59038de0fc", "message": "Use smart logging and optimize debug/trace enabled checks", "committedDate": "2021-03-11T20:27:38Z", "type": "commit"}]}