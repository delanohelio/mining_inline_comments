{"pr_number": 556, "pr_title": "Fix: Make sure Internal users API supports adding reserved opendistrosecurityroles (by superuser). Do not filter out reserved roles in the InternalUsersModelV7", "pr_createdAt": "2020-07-13T04:59:15Z", "pr_url": "https://github.com/opensearch-project/security/pull/556", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA3OTk2MA==", "url": "https://github.com/opensearch-project/security/pull/556#discussion_r454079960", "bodyText": "Not sure if we need to change to \"read-only\", but I saw a similar message in a different class, so probably as long as it is consistent with all the code, should be good.", "author": "dinusX", "createdAt": "2020-07-14T03:40:17Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -126,8 +126,8 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n                     return;\n                 }\n \n-                if (isReserved(rolesConfiguration, role)) {\n-                    forbidden(channel, \"Role '\" + role + \"' is reserved.\");\n+                if (!isReservedAndAccessible(rolesConfiguration, role)) {\n+                    forbidden(channel, \"Role '\" + role + \"' is read-only.\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA4MzIzMw==", "url": "https://github.com/opensearch-project/security/pull/556#discussion_r454083233", "bodyText": "We can still keep this check with updated message.", "author": "dinusX", "createdAt": "2020-07-14T03:53:06Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -121,25 +121,26 @@ public void testUserApi() throws Exception {\n         Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n         Assert.assertTrue(response.getBody().contains(\"\\\"hidden\\\":true\"));\n \n-        // Associating with reserved or hidden role is not allowed\n+        // Associating with hidden role is not allowed\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/nagilum\", \"{ \\\"opendistro_security_roles\\\": [\\\"opendistro_security_hidden\\\"]}\",\n             new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n         settings = Settings.builder().loadFromSource(response.getBody(), XContentType.JSON).build();\n         Assert.assertEquals(settings.get(\"message\"), \"Role 'opendistro_security_hidden' is not found.\");\n \n+        // Associating with reserved role is allowed (for superamdin)\n+        response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/test\", \"{ \\\"opendistro_security_roles\\\": [\\\"opendistro_security_reserved\\\"], \" +\n+                \"\\\"hash\\\": \\\"123\\\"}\",\n+            new Header[0]);\n+        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+\n+        // Associating with non-existent role is not allowed\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/nagilum\", \"{ \\\"opendistro_security_roles\\\": [\\\"non_existent\\\"]}\",\n             new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n         settings = Settings.builder().loadFromSource(response.getBody(), XContentType.JSON).build();\n         Assert.assertEquals(settings.get(\"message\"), \"Role 'non_existent' is not found.\");\n \n-        response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/nagilum\", \"{ \\\"opendistro_security_roles\\\": [\\\"opendistro_security_reserved\\\"]}\",\n-            new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_FORBIDDEN, response.getStatusCode());\n-        settings = Settings.builder().loadFromSource(response.getBody(), XContentType.JSON).build();\n-        Assert.assertEquals(settings.get(\"message\"), \"Role 'opendistro_security_reserved' is reserved.\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA4NDU1OQ==", "url": "https://github.com/opensearch-project/security/pull/556#discussion_r454084559", "bodyText": "There is one more class that still uses \"isReseved()\". Could you check if we need to update it too ? https://github.com/opendistro-for-elasticsearch/security/blob/e97d30d204c42c1a9518c85039144fcdadc0e590/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AccountApiAction.java#L201\nIt would be great if we can rename this method. This name is very confusing and will cause issues in the future. We should use either \"isReservedAndNotAccessible\" (without negation sign) or \"isReservedAndForbidden\", or anything similar were both words have the same meaning (restricting access).", "author": "dinusX", "createdAt": "2020-07-14T03:58:07Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -126,8 +126,8 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n                     return;\n                 }\n \n-                if (isReserved(rolesConfiguration, role)) {\n-                    forbidden(channel, \"Role '\" + role + \"' is reserved.\");\n+                if (!isReservedAndAccessible(rolesConfiguration, role)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzMTg3NQ==", "url": "https://github.com/opensearch-project/security/pull/556#discussion_r454431875", "bodyText": "For\n\nGood catch! I will update this to use the same validate as other methods. According to me it should be the same across classes\nI was thinking isReadonly would be easier to understand. I will update the function name.", "author": "debjanibnrj", "createdAt": "2020-07-14T15:12:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA4NDU1OQ=="}], "type": "inlineReview"}, {"oid": "630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e", "url": "https://github.com/opensearch-project/security/commit/630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e", "message": "Fix: Make sure Internal users API supports adding reserved opendistrosecurityroles (by superuser). Do not filter out reserved roles in the InternalUsersModelV7", "committedDate": "2020-07-14T20:20:20Z", "type": "commit"}, {"oid": "630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e", "url": "https://github.com/opensearch-project/security/commit/630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e", "message": "Fix: Make sure Internal users API supports adding reserved opendistrosecurityroles (by superuser). Do not filter out reserved roles in the InternalUsersModelV7", "committedDate": "2020-07-14T20:20:20Z", "type": "forcePushed"}]}