{"pr_number": 486, "pr_title": "Preventing users from mapping to hidden/reserved opendistro_security_\u2026", "pr_createdAt": "2020-06-02T20:55:04Z", "pr_url": "https://github.com/opensearch-project/security/pull/486", "timeline": [{"oid": "d1bdd9e19e2a9115a9935c4d636b86a76b7351d6", "url": "https://github.com/opensearch-project/security/commit/d1bdd9e19e2a9115a9935c4d636b86a76b7351d6", "message": "Preventing users from mapping to hidden/reserved opendistro_security_roles", "committedDate": "2020-06-02T19:00:22Z", "type": "commit"}, {"oid": "6c46f4c02d58848b6da9c9be1bad7bdf9fffebb4", "url": "https://github.com/opensearch-project/security/commit/6c46f4c02d58848b6da9c9be1bad7bdf9fffebb4", "message": "Resolving test failures", "committedDate": "2020-06-03T07:34:07Z", "type": "commit"}, {"oid": "6c46f4c02d58848b6da9c9be1bad7bdf9fffebb4", "url": "https://github.com/opensearch-project/security/commit/6c46f4c02d58848b6da9c9be1bad7bdf9fffebb4", "message": "Resolving test failures", "committedDate": "2020-06-03T07:34:07Z", "type": "forcePushed"}, {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773", "url": "https://github.com/opensearch-project/security/commit/7054096d099f0245a76e86b9e54e4c644b30b773", "message": "Removing hidden and reserved roles for existing users", "committedDate": "2020-06-11T02:04:07Z", "type": "commit"}, {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773", "url": "https://github.com/opensearch-project/security/commit/7054096d099f0245a76e86b9e54e4c644b30b773", "message": "Removing hidden and reserved roles for existing users", "committedDate": "2020-06-11T02:04:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4MDA1Mg==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438880052", "bodyText": "nit: move load() inside if (opendistroSecurityRoles != null)", "author": "vrozov", "createdAt": "2020-06-11T15:37:47Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,41 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+\n+        // Don't allow user to add reserved or hidden role\n+        final SecurityDynamicConfiguration<?> rolesConfiguration = load(CType.ROLES, false);", "originalCommit": "7054096d099f0245a76e86b9e54e4c644b30b773", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4MDU0OA==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438880548", "bodyText": "nit: avoid extra empty line", "author": "vrozov", "createdAt": "2020-06-11T15:38:17Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,41 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+", "originalCommit": "7054096d099f0245a76e86b9e54e4c644b30b773", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDI4OA==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438884288", "bodyText": "read-only->reserved?", "author": "vrozov", "createdAt": "2020-06-11T15:42:40Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,41 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+\n+        // Don't allow user to add reserved or hidden role\n+        final SecurityDynamicConfiguration<?> rolesConfiguration = load(CType.ROLES, false);\n+        final List<String> opendistroSecurityRoles = securityJsonNode.get(\"opendistro_security_roles\").asList();\n+        if (opendistroSecurityRoles != null) {\n+            for (final String role: opendistroSecurityRoles) {\n+\n+                if (isHidden(rolesConfiguration, role)) {\n+                    notFound(channel, \"Role '\"+role+\"' is not found.\");\n+                    return;\n+                }\n+\n+                if (isReserved(rolesConfiguration, role)) {\n+                    forbidden(channel, \"Role '\" + role + \"' is read-only.\");", "originalCommit": "7054096d099f0245a76e86b9e54e4c644b30b773", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkxNjgzNg==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438916836", "bodyText": "Will update to reserved", "author": "debjanibnrj", "createdAt": "2020-06-11T16:28:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDI4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NTAyNA==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438885024", "bodyText": "private final internalUsersConfiguration", "author": "vrozov", "createdAt": "2020-06-11T15:43:41Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -244,45 +245,54 @@ public void unregisterDCFListener(Object listener) {\n     \n     private static class InternalUsersModelV7 extends InternalUsersModel {\n         \n-        SecurityDynamicConfiguration<InternalUserV7> configuration;\n+        SecurityDynamicConfiguration<InternalUserV7> internalUserV7SecurityDynamicConfiguration;", "originalCommit": "7054096d099f0245a76e86b9e54e4c644b30b773", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NTI4MA==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438885280", "bodyText": "private final rolesConfiguration", "author": "vrozov", "createdAt": "2020-06-11T15:44:02Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -244,45 +245,54 @@ public void unregisterDCFListener(Object listener) {\n     \n     private static class InternalUsersModelV7 extends InternalUsersModel {\n         \n-        SecurityDynamicConfiguration<InternalUserV7> configuration;\n+        SecurityDynamicConfiguration<InternalUserV7> internalUserV7SecurityDynamicConfiguration;\n+\n+        SecurityDynamicConfiguration<RoleV7> roleV7SecurityDynamicConfiguration;", "originalCommit": "7054096d099f0245a76e86b9e54e4c644b30b773", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg5MjA1NQ==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438892055", "bodyText": "!roleV7SecurityDynamicConfiguration.getCEntry(role).isHidden() && !roleV7SecurityDynamicConfiguration.getCEntry(role).isReserved()\nnit: introduce private boolean isHiddenOrReserved(String role) helper method\nadd unit tests\nnit: indentation does not look right", "author": "vrozov", "createdAt": "2020-06-11T15:51:33Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -244,45 +245,54 @@ public void unregisterDCFListener(Object listener) {\n     \n     private static class InternalUsersModelV7 extends InternalUsersModel {\n         \n-        SecurityDynamicConfiguration<InternalUserV7> configuration;\n+        SecurityDynamicConfiguration<InternalUserV7> internalUserV7SecurityDynamicConfiguration;\n+\n+        SecurityDynamicConfiguration<RoleV7> roleV7SecurityDynamicConfiguration;\n         \n-        public InternalUsersModelV7(SecurityDynamicConfiguration<InternalUserV7> configuration) {\n+        public InternalUsersModelV7(SecurityDynamicConfiguration<InternalUserV7> internalUserV7SecurityDynamicConfiguration, SecurityDynamicConfiguration<RoleV7> roleV7SecurityDynamicConfiguration) {\n             super();\n-            this.configuration = configuration;\n+            this.internalUserV7SecurityDynamicConfiguration = internalUserV7SecurityDynamicConfiguration;\n+            this.roleV7SecurityDynamicConfiguration = roleV7SecurityDynamicConfiguration;\n         }\n \n         @Override\n         public boolean exists(String user) {\n-            return configuration.exists(user);\n+            return internalUserV7SecurityDynamicConfiguration.exists(user);\n         }\n \n         @Override\n         public List<String> getBackenRoles(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n             return tmp==null?null:tmp.getBackend_roles();\n         }\n \n         @Override\n         public Map<String, String> getAttributes(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n             return tmp==null?null:tmp.getAttributes();\n         }\n \n         @Override\n         public String getDescription(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n             return tmp==null?null:tmp.getDescription();\n         }\n \n         @Override\n         public String getHash(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n             return tmp==null?null:tmp.getHash();\n         }\n         \n         public List<String> getOpenDistroSecurityRoles(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n-            return tmp==null?Collections.emptyList():tmp.getOpendistro_security_roles();\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n+\n+            // Filtering out hidden and reserved roles for existing users\n+            return tmp==null? ImmutableList.of():\n+                                    tmp.getOpendistro_security_roles()\n+                                        .stream()\n+                                        .filter(role -> roleV7SecurityDynamicConfiguration.getCEntry(role).isHidden() || roleV7SecurityDynamicConfiguration.getCEntry(role).isReserved())", "originalCommit": "7054096d099f0245a76e86b9e54e4c644b30b773", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwODM2MQ==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438908361", "bodyText": "nit: move roles.getCEntries().size() to the next line.", "author": "vrozov", "createdAt": "2020-06-11T16:15:33Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -189,13 +189,14 @@ public void onChange(Map<CType, SecurityDynamicConfiguration<?>> typeToConfig) {\n \n                 log.debug(\"Static tenants loaded ({})\", staticTenants.getCEntries().size());\n \n-                log.debug(\"Static configuration loaded (total roles: {}/total action groups: {}/total tenants: {})\", roles.getCEntries().size(), actionGroups.getCEntries().size(), tenants.getCEntries().size());\n+                log.debug(\"Static configuration loaded (total roles: {}/total action groups: {}/total tenants: {})\", roles.getCEntries().size(),", "originalCommit": "7054096d099f0245a76e86b9e54e4c644b30b773", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAxMDgwNQ==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439010805", "bodyText": "if role is hidden and if we throw \"Role is not found\", user may try to create a role with same name.\nWhat will happen if someone try to create a role with same name as of hidden role?", "author": "hardik-k-shah", "createdAt": "2020-06-11T19:11:28Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,41 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+\n+        // Don't allow user to add reserved or hidden role\n+        final SecurityDynamicConfiguration<?> rolesConfiguration = load(CType.ROLES, false);\n+        final List<String> opendistroSecurityRoles = securityJsonNode.get(\"opendistro_security_roles\").asList();\n+        if (opendistroSecurityRoles != null) {\n+            for (final String role: opendistroSecurityRoles) {\n+\n+                if (isHidden(rolesConfiguration, role)) {\n+                    notFound(channel, \"Role '\"+role+\"' is not found.\");", "originalCommit": "7054096d099f0245a76e86b9e54e4c644b30b773", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1MDYxNw==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439050617", "bodyText": "We currently prevent users from modifying hidden roles -\nPUT  _opendistro/_security/api/roles/ES_hidden\n{\n  \"status\": \"FORBIDDEN\",\n  \"message\": \"Resource 'ES_hidden' is not available.\"\n}", "author": "debjanibnrj", "createdAt": "2020-06-11T20:23:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAxMDgwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1NzE5Ng==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439057196", "bodyText": "We can make this clearer for the user by mentioning the role is hidden but am unsure if that is a security concern. Right now we default to saying Role is not found in any case where the role is hidden -\nhttps://github.com/opendistro-for-elasticsearch/security/blob/ed6f901838e80e14116057bbffde02a3cf89e27e/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java#L151-L154", "author": "debjanibnrj", "createdAt": "2020-06-11T20:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAxMDgwNQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NzgyNQ==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439157825", "bodyText": "move if (rolesConfiguration.getCEntry(role) == null) to here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (isHidden(rolesConfiguration, role)) {\n          \n          \n            \n                            if (!rolesConfiguration.exists(role) || isHidden(rolesConfiguration, role)) {", "author": "vrozov", "createdAt": "2020-06-12T01:20:15Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,44 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+        // Don't allow user to add hidden, reserved or non-existent role\n+        final List<String> opendistroSecurityRoles = securityJsonNode.get(\"opendistro_security_roles\").asList();\n+        if (opendistroSecurityRoles != null) {\n+            final SecurityDynamicConfiguration<?> rolesConfiguration = load(CType.ROLES, false);\n+            for (final String role: opendistroSecurityRoles) {\n+\n+                if (rolesConfiguration.getCEntry(role) == null) {\n+                    notFound(channel, \"Role '\"+role+\"' does not exist.\");\n+                }\n+\n+                if (isHidden(rolesConfiguration, role)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUxMDA4NQ==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439510085", "bodyText": "I am slightly conflicted about treating hidden and non-existent roles the same way.\nFor non-existent roles the customer can resolve the issue by creating the new role, for hidden roles this will not be possible. If we return the same error message for both do you think it will cause confusion for the customer?", "author": "debjanibnrj", "createdAt": "2020-06-12T16:08:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NzgyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU2NjA1Mw==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439566053", "bodyText": "Hidden resource(role) means that for all practical purposes it can't be distinguished from not existing resource(role). Check, for example, how patch request for hidden resource/role is handled. The only exception where it is not possible to avoid exposing hidden resources is create(put) request.", "author": "vrozov", "createdAt": "2020-06-12T17:58:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NzgyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1ODQ5Mg==", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439158492", "bodyText": "add new line", "author": "vrozov", "createdAt": "2020-06-12T01:22:58Z", "path": "src/test/resources/roles.yml", "diffHunk": "@@ -1031,3 +1031,54 @@ role_foo_all:\n         - indices:data/read/*\n         - indices:admin/*\n         - indices:monitor/*\n+\n+xyz_sr:\n+  reserved: false\n+  hidden: false\n+  description: \"Migrated from v6 (all types mapped)\"\n+  cluster_permissions:\n+    - \"OPENDISTRO_SECURITY_CLUSTER_COMPOSITE_OPS_RO\"\n+  index_permissions:\n+    - index_patterns:\n+        - \"twitter\"\n+        - \"analytics\"\n+      dls: null\n+      fls: null\n+      masked_fields: null\n+      allowed_actions:\n+        - \"*\"\n+  tenant_permissions: []\n+\n+xyz_sr_hidden:\n+  reserved: false\n+  hidden: true\n+  description: \"Migrated from v6 (all types mapped)\"\n+  cluster_permissions:\n+    - \"OPENDISTRO_SECURITY_CLUSTER_COMPOSITE_OPS_RO\"\n+  index_permissions:\n+    - index_patterns:\n+        - \"twitter\"\n+        - \"analytics\"\n+      dls: null\n+      fls: null\n+      masked_fields: null\n+      allowed_actions:\n+        - \"*\"\n+  tenant_permissions: []\n+\n+xyz_sr_reserved:\n+  reserved: true\n+  hidden: false\n+  description: \"Migrated from v6 (all types mapped)\"\n+  cluster_permissions:\n+    - \"OPENDISTRO_SECURITY_CLUSTER_COMPOSITE_OPS_RO\"\n+  index_permissions:\n+    - index_patterns:\n+        - \"twitter\"\n+        - \"analytics\"\n+      dls: null\n+      fls: null\n+      masked_fields: null\n+      allowed_actions:\n+        - \"*\"\n+  tenant_permissions: []", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9efa25662017b143c5cf6985d4c7a81ea14b3641", "url": "https://github.com/opensearch-project/security/commit/9efa25662017b143c5cf6985d4c7a81ea14b3641", "message": "Addressing review comments and handling case for non-existent role", "committedDate": "2020-06-12T18:04:46Z", "type": "commit"}, {"oid": "9efa25662017b143c5cf6985d4c7a81ea14b3641", "url": "https://github.com/opensearch-project/security/commit/9efa25662017b143c5cf6985d4c7a81ea14b3641", "message": "Addressing review comments and handling case for non-existent role", "committedDate": "2020-06-12T18:04:46Z", "type": "forcePushed"}]}