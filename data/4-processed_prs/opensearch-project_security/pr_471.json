{"pr_number": 471, "pr_title": "Migration and validation APIs for version upgrade (#454)", "pr_createdAt": "2020-05-21T03:49:16Z", "pr_url": "https://github.com/opensearch-project/security/pull/471", "timeline": [{"oid": "62f2156429f2592568b8f426092e0b3a34f1d8d2", "url": "https://github.com/opensearch-project/security/commit/62f2156429f2592568b8f426092e0b3a34f1d8d2", "message": "Migration and validation APIs for version upgrade (#454)\n\n* Migration and valdiation APIs for version upgrade for advance module cherry pick of 8cf60f21e650aa16a77c39339a2455e7603c130b\r\n\r\n* Version upgrade fix cherry pick of 0286850f413016b1586a13189a9bb9d9b05a9bd3\r\n\r\n* version upgrade fix cherry pick of 472d652261c3a19affecfa594b93f7052dc20a68\r\n\r\n* Fixing version upgrade test\r\n\r\n(cherry picked from commit 2259e6b743f4539e1798ef625d93d2972152a4fa)\r\n\r\n* refectoring\r\n\r\n* Registering GET handler for Validate API\r\n\r\n* NodesDN changes\r\n\r\nCo-authored-by: Allen Yin <48698112+allenyin96@users.noreply.github.com>\r\nCo-authored-by: Allen Yin <allenyin@amazon.com>\r\nCo-authored-by: Debjani Banerjee <bdebjani@amazon.com>", "committedDate": "2020-05-20T21:13:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwMTMyNg==", "url": "https://github.com/opensearch-project/security/pull/471#discussion_r429001326", "bodyText": "Could NodesDn also be added to validation API ?", "author": "sujithvm", "createdAt": "2020-05-22T01:44:53Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ValidateApiAction.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.security.dlic.rest.api;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.collect.Tuple;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.rest.RestChannel;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.RestRequest.Method;\n+import org.elasticsearch.threadpool.ThreadPool;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.amazon.opendistroforelasticsearch.security.auditlog.AuditLog;\n+import com.amazon.opendistroforelasticsearch.security.configuration.AdminDNs;\n+import com.amazon.opendistroforelasticsearch.security.configuration.ConfigurationRepository;\n+import com.amazon.opendistroforelasticsearch.security.dlic.rest.validation.AbstractConfigurationValidator;\n+import com.amazon.opendistroforelasticsearch.security.dlic.rest.validation.NoOpValidator;\n+import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvaluator;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.Migration;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.CType;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.SecurityDynamicConfiguration;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.ActionGroupsV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.ConfigV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.InternalUserV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.RoleMappingsV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.RoleV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.ActionGroupsV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.ConfigV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.InternalUserV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.RoleMappingsV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.RoleV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.TenantV7;\n+import com.amazon.opendistroforelasticsearch.security.ssl.transport.PrincipalExtractor;\n+\n+public class ValidateApiAction extends AbstractApiAction {\n+\n+    @Inject\n+    public ValidateApiAction(final Settings settings, final Path configPath, final RestController controller, final Client client,\n+                             final AdminDNs adminDNs, final ConfigurationRepository cl, final ClusterService cs, final PrincipalExtractor principalExtractor,\n+                             final PrivilegesEvaluator evaluator, ThreadPool threadPool, AuditLog auditLog) {\n+        super(settings, configPath, controller, client, adminDNs, cl, cs, principalExtractor, evaluator, threadPool, auditLog);\n+    }\n+\n+    @Override\n+    protected void registerHandlers(RestController controller, Settings settings) {\n+        controller.registerHandler(Method.GET, \"/_opendistro/_security/api/validate\", this);\n+    }\n+\n+    @Override\n+    protected Endpoint getEndpoint() {\n+        return Endpoint.VALIDATE;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    protected void handleGet(RestChannel channel, RestRequest request, Client client, final JsonNode content) throws IOException {\n+\n+        final boolean acceptInvalid = request.paramAsBoolean(\"accept_invalid\", false);\n+\n+        final SecurityDynamicConfiguration<?> loadedConfig = load(CType.CONFIG, true, acceptInvalid);\n+\n+        if (loadedConfig.getVersion() != 1) {\n+            badRequestResponse(channel, \"Can not migrate configuration because it was already migrated.\");\n+            return;\n+        }\n+\n+        try {\n+            final SecurityDynamicConfiguration<ConfigV6> configV6 = (SecurityDynamicConfiguration<ConfigV6>) loadedConfig;\n+            final SecurityDynamicConfiguration<ActionGroupsV6> actionGroupsV6 = (SecurityDynamicConfiguration<ActionGroupsV6>) load(CType.ACTIONGROUPS, true, acceptInvalid);\n+            final SecurityDynamicConfiguration<InternalUserV6> internalUsersV6 = (SecurityDynamicConfiguration<InternalUserV6>) load(CType.INTERNALUSERS, true, acceptInvalid);\n+            final SecurityDynamicConfiguration<RoleV6> rolesV6 = (SecurityDynamicConfiguration<RoleV6>) load(CType.ROLES, true, acceptInvalid);\n+            final SecurityDynamicConfiguration<RoleMappingsV6> rolesmappingV6 = (SecurityDynamicConfiguration<RoleMappingsV6>) load(CType.ROLESMAPPING, true, acceptInvalid);", "originalCommit": "62f2156429f2592568b8f426092e0b3a34f1d8d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQwMTk0NQ==", "url": "https://github.com/opensearch-project/security/pull/471#discussion_r429401945", "bodyText": "NodesDn doesn;t have different formatting for 6.x or 7.x\nthere is no (NodesDnV6 or NodesDnV7)\nDo we still need validation for same formatting?", "author": "hardik-k-shah", "createdAt": "2020-05-22T18:44:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwMTMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4OTEzOQ==", "url": "https://github.com/opensearch-project/security/pull/471#discussion_r429489139", "bodyText": "The migration step adds the meta data right and this validation api ensures it was able to do so. Hence I thought it will be useful to add it here.\nAlso it is updated in opendistro-1.1 branch https://github.com/opendistro-for-elasticsearch/security/blob/opendistro-1.1/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ValidateApiAction.java#L103", "author": "sujithvm", "createdAt": "2020-05-22T23:33:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwMTMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM0Mzc3Ng==", "url": "https://github.com/opensearch-project/security/pull/471#discussion_r431343776", "bodyText": "Migration steps requires these steps .. because migration steps will export current config from index and re-create index from it..\nValidation is pre-migration steps to validate if config can be migrated to 7.x version or not.. (Validation API was just build to cover any corner cases for invalid configs)\nPost validation, we can migrate where we actually export current config, re-format it and re-create index from it..\nRegarding, presence in 1.1 branch is: Dn hot reload initially built with two different classes one for 6.x and one 7.x eventhough format for both versions were same.  And it was removed before merging as there was no sense of keeping two different classes with same format.\nI can still add validation part to stay in sync with 1.1 branch, but it is simply not required. Or on other side we remove it from 1.1 branch too.", "author": "hardik-k-shah", "createdAt": "2020-05-27T18:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwMTMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2NTg1Mw==", "url": "https://github.com/opensearch-project/security/pull/471#discussion_r439065853", "bodyText": "Sounds good as the the NodeDn structure is the same!", "author": "sujithvm", "createdAt": "2020-06-11T20:55:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwMTMyNg=="}], "type": "inlineReview"}]}