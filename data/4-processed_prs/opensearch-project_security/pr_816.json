{"pr_number": 816, "pr_title": "Fix empty password issue in upgrade from 6x to 7x", "pr_createdAt": "2020-10-29T05:05:32Z", "pr_url": "https://github.com/opensearch-project/security/pull/816", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NTkxMw==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r514495913", "bodyText": "Any tests?", "author": "sujithvm", "createdAt": "2020-10-29T18:58:35Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**\n+         * Method that gets invoked when \"password\" field is present in serialized JSON.\n+         * Serialized JSON is expected not to have \"password\" field or have an empty password.\n+         * Hence, password field should not be set in InternalUserV6 object in deserialization.\n+         */\n+        public void setPassword(String password){}", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4MTYxNg==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r514581616", "bodyText": "Test that deserialization is successful even with a JSON containing password field. I believe it is currently throwing an exception.", "author": "sujithvm", "createdAt": "2020-10-29T21:34:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NTkxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg4MzI0MQ==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r514883241", "bodyText": "Added tests to test the entire migration process with internal users with empty passwords.", "author": "cliu123", "createdAt": "2020-10-30T05:44:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NTkxMw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTg3NA==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515315874", "bodyText": "nit: add empty line before and after.", "author": "vrozov", "createdAt": "2020-10-30T19:00:58Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM3Nzc4MQ==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515377781", "bodyText": "Done.", "author": "cliu123", "createdAt": "2020-10-30T20:52:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTg3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Mzg2Nw==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515443867", "bodyText": "Sorry, by \"after\" I mean to add empty line after the method, so one method is separated from another.", "author": "vrozov", "createdAt": "2020-10-31T02:15:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTg3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0NDI4NA==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515444284", "bodyText": "Delete '/** .. */comment (it uses doc style comment, and it should not be doc). It should be sufficient to have a single line comment insidesetPassword()` method body.", "author": "vrozov", "createdAt": "2020-10-31T02:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTg3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NDM4MA==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515344380", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public void setPassword(String password){}\n          \n          \n            \n                    public void setPassword(String password){\n          \n          \n            \n                      // no-op setter. Due to a bug in 6.x, empty \"password\" may be saved to the internalusers doc. Ignore it.\n          \n          \n            \n                    }", "author": "vrozov", "createdAt": "2020-10-30T19:52:52Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**\n+         * Method that gets invoked when \"password\" field is present in serialized JSON.\n+         * Serialized JSON is expected not to have \"password\" field or have an empty password.\n+         * Hence, password field should not be set in InternalUserV6 object in deserialization.\n+         */\n+        public void setPassword(String password){}", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NDg5NA==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515344894", "bodyText": "Is it necessary to hardcode base64 encoded string? Can it be programmatically encoded for readability?", "author": "vrozov", "createdAt": "2020-10-30T19:54:07Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "diffHunk": "@@ -137,6 +136,29 @@ public void testSecurityValidateWithInvalidConfig() throws Exception {\n \n     }\n \n+    @Test\n+    public void testSecurityMigrateWithEmptyPassword() throws Exception{\n+        final Settings settings = Settings.builder().put(SSLConfigConstants.OPENDISTRO_SECURITY_SSL_HTTP_CLIENTAUTH_MODE, \"REQUIRE\")\n+                .put(\"opendistro_security.ssl.http.enabled\", true)\n+                .put(\"opendistro_security.ssl.http.keystore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/node-0-keystore.jks\"))\n+                .put(\"opendistro_security.ssl.http.truststore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/truststore.jks\"))\n+                .put(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_ACCEPT_INVALID_CONFIG, true)\n+                .build();\n+        setup(Settings.EMPTY, new DynamicSecurityConfig().setSecurityInternalUsers(\"internal_users2.yml\").setLegacy(), settings, true);\n+        final RestHelper rh = restHelper(); //ssl resthelper\n+\n+        rh.enableHTTPClientSSL = true;\n+        rh.trustHTTPServerCertificate = true;\n+        rh.sendAdminCertificate = true;\n+        rh.keystore = \"kirk-keystore.jks\";\n+        \n+        String body = \"{\\\"internalusers\\\":\\\"eyJsb2dzdGFzaCI6eyJoYXNoIjoiIiwicm9sZXMiOlsibG9nc3Rhc2giXX0sIlN0ZXBoZW5fMTIzIjp7Imhhc2giOiIiLCAicGFzc3dvcmQiOiIifSwic25hcHNob3RyZXN0b3JlIjp7Imhhc2giOiIiLCJyb2xlcyI6WyJzbmFwc2hvdHJlc3RvcmUiXX0sImFkbWluIjp7ImF0dHJpYnV0ZXMiOnsiYXR0cmlidXRlMSI6InZhbHVlMSIsImF0dHJpYnV0ZTMiOiJ2YWx1ZTMiLCJhdHRyaWJ1dGUyIjoidmFsdWUyIn0sInJlYWRvbmx5IjoidHJ1ZSIsImhhc2giOiIiLCJyb2xlcyI6WyJhZG1pbiJdfSwia2liYW5hc2VydmVyIjp7InJlYWRvbmx5IjoidHJ1ZSIsImhhc2giOiIifSwia2liYW5hcm8iOnsiaGFzaCI6IiIsInJvbGVzIjpbImtpYmFuYXVzZXIiLCJyZWFkYWxsIl19LCJyZWFkYWxsIjp7Imhhc2giOiIiLCJyb2xlcyI6WyJyZWFkYWxsIl19fQoK\\\"}\";", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM3Nzg1Mg==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515377852", "bodyText": "Done.", "author": "cliu123", "createdAt": "2020-10-30T20:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NDg5NA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4Njc5MA==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515386790", "bodyText": "nit: include only whats relevant for the test", "author": "sujithvm", "createdAt": "2020-10-30T21:16:43Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "diffHunk": "@@ -137,6 +137,31 @@ public void testSecurityValidateWithInvalidConfig() throws Exception {\n \n     }\n \n+    @Test\n+    public void testSecurityMigrateWithEmptyPassword() throws Exception{\n+        final Settings settings = Settings.builder().put(SSLConfigConstants.OPENDISTRO_SECURITY_SSL_HTTP_CLIENTAUTH_MODE, \"REQUIRE\")\n+                .put(\"opendistro_security.ssl.http.enabled\", true)\n+                .put(\"opendistro_security.ssl.http.keystore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/node-0-keystore.jks\"))\n+                .put(\"opendistro_security.ssl.http.truststore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/truststore.jks\"))\n+                .put(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_ACCEPT_INVALID_CONFIG, true)\n+                .build();\n+        setup(Settings.EMPTY, new DynamicSecurityConfig().setSecurityInternalUsers(\"internal_users2.yml\").setLegacy(), settings, true);\n+        final RestHelper rh = restHelper(); //ssl resthelper\n+\n+        rh.enableHTTPClientSSL = true;\n+        rh.trustHTTPServerCertificate = true;\n+        rh.sendAdminCertificate = true;\n+        rh.keystore = \"kirk-keystore.jks\";\n+\n+        String internalUsersWithEmptyPassword = \"{\\\"logstash\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"logstash\\\"]},\\\"Stephen_123\\\":{\\\"hash\\\":\\\"\\\", \\\"password\\\":\\\"\\\"},\\\"snapshotrestore\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"snapshotrestore\\\"]},\\\"admin\\\":{\\\"attributes\\\":{\\\"attribute1\\\":\\\"value1\\\",\\\"attribute3\\\":\\\"value3\\\",\\\"attribute2\\\":\\\"value2\\\"},\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"admin\\\"]},\\\"kibanaserver\\\":{\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\"},\\\"kibanaro\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"kibanauser\\\",\\\"readall\\\"]},\\\"readall\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"readall\\\"]}}\";", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM5MDg4Nw==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515390887", "bodyText": "I was thinking of that too. But I'd like to keep it consistent with what API does as much as possible. Therefore, I kept the default internalusers, and just created a new internal user via API and add an empty password manually. I didn't deleted anything else.", "author": "cliu123", "createdAt": "2020-10-30T21:28:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4Njc5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQzMDA3Ng==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515430076", "bodyText": "FYI, default users are shipped only with default configuration. They are not necessary to be there for any consistency", "author": "sujithvm", "createdAt": "2020-10-31T00:11:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4Njc5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0MDMwNg==", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515440306", "bodyText": "Ok. Good to know that!", "author": "cliu123", "createdAt": "2020-10-31T01:35:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4Njc5MA=="}], "type": "inlineReview"}, {"oid": "4b32477a52e2c2f71365c9b934b702110f6a7393", "url": "https://github.com/opensearch-project/security/commit/4b32477a52e2c2f71365c9b934b702110f6a7393", "message": "Fix empty password issue in upgrade from 6x to 7x\n\nCo-authored-by: Vlad Rozov <vrozov@users.noreply.github.com>", "committedDate": "2020-10-31T06:16:39Z", "type": "commit"}, {"oid": "4b32477a52e2c2f71365c9b934b702110f6a7393", "url": "https://github.com/opensearch-project/security/commit/4b32477a52e2c2f71365c9b934b702110f6a7393", "message": "Fix empty password issue in upgrade from 6x to 7x\n\nCo-authored-by: Vlad Rozov <vrozov@users.noreply.github.com>", "committedDate": "2020-10-31T06:16:39Z", "type": "forcePushed"}]}