{"pr_number": 382, "pr_title": "KOGITO-1473 - Import DMN test scenario runner in KOGITO", "pr_createdAt": "2020-03-20T13:19:04Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/382", "timeline": [{"oid": "02f7486cc32c250479a3b1889b9535204804c418", "url": "https://github.com/kiegroup/kogito-runtimes/commit/02f7486cc32c250479a3b1889b9535204804c418", "message": "initial commit - junit4", "committedDate": "2020-03-12T15:15:16Z", "type": "commit"}, {"oid": "2d94192ba5c2de3a8f0b7267a5e18379a0543323", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2d94192ba5c2de3a8f0b7267a5e18379a0543323", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-scesim", "committedDate": "2020-03-12T17:39:13Z", "type": "commit"}, {"oid": "f04fe3ca26769b6bfd1a6e1fc03b4d84c2c7d0d6", "url": "https://github.com/kiegroup/kogito-runtimes/commit/f04fe3ca26769b6bfd1a6e1fc03b4d84c2c7d0d6", "message": "Cleanup", "committedDate": "2020-03-12T21:50:16Z", "type": "commit"}, {"oid": "908f6ee8873029a32b527358da23502e29124a84", "url": "https://github.com/kiegroup/kogito-runtimes/commit/908f6ee8873029a32b527358da23502e29124a84", "message": "Cleanup", "committedDate": "2020-03-13T13:11:29Z", "type": "commit"}, {"oid": "490b480c119771e82bbc8b6ad2f9a8e5af3ea740", "url": "https://github.com/kiegroup/kogito-runtimes/commit/490b480c119771e82bbc8b6ad2f9a8e5af3ea740", "message": "Junit5 (vintage engine)", "committedDate": "2020-03-16T17:29:40Z", "type": "commit"}, {"oid": "1b5d18625204cba02dfc48bc9a9aa69567f870ef", "url": "https://github.com/kiegroup/kogito-runtimes/commit/1b5d18625204cba02dfc48bc9a9aa69567f870ef", "message": "minor", "committedDate": "2020-03-20T09:49:13Z", "type": "commit"}, {"oid": "dbebc8f129cb751b930b98da4a3bd8533398fd25", "url": "https://github.com/kiegroup/kogito-runtimes/commit/dbebc8f129cb751b930b98da4a3bd8533398fd25", "message": "added readme", "committedDate": "2020-03-20T12:55:43Z", "type": "commit"}, {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4", "url": "https://github.com/kiegroup/kogito-runtimes/commit/7c9fc5d7c449db059799722b2df32b1d39e324c4", "message": "minor", "committedDate": "2020-03-20T13:13:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1Nzg4Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396357887", "bodyText": "I think we should not make another copy. We have already one in drools-core, be exact org.drools.core.util.XStreamUtils.\nOne more reason, most copied methods are deprecated, some also with linked CVE. I think we need to start think of some utils module used both by kogito and non kogito world..", "author": "jomarko", "createdAt": "2020-03-23T10:43:48Z", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/commons/xstream/XStreamUtils.java", "diffHunk": "@@ -0,0 +1,252 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.soup.commons.xstream;\n+\n+import java.util.function.Function;\n+\n+import com.thoughtworks.xstream.XStream;\n+import com.thoughtworks.xstream.annotations.XStreamAlias;\n+import com.thoughtworks.xstream.converters.reflection.ReflectionProvider;\n+import com.thoughtworks.xstream.core.ClassLoaderReference;\n+import com.thoughtworks.xstream.io.HierarchicalStreamDriver;\n+import com.thoughtworks.xstream.mapper.MapperWrapper;\n+import com.thoughtworks.xstream.security.AnyTypePermission;\n+import com.thoughtworks.xstream.security.WildcardTypePermission;\n+\n+import static com.thoughtworks.xstream.XStream.setupDefaultSecurity;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class XStreamUtils {", "originalCommit": "7c9fc5d7c449db059799722b2df32b1d39e324c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTMxOQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405319", "bodyText": "The reason why I copied it instead of use the already existing copy of XStreamUtils is because of the different package: it is used by ScenarioSimulationXMLPersistence (that is in drools repo). I plan in another ticket to update ScenarioSimulationXMLPersistence to abstract over XStream instance and try to get rid of this clone but it takes time because I need to wait for a community release of 7 and then I can use it here.\nBtw I have removed all the methods I'm not using.", "author": "danielezonca", "createdAt": "2020-03-23T12:12:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1Nzg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODM3NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396358375", "bodyText": "If we won't introduce general module, we should update year", "author": "jomarko", "createdAt": "2020-03-23T10:44:44Z", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/HasImports.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "originalCommit": "7c9fc5d7c449db059799722b2df32b1d39e324c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTI2OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405269", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-03-23T12:12:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODM3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODQ5OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396358498", "bodyText": "same as above", "author": "jomarko", "createdAt": "2020-03-23T10:44:57Z", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Import.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "originalCommit": "7c9fc5d7c449db059799722b2df32b1d39e324c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTI1Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405256", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-03-23T12:12:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODQ5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODc3Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396358773", "bodyText": "return Objects.equals(type, anImport.type)", "author": "jomarko", "createdAt": "2020-03-23T10:45:26Z", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Import.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.kie.soup.project.datamodel.imports;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class Import {\n+\n+    private String type;\n+\n+    public Import() {\n+\n+    }\n+\n+    public Import(String t) {\n+        this.type = t;\n+    }\n+\n+    public Import(Class<?> clazz) {\n+        this(clazz.getName());\n+    }\n+\n+    public String getType() {\n+        return this.type;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        // Must do instanceof check because there is a subtype of this class in drools-workbench-models-datamodel-api\n+        if (!(o instanceof Import)) {\n+            return false;\n+        }\n+\n+        Import anImport = (Import) o;\n+\n+        if (type != null ? !type.equals(anImport.type) : anImport.type != null) {\n+            return false;\n+        }\n+\n+        return true;", "originalCommit": "7c9fc5d7c449db059799722b2df32b1d39e324c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTIxNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405216", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-03-23T12:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODc3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODkyNQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396358925", "bodyText": "year", "author": "jomarko", "createdAt": "2020-03-23T10:45:39Z", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "originalCommit": "7c9fc5d7c449db059799722b2df32b1d39e324c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTE3OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405178", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-03-23T12:12:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODkyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1OTIyMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396359220", "bodyText": "@OverRide", "author": "jomarko", "createdAt": "2020-03-23T10:46:09Z", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.kie.soup.project.datamodel.imports;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class Imports {\n+\n+    private ArrayList<Import> imports = new ArrayList<Import>();\n+\n+    public Imports() {\n+    }\n+\n+    public Imports(final List<Import> imports) {\n+        this.imports = new ArrayList<>(imports);\n+    }\n+\n+    public List<Import> getImports() {\n+        return imports;\n+    }\n+\n+    public Set<String> getImportStrings() {\n+        Set<String> strings = new HashSet<>();\n+\n+        for (Import item : imports) {\n+            strings.add(item.getType());\n+        }\n+\n+        return strings;\n+    }\n+\n+    public String toString() {", "originalCommit": "7c9fc5d7c449db059799722b2df32b1d39e324c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTE0Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405147", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-03-23T12:12:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1OTIyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1OTYwMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396359602", "bodyText": "Objects.equals", "author": "jomarko", "createdAt": "2020-03-23T10:46:51Z", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.kie.soup.project.datamodel.imports;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class Imports {\n+\n+    private ArrayList<Import> imports = new ArrayList<Import>();\n+\n+    public Imports() {\n+    }\n+\n+    public Imports(final List<Import> imports) {\n+        this.imports = new ArrayList<>(imports);\n+    }\n+\n+    public List<Import> getImports() {\n+        return imports;\n+    }\n+\n+    public Set<String> getImportStrings() {\n+        Set<String> strings = new HashSet<>();\n+\n+        for (Import item : imports) {\n+            strings.add(item.getType());\n+        }\n+\n+        return strings;\n+    }\n+\n+    public String toString() {\n+        final StringBuilder sb = new StringBuilder();\n+        for (final Import i : imports) {\n+            sb.append(\"import \").append(i.getType()).append(\";\\n\");\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    public void addImport(final Import item) {\n+        imports.add(item);\n+    }\n+\n+    public void removeImport(final Import item) {\n+        imports.remove(item);\n+    }\n+\n+    public boolean contains(final Import item) {\n+        return imports.contains(item);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        Imports imports1 = (Imports) o;\n+\n+        if (imports != null ? !imports.equals(imports1.imports) : imports1.imports != null) {\n+            return false;\n+        }\n+\n+        return true;", "originalCommit": "7c9fc5d7c449db059799722b2df32b1d39e324c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTExMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405110", "bodyText": "Done", "author": "danielezonca", "createdAt": "2020-03-23T12:12:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1OTYwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM2MTExMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396361110", "bodyText": "Are these dmn and scesim files just for manual testing, are you going some unit tests?", "author": "jomarko", "createdAt": "2020-03-23T10:49:29Z", "path": "drools/kogito-scenario-simulation/src/test/resources/sampleTest/Traffic Violation.dmn", "diffHunk": "@@ -0,0 +1,230 @@\n+<?xml version='1.0' encoding='UTF-8'?>", "originalCommit": "7c9fc5d7c449db059799722b2df32b1d39e324c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTA1Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405057", "bodyText": "Yes, it is used (executed) during Maven test goal via KogitoScenarioJunitActivatorTest. This activator works like an integration test that load dmn, load scesim and execute it.", "author": "danielezonca", "createdAt": "2020-03-23T12:11:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM2MTExMA=="}], "type": "inlineReview"}, {"oid": "eedd231ee04f9cc512b225f43ac011d26b549cd9", "url": "https://github.com/kiegroup/kogito-runtimes/commit/eedd231ee04f9cc512b225f43ac011d26b549cd9", "message": "[KOGITO-1473] PR comments + some code smell", "committedDate": "2020-03-23T12:07:30Z", "type": "commit"}, {"oid": "af369373d700b9d2cf8f0cbf7f871c5a7bbd7714", "url": "https://github.com/kiegroup/kogito-runtimes/commit/af369373d700b9d2cf8f0cbf7f871c5a7bbd7714", "message": "[KOGITO-1473] code smell", "committedDate": "2020-03-23T16:16:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2MjMwMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r397962303", "bodyText": "Just a question. Why should that be present in this long form?\ncan we leave it just\n@RunWith and KogitoJunitActivator and use static import?", "author": "dupliaka", "createdAt": "2020-03-25T15:48:34Z", "path": "drools/kogito-scenario-simulation/src/test/java/testscenario/KogitoScenarioJunitActivatorTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package testscenario;\n+\n+/**\n+ * Do not remove this file\n+ */\n+@org.junit.runner.RunWith(org.kogito.scenariosimulation.runner.KogitoJunitActivator.class)", "originalCommit": "af369373d700b9d2cf8f0cbf7f871c5a7bbd7714", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyNTE0MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r398425141", "bodyText": "Short answer: it is the same :)\nLong answer: I usually prefer to use FQN for \"autogenerated\" classes. I plan to create with another ticket a Maven goal to autogenerate it in the project.", "author": "danielezonca", "createdAt": "2020-03-26T09:25:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2MjMwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5NjUzMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r398396533", "bodyText": "Could we add some comment here?\nFor example:\n/**\n\nKogitoJunitActivator is a custom extension of JUnit's\nwhich provides functionality of the Drools Scenario Simulation\nto standard JUnit tests by means of the\nDmn context and associated support classes and annotations.\n*/", "author": "dupliaka", "createdAt": "2020-03-26T08:37:32Z", "path": "drools/kogito-scenario-simulation/src/test/java/testscenario/KogitoScenarioJunitActivatorTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package testscenario;\n+\n+/**\n+ * Do not remove this file", "originalCommit": "af369373d700b9d2cf8f0cbf7f871c5a7bbd7714", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzNzM2OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r398437368", "bodyText": "Done :)", "author": "danielezonca", "createdAt": "2020-03-26T09:44:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5NjUzMw=="}], "type": "inlineReview"}, {"oid": "d1a4c031d644697276866dbd1a2f516e7558c8ce", "url": "https://github.com/kiegroup/kogito-runtimes/commit/d1a4c031d644697276866dbd1a2f516e7558c8ce", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-1473", "committedDate": "2020-03-26T09:43:39Z", "type": "commit"}, {"oid": "02ebb34970c7e13611bd35e5c940309d706dc63f", "url": "https://github.com/kiegroup/kogito-runtimes/commit/02ebb34970c7e13611bd35e5c940309d706dc63f", "message": "[KOGITO-1473] Improved javadoc", "committedDate": "2020-03-26T09:44:12Z", "type": "commit"}]}