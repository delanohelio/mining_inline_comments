{"pr_number": 373, "pr_title": "KOGITO-1088 Migrate REST code generation for spring boot to use Spring REST Controller", "pr_createdAt": "2020-03-17T18:53:02Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/373", "timeline": [{"oid": "22d11bae1d747ced03f42c131b452679f63e7726", "url": "https://github.com/kiegroup/kogito-runtimes/commit/22d11bae1d747ced03f42c131b452679f63e7726", "message": "Migrate REST code generation for spring boot to use Spring REST Controller\n\nspring boot archtype\n\nfix conflicts with master\n\naddding spring dependency\n\nFix some details during spring REST code generation\n\nFix Spring resource template\n\nadding validation for spring on rest reousrce generation\n\nrefactoring some changes on the resource generator\n\nremoving unecessry dependencies\n\nTests with spring context\n\nclear comments on template\n\nAdding test for ResourceGeneratorFactory\n\nInserting process management module for spring boot, creating new modules for spring boot starter updating kogito bom\n\nadding process management to bom", "committedDate": "2020-03-17T19:12:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394103997", "bodyText": "@tiagodolphine perhaps move process-management-addon into here and rename to process-management-quarkus-addon ?", "author": "cristianonicolai", "createdAt": "2020-03-18T04:43:38Z", "path": "addons/pom.xml", "diffHunk": "@@ -18,6 +18,7 @@\n     <module>process-management-addon</module>\n     <module>jobs</module>\n     <module>predictions</module>\n+    <module>process-management</module>", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNjgyMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394136822", "bodyText": "this looks like a top level module so process-management-addon should be most likely moved in here", "author": "mswiderski", "createdAt": "2020-03-18T06:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4NTA1Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394485057", "bodyText": "Yeah, I totally forgot to move it here, that was the main idea. Moving it.\nShould it be renamed to process-management-quarkus-addon or keep it as process-management-addon ?", "author": "tiagodolphine", "createdAt": "2020-03-18T16:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc1MzExMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394753110", "bodyText": "+1 to add quarkus to it.", "author": "cristianonicolai", "createdAt": "2020-03-19T02:16:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIwMjQ0NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r397202445", "bodyText": "I'll keep it as process-management-addon since we decided to postpone the Spring generation after the dev preview, so when we incorporate all the generators for spring we can rename this. For now, let's keep the same names and behavior.", "author": "tiagodolphine", "createdAt": "2020-03-24T14:37:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE3Mjk5Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399172997", "bodyText": "not sure what's the difference but I'd prefer change of the artefact id would be done before dev preview as otherwise people would have to update their already build application with new artefact id. just my 2 c...", "author": "mswiderski", "createdAt": "2020-03-27T10:37:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0ODY0MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399248641", "bodyText": "great point, the problem here is, if we change to process-management-quarkus-addon it will be necessary to change all the examples that are using it, WDYT?\n@cristianonicolai @evacchi ^", "author": "tiagodolphine", "createdAt": "2020-03-27T13:04:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM0MDA4MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399340081", "bodyText": "yeah, plus docs... Im not sure to be honest but we either do now or on 0.10", "author": "cristianonicolai", "createdAt": "2020-03-27T15:17:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM5NDI0Mg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399394242", "bodyText": "IMO we can change it later, there are no time to change the docs and examples, and it will keep the current artifact id and behavior not changing anything.", "author": "tiagodolphine", "createdAt": "2020-03-27T16:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNjYyOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394136628", "bodyText": "this seems to be an empty module so what's the point of it?", "author": "mswiderski", "createdAt": "2020-03-18T06:55:07Z", "path": "addons/process-management/process-management-common/pom.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>process-management</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>process-management-common</artifactId>", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4NjIwNw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394486207", "bodyText": "Yeah, the idea is to move the code to be shared between the 2 implementations here, I'll try to refactor this part to extract the common parts, I just missed to do it on the commit.", "author": "tiagodolphine", "createdAt": "2020-03-18T16:37:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNjYyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzAzMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394137032", "bodyText": "should this module depend on starter on just individual needed dependencies?", "author": "mswiderski", "createdAt": "2020-03-18T06:56:24Z", "path": "addons/process-management/process-management-springboot-addon/pom.xml", "diffHunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>process-management</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>process-management-springboot-addon</artifactId>\n+  <description>Management of process instances for Spring Boot</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-springboot-starter</artifactId>", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4OTE3OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394489179", "bodyText": "if not all the dependencies on the starter are necessary here, it makes sense to insert the individual dependencies... I'll check it, thanks for the warning.", "author": "tiagodolphine", "createdAt": "2020-03-18T16:42:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzAzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzUyOQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394137529", "bodyText": "this looks like a complete copy of the process-management-addon module just with spring annotations instead of JAXRS, maybe it should be extracted to this process-management-common module and only extend the abstract class with annotations....", "author": "mswiderski", "createdAt": "2020-03-18T06:57:54Z", "path": "addons/process-management/process-management-springboot-addon/src/main/java/org/kie/kogito/process/management/ProcessInstanceManagementResource.java", "diffHunk": "@@ -0,0 +1,227 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.process.management;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+import org.kie.kogito.Application;\n+import org.kie.kogito.auth.SecurityPolicy;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.ProcessError;\n+import org.kie.kogito.process.ProcessInstance;\n+import org.kie.kogito.process.ProcessInstanceExecutionException;\n+import org.kie.kogito.process.Processes;\n+import org.kie.kogito.process.WorkItem;\n+import org.kie.kogito.services.uow.UnitOfWorkExecutor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+@RestController\n+@RequestMapping(\"/management/processes\")\n+public class ProcessInstanceManagementResource {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ2NDcwMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394464703", "bodyText": "+1", "author": "MarianMacik", "createdAt": "2020-03-18T16:07:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MDQyMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394490423", "bodyText": "yeah, in fact, this was the idea, I missed this refactoring, basically, it is a copy with the annotations and the response type os the methods are from Spring API, I'll check here what can be extracted the common module.", "author": "tiagodolphine", "createdAt": "2020-03-18T16:44:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzUyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzc3NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394137774", "bodyText": "maybe add all exception handlers in single class since the actual handler is a method and not class level annotation", "author": "mswiderski", "createdAt": "2020-03-18T06:58:39Z", "path": "addons/process-management/process-management-springboot-addon/src/main/java/org/kie/kogito/process/management/exceptions/InvalidLifeCyclePhaseExceptionMapper.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.process.management.exceptions;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.kie.kogito.process.workitem.InvalidLifeCyclePhaseException;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.ControllerAdvice;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+\n+@ControllerAdvice\n+public class InvalidLifeCyclePhaseExceptionMapper {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MDk3Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394490973", "bodyText": "good point, we can keep it on a single class.", "author": "tiagodolphine", "createdAt": "2020-03-18T16:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzc3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzODQxNw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394138417", "bodyText": "isn't this sort of cyclic dependency? I know it might not be strictly cyclic dependency but feel wrong to have the starter here...", "author": "mswiderski", "createdAt": "2020-03-18T07:00:34Z", "path": "kogito-codegen/pom.xml", "diffHunk": "@@ -127,5 +127,15 @@\n       <artifactId>mockito-core</artifactId>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-junit-jupiter</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-springboot-starter</artifactId>", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MTk1NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394491954", "bodyText": "yeah... this was added due to the testing part when generating the Spring-based code, we need at least the API dependency on the test scope but it is not necessary to use the starter.", "author": "tiagodolphine", "createdAt": "2020-03-18T16:46:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzODQxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjcyNQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394502725", "bodyText": "For some reason it is only used for tests. Maybe that's ok?", "author": "MarianMacik", "createdAt": "2020-03-18T17:02:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzODQxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIwMzA4Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r397203083", "bodyText": "inserted the spring api dependency instead of kogito spring boot starter, and yes only on the test scope.", "author": "tiagodolphine", "createdAt": "2020-03-24T14:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzODQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzODQ5OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394138499", "bodyText": "I really like this one!!!!!", "author": "mswiderski", "createdAt": "2020-03-18T07:00:49Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ResourceGeneratorFactory.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen;\n+\n+import java.util.Arrays;\n+import java.util.NoSuchElementException;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import org.kie.api.definition.process.WorkflowProcess;\n+import org.kie.kogito.codegen.context.KogitoBuildContext;\n+import org.kie.kogito.codegen.context.QuarkusKogitoBuildContext;\n+import org.kie.kogito.codegen.context.SpringBootKogitoBuildContext;\n+import org.kie.kogito.codegen.process.AbstractResourceGenerator;\n+import org.kie.kogito.codegen.process.ReactiveResourceGenerator;\n+import org.kie.kogito.codegen.process.ResourceGenerator;\n+import org.kie.kogito.codegen.process.SpringResourceGenerator;\n+\n+public class ResourceGeneratorFactory {\n+\n+    private enum GeneratorType {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MjA5Mg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394492092", "bodyText": ":)", "author": "tiagodolphine", "createdAt": "2020-03-18T16:46:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzODQ5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzOTIxMQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394139211", "bodyText": "is this complete copy of the test? if so why this is not being reused ...", "author": "mswiderski", "createdAt": "2020-03-18T07:03:03Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/MessageStartEventTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.assertj.core.api.Condition;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.Application;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.codegen.AbstractCodegenTest;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.ProcessInstance;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+public class MessageStartEventTest extends AbstractCodegenTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MzMxOQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394493319", "bodyText": "oops, my bad, I forgot to apply the spring context for this test, like the other classes.", "author": "tiagodolphine", "createdAt": "2020-03-18T16:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzOTIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzOTQ2Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394139463", "bodyText": "is this really needed? since the generators don't produce JAXRS annotated spring beans then this starter is of no use I believe.", "author": "mswiderski", "createdAt": "2020-03-18T07:03:52Z", "path": "kogito-springboot/kogito-resteasy-springboot-starter/pom.xml", "diffHunk": "@@ -0,0 +1,20 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-springboot</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <artifactId>kogito-resteasy-springboot-starter</artifactId>\n+  <name>Kogito RESTEasy SpringBoot Starter</name>\n+  <description>Kogito RESTEasy SpringBoot Starter</description>", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTQ4OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394495489", "bodyText": "Well it is needed because for now this PR only incorporates the endpoints code gen for Processes but it is still missing Rules and Decisions endpoints generation, that's why it is necessary to not break them.\nThis is a point I'm talking with @evacchi and @cristianonicolai to see how can we proceed, but probably we will work on them on different PRs/Jiras.", "author": "tiagodolphine", "createdAt": "2020-03-18T16:51:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzOTQ2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MDE5Mg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394890192", "bodyText": "would be good to make this before next release so this is no deployed to maven central as it will just cause confusion.", "author": "mswiderski", "createdAt": "2020-03-19T09:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzOTQ2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIwNDA3OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r397204078", "bodyText": "removed this module keeping only the current one, since we decided to postpone the code gen for Spring APIs after dev preview, now it will be merged but keeping the current behavior only with JAX-RS.", "author": "tiagodolphine", "createdAt": "2020-03-24T14:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzOTQ2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4NjAyNA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394486024", "bodyText": "Probably not needed here?", "author": "MarianMacik", "createdAt": "2020-03-18T16:37:40Z", "path": "kogito-codegen/src/main/resources/class-templates/RestResourceTemplate.java", "diffHunk": "@@ -27,6 +27,7 @@\n import org.kie.kogito.process.ProcessInstanceExecutionException;\n import org.kie.kogito.process.WorkItem;\n import org.kie.kogito.process.workitem.Policy;\n+import org.kie.kogito.process.impl.Sig;", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg4ODMzNQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394888335", "bodyText": "in case there are signals in the process this will be needed as the SignalTemplate methods will be appended to here", "author": "mswiderski", "createdAt": "2020-03-19T09:22:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4NjAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk1OTA4MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394959080", "bodyText": "yeah, that is the reason", "author": "tiagodolphine", "createdAt": "2020-03-19T11:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4NjAyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4ODM2Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394488366", "bodyText": "Import probably not needed?", "author": "MarianMacik", "createdAt": "2020-03-18T16:41:05Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/AbstractCodegenTest.java", "diffHunk": "@@ -37,13 +38,16 @@\n import org.drools.compiler.rule.builder.dialect.java.JavaDialectConfiguration;\n import org.kie.kogito.Application;\n import org.kie.kogito.codegen.context.KogitoBuildContext;\n+import org.kie.kogito.codegen.context.QuarkusKogitoBuildContext;\n+import org.kie.kogito.codegen.context.SpringBootKogitoBuildContext;\n import org.kie.kogito.codegen.decision.DecisionCodegen;\n import org.kie.kogito.codegen.process.ProcessCodegen;\n import org.kie.kogito.codegen.rules.IncrementalRuleCodegen;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.InstanceOfAssertFactories.OPTIONAL;", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk1ODg3MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394958871", "bodyText": "+1", "author": "tiagodolphine", "createdAt": "2020-03-19T11:28:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4ODM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MDk3OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394490978", "bodyText": "Why do we need lenient stubbing here?", "author": "MarianMacik", "createdAt": "2020-03-18T16:44:57Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/ResourceGeneratorFactoryTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen;\n+\n+import java.util.NoSuchElementException;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.api.definition.process.WorkflowProcess;\n+import org.kie.kogito.codegen.context.QuarkusKogitoBuildContext;\n+import org.kie.kogito.codegen.context.SpringBootKogitoBuildContext;\n+import org.kie.kogito.codegen.process.AbstractResourceGenerator;\n+import org.kie.kogito.codegen.process.ReactiveResourceGenerator;\n+import org.kie.kogito.codegen.process.ResourceGenerator;\n+import org.kie.kogito.codegen.process.SpringResourceGenerator;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.lenient;\n+import static org.mockito.Mockito.when;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ResourceGeneratorFactoryTest {\n+\n+    public static final String MODEL_FQCN = \"modelfqcn\";\n+    public static final String PROCESS_FQCN = \"processfqcn\";\n+    public static final String APP_CANONICAL_NAME = \"appCanonicalName\";\n+\n+    private ResourceGeneratorFactory tested;\n+\n+    @Mock\n+    private WorkflowProcess process;\n+\n+    @BeforeEach\n+    public void setUp() {\n+        lenient().when(process.getId()).thenReturn(\"process.id\");\n+        lenient().when(process.getPackageName()).thenReturn(\"name.process\");", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIwNDkwNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r397204906", "bodyText": "because the mocking is not used on all methods, so to skip the validation.", "author": "tiagodolphine", "createdAt": "2020-03-24T14:40:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MDk3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MzgxNQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394493815", "bodyText": "AFAIK this should end with Test suffix.", "author": "MarianMacik", "createdAt": "2020-03-18T16:49:09Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/BusinessRuleTaskTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.BusinessRuleTaskTest;\n+\n+public class BusinessRuleTaskTestSpring extends BusinessRuleTaskTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMyNDMzNg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r397324336", "bodyText": "renamed.", "author": "tiagodolphine", "createdAt": "2020-03-24T17:14:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MzgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDAxOQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494019", "bodyText": "Same here.", "author": "MarianMacik", "createdAt": "2020-03-18T16:49:26Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/BusinessRuleUnitTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.BusinessRuleUnitTest;\n+\n+public class BusinessRuleUnitTestSpring extends BusinessRuleUnitTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDE3NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494174", "bodyText": "Here.", "author": "MarianMacik", "createdAt": "2020-03-18T16:49:39Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/CallActivityTaskTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.CallActivityTaskTest;\n+\n+public class CallActivityTaskTestSpring extends CallActivityTaskTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDM2OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494369", "bodyText": "Same.", "author": "MarianMacik", "createdAt": "2020-03-18T16:49:58Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/EmbeddedSubProcessTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.EmbeddedSubProcessTest;\n+\n+public class EmbeddedSubProcessTestSpring extends EmbeddedSubProcessTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDQ2MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494460", "bodyText": "Same.", "author": "MarianMacik", "createdAt": "2020-03-18T16:50:06Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/EventSubProcessTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.EventSubProcessTest;\n+\n+public class EventSubProcessTestSpring extends EventSubProcessTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDU4OQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494589", "bodyText": "Same.", "author": "MarianMacik", "createdAt": "2020-03-18T16:50:18Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/GatewayTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.GatewayTest;\n+\n+public class GatewayTestSpring extends GatewayTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTMwMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394495303", "bodyText": "Same.", "author": "MarianMacik", "createdAt": "2020-03-18T16:51:14Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/InvalidProcessTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.InvalidProcessTest;\n+\n+public class InvalidProcessTestSpring extends InvalidProcessTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMyNDQxMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r397324413", "bodyText": "renamed.", "author": "tiagodolphine", "createdAt": "2020-03-24T17:14:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTMwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTM3Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394495377", "bodyText": "Same.", "author": "MarianMacik", "createdAt": "2020-03-18T16:51:21Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/MessageIntermediateEventTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.MessageIntermediateEventTest;\n+\n+public class MessageIntermediateEventTestSpring extends MessageIntermediateEventTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMyNDQ2OA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r397324468", "bodyText": "renamed.", "author": "tiagodolphine", "createdAt": "2020-03-24T17:14:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTM3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NjA5MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394496090", "bodyText": "Same and also with other classes.", "author": "MarianMacik", "createdAt": "2020-03-18T16:52:21Z", "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/PublishEventTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.PublishEventTest;\n+\n+public class PublishEventTestSpring extends PublishEventTest {", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMyNDUzOQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r397324539", "bodyText": "renamed.", "author": "tiagodolphine", "createdAt": "2020-03-24T17:14:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NjA5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMDAwMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394500000", "bodyText": "What else is present in this starter? It seems that it has only one dependency.", "author": "MarianMacik", "createdAt": "2020-03-18T16:58:01Z", "path": "kogito-springboot/kogito-springboot-starter/pom.xml", "diffHunk": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>kogito-springboot</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>kogito-springboot-starter</artifactId>", "originalCommit": "22d11bae1d747ced03f42c131b452679f63e7726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMyNDg5NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r397324894", "bodyText": "the dependencies on the same pom and on the parent.", "author": "tiagodolphine", "createdAt": "2020-03-24T17:14:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMDAwMA=="}], "type": "inlineReview"}, {"oid": "07b69bef3041d4532ca49c46ef3829d96a68d315", "url": "https://github.com/kiegroup/kogito-runtimes/commit/07b69bef3041d4532ca49c46ef3829d96a68d315", "message": "Inserting spring web api dependency on the pom", "committedDate": "2020-03-20T14:14:59Z", "type": "forcePushed"}, {"oid": "1209a1bee507696662a4e94635056e7b1cecb09e", "url": "https://github.com/kiegroup/kogito-runtimes/commit/1209a1bee507696662a4e94635056e7b1cecb09e", "message": "Fix conflicts and fix security on endpoint generation", "committedDate": "2020-03-23T15:03:24Z", "type": "forcePushed"}, {"oid": "2872698e533b11d1503b1fe5b39606d144e26266", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2872698e533b11d1503b1fe5b39606d144e26266", "message": "Inserting unit tests and sonar fixes", "committedDate": "2020-03-24T14:17:01Z", "type": "forcePushed"}, {"oid": "a4b5d429499a02605336450351e6e852a9628bf3", "url": "https://github.com/kiegroup/kogito-runtimes/commit/a4b5d429499a02605336450351e6e852a9628bf3", "message": "Fix test errors on java 11", "committedDate": "2020-03-25T12:11:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyODI5MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399028291", "bodyText": "@tiagodolphine version.testcontainers is already defined.", "author": "cristianonicolai", "createdAt": "2020-03-27T04:25:38Z", "path": "pom.xml", "diffHunk": "@@ -131,9 +132,11 @@\n     <version.org.kie7>7.34.0.Final</version.org.kie7>\n     <version.org.reflections>0.9.11</version.org.reflections>\n     <version.org.slf4j>1.7.25</version.org.slf4j>\n-    <version.org.springframework.kafka>2.2.2.RELEASE</version.org.springframework.kafka>\n-\n     <version.testcontainers>1.12.4</version.testcontainers>\n+    <version.resteasy.springboot>4.5.0.Final</version.resteasy.springboot>\n+    <version.springboot>2.2.5.RELEASE</version.springboot>\n+    <version.spring.framework>5.2.4.RELEASE</version.spring.framework>\n+    <version.testcontainers>1.12.3</version.testcontainers>", "originalCommit": "a4b5d429499a02605336450351e6e852a9628bf3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NjQxNA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399246414", "bodyText": "great catch, it was copied by mistake.", "author": "tiagodolphine", "createdAt": "2020-03-27T13:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyODI5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1NTUyNw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399255527", "bodyText": "done", "author": "tiagodolphine", "createdAt": "2020-03-27T13:16:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyODI5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyOTczMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399029730", "bodyText": "@tiagodolphine sorry being a pita, I know in theory it should work anyway, but seems some issues with this, maybe because of the local maven cache problems we had in the past, but if you dont mind, moving the module declarion to before addons.", "author": "cristianonicolai", "createdAt": "2020-03-27T04:32:17Z", "path": "pom.xml", "diffHunk": "@@ -223,6 +226,7 @@\n     <module>kogito-maven-plugin</module>\n     <module>kogito-quarkus-extension</module>\n     <module>archetypes</module>\n+    <module>kogito-springboot</module>", "originalCommit": "a4b5d429499a02605336450351e6e852a9628bf3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NzExOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399247118", "bodyText": "np, done.", "author": "tiagodolphine", "createdAt": "2020-03-27T13:01:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyOTczMA=="}], "type": "inlineReview"}, {"oid": "8035f31a6e1a3512e587168259d10dc7d628368a", "url": "https://github.com/kiegroup/kogito-runtimes/commit/8035f31a6e1a3512e587168259d10dc7d628368a", "message": "Migrate REST code generation for spring boot to use Spring REST Controller\n\nspring boot archtype\n\nfix conflicts with master\n\naddding spring dependency\n\nFix some details during spring REST code generation\n\nFix Spring resource template\n\nadding validation for spring on rest reousrce generation\n\nrefactoring some changes on the resource generator\n\nremoving unecessry dependencies\n\nTests with spring context\n\nclear comments on template\n\nAdding test for ResourceGeneratorFactory\n\nInserting process management module for spring boot, creating new modules for spring boot starter updating kogito bom\n\nadding process management to bom\n\nApply PR comments, process-management refactoring\n\nRenaming ProcessInstanceManagementResource\n\nInserting the DefaultResourceGeneratorFactory that basically create only JAX-RS generator and removing uncessary dependencies kogito-resteasy-springboot-starter\n\nInserting spring web api dependency on the pom\n\nBaseExceptionHandler initialization fix\n\nFix sonar issues and openapi generation for process management addon\n\nFix conflicts and fix security on endpoint generation\n\nInserting unit tests and sonar fixes\n\nDisabling Spring generation codegen tests\n\nadding tests on ProcessInstanceManagementResourceTest\n\nFix test errors on java 11\n\napply pr comemnts on pom.xm", "committedDate": "2020-03-27T13:14:51Z", "type": "commit"}, {"oid": "8035f31a6e1a3512e587168259d10dc7d628368a", "url": "https://github.com/kiegroup/kogito-runtimes/commit/8035f31a6e1a3512e587168259d10dc7d628368a", "message": "Migrate REST code generation for spring boot to use Spring REST Controller\n\nspring boot archtype\n\nfix conflicts with master\n\naddding spring dependency\n\nFix some details during spring REST code generation\n\nFix Spring resource template\n\nadding validation for spring on rest reousrce generation\n\nrefactoring some changes on the resource generator\n\nremoving unecessry dependencies\n\nTests with spring context\n\nclear comments on template\n\nAdding test for ResourceGeneratorFactory\n\nInserting process management module for spring boot, creating new modules for spring boot starter updating kogito bom\n\nadding process management to bom\n\nApply PR comments, process-management refactoring\n\nRenaming ProcessInstanceManagementResource\n\nInserting the DefaultResourceGeneratorFactory that basically create only JAX-RS generator and removing uncessary dependencies kogito-resteasy-springboot-starter\n\nInserting spring web api dependency on the pom\n\nBaseExceptionHandler initialization fix\n\nFix sonar issues and openapi generation for process management addon\n\nFix conflicts and fix security on endpoint generation\n\nInserting unit tests and sonar fixes\n\nDisabling Spring generation codegen tests\n\nadding tests on ProcessInstanceManagementResourceTest\n\nFix test errors on java 11\n\napply pr comemnts on pom.xm", "committedDate": "2020-03-27T13:14:51Z", "type": "forcePushed"}]}