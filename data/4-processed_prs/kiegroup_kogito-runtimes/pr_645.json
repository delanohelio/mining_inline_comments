{"pr_number": 645, "pr_title": "KOGITO-2837 PR check: checkout all repos at once", "pr_createdAt": "2020-07-22T14:09:35Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/645", "timeline": [{"oid": "0318b367f7ea64c1a11838bd662f19ee8e964f4f", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0318b367f7ea64c1a11838bd662f19ee8e964f4f", "message": "kogito-2837 PR check: checkout all repos at once", "committedDate": "2020-07-22T14:16:47Z", "type": "forcePushed"}, {"oid": "051898d60c004326b90f51c1bd77c88649ad21de", "url": "https://github.com/kiegroup/kogito-runtimes/commit/051898d60c004326b90f51c1bd77c88649ad21de", "message": "kogito-2837 PR check: checkout all repos at once", "committedDate": "2020-07-22T14:33:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyOTgzMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/645#discussion_r459029832", "bodyText": "Maybe we can extract this to the shared libraries. But I know that it may be cumbersome to make it working (yet another PR, waiting for merge...)", "author": "MarianMacik", "createdAt": "2020-07-22T19:25:14Z", "path": "Jenkinsfile", "diffHunk": "@@ -21,88 +21,91 @@ pipeline {\n         MAVEN_OPTS = '-Xms1024m -Xmx4g'\n     }\n     stages {\n-        stage('build sh script') {\n+        stage('Initialize') {\n             steps {\n                 script {\n                     mailer.buildLogScriptPR()\n+\n+                    checkoutRepo(\"kogito-runtimes\")\n+                    checkoutRepo(\"kogito-apps\")\n+                    checkoutRepo(\"kogito-examples\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-persistence\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-events\")\n                 }\n             }\n         }\n         stage('Build kogito-runtimes') {\n             steps {\n-                dir(\"kogito-runtimes\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-runtimes', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Prun-code-coverage', false)\n-                        /*\n-                           The analysis must happen before the other stages as these clone different projects into a root\n-                           directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n-                         */\n-                        maven.runMavenWithSubmarineSettings('-e -nsu validate -Psonarcloud-analysis', false)\n-                    }\n+                script {\n+                    mavenInstall(\"kogito-runtimes\", false, [\"run-code-coverage\"])\n+                    /*\n+                    The analysis must happen before the other stages as these clone different projects into a root\n+                    directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n+                    */\n+                    mavenInstall(\"kogito-runtimes\", false, [\"sonarcloud-analysis\"], \"-e -nsu validate\")\n                 }\n             }\n         }\n         stage('Build kogito-apps') {\n             steps {\n-                dir(\"kogito-apps\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-apps', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install', false)\n-                    }\n-                }\n+                mavenInstall(\"kogito-apps\")\n             }\n         }\n         stage('Build kogito-examples') {\n             steps {\n-                dir(\"kogito-examples\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-examples', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install', false)\n-                    }\n-                }\n-                // Use a separate dir for persistence to not overwrite the test results\n-                dir(\"kogito-examples-persistence\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-examples', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Ppersistence', false)\n-                    }\n-                }\n-                // Use a separate dir for events to not overwrite the test results\n-                dir(\"kogito-examples-events\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-examples', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Pevents', false)\n-                    }\n-                }\n+                mavenInstall(\"kogito-examples\")\n+            }\n+        }\n+        stage('Build kogito-examples with persistence') {\n+            steps {\n+                mavenInstall(\"kogito-examples-persistence\", false, [\"persistence\"])\n+            }\n+        }\n+        stage('Build kogito-examples with events') {\n+            steps {\n+                mavenInstall(\"kogito-examples-events\", false, [\"events\"])\n             }\n         }\n     }\n     post {\n         always {\n             sh '$WORKSPACE/trace.sh'\n             junit '**/target/surefire-reports/**/*.xml, **/target/failsafe-reports/**/*.xml'\n+            cleanWs()\n         }\n         failure {\n             script {\n                 mailer.sendEmail_failedPR()\n             }\n-            cleanWs()\n         }\n         unstable {\n             script {\n                 mailer.sendEmail_unstablePR()\n             }\n-            cleanWs()\n         }\n         fixed {\n             script {\n                 mailer.sendEmail_fixedPR()\n             }\n-            cleanWs()\n-        }\n-        success {\n-            cleanWs()\n         }\n     }\n }\n+\n+void checkoutRepo(String repo, String dirName=repo) {\n+    dir(dirName) {\n+        githubscm.checkoutIfExists(repo, changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n+    }\n+}\n+\n+void mavenInstall(String directory, boolean skipTests = true, String[] profiles,  String extraArgs = \"\") {", "originalCommit": "051898d60c004326b90f51c1bd77c88649ad21de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0MjMwOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/645#discussion_r459242308", "bodyText": "The method is quite specific, and we could need more and more parameters for the different projects.\nI think the base shared lib is ok. Each project can then adapt.", "author": "radtriste", "createdAt": "2020-07-23T06:40:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyOTgzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzMzI5Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/645#discussion_r459033293", "bodyText": "Does this need to be in the script step? I noticed that others are not.", "author": "MarianMacik", "createdAt": "2020-07-22T19:31:47Z", "path": "Jenkinsfile", "diffHunk": "@@ -21,88 +21,91 @@ pipeline {\n         MAVEN_OPTS = '-Xms1024m -Xmx4g'\n     }\n     stages {\n-        stage('build sh script') {\n+        stage('Initialize') {\n             steps {\n                 script {\n                     mailer.buildLogScriptPR()\n+\n+                    checkoutRepo(\"kogito-runtimes\")\n+                    checkoutRepo(\"kogito-apps\")\n+                    checkoutRepo(\"kogito-examples\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-persistence\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-events\")\n                 }\n             }\n         }\n         stage('Build kogito-runtimes') {\n             steps {\n-                dir(\"kogito-runtimes\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-runtimes', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Prun-code-coverage', false)\n-                        /*\n-                           The analysis must happen before the other stages as these clone different projects into a root\n-                           directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n-                         */\n-                        maven.runMavenWithSubmarineSettings('-e -nsu validate -Psonarcloud-analysis', false)\n-                    }\n+                script {\n+                    mavenInstall(\"kogito-runtimes\", false, [\"run-code-coverage\"])\n+                    /*\n+                    The analysis must happen before the other stages as these clone different projects into a root\n+                    directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n+                    */\n+                    mavenInstall(\"kogito-runtimes\", false, [\"sonarcloud-analysis\"], \"-e -nsu validate\")", "originalCommit": "051898d60c004326b90f51c1bd77c88649ad21de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4MjQ4Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/645#discussion_r459282487", "bodyText": "nope, I moved it outside in the end ;)", "author": "radtriste", "createdAt": "2020-07-23T08:12:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzMzI5Mw=="}], "type": "inlineReview"}, {"oid": "e60dd3c48c436363aede455bf7fae60caa76ab71", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e60dd3c48c436363aede455bf7fae60caa76ab71", "message": "kogito-2837 PR check: checkout all repos at once", "committedDate": "2020-07-23T06:42:53Z", "type": "forcePushed"}, {"oid": "1111145d620af53cb2af0d784723a6060e9aa78d", "url": "https://github.com/kiegroup/kogito-runtimes/commit/1111145d620af53cb2af0d784723a6060e9aa78d", "message": "kogito-2837 PR check: checkout all repos at once", "committedDate": "2020-07-23T07:00:18Z", "type": "forcePushed"}, {"oid": "c9f138eb1f15fd3f36c7c7d576cb452511fc81a9", "url": "https://github.com/kiegroup/kogito-runtimes/commit/c9f138eb1f15fd3f36c7c7d576cb452511fc81a9", "message": "kogito-2837 PR check: checkout all repos at once", "committedDate": "2020-07-23T07:14:41Z", "type": "forcePushed"}, {"oid": "f30692c473f11cd4d20745681f637b4200ea2e66", "url": "https://github.com/kiegroup/kogito-runtimes/commit/f30692c473f11cd4d20745681f637b4200ea2e66", "message": "kogito-2837 PR check: checkout all repos at once", "committedDate": "2020-07-23T07:45:58Z", "type": "forcePushed"}, {"oid": "e830bd78f81f6815dfb8489c0aaf7a09a083c492", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e830bd78f81f6815dfb8489c0aaf7a09a083c492", "message": "kogito-2837 PR check: checkout all repos at once", "committedDate": "2020-07-23T08:12:31Z", "type": "forcePushed"}, {"oid": "27de6549fc3b7b07838ca90d633f5e99a11eb332", "url": "https://github.com/kiegroup/kogito-runtimes/commit/27de6549fc3b7b07838ca90d633f5e99a11eb332", "message": "kogito-2837 PR check: checkout all repos at once", "committedDate": "2020-07-23T09:39:34Z", "type": "commit"}, {"oid": "27de6549fc3b7b07838ca90d633f5e99a11eb332", "url": "https://github.com/kiegroup/kogito-runtimes/commit/27de6549fc3b7b07838ca90d633f5e99a11eb332", "message": "kogito-2837 PR check: checkout all repos at once", "committedDate": "2020-07-23T09:39:34Z", "type": "forcePushed"}]}