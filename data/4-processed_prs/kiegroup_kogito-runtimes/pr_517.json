{"pr_number": 517, "pr_title": "[KOGITO-2202] avoid use of quarkus deprecated methods in quarkus exte\u2026", "pr_createdAt": "2020-05-19T15:32:44Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/517", "timeline": [{"oid": "5ec61eb7eb19dc293382d88a55c96c1ff78838b8", "url": "https://github.com/kiegroup/kogito-runtimes/commit/5ec61eb7eb19dc293382d88a55c96c1ff78838b8", "message": "[KOGITO-2202] avoid use of quarkus deprecated methods in quarkus extension", "committedDate": "2020-05-19T15:31:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5MDA1Mg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/517#discussion_r427790052", "bodyText": "what happened to Path basePath ? was it unused? Why is the Collection now a list?", "author": "evacchi", "createdAt": "2020-05-20T07:15:42Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionContainerGenerator.java", "diffHunk": "@@ -55,15 +53,13 @@\n     private static final String TEMPLATE_JAVA = \"/class-templates/DMNApplicationClassDeclTemplate.java\";\n \n     private String applicationCanonicalName;\n-    private final Path basePath;\n-    private final Collection<DMNModel> models;\n+    private final List<DMNResource> resources;\n     private boolean useTracing = false;\n \n-    public DecisionContainerGenerator(String applicationCanonicalName, Path basePath, Collection<DMNModel> models) {\n+    public DecisionContainerGenerator(String applicationCanonicalName, List<DMNResource> resources) {", "originalCommit": "5ec61eb7eb19dc293382d88a55c96c1ff78838b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODQyMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/517#discussion_r427898422", "bodyText": "@evacchi I discussed this change with @tarilabs. Now we can have multiple paths, so a DMNResource is basically a Pair<Path, DMNModel>. In this way you know from which path each model has been created and this should also answer to the question you made on the other comment.", "author": "mariofusco", "createdAt": "2020-05-20T10:16:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5MDA1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5MDIzMw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/517#discussion_r427790233", "bodyText": "are you sure this will always work?", "author": "evacchi", "createdAt": "2020-05-20T07:16:04Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionContainerGenerator.java", "diffHunk": "@@ -91,9 +87,9 @@ public ClassOrInterfaceDeclaration classDeclaration() {\n         ClassOrInterfaceDeclaration typeDeclaration = (ClassOrInterfaceDeclaration) clazz.getTypes().get(0);\n         ClassOrInterfaceType applicationClass = StaticJavaParser.parseClassOrInterfaceType(applicationCanonicalName);\n         ClassOrInterfaceType inputStreamReaderClass = StaticJavaParser.parseClassOrInterfaceType(java.io.InputStreamReader.class.getCanonicalName());\n-        for (DMNModel model : models) {\n-            Path sourcePath = Paths.get(model.getResource().getSourcePath());\n-            Path relativizedPath = basePath.relativize(sourcePath);\n+        for (DMNResource resource : resources) {\n+            Path sourcePath = Paths.get(resource.getDmnModel().getResource().getSourcePath());\n+            Path relativizedPath = resource.getPath().relativize(sourcePath);", "originalCommit": "5ec61eb7eb19dc293382d88a55c96c1ff78838b8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d87eab3e7c6b8514cd235de92c4928f95e6abff", "url": "https://github.com/kiegroup/kogito-runtimes/commit/5d87eab3e7c6b8514cd235de92c4928f95e6abff", "message": "wip", "committedDate": "2020-05-20T16:58:31Z", "type": "commit"}, {"oid": "04df7d809e80a5d709e16632385010886b62dc7b", "url": "https://github.com/kiegroup/kogito-runtimes/commit/04df7d809e80a5d709e16632385010886b62dc7b", "message": "Merge branch 'master' into k2202", "committedDate": "2020-05-20T17:32:01Z", "type": "commit"}]}