{"pr_number": 4594, "pr_title": "CUSTCOM-130 Better compatibility of docker images", "pr_createdAt": "2020-03-27T09:01:14Z", "pr_url": "https://github.com/payara/Payara/pull/4594", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMjg2OA==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399122868", "bodyText": "As in other Dockerfiles, despite it uses same directory here", "author": "dmatej", "createdAt": "2020-03-27T09:07:46Z", "path": "appserver/extras/docker-images/micro/src/main/docker/Dockerfile", "diffHunk": "@@ -4,20 +4,21 @@ FROM @docker.java.image@\n EXPOSE 6900 8080\n \n # Configure environment variables\n-ENV PAYARA_HOME=/opt/payara\\\n+ENV HOME_DIR=/opt/payara", "originalCommit": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEzMzU3NQ==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399133575", "bodyText": "The change of the ENV name will affect all users who extend our images and possible require them to adjust their dockerfiles.", "author": "rdebusscher", "createdAt": "2020-03-27T09:26:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMjg2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE4ODg3Nw==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399188877", "bodyText": "In this release is much more breaking changes in docker files, so I think it is a good oportunity to synchronize behavior of all images to same principles and provide documentation about how things work.\nBut then it would be good to use also same directory structure in all three Dockerfiles.", "author": "dmatej", "createdAt": "2020-03-27T11:07:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMjg2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIxOTE1Mg==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404219152", "bodyText": "Seems that other changes are not so much breaking as I thought, so I brought  the PAYARA_HOME back to life here.", "author": "dmatej", "createdAt": "2020-04-06T16:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMjg2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMzI0MQ==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399123241", "bodyText": "Evil block - this works in alpine, debian and ubuntu", "author": "dmatej", "createdAt": "2020-03-27T09:08:27Z", "path": "appserver/extras/docker-images/micro/src/main/docker/Dockerfile", "diffHunk": "@@ -4,20 +4,21 @@ FROM @docker.java.image@\n EXPOSE 6900 8080\n \n # Configure environment variables\n-ENV PAYARA_HOME=/opt/payara\\\n+ENV HOME_DIR=/opt/payara\n+ENV PAYARA_DIR=${HOME_DIR} \\\n     DEPLOY_DIR=/opt/payara/deployments\n \n # Create and set the Payara user and working directory owned by the new user\n RUN true \\\n-    && addgroup payara \\\n-    && adduser -D -h ${PAYARA_HOME} -H -s /bin/bash payara -G payara \\\n+    && addgroup --gid 1000 payara \\", "originalCommit": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMTU4Mw==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399121583", "bodyText": "Unless there is special reason for that, we should keep single add and thus single intermediate image.", "author": "pdudits", "createdAt": "2020-03-27T09:05:23Z", "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -29,25 +29,25 @@ ENV PATH=\"${PATH}:${PAYARA_DIR}/bin\"\n ARG TINI_VERSION=v0.18.0\n \n # Download tini\n-ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n-    https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /\n+ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\n+ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /tini.asc", "originalCommit": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMzE0Mw==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399203143", "bodyText": "We use --no-cache, so layers are not cached and used.\nAnd also docker does not mention this as allowed in documentation, I found only a merged PR where it was implemented somehow. So I would rather avoid it.\nThe RUN command is different case, it is in all examples and each execution can make many changes.\nhttps://stackoverflow.com/questions/35594987/how-to-force-docker-for-a-clean-build-of-an-image\nfabric8io/docker-maven-plugin#348", "author": "dmatej", "createdAt": "2020-03-27T11:36:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMTU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxNTA2NA==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399215064", "bodyText": "https://docs.docker.com/engine/reference/builder/#add\nADD [--chown=<user>:<group>] <src>... <dest>\nNote the ellipsis.", "author": "pdudits", "createdAt": "2020-03-27T12:00:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMTU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyODg5MA==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399228890", "bodyText": "OK, you win. I don't know why my brain ignored it :D", "author": "dmatej", "createdAt": "2020-03-27T12:28:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMTU4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEzMjg0OA==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399132848", "bodyText": "Since this is source of majority of build failures, I'd propose specific exit code (until we implement different issue for taking this away completely from main build).\nLike (gpg --recvkeys... || exit 55)", "author": "pdudits", "createdAt": "2020-03-27T09:25:20Z", "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -29,25 +29,25 @@ ENV PATH=\"${PATH}:${PAYARA_DIR}/bin\"\n ARG TINI_VERSION=v0.18.0\n \n # Download tini\n-ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n-    https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /\n+ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\n+ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /tini.asc\n \n RUN true \\\n     # Install dependencies\n     && apt-get update \\\n-    && apt-get install -y coreutils gpg \\\n+    && apt-get install -y gpg \\\n     && rm -rf /var/lib/apt/lists/* \\\n     # Create and set the Payara user and working directory owned by the new user\n-    && groupadd --gid 1000 payara \\\n-    && useradd -u 1000 -M -s /bin/bash -d ${HOME_DIR} payara -g payara \\\n+    && addgroup --gid 1000 payara \\\n+    && adduser --system --uid 1000 --no-create-home --shell /bin/bash --home \"${HOME_DIR}\" --gecos \"\" --ingroup payara payara \\\n     && echo payara:payara | chpasswd \\\n     && mkdir -p ${DEPLOY_DIR} \\\n     && mkdir -p ${CONFIG_DIR} \\\n     && mkdir -p ${SCRIPT_DIR} \\\n     && chown -R payara: ${HOME_DIR} \\\n     # Verify tini\n-    && gpg --batch --keyserver \"hkp://ipv4.pool.sks-keyservers.net\" --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \\\n-    && gpg --batch --verify /tini.asc /tini \\\n+    && gpg --verbose --keyserver @docker.keyserver.url@ --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \\", "originalCommit": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMDIzOQ==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399200239", "bodyText": "We already discussed it - exit codes are not much helpful when you don't remember what they mean. So until somebody would provide such code (for cycle?),\n--verbose + -Ddocker.verbose is more helpful as it directly prints what it tried to do and why it failed.", "author": "dmatej", "createdAt": "2020-03-27T11:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEzMjg0OA=="}], "type": "inlineReview"}, {"oid": "b26978beb8c82d4f9a559cc4a23124347ee87385", "url": "https://github.com/payara/Payara/commit/b26978beb8c82d4f9a559cc4a23124347ee87385", "message": "CUSTCOM-130 PAYARA_HOME is back - for backward compatibility", "committedDate": "2020-04-06T15:53:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxNjYyNA==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404616624", "bodyText": "Just my 2 cents: I added tini in the full server image because any shell is not a proper init daemon. You might argue that Docker can use a tini-wrapper, but IMHO it should be done within the image, as there are more container and orchestration environments, which don't wrap it.", "author": "poikilotherm", "createdAt": "2020-04-07T08:07:39Z", "path": "appserver/extras/docker-images/micro/src/main/docker/Dockerfile", "diffHunk": "@@ -4,23 +4,29 @@ FROM @docker.java.image@\n EXPOSE 6900 8080\n \n # Configure environment variables\n-ENV PAYARA_HOME=/opt/payara\\\n-    DEPLOY_DIR=/opt/payara/deployments\n+# PAYARA_HOME is deprecated - it is here for backward compatibility\n+ENV PAYARA_HOME=/opt/payara\n+ENV HOME_DIR=${PAYARA_HOME}\n+ENV PAYARA_DIR=${HOME_DIR} \\\n+    DEPLOY_DIR=/opt/payara/deployments \\\n+    JVM_ARGS=\"\" \\\n+    MEM_MAX_RAM_PERCENTAGE=70.0 \\\n+    MEM_XSS=512k\n \n # Create and set the Payara user and working directory owned by the new user\n RUN true \\\n-    && addgroup payara \\\n-    && adduser -D -h ${PAYARA_HOME} -H -s /bin/bash payara -G payara \\\n+    && addgroup --gid 1000 payara \\\n+    && adduser --system --uid 1000 --no-create-home --shell /bin/bash --home \"${HOME_DIR}\" --gecos \"\" --ingroup payara payara \\\n     && echo payara:payara | chpasswd \\\n     && mkdir -p ${DEPLOY_DIR}  \\\n-    && chown -R payara:payara ${PAYARA_HOME} \\\n+    && chown -R payara:payara ${HOME_DIR} \\\n     && true\n \n USER payara\n-WORKDIR ${PAYARA_HOME}\n+WORKDIR ${HOME_DIR}\n \n COPY maven/artifacts/payara-micro.jar .\n \n # Default command to run\n-ENTRYPOINT [\"java\", \"-XX:+UseContainerSupport\", \"-XX:MaxRAMPercentage=90.0\", \"-jar\", \"payara-micro.jar\"]\n+ENTRYPOINT [\"sh\", \"-c\", \"java -XX:MaxRAMPercentage=${MEM_MAX_RAM_PERCENTAGE} -Xss${MEM_XSS} -XX:+UseContainerSupport ${JVM_ARGS} -jar payara-micro.jar\"]", "originalCommit": "b24088d046dfd8414e676b696bab4e56039b9ca9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY4MDgxMA==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404680810", "bodyText": "We use signed tini in the server-full and I have to admit I don't like it from two reasons:\n\ngpg used to sign tini crashes builds from time to time and makes them much slower.\nyesterday I found that it ignores system signals, I'm not sure if it is caused by tini usage or not. But I think we should target these things in standalone issue and stop extending this, because this was originally targeting only better usability and compatibility.\n\nThe shell here is only because environment options are not resolved without it.\nGenerally I agree that all docker files should use same principles only customized to their own usage.", "author": "dmatej", "createdAt": "2020-04-07T09:49:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxNjYyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxODU2MQ==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404618561", "bodyText": "If you guys don't want gpg et al in the resulting image, this could as well be done in a multistage build step. This might also be charming as it could be cached for later builds, avoiding build failures.", "author": "poikilotherm", "createdAt": "2020-04-07T08:10:44Z", "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -35,26 +37,26 @@ ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n RUN true \\\n     # Install dependencies\n     && apt-get update \\\n-    && apt-get install -y coreutils gpg \\\n+    && apt-get install -y gpg \\\n     && rm -rf /var/lib/apt/lists/* \\\n     # Create and set the Payara user and working directory owned by the new user\n-    && groupadd --gid 1000 payara \\\n-    && useradd -u 1000 -M -s /bin/bash -d ${HOME_DIR} payara -g payara \\\n+    && addgroup --gid 1000 payara \\\n+    && adduser --system --uid 1000 --no-create-home --shell /bin/bash --home \"${HOME_DIR}\" --gecos \"\" --ingroup payara payara \\\n     && echo payara:payara | chpasswd \\\n     && mkdir -p ${DEPLOY_DIR} \\\n     && mkdir -p ${CONFIG_DIR} \\\n     && mkdir -p ${SCRIPT_DIR} \\\n     && chown -R payara: ${HOME_DIR} \\\n     # Verify tini", "originalCommit": "b24088d046dfd8414e676b696bab4e56039b9ca9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY4MzM1NQ==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404683355", "bodyText": "Caches are disabled in this build, but this leads me to a question - is it possible to tell docker to use cache only for some stage?\nEnabled cache lead few versions back to the state where docker image of 5.194 contained 5.193 inside it.", "author": "dmatej", "createdAt": "2020-04-07T09:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxODU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1MzE2Mw==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r410853163", "bodyText": "Now it should be better - I created separate module for the shared basic image. Only the micro has it's own, because it is based on alpine.", "author": "dmatej", "createdAt": "2020-04-19T08:41:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxODU2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyMjI4MQ==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404622281", "bodyText": "-XX\\:+UseCGroupMemoryLimitForHeap is deprecated since Java 10, it has been superseded by -XX\\:+UseContainerSupport (which is backported to Java 8u192+ and enabled by default). IMHO it should be removed, together with -XX\\:+UnlockExperimentalVMOptions.", "author": "poikilotherm", "createdAt": "2020-04-07T08:16:40Z", "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -66,14 +68,13 @@ RUN true \\\n     && ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} start-domain ${DOMAIN_NAME} \\\n     && ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} enable-secure-admin \\\n     && for MEMORY_JVM_OPTION in \\\n-       $(${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} list-jvm-options | grep \"Xm[sx]\"); \\\n+       $(${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} list-jvm-options | grep \"Xm[sx]\\|Xss\"); \\\n        do\\\n          ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} delete-jvm-options $MEMORY_JVM_OPTION;\\\n        done \\\n-    # FIXME: when upgrading this container to Java 10+, this needs to be changed to\n-    #        '-XX:+UseContainerSupport' and '-XX:MaxRAMPercentage'\n     && ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} create-jvm-options \\\n-      '-XX\\:+UnlockExperimentalVMOptions:-XX\\:+IgnoreUnrecognizedVMOptions:-XX\\:+UseCGroupMemoryLimitForHeap:-XX\\:MaxRAMFraction=1' \\\n+      '-XX\\:+UnlockExperimentalVMOptions:-XX\\:+IgnoreUnrecognizedVMOptions:-XX\\:+UseCGroupMemoryLimitForHeap:-XX\\:+UseContainerSupport:-XX\\:MaxRAMPercentage=${ENV=MEM_MAX_RAM_PERCENTAGE}:-Xss${ENV=MEM_XSS}' \\", "originalCommit": "b24088d046dfd8414e676b696bab4e56039b9ca9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5MTM3NA==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404691374", "bodyText": "You're right, just to document it:\n\nhttps://bugs.openjdk.java.net/browse/JDK-8196595\nhttps://bugs.openjdk.java.net/browse/JDK-8146115", "author": "dmatej", "createdAt": "2020-04-07T10:06:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyMjI4MQ=="}], "type": "inlineReview"}, {"oid": "e4869d1cab50d98328b1af3a3b123ddb7caa4652", "url": "https://github.com/payara/Payara/commit/e4869d1cab50d98328b1af3a3b123ddb7caa4652", "message": "CUSTCOM-130 Fixed incompatibility with debian-based docker images\n\n- adduser has different syntax in each distribution", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "3295116d4a6a3c3a5804afc31d295854021db890", "url": "https://github.com/payara/Payara/commit/3295116d4a6a3c3a5804afc31d295854021db890", "message": "CUSTCOM-130 Better work with gpg\n\n- it often fails, so you can use only -Ddocker.verbose to watch what it does\n  and to see why it failed.\n- the url is not filtered from pom.xml file, so you can use another url\n  ie. -Ddocker.keyserver.url=hkp://ipv4.pool.sks-keyservers.net\n  or  -Ddocker.keyserver.url=hkp://p80.pool.sks-keyservers.net:80", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "75a593936cf8150b391cacd24240dc5d6d7767db", "url": "https://github.com/payara/Payara/commit/75a593936cf8150b391cacd24240dc5d6d7767db", "message": "CUSTCOM-130 Upgraded TestContainers and removed unused imports from test", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "dc345f88ebe97866f5084d8649020a54c54135c7", "url": "https://github.com/payara/Payara/commit/dc345f88ebe97866f5084d8649020a54c54135c7", "message": "CUSTCOM-130 Synchronized Dockerfiles and compatible adduser\n\n- all dockerfiles use same mechanisms and conventions\n- useradd and groupadd are not in alpine by default\n- adduser and addgroup abbreviated parameters are ambiguous on debian/ubuntu\n- => removed coreutils dependency, using adduser and addgroup with long params\n- it is also a bit faster\n- tested with\n  - mvn clean install -PBuildExtras,BuildDockerImages -pl :docker-images -amd\n  - mvn clean install -PBuildExtras,BuildDockerImages -pl :docker-images -amd\n    -Ddocker.java.repository=adoptopenjdk/openjdk11\n    -Ddocker.java.tag=x86_64-debian-jdk-11.0.5_10", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "752c21e8ae7a9280e39a9a9122512ceae34a1ce9", "url": "https://github.com/payara/Payara/commit/752c21e8ae7a9280e39a9a9122512ceae34a1ce9", "message": "CUSTCOM-130 MaxRAMFraction replaced by UseContainerSupport+MaxRAMPercentage\n\n- it was already used in micro\n- JDK8 supports it since u191 too", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "877095e20bed45fe8b63e2dd5ecc6ccc5f4f8ed0", "url": "https://github.com/payara/Payara/commit/877095e20bed45fe8b63e2dd5ecc6ccc5f4f8ed0", "message": "CUSTCOM-130 Payara4 images support\n\n- difference is only in two properties, so you have to specify:\n  - docker.payara.rootDirectoryName - payara5/payara41\n  - payara.version - 5.202-SNAPSHOT/4.1.2.191.13-SNAPSHOT\n  - and usually also dockerfile.tag - 5.202-20200402 etc", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "97f03a7afde3cc45d66a15d5a8f12016db8c027b", "url": "https://github.com/payara/Payara/commit/97f03a7afde3cc45d66a15d5a8f12016db8c027b", "message": "CUSTCOM-130 Do not delete older images!\n\n- it always deleted all my images in same repository", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "0538bc4523c8ff388eb15718753a6df40040000f", "url": "https://github.com/payara/Payara/commit/0538bc4523c8ff388eb15718753a6df40040000f", "message": "CUSTCOM-130 Enabled verbose logging\n\n- because especially gpg signing randomly crashes, but also apt or other\n  commands fail from time to time and you don't have anything useful in logs\n- it's not so many lines worth hiding in the name of effectivity.", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "92cd676396b16e509252770fd69eb7a28ad929cd", "url": "https://github.com/payara/Payara/commit/92cd676396b16e509252770fd69eb7a28ad929cd", "message": "CUSTCOM-130 PAYARA_HOME is back - for backward compatibility", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "010c3d0e139559b223f1b4113f7e4f8e5410e520", "url": "https://github.com/payara/Payara/commit/010c3d0e139559b223f1b4113f7e4f8e5410e520", "message": "CUSTCOM-130 Reverting ADD based on Patrik's review", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "261a3e781006a45880d4bcbbabb605c651718839", "url": "https://github.com/payara/Payara/commit/261a3e781006a45880d4bcbbabb605c651718839", "message": "CUSTCOM-130 Extended support for JVM options, especially memory settings\n\n- server-node - no changes, configuration is obtained from DAS\n- server-full and micro\n  - basic configuration for DAS\n  - MEM_MAX_RAM_PERCENTAGE aka -XX:MaxRAMPercentage\n    - 70% of host memory by default - the rest for OS+NIO+stacks\n  - MEM_XSS aka Xss\n    - default 512k; enough for most applications\n- micro\n  - JVM_ARGS - possibility to add more JVM options\n- hint for extending these docker images: read docker create --help", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "27000d9f85228e2032e16efa5d500465f549895d", "url": "https://github.com/payara/Payara/commit/27000d9f85228e2032e16efa5d500465f549895d", "message": "CUSTCOM-130 Removed obsoleted JVM options from server-full dockerfile", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "540fc57230a1f4925b2e0c75f02ed9b275b9ed3c", "url": "https://github.com/payara/Payara/commit/540fc57230a1f4925b2e0c75f02ed9b275b9ed3c", "message": "CUSTCOM-130 Fixed Payara Micro docker image\n\n- deployment did not work\n- extended test to deploy a trivial servlet application", "committedDate": "2020-04-18T10:09:19Z", "type": "commit"}, {"oid": "646f5d6eeb31434d7cbb2963f2d9588ed7ee3f48", "url": "https://github.com/payara/Payara/commit/646f5d6eeb31434d7cbb2963f2d9588ed7ee3f48", "message": "CUSTCOM-130 Using target directory in tests instead of temporary file", "committedDate": "2020-04-18T10:09:43Z", "type": "commit"}, {"oid": "646f5d6eeb31434d7cbb2963f2d9588ed7ee3f48", "url": "https://github.com/payara/Payara/commit/646f5d6eeb31434d7cbb2963f2d9588ed7ee3f48", "message": "CUSTCOM-130 Using target directory in tests instead of temporary file", "committedDate": "2020-04-18T10:09:43Z", "type": "forcePushed"}, {"oid": "1468ce11edd4234093d9d2b3fd945b97eb47b69b", "url": "https://github.com/payara/Payara/commit/1468ce11edd4234093d9d2b3fd945b97eb47b69b", "message": "CUSTCOM-130 Same rules for payara-web docker image", "committedDate": "2020-04-18T18:32:05Z", "type": "commit"}, {"oid": "8b45befb38c3c904ad61d35292a1caca4e0e4a35", "url": "https://github.com/payara/Payara/commit/8b45befb38c3c904ad61d35292a1caca4e0e4a35", "message": "CUSTCOM-130 Optimized build of docker images - sharing same base image\n\n- verification of tini and user management is done only once,\n  then the image is shared\n- this image has caching enabled by default\n- only micro has it's own, because it uses leaner jdk image based on alpine\n- renamed some properties to use common scheme\n- PayaraServerNodeTest with lower timeouts as it waits for the DAS; if\n  something went wrong, it hanged for too long", "committedDate": "2020-04-19T08:38:43Z", "type": "commit"}, {"oid": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761", "url": "https://github.com/payara/Payara/commit/39dc2360f5dc0ad0e5576ff8e4be1d310754a761", "message": "CUSTCOM-130 Longer timeouts for tests\n\n- sometimes it was not enough", "committedDate": "2020-04-19T10:04:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1NjU4NQ==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r411156585", "bodyText": "Revert order of these 2 COPY commands as script content will change less likely as Payara Micro. -> reuse of layers", "author": "rdebusscher", "createdAt": "2020-04-20T07:32:06Z", "path": "appserver/extras/docker-images/micro/src/main/docker/Dockerfile", "diffHunk": "@@ -4,23 +4,29 @@ FROM @docker.java.image@\n EXPOSE 6900 8080\n \n # Configure environment variables\n-ENV PAYARA_HOME=/opt/payara\\\n-    DEPLOY_DIR=/opt/payara/deployments\n+# PAYARA_HOME is deprecated - it is here for backward compatibility\n+ENV PAYARA_HOME=/opt/payara\n+ENV HOME_DIR=${PAYARA_HOME}\n+ENV PAYARA_DIR=${HOME_DIR} \\\n+    SCRIPT_DIR=${HOME_DIR} \\\n+    DEPLOY_DIR=/opt/payara/deployments \\\n+    JVM_ARGS=\"\" \\\n+    MEM_MAX_RAM_PERCENTAGE=70.0 \\\n+    MEM_XSS=512k\n \n # Create and set the Payara user and working directory owned by the new user\n RUN true \\\n-    && addgroup payara \\\n-    && adduser -D -h ${PAYARA_HOME} -H -s /bin/bash payara -G payara \\\n+    && addgroup --gid 1000 payara \\\n+    && adduser --system --uid 1000 --no-create-home --shell /bin/bash --home \"${HOME_DIR}\" --gecos \"\" --ingroup payara payara \\\n     && echo payara:payara | chpasswd \\\n     && mkdir -p ${DEPLOY_DIR}  \\\n-    && chown -R payara:payara ${PAYARA_HOME} \\\n+    && chown -R payara:payara ${HOME_DIR} \\\n     && true\n \n USER payara\n-WORKDIR ${PAYARA_HOME}\n+WORKDIR ${HOME_DIR}\n \n-COPY maven/artifacts/payara-micro.jar .\n+COPY --chown=payara:payara maven/artifacts/payara-micro.jar .", "originalCommit": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1Njc3Mg==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r411156772", "bodyText": "Revert order of these 2 COPY commands as script content will change less likely as Payara Server. -> reuse of layers", "author": "rdebusscher", "createdAt": "2020-04-20T07:32:29Z", "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -7,77 +7,31 @@ FROM @docker.java.image@\n # 8181: https\n EXPOSE 4848 9009 8080 8181\n \n-# Initialize the configurable environment variables\n-ENV HOME_DIR=/opt/payara\\\n-    PAYARA_DIR=/opt/payara/appserver\\\n-    SCRIPT_DIR=/opt/payara/scripts\\\n-    CONFIG_DIR=/opt/payara/config\\\n-    DEPLOY_DIR=/opt/payara/deployments\\\n-    PASSWORD_FILE=/opt/payara/passwordFile\\\n-    # Payara Server Domain options\n-    DOMAIN_NAME=@docker.payara.domainName@\\\n-    ADMIN_USER=admin\\\n-    ADMIN_PASSWORD=admin \\\n-    # Utility environment variables\n-    JVM_ARGS=\\\n-    PAYARA_ARGS=\\\n-    DEPLOY_PROPS=\\\n-    POSTBOOT_COMMANDS=/opt/payara/config/post-boot-commands.asadmin\\\n-    PREBOOT_COMMANDS=/opt/payara/config/pre-boot-commands.asadmin\n-ENV PATH=\"${PATH}:${PAYARA_DIR}/bin\"\n+ENV DOMAIN_NAME=@docker.payara.domainName@ \\\n+    PAYARA_ARGS=\"\" \\\n+    PREBOOT_COMMANDS=${CONFIG_DIR}/pre-boot-commands.asadmin \\\n+    POSTBOOT_COMMANDS=${CONFIG_DIR}/post-boot-commands.asadmin \\\n+    DEPLOY_PROPS=\"\"\n \n-ARG TINI_VERSION=v0.18.0\n-\n-# Download tini\n-ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n-    https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /\n-\n-RUN true \\\n-    # Install dependencies\n-    && apt-get update \\\n-    && apt-get install -y coreutils gpg \\\n-    && rm -rf /var/lib/apt/lists/* \\\n-    # Create and set the Payara user and working directory owned by the new user\n-    && groupadd --gid 1000 payara \\\n-    && useradd -u 1000 -M -s /bin/bash -d ${HOME_DIR} payara -g payara \\\n-    && echo payara:payara | chpasswd \\\n-    && mkdir -p ${DEPLOY_DIR} \\\n-    && mkdir -p ${CONFIG_DIR} \\\n-    && mkdir -p ${SCRIPT_DIR} \\\n-    && chown -R payara: ${HOME_DIR} \\\n-    # Verify tini\n-    && gpg --batch --keyserver \"hkp://ipv4.pool.sks-keyservers.net\" --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \\\n-    && gpg --batch --verify /tini.asc /tini \\\n-    && chmod +x /tini \\\n-    && true\n-\n-USER payara\n-WORKDIR ${HOME_DIR}\n-\n-COPY --chown=payara:payara maven/artifacts/payara5 ${PAYARA_DIR}/\n+COPY --chown=payara:payara maven/artifacts/@docker.payara.rootDirectoryName@ ${PAYARA_DIR}/", "originalCommit": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1NjkxMg==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r411156912", "bodyText": "Revert order of these 2 COPY commands as script content will change less likely as Payara Micro. -> reuse of Server", "author": "rdebusscher", "createdAt": "2020-04-20T07:32:47Z", "path": "appserver/extras/docker-images/server-node/src/main/docker/Dockerfile", "diffHunk": "@@ -14,20 +11,10 @@ ENV PAYARA_PASSWORD_FILE=${PAYARA_PASSWORD_FILE_DIR}/passwordfile.txt\n \n # Create and set the Payara user and working directory owned by the new user\n RUN true \\\n-    && mkdir ${HOME_DIR} \\\n-    && mkdir ${PAYARA_DIR} \\\n-    && mkdir ${PAYARA_PASSWORD_FILE_DIR} \\\n-    && groupadd -g 1000 payara \\\n-    && useradd -u 1000 -M -s /bin/bash -d ${HOME_DIR} payara -g payara \\\n-    && echo payara:payara | chpasswd \\\n-    && chown -R payara:payara ${HOME_DIR} \\\n+    && mkdir -p ${PAYARA_PASSWORD_FILE_DIR} \\\n     && true\n \n-USER payara\n-WORKDIR ${HOME_DIR}\n+COPY --chown=payara:payara maven/artifacts/@docker.payara.rootDirectoryName@ ${PAYARA_DIR}", "originalCommit": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f807bef66fd8eb679d15c82998ad0de9ab60b302", "url": "https://github.com/payara/Payara/commit/f807bef66fd8eb679d15c82998ad0de9ab60b302", "message": "CUSTOM-130: Fix line endings for windows\n\nNew shell folder, new .gitattributes", "committedDate": "2020-04-20T11:57:21Z", "type": "commit"}, {"oid": "b86911b20011a4ff2827313faa9fdec05812a9de", "url": "https://github.com/payara/Payara/commit/b86911b20011a4ff2827313faa9fdec05812a9de", "message": "CUSTOM-130: Retain CMD compatibility for Payara Micro image\n\n- deploymentDir is now CMD concern, overrideable by user\n- shell executes exec, so that java becomes the main process of container\n- shell expansion is not available in CMD, therefore DEPLOY_DIR used expanded,\n  but this is usual Docker behavior", "committedDate": "2020-04-20T11:57:21Z", "type": "commit"}, {"oid": "a2017f760ff4229d693fdfa6b7ee306c926dce43", "url": "https://github.com/payara/Payara/commit/a2017f760ff4229d693fdfa6b7ee306c926dce43", "message": "CUSTCOM-130 Reorder copy commands for better layering", "committedDate": "2020-04-20T11:57:21Z", "type": "commit"}, {"oid": "207c5270d139b47ef5ae1df82db4b6b713a49589", "url": "https://github.com/payara/Payara/commit/207c5270d139b47ef5ae1df82db4b6b713a49589", "message": "CUSTCOM-130 Updated TestContainers and JUnit5", "committedDate": "2020-04-20T12:59:13Z", "type": "commit"}, {"oid": "a6174171e438e5051c7c4be1303e097652260a99", "url": "https://github.com/payara/Payara/commit/a6174171e438e5051c7c4be1303e097652260a99", "message": "CUSTCOM-130 Cleanup in Micro Dockerfile\n\n- removed unuseful comments\n- sync with other docker files\n- tested\n- note: even if environment variables are not used here, they may be used\n  by users", "committedDate": "2020-04-20T14:07:27Z", "type": "commit"}, {"oid": "a6174171e438e5051c7c4be1303e097652260a99", "url": "https://github.com/payara/Payara/commit/a6174171e438e5051c7c4be1303e097652260a99", "message": "CUSTCOM-130 Cleanup in Micro Dockerfile\n\n- removed unuseful comments\n- sync with other docker files\n- tested\n- note: even if environment variables are not used here, they may be used\n  by users", "committedDate": "2020-04-20T14:07:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwMzI5OQ==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r412003299", "bodyText": "Heads up that tini v0.19 has been released two days ago.\nReleases now offer SHA256 sums, thus easing installation A LOT!\nhttps://github.com/krallin/tini/releases/tag/v0.19.0\nSee also krallin/tini#153", "author": "poikilotherm", "createdAt": "2020-04-21T08:57:29Z", "path": "appserver/extras/docker-images/basic/src/main/docker/Dockerfile", "diffHunk": "@@ -0,0 +1,42 @@\n+FROM @docker.java.image@\n+\n+ENV HOME_DIR=/opt/payara\n+ENV PAYARA_DIR=${HOME_DIR}/appserver \\\n+    SCRIPT_DIR=${HOME_DIR}/scripts \\\n+    CONFIG_DIR=${HOME_DIR}/config \\\n+    DEPLOY_DIR=${HOME_DIR}/deployments \\\n+    PASSWORD_FILE=${HOME_DIR}/passwordFile \\\n+    ADMIN_USER=admin \\\n+    ADMIN_PASSWORD=admin \\\n+    JVM_ARGS=\"\" \\\n+    MEM_MAX_RAM_PERCENTAGE=\"70.0\" \\\n+    MEM_XSS=\"512k\"\n+ENV PATH=\"${PATH}:${PAYARA_DIR}/bin\"\n+\n+ARG TINI_VERSION=v0.18.0", "originalCommit": "a6174171e438e5051c7c4be1303e097652260a99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxNzUwMw==", "url": "https://github.com/payara/Payara/pull/4594#discussion_r412017503", "bodyText": "I think we will merge this first and then upgrade this in standalone PR, but thanks for the good news!", "author": "dmatej", "createdAt": "2020-04-21T09:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwMzI5OQ=="}], "type": "inlineReview"}]}