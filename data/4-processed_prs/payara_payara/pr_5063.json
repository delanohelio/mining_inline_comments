{"pr_number": 5063, "pr_title": "[QACI-410] - Classloader Leak Tracking", "pr_createdAt": "2020-12-18T17:14:24Z", "pr_url": "https://github.com/payara/Payara/pull/5063", "timeline": [{"oid": "2a5c9453a0060c363fb662482a0ee0942c352276", "url": "https://github.com/payara/Payara/commit/2a5c9453a0060c363fb662482a0ee0942c352276", "message": "Add static instance count increment to WebappClassLoader", "committedDate": "2020-12-14T16:23:32Z", "type": "commit"}, {"oid": "309f331ecd0c63fbff441de27fef70b382e9c650", "url": "https://github.com/payara/Payara/commit/309f331ecd0c63fbff441de27fef70b382e9c650", "message": "Update Year", "committedDate": "2020-12-15T10:44:43Z", "type": "commit"}, {"oid": "ae0526a3da9e6e11c8f0b48036c25b25b4e6c2df", "url": "https://github.com/payara/Payara/commit/ae0526a3da9e6e11c8f0b48036c25b25b4e6c2df", "message": "Create access api", "committedDate": "2020-12-17T12:09:10Z", "type": "commit"}, {"oid": "b1801435a551e484160e8324b772790cdbb95e6a", "url": "https://github.com/payara/Payara/commit/b1801435a551e484160e8324b772790cdbb95e6a", "message": "Store previous instance count", "committedDate": "2020-12-17T15:21:44Z", "type": "commit"}, {"oid": "990420cda2b37bbe8a4e9e00a6ecf8fd544d7db4", "url": "https://github.com/payara/Payara/commit/990420cda2b37bbe8a4e9e00a6ecf8fd544d7db4", "message": "Introduce initial classloader leak test", "committedDate": "2020-12-17T15:22:14Z", "type": "commit"}, {"oid": "0cbaf3fc9c09b789b9c1444470a6b8151bcc5105", "url": "https://github.com/payara/Payara/commit/0cbaf3fc9c09b789b9c1444470a6b8151bcc5105", "message": "Final value getter", "committedDate": "2020-12-18T16:50:13Z", "type": "commit"}, {"oid": "2d4ced8d6a2cb025bb3818dc79ed01af27c19ef4", "url": "https://github.com/payara/Payara/commit/2d4ced8d6a2cb025bb3818dc79ed01af27c19ef4", "message": "Remove Samples Intergrations", "committedDate": "2020-12-18T16:53:33Z", "type": "commit"}, {"oid": "824ee780de3fe07c4d7259124f6cbd3869b0b272", "url": "https://github.com/payara/Payara/commit/824ee780de3fe07c4d7259124f6cbd3869b0b272", "message": "WebappClassloader Init failures", "committedDate": "2020-12-18T16:53:55Z", "type": "commit"}, {"oid": "e81e7c40026baa8834e7f30cf1a2dd5b19a0a22a", "url": "https://github.com/payara/Payara/commit/e81e7c40026baa8834e7f30cf1a2dd5b19a0a22a", "message": "Remove module from samples", "committedDate": "2020-12-18T16:55:45Z", "type": "commit"}, {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57", "url": "https://github.com/payara/Payara/commit/dcd22959da6183456a38b8a1a2609428e8a34b57", "message": "POM Formatting", "committedDate": "2020-12-18T17:07:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxODU5MQ==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546018591", "bodyText": "no need for Jersey, use plain jax-js APIs instead", "author": "lprimak", "createdAt": "2020-12-18T18:40:01Z", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>\n+    \n+    <properties>\n+        <jersey.version>3.0.0</jersey.version>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+    \n+    <dependencyManagement>", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxODc2Ng==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546018766", "bodyText": "same here, use plain jax-rs APIs", "author": "lprimak", "createdAt": "2020-12-18T18:40:24Z", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>\n+    \n+    <properties>\n+        <jersey.version>3.0.0</jersey.version>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+    \n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.glassfish.jersey</groupId>\n+                <artifactId>jersey-bom</artifactId>\n+                <version>${jersey.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+    \n+    <dependencies>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.containers</groupId>", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxOTA1OQ==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546019059", "bodyText": "no need for this section at all, use properties equivalent\nThis way you don't override the complier plugin version at all", "author": "lprimak", "createdAt": "2020-12-18T18:41:00Z", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>\n+    \n+    <properties>\n+        <jersey.version>3.0.0</jersey.version>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+    \n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.glassfish.jersey</groupId>\n+                <artifactId>jersey-bom</artifactId>\n+                <version>${jersey.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+    \n+    <dependencies>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.containers</groupId>\n+            <artifactId>jersey-container-servlet-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.inject</groupId>\n+            <artifactId>jersey-hk2</artifactId>\n+        </dependency>\n+        \n+        <!-- Payara Dependencies -->\n+        <dependency>\n+            <groupId>fish.payara.server.internal.web</groupId>\n+            <artifactId>war-util</artifactId>\n+            <version>${project.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+    </dependencies>\n+    \n+    <build>", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxOTMxNw==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546019317", "bodyText": "full Payara copyright", "author": "lprimak", "createdAt": "2020-12-18T18:41:31Z", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountService.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxOTU1Ng==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546019556", "bodyText": "Not sure this is necessary at all", "author": "lprimak", "createdAt": "2020-12-18T18:42:00Z", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountService.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package fish.payara.samples.classloaderdata;\n+\n+/**\n+ *\n+ * @author cuba\n+ */\n+public class InstanceCountService {", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NDYwOA==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547074608", "bodyText": "I still see no point in this class, it does nothing.\nInstanceCountTracker can be used directly.", "author": "lprimak", "createdAt": "2020-12-22T05:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxOTU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMDQwOQ==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546020409", "bodyText": "I would move instance count into own class, not have instance counts in different classes.\nMinimize changes to WebappClassLoader\nAlso, this doesn't touch non-webapp (jar, ear etc) class loaders", "author": "lprimak", "createdAt": "2020-12-18T18:43:52Z", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountTracker.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package fish.payara.samples.classloaderdata;\n+\n+import java.lang.ref.Reference;\n+import org.glassfish.web.loader.WebappClassLoader;\n+import org.glassfish.web.loader.WebappClassLoaderFinalizer;\n+\n+/**\n+ *\n+ * @author Cuba Stanley\n+ */\n+public class InstanceCountTracker {", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMDc0OQ==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546020749", "bodyText": "no need for this file, use plain jax-rs APIs", "author": "lprimak", "createdAt": "2020-12-18T18:44:36Z", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/webapp/WEB-INF/web.xml", "diffHunk": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMTA1OA==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546021058", "bodyText": "possible race condition, should be AtomicInteger", "author": "lprimak", "createdAt": "2020-12-18T18:45:13Z", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -408,9 +409,25 @@\n     private static final boolean IS_JDK_VERSION_HIGHER_THAN_8 = JDK.getMajor() > 8;\n     private static Boolean isMultiReleaseJar;\n     private static final Name MULTI_RELEASE = new Name(\"Multi-Release\");\n+    \n+    private static int INSTANCE_COUNT;", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMTI5NQ==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546021295", "bodyText": "this cast is a code smell, this needs to be refactored", "author": "lprimak", "createdAt": "2020-12-18T18:45:41Z", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountTracker.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package fish.payara.samples.classloaderdata;\n+\n+import java.lang.ref.Reference;\n+import org.glassfish.web.loader.WebappClassLoader;\n+import org.glassfish.web.loader.WebappClassLoaderFinalizer;\n+\n+/**\n+ *\n+ * @author Cuba Stanley\n+ */\n+public class InstanceCountTracker {\n+    \n+    private static int previousInstanceCount;\n+    \n+    public static int getInstanceCount() {\n+        System.gc();\n+        Reference<? extends WebappClassLoader> referenceFromQueue;\n+        while((referenceFromQueue = WebappClassLoader.referenceQueue.poll()) != null) {\n+            ((WebappClassLoaderFinalizer)referenceFromQueue).cleanupAction();", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMjA0NQ==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546022045", "bodyText": "oracle copyrights should not be changed", "author": "lprimak", "createdAt": "2020-12-18T18:47:12Z", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -1,7 +1,7 @@\n /*\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n  *\n- * Copyright (c) 1997-2019 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997-2020 Oracle and/or its affiliates. All rights reserved.", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMjEzMw==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546022133", "bodyText": "needs full copyright, not just portions", "author": "lprimak", "createdAt": "2020-12-18T18:47:25Z", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoaderFinalizer.java", "diffHunk": "@@ -0,0 +1,21 @@\n+// Portions Copyright [2020] [Payara Foundation and/or its affiliates]", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMzc5NQ==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546023795", "bodyText": "I would just revert and start this file over again", "author": "lprimak", "createdAt": "2020-12-18T18:50:34Z", "path": "appserver/tests/payara-samples/pom.xml", "diffHunk": "@@ -37,60 +37,56 @@\n  *    and therefore, elected the GPL Version 2 license, then the option applies\n  *    only if the new code is made subject to such option by the copyright\n  *    holder.\n--->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+--><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">", "originalCommit": "dcd22959da6183456a38b8a1a2609428e8a34b57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cbbf4712cc827f9ec5ca2e9aca8e8f2ba02d3050", "url": "https://github.com/payara/Payara/commit/cbbf4712cc827f9ec5ca2e9aca8e8f2ba02d3050", "message": "Use basic jax-rs", "committedDate": "2020-12-21T11:14:11Z", "type": "commit"}, {"oid": "0f33befc1d32cd6b1fa52743314ed5f2b3718752", "url": "https://github.com/payara/Payara/commit/0f33befc1d32cd6b1fa52743314ed5f2b3718752", "message": "Revert samples pom tweaks", "committedDate": "2020-12-21T13:48:53Z", "type": "commit"}, {"oid": "17fc3412444a9ce2c14fe11db08f5d5b81e13539", "url": "https://github.com/payara/Payara/commit/17fc3412444a9ce2c14fe11db08f5d5b81e13539", "message": "Update license headers", "committedDate": "2020-12-21T13:58:02Z", "type": "commit"}, {"oid": "74b2b93f7b991b661caa7ce224060c57a21be06d", "url": "https://github.com/payara/Payara/commit/74b2b93f7b991b661caa7ce224060c57a21be06d", "message": "Reset samples pom", "committedDate": "2020-12-21T14:10:04Z", "type": "commit"}, {"oid": "d06040ab969aa8add2aefd3334c128e3a006daa7", "url": "https://github.com/payara/Payara/commit/d06040ab969aa8add2aefd3334c128e3a006daa7", "message": "Refactor casting", "committedDate": "2020-12-21T16:51:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3Mzc0Ng==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547073746", "bodyText": "remove jersey", "author": "lprimak", "createdAt": "2020-12-22T05:20:26Z", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>\n+    \n+    <properties>\n+        <jersey.version>3.0.0</jersey.version>", "originalCommit": "d06040ab969aa8add2aefd3334c128e3a006daa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3Mzk0OQ==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547073949", "bodyText": "Need the same functionality for ASURLClassLoader (parent of EARClassLoader EJBClassLoader etc)", "author": "lprimak", "createdAt": "2020-12-22T05:21:26Z", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>", "originalCommit": "d06040ab969aa8add2aefd3334c128e3a006daa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NDkzMg==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547074932", "bodyText": "needs intent javadoc", "author": "lprimak", "createdAt": "2020-12-22T05:25:13Z", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountTracker.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) [2020] Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package fish.payara.samples.classloaderdata;\n+\n+import java.lang.ref.Reference;\n+import org.glassfish.web.loader.WebappClassLoader;\n+\n+/**\n+ *\n+ * @author Cuba Stanley\n+ */\n+public class InstanceCountTracker {\n+    \n+    private static int previousInstanceCount;\n+    \n+    public static int getInstanceCount() {", "originalCommit": "d06040ab969aa8add2aefd3334c128e3a006daa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NTIxOQ==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547075219", "bodyText": "should be final", "author": "lprimak", "createdAt": "2020-12-22T05:26:12Z", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -409,8 +411,14 @@\n     private static Boolean isMultiReleaseJar;\n     private static final Name MULTI_RELEASE = new Name(\"Multi-Release\");\n \n-    static {\n+    public static ReferenceQueue<WebappClassLoader> referenceQueue = new ReferenceQueue<WebappClassLoader>();", "originalCommit": "d06040ab969aa8add2aefd3334c128e3a006daa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NTI3Mw==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547075273", "bodyText": "should be final", "author": "lprimak", "createdAt": "2020-12-22T05:26:24Z", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -409,8 +411,14 @@\n     private static Boolean isMultiReleaseJar;\n     private static final Name MULTI_RELEASE = new Name(\"Multi-Release\");\n \n-    static {\n+    public static ReferenceQueue<WebappClassLoader> referenceQueue = new ReferenceQueue<WebappClassLoader>();\n+    public static ArrayList<WebappClassLoaderFinalizer> list = new ArrayList<WebappClassLoaderFinalizer>();", "originalCommit": "d06040ab969aa8add2aefd3334c128e3a006daa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NTM5MA==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547075390", "bodyText": "is isn't really standard, you should move it down into the static block", "author": "lprimak", "createdAt": "2020-12-22T05:26:45Z", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -409,8 +411,14 @@\n     private static Boolean isMultiReleaseJar;\n     private static final Name MULTI_RELEASE = new Name(\"Multi-Release\");\n \n-    static {\n+    public static ReferenceQueue<WebappClassLoader> referenceQueue = new ReferenceQueue<WebappClassLoader>();\n+    public static ArrayList<WebappClassLoaderFinalizer> list = new ArrayList<WebappClassLoaderFinalizer>();\n+    {", "originalCommit": "d06040ab969aa8add2aefd3334c128e3a006daa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6168ccf33f5a3dc07d89e85c28d1b77a37bf338c", "url": "https://github.com/payara/Payara/commit/6168ccf33f5a3dc07d89e85c28d1b77a37bf338c", "message": "Remove InstanceCountService", "committedDate": "2020-12-22T09:40:07Z", "type": "commit"}, {"oid": "bbf2016c766e9b5c7646fcb42fb60275511d1562", "url": "https://github.com/payara/Payara/commit/bbf2016c766e9b5c7646fcb42fb60275511d1562", "message": "Updates to WebappClassLoader", "committedDate": "2020-12-23T15:32:22Z", "type": "commit"}, {"oid": "871dea3ea89c867f1c493a48915744863039c733", "url": "https://github.com/payara/Payara/commit/871dea3ea89c867f1c493a48915744863039c733", "message": "Improve functionality and usibility of api", "committedDate": "2020-12-23T15:32:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAzMDM1Nw==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r548030357", "bodyText": "This does not seem to be thread safe too.", "author": "sgflt", "createdAt": "2020-12-23T16:06:03Z", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -1887,8 +1894,11 @@ protected PermissionCollection getPermissions(CodeSource codeSource) {\n \n \n     private void init() {\n-\n+        \n         this.parent = getParent();\n+        \n+        list.add(new PhantomReference(this, referenceQueue));\n+        INSTANCE_COUNT.set(INSTANCE_COUNT.get() + 1);", "originalCommit": "871dea3ea89c867f1c493a48915744863039c733", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c108c89fdd46434fdb1179be09bbd157be17be7f", "url": "https://github.com/payara/Payara/commit/c108c89fdd46434fdb1179be09bbd157be17be7f", "message": "Include ASURL counter", "committedDate": "2020-12-23T16:18:14Z", "type": "commit"}, {"oid": "deb058d864b29ca003cbcdf35e343bba5a42d471", "url": "https://github.com/payara/Payara/commit/deb058d864b29ca003cbcdf35e343bba5a42d471", "message": "Merge branch 'master' into QACI-410-classloader-test", "committedDate": "2020-12-24T18:41:15Z", "type": "commit"}, {"oid": "824ad47bc75a122c24c090cdcc2e8f87c20bb185", "url": "https://github.com/payara/Payara/commit/824ad47bc75a122c24c090cdcc2e8f87c20bb185", "message": "refactored, added ability to see active classloaders in real time", "committedDate": "2020-12-25T05:30:01Z", "type": "commit"}, {"oid": "f0430778c6d13df47206fa98bbe35ebc42ae9b99", "url": "https://github.com/payara/Payara/commit/f0430778c6d13df47206fa98bbe35ebc42ae9b99", "message": "removed unnecessary generics", "committedDate": "2020-12-25T05:58:16Z", "type": "commit"}, {"oid": "a98332734a79f81cee97fe4cf17b115288f21048", "url": "https://github.com/payara/Payara/commit/a98332734a79f81cee97fe4cf17b115288f21048", "message": "stablized, added additional unit tests", "committedDate": "2020-12-25T06:39:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkwNTY5Mw==", "url": "https://github.com/payara/Payara/pull/5063#discussion_r548905693", "bodyText": "I would use ConcurrentMap interface to point that there is expected concurrency.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Map<Class<?>, Count> INSTANCE_COUNT = new ConcurrentHashMap<>();\n          \n          \n            \n                private static final ConcurrentMap<Class<?>, Count> INSTANCE_COUNT = new ConcurrentHashMap<>();", "author": "sgflt", "createdAt": "2020-12-25T19:43:05Z", "path": "nucleus/common/common-util/src/main/java/org/glassfish/common/util/InstanceCounter.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) [2020] Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package org.glassfish.common.util;\n+\n+import java.lang.ref.Reference;\n+import java.lang.ref.ReferenceQueue;\n+import java.lang.ref.WeakReference;\n+import java.util.Collections;\n+import java.util.IdentityHashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * Counts instances of a particular class, helpful in leak detection\n+ * <p>\n+ * Example: Put the following line into the class you want counted:\n+ * <p>\n+ * {@code\n+ *     private final InstanceCounter<MyClass> instanceCounter = new InstanceCounter<>(this);\n+ * }\n+ *\n+ * @author Cuba Stanley\n+ */\n+public class InstanceCounter {\n+    private static class Count {\n+        int instanceCount;\n+        private final ReferenceQueue<Object> referenceQueue = new ReferenceQueue<>();\n+        private final Set<WeakReference<?>> references = Collections.newSetFromMap(new IdentityHashMap<>());\n+\n+        public Count() {\n+            instanceCount = 1;\n+        }\n+\n+        public Count(int instanceCount) {\n+            this.instanceCount = instanceCount;\n+        }\n+    }\n+\n+    private static final Map<Class<?>, Count> INSTANCE_COUNT = new ConcurrentHashMap<>();", "originalCommit": "a98332734a79f81cee97fe4cf17b115288f21048", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fb459f96231eae9da70019a780b7ee5c9cd6a103", "url": "https://github.com/payara/Payara/commit/fb459f96231eae9da70019a780b7ee5c9cd6a103", "message": "Update nucleus/common/common-util/src/main/java/org/glassfish/common/util/InstanceCounter.java\n\nCo-authored-by: Luk\u00e1\u0161 Kv\u00eddera <lukas.kvidera@seznam.cz>", "committedDate": "2020-12-26T00:53:43Z", "type": "commit"}, {"oid": "5d9b0eba30deb5a92a16b330664d275027987f32", "url": "https://github.com/payara/Payara/commit/5d9b0eba30deb5a92a16b330664d275027987f32", "message": "import fix", "committedDate": "2020-12-26T01:16:06Z", "type": "commit"}]}