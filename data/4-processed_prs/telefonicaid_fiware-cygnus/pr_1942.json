{"pr_number": 1942, "pr_title": "Task/insert upsert transaction", "pr_createdAt": "2020-09-30T10:16:41Z", "pr_url": "https://github.com/telefonicaid/fiware-cygnus/pull/1942", "timeline": [{"oid": "a619509569856c052cb2b42829f039c297ce0b99", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/a619509569856c052cb2b42829f039c297ce0b99", "message": "refactor sql utils class to build upsert transaction", "committedDate": "2020-09-29T09:55:23Z", "type": "commit"}, {"oid": "11ba0e3db64ce1ac873f8fc3370f87b4b3172829", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/11ba0e3db64ce1ac873f8fc3370f87b4b3172829", "message": "create insert query", "committedDate": "2020-09-29T11:10:15Z", "type": "commit"}, {"oid": "66d6fce6f2e0b5923d94acd1ffd6e4cf55e5457e", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/66d6fce6f2e0b5923d94acd1ffd6e4cf55e5457e", "message": "create upsert transaction", "committedDate": "2020-09-30T09:50:53Z", "type": "commit"}, {"oid": "7ac4a98495fe411117a815b8564337a168224dba", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/7ac4a98495fe411117a815b8564337a168224dba", "message": "update sinks to use upsert transaction", "committedDate": "2020-09-30T09:51:34Z", "type": "commit"}, {"oid": "8bb60e7e9f523de257bf33a89af36fa0e8df76a0", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/8bb60e7e9f523de257bf33a89af36fa0e8df76a0", "message": "update insert query log", "committedDate": "2020-09-30T10:01:52Z", "type": "commit"}, {"oid": "adc18b9168078a5418a6f3c9b4f144c95c5f8e91", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/adc18b9168078a5418a6f3c9b4f144c95c5f8e91", "message": "add CNR", "committedDate": "2020-09-30T10:03:55Z", "type": "commit"}, {"oid": "69ac81959b1eb458f81c66a956e7affabcdcd843", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/69ac81959b1eb458f81c66a956e7affabcdcd843", "message": "update docs", "committedDate": "2020-09-30T10:12:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQxODg0Ng==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1942#discussion_r497418846", "bodyText": "upsertQuery should be printed, not only  connection", "author": "AlvaroVega", "createdAt": "2020-09-30T10:54:42Z", "path": "cygnus-common/src/main/java/com/telefonica/iot/cygnus/backends/sql/SQLBackendImpl.java", "diffHunk": "@@ -516,38 +541,91 @@ public void createErrorTable(String destination)\n     } // createErrorTable\n \n     /**\n-     * Gets an SQL connection from the driver\n+     * Upsert transaction.\n      *\n-     * @param destination the destination\n-     * @return the sql connection\n+     * @param aggregation     the aggregation\n+     * @param lastData        the last data\n+     * @param destination     the destination\n+     * @param tableName       the table name\n+     * @param tableSuffix     the table suffix\n+     * @param uniqueKey       the unique key\n+     * @param timestampKey    the timestamp key\n+     * @param timestampFormat the timestamp format\n+     * @param attrNativeTypes the attr native types\n      * @throws CygnusPersistenceError the cygnus persistence error\n+     * @throws CygnusBadContextData   the cygnus bad context data\n      * @throws CygnusRuntimeError     the cygnus runtime error\n-     */\n-\n-    public Connection getSQLConnection (String destination) throws CygnusPersistenceError, CygnusRuntimeError {\n-        return driver.getConnection(destination);\n-    }\n-\n-    /**\n-     * Execute prepared statement.\n-     *\n-     * @param preparedStatement the prepared statement\n-     * @throws SQLException           the sql exception\n      * @throws CygnusPersistenceError the cygnus persistence error\n-     * @throws CygnusRuntimeError     the cygnus runtime error\n-     * @throws CygnusBadContextData   the cygnus bad context data\n      */\n+    public void upsertTransaction (LinkedHashMap<String, ArrayList<JsonElement>> aggregation,\n+                                   LinkedHashMap<String, ArrayList<JsonElement>> lastData,\n+                                   String destination,\n+                                   String tableName,\n+                                   String tableSuffix,\n+                                   String uniqueKey,\n+                                   String timestampKey,\n+                                   String timestampFormat,\n+                                   boolean attrNativeTypes) throws CygnusPersistenceError, CygnusBadContextData, CygnusRuntimeError,  CygnusPersistenceError{\n+\n+        Connection connection = null;\n+        PreparedStatement upsertPreparedStatement = null;\n+        PreparedStatement insertPreparedStatement = null;\n+\n+        int insertedRows[];\n \n-    public void executePreparedStatement (PreparedStatement preparedStatement) throws SQLException, CygnusPersistenceError, CygnusRuntimeError, CygnusBadContextData {\n         try {\n-            preparedStatement.executeBatch();\n+\n+            connection = driver.getConnection(destination);\n+            connection.setAutoCommit(false);\n+\n+            String insertQuery = SQLQueryUtils.sqlInsertQuery(aggregation,\n+                    tableName,\n+                    sqlInstance,\n+                    destination).toString();\n+\n+            PreparedStatement insertStatement = null;\n+            insertStatement = connection.prepareStatement(insertQuery);\n+            insertPreparedStatement = SQLQueryUtils.addJsonValues(insertStatement, aggregation, attrNativeTypes);\n+            insertedRows = insertPreparedStatement.executeBatch();\n+\n+            String upsertQuery = SQLQueryUtils.sqlUpsertQuery(aggregation,\n+                    lastData,\n+                    tableName,\n+                    tableSuffix,\n+                    uniqueKey,\n+                    timestampKey,\n+                    timestampFormat,\n+                    sqlInstance,\n+                    destination).toString();\n+\n+            PreparedStatement upsertStatement = null;\n+            upsertStatement = connection.prepareStatement(upsertQuery);\n+            upsertPreparedStatement = SQLQueryUtils.addJsonValues(upsertStatement, lastData, attrNativeTypes);\n+            upsertPreparedStatement.executeBatch();\n+\n+            connection.commit();\n+            LOGGER.info(\"Finished transaction: \\n\" + upsertPreparedStatement + \"\\n Inserted ROWS: \" + insertedRows.length + \" \" + upsertQuery);\n+\n         } catch (SQLTimeoutException e) {\n-            throw new CygnusPersistenceError(sqlInstance.toUpperCase() + \" Data insertion error. Query: `\" + preparedStatement, \"SQLTimeoutException\", e.getMessage());\n+            cygnusSQLRollback(connection);\n+            throw new CygnusPersistenceError(sqlInstance.toUpperCase() + \" \" + e.getNextException() + \" Data insertion error. Query: `\" + connection, \"SQLTimeoutException\", e.getMessage());", "originalCommit": "69ac81959b1eb458f81c66a956e7affabcdcd843", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQxOTIzNw==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1942#discussion_r497419237", "bodyText": "the same upper comment: upsertQuery should be printed, not only connection", "author": "AlvaroVega", "createdAt": "2020-09-30T10:55:26Z", "path": "cygnus-common/src/main/java/com/telefonica/iot/cygnus/backends/sql/SQLBackendImpl.java", "diffHunk": "@@ -516,38 +541,91 @@ public void createErrorTable(String destination)\n     } // createErrorTable\n \n     /**\n-     * Gets an SQL connection from the driver\n+     * Upsert transaction.\n      *\n-     * @param destination the destination\n-     * @return the sql connection\n+     * @param aggregation     the aggregation\n+     * @param lastData        the last data\n+     * @param destination     the destination\n+     * @param tableName       the table name\n+     * @param tableSuffix     the table suffix\n+     * @param uniqueKey       the unique key\n+     * @param timestampKey    the timestamp key\n+     * @param timestampFormat the timestamp format\n+     * @param attrNativeTypes the attr native types\n      * @throws CygnusPersistenceError the cygnus persistence error\n+     * @throws CygnusBadContextData   the cygnus bad context data\n      * @throws CygnusRuntimeError     the cygnus runtime error\n-     */\n-\n-    public Connection getSQLConnection (String destination) throws CygnusPersistenceError, CygnusRuntimeError {\n-        return driver.getConnection(destination);\n-    }\n-\n-    /**\n-     * Execute prepared statement.\n-     *\n-     * @param preparedStatement the prepared statement\n-     * @throws SQLException           the sql exception\n      * @throws CygnusPersistenceError the cygnus persistence error\n-     * @throws CygnusRuntimeError     the cygnus runtime error\n-     * @throws CygnusBadContextData   the cygnus bad context data\n      */\n+    public void upsertTransaction (LinkedHashMap<String, ArrayList<JsonElement>> aggregation,\n+                                   LinkedHashMap<String, ArrayList<JsonElement>> lastData,\n+                                   String destination,\n+                                   String tableName,\n+                                   String tableSuffix,\n+                                   String uniqueKey,\n+                                   String timestampKey,\n+                                   String timestampFormat,\n+                                   boolean attrNativeTypes) throws CygnusPersistenceError, CygnusBadContextData, CygnusRuntimeError,  CygnusPersistenceError{\n+\n+        Connection connection = null;\n+        PreparedStatement upsertPreparedStatement = null;\n+        PreparedStatement insertPreparedStatement = null;\n+\n+        int insertedRows[];\n \n-    public void executePreparedStatement (PreparedStatement preparedStatement) throws SQLException, CygnusPersistenceError, CygnusRuntimeError, CygnusBadContextData {\n         try {\n-            preparedStatement.executeBatch();\n+\n+            connection = driver.getConnection(destination);\n+            connection.setAutoCommit(false);\n+\n+            String insertQuery = SQLQueryUtils.sqlInsertQuery(aggregation,\n+                    tableName,\n+                    sqlInstance,\n+                    destination).toString();\n+\n+            PreparedStatement insertStatement = null;\n+            insertStatement = connection.prepareStatement(insertQuery);\n+            insertPreparedStatement = SQLQueryUtils.addJsonValues(insertStatement, aggregation, attrNativeTypes);\n+            insertedRows = insertPreparedStatement.executeBatch();\n+\n+            String upsertQuery = SQLQueryUtils.sqlUpsertQuery(aggregation,\n+                    lastData,\n+                    tableName,\n+                    tableSuffix,\n+                    uniqueKey,\n+                    timestampKey,\n+                    timestampFormat,\n+                    sqlInstance,\n+                    destination).toString();\n+\n+            PreparedStatement upsertStatement = null;\n+            upsertStatement = connection.prepareStatement(upsertQuery);\n+            upsertPreparedStatement = SQLQueryUtils.addJsonValues(upsertStatement, lastData, attrNativeTypes);\n+            upsertPreparedStatement.executeBatch();\n+\n+            connection.commit();\n+            LOGGER.info(\"Finished transaction: \\n\" + upsertPreparedStatement + \"\\n Inserted ROWS: \" + insertedRows.length + \" \" + upsertQuery);\n+\n         } catch (SQLTimeoutException e) {\n-            throw new CygnusPersistenceError(sqlInstance.toUpperCase() + \" Data insertion error. Query: `\" + preparedStatement, \"SQLTimeoutException\", e.getMessage());\n+            cygnusSQLRollback(connection);\n+            throw new CygnusPersistenceError(sqlInstance.toUpperCase() + \" \" + e.getNextException() + \" Data insertion error. Query: `\" + connection, \"SQLTimeoutException\", e.getMessage());\n         } catch (SQLException e) {\n-            throw new CygnusBadContextData(sqlInstance.toUpperCase() + \" Data insertion error. Query: `\" + preparedStatement, \"SQLException\", e.getMessage());\n+            cygnusSQLRollback(connection);\n+            throw new CygnusBadContextData(sqlInstance.toUpperCase() + \" \" + e.getNextException() + \" Data insertion error. Query: `\" + connection, \"SQLException\", e.getMessage());", "originalCommit": "69ac81959b1eb458f81c66a956e7affabcdcd843", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c5bbc3a25e64b6975861582cfa295ce1690fc069", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/c5bbc3a25e64b6975861582cfa295ce1690fc069", "message": "update insert query log", "committedDate": "2020-09-30T11:37:09Z", "type": "commit"}]}