{"pr_number": 842, "pr_title": "[DOCS] Adds screenshots to regression example", "pr_createdAt": "2020-02-06T02:48:41Z", "pr_url": "https://github.com/elastic/stack-docs/pull/842", "timeline": [{"oid": "435f2f87621225600717d7d621c508148ab0af96", "url": "https://github.com/elastic/stack-docs/commit/435f2f87621225600717d7d621c508148ab0af96", "message": "[DOCS] Adds screeshots to regression example", "committedDate": "2020-02-06T02:46:27Z", "type": "commit"}, {"oid": "910499067a198a67d1cefb2df34778bee880e376", "url": "https://github.com/elastic/stack-docs/commit/910499067a198a67d1cefb2df34778bee880e376", "message": "[DOCS] Scales image", "committedDate": "2020-02-06T21:25:14Z", "type": "commit"}, {"oid": "3cf95ee4f86506c174900b081e2929a57c612266", "url": "https://github.com/elastic/stack-docs/commit/3cf95ee4f86506c174900b081e2929a57c612266", "message": "[DOCS] More image manipulations", "committedDate": "2020-02-06T21:44:00Z", "type": "commit"}, {"oid": "966d02940a6c749a81ac3a3e7053e4961d77d5e5", "url": "https://github.com/elastic/stack-docs/commit/966d02940a6c749a81ac3a3e7053e4961d77d5e5", "message": "[DOCS] Merges view and evaluate sections", "committedDate": "2020-02-06T23:34:22Z", "type": "commit"}, {"oid": "effeb08d3061a270bafd8981d52ddc2fb657a3ec", "url": "https://github.com/elastic/stack-docs/commit/effeb08d3061a270bafd8981d52ddc2fb657a3ec", "message": "[DOCS] Re-adds the evaluation section", "committedDate": "2020-02-07T03:06:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ1NDM4MQ==", "url": "https://github.com/elastic/stack-docs/pull/842#discussion_r376454381", "bodyText": "missing \"are\" in \"... and field that analyzed\"", "author": "dimitris-athanasiou", "createdAt": "2020-02-07T15:33:32Z", "path": "docs/en/stack/ml/df-analytics/flightdata-regression.asciidoc", "diffHunk": "@@ -116,74 +141,72 @@ PUT _ml/data_frame/analytics/model-flight-delays\n     }\n   },\n   \"dest\": {\n-    \"index\": \"df-flight-delays\"  <3>\n+    \"index\": \"df-flight-delays\"\n   },\n   \"analysis\": {\n     \"regression\": {\n-      \"dependent_variable\": \"FlightDelayMin\",  <4>\n-      \"training_percent\": 90  <5>\n+      \"dependent_variable\": \"FlightDelayMin\",\n+      \"training_percent\": 90\n     }\n   },\n   \"analyzed_fields\": {\n     \"includes\": [],\n-    \"excludes\": [    <6>\n+    \"excludes\": [\n       \"Cancelled\",\n       \"FlightDelay\",\n       \"FlightDelayType\"\n     ]\n   },\n-  \"model_memory_limit\": \"100mb\" <7>\n+  \"model_memory_limit\": \"100mb\"\n }\n --------------------------------------------------\n // TEST[skip:setup kibana sample data]\n \n-<1> The source index to analyze.\n-<2> This query removes erroneous data from the analysis to improve its quality.\n-<3> The index that will contain the results of the analysis; it will consist of \n-a copy of the source index data where each document is annotated with the \n-results.\n-<4> Specifies the continuous variable we want to predict with the {reganalysis}.\n-<5> Specifies the approximate proportion of data that is used for training. In \n-this example we randomly select 90% of the source data for training.\n-<6> Specifies fields to be excluded from the analysis. It is recommended to \n-exclude fields that either contain erroneous data or describe the \n-`dependent_variable`.\n-<7> Specifies a memory limit for the job. If the job requires more than this \n-amount of memory, it fails to start. This makes it possible to prevent job \n-execution if the available memory on the node is limited.\n+<1> This optional query removes erroneous data from the analysis to improve its\n+quality.\n+====\n --\n \n-. Start the job.\n+. Start the job in {kib} or use the\n+{ref}/start-dfanalytics.html[start {dfanalytics-jobs}] API.\n +\n --\n-Use the {ref}/start-dfanalytics.html[start {dfanalytics-jobs}] API to start the \n-job. It will stop automatically when the analysis is complete.\n+The job takes a few minutes to run. Runtime depends on the local hardware and \n+also on the number of documents and fields that analyzed. The more fields and ", "originalCommit": "effeb08d3061a270bafd8981d52ddc2fb657a3ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2MDg2OQ==", "url": "https://github.com/elastic/stack-docs/pull/842#discussion_r376460869", "bodyText": "This works just fine! Only one suggestion below", "author": "dimitris-athanasiou", "createdAt": "2020-02-07T15:45:09Z", "path": "docs/en/stack/ml/df-analytics/flightdata-regression.asciidoc", "diffHunk": "@@ -246,33 +282,46 @@ The snippet below shows a part of a document with the annotated results:\n           \"DestRegion\" : \"UK\",\n           \"OriginAirportID\" : \"LHR\",\n           \"DestCityName\" : \"London\",\n-          \"FlightDelayMin\" : 66,      <1>\n+          \"FlightDelayMin\" : 66,\n           \"ml\" : {\n-            \"FlightDelayMin_prediction\" : 62.527,   <2>\n-            \"is_training\" : false   <3>\n+            \"FlightDelayMin_prediction\" : 62.527,\n+            \"is_training\" : false\n           }\n           ...\n ----\n-\n-<1> The `dependent_variable` with the ground truth value. This is what we are \n-trying to predict with the {reganalysis}.\n-<2> The prediction. The field name is suffixed with `_prediction`.\n-<3> Indicates that this document was not used in the training set.\n+====\n \n \n [[flightdata-regression-evaluate]]\n-==== Evaluating results\n-\n-The results can be evaluated for documents which contain both the ground truth \n-field and the prediction. In the example below, `FlightDelayMins` contains the \n-ground truth and the prediction is stored as `ml.FlightDelayMin_prediction`.\n-\n-. Use the {dfanalytics} evaluate API to evaluate the results.\n-+\n---\n-First, we want to know the training error that represents how well the model \n-performed on the training dataset:\n-\n+==== Evaluating {regression} results\n+\n+Though you can look at individual results and compare the predicted value\n+(`ml.FlightDelayMin_prediction`) to the actual value (`FlightDelayMins`), you\n+typically need to evaluate the success of the {regression} model as a whole.\n+\n+{kib} provides _training error_ metrics, which represent how well the model\n+performed on the training dataset. It also provides _generalization error_\n+metrics, which represent how well the model performed on testing data.\n+\n+For more information about the interpreting the evaluation metrics, see\n+<<ml-dfanalytics-regression-evaluation>>.\n+\n+////\n+TBD: Can we provide tips for what are good MSE or R-squared values? For example:\n+A MSE of zero means that the models predicts the dependent variable with", "originalCommit": "effeb08d3061a270bafd8981d52ddc2fb657a3ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2MTA3MA==", "url": "https://github.com/elastic/stack-docs/pull/842#discussion_r376461070", "bodyText": "\"can be predicted from the feature variables\" -> \"can be explained by the feature variables\"", "author": "dimitris-athanasiou", "createdAt": "2020-02-07T15:45:33Z", "path": "docs/en/stack/ml/df-analytics/flightdata-regression.asciidoc", "diffHunk": "@@ -246,33 +282,46 @@ The snippet below shows a part of a document with the annotated results:\n           \"DestRegion\" : \"UK\",\n           \"OriginAirportID\" : \"LHR\",\n           \"DestCityName\" : \"London\",\n-          \"FlightDelayMin\" : 66,      <1>\n+          \"FlightDelayMin\" : 66,\n           \"ml\" : {\n-            \"FlightDelayMin_prediction\" : 62.527,   <2>\n-            \"is_training\" : false   <3>\n+            \"FlightDelayMin_prediction\" : 62.527,\n+            \"is_training\" : false\n           }\n           ...\n ----\n-\n-<1> The `dependent_variable` with the ground truth value. This is what we are \n-trying to predict with the {reganalysis}.\n-<2> The prediction. The field name is suffixed with `_prediction`.\n-<3> Indicates that this document was not used in the training set.\n+====\n \n \n [[flightdata-regression-evaluate]]\n-==== Evaluating results\n-\n-The results can be evaluated for documents which contain both the ground truth \n-field and the prediction. In the example below, `FlightDelayMins` contains the \n-ground truth and the prediction is stored as `ml.FlightDelayMin_prediction`.\n-\n-. Use the {dfanalytics} evaluate API to evaluate the results.\n-+\n---\n-First, we want to know the training error that represents how well the model \n-performed on the training dataset:\n-\n+==== Evaluating {regression} results\n+\n+Though you can look at individual results and compare the predicted value\n+(`ml.FlightDelayMin_prediction`) to the actual value (`FlightDelayMins`), you\n+typically need to evaluate the success of the {regression} model as a whole.\n+\n+{kib} provides _training error_ metrics, which represent how well the model\n+performed on the training dataset. It also provides _generalization error_\n+metrics, which represent how well the model performed on testing data.\n+\n+For more information about the interpreting the evaluation metrics, see\n+<<ml-dfanalytics-regression-evaluation>>.\n+\n+////\n+TBD: Can we provide tips for what are good MSE or R-squared values? For example:\n+A MSE of zero means that the models predicts the dependent variable with\n+perfect accuracy. This is the ideal, but is typically not possible. Likewise, an\n+R-squared value of 1 indicates that all of the variance in the dependent variable\n+can be predicted from the feature variables. Typically, you compare the MSE and", "originalCommit": "effeb08d3061a270bafd8981d52ddc2fb657a3ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "21fe499327c018447ce4bcf3bef1b7ccc8ec56a7", "url": "https://github.com/elastic/stack-docs/commit/21fe499327c018447ce4bcf3bef1b7ccc8ec56a7", "message": "[DOCS] Addresses feedback", "committedDate": "2020-02-07T16:34:37Z", "type": "commit"}, {"oid": "40dd44441d93755fb5f569bd30f280c8a9b9967e", "url": "https://github.com/elastic/stack-docs/commit/40dd44441d93755fb5f569bd30f280c8a9b9967e", "message": "[DOCS] Terminology fix", "committedDate": "2020-02-07T16:43:38Z", "type": "commit"}]}