{"pr_number": 1359, "pr_title": "[DOCS] Add feature importance to classification example", "pr_createdAt": "2020-09-10T00:25:39Z", "pr_url": "https://github.com/elastic/stack-docs/pull/1359", "timeline": [{"oid": "4ba1595cfd3da97b04406022d891baeb1c217993", "url": "https://github.com/elastic/stack-docs/commit/4ba1595cfd3da97b04406022d891baeb1c217993", "message": "[DOCS] Update feature importance overview", "committedDate": "2020-09-16T00:12:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI3ODg3MQ==", "url": "https://github.com/elastic/stack-docs/pull/1359#discussion_r489278871", "bodyText": "class_score is definitely not a probability, since if I choose k very very small, class_score may be arbitrary large, while probability is always between 0 and 1. It's better to call it a \"likelihood\". And also it doesn't \"control\" it but simple \"shows\". It is controlled by the threshold k, which we estimate automagically based on class_assignment_objective configuration.", "author": "valeriy42", "createdAt": "2020-09-16T09:00:09Z", "path": "docs/en/stack/ml/df-analytics/dfa-classification.asciidoc", "diffHunk": "@@ -123,15 +124,13 @@ The value of `class_probability` shows how likely it is that a given data point\n belongs to a certain class. It is a value between 0 and 1. The higher the \n number, the higher the probability that the data point belongs to the named \n class. This information is stored in the `top_classes` array for each document \n-in your destination index. See the\n-{ml-docs}/flightdata-classification.html#flightdata-classification-results[Viewing {classification} results]\n-section in the {classification} example.\n+in your destination index.\n \n [[dfa-classification-class-score]]\n === `class_score`\n \n The value of `class_score` controls the probability at which a class label is ", "originalCommit": "4ba1595cfd3da97b04406022d891baeb1c217993", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4MjI5MQ==", "url": "https://github.com/elastic/stack-docs/pull/1359#discussion_r489282291", "bodyText": "Strictly speaking, class_score can be larger than 1 in some degenerated cases. So it's defined as larger or equal to 0.", "author": "valeriy42", "createdAt": "2020-09-16T09:05:33Z", "path": "docs/en/stack/ml/df-analytics/flightdata-classification.asciidoc", "diffHunk": "@@ -316,21 +324,20 @@ or testing data set. You can filter the table and the confusion matrix such that\n they contain only testing or training data. You can also enable histogram charts\n to get a better understanding of the distribution of values in your data.\n \n-If you examine this destination index more closely in the *Discover* app in \n-{kib} or use the standard {es} search command, you can see that the analysis \n-predicts the probability of all possible classes for the dependent variable (in \n-a `top_classes` object). In this case, there are two classes: `true` and \n-`false`. The most probable class is the prediction, which is what's shown in the\n-{classification} results table. If you want to understand how sure the model is\n-about the prediction, however, you might want to examine the class probability\n-values. A higher number means that the model is more confident.\n+If you want to understand how certain the model is about each prediction, you\n+can examine its probability and score (`ml.prediction_probability` and\n+`ml.prediction_score`). These values range between 0 and 1; the higher the", "originalCommit": "4ba1595cfd3da97b04406022d891baeb1c217993", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4Njk0OA==", "url": "https://github.com/elastic/stack-docs/pull/1359#discussion_r489286948", "bodyText": "This is correct up to a constant. There is also a datapoint-independent constant -- an average log-odd overall all training points, which we add to the sum of feature importance before taking the inverse-logit to compute the probabilities.", "author": "valeriy42", "createdAt": "2020-09-16T09:13:00Z", "path": "docs/en/stack/ml/df-analytics/flightdata-classification.asciidoc", "diffHunk": "@@ -343,50 +350,95 @@ The snippet below shows a part of a document with the annotated results:\n           \"FlightDelay\" : false,\n           ...\n           \"ml\" : {\n+            \"FlightDelay_prediction\" : false,\n             \"top_classes\" : [ <1>\n               {\n-                \"class_probability\" : 0.9198146781161334, \n-               \"class_score\" : 0.36964390728677926, \n-               \"class_name\" : false\n+                \"class_name\" : false,\n+                \"class_probability\" : 0.3933807062505216,\n+                \"class_score\" : 0.3933807062505216\n               },\n               {\n-                \"class_probability\" : 0.08018532188386665,\n-                 \"class_score\" : 0.08018532188386665,\n-                 \"class_name\" : true\n+                \"class_name\" : true,\n+                \"class_probability\" : 0.6066192937494784,\n+                \"class_score\" : 0.22857258275913037\n               }\n             ],\n-            \"prediction_score\" : 0.36964390728677926,\n-            \"FlightDelay_prediction\" : false,\n-            \"prediction_probability\" : 0.9198146781161334,\n+            \"prediction_probability\" : 0.3933807062505216,\n+            \"prediction_score\" : 0.3933807062505216,\n             \"feature_importance\" : [\n               {\n-                \"feature_name\" : \"DistanceMiles\",\n-                \"importance\" : -3.039025449178423\n+                \"feature_name\" : \"FlightTimeMin\",\n+                  \"importance\" : -2.823868829093038,\n+                  \"classes\" : [\n+                    {\n+                      \"class_name\" : false,\n+                      \"importance\" : -2.823868829093038\n+                    },\n+                    {\n+                      \"class_name\" : true,\n+                      \"importance\" : 2.823868829093038\n+                    }\n+                  ]\n               },\n               {\n-                \"feature_name\" : \"FlightTimeMin\",\n-                \"importance\" : 2.4980756273399045\n-              }\n+                \"feature_name\" : \"DistanceMiles\",\n+                \"importance\" : 0.9872151818111125,\n+                \"classes\" : [\n+                  {\n+                    \"class_name\" : false,\n+                    \"importance\" : 0.9872151818111125\n+                  },\n+                  {\n+                    \"class_name\" : true,\n+                    \"importance\" : -0.9872151818111125\n+                  }\n+                ]\n+              },\n+              ...\n             ],\n             \"is_training\" : false\n           }\n ----\n-<1> An array of values specifying the probability of the prediction and the \n-`class_score` for each class. \n+<1> An array of values specifying the probability of the prediction and the\n+score for each class. \n+\n+The class with the highest score is the prediction. In this example, `false` has\n+a `class_score` of 0.39 while `true` has only 0.22, so the prediction will be\n+`false`. For more details about these values, see\n+<<dfa-classification-interpret>>.\n+====\n \n-The `top_classes` object contains the predicted classes with the highest \n-scores. The `class_probability` is a value between 0 and 1. The higher the \n-number, the more confident the model is that the data point belongs to the named \n-class. In the example above, `false` has a `class_probability` of 0.91 while \n-`true` has only 0.08, so the prediction will be `false`. The `class_score` is a \n-function of the probability.\n+If you chose to calculate feature importance, the destination index also\n+contains `ml.feature_importance` objects. Every field that is included in the \n+{classanalysis} (known as a _feature_ of the data point) is assigned a feature\n+importance value. However, only the most significant values (in this case, the\n+top 10) are stored in the index. These values indicate which features had the\n+biggest impact (positive or negative) on each prediction. In {kib}, you can see\n+this information displayed in the form of a decision plot:\n \n+[role=\"screenshot\"]\n+image::images/flights-classification-importance.png[\"A decision plot for feature importance values in {kib}\"]\n+\n+The sum of the feature importance values for a class (in this example, `false`)\n+in this data point approximates the logarithm of its odds\n+(or {wikipedia}/Logit[log-odds]).\n ////\n-It is chosen so that the decision to assign the \n-data point to the class with the highest score maximizes the minimum recall of \n-any class.\n+//Does this mean the sum of the feature importance values for false in this\n+example should equal the logit(p), where p is the class_probability for false?", "originalCommit": "4ba1595cfd3da97b04406022d891baeb1c217993", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMxNDQ3NQ==", "url": "https://github.com/elastic/stack-docs/pull/1359#discussion_r489314475", "bodyText": "What happens is that the decision forest predicted the log-odds directly and then we compute feature importance on the log-odds values. When we evaluate a data point, we take the log-odds predicted by the decision forest and then apply the inverse of the logit function to get the class probability.", "author": "valeriy42", "createdAt": "2020-09-16T09:56:16Z", "path": "docs/en/stack/ml/df-analytics/flightdata-classification.asciidoc", "diffHunk": "@@ -343,50 +350,95 @@ The snippet below shows a part of a document with the annotated results:\n           \"FlightDelay\" : false,\n           ...\n           \"ml\" : {\n+            \"FlightDelay_prediction\" : false,\n             \"top_classes\" : [ <1>\n               {\n-                \"class_probability\" : 0.9198146781161334, \n-               \"class_score\" : 0.36964390728677926, \n-               \"class_name\" : false\n+                \"class_name\" : false,\n+                \"class_probability\" : 0.3933807062505216,\n+                \"class_score\" : 0.3933807062505216\n               },\n               {\n-                \"class_probability\" : 0.08018532188386665,\n-                 \"class_score\" : 0.08018532188386665,\n-                 \"class_name\" : true\n+                \"class_name\" : true,\n+                \"class_probability\" : 0.6066192937494784,\n+                \"class_score\" : 0.22857258275913037\n               }\n             ],\n-            \"prediction_score\" : 0.36964390728677926,\n-            \"FlightDelay_prediction\" : false,\n-            \"prediction_probability\" : 0.9198146781161334,\n+            \"prediction_probability\" : 0.3933807062505216,\n+            \"prediction_score\" : 0.3933807062505216,\n             \"feature_importance\" : [\n               {\n-                \"feature_name\" : \"DistanceMiles\",\n-                \"importance\" : -3.039025449178423\n+                \"feature_name\" : \"FlightTimeMin\",\n+                  \"importance\" : -2.823868829093038,\n+                  \"classes\" : [\n+                    {\n+                      \"class_name\" : false,\n+                      \"importance\" : -2.823868829093038\n+                    },\n+                    {\n+                      \"class_name\" : true,\n+                      \"importance\" : 2.823868829093038\n+                    }\n+                  ]\n               },\n               {\n-                \"feature_name\" : \"FlightTimeMin\",\n-                \"importance\" : 2.4980756273399045\n-              }\n+                \"feature_name\" : \"DistanceMiles\",\n+                \"importance\" : 0.9872151818111125,\n+                \"classes\" : [\n+                  {\n+                    \"class_name\" : false,\n+                    \"importance\" : 0.9872151818111125\n+                  },\n+                  {\n+                    \"class_name\" : true,\n+                    \"importance\" : -0.9872151818111125\n+                  }\n+                ]\n+              },\n+              ...\n             ],\n             \"is_training\" : false\n           }\n ----\n-<1> An array of values specifying the probability of the prediction and the \n-`class_score` for each class. \n+<1> An array of values specifying the probability of the prediction and the\n+score for each class. \n+\n+The class with the highest score is the prediction. In this example, `false` has\n+a `class_score` of 0.39 while `true` has only 0.22, so the prediction will be\n+`false`. For more details about these values, see\n+<<dfa-classification-interpret>>.\n+====\n \n-The `top_classes` object contains the predicted classes with the highest \n-scores. The `class_probability` is a value between 0 and 1. The higher the \n-number, the more confident the model is that the data point belongs to the named \n-class. In the example above, `false` has a `class_probability` of 0.91 while \n-`true` has only 0.08, so the prediction will be `false`. The `class_score` is a \n-function of the probability.\n+If you chose to calculate feature importance, the destination index also\n+contains `ml.feature_importance` objects. Every field that is included in the \n+{classanalysis} (known as a _feature_ of the data point) is assigned a feature\n+importance value. However, only the most significant values (in this case, the\n+top 10) are stored in the index. These values indicate which features had the\n+biggest impact (positive or negative) on each prediction. In {kib}, you can see\n+this information displayed in the form of a decision plot:\n \n+[role=\"screenshot\"]\n+image::images/flights-classification-importance.png[\"A decision plot for feature importance values in {kib}\"]\n+\n+The sum of the feature importance values for a class (in this example, `false`)\n+in this data point approximates the logarithm of its odds\n+(or {wikipedia}/Logit[log-odds]).\n ////\n-It is chosen so that the decision to assign the \n-data point to the class with the highest score maximizes the minimum recall of \n-any class.\n+//Does this mean the sum of the feature importance values for false in this\n+example should equal the logit(p), where p is the class_probability for false?\n+//Does this imply that the feature importance value itself is the result of a logit function? Or that we use the function to merely represent the distribution of feature importance values?", "originalCommit": "4ba1595cfd3da97b04406022d891baeb1c217993", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5OTYzNw==", "url": "https://github.com/elastic/stack-docs/pull/1359#discussion_r489499637", "bodyText": "This is unfortunately a bit more complicated: 0 would represent the class probability of a constant baseline. It relates to the average class probability for the selected class (in Kibana UI) over entire training set.\nIf you select Canceled as the target variable in flight data, this nuance becomes obvious. Since there are many more data points with Canceled = False, let's assume that the average class probability over the entire training set would be something like 0.92. This means that if the class probability of a data point is larger than 0.92 (for example 0.98) than the decision path will go to the right (sum of feature importances is positive). On the other hand, if the class probability is smaller than 0.92 (for example 0.84), than the decision path will go to the left (sum of feature importances is negative).", "author": "valeriy42", "createdAt": "2020-09-16T14:50:53Z", "path": "docs/en/stack/ml/df-analytics/flightdata-classification.asciidoc", "diffHunk": "@@ -343,50 +350,95 @@ The snippet below shows a part of a document with the annotated results:\n           \"FlightDelay\" : false,\n           ...\n           \"ml\" : {\n+            \"FlightDelay_prediction\" : false,\n             \"top_classes\" : [ <1>\n               {\n-                \"class_probability\" : 0.9198146781161334, \n-               \"class_score\" : 0.36964390728677926, \n-               \"class_name\" : false\n+                \"class_name\" : false,\n+                \"class_probability\" : 0.3933807062505216,\n+                \"class_score\" : 0.3933807062505216\n               },\n               {\n-                \"class_probability\" : 0.08018532188386665,\n-                 \"class_score\" : 0.08018532188386665,\n-                 \"class_name\" : true\n+                \"class_name\" : true,\n+                \"class_probability\" : 0.6066192937494784,\n+                \"class_score\" : 0.22857258275913037\n               }\n             ],\n-            \"prediction_score\" : 0.36964390728677926,\n-            \"FlightDelay_prediction\" : false,\n-            \"prediction_probability\" : 0.9198146781161334,\n+            \"prediction_probability\" : 0.3933807062505216,\n+            \"prediction_score\" : 0.3933807062505216,\n             \"feature_importance\" : [\n               {\n-                \"feature_name\" : \"DistanceMiles\",\n-                \"importance\" : -3.039025449178423\n+                \"feature_name\" : \"FlightTimeMin\",\n+                  \"importance\" : -2.823868829093038,\n+                  \"classes\" : [\n+                    {\n+                      \"class_name\" : false,\n+                      \"importance\" : -2.823868829093038\n+                    },\n+                    {\n+                      \"class_name\" : true,\n+                      \"importance\" : 2.823868829093038\n+                    }\n+                  ]\n               },\n               {\n-                \"feature_name\" : \"FlightTimeMin\",\n-                \"importance\" : 2.4980756273399045\n-              }\n+                \"feature_name\" : \"DistanceMiles\",\n+                \"importance\" : 0.9872151818111125,\n+                \"classes\" : [\n+                  {\n+                    \"class_name\" : false,\n+                    \"importance\" : 0.9872151818111125\n+                  },\n+                  {\n+                    \"class_name\" : true,\n+                    \"importance\" : -0.9872151818111125\n+                  }\n+                ]\n+              },\n+              ...\n             ],\n             \"is_training\" : false\n           }\n ----\n-<1> An array of values specifying the probability of the prediction and the \n-`class_score` for each class. \n+<1> An array of values specifying the probability of the prediction and the\n+score for each class. \n+\n+The class with the highest score is the prediction. In this example, `false` has\n+a `class_score` of 0.39 while `true` has only 0.22, so the prediction will be\n+`false`. For more details about these values, see\n+<<dfa-classification-interpret>>.\n+====\n \n-The `top_classes` object contains the predicted classes with the highest \n-scores. The `class_probability` is a value between 0 and 1. The higher the \n-number, the more confident the model is that the data point belongs to the named \n-class. In the example above, `false` has a `class_probability` of 0.91 while \n-`true` has only 0.08, so the prediction will be `false`. The `class_score` is a \n-function of the probability.\n+If you chose to calculate feature importance, the destination index also\n+contains `ml.feature_importance` objects. Every field that is included in the \n+{classanalysis} (known as a _feature_ of the data point) is assigned a feature\n+importance value. However, only the most significant values (in this case, the\n+top 10) are stored in the index. These values indicate which features had the\n+biggest impact (positive or negative) on each prediction. In {kib}, you can see\n+this information displayed in the form of a decision plot:\n \n+[role=\"screenshot\"]\n+image::images/flights-classification-importance.png[\"A decision plot for feature importance values in {kib}\"]\n+\n+The sum of the feature importance values for a class (in this example, `false`)\n+in this data point approximates the logarithm of its odds\n+(or {wikipedia}/Logit[log-odds]).\n ////\n-It is chosen so that the decision to assign the \n-data point to the class with the highest score maximizes the minimum recall of \n-any class.\n+//Does this mean the sum of the feature importance values for false in this\n+example should equal the logit(p), where p is the class_probability for false?\n+//Does this imply that the feature importance value itself is the result of a logit function? Or that we use the function to merely represent the distribution of feature importance values?\n ////\n-====\n+While the probability of a class ranges between 0 and 1, its log-odds range \n+between negative and positive infinity. In {kib}, the decision path for each\n+class starts near zero, which represents a class probability of 0.5.", "originalCommit": "4ba1595cfd3da97b04406022d891baeb1c217993", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwMDEyMA==", "url": "https://github.com/elastic/stack-docs/pull/1359#discussion_r489500120", "bodyText": "Yes, it's true for both multi-class and binary since in the UI you are selecting a class of interest from a drop-down menu.", "author": "valeriy42", "createdAt": "2020-09-16T14:51:32Z", "path": "docs/en/stack/ml/df-analytics/flightdata-classification.asciidoc", "diffHunk": "@@ -343,50 +350,95 @@ The snippet below shows a part of a document with the annotated results:\n           \"FlightDelay\" : false,\n           ...\n           \"ml\" : {\n+            \"FlightDelay_prediction\" : false,\n             \"top_classes\" : [ <1>\n               {\n-                \"class_probability\" : 0.9198146781161334, \n-               \"class_score\" : 0.36964390728677926, \n-               \"class_name\" : false\n+                \"class_name\" : false,\n+                \"class_probability\" : 0.3933807062505216,\n+                \"class_score\" : 0.3933807062505216\n               },\n               {\n-                \"class_probability\" : 0.08018532188386665,\n-                 \"class_score\" : 0.08018532188386665,\n-                 \"class_name\" : true\n+                \"class_name\" : true,\n+                \"class_probability\" : 0.6066192937494784,\n+                \"class_score\" : 0.22857258275913037\n               }\n             ],\n-            \"prediction_score\" : 0.36964390728677926,\n-            \"FlightDelay_prediction\" : false,\n-            \"prediction_probability\" : 0.9198146781161334,\n+            \"prediction_probability\" : 0.3933807062505216,\n+            \"prediction_score\" : 0.3933807062505216,\n             \"feature_importance\" : [\n               {\n-                \"feature_name\" : \"DistanceMiles\",\n-                \"importance\" : -3.039025449178423\n+                \"feature_name\" : \"FlightTimeMin\",\n+                  \"importance\" : -2.823868829093038,\n+                  \"classes\" : [\n+                    {\n+                      \"class_name\" : false,\n+                      \"importance\" : -2.823868829093038\n+                    },\n+                    {\n+                      \"class_name\" : true,\n+                      \"importance\" : 2.823868829093038\n+                    }\n+                  ]\n               },\n               {\n-                \"feature_name\" : \"FlightTimeMin\",\n-                \"importance\" : 2.4980756273399045\n-              }\n+                \"feature_name\" : \"DistanceMiles\",\n+                \"importance\" : 0.9872151818111125,\n+                \"classes\" : [\n+                  {\n+                    \"class_name\" : false,\n+                    \"importance\" : 0.9872151818111125\n+                  },\n+                  {\n+                    \"class_name\" : true,\n+                    \"importance\" : -0.9872151818111125\n+                  }\n+                ]\n+              },\n+              ...\n             ],\n             \"is_training\" : false\n           }\n ----\n-<1> An array of values specifying the probability of the prediction and the \n-`class_score` for each class. \n+<1> An array of values specifying the probability of the prediction and the\n+score for each class. \n+\n+The class with the highest score is the prediction. In this example, `false` has\n+a `class_score` of 0.39 while `true` has only 0.22, so the prediction will be\n+`false`. For more details about these values, see\n+<<dfa-classification-interpret>>.\n+====\n \n-The `top_classes` object contains the predicted classes with the highest \n-scores. The `class_probability` is a value between 0 and 1. The higher the \n-number, the more confident the model is that the data point belongs to the named \n-class. In the example above, `false` has a `class_probability` of 0.91 while \n-`true` has only 0.08, so the prediction will be `false`. The `class_score` is a \n-function of the probability.\n+If you chose to calculate feature importance, the destination index also\n+contains `ml.feature_importance` objects. Every field that is included in the \n+{classanalysis} (known as a _feature_ of the data point) is assigned a feature\n+importance value. However, only the most significant values (in this case, the\n+top 10) are stored in the index. These values indicate which features had the\n+biggest impact (positive or negative) on each prediction. In {kib}, you can see\n+this information displayed in the form of a decision plot:\n \n+[role=\"screenshot\"]\n+image::images/flights-classification-importance.png[\"A decision plot for feature importance values in {kib}\"]\n+\n+The sum of the feature importance values for a class (in this example, `false`)\n+in this data point approximates the logarithm of its odds\n+(or {wikipedia}/Logit[log-odds]).\n ////\n-It is chosen so that the decision to assign the \n-data point to the class with the highest score maximizes the minimum recall of \n-any class.\n+//Does this mean the sum of the feature importance values for false in this\n+example should equal the logit(p), where p is the class_probability for false?\n+//Does this imply that the feature importance value itself is the result of a logit function? Or that we use the function to merely represent the distribution of feature importance values?\n ////\n-====\n+While the probability of a class ranges between 0 and 1, its log-odds range \n+between negative and positive infinity. In {kib}, the decision path for each\n+class starts near zero, which represents a class probability of 0.5.\n+// Is this true for multi-class classification or just binary classification?", "originalCommit": "4ba1595cfd3da97b04406022d891baeb1c217993", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d8027eab7602be51195595c76b0c9383513bc27", "url": "https://github.com/elastic/stack-docs/commit/5d8027eab7602be51195595c76b0c9383513bc27", "message": "[DOCS] Add feature importance to classification example", "committedDate": "2020-09-23T01:39:06Z", "type": "forcePushed"}, {"oid": "691f8dfa467c5d1f386646c02439014b3366b4ce", "url": "https://github.com/elastic/stack-docs/commit/691f8dfa467c5d1f386646c02439014b3366b4ce", "message": "[DOCS] Remove unnecessary screenshot", "committedDate": "2020-09-29T16:16:59Z", "type": "forcePushed"}, {"oid": "cac81f1424f1d3029cfb6f3f9453659c9cfa305c", "url": "https://github.com/elastic/stack-docs/commit/cac81f1424f1d3029cfb6f3f9453659c9cfa305c", "message": "[DOCS] Add feature importance to classification example", "committedDate": "2020-09-30T19:12:18Z", "type": "forcePushed"}, {"oid": "9a8b9fb1aaef737102e1ff7132cd7ae2c0f22b9c", "url": "https://github.com/elastic/stack-docs/commit/9a8b9fb1aaef737102e1ff7132cd7ae2c0f22b9c", "message": "[DOCS] Add feature importance to classification example", "committedDate": "2020-10-26T19:33:40Z", "type": "commit"}, {"oid": "e61d2a98a9c359116c53d7258e2c72885359b82e", "url": "https://github.com/elastic/stack-docs/commit/e61d2a98a9c359116c53d7258e2c72885359b82e", "message": "[DOCS] Remove unnecessary change", "committedDate": "2020-10-26T19:33:40Z", "type": "commit"}, {"oid": "6947f6823a5722a5149a0f5e2989afd2809ddacf", "url": "https://github.com/elastic/stack-docs/commit/6947f6823a5722a5149a0f5e2989afd2809ddacf", "message": "Refreshes screenshot; removes comments", "committedDate": "2020-10-26T21:21:20Z", "type": "commit"}, {"oid": "6947f6823a5722a5149a0f5e2989afd2809ddacf", "url": "https://github.com/elastic/stack-docs/commit/6947f6823a5722a5149a0f5e2989afd2809ddacf", "message": "Refreshes screenshot; removes comments", "committedDate": "2020-10-26T21:21:20Z", "type": "forcePushed"}, {"oid": "b7a2dcd5e6112c602ad05b82c6e7b6a8b4548a7b", "url": "https://github.com/elastic/stack-docs/commit/b7a2dcd5e6112c602ad05b82c6e7b6a8b4548a7b", "message": "Revert changes to feature importance concept", "committedDate": "2020-10-26T21:24:40Z", "type": "commit"}]}