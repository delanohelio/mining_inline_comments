{"pr_number": 843, "pr_title": "[DOCS] Adds a page that lists the modules with OOTB ML jobs", "pr_createdAt": "2020-02-06T13:39:59Z", "pr_url": "https://github.com/elastic/stack-docs/pull/843", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4NDEzNw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382184137", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * For APM data where `agent.name` is `js-base`.\n          \n          \n            \n            * For data from {apm-rum-agents} (where `agent.name` is `js-base`).", "author": "lcawl", "createdAt": "2020-02-20T18:38:19Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+// tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+// end::apache-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+// tag::apm-jobs[]\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.", "originalCommit": "9b28cc2aa6b953962336862d3310e87b65b11278", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4NDc1Mg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382184752", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * For APM data where `agent.name` is `js-base` or `nodejs`.\n          \n          \n            \n            * For data from {apm-rum-agents} or {apm-node-agents} (where `agent.name` is `js-base` or `nodejs`).", "author": "lcawl", "createdAt": "2020-02-20T18:39:35Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+// tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+// end::apache-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+// tag::apm-jobs[]\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate \n+  (using the <<ml-nonzero-count,`high_non_zero_count` function>>).\n+  \n+This job can help detect browser compatibility issues.\n+\n+////\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+////\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.", "originalCommit": "9b28cc2aa6b953962336862d3310e87b65b11278", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4NTE3OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382185178", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * For APM data where `agent.name` is `js-base`.\n          \n          \n            \n            * For data from {apm-rum-agents} (where `agent.name` is `js-base`).", "author": "lcawl", "createdAt": "2020-02-20T18:40:27Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+// tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+// end::apache-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+// tag::apm-jobs[]\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate \n+  (using the <<ml-nonzero-count,`high_non_zero_count` function>>).\n+  \n+This job can help detect browser compatibility issues.\n+\n+////\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+////\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.", "originalCommit": "9b28cc2aa6b953962336862d3310e87b65b11278", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4575130c7b5ae5e63a5f90b17270a4d0edaaee6c", "url": "https://github.com/elastic/stack-docs/commit/4575130c7b5ae5e63a5f90b17270a4d0edaaee6c", "message": "Apply suggestions from code review\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-21T15:08:02Z", "type": "commit"}, {"oid": "70c00fdb3c811f9f874afae2b18bc8a77377e1eb", "url": "https://github.com/elastic/stack-docs/commit/70c00fdb3c811f9f874afae2b18bc8a77377e1eb", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "committedDate": "2020-02-21T17:11:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgzNTcxNg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382835716", "bodyText": "FYI, we are in the process of renaming the agent name to rum-js elastic/apm-agent-rum-js#548 from the next major version 5.x", "author": "vigneshshanmugam", "createdAt": "2020-02-21T22:26:16Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -145,7 +145,7 @@ Function: `high_mean`.\n \n anomalous_error_rate_for_user_agents_jsbase::\n \n-* For APM data where `agent.name` is `js-base`.\n+* For data from {apm-rum-agents} (where `agent.name` is `js-base`).", "originalCommit": "4575130c7b5ae5e63a5f90b17270a4d0edaaee6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyNjIwNw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r383126207", "bodyText": "@vigneshshanmugam Thanks for the info! I subscribed to the related PR that you linked and will open one for changing the agent name here in the OOTB ML jobs page. After elastic/apm-agent-rum-js#548 is merged, I'll merge mine that changes js-base to rum-js on this page.\nEDIT: I opened the PR: #902", "author": "szabosteve", "createdAt": "2020-02-24T08:19:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgzNTcxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTI2Mg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085262", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:54:56Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_script::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of powershell script activities.\n+* Detects unusual powershell script execution compared to other powershell \n+  script activities.\n+\n+Looks for unusual powershell scripts that may indicate execution of malware, or \n+persistence mechanisms.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTMyOQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085329", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:55:06Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_script::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of powershell script activities.\n+* Detects unusual powershell script execution compared to other powershell \n+  script activities.\n+\n+Looks for unusual powershell scripts that may indicate execution of malware, or \n+persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `user.name`\n+* `winlog.event_data.Path`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTQwNg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085406", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:55:14Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_script::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of powershell script activities.\n+* Detects unusual powershell script execution compared to other powershell \n+  script activities.\n+\n+Looks for unusual powershell scripts that may indicate execution of malware, or \n+persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `user.name`\n+* `winlog.event_data.Path`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+windows_anomalous_service::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of Windows service activities.\n+* Detects Windows service activities that occur rarely compared to other Windows \n+  service activities.\n+\n+Looks for rare and unusual Windows services which may indicate execution of \n+unauthorized services, malware, or persistence mechanisms.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTQ4Ng==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085486", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:55:23Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_script::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of powershell script activities.\n+* Detects unusual powershell script execution compared to other powershell \n+  script activities.\n+\n+Looks for unusual powershell scripts that may indicate execution of malware, or \n+persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `user.name`\n+* `winlog.event_data.Path`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+windows_anomalous_service::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of Windows service activities.\n+* Detects Windows service activities that occur rarely compared to other Windows \n+  service activities.\n+\n+Looks for rare and unusual Windows services which may indicate execution of \n+unauthorized services, malware, or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `winlog.event_data.ServiceName`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTU4Mw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085583", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:55:33Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_script::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of powershell script activities.\n+* Detects unusual powershell script execution compared to other powershell \n+  script activities.\n+\n+Looks for unusual powershell scripts that may indicate execution of malware, or \n+persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `user.name`\n+* `winlog.event_data.Path`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+windows_anomalous_service::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of Windows service activities.\n+* Detects Windows service activities that occur rarely compared to other Windows \n+  service activities.\n+\n+Looks for rare and unusual Windows services which may indicate execution of \n+unauthorized services, malware, or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `winlog.event_data.ServiceName`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_rare_user_runas_event::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of user context switches.\n+* Detects user context switches that occur rarely compared to other user context \n+  switches.\n+\n+Unusual user context switches can be due to privilege escalation.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTY2MQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085661", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:55:41Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_script::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of powershell script activities.\n+* Detects unusual powershell script execution compared to other powershell \n+  script activities.\n+\n+Looks for unusual powershell scripts that may indicate execution of malware, or \n+persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `user.name`\n+* `winlog.event_data.Path`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+windows_anomalous_service::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of Windows service activities.\n+* Detects Windows service activities that occur rarely compared to other Windows \n+  service activities.\n+\n+Looks for rare and unusual Windows services which may indicate execution of \n+unauthorized services, malware, or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `winlog.event_data.ServiceName`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_rare_user_runas_event::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of user context switches.\n+* Detects user context switches that occur rarely compared to other user context \n+  switches.\n+\n+Unusual user context switches can be due to privilege escalation.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTcyOA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085728", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:55:50Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_script::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of powershell script activities.\n+* Detects unusual powershell script execution compared to other powershell \n+  script activities.\n+\n+Looks for unusual powershell scripts that may indicate execution of malware, or \n+persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `user.name`\n+* `winlog.event_data.Path`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+windows_anomalous_service::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of Windows service activities.\n+* Detects Windows service activities that occur rarely compared to other Windows \n+  service activities.\n+\n+Looks for rare and unusual Windows services which may indicate execution of \n+unauthorized services, malware, or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `winlog.event_data.ServiceName`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_rare_user_runas_event::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of user context switches.\n+* Detects user context switches that occur rarely compared to other user context \n+  switches.\n+\n+Unusual user context switches can be due to privilege escalation.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_rare_user_type10_remote_login::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of user remote login activities.\n+* Detects user remote login activities that occur rarely compared to other \n+  user remote login activities.\n+\n+Looks for unusual user remote logins. Unusual RDP (remote desktop protocol) \n+user logins can indicate account takeover or credentialed access.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTkyNg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085926", "bodyText": "Closing the commented-out block\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Function: `rare`.\n          \n          \n            \n            Function: `rare`.\n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:56:14Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_script::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of powershell script activities.\n+* Detects unusual powershell script execution compared to other powershell \n+  script activities.\n+\n+Looks for unusual powershell scripts that may indicate execution of malware, or \n+persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `user.name`\n+* `winlog.event_data.Path`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+windows_anomalous_service::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of Windows service activities.\n+* Detects Windows service activities that occur rarely compared to other Windows \n+  service activities.\n+\n+Looks for rare and unusual Windows services which may indicate execution of \n+unauthorized services, malware, or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `winlog.event_data.ServiceName`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_rare_user_runas_event::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of user context switches.\n+* Detects user context switches that occur rarely compared to other user context \n+  switches.\n+\n+Unusual user context switches can be due to privilege escalation.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_rare_user_type10_remote_login::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of user remote login activities.\n+* Detects user remote login activities that occur rarely compared to other \n+  user remote login activities.\n+\n+Looks for unusual user remote logins. Unusual RDP (remote desktop protocol) \n+user logins can indicate account takeover or credentialed access.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NjYwNw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379086607", "bodyText": "If we do start using these tagged regions from other books, however, we'll need to make sure our links work externally too.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            end::apache-jobs[]", "author": "lcawl", "createdAt": "2020-02-13T19:57:47Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NzU3MQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379087571", "bodyText": "Ditto\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            filter.", "author": "lcawl", "createdAt": "2020-02-13T19:59:37Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4ODIwOQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379088209", "bodyText": "Duplicates first bullet, IMO:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This job can be created if web access log data exists matching the defined", "author": "lcawl", "createdAt": "2020-02-13T20:00:56Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined ", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4ODMzMA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379088330", "bodyText": "Ditto.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            filter.", "author": "lcawl", "createdAt": "2020-02-13T20:01:11Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5MTUxMw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379091513", "bodyText": "Do these jobs appear by default in the Logs UI? If so, I think we should clarify how you get them with something like this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            tag::logs-jobs[]\n          \n          \n            \n            These {anomaly-jobs} appear by default in the {kibana-ref}/xpack-logs.html[Logs app] in {kib}.", "author": "lcawl", "createdAt": "2020-02-13T20:08:16Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5MjMwNQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379092305", "bodyText": "This now seems redundant to me:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This job can be created if web access log data exists matching the defined", "author": "lcawl", "createdAt": "2020-02-13T20:09:53Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined ", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5MjQxNw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379092417", "bodyText": "Ditto:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            filter.\n          \n          \n            \n            filter.", "author": "lcawl", "createdAt": "2020-02-13T20:10:10Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5NjAyNA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379096024", "bodyText": "I think we should clarify how/where you get these by using text similar to what's in https://www.elastic.co/guide/en/siem/guide/7.6/machine-learning.html#included-jobs and https://www.elastic.co/guide/en/siem/guide/7.6/prebuilt-ml-jobs.html. For example:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            These {anomaly-jobs} appear by default in the Anomaly Detection interface of the {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you automatically detect file system and network anomalies on your hosts.\n          \n      \n    \n    \n  \n\nIt might be worthwhile to move/single-source the \"The jobs are available when... you ship data using Beats, and Kibana is configured with the required index patterns...\" etc here too.", "author": "lcawl", "createdAt": "2020-02-13T20:18:17Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5NjYzNQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379096635", "bodyText": "I think this sentence is redundant after you add the intro to the SIEM section (since otherwise it just duplicates the first bullet):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This job can be created if auditbeat or winlogbeat data exists, matching the \n          \n          \n            \n            This job can be created if auditbeat or winlogbeat data exists, matching the", "author": "lcawl", "createdAt": "2020-02-13T20:19:35Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the ", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5Njc0OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379096748", "bodyText": "Ditto:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            defined filter, and is available via the SIEM application.\n          \n          \n            \n            defined filter, and is available via the SIEM application.", "author": "lcawl", "createdAt": "2020-02-13T20:19:49Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5NzAzNQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379097035", "bodyText": "Likewise, I think this sentence is redundant:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This job can be created if auditbeat data exists, matching the defined filter, \n          \n          \n            \n            This job can be created if auditbeat data exists, matching the defined filter,", "author": "lcawl", "createdAt": "2020-02-13T20:20:29Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, ", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5NzE2OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379097168", "bodyText": "Ditto re redundancy:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This job can be created if auditbeat data exists, matching the defined filter, \n          \n          \n            \n            This job can be created if auditbeat data exists, matching the defined filter,", "author": "lcawl", "createdAt": "2020-02-13T20:20:48Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, ", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5NzMyMA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379097320", "bodyText": "Ditto re redundancy:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This job can be created if auditbeat data exists, matching the defined filter,", "author": "lcawl", "createdAt": "2020-02-13T20:21:10Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, ", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "093c8dae2246a49c0e32cd9fec3e5cb51b515c95", "url": "https://github.com/elastic/stack-docs/commit/093c8dae2246a49c0e32cd9fec3e5cb51b515c95", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:16:00Z", "type": "commit"}, {"oid": "eb1905ab0e142af9f6bbaf3d7a66a59df78645b1", "url": "https://github.com/elastic/stack-docs/commit/eb1905ab0e142af9f6bbaf3d7a66a59df78645b1", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:16:27Z", "type": "commit"}, {"oid": "41ac9a44eada9e2d28de87aa5457826377eed8b9", "url": "https://github.com/elastic/stack-docs/commit/41ac9a44eada9e2d28de87aa5457826377eed8b9", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:16:39Z", "type": "commit"}, {"oid": "e48f0456dc2b643737a2044c50cd55dcef28c044", "url": "https://github.com/elastic/stack-docs/commit/e48f0456dc2b643737a2044c50cd55dcef28c044", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:17:04Z", "type": "commit"}, {"oid": "f7e21763b5f3c6a8dcc79323780bc334eaf79c72", "url": "https://github.com/elastic/stack-docs/commit/f7e21763b5f3c6a8dcc79323780bc334eaf79c72", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:31:21Z", "type": "commit"}, {"oid": "391cf695e3fc4f4fc7e03e4c2fc94ec5c56296ce", "url": "https://github.com/elastic/stack-docs/commit/391cf695e3fc4f4fc7e03e4c2fc94ec5c56296ce", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:43:04Z", "type": "commit"}, {"oid": "ae2c8e8ef84e5bc758acf1f9336b1036201aeaba", "url": "https://github.com/elastic/stack-docs/commit/ae2c8e8ef84e5bc758acf1f9336b1036201aeaba", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:43:20Z", "type": "commit"}, {"oid": "26412dd76d5392541bed273e74f12403953eaa66", "url": "https://github.com/elastic/stack-docs/commit/26412dd76d5392541bed273e74f12403953eaa66", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:43:30Z", "type": "commit"}, {"oid": "54e7b7f1d497600bf791d2de2d63a5ef7990fd7a", "url": "https://github.com/elastic/stack-docs/commit/54e7b7f1d497600bf791d2de2d63a5ef7990fd7a", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:43:39Z", "type": "commit"}, {"oid": "a48a0e11773a70d6e5610894ce80b5e0e914e65c", "url": "https://github.com/elastic/stack-docs/commit/a48a0e11773a70d6e5610894ce80b5e0e914e65c", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:43:52Z", "type": "commit"}, {"oid": "d0dfdb7ae3fd1997993187c5ba01a1d444529970", "url": "https://github.com/elastic/stack-docs/commit/d0dfdb7ae3fd1997993187c5ba01a1d444529970", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:44:43Z", "type": "commit"}, {"oid": "e93d1eea54943d87aa4fefe84ca5a00b1149e465", "url": "https://github.com/elastic/stack-docs/commit/e93d1eea54943d87aa4fefe84ca5a00b1149e465", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:44:52Z", "type": "commit"}, {"oid": "dd921a984f64fdffa998fdcf10bb3044438e520d", "url": "https://github.com/elastic/stack-docs/commit/dd921a984f64fdffa998fdcf10bb3044438e520d", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:49:35Z", "type": "commit"}, {"oid": "1c77effe0f7f1124f9283d8976655bbef6b5ed56", "url": "https://github.com/elastic/stack-docs/commit/1c77effe0f7f1124f9283d8976655bbef6b5ed56", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:49:44Z", "type": "commit"}, {"oid": "0f90788fc394e575be5a210ef947aafd4c520ff5", "url": "https://github.com/elastic/stack-docs/commit/0f90788fc394e575be5a210ef947aafd4c520ff5", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:49:53Z", "type": "commit"}, {"oid": "1e55696d91186ea0c83b889cf5ca016ca8e396ea", "url": "https://github.com/elastic/stack-docs/commit/1e55696d91186ea0c83b889cf5ca016ca8e396ea", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:50:02Z", "type": "commit"}, {"oid": "40127a9437994824ed9551a9413ec7e97f878f3f", "url": "https://github.com/elastic/stack-docs/commit/40127a9437994824ed9551a9413ec7e97f878f3f", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:50:43Z", "type": "commit"}, {"oid": "35267f5f8cbea640f4057e232ab4b54c69d80dc1", "url": "https://github.com/elastic/stack-docs/commit/35267f5f8cbea640f4057e232ab4b54c69d80dc1", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:51:11Z", "type": "commit"}, {"oid": "59c93d910348ee50961db8d54f1ac78c1428f820", "url": "https://github.com/elastic/stack-docs/commit/59c93d910348ee50961db8d54f1ac78c1428f820", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:51:35Z", "type": "commit"}, {"oid": "f05f87e3d278bdde943194cf98e48eaa6cde96b0", "url": "https://github.com/elastic/stack-docs/commit/f05f87e3d278bdde943194cf98e48eaa6cde96b0", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:54:01Z", "type": "commit"}, {"oid": "bed80fef6428a79a562746557b28fb98db5c3ec0", "url": "https://github.com/elastic/stack-docs/commit/bed80fef6428a79a562746557b28fb98db5c3ec0", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:54:11Z", "type": "commit"}, {"oid": "d36c237e422549dd0d18d5eaec5d621c38803456", "url": "https://github.com/elastic/stack-docs/commit/d36c237e422549dd0d18d5eaec5d621c38803456", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T07:54:30Z", "type": "commit"}, {"oid": "cd80b769efdb811bfe45a951b64b93f663329dca", "url": "https://github.com/elastic/stack-docs/commit/cd80b769efdb811bfe45a951b64b93f663329dca", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:02:10Z", "type": "commit"}, {"oid": "88eb5fb41d7ffe833fe9527477bbf2107109a07e", "url": "https://github.com/elastic/stack-docs/commit/88eb5fb41d7ffe833fe9527477bbf2107109a07e", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:10:14Z", "type": "commit"}, {"oid": "ca7664dfcd13a4447da5a5d86417f7bccfbec17e", "url": "https://github.com/elastic/stack-docs/commit/ca7664dfcd13a4447da5a5d86417f7bccfbec17e", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:11:03Z", "type": "commit"}, {"oid": "16869460fcf90b8c6c9e6b63c61d484ac676d1ee", "url": "https://github.com/elastic/stack-docs/commit/16869460fcf90b8c6c9e6b63c61d484ac676d1ee", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:11:36Z", "type": "commit"}, {"oid": "1fe0276636df9af9a1e0163b1ac749f82ef41405", "url": "https://github.com/elastic/stack-docs/commit/1fe0276636df9af9a1e0163b1ac749f82ef41405", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:12:56Z", "type": "commit"}, {"oid": "ad54f7c8df80a07619b62718235c003b4ab47ba2", "url": "https://github.com/elastic/stack-docs/commit/ad54f7c8df80a07619b62718235c003b4ab47ba2", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:13:16Z", "type": "commit"}, {"oid": "b6c67611d007c9fbd6ff393517a6782f3297fafb", "url": "https://github.com/elastic/stack-docs/commit/b6c67611d007c9fbd6ff393517a6782f3297fafb", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:14:07Z", "type": "commit"}, {"oid": "6b72daba76f4eeda4bb7b46e7dd29449f1529280", "url": "https://github.com/elastic/stack-docs/commit/6b72daba76f4eeda4bb7b46e7dd29449f1529280", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:14:36Z", "type": "commit"}, {"oid": "f3e997518f66a0d58c389b4fee1f2e579b100d38", "url": "https://github.com/elastic/stack-docs/commit/f3e997518f66a0d58c389b4fee1f2e579b100d38", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:17:10Z", "type": "commit"}, {"oid": "83ea238682a35e9f4ad3a9aff868ef0f34873f64", "url": "https://github.com/elastic/stack-docs/commit/83ea238682a35e9f4ad3a9aff868ef0f34873f64", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:17:31Z", "type": "commit"}, {"oid": "d6199ef6af26489befae3b9b1b9456c8fc02e16f", "url": "https://github.com/elastic/stack-docs/commit/d6199ef6af26489befae3b9b1b9456c8fc02e16f", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:17:52Z", "type": "commit"}, {"oid": "ec3551f7b2a21f62ed9867af6bfab693360ed6cb", "url": "https://github.com/elastic/stack-docs/commit/ec3551f7b2a21f62ed9867af6bfab693360ed6cb", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:18:14Z", "type": "commit"}, {"oid": "c46a2d0b359a2c561d67a9a189cebeb0f6557ddd", "url": "https://github.com/elastic/stack-docs/commit/c46a2d0b359a2c561d67a9a189cebeb0f6557ddd", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:23:16Z", "type": "commit"}, {"oid": "89604fb294ef5f0f0a236e12794e264e1825f8ea", "url": "https://github.com/elastic/stack-docs/commit/89604fb294ef5f0f0a236e12794e264e1825f8ea", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:36:09Z", "type": "commit"}, {"oid": "14627105d5d806c39df0823828a291434bf5c6d0", "url": "https://github.com/elastic/stack-docs/commit/14627105d5d806c39df0823828a291434bf5c6d0", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:39:33Z", "type": "commit"}, {"oid": "f719818fd7ebff9d758f052fe7d2c423722ba688", "url": "https://github.com/elastic/stack-docs/commit/f719818fd7ebff9d758f052fe7d2c423722ba688", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:39:51Z", "type": "commit"}, {"oid": "a1d689fff3ee5f0a02d0b15eb28a4b5432d1b6e6", "url": "https://github.com/elastic/stack-docs/commit/a1d689fff3ee5f0a02d0b15eb28a4b5432d1b6e6", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:40:10Z", "type": "commit"}, {"oid": "7aed44c194c680a5e28690cbdb6b5b84be331eff", "url": "https://github.com/elastic/stack-docs/commit/7aed44c194c680a5e28690cbdb6b5b84be331eff", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:40:31Z", "type": "commit"}, {"oid": "ced4a00dbca2b2e4c6fd2407f699c03db59101da", "url": "https://github.com/elastic/stack-docs/commit/ced4a00dbca2b2e4c6fd2407f699c03db59101da", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:40:50Z", "type": "commit"}, {"oid": "b82ebb888c154a5159a85a1f1047cdb1fcfeda4c", "url": "https://github.com/elastic/stack-docs/commit/b82ebb888c154a5159a85a1f1047cdb1fcfeda4c", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:41:12Z", "type": "commit"}, {"oid": "c56dc63954c8a959892503eb8cff8b781e84789f", "url": "https://github.com/elastic/stack-docs/commit/c56dc63954c8a959892503eb8cff8b781e84789f", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:41:33Z", "type": "commit"}, {"oid": "65978ff1a1199358aa51c8b4729687881f1542fe", "url": "https://github.com/elastic/stack-docs/commit/65978ff1a1199358aa51c8b4729687881f1542fe", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:41:54Z", "type": "commit"}, {"oid": "b0d468f42163342d678325c586832b6fab9f9138", "url": "https://github.com/elastic/stack-docs/commit/b0d468f42163342d678325c586832b6fab9f9138", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:44:33Z", "type": "commit"}, {"oid": "4d72a72ca684b602a3cf9595c36438e4c1f1ef88", "url": "https://github.com/elastic/stack-docs/commit/4d72a72ca684b602a3cf9595c36438e4c1f1ef88", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:44:55Z", "type": "commit"}, {"oid": "123da633df6a2cf90b7c864f193f1c50346b6fde", "url": "https://github.com/elastic/stack-docs/commit/123da633df6a2cf90b7c864f193f1c50346b6fde", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:45:16Z", "type": "commit"}, {"oid": "4d602f9ae5479dc23f0eab1375dccbd349ece646", "url": "https://github.com/elastic/stack-docs/commit/4d602f9ae5479dc23f0eab1375dccbd349ece646", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:45:34Z", "type": "commit"}, {"oid": "931cea71e25be76d30d074b75b2fa864139e2945", "url": "https://github.com/elastic/stack-docs/commit/931cea71e25be76d30d074b75b2fa864139e2945", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:45:56Z", "type": "commit"}, {"oid": "a2c9092cee1f4011e2d4ead0b474a70b8b603778", "url": "https://github.com/elastic/stack-docs/commit/a2c9092cee1f4011e2d4ead0b474a70b8b603778", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:46:17Z", "type": "commit"}, {"oid": "332fac3c9ebd306bcfe27ccdc91ed8d2d5d6f9ad", "url": "https://github.com/elastic/stack-docs/commit/332fac3c9ebd306bcfe27ccdc91ed8d2d5d6f9ad", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:46:41Z", "type": "commit"}, {"oid": "3e50b8acba8aa2a93b49cf8accfdfabf72f9dc5a", "url": "https://github.com/elastic/stack-docs/commit/3e50b8acba8aa2a93b49cf8accfdfabf72f9dc5a", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:46:58Z", "type": "commit"}, {"oid": "6db9aa7861dcedfeae225e412940ec8f075af5b5", "url": "https://github.com/elastic/stack-docs/commit/6db9aa7861dcedfeae225e412940ec8f075af5b5", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:47:25Z", "type": "commit"}, {"oid": "5ac9480930d46fd83e10a04cd2479b4da5e3268b", "url": "https://github.com/elastic/stack-docs/commit/5ac9480930d46fd83e10a04cd2479b4da5e3268b", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:47:56Z", "type": "commit"}, {"oid": "8eea266e2df32ab1ed4bc525eed7178816a4dc5a", "url": "https://github.com/elastic/stack-docs/commit/8eea266e2df32ab1ed4bc525eed7178816a4dc5a", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:48:20Z", "type": "commit"}, {"oid": "89bd65adb19c565a1a5f6fc0e106b887859e636d", "url": "https://github.com/elastic/stack-docs/commit/89bd65adb19c565a1a5f6fc0e106b887859e636d", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:48:40Z", "type": "commit"}, {"oid": "a45f133824a94ef0230853972c1e41cc1d2a3486", "url": "https://github.com/elastic/stack-docs/commit/a45f133824a94ef0230853972c1e41cc1d2a3486", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:48:59Z", "type": "commit"}, {"oid": "47b98dfeb50396a314044858dbd9de202c276844", "url": "https://github.com/elastic/stack-docs/commit/47b98dfeb50396a314044858dbd9de202c276844", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:49:21Z", "type": "commit"}, {"oid": "4f350c08d0c75ce6a2fcc5b0b1e57af0aa59aa7b", "url": "https://github.com/elastic/stack-docs/commit/4f350c08d0c75ce6a2fcc5b0b1e57af0aa59aa7b", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:49:42Z", "type": "commit"}, {"oid": "e3b5d6b46d1d9c177218aa6bf2f7283daaaddfac", "url": "https://github.com/elastic/stack-docs/commit/e3b5d6b46d1d9c177218aa6bf2f7283daaaddfac", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:50:02Z", "type": "commit"}, {"oid": "dfbce0aaa384b8f7505e2f4d1412225d0d8e0844", "url": "https://github.com/elastic/stack-docs/commit/dfbce0aaa384b8f7505e2f4d1412225d0d8e0844", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:50:50Z", "type": "commit"}, {"oid": "8247a6f21548e47156a2d9775580ab6fd3ab3f76", "url": "https://github.com/elastic/stack-docs/commit/8247a6f21548e47156a2d9775580ab6fd3ab3f76", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:52:12Z", "type": "commit"}, {"oid": "54c90ff769b140abe53fcfd231a1425823023822", "url": "https://github.com/elastic/stack-docs/commit/54c90ff769b140abe53fcfd231a1425823023822", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:55:18Z", "type": "commit"}, {"oid": "2053a1d75ed1d3edf96e3848c9d8fb08bff1bd59", "url": "https://github.com/elastic/stack-docs/commit/2053a1d75ed1d3edf96e3848c9d8fb08bff1bd59", "message": "Apply suggestions from code review\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:57:05Z", "type": "commit"}, {"oid": "b4fc1ece4d9afb5eb9ffa13a15bf32b6ddbfeaca", "url": "https://github.com/elastic/stack-docs/commit/b4fc1ece4d9afb5eb9ffa13a15bf32b6ddbfeaca", "message": "Apply suggestions from code review\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T08:59:18Z", "type": "commit"}, {"oid": "4c051e983018483e57f8f5626fd07701e1516d41", "url": "https://github.com/elastic/stack-docs/commit/4c051e983018483e57f8f5626fd07701e1516d41", "message": "Apply suggestions from code review\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T09:00:49Z", "type": "commit"}, {"oid": "62586e9a7335d22816422455e2c4e965c11694e7", "url": "https://github.com/elastic/stack-docs/commit/62586e9a7335d22816422455e2c4e965c11694e7", "message": "Apply suggestions from code review\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-14T09:05:58Z", "type": "commit"}, {"oid": "6f9b8e9e8803de5897ef9063825ba4bfa7ae2aa8", "url": "https://github.com/elastic/stack-docs/commit/6f9b8e9e8803de5897ef9063825ba4bfa7ae2aa8", "message": "[DOCS] Adds tagged regions.", "committedDate": "2020-02-14T09:27:23Z", "type": "commit"}, {"oid": "6a3cc9c6cde74717bb3c813c32d767c8c31af8a6", "url": "https://github.com/elastic/stack-docs/commit/6a3cc9c6cde74717bb3c813c32d767c8c31af8a6", "message": "[DOCS] Adds links to functions.", "committedDate": "2020-02-14T10:57:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5ODEyMQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r381698121", "bodyText": "These tags are appearing in the preview, so I think we have to comment them like this (see https://github.com/elastic/elasticsearch/blob/7.6/docs/reference/release-notes/highlights-7.6.0.asciidoc for working example):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            tag::apache-jobs[]\n          \n          \n            \n            // tag::apache-jobs[]", "author": "lcawl", "createdAt": "2020-02-20T03:02:40Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+tag::apache-jobs[]", "originalCommit": "6a3cc9c6cde74717bb3c813c32d767c8c31af8a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5ODI0MA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r381698240", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            end::apache-jobs[]\n          \n          \n            \n            // end::apache-jobs[]", "author": "lcawl", "createdAt": "2020-02-20T03:02:55Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+end::apache-jobs[]", "originalCommit": "6a3cc9c6cde74717bb3c813c32d767c8c31af8a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5ODM3Ng==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r381698376", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            tag::apm-jobs[]\n          \n          \n            \n            // tag::apm-jobs[]", "author": "lcawl", "createdAt": "2020-02-20T03:03:12Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+end::apache-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+tag::apm-jobs[]", "originalCommit": "6a3cc9c6cde74717bb3c813c32d767c8c31af8a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5ODUyNg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r381698526", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            end::apm-jobs[]\n          \n          \n            \n            // end::apm-jobs[]", "author": "lcawl", "createdAt": "2020-02-20T03:03:28Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+end::apache-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+tag::apm-jobs[]\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate \n+  (using the <<ml-nonzero-count,`high_non_zero_count` function>>).\n+  \n+This job can help detect browser compatibility issues.\n+\n+////\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+////\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate \n+  (using the <<ml-nonzero-count,`high_non_zero_count` function>>).\n+\n+This job is useful in identifying bots.\n+\n+////\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+////\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+end::apm-jobs[]", "originalCommit": "6a3cc9c6cde74717bb3c813c32d767c8c31af8a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "44cdddc6ee721c8f9c116bb78a57c4502d90ed83", "url": "https://github.com/elastic/stack-docs/commit/44cdddc6ee721c8f9c116bb78a57c4502d90ed83", "message": "Apply suggestions from code review\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-20T08:08:22Z", "type": "commit"}, {"oid": "9b28cc2aa6b953962336862d3310e87b65b11278", "url": "https://github.com/elastic/stack-docs/commit/9b28cc2aa6b953962336862d3310e87b65b11278", "message": "[DOCS] Comments out tags.", "committedDate": "2020-02-20T08:13:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NjI3NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382156275", "bodyText": "This job name isn't formatted properly in the preview. I think the solution is to have a preceding blank line:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            log_entry_categories_count::\n          \n          \n            \n            \n          \n          \n            \n            log_entry_categories_count::", "author": "lcawl", "createdAt": "2020-02-20T17:44:03Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+// tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+// end::apache-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+// tag::apm-jobs[]\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate \n+  (using the <<ml-nonzero-count,`high_non_zero_count` function>>).\n+  \n+This job can help detect browser compatibility issues.\n+\n+////\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+////\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate \n+  (using the <<ml-nonzero-count,`high_non_zero_count` function>>).\n+\n+This job is useful in identifying bots.\n+\n+////\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+////\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+// end::apm-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+// tag::auditbeat-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers \n+  (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers (using the \n+  <<ml-rare,`rare` function>>).\n+\n+////\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+////\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates (using the \n+  <<ml-nonzero-count,`high_non_zero_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+////\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts (using the \n+  <<ml-rare,`rare` function>>).\n+\n+////\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+////\n+// end::auditbeat-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+// tag::logs-jobs[]\n+These {anomaly-jobs} appear by default in the {kibana-ref}/xpack-logs.html[Logs app] in {kib}. \n+log_entry_categories_count::", "originalCommit": "9b28cc2aa6b953962336862d3310e87b65b11278", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3ODAwMg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382178002", "bodyText": "@blaklaybul is this enough of an intro to this section of APM jobs?:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            These {anomaly-job} wizards appear in {kib} if you have data from APM Agents or an APM Server stored in {es}.", "author": "lcawl", "createdAt": "2020-02-20T18:26:24Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+// tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+// end::apache-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+", "originalCommit": "9b28cc2aa6b953962336862d3310e87b65b11278", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3OTEyOQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382179129", "bodyText": "@blaklaybul I've heard rum-js replaces js-base. Do our jobs pick those up too?:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * For APM data where `agent.name` is `js-base` or `nodejs`.\n          \n          \n            \n            * For data from {apm-rum-agents} or {apm-node-agents} (where `agent.name` is `js-base` or `nodejs`).", "author": "lcawl", "createdAt": "2020-02-20T18:28:34Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+// tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+// end::apache-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+// tag::apm-jobs[]\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.", "originalCommit": "9b28cc2aa6b953962336862d3310e87b65b11278", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMTA0Mw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382201043", "bodyText": "I was wrong. It looks like agent.name hasn't been changed from js-base to rum-js yet, but it will be soon. Here's the open PR elastic/apm-agent-rum-js#548.", "author": "bmorelli25", "createdAt": "2020-02-20T19:10:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3OTEyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwMzAwMg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382203002", "bodyText": "The PR I linked above is the last change required to rename the Agent (also see elastic/apm-agent-rum-js#108). Not sure if it's too late, but it might make more sense to name this abnormal_span_durations_rumjs instead of abnormal_span_durations_jsbase. A similar rename for the other anomaly detection jobs to *_rumjs should also be considered. cc @jahtalab / @vigneshshanmugam", "author": "bmorelli25", "createdAt": "2020-02-20T19:14:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3OTEyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIyNDMyNg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382224326", "bodyText": "Per a quick chat with @blaklaybul, we can/should update the name when APM makes the change", "author": "lcawl", "createdAt": "2020-02-20T19:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3OTEyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4MjY5Ng==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r382182696", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * For APM data where `agent.name` is `nodejs`.\n          \n          \n            \n            * For data from {apm-node-agents} (where `agent.name` is `nodejs`).", "author": "lcawl", "createdAt": "2020-02-20T18:35:24Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,931 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+// tag::apache-jobs[]\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+  rate (using the <<ml-count,`low_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+////\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate (using the <<ml-count,`high_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+////\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log (using the <<ml-distinct-count,`high_distinct_count` function>>).\n+\n+////\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+////\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates (using the <<ml-count,`count` function>>).\n+\n+////\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+////\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates (using the <<ml-nonzero-count,`non_zero_count` function>>).\n+\n+////\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+////\n+// end::apache-jobs[]\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+// tag::apm-jobs[]\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process (using the \n+  <<ml-metric-mean,`high_mean` function>>).\n+\n+////\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+////\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.", "originalCommit": "9b28cc2aa6b953962336862d3310e87b65b11278", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6832390d9b203e9c5f131d31a7cf758f6b79a92a", "url": "https://github.com/elastic/stack-docs/commit/6832390d9b203e9c5f131d31a7cf758f6b79a92a", "message": "[DOCS] Adds a page that lists the modules with OOTB ML jobs.", "committedDate": "2020-02-06T13:38:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4NjMzOQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r375986339", "bodyText": "Should we also have a quick sentence/link that explains how you get these prebuilt jobs? E.g. Per http://stack-docs_843.docs-preview.app.elstc.co/guide/en/machine-learning/master/create-jobs.html \"Kibana recognizes certain types of data in Elasticsearch and provides specialized anomaly detection job wizards for that context\".", "author": "lcawl", "createdAt": "2020-02-06T17:47:28Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,757 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Modules with prebuilt {anomaly-detect} jobs\n+\n+This page lists the available modules with prebuilt {anomaly-detect} jobs. Every \n+module item in the list contains a name, a short description, information about ", "originalCommit": "6832390d9b203e9c5f131d31a7cf758f6b79a92a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4NzE0NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r375987145", "bodyText": "It's never been entirely clear to me what these \"modules\" were, so unless we can define it I think we should remove it:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            == Modules with prebuilt {anomaly-detect} jobs\n          \n          \n            \n            == Prebuilt {anomaly-detect} jobs", "author": "lcawl", "createdAt": "2020-02-06T17:49:06Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,757 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Modules with prebuilt {anomaly-detect} jobs", "originalCommit": "6832390d9b203e9c5f131d31a7cf758f6b79a92a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4Nzk4NA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r375987984", "bodyText": "Likewise I'm not sure what \"modules\" adds here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This page lists the available modules with prebuilt {anomaly-detect} jobs. Every \n          \n          \n            \n            This page lists the available prebuilt {anomaly-jobs}. Every", "author": "lcawl", "createdAt": "2020-02-06T17:50:40Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,757 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Modules with prebuilt {anomaly-detect} jobs\n+\n+This page lists the available modules with prebuilt {anomaly-detect} jobs. Every ", "originalCommit": "6832390d9b203e9c5f131d31a7cf758f6b79a92a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzAyOQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r377413029", "bodyText": "While playing with an APM sample data set, this was the only job that was suggested for my data.  If possible, it would be nice to clarify which type of data / products / scenarios are required to have each of these wizards to appear.", "author": "lcawl", "createdAt": "2020-02-11T01:37:22Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,757 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Modules with prebuilt {anomaly-detect} jobs\n+\n+This page lists the available modules with prebuilt {anomaly-detect} jobs. Every \n+module item in the list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+low_request_rate_ecs::\n+Detects low request rates in HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+--\n+\n+source_ip_request_rate_ecs::\n+Detects source IPs with unusually high request rates in the HTTP access log.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+Influencers:\n+\n+* `source.address`\n+--\n+\n+source_ip_url_count_ecs::\n+Detects source IPs with unusually high distinct count of URLs in the HTTP access \n+log.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+Influencers:\n+\n+* `source.address`\n+--\n+\n+status_code_rate_ecs::\n+Detects unusual status code rates in the HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+--\n+\n+visitor_rate_ecs::\n+Detects unusual visitor rates in the HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+--\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+Searches for spans that are taking longer than usual to process.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+--\n+\n+abnormal_trace_durations_nodejs::\n+Identifies trace transactions that are processing more slowly than usual.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+--\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+Detects user agents that are encountering errors at an above normal rate. This \n+can help detect browser compatibility issues.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+--\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+Identifies periods during which the application is processing fewer requests \n+than normal.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+--\n+\n+high_count_by_user_agent_jsbase::\n+Detects user agents that are making requests at a suspiciously high rate. This \n+is useful in identifying bots.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+--\n+\n+high_mean_response_time::", "originalCommit": "6832390d9b203e9c5f131d31a7cf758f6b79a92a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzc4MA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r377413780", "bodyText": "Could we add something like this (moved out of https://www.elastic.co/guide/en/machine-learning/master/create-jobs.html)?:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            These {anomaly-job} wizards appear in {kib} if you use {filebeat-ref}/index.html[{filebeat}] to ship access logs from your https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields and datatypes from the Elastic Common Schema (ECS).", "author": "lcawl", "createdAt": "2020-02-11T01:41:00Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,757 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Modules with prebuilt {anomaly-detect} jobs\n+\n+This page lists the available modules with prebuilt {anomaly-detect} jobs. Every \n+module item in the list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+", "originalCommit": "6832390d9b203e9c5f131d31a7cf758f6b79a92a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzk2Mg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r377413962", "bodyText": "Could we add something like this here too (moved out of https://www.elastic.co/guide/en/machine-learning/master/create-jobs.html)?:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n             These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access logs from your \n          \n          \n            \n            http://nginx.org/[Nginx] HTTP servers to {es} and store it using fields and datatypes from the Elastic Common Schema (ECS).", "author": "lcawl", "createdAt": "2020-02-11T01:41:58Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,757 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Modules with prebuilt {anomaly-detect} jobs\n+\n+This page lists the available modules with prebuilt {anomaly-detect} jobs. Every \n+module item in the list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+low_request_rate_ecs::\n+Detects low request rates in HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+--\n+\n+source_ip_request_rate_ecs::\n+Detects source IPs with unusually high request rates in the HTTP access log.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+Influencers:\n+\n+* `source.address`\n+--\n+\n+source_ip_url_count_ecs::\n+Detects source IPs with unusually high distinct count of URLs in the HTTP access \n+log.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+Influencers:\n+\n+* `source.address`\n+--\n+\n+status_code_rate_ecs::\n+Detects unusual status code rates in the HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+--\n+\n+visitor_rate_ecs::\n+Detects unusual visitor rates in the HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+--\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+Searches for spans that are taking longer than usual to process.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+--\n+\n+abnormal_trace_durations_nodejs::\n+Identifies trace transactions that are processing more slowly than usual.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+--\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+Detects user agents that are encountering errors at an above normal rate. This \n+can help detect browser compatibility issues.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+--\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+Identifies periods during which the application is processing fewer requests \n+than normal.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+--\n+\n+high_count_by_user_agent_jsbase::\n+Detects user agents that are making requests at a suspiciously high rate. This \n+is useful in identifying bots.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+--\n+\n+high_mean_response_time::\n+Detects anomalies in high mean of transaction duration.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+--\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+docker_high_count_process_events_ecs::\n+Detects unusual increases in process execution rates in Docker containers.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+--\n+\n+docker_rare_process_activity_ecs::\n+Detects rare process executions in Docker containers.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+--\n+\n+hosts_high_count_process_events_ecs::\n+Detects unusual increases in process execution rates.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+--\n+\n+hosts_rare_process_activity_ecs::\n+Detects rare process executions on hosts.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+--\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+Detects anomalies in count of log entries by category.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+--\n+\n+log_entry_rate::\n+Detects anomalies in the log entry ingestion rate.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+Influencers:\n+\n+* `event.dataset`\n+--\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+high_mean_cpu_iowait_ecs::\n+Detects unusual increases in cpu time spent in iowait.\n++\n+--\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+Influencers:\n+\n+* `host.name`\n+--\n+\n+max_disk_utilization_ecs::\n+Detects unusual increases in disk utilization.\n++\n+--\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+Influencers:\n+\n+* `host.name`\n+--\n+\n+metricbeat_outages_ecs::\n+Detects unusual decreases in Metricbeat documents.\n++\n+--\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+Influencers:\n+\n+* `event.dataset`\n+--\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+", "originalCommit": "6832390d9b203e9c5f131d31a7cf758f6b79a92a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNDQ0MA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r377414440", "bodyText": "Could we add something like this (moved out of https://www.elastic.co/guide/en/machine-learning/master/create-jobs.html)?:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            > These {anomaly-job} wizards appear in {kib} if you use {auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your systems.", "author": "lcawl", "createdAt": "2020-02-11T01:44:16Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,757 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Modules with prebuilt {anomaly-detect} jobs\n+\n+This page lists the available modules with prebuilt {anomaly-detect} jobs. Every \n+module item in the list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+low_request_rate_ecs::\n+Detects low request rates in HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+--\n+\n+source_ip_request_rate_ecs::\n+Detects source IPs with unusually high request rates in the HTTP access log.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+Influencers:\n+\n+* `source.address`\n+--\n+\n+source_ip_url_count_ecs::\n+Detects source IPs with unusually high distinct count of URLs in the HTTP access \n+log.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+Influencers:\n+\n+* `source.address`\n+--\n+\n+status_code_rate_ecs::\n+Detects unusual status code rates in the HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+--\n+\n+visitor_rate_ecs::\n+Detects unusual visitor rates in the HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+--\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+Searches for spans that are taking longer than usual to process.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+--\n+\n+abnormal_trace_durations_nodejs::\n+Identifies trace transactions that are processing more slowly than usual.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+--\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+Detects user agents that are encountering errors at an above normal rate. This \n+can help detect browser compatibility issues.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+--\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+Identifies periods during which the application is processing fewer requests \n+than normal.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+--\n+\n+high_count_by_user_agent_jsbase::\n+Detects user agents that are making requests at a suspiciously high rate. This \n+is useful in identifying bots.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+--\n+\n+high_mean_response_time::\n+Detects anomalies in high mean of transaction duration.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+--\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+", "originalCommit": "6832390d9b203e9c5f131d31a7cf758f6b79a92a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNTQyMg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r377415422", "bodyText": "Per https://www.elastic.co/guide/en/machine-learning/master/create-jobs.html:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            These {anomaly-job} wizards appear in {kib} if you use the {metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to monitor your servers.", "author": "lcawl", "createdAt": "2020-02-11T01:49:35Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,757 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Modules with prebuilt {anomaly-detect} jobs\n+\n+This page lists the available modules with prebuilt {anomaly-detect} jobs. Every \n+module item in the list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+low_request_rate_ecs::\n+Detects low request rates in HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+--\n+\n+source_ip_request_rate_ecs::\n+Detects source IPs with unusually high request rates in the HTTP access log.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+Influencers:\n+\n+* `source.address`\n+--\n+\n+source_ip_url_count_ecs::\n+Detects source IPs with unusually high distinct count of URLs in the HTTP access \n+log.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+Influencers:\n+\n+* `source.address`\n+--\n+\n+status_code_rate_ecs::\n+Detects unusual status code rates in the HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+--\n+\n+visitor_rate_ecs::\n+Detects unusual visitor rates in the HTTP access log.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+--\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+Searches for spans that are taking longer than usual to process.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+--\n+\n+abnormal_trace_durations_nodejs::\n+Identifies trace transactions that are processing more slowly than usual.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+--\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+Detects user agents that are encountering errors at an above normal rate. This \n+can help detect browser compatibility issues.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+--\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+Identifies periods during which the application is processing fewer requests \n+than normal.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+--\n+\n+high_count_by_user_agent_jsbase::\n+Detects user agents that are making requests at a suspiciously high rate. This \n+is useful in identifying bots.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+--\n+\n+high_mean_response_time::\n+Detects anomalies in high mean of transaction duration.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+--\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+docker_high_count_process_events_ecs::\n+Detects unusual increases in process execution rates in Docker containers.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+--\n+\n+docker_rare_process_activity_ecs::\n+Detects rare process executions in Docker containers.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+--\n+\n+hosts_high_count_process_events_ecs::\n+Detects unusual increases in process execution rates.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+--\n+\n+hosts_rare_process_activity_ecs::\n+Detects rare process executions on hosts.\n++\n+--\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+--\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+Detects anomalies in count of log entries by category.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+--\n+\n+log_entry_rate::\n+Detects anomalies in the log entry ingestion rate.\n++\n+--\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+Influencers:\n+\n+* `event.dataset`\n+--\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+", "originalCommit": "6832390d9b203e9c5f131d31a7cf758f6b79a92a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f453d6bbdbc91926b45844f6dc95134b3155f16e", "url": "https://github.com/elastic/stack-docs/commit/f453d6bbdbc91926b45844f6dc95134b3155f16e", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-12T10:08:29Z", "type": "commit"}, {"oid": "308b1f3ef926694e51020ee77ff3efe69928b66b", "url": "https://github.com/elastic/stack-docs/commit/308b1f3ef926694e51020ee77ff3efe69928b66b", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-12T10:08:53Z", "type": "commit"}, {"oid": "3d58e0addc61e741cc9f7a68a867a5301058f8cb", "url": "https://github.com/elastic/stack-docs/commit/3d58e0addc61e741cc9f7a68a867a5301058f8cb", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-12T10:10:23Z", "type": "commit"}, {"oid": "521355525b6b0c2eec7469f9e82a4e773861315a", "url": "https://github.com/elastic/stack-docs/commit/521355525b6b0c2eec7469f9e82a4e773861315a", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-12T10:10:37Z", "type": "commit"}, {"oid": "54c298b2b206749ce73fa50dc7d4c938060c3c88", "url": "https://github.com/elastic/stack-docs/commit/54c298b2b206749ce73fa50dc7d4c938060c3c88", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-12T10:10:52Z", "type": "commit"}, {"oid": "ea41d79d42e2f511162790f349eac2fc6faae856", "url": "https://github.com/elastic/stack-docs/commit/ea41d79d42e2f511162790f349eac2fc6faae856", "message": "Update docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-02-12T10:11:04Z", "type": "commit"}, {"oid": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "url": "https://github.com/elastic/stack-docs/commit/2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "message": "[DOCS] Restructures the descriptions of the prebuilt ML jobs.", "committedDate": "2020-02-13T16:48:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NjE5NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379076195", "bodyText": "I think it might be worthwhile to add tagged sections here so that the content can be potentially re-used in other books. For example:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            tag::apache-jobs[]", "author": "lcawl", "createdAt": "2020-02-13T19:36:59Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NjY2Mw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379076663", "bodyText": "This sentence seems to duplicate the first item in the list, so I'd recommend omitting it:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This job can be created if web access log data exists matching the defined", "author": "lcawl", "createdAt": "2020-02-13T19:37:51Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined ", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NzQ0OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379077448", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Detects unusually low counts of HTTP requests compared to the previous event \n          \n          \n            \n            * Detects unusually low counts of HTTP requests compared to the previous event (using the <<ml-count,`low_count` function>>)", "author": "lcawl", "createdAt": "2020-02-13T19:39:22Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event ", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3Nzg4Nw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379077887", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              compared to the previous rate.\n          \n          \n            \n              compared to the previous rate (using the <<ml-count,`high_count` function>>).", "author": "lcawl", "createdAt": "2020-02-13T19:40:18Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODMzOA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379078338", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:41:12Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODQ4NA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379078484", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:41:29Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODU5NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379078595", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:41:39Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODY2NA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379078664", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:41:48Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODc0MA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379078740", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:41:57Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODg0MA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379078840", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:42:09Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODkxOQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379078919", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:42:19Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODk5OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379078998", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:42:28Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTA3Ng==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079076", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:42:37Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTE0Mw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079143", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:42:46Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTIyMg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079222", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:42:56Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTMxNA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079314", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:43:05Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTM4NA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079384", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:43:14Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTQ5Mg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079492", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:43:25Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTU5Mw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079593", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:43:37Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTY5NA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079694", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:43:48Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTgxOA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079818", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:44:02Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTg4Ng==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079886", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:44:09Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTk1NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379079955", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:44:18Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDA3MQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080071", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:44:33Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDE0NA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080144", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:44:41Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDIxMA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080210", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:44:51Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDI4Nw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080287", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:45:02Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDM1Nw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080357", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:45:11Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDQzMA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080430", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:45:19Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDUzNg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080536", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:45:31Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDYwMw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080603", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:45:39Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDY5NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080695", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:45:48Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDc3MA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080770", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:45:57Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDg1NA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080854", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:46:05Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MDk3OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379080978", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:46:21Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTA2MQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081061", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:46:31Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTEzOA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081138", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:46:39Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTIwMg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081202", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:46:47Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTUxMg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081512", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:47:27Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTU2Nw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081567", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:47:34Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTYyNA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081624", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:47:41Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTcxNw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081717", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:47:53Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTgwMQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081801", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:48:03Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTkwNw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081907", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:48:16Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTk4Ng==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379081986", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:48:26Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjA4MA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082080", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:48:36Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjE2Nw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082167", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:48:45Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjI0Nw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082247", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:48:55Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjMxNQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082315", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:49:04Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjM2OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082368", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:49:12Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjQ1Mw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082453", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:49:21Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjU0MQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082541", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:49:31Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjYyMA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082620", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:49:41Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjY5Mw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082693", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:49:50Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4Mjg1NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082855", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:50:07Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjkzNg==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379082936", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:50:16Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzAxMA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083010", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:50:26Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzA2OQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083069", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:50:34Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzIxOQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083219", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:50:49Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzI5NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083295", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:50:59Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzM4MA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083380", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:51:09Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzQzNA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083434", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:51:18Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzUxNw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083517", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:51:27Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzYwOQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083609", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:51:36Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzY4OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083688", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:51:45Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4Mzc2Ng==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083766", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:51:54Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4Mzg1NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083855", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:52:06Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MzkzMQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379083931", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:52:15Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDAwNQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084005", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:52:24Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDA2OQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084069", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:52:33Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDE2Nw==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084167", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:52:44Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDIzMA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084230", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:52:53Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDMwOA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084308", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:53:03Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDM4MQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084381", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:53:12Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDQ4Ng==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084486", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:53:23Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDU1OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084558", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:53:31Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDYyOA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084628", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:53:40Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDY5Ng==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084696", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:53:49Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDc3NQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084775", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:53:58Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDg0OA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084848", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:54:07Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDkzNA==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379084934", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:54:16Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTAxMQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085011", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:54:25Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTA5MQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085091", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:54:36Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NTE3MQ==", "url": "https://github.com/elastic/stack-docs/pull/843#discussion_r379085171", "bodyText": "I recommend omitting these low-level details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            ////", "author": "lcawl", "createdAt": "2020-02-13T19:54:45Z", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -0,0 +1,872 @@\n+[role=\"xpack\"]\n+[[ootb-ml-jobs]]\n+== Prebuilt {anomaly-jobs}\n+\n+{anomaly-jobs-cap} contain the configuration information and metadata necessary \n+to perform an analytics task. {kib} can recognize certain types of data and \n+provide specialized wizards for that context. This page lists the available \n+prebuilt {anomaly-jobs} that you can use via {kib}. Every module item in the \n+list contains a name, a short description, information about \n+the {ml-docs}/ml-buckets.html#ml-buckets[`bucket_span`] and the \n+{ml-docs}/ml-functions.html[analysis function] as well as the influencers \u2013 the \n+entities that have contributed to, or are to blame for, the anomalies \u2013 of the \n+{anomaly-detect} job.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apache]]\n+=== Apache\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{filebeat-ref}/index.html[{filebeat}] to ship access logs from your \n+https://httpd.apache.org/[Apache] HTTP servers to {es} and store it using fields \n+and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `apache.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-apm]]\n+=== APM\n+\n+abnormal_span_durations_jsbase::\n+abnormal_span_durations_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the duration of spans (`partition_field_name` is `span.type`).\n+* Detects for spans that are taking longer than usual to process.\n+\n+Influencers:\n+\n+* `service.name` \n+* `span.name`\n+* `span.type` \n+* `trace.id`\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+abnormal_trace_durations_nodejs::\n+\n+* For APM data where `agent.name` is `nodejs`.\n+* Models the duration of trace transactions.\n+* Detects trace transactions that are processing slower than usual.\n+\n+Influencers:\n+\n+* `service.name` \n+* `trace.id`\n+* `transaction.name` \n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+anomalous_error_rate_for_user_agents_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the error rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are encountering errors at an above normal rate.\n+  \n+This job can help detect browser compatibility issues.\n+\n+Influencers:\n+\n+* `user_agent.name`\n+* `error.exception.message.keyword`\n+* `error.page.url`\n+* `service.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+decreased_throughput_jsbase::\n+decreased_throughput_nodejs::\n+\n+* For APM data where `agent.name` is `js-base` or `nodejs`.\n+* Models the transaction rate of the application.\n+* Detects periods during which the application is processing fewer requests \n+than normal.\n+\n+Influencers:\n+\n+* `service.name`\n+* `transaction.name`\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+high_count_by_user_agent_jsbase::\n+\n+* For APM data where `agent.name` is `js-base`.\n+* Models the request rate of user agents (`partition_field_name` is \n+  `user_agent.name`).\n+* Detects user agents that are making requests at a suspiciously high rate.\n+\n+This job is useful in identifying bots.\n+\n+Influencers:\n+\n+* `service.name`\n+* `user_agent.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+high_mean_response_time::\n+\n+* For transaction data where `processor.event` is `transaction` and \n+`transaction.type` is `request`.\n+* Models response time duration of transactions.\n+* Detects anomalies in high mean of transaction duration.\n+\n+Bucket span: 15m.\n+\n+Function: `high_mean`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-auditbeat]]\n+=== Auditbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use \n+{auditbeat-ref}/index.html[{auditbeat}] to audit process activity on your \n+systems.\n+\n+docker_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models process execution rates (`partition_field_name` is `container.name`).\n+* Detects unusual increases in process execution rates in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+docker_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd` and `container.runtime` is \n+`docker`.\n+* Models occurrences of process execution (`partition_field_name` is \n+  `container.name`).\n+* Detects rare process executions in Docker containers.\n+\n+Influencers:\n+\n+* `container.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+hosts_high_count_process_events_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects unusual increases in process execution rates.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+hosts_rare_process_activity_ecs::\n+\n+* For Auditbeat data where `event.module` is `auditd`.\n+* Models process execution rates (`partition_field_name` is `host.name`).\n+* Detects rare process executions on hosts.\n+\n+Influencers:\n+\n+* `host.name`\n+* `process.executable`\n+\n+Bucket span: 1h.\n+\n+Function: `rare`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-logs-ui]]\n+=== Logs UI\n+\n+log_entry_categories_count::\n+\n+* For log entry categories via the Logs UI.\n+* Models the occurrences of log events (`partition_field_name` is \n+  `event.dataset`).\n+* Detects anomalies in count of log entries by category.\n+\n+Influencers:\n+\n+* `event.dataset`\n+* `mlcategory`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+log_entry_rate::\n+\n+* For log entries via the Logs UI.\n+* Models ingestion rates (`partition_field_name` is `event.dataset`). \n+* Detects anomalies in the log entry ingestion rate.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-metricbeat]]\n+=== Metricbeat\n+\n+These {anomaly-job} wizards appear in {kib} if you use the \n+{metricbeat-ref}/metricbeat-module-system.html[{metricbeat} system module] to \n+monitor your servers.\n+\n+high_mean_cpu_iowait_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models CPU time spent in iowait (`partition_field_name` is `host.name`).\n+* Detects unusual increases in cpu time spent in iowait.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `high_mean`.\n+\n+\n+max_disk_utilization_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models disc utilization (`partition_field_name` is `host.name`).\n+* Detects unusual increases in disk utilization.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 10m.\n+\n+Function: `max`.\n+\n+\n+metricbeat_outages_ecs::\n+\n+* For {metricbeat} data where `event.dataset` is `system.cpu` and \n+  `system.filesystem`.\n+* Models counts of {metricbeat} documents \n+  (`partition_field_name` is `event.dataset`).\n+* Detects unusual decreases in {metricbeat} documents.\n+\n+Influencers:\n+\n+* `event.dataset`\n+\n+Bucket span: 10m.\n+\n+Function: `low_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-nginx]]\n+=== Nginx\n+\n+These {anomaly-job} wizards appear in {kib} if you use {filebeat} to ship access \n+logs from your http://nginx.org/[Nginx] HTTP servers to {es} and store it using \n+fields and datatypes from the Elastic Common Schema (ECS).\n+\n+low_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of http requests. \n+* Detects unusually low counts of HTTP requests compared to the previous event \n+rate.\n+\n+This job can be created if web access log data exists matching the defined \n+filter.\n+\n+Bucket span: 15m.\n+\n+Function: `low_count`.\n+\n+\n+source_ip_request_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high request rates in the HTTP access log \n+  compared to the previous rate. \n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_count`.\n+\n+\n+source_ip_url_count_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the event rate of HTTP requests by source IP.\n+* Detects source IPs with unusually high distinct count of URLs in the HTTP \n+  access log.\n+\n+Influencers:\n+\n+* `source.address`\n+\n+Bucket span: 1h.\n+\n+Function: `high_distinct_count`.\n+\n+\n+status_code_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models the occurrences of HTTP response status codes (`partition_field_name` \n+  is `http.response.status_code`).\n+* Detects unusual status code rates in the HTTP access log compared to previous \n+  rates.\n+\n+Influencers:\n+\n+* `http.response.status_code` \n+* `source.address`\n+\n+Bucket span: 15m.\n+\n+Function: `count`.\n+\n+\n+visitor_rate_ecs::\n+\n+* For HTTP web access logs where `event.dataset` is `nginx.access`.\n+* Models visitor rates.\n+* Detects unusual visitor rates in the HTTP access log ompared to previous \n+  rates.\n+\n+Bucket span: 15m.\n+\n+Function: `non_zero_count`.\n+\n+\n+[float]\n+[[ootb-ml-jobs-siem]]\n+=== SIEM\n+\n+linux_anomalous_network_activity_ecs::\n+windows_anomalous_network_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes that cause network activity.\n+* Detects network activity caused by processes that occur rarely compared to \n+  other processes.\n+\n+Looks for unusual processes using the network which could indicate\n+command-and-control, lateral movement, persistence, or data exfiltration\n+activity.\n+\n+This job can be created if auditbeat or winlogbeat data exists, matching the \n+defined filter, and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_port_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models destination port activity.\n+* Detects destination port activity that occurs rarely compared to other port \n+  activities.\n+\n+Looks for unusual destination port activity that could indicate \n+command-and-control, persistence mechanism, or data exfiltration activity.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_service::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models listening port activity.\n+* Detects unusual listening port activity that occurs rarely compared to \n+  other port activities.\n+\n+Looks for unusual listening ports that could indicate execution of unauthorized \n+services, backdoors, or persistence mechanisms.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_network_url_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models the occurrences of URL requests.\n+* Detects unusual web URL request that is rare compared to other web URL \n+  requests.\n+\n+Looks for an unusual web URL request from a Linux instance. Curl and wget web \n+request activity is very common but unusual web requests from a Linux server can \n+sometimes be malware delivery or execution.\n+\n+This job can be created if auditbeat data exists, matching the defined filter, \n+and is available via the SIEM application.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `destination.port` \n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_process_all_hosts_ecs::\n+windows_anomalous_process_all_hosts_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models the occurrences of processes on all hosts.\n+* Detects processes that occur rarely compared to other processes to all \n+  Linux/Windows hosts.\n+\n+Looks for processes that are unusual to all Linux/Windows hosts. Such unusual \n+processes may indicate unauthorized services, malware, or persistence \n+mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+linux_anomalous_user_name_ecs::\n+windows_anomalous_user_name_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models user activity.\n+* Detects users that are rarely or unusually active compared to other users.\n+\n+Rare and unusual users that are not normally active may indicate unauthorized \n+changes or activity by an unauthorized user which may be credentialed access or \n+lateral movement.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_dns_tunneling::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrances of DNS activity.\n+* Detects unusual DNS activity.\n+\n+Looks for unusual DNS activity that could indicate command-and-control or data \n+exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `dns.question.etld_plus_one`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_info_content`.\n+\n+\n+packetbeat_rare_dns_question::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n+* Detects DNS activity that is rare compared to other DNS activities.\n+\n+Looks for unusual DNS activity that could indicate command-and-control activity.\n+\n+Influencers:\n+\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_server_domain::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models HTTP or TLS domain activity.\n+* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+  activities.\n+\n+Looks for unusual HTTP or TLS destination domain activity that could indicate \n+execution, persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+* `source.ip`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_urls::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of web browsing URL activity.\n+* Detects URL activity that rarely occurs compared to other URL activities.\n+\n+Looks for unusual web browsing URL activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+packetbeat_rare_user_agent::\n+\n+* For network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of HTTP user agent activity.\n+* Detects HTTP user agent activity that occurs rarely compared to other HTTP \n+  user agent activities.\n+\n+Looks for unusual HTTP user agent activity that could indicate execution, \n+persistence, command-and-control or data exfiltration activity.\n+\n+Influencers:\n+\n+* `destination.ip`\n+* `host.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+rare_process_by_host_linux_ecs::\n+rare_process_by_host_windows_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat` or `winlogbeat`.\n+* Models occurrences of process activities on the host. \n+* Detect unusually rare processes compared to other processes on Linux/Windows.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+suspicious_login_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts.\n+\n+Influencers:\n+\n+* `host.name` \n+* `source.ip`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `high_non_zero_count`.\n+\n+\n+windows_anomalous_path_activity_ecs::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of processes in paths.\n+* Detects activity in unusual paths.\n+\n+Activities in unusual paths may indicate execution of malware or persistence \n+mechanisms. Windows payloads often execute from user profile paths.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+\n+\n+windows_anomalous_process_creation::\n+\n+* For network activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of process creation activities (`partition_field_name` is \n+  `process.parent.name`).\n+* Detects process relationships that are rare compared to other process \n+  relationships.\n+\n+Looks for unusual process relationships which may indicate execution of malware \n+or persistence mechanisms.\n+\n+Influencers:\n+\n+* `host.name` \n+* `process.name`\n+* `user.name`\n+\n+Bucket span: 15m.\n+\n+Function: `rare`.\n+", "originalCommit": "2e7c396db96cd4edcf8aa5a23743b3beeac663ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}